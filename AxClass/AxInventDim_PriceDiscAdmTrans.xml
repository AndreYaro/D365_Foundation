<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxInventDim_PriceDiscAdmTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AxInventDim_PriceDiscAdmTrans</c> class wraps the <c>InventDim</c> table. This class fetches
/// the inventory dimensions, applies the correct update sequence, and provides default values.
/// </summary>
/// <remarks>
/// This class extends the <c>AxInventDim</c> class.
/// </remarks>
class AxInventDim_PriceDiscAdmTrans extends AxInventDim
{
    AxPriceDiscAdmTrans axPriceDiscAdmTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves an <c>AxPriceDiscAdmTrans</c> class object.
    /// </summary>
    /// <param name="_axPriceDiscAdmTrans">
    ///    An instance of the <c>AxPriceDiscAdmTrans</c> class; optional.
    /// </param>
    /// <returns>
    ///    An object of the <c>AxPriceDiscAdmTrans</c> class.
    /// </returns>
    public AxPriceDiscAdmTrans axPriceDiscAdmTrans(AxPriceDiscAdmTrans _axPriceDiscAdmTrans = axPriceDiscAdmTrans)
    {
        axPriceDiscAdmTrans = _axPriceDiscAdmTrans;
        return axPriceDiscAdmTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether inactive inventory dimensions are specified within incoming XML data.
    /// </summary>
    /// <remarks>
    ///    This method also checks whether incoming values of the <c>inventdim</c> fields are in the master.
    ///    If the validation fails, the method throws an error.
    /// </remarks>
    private void checkInventDim()
    {
        boolean                                 ok = true;
        ItemId                                  itemId                  = axPriceDiscAdmTrans.parmItemRelation();
        InventDimGroupFieldSetupEnumerator      enumerator;
        InventDimGroupFieldSetup                inventDimGroupFieldSetup;
        FieldId                                 inventDimFieldId;
        InventTable                             inventTable;
        InventDimGroupSetup                     inventDimGroupSetup;

        inventTable = InventTable::find(itemId);

        //InventDimGroupSetup has a restriction that storage and tracking dimensions should be specified.
        if (inventTable.trackingDimensionGroup() && inventTable.storageDimensionGroup())
        {
            inventDimGroupSetup = InventDimGroupSetup::newItemId(itemId);
        }
        else
        {
            inventDimGroupSetup = InventDimGroupSetup::newItemIdProductDimensionsOnly(itemId);
        }
        enumerator = inventDimGroupSetup.getFieldSetupEnumerator();

        while (enumerator.moveNext())
        {
            inventDimGroupFieldSetup = enumerator.current();
            inventDimFieldId = inventDimGroupFieldSetup.dimFieldId();

            if (inventDimGroupFieldSetup.isActive())
            {
                if (inventDimFieldId == fieldNum(InventDim, InventLocationId) && axPriceDiscAdmTrans.axInventDim().parmInventLocationId()
                && !InventLocation::checkExist(axPriceDiscAdmTrans.axInventDim().parmInventLocationId()))
                {
                    error(strFmt("@SYS97692",
                                 axPriceDiscAdmTrans.axInventDim().parmInventLocationId(),
                                 fieldId2pname(tableNum(InventDim), inventDimFieldId),
                                 tablePName(InventLocation)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventBatchId)
                    && axPriceDiscAdmTrans.axInventDim().parmInventBatchId()
                    && !InventBatch::checkExist(axPriceDiscAdmTrans.axInventDim().parmInventBatchId(), itemId))
                {
                    error(strFmt("@SYS97692",
                                 axPriceDiscAdmTrans.axInventDim().parmInventBatchId(),
                                 fieldId2pname(tableNum(InventDim), inventDimFieldId),
                                 tablePName(InventBatch)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, wmsLocationId) && axPriceDiscAdmTrans.axInventDim().parmWMSLocationId()
                && !WMSLocation::exist(axPriceDiscAdmTrans.axInventDim().parmWMSLocationId(), axPriceDiscAdmTrans.axInventDim().parmInventLocationId()))
                {
                    error(strFmt("@SYS97692",
                                 axPriceDiscAdmTrans.axInventDim().parmWMSLocationId(),
                                 fieldId2pname(tableNum(InventDim), inventDimFieldId),
                                 tablePName(WMSLocation)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventSerialId)
                    && axPriceDiscAdmTrans.axInventDim().parmInventSerialId()
                    && !InventSerial::checkExist(axPriceDiscAdmTrans.axInventDim().parmInventSerialId(), itemId))
                {
                    error(strFmt("@SYS97692",
                                 axPriceDiscAdmTrans.axInventDim().parmInventSerialId(),
                                 fieldId2pname(tableNum(InventDim), inventDimFieldId),
                                 tablePName(InventSerial)));
                    ok = false;
                }
                // <GEERU>
                if (inventDimFieldId == fieldnum(InventDim, InventGtdId_RU) && axPriceDiscAdmTrans.axInventDim().parmInventGTDId_RU()
                && !InventGTD_RU::exist(itemId, axPriceDiscAdmTrans.axInventDim().parmInventGTDId_RU()))
                {
                    error(strfmt("@SYS97692",
                                 axPriceDiscAdmTrans.axInventDim().parmInventGTDId_RU(),
                                 fieldid2pname(tablenum(InventDim), inventDimFieldId),
                                 tableid2pname(tablenum(InventGTD_RU))));
                    ok = false;
                }
                if (inventDimFieldId == fieldnum(InventDim, InventProfileId_RU) && axPriceDiscAdmTrans.axInventDim().parmInventProfileId_RU()
                && !InventProfile_RU::checkExist(axPriceDiscAdmTrans.axInventDim().parmInventProfileId_RU()))
                {
                    error(strfmt("@SYS97692",
                                 axPriceDiscAdmTrans.axInventDim().parmInventProfileId_RU(),
                                 fieldid2pname(tablenum(InventDim), inventDimFieldId),
                                 tableid2pname(tablenum(InventProfile_RU))));
                    ok = false;
                }
                if (inventDimFieldId == fieldnum(InventDim, InventOwnerId_RU) && axPriceDiscAdmTrans.axInventDim().parmInventOwnerId_RU()
                && !InventOwner_RU::checkExist(axPriceDiscAdmTrans.axInventDim().parmInventOwnerId_RU()))
                {
                    error(strfmt("@SYS97692",
                                 axPriceDiscAdmTrans.axInventDim().parmInventOwnerId_RU(),
                                 fieldid2pname(tablenum(InventDim), inventDimFieldId),
                                 tableid2pname(tablenum(InventOwner_RU))));
                    ok = false;
                }
                // </GEERU>
            }
            else
            {
                if (inventDimFieldId == fieldNum(InventDim, ConfigId) && axPriceDiscAdmTrans.axInventDim().parmConfigId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventSizeId) && axPriceDiscAdmTrans.axInventDim().parmInventSizeId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventColorId) && axPriceDiscAdmTrans.axInventDim().parmInventColorId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventStyleId) && axPriceDiscAdmTrans.axInventDim().parmInventStyleId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventVersionId) && axPriceDiscAdmTrans.axInventDim().parmInventVersionId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventLocationId) && axPriceDiscAdmTrans.axInventDim().parmInventLocationId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventBatchId) && axPriceDiscAdmTrans.axInventDim().parmInventBatchId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, wmsLocationId) && axPriceDiscAdmTrans.axInventDim().parmWMSLocationId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldNum(InventDim, InventSerialId) && axPriceDiscAdmTrans.axInventDim().parmInventSerialId())
                {
                    error(strFmt("@SYS97673", fieldId2pname(tableNum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                // <GEERU>
                if (inventDimFieldId == fieldnum(InventDim, InventGtdId_RU) && axPriceDiscAdmTrans.axInventDim().parmInventGTDId_RU())
                {
                    error(strfmt("@SYS97673", fieldid2pname(tablenum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldnum(InventDim, InventProfileId_RU) && axPriceDiscAdmTrans.axInventDim().parmInventProfileId_RU())
                {
                    error(strfmt("@SYS97673", fieldid2pname(tablenum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                if (inventDimFieldId == fieldnum(InventDim, InventOwnerId_RU) && axPriceDiscAdmTrans.axInventDim().parmInventOwnerId_RU())
                {
                    error(strfmt("@SYS97673", fieldid2pname(tablenum(InventDim), inventDimFieldId)));
                    ok = false;
                }
                // </GEERU>
            }
        }

        if (!ok)
        {
            throw  error("@SYS97693");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks the input status.
    /// </summary>
    /// <param name="_inputStatus">
    ///    An <c>InternalExternal</c> enumeration value; optional.
    /// </param>
    /// <returns>
    ///    An integer that indicates the input status.
    /// </returns>
    protected int inputStatus(InternalExternal _inputStatus = axPriceDiscAdmTrans.callInputStatus())
    {
        if (axPriceDiscAdmTrans)
        {
            return axPriceDiscAdmTrans.callInputStatus(_inputStatus);
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modify</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates a <c>PriceDiscAdmTrans</c> record related to the current <c>InventDim</c> record.
    /// </summary>
    public void modify()
    {
        axPriceDiscAdmTrans.modify();
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the <c>InventDimId</c> field through an instance of <c>AxInventDim_PriceDiscAdmTrans</c>.
    /// </summary>
    /// <remarks>
    ///    When you update an instance of the <c>axPriceDiscAdmlTrans</c> class through an instance of the
    ///    <c>AxInventDim_PriceDiscAdmTrans</c> class, only <c>this.setInventDimId</c> may be called.
    /// </remarks>
    public void save()
    {
        this.checkInventDim(); //this method is called from here as ValidateWrite method of AxInventDim_PriceDiscAdmTrans is not called
        axPriceDiscAdmTrans.updateFromInventDim();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfigId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default value for the <c>ConfigId</c> parameter for a particular item if it is not
    ///    provided in the incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the <c>ConfigId</c> parameter is active for the particular item and if no external value is
    ///    passed, this method sets the default value for the field.
    /// </remarks>
    public void setConfigId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, ConfigId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmConfigId('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventBatchId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default <c>InventBatchId</c> for the particular item, if it is not provided in the
    ///    incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the <c>InventBatchId</c> is active for the particular item and if no external value is passed,
    ///    this method sets the default value for the field.
    /// </remarks>
    public void setInventBatchId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventBatchId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventBatchId('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventColorId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default value for <c>ColorId</c> for a particular item if it is not provided in the
    ///    incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the <c>ColorId</c> is active for the particular item and if no external value is passed, this
    ///    method sets the default value for the field.
    /// </remarks>
    public void setInventColorId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventColorId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventColorId('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventGTDId_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default value for InventGtdId_RU for a particular item if it is not provided in the incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the InventGtdId_RU is active for the particular item and if no external value is passed, then this method sets the default value for the field.
    /// </remarks>
    public void setInventGTDId_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventGtdId_RU)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldnum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventGTDId_RU('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default value for <c>InventLocationId</c> for an item, if the default value is not
    ///    provided in the incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the <c>InventLocationId</c> is active for the particular item and no external value is passed,
    ///    this method sets the default value for the field.
    /// </remarks>
    public void setInventLocationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventLocationId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventLocationId('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventOwnerId_RU</Name>
				<Source><![CDATA[
    public void setInventOwnerId_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventOwnerId_RU)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldnum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventOwnerId_RU('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventProfileId_RU</Name>
				<Source><![CDATA[
    public void setInventProfileId_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventProfileId_RU)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldnum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventProfileId_RU('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSerialId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default value for InventSerialId for a particular item if it is not provided in the
    /// incoming XML.
    /// </summary>
    /// <remarks>
    /// If the InventSerialId is active for the particular item and if no external value is passed, this
    /// method sets the default value for the field.
    /// </remarks>
    public void setInventSerialId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventSerialId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventSerialId('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSiteId</c> parameter.
    /// </summary>
    public void setInventSiteId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventSiteId)))
        {
            return;
        }

        super();

        if (this.isFieldSet(fieldNum(InventDim,InventLocationId)))
        {
            this.parmInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSizeId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default value for <c>InventSizeId</c> for a particular item if it is not provided in the
    ///    incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the <c>InventSizeId</c> is active for the particular item and if no external value is passed,
    ///    this method sets the default value for the field.
    /// </remarks>
    public void setInventSizeId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventSizeId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventSizeId('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventStyleId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default value for <c>StyleId</c> for a particular item if it is not provided in the
    ///    incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the <c>StyleId</c> is active for the particular item and if no external value is passed, this
    ///    method sets the default value for the field.
    /// </remarks>
    public void setInventStyleId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventStyleId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventStyleId('');
            }
            return;
        }
    }
    
]]></Source>
			</Method>
			<Method>
				<Name>setInventVersionId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default value for <c>VersionId</c> for a particular item if it is not provided in the
    ///    incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the <c>VersionId</c> is active for the particular item and if no external value is passed, this
    ///    method sets the default value for the field.
    /// </remarks>
    public void setInventVersionId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventVersionId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmInventVersionId('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWMSLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default value for <c>WMSLocationId</c> for a particular item if it is not provided in the
    ///    incoming XML.
    /// </summary>
    /// <remarks>
    ///    If the <c>WMSLocationId</c> is active for the particular item and if no external value is passed,
    ///    this method sets the default value for the field.
    /// </remarks>
    public void setWMSLocationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, wmsLocationId)))
        {
            return;
        }

        super();

        axPriceDiscAdmTrans.setItemCode();

        if (axPriceDiscAdmTrans.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!axPriceDiscAdmTrans.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmWMSLocationId('');
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAxPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    public static AxInventDim_PriceDiscAdmTrans newAxPriceDiscAdmTrans(AxPriceDiscAdmTrans _axPriceDiscAdmTrans)
    {
        AxInventDim_PriceDiscAdmTrans  axInventDim_PriceDiscAdmTrans;
        axInventDim_PriceDiscAdmTrans = new AxInventDim_PriceDiscAdmTrans();
        axInventDim_PriceDiscAdmTrans.axPriceDiscAdmTrans(_axPriceDiscAdmTrans);

        return axInventDim_PriceDiscAdmTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>