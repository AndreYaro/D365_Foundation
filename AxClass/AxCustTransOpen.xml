<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCustTransOpen</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxCustTransOpen extends AxApplicationBase
{
    CustTransOpen custTransOpen;

    SpecTransManager    specTransManager;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _custTransOpen = custTransOpen)
    {
        if (!prmisdefault(_custTransOpen))
        {
            super(_custTransOpen);
            custTransOpen = _custTransOpen;
        }
        else
        {
            super();
        }

        return custTransOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTransOpen</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustTransOpen custTransOpen(CustTransOpen _custTransOpen = custTransOpen)
    {
        if (!prmisdefault(_custTransOpen))
        {
            this.setCurrentRecordFromExternal(_custTransOpen);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an empty record from the table to which this <c>AxBC</c> class relates.
    /// </summary>
    /// <returns>
    /// An empty record from the table to which this <c>AxBC</c> class relates.
    /// </returns>
    /// <remarks>
    /// The table to which this <c>AxBC</c> class relates has the same name as the class without the first
    /// two letters, a and x.
    /// </remarks>
    protected Common emptyRecord()
    {
        CustTransOpen localCustTransOpen;
        ;
        return localCustTransOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountNum</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmAccountNum(str _accountNum = '')
    {
        DictField   dictField;
        ;
        if (!prmisdefault(_accountNum))
        {
            dictField = new DictField(tablenum(CustTransOpen),fieldnum(CustTransOpen,AccountNum));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_accountNum,dictField,this.mapPolicy().xMLMapCustAccount());
                _accountNum = this.axCustAccount(_accountNum);
            }
            else
            {
                this.validateInboundString(_accountNum,dictField);
            }
            this.setField(fieldnum(CustTransOpen, AccountNum), _accountNum);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCustAccount(custTransOpen.AccountNum);
        }
        else
        {
            return custTransOpen.AccountNum;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountCur</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountCurDebCred parmAmountCur(AmountCurDebCred _amountCur = 0)
    {
        if (!prmisdefault(_amountCur))
        {
            this.setField(fieldnum(CustTransOpen, AmountCur), _amountCur);
        }

        return custTransOpen.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountMST</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountMSTDebCred parmAmountMST(AmountMSTDebCred _amountMST = 0)
    {
        if (!prmisdefault(_amountMST))
        {
            this.setField(fieldnum(CustTransOpen, AmountMST), _amountMST);
        }

        return custTransOpen.AmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankDiscNoticeDeadline</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public BankDiscNoticeDeadline parmBankDiscNoticeDeadline(BankDiscNoticeDeadline _bankDiscNoticeDeadline = dateNull())
    {
        if (!prmisdefault(_bankDiscNoticeDeadline))
        {
            this.setField(fieldnum(CustTransOpen, BankDiscNoticeDeadline), _bankDiscNoticeDeadline);
        }

        return custTransOpen.BankDiscNoticeDeadline;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustCashDiscDate parmCashDiscDate(CustCashDiscDate _cashDiscDate = dateNull())
    {
        if (!prmisdefault(_cashDiscDate))
        {
            this.setField(fieldnum(CustTransOpen, CashDiscDate), _cashDiscDate);
        }

        return custTransOpen.CashDiscDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscountLedgerDimension</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerDimensionDefaultAccount parmCashDiscountLedgerDimension(LedgerDimensionDefaultAccount _cashDiscountLedgerDimension = 0)
    {
        if (!prmisdefault(_cashDiscountLedgerDimension))
        {
            this.setField(fieldnum(CustTransOpen, CashDiscountLedgerDimension), _cashDiscountLedgerDimension);
        }

        return custTransOpen.CashDiscountLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDueDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public DueDate parmDueDate(DueDate _dueDate = dateNull())
    {
        if (!prmisdefault(_dueDate))
        {
            this.setField(fieldnum(CustTransOpen, DueDate), _dueDate);
        }

        return custTransOpen.DueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchAdjUnrealized</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountMSTDebCred parmExchAdjUnrealized(AmountMSTDebCred _exchAdjUnrealized = 0)
    {
        if (!prmisdefault(_exchAdjUnrealized))
        {
            this.setField(fieldnum(CustTransOpen, ExchAdjUnrealized), _exchAdjUnrealized);
        }

        return custTransOpen.ExchAdjUnrealized;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFineAmount_BR</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FineAmount_BR parmFineAmount_BR(FineAmount_BR _fineAmount = 0.00)
    {
        if (!prmisdefault(_fineAmount))
        {
            this.setField(fieldnum(CustTransOpen, FineAmount_BR), _fineAmount);
        }

        return custTransOpen.FineAmount_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFineAmountPaymCur_BR</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FineAmount_BR parmFineAmountPaymCur_BR(FineAmount_BR _fineAmountPaymCur = 0.00)
    {
        if (!prmisdefault(_fineAmountPaymCur))
        {
            this.setField(fieldnum(CustTransOpen, FineAmountPaymCur_BR), _fineAmountPaymCur);
        }

        return custTransOpen.FineAmountPaymCur_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFineCode_BR</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustFineCode_BR parmFineCode_BR(CustFineCode_BR _interestCode = '')
    {
        if (!prmisdefault(_interestCode))
        {
            this.setField(fieldnum(CustTransOpen, FineCode_BR), _interestCode);
        }

        return custTransOpen.FineCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestAmount_BR</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FinInterestAmount_BR parmInterestAmount_BR(FinInterestAmount_BR _interestAmount = 0.00)
    {
        if (!prmisdefault(_interestAmount))
        {
            this.setField(fieldnum(CustTransOpen, InterestAmount_BR), _interestAmount);
        }

        return custTransOpen.InterestAmount_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestAmountPaymCur_BR</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FinInterestAmount_BR parmInterestAmountPaymCur_BR(FinInterestAmount_BR _finInterestAmountPaymCur = 0.00)
    {
        if (!prmisdefault(_finInterestAmountPaymCur))
        {
            this.setField(fieldnum(CustTransOpen, InterestAmountPaymCur_BR), _finInterestAmountPaymCur);
        }

        return custTransOpen.InterestAmountPaymCur_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestCode_BR</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustInterestCode_BR parmInterestCode_BR(CustInterestCode_BR _interestCode = '')
    {
        if (!prmisdefault(_interestCode))
        {
            this.setField(fieldnum(CustTransOpen, InterestCode_BR), _interestCode);
        }

        return custTransOpen.InterestCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsMarked</Name>
				<Source><![CDATA[
    [SysObsoleteAttribute('This method is obsolete. Use isMarked() instead.', true, 30\5\2022)]
    public boolean parmIsMarked(boolean _isMarked = false)
    {
        throw error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMarked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the transaction is marked.
    /// </summary>
    /// <returns>true if the transaction is marked; otherwise false</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isMarked()
    {
        specTransManager = SpecTransManager::newFromSpec(this.currentRecord());

        return specTransManager.existForOtherSpec(custTransOpen.DataAreaId, custTransOpen.TableId, custTransOpen.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastInterestDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustLastInterestDate parmLastInterestDate(CustLastInterestDate _lastInterestDate = dateNull())
    {
        if (!prmisdefault(_lastInterestDate))
        {
            this.setField(fieldnum(CustTransOpen, LastInterestDate), _lastInterestDate);
        }

        return custTransOpen.LastInterestDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPossibleCashDisc</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustCashDiscAmount parmPossibleCashDisc(CustCashDiscAmount _possibleCashDisc = 0)
    {
        if (!prmisdefault(_possibleCashDisc))
        {
            this.setField(fieldnum(CustTransOpen, PossibleCashDisc), _possibleCashDisc);
        }

        return custTransOpen.PossibleCashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefRecId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustTransRefRecId parmRefRecId(CustTransRefRecId _refRecId = 0)
    {
        if (!prmisdefault(_refRecId))
        {
            this.setField(fieldnum(CustTransOpen, RefRecId), _refRecId);
        }

        return custTransOpen.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettlementPriorityCashDiscDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TransDate parmSettlementPriorityCashDiscDate(TransDate _settlementPriorityCashDiscDate = dateNull())
    {
        if (!prmisdefault(_settlementPriorityCashDiscDate))
        {
            this.setField(fieldnum(CustTransOpen, SettlementPriorityCashDiscDate), _settlementPriorityCashDiscDate);
        }

        return custTransOpen.SettlementPriorityCashDiscDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdAmountOrigin_IN</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountCur parmTaxWithholdAmountOrigin_IN(AmountCur _taxWithholdAmountOrigin_IN = 0)
    {
        if (!prmisdefault(_taxWithholdAmountOrigin_IN))
        {
            this.setField(fieldnum(CustTransOpen, TaxWithholdAmountOrigin_IN), _taxWithholdAmountOrigin_IN);
        }

        return custTransOpen.TaxWithholdAmountOrigin_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTCSAmount_IN</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxWithholdAmountCur parmTCSAmount_IN(TaxWithholdAmountCur _TCSAmount_IN = 0)
    {
        if (!prmisdefault(_TCSAmount_IN))
        {
            this.setField(fieldnum(CustTransOpen, TCSAmount_IN), _TCSAmount_IN);
        }

        return custTransOpen.TCSAmount_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTDSAmount_IN</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxWithholdAmountCur parmTDSAmount_IN(TaxWithholdAmountCur _TDSAmount_IN = 0)
    {
        if (!prmisdefault(_TDSAmount_IN))
        {
            this.setField(fieldnum(CustTransOpen, TDSAmount_IN), _TDSAmount_IN);
        }

        return custTransOpen.TDSAmount_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TransDate parmTransDate(TransDate _transDate = dateNull())
    {
        if (!prmisdefault(_transDate))
        {
            this.setField(fieldnum(CustTransOpen, TransDate), _transDate);
        }

        return custTransOpen.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUseCashDisc</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public UseCashDisc parmUseCashDisc(UseCashDisc _useCashDisc = UseCashDisc::Normal)
    {
        if (!prmisdefault(_useCashDisc))
        {
            this.setField(fieldnum(CustTransOpen, UseCashDisc), _useCashDisc);
        }

        return custTransOpen.UseCashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static AxCustTransOpen construct()
    {
        return new AxCustTransOpen();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCustTransOpen</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AxCustTransOpen newCustTransOpen(CustTransOpen _custTransOpen)
    {
        AxCustTransOpen axCustTransOpen = AxCustTransOpen::construct();
        ;
        axCustTransOpen.custTransOpen(_custTransOpen);

        return axCustTransOpen;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>