<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqCalcKeptCoverageIssueRecIdUpdateQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ReqCalcKeptCoverageIssueRecIdUpdateQueryBuilder</c> class builds queries related to the <c>ReqCalc</c> class.
/// </summary>
final public class ReqCalcKeptCoverageIssueRecIdUpdateQueryBuilder
{
    ReqTrans            reqTransIssue;
    ReqTransCov         reqTransCov;
    ReqTransCovKeep     reqTransCovKeep;
    private ReqCalc     reqCalc;
    private ReqSetup    setup;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates ReqTransCov.IssueRecId to match actual plan version's recIds.
    /// </summary>
    /// <param name = "_reqTransIssue">
    ///     A <c>ReqTrans</c> record.
    /// </param>
    /// <param name = "_reqTransCov">
    ///     A <c>ReqTransCov</c> record to be updated.
    /// </param>
    /// <param name = "_reqTransCovKeep">
    ///     A <c>ReqTransCovKeep</c> record.
    /// </param>
    /// <param name = "_reqCalc">
    ///     An instance of <c>ReqCalc</c> class.
    /// </param>
    /// <param name = "_setup">
    ///     An instance of <c>ReqSetup</c> class.
    /// </param>
    internal static void update(
        ReqTrans        _reqTransIssue,
        ReqTransCov     _reqTransCov,
        ReqTransCovKeep _reqTransCovKeep,
        ReqCalc         _reqCalc,
        ReqSetup        _setup)
    {
        ReqCalcKeptCoverageIssueRecIdUpdateQueryBuilder reqCalcKeptCoverageIssueRecIdUpdateQueryBuilder = new ReqCalcKeptCoverageIssueRecIdUpdateQueryBuilder();
          
        reqCalcKeptCoverageIssueRecIdUpdateQueryBuilder.initialize(
            _reqTransIssue,
            _reqTransCov,
            _reqTransCovKeep,
            _reqCalc,
            _setup);
        
        SysDaUpdateObject reqTransCovUpdateObject = reqCalcKeptCoverageIssueRecIdUpdateQueryBuilder.buildReqTransCovUpdateObject();
        
        new SysDaUpdateStatement().execute(reqTransCovUpdateObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(
        ReqTrans        _reqTransIssue,
        ReqTransCov     _reqTransCov,
        ReqTransCovKeep _reqTransCovKeep,
        ReqCalc         _reqCalc,
        ReqSetup        _setup)
    {
        reqTransIssue = _reqTransIssue;
        reqTransCov = _reqTransCov;
        reqTransCovKeep = _reqTransCovKeep;
        reqCalc = _reqCalc;
        setup = _setup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildReqTransCovUpdateObject</Name>
				<Source><![CDATA[
    private SysDaUpdateObject buildReqTransCovUpdateObject()
    {
        SysDaUpdateObject updateObject = new SysDaUpdateObject(reqTransCov);
        updateObject.settingClause(this.buildReqTransCovSettingsList());
        updateObject.whereClause(this.buildReqTransCovWhereClause());
        
        SysDaQueryObject reqTransCovKeepQueryObject = this.joinReqTransCovKeep(updateObject);
        SysDaQueryObject reqTransIssueQueryObject = this.joinReqTransIssue(reqTransCovKeepQueryObject);

        return updateObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildReqTransCovSettingsList</Name>
				<Source><![CDATA[
    private SysDaSettingsList buildReqTransCovSettingsList()
    {
        SysDaSettingsList settingsList = new SysDaSettingsList();

        settingsList.add(fieldStr(ReqTransCov, IssueRecId),
                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, RecId)));

        return settingsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>joinReqTransCovKeep</Name>
				<Source><![CDATA[
    private SysDaQueryObject joinReqTransCovKeep(SysDaUpdateObject _updateObject)
    {
        SysDaQueryObject queryObject = new SysDaQueryObject(reqTransCovKeep);

        queryObject.whereClause(this.buildReqTransCovKeepWhereClause());
        _updateObject.joinClause(SysDaJoinKind::InnerJoin, queryObject);

        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>joinReqTransIssue</Name>
				<Source><![CDATA[
    private SysDaQueryObject joinReqTransIssue(SysDaQueryObject _queryObject)
    {
        SysDaQueryObject queryObject = new SysDaQueryObject(reqTransIssue);
        queryObject.whereClause(this.buildReqTransIssueWhereClause());

        _queryObject.joinClause(SysDaJoinKind::InnerJoin, queryObject);

        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildReqTransCovWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds where clause for requirement coverage query.
    /// </summary>
    /// <returns>
    ///     An instance of <c>SysDaQueryExpression</c> class.
    /// </returns>
    protected SysDaQueryExpression buildReqTransCovWhereClause()
    {
        SysDaQueryExpression whereClause = new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransCov, fieldStr(ReqTransCov, PlanVersion)),
                                                new SysDaValueExpression(reqCalc.reqPlanVersionRefRecId()))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransCov, fieldStr(ReqTransCov, ItemId)),
                                                new SysDaValueExpression(setup.itemId())));

        return whereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildReqTransCovKeepWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds where clause for query on requirement coverage kept from previous master planning run.
    /// </summary>
    /// <returns>
    ///     An instance of <c>SysDaQueryExpression</c> class.
    /// </returns>
    protected SysDaQueryExpression buildReqTransCovKeepWhereClause()
    {
        SysDaQueryExpression whereClause = new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, PlanVersion)),
                                                new SysDaFieldExpression(reqTransCov, fieldStr(ReqTransCov, PlanVersion)))
                                           .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, ItemId)),
                                                new SysDaFieldExpression(reqTransCov, fieldStr(ReqTransCov, ItemId))))
                                           .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, IssueLastRecId)),
                                                new SysDaFieldExpression(reqTransCov, fieldStr(ReqTransCov, IssueRecId))));

        return whereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildReqTransIssueWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    ///      Builds where clause for net requirements query.
    /// </summary>
    /// <returns>
    ///     An instance of <c>SysDaQueryExpression</c> class.
    /// </returns>
    protected SysDaQueryExpression buildReqTransIssueWhereClause()
    {
        SysDaQueryExpression whereClause = new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, PlanVersion)),
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, PlanVersion)))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, ItemId)),
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, ItemId))))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, CovInventDimId)),
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, CovInventDimId))))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, ReqDate)),
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, ReqDate))))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, InventTransOrigin)),
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, IssueInventTransOrigin))))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, ReqTime)),
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, ReqTime))))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, Priority)),
                                                new SysDaFieldExpression(reqTransCovKeep, fieldStr(ReqTransCovKeep, Priority))))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(reqTransIssue, fieldStr(ReqTrans, MarkingRefInventTransOrigin)),
                                                new SysDaValueExpression(0)));

        return whereClause;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>