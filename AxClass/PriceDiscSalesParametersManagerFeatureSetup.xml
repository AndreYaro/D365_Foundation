<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscSalesParametersManagerFeatureSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PriceDiscSalesParametersManagerFeatureSetup</c> class sets the PriceDisc Sales enabled parameters based 
/// on PriceDiscTableCreateSkipEventsFlight and PriceDiscAdmCheckPostSkipEventsFlight.
/// </summary>
[SysSetupTable(tableStr(SalesParameters))]
[SysSetupConfig(true, 300)]
internal final class PriceDiscSalesParametersManagerFeatureSetup extends SysSetupAsync implements SysSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    public void loadData()
    {
        PriceDiscSalesParametersManagerFeatureSetup::setPriceDiscSalesParameterEnabledFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDiscSalesParameterEnabledFields</Name>
				<Source><![CDATA[
    private static void setPriceDiscSalesParameterEnabledFields()
    {
        boolean isPriceDiscTableCreateSkipEventsEnabled = PriceDiscTableCreateSkipEventsFlight::instance().isEnabled();
        boolean isPriceDiscAdmCheckPostSkipEventsEnabled = PriceDiscAdmCheckPostSkipEventsFlight::instance().isEnabled();

        ttsbegin;

        SalesParameters salesParameters;
        while select forupdate crosscompany salesParameters
        {
            changecompany (salesParameters.DataAreaId)
            {
                salesParameters.IsPriceDiscTableInsertSkipEventsEnabled = isPriceDiscAdmCheckPostSkipEventsEnabled;
                salesParameters.IsPriceDiscTableUpdateSkipEventsEnabled =  isPriceDiscTableCreateSkipEventsEnabled;

                salesParameters.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>