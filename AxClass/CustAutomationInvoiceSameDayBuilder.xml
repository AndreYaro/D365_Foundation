<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAutomationInvoiceSameDayBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustAutomationInvoiceSameDayBuilder</c> class finds the latest invoice created for invoices with the same due date 
/// given a <c>CustAutomationInvoice</c> is built and associated to a <c>CustAutomationStrategy</c>.
/// </summary>
internal final class CustAutomationInvoiceSameDayBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildInvoiceSelectionTmp</Name>
				<Source><![CDATA[
    internal static CustAutomationInvoiceSelectionTmp buildInvoiceSelectionTmp(CustAutomationStrategyName _strategyName)
    {
        return new CustAutomationInvoiceSameDayBuilder().buildFirstCreatedInvoiceForSameDueDate(_strategyName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildFirstCreatedInvoiceForSameDueDate</Name>
				<Source><![CDATA[
    private CustAutomationInvoiceSelectionTmp buildFirstCreatedInvoiceForSameDueDate(CustAutomationStrategyName _strategyName)
    {
        Map fieldMap = new Map(Types::String, Types::Container);

        Query q = this.createBaseQueryForStrategy(_strategyName);
        this.addInvoicesToQuery(q, fieldMap);

        CustAutomationInvoiceSelectionTmp selectionTmp;
        Query::insert_recordset(selectionTmp, fieldMap, q);

        return selectionTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createBaseQueryForStrategy</Name>
				<Source><![CDATA[
    private Query createBaseQueryForStrategy(CustAutomationStrategyName _strategyName)
    {
        Query q = new Query();
        QueryBuildDataSource qbdsInvoice = q.addDataSource(tableNum(CustAutomationInvoice));
        qbdsInvoice.addRange(fieldNum(CustAutomationInvoice, StrategyName)).value(SysQuery::value(_strategyName));
        qbdsInvoice.fields().dynamic(NoYes::No);
        qbdsInvoice.fields().clearFieldList();

        return q;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInvoicesToQuery</Name>
				<Source><![CDATA[
    private void addInvoicesToQuery(Query _q, Map _fieldMap)
    {
        QueryBuildDataSource qbdsCustTrans = _q.dataSourceTable(tableNum(CustAutomationInvoice)).addDataSource(tableNum(CustTrans));
        qbdsCustTrans.addLink(fieldNum(CustAutomationInvoice, AccountNum), fieldNum(CustTrans, AccountNum));
        qbdsCustTrans.addLink(fieldNum(CustAutomationInvoice, DueDate), fieldNum(CustTrans, DueDate));
        qbdsCustTrans.joinMode(JoinMode::InnerJoin);
        qbdsCustTrans.fetchMode(QueryFetchMode::One2One);
        qbdsCustTrans.addRange(fieldNum(CustTrans, Closed)).value(SysQuery::value(dateNull()));
        qbdsCustTrans.addRange(fieldNum(CustTrans, CustAutomationExclude)).value(SysQuery::value(NoYes::No));
        qbdsCustTrans.fields().dynamic(NoYes::No);
        qbdsCustTrans.fields().clearFieldList();

        qbdsCustTrans.addGroupByAndSelectionField(fieldNum(CustTrans, AccountNum));
        qbdsCustTrans.addSelectionField(fieldNum(CustTrans, CreatedDateTime), SelectionField::Min);

        QueryBuildDataSource qbdsInvoiceJour = _q.dataSourceTable(tableNum(CustTrans)).addDataSource(tableNum(CustInvoiceJour));
        qbdsInvoiceJour.joinMode(JoinMode::InnerJoin);
        qbdsInvoiceJour.fetchMode(QueryFetchMode::One2One);
        qbdsInvoiceJour.addLink(fieldNum(CustTrans, Invoice), fieldNum(CustInvoiceJour, InvoiceId));
        qbdsInvoiceJour.addLink(fieldNum(CustTrans, AccountNum), fieldNum(CustInvoiceJour, InvoiceAccount));
        qbdsInvoiceJour.addLink(fieldNum(CustTrans, TransDate), fieldNum(CustInvoiceJour, InvoiceDate));
        qbdsInvoiceJour.addLink(fieldNum(CustTrans, Voucher), fieldNum(CustInvoiceJour, LedgerVoucher));
        qbdsInvoiceJour.fields().dynamic(NoYes::No);
        qbdsInvoiceJour.fields().clearFieldList();

        _fieldMap.insert(fieldStr(CustAutomationInvoiceSelectionTmp, AccountNum), [qbdsCustTrans.uniqueId(), fieldStr(CustTrans, AccountNum)]);
        _fieldMap.insert(fieldStr(CustAutomationInvoiceSelectionTmp, CustTransCreatedDateTime), [qbdsCustTrans.uniqueId(), strFmt('MIN(%1)', fieldStr(CustTrans, CreatedDateTime))]);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>