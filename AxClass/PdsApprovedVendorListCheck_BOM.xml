<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsApprovedVendorListCheck_BOM</Name>
	<SourceCode>
		<Declaration><![CDATA[
[PdsApprovedVendorListCheckTableIdFactoryAttribute(tableStr(BOM))]
/// <summary>
/// Handles the approved vendor list check for buffer type BOM.
/// </summary>
class PdsApprovedVendorListCheck_BOM extends PdsApprovedVendorListCheck
{
    BOM     bom;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if Approved Vendor List record is present. If valid record found 'OK' is returned.If no valid record is found,
    /// the warning value set in the item master is returned.
    /// </summary>
    /// <returns>
    /// Corresponding value of PdsVendorCheckResult
    /// </returns>
    public PdsVendorCheckResult check()
    {
        PdsVendorCheckResult    ret = PdsVendorCheckResult::OK;

        if (vendAccount
            && inventTable.PdsVendorCheckItem != PdsVendorCheckItem::NoCheck
            && !PdsApprovedVendorList::existValid(inventTable.ItemId,
                                                        vendAccount,
                                                        fromDate,
                                                        toDate)
            )
        {
            switch (inventTable.PdsVendorCheckItem)
            {
                case PdsVendorCheckItem::WarningOnly :
                    ret = PdsVendorCheckResult::Warning;
                    break;
                case PdsVendorCheckItem::NotAllowed :
                    ret = PdsVendorCheckResult::NotAllowed;
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiates a new instance of subclass
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActiveDate</Name>
				<Source><![CDATA[
        public date parmActiveDate(date _activeDate = activeDate)
    {
        date ret;

        ret = super(_activeDate);

        fromDate = _activeDate;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets the global record buffer, vendAccount &amp; fromDate if parameter record is of type BOM
    /// </summary>
    /// <param name="_common">
    /// Takes a BOM record
    /// </param>
    /// <returns>
    /// Returns global variable BOM
    /// </returns>
    public Common parmBuffer(Common _common = null)
    {
        if (!prmisdefault(_common) && _common.TableId == tablenum(BOM))
        {
            bom = _common;

            super(bom.inventTable());

            vendAccount = bom.VendId;
            fromDate = bom.FromDate;
            toDate = bom.ToDate;
        }

        return bom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct instance of subclass
    /// </summary>
    /// <returns>
    /// Returns instance of class
    /// </returns>
    public static PdsApprovedVendorListCheck_BOM construct()
    {
        return new PdsApprovedVendorListCheck_BOM();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>