<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcAttributeValueTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCAttributeValueTranslation</c> class provides the ability to get the translated value.
/// </summary>
class PcAttributeValueTranslation
{
    private LanguageId languageId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setLanguageId</Name>
				<Source><![CDATA[
    internal void setLanguageId(LanguageId _languageId)
    {
        languageId = _languageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLocalizedValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value as a localized string.
    /// </summary>
    /// <param name="_attribute">
    /// A specified attribute.
    /// </param>
    /// <param name="_solverValue">
    /// A solver value.
    /// </param>
    /// <returns>
    /// A localized string presentation of the value.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The attribute type is an enumeration but the enumeration cannot be found.
    /// </exception>
    public str getLocalizedValue(EcoResAttribute _attribute, PCSolverValue _solverValue)
    {
        EcoResEnumerationAttributeTypeValue enumerationAttributeTypeValue;
        EcoResTextValue                     textValueLocal;
        EcoResTextValueTranslation          textValueTranslation;
        PCSolverTextValue                   solverValue;
        PCSolverValue                       ret;

        EcoResAttributeType attributeType = EcoResAttributeType::find(_attribute.AttributeType);
        LanguageId valueLanguageId = languageId ? languageId : LanguageTable::defaultLanguage();

        ret = _solverValue;

        if ( attributeType.IsEnumeration )
        {
            select firstonly TextValue from textValueLocal
                join TableId from enumerationAttributeTypeValue
                    where   enumerationAttributeTypeValue.AttributeType == attributeType.RecId
                        &&  enumerationAttributeTypeValue.Value         == textValueLocal.RecId
                join TableId from solverValue
                    where   solverValue.TextValue == textValueLocal.RecId
                        &&  solverValue.Value     == _solverValue
                outer join TextValue from textValueTranslation // there may or may not be a translated value in the current language
                where   textValueTranslation.TextValueTable == textValueLocal.RecId
                    &&  textValueTranslation.Language       == valueLanguageId;

            if ( textValueTranslation )
            {
                ret = textValueTranslation.TextValue;
            }
            else if ( textValueLocal )
            {
                ret = textValueLocal.TextValue;
            }
            else
            {
                // Fall back to solver value for no available translation. E.g. for system defined table constraints.
                ret = _solverValue;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PCAttributeValueTranslation construct()
    {
        return new PCAttributeValueTranslation();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>