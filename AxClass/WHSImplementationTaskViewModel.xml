<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSImplementationTaskViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSImplementationTaskViewModel</c> class contains shared code used across the warehouse implementation task forms.
/// </summary>
internal class WHSImplementationTaskViewModel
{
    private WHSImplementationIProjectFilterProvider workspaceForm;
    private WHSImplementationITaskFormPart taskForm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>WHSImplementationTaskViewModel</c> class.
    /// </summary>
    /// <param name = "_projectTaskForm">An instance of a WHS implementation task form.</param>
    /// <param name = "_projectForm">Contract for filtering the WHS implementation workspace.</param>
    /// <returns>A new instance of the <c>WHSImplementationTaskViewModel</c> class.</returns>
    internal static WHSImplementationTaskViewModel construct(
        WHSImplementationITaskFormPart _projectTaskForm,
        WHSImplementationIProjectFilterProvider _projectForm)
    {
        WHSImplementationTaskViewModel viewModel = new WHSImplementationTaskViewModel();
        viewModel.initialize(_projectTaskForm, _projectForm);

        return viewModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(WHSImplementationITaskFormPart _projectTaskForm, WHSImplementationIProjectFilterProvider _projectForm)
    {
        taskForm = _projectTaskForm;
        workspaceForm = _projectForm;

        if (taskForm == null || workspaceForm == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        if (workspaceForm.getProjectFilterControl() != null)
        {
            workspaceForm.getProjectFilterControl().OnModified += eventhandler(this.onProjectFilterModified);
            this.applyProjectFilter(workspaceForm.getProjectName());
        }

        this.initializeTaskDataSource(taskForm.getTaskDataSource());
    }

]]></Source>
			</Method>
			<Method>
				<Name>onTaskCreated</Name>
				<Source><![CDATA[
    private void onTaskCreated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        WHSImplementationTask newTask = sender.cursor() as WHSImplementationTask;
        newTask.defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>onProjectFilterModified</Name>
				<Source><![CDATA[
    private void onProjectFilterModified(FormControl _formControl, FormControlEventArgs _eventArgs)
    {
        FormStringControl projectControl = _formControl as FormStringControl;
        
        if (projectControl == null)
        {
            return;
        }

        this.applyProjectFilter(projectControl.valueStr());
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyProjectFilter</Name>
				<Source><![CDATA[
    private void applyProjectFilter(WHSImplementationProject _project)
    {
        FormDataSource projectDataSource = taskForm.getProjectDataSource();
        if (projectDataSource != null)
        {
            SysQuery::findOrCreateRange(projectDataSource.queryBuildDataSource(), fieldNum(WHSImplementationWorkspaceProject, ImplementationProject))
                .value(SysQuery::value(_project));

            projectDataSource.executeQuery();
        }

        FormDataSource taskDataSource = taskForm.getTaskDataSource();
        if (taskDataSource != null)
        {
            QueryBuildRange projectRange = SysQuery::findOrCreateRange(taskDataSource.queryBuildDataSource(), fieldNum(WHSImplementationProjectTasks, Project));
            projectRange.value(SysQuery::value(WHSImplementationWorkspaceProject::findByName(_project).RecId));
            projectRange.status(RangeStatus::Hidden);

            taskDataSource.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeTaskDataSource</Name>
				<Source><![CDATA[
    private void initializeTaskDataSource(FormDataSource _taskDataSource)
    {
        if (_taskDataSource != null)
        {
            _taskDataSource.OnCreated += eventhandler(this.onTaskCreated);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openTaskMenuItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the menu item for the currently-selected row on a task form.
    /// </summary>
    internal void openTaskMenuItem()
    {
        WHSImplementationTask projectTask = taskForm.getTaskDataSource().cursor() as WHSImplementationTask;

        new MenuFunction(projectTask.MenuItem, projectTask.MenuItemType).run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>