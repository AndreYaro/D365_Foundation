<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesReport_WMSBOL_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesReport_WMSBOL_RU extends SalesReport_Invoice_RU implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDynamicData</Name>
				<Source><![CDATA[
        public TmpSalesPurchReportLine_RU parmDynamicData()
    {
        return dynamicData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHeader</Name>
				<Source><![CDATA[
        public TmpSalesPurchReportTable_RU parmHeader()
    {
        return header;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareDynamicLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prepairs report line.
    /// </summary>
    protected void prepareDynamicLine()
    {
        super();

        writeLine = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareReportHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Prepares report header and replaces consignee and consignor, cust and vend codes if invoice is credit note.
    /// </summary>
    protected void prepareReportHeader()
    {
        super();

        if (invoiceJour.creditNote())
        {
            str tmpStr = header.ConsigneeBankAddress;
            header.ConsigneeBankAddress = header.ConsignorBankAddress;
            header.ConsignorBankAddress = tmpStr;

            tmpStr = header.ConsigneeOKPO;
            header.ConsigneeOKPO = header.ConsignorOKPO;
            header.ConsignorOKPO = tmpStr;

            tmpStr = header.CustBankAddress;
            header.CustBankAddress = header.VendBankAddress;
            header.VendBankAddress = tmpStr;

            tmpStr = header.CustOKPO;
            header.CustOKPO = header.VendOKPO;
            header.VendOKPO = tmpStr;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferData</Name>
				<Source><![CDATA[
        protected void transferData()
    {
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>
