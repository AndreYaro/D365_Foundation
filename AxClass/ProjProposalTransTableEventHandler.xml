<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProposalTransTableEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class that handles the OnInsert and OnDeleted events of the Project Invoice Proposal related tables.
/// Proposal Id and Project Id related to these tables are stored in ProjProposalTransTable which is then used in Project Invoice Proposal listpage.
/// ProjProposalTransTable replaced the view ProjProposalTransUnion in the listpage for performance reasons.
/// </summary>
public class ProjProposalTransTableEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>projProposal_onInserted</Name>
				<Source><![CDATA[
    /// <summary>
    /// When OnInserted event is fired to any of the project invoice proposal tables, 
    /// the proposal Id and the related projecId is then stored in ProjProposalTransTable
    /// </summary>
    /// <param name = "sender">Buffer of the table that fires the OnInserted event.</param>
    /// <param name = "e">DataEventArgs argument from the OnInserted event.</param>
    [DataEventHandler(tableStr(ProjProposalEmpl), DataEventType::Inserted),
     DataEventHandler(tableStr(ProjProposalCost), DataEventType::Inserted),
     DataEventHandler(tableStr(ProjProposalOnAcc), DataEventType::Inserted),
     DataEventHandler(tableStr(ProjProposalRevenue), DataEventType::Inserted),
     DataEventHandler(tableStr(ProjProposalItem), DataEventType::Inserted)]
    public static void projProposal_onInserted(Common sender, DataEventArgs e)
    {
        ProjProposalTransTable projProposalTransTable;
        ProjProposalId proposalId = sender.(fieldName2Id(sender.TableId, 'ProposalId'));
        ProjIdBase projId;

        switch(sender.TableId)
        {
            case tablenum(ProjProposalEmpl):
                ProjProposalEmpl projProposalEmpl = sender as ProjProposalEmpl;
                ProjEmplTrans projEmplTrans;

                select firstOnly ProjId from projEmplTrans where projEmplTrans.TransId == projProposalEmpl.TransId;
                projId = projEmplTrans.ProjId;
                break;

            case tablenum(ProjProposalCost):
                ProjProposalCost projProposalCost = sender as ProjProposalCost;
                ProjCostTrans projCostTrans;

                select firstonly ProjId from projCostTrans where projCostTrans.TransId == projProposalCost.TransId;
                projId = projCostTrans.ProjId;
                break;

            case tablenum(ProjProposalOnAcc):
                ProjProposalOnAcc projProposalOnAcc = sender as ProjProposalOnAcc;
                ProjOnAccTrans projOnAccTrans;

                select firstonly ProjId from projOnAccTrans where projOnAccTrans.TransId == projProposalOnAcc.TransId;
                projId = projOnAccTrans.ProjId;
                break;

            case tablenum(ProjProposalRevenue):
                ProjProposalRevenue projProposalRevenue = sender as ProjProposalRevenue;
                ProjRevenueTrans projRevenueTrans;

                select firstonly ProjId from projRevenueTrans where projRevenueTrans.TransId == projProposalRevenue.TransId;
                projId = projRevenueTrans.ProjId;
                break;

            case tablenum(ProjProposalItem):
                ProjProposalItem projProposalItem = sender as ProjProposalItem;

                if (projProposalItem.ProjTransId)
                {
                    ProjItemTrans  projItemTrans ;
                    select firstOnly ProjId from projItemTrans where projItemTrans.ProjTransId == projProposalItem.ProjTransId;
                    projId = projItemTrans.ProjId;
                }
                
                // A SO-based item transaction may have a ProjTransId, but may not have the corresponding projItemTrans
                // so the above logic would miss it
                if (!projId) 
                {
                    SalesLine salesLine;
                    select firstonly ProjId from salesLine where salesLine.InventTransId == projProposalItem.InventTransId;
                    projId = salesLine.ProjId;
                }
                break;
        }

        if (proposalId && projId)
        {
            ProjProposalTransTable::insertDataFromProposalTables(proposalId, projId);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>