<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailEnableSelectingOrgHierarchyForChannelReportingFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailEnableSelectingOrgHierarchyForChannelReportingFlight</c> class.
/// When it is enabled, when selecting channel for retail reporting purpose,
///     if the hierarchy selector on retail hierarchy tree form is visible and a non-default hierarchy is selected, use the selected hierarchy;
///     otherwise use the default hierarchy for result reporting purpose.
/// When it is disabled, always use the default hierarchy to select channel node for retail reporting purpose.
/// </summary>
internal final class RetailEnableSelectingOrgHierarchyForChannelReportingFlight extends Flight
{
    static private RetailEnableSelectingOrgHierarchyForChannelReportingFlight singleton = new RetailEnableSelectingOrgHierarchyForChannelReportingFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>RetailEnableSelectingOrgHierarchyForChannelReportingFlight</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    static internal RetailEnableSelectingOrgHierarchyForChannelReportingFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>