<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ConfDefinitionBuilder_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>ConfDefinitionBuilder_BR</c> is the basis for building the query for configurator and
/// Inserting records in the configurator setup table ConfDefinitions_BR based on the fields query passed in to the method.
/// </summary>
class ConfDefinitionBuilder_BR
{
    ConfTable_BR confTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildDefinition</Name>
				<Source><![CDATA[
        private void buildDefinition()
    {
        Query   query;

        if (!confTable.QueryTitle)
        {
            throw error("@GLS223811");
        }

        try
        {
            query = new Query(confTable.QueryTitle);
        }
        catch
        {
            throw error(strFmt("@GLS223820", confTable.QueryTitle));
        }

        this.deletePreviousDefinition();
        this.parseQuery(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deletePreviousDefinition</Name>
				<Source><![CDATA[
        private void deletePreviousDefinition()
    {
        ConfTableSelection_BR   confTableSelection;
        ConfDefinitions_BR      confDefinitions;

        delete_from confTableSelection
            where confTableSelection.ConfGroupId == confTable.ConfGroupId;

        delete_from confDefinitions
            where confDefinitions.ConfGroupId == confTable.ConfGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>ConfTable</c> table.
    /// </summary>
    /// <param name="_confTable">
    /// Table buffer ConfTable to initialize.
    /// </param>
    protected void new(ConfTable_BR  _confTable)
    {
        confTable = _confTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts records in configurator setup table ConfDefinitions_BR based on the fields query passed in to the method.
    /// </summary>
    /// <param name="_query">
    /// The query being passed into the method.
    /// </param>
    private void parseFields(Query _query)
    {
        ConfDefinitions_BR      confDefinitions;
        QueryBuildDataSource    qbds;
        int                     dataSourceCount     = _query.dataSourceCount();
        QueryBuildFieldList     qbfl;
        int                     i, fieldIndex, fieldId;

        for (i = 1; i <= dataSourceCount; i++)
        {
            qbds = _query.dataSourceNo(i);

            qbfl = qbds.fields();

            for (fieldIndex = 1; fieldIndex <= qbfl.fieldCount(); fieldIndex++)
            {
                fieldId = qbfl.field(fieldIndex);

                confDefinitions.clear();
                confDefinitions.initValue();
                confDefinitions.ConfGroupId = confTable.ConfGroupId;
                confDefinitions.FieldName   = fieldId2name(qbds.table(), fieldId);
                confDefinitions.SortingNumber = fieldIndex;
                confDefinitions.TableName   = tableId2name(qbds.table());

                confDefinitions.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls methods to insert records in configurator setup tables based on the query passed in to the method.
    /// </summary>
    /// <param name="_query">
    /// The query passed into the method.
    /// </param>
    protected void parseQuery(Query _query)
    {
        this.parseTables(_query);
        this.parseFields(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseTables</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts records in configurator setup table ConfTableSelection_BR based on the fields query passed in to the method.
    /// </summary>
    /// <param name="_query">
    /// The query passed into the method.
    /// </param>
    private void parseTables(Query _query)
    {
        QueryBuildDataSource    qbds;
        int                     dataSourceCount     = _query.dataSourceCount();
        int                     i;
        ConfTableSelection_BR   confTableSelection;

        for (i = 1; i <= dataSourceCount; i++)
        {
            qbds = _query.dataSourceNo(i);

            confTableSelection.clear();
            confTableSelection.initValue();
            confTableSelection.ConfGroupId = confTable.ConfGroupId;
            confTableSelection.DataSourceNumber = i;
            confTableSelection.TableName = tableId2Name(qbds.table());

            if (i != 1)
            {
                confTableSelection.RelatedTo = tableId2Name(qbds.parentDataSource().table());
            }

            confTableSelection.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildForConfTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the Configurator definition builder object and builds the query.
    /// </summary>
    /// <param name="_confTable">
    /// Table buffer ConfTable_BR.
    /// </param>
    /// <returns>
    /// Instance of the object created.
    /// </returns>
    public static ConfDefinitionBuilder_BR buildForConfTable(ConfTable_BR _confTable)
    {
        ConfDefinitionBuilder_BR confDefinitionBuilder;

        confDefinitionBuilder = new ConfDefinitionBuilder_BR(_confTable);

        confDefinitionBuilder.buildDefinition();

        return confDefinitionBuilder;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>