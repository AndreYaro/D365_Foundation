<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetBalanceReportingDimensionDataSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BudgetBalanceReportingDimensionDataSource
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addLedgerDimensionReportingDimensionFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add BudgetBalanceReportingDimensionReference into a query with exists join 
    /// and filters on FocusDimensionHierarchy and ReportingDimension.
    /// </summary>
    /// <param name = "_dataSource">Query for BudgetBalanceReportingDimensionReference to be added</param>
    /// <param name = "_fieldNumber">Field to be used for link</param>
    /// <param name = "_reportingDimensions">A record of GeneralLedgerBalanceReportingDimension to be used for filters</param>
    [Hookable(false)]
    public static void addLedgerDimensionReportingDimensionFilter(
        QueryBuildDataSource _dataSource,
        FieldId _fieldNumber,
        GeneralLedgerBalanceReportingDimension _reportingDimensions)
    {
        QueryBuildDataSource reportingDimensionLink = _dataSource.addDataSource(tableNum(BudgetBalanceReportingDimensionReference));
        reportingDimensionLink.joinMode(JoinMode::ExistsJoin);
        reportingDimensionLink.addLink(_fieldNumber, fieldNum(BudgetBalanceReportingDimensionReference, BudgetLedgerDimension));

        QueryBuildRange hierarchyRange = reportingDimensionLink.addRange(fieldnum(BudgetBalanceReportingDimensionReference, FocusDimensionHierarchy));
        hierarchyRange.value(SysQuery::value(_reportingDimensions.FocusDimensionHierarchy));

        QueryBuildRange valueRange = reportingDimensionLink.addRange(fieldnum(BudgetBalanceReportingDimensionReference, ReportingDimension));
        valueRange.value(SysQuery::value(_reportingDimensions.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLedgerDimensionReportingDimensionDataSourceLink</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add BudgetBalanceReportingDimensionReference and GeneralLedgerBalanceReportingDimension into a query with inner join
    /// and filters on FocusDimensionHierarchy.
    /// </summary>
    /// <param name = "_dataSource">Query for BudgetBalanceReportingDimensionReference and GeneralLedgerBalanceReportingDimension to be added</param>
    /// <param name = "_fieldNumber">Field to be used for link</param>
    /// <param name = "_dimensionHierarchy">A record of DimensionHierarchy to be used for a filter</param>
    [Hookable(false)]
    public static void addLedgerDimensionReportingDimensionDataSourceLink(
        QueryBuildDataSource _dataSource,
        FieldId _fieldNumber,
        DimensionHierarchy _dimensionHierarchy)
    {
        QueryBuildDataSource reportingDimensionLink = _dataSource.addDataSource(tableNum(BudgetBalanceReportingDimensionReference));
        reportingDimensionLink.joinMode(JoinMode::InnerJoin);
        reportingDimensionLink.addLink(_fieldNumber, fieldNum(BudgetBalanceReportingDimensionReference, BudgetLedgerDimension));

        QueryBuildRange hierarchyRange = reportingDimensionLink.addRange(fieldnum(BudgetBalanceReportingDimensionReference, FocusDimensionHierarchy));
        hierarchyRange.value(SysQuery::value(_dimensionHierarchy.RecId));

        QueryBuildDataSource reportingDimensionsDS = reportingDimensionLink.addDataSource(tableNum(GeneralLedgerBalanceReportingDimension));
        reportingDimensionsDS.joinMode(JoinMode::InnerJoin);
        reportingDimensionsDS.addLink(fieldNum(BudgetBalanceReportingDimensionReference, ReportingDimension), fieldNum(GeneralLedgerBalanceReportingDimension, RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportingDimensionValueFieldId</Name>
				<Source><![CDATA[
    internal static FieldId getReportingDimensionValueFieldId(TableId _tableId, Level _level)
    {
        return fieldName2Id(
            _tableId,
            BudgetBalanceReportingDimensionDataSource::getReportingDimensionValueFieldName(_level));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportingDimensionValueFieldName</Name>
				<Source><![CDATA[
    internal static FieldName getReportingDimensionValueFieldName(Level _level)
    {
        return strFmt('%1%2', BudgetBalanceConstants::DimensionValueColumnPrefix, _level);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportingDimensionNameFieldName</Name>
				<Source><![CDATA[
    internal static FieldName getReportingDimensionNameFieldName(Level _level)
    {
        return strFmt('%1%2', BudgetBalanceConstants::DimensionNameColumnPrefix, _level);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLevelFromDimensionHierarchyLevel</Name>
				<Source><![CDATA[
    internal static Level getLevelFromDimensionHierarchyLevel(DimensionHierarchy _dimensionHierarchy, DimensionAttributeType _dimensionAttributeType)
    {
        DimensionHierarchyLevel dimensionHierarchyLevel;

        select firstonly Level from dimensionHierarchyLevel
            where dimensionHierarchyLevel.DimensionHierarchy == _dimensionHierarchy.RecId
                && dimensionHierarchyLevel.DimensionAttribute == DimensionAttribute::getWellKnownDimensionAttribute(_dimensionAttributeType);

        return dimensionHierarchyLevel.Level;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>