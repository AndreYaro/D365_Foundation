<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DefaultDimensionDefaultingStrategy</Name>
	<SourceCode>
		<Declaration><![CDATA[
using RunTimeEventSource = Microsoft.Dynamics.ApplicationPlatform.XppServices.Instrumentation.XppRuntimeEventSource;

/// <summary>
/// The <c>DefaultDimensionDefaultingStrategy</c> class is the base class responsible for defaulting dimension.
/// </summary>
abstract public class DefaultDimensionDefaultingStrategy
{
    protected DefaultDimensionDefaultingDimensionICollection defaultDimensionCollection;
    private DefaultDimensionDefaultingDimensionTarget target;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the default dimension.
    /// </summary>
    /// <returns>The default dimension.</returns>
    abstract protected DimensionDefault createDefaultDimension()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the default dimension.
    /// </summary>
    /// <returns>The default dimension.</returns>
    [Hookable(false)]
    public final DimensionDefault getDefaultDimension()
    {
        DimensionDefault defaultDimension = this.createDefaultDimension();

        this.validateDefaultDimension(defaultDimension);

        return defaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the default dimension.
    /// </summary>
    /// <param name = "_defaultDimension">The default dimension.</param>
    protected internal void validateDefaultDimension(DimensionDefault _defaultDimension)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTargetTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the target table ID.
    /// </summary>
    /// <returns>The target table ID.</returns>
    protected TableId getTargetTableId()
    {
        return target.getTargetTableId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the default dimension defaulting strategy.
    /// </summary>
    /// <param name = "_target">The target for which the default dimension value should be defaulted.</param>
    /// <param name = "_defaultDimensionCollection">A collection of dimension default sources.</param>
    protected void initialize(
        DefaultDimensionDefaultingDimensionTarget       _target,
        DefaultDimensionDefaultingDimensionICollection  _defaultDimensionCollection)
    {
        defaultDimensionCollection = _defaultDimensionCollection;
        target = _target;

        RunTimeEventSource::EventWriteInfoLogMark(Exception::Info, this.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final str toString()
    {
        return strFmt('DefaultDimensionDefaultingStrategy: %1, %2, %3', classId2Name(classIdGet(this)), target.toString(), defaultDimensionCollection.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCopy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>DefaultDimensionDefaultingStrategy</c> class using the dimension copy strategy.
    /// </summary>
    /// <param name = "_target">The target for which the default dimension value should be defaulted.</param>
    /// <param name = "_dimension">The default dimension that should be copied.</param>
    /// <param name = "_dimensionCopy">A <c>DimensionCopy</c> object used when default dimension is copied.</param>
    /// <returns>An instance of the <c>DefaultDimensionDefaultingStrategy</c> class.</returns>
    [Hookable(false)]
    public static DefaultDimensionDefaultingStrategy newCopy(
        DefaultDimensionDefaultingDimensionTarget   _target,
        DefaultDimensionDefaultingDimensionISource  _dimension,
        DimensionCopy                               _dimensionCopy)
    {
        DefaultDimensionDefaultingStrategyCopy strategy = DefaultDimensionDefaultingStrategyCopy::newCopy(_dimensionCopy);

        strategy.initialize(_target,
            DefaultDimensionDefaultingDimensionCollection::construct()
                .add(_dimension));
        
        return strategy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMerge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>DefaultDimensionDefaultingStrategy</c> class using the dimension merge strategy.
    /// </summary>
    /// <param name = "_target">The target for which the default dimension value should be defaulted.</param>
    /// <param name = "_defaultDimensionCollection">A collection of dimension default sources.</param>
    /// <param name = "_dimensionMerge">A <c>DimensionMerge</c> object used when default dimensions are merged.</param>
    /// <returns>An instance of the <c>DefaultDimensionDefaultingStrategy</c> class.</returns>
    [Hookable(false)]
    public static DefaultDimensionDefaultingStrategy newMerge(
        DefaultDimensionDefaultingDimensionTarget       _target,
        DefaultDimensionDefaultingDimensionCollection   _defaultDimensionCollection,
        DimensionMerge                                  _dimensionMerge)
    {
        DefaultDimensionDefaultingStrategyMerge strategy = DefaultDimensionDefaultingStrategyMerge::newMerge(_dimensionMerge);

        strategy.initialize(_target, _defaultDimensionCollection);
        
        return strategy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newServiceMerge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>DefaultDimensionDefaultingStrategy</c> class using the dimension service merge strategy.
    /// </summary>
    /// <param name = "_target">The target for which the default dimension value should be defaulted.</param>
    /// <param name = "_defaultDimensionCollection">A collection of dimension default sources.</param>
    /// <returns>An instance of the <c>DefaultDimensionDefaultingStrategy</c> class.</returns>
    [Hookable(false)]
    public static DefaultDimensionDefaultingStrategy newServiceMerge(
        DefaultDimensionDefaultingDimensionTarget       _target,
        DefaultDimensionDefaultingDimensionCollection   _defaultDimensionCollection)
    {
        DefaultDimensionDefaultingStrategyServiceMerge strategy = DefaultDimensionDefaultingStrategyServiceMerge::construct();

        strategy.initialize(_target, _defaultDimensionCollection);

        return strategy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDefaultingEngine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>DefaultDimensionDefaultingStrategy</c> class using the ledger defaulting engine strategy.
    /// </summary>
    /// <param name = "_target">The target for which the default dimension value should be defaulted.</param>
    /// <param name = "_defaultDimensionCollection">A collection of dimension default sources.</param>
    /// <returns>An instance of the <c>DefaultDimensionDefaultingStrategy</c> class.</returns>
    [Hookable(false)]
    public static DefaultDimensionDefaultingStrategy newDefaultingEngine(
        DefaultDimensionDefaultingDimensionTarget       _target,
        DefaultDimensionDefaultingDimensionCollection   _defaultDimensionCollection)
    {
        DefaultDimensionDefaultingStrategyDefaultingEngine strategy = DefaultDimensionDefaultingStrategyDefaultingEngine::construct();

        strategy.initialize(_target, _defaultDimensionCollection);

        return strategy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>