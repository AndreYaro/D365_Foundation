<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResReleasedDistinctProductCDSEntityRecordIdSelectorEcoResProductTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

[ExportMetadata(identifierStr(TableName), tableStr(EcoResProductTranslation))]
[ExportMetadata(identifierStr(EntityName), dataentityviewstr(EcoResReleasedDistinctProductCDSEntity))]
[Export(identifierstr(Dynamics.AX.Application.IBusinessEventsTableToEntityRecordIdSelector))]
public final class EcoResReleasedDistinctProductCDSEntityRecordIdSelectorEcoResProductTranslation implements IBusinessEventsTableToEntityRecordIdSelector
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityRecordIdsImpactedByTableChange</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public List getEntityRecordIdsImpactedByTableChange(BusinessEventsDefinition _eventDefinition, BusinessEventsActions _changeType, RecId _changedRecordId)
    {
        List impactedRecIds = new List(Types::Int64);

        InventDistinctProduct inventDistinctProduct;
        EcoResProductTranslation ecoResProductTranslation;

        if (_eventDefinition.DataSourceName == dataEntityDataSourceStr(EcoResReleasedDistinctProductCDSEntity, EcoResProductTranslationToSystemLanguage))
        {
            while select RecId from inventDistinctProduct
                exists join ecoResProductTranslation
                where inventDistinctProduct.Product == ecoResProductTranslation.Product
                    && ecoResProductTranslation.LanguageId == SystemParameters::systemLanguageId()
                    && ecoResProductTranslation.RecId == _changedRecordId
                {
                    impactedRecIds.addEnd(inventDistinctProduct.RecId);
                }
        }
        else if (_eventDefinition.DataSourceName == dataEntityDataSourceStr(EcoResReleasedDistinctProductCDSEntity, EcoResProductMasterTranslationToSystemLanguage))
        {
            InventTable inventTable;

            while select RecId from inventDistinctProduct
                exists join inventTable
                exists join ecoResProductTranslation
                where inventTable.ItemId == inventDistinctProduct.ItemId
                    && inventTable.Product == ecoResProductTranslation.Product
                    && ecoResProductTranslation.LanguageId == SystemParameters::systemLanguageId()
                    && ecoResProductTranslation.RecId == _changedRecordId
            {
                impactedRecIds.addEnd(inventDistinctProduct.RecId);
            }
        }
        else
        {
            return null;
        }
        
        return impactedRecIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>