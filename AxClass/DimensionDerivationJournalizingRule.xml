<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionDerivationJournalizingRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>DimensionDerivationJournalizingRule</c> class is a ledger dimension derivation rule that is
///    used in the source document journalizing process.
/// </summary>
[
SourceDocumentClassExtensionAttribute(classStr(AccountingJournalizingRule))
]
class DimensionDerivationJournalizingRule extends DimensionDerivationRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populateDimAllocList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Populates the dimension allocation list.
    /// </summary>
    protected void populateDimAllocList()
    {
        boolean initialized;

        initialized = this.populateDimAllocListFromExtension();

        if (!initialized)
        {
            this.populateDimAllocListFromDefault();
        }

        this.modifyDimAllocListFromExtension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineIsOppositeAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the account is an opposite account, contrary to a primary account.
    /// </summary>
    /// <param name="_reclassify">
    /// Whether to reclassify the account.
    /// </param>
    /// <param name="_mainAccountDimension">
    /// The main account dimension.
    /// </param>
    /// <returns>
    /// true if opposite account; otherwise false.
    /// </returns>
    protected boolean determineIsOppositeAccount(
        boolean _reclassify,
        MainAccountDimension _mainAccountDimension)
    {
        boolean isOppositeAccount;

        // If it is a reclassification scenario, revert to base,
        // otherwise it is a journalization rule so primary side is considered
        if (_reclassify)
        {
            isOppositeAccount = super(_reclassify, _mainAccountDimension);
        }
        else
        {
            isOppositeAccount = true;
        }

        return isOppositeAccount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>