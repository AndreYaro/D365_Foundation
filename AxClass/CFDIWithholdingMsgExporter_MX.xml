<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFDIWithholdingMsgExporter_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Coordinates the process of retrieving the messages related to CFDI witholding that needs to be processed and
/// sends them to the webservices.
/// </summary>
public class CFDIWithholdingMsgExporter_MX extends EInvoiceMsgExporter_MX implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getMessagesToBeSent</Name>
				<Source><![CDATA[
    protected EInvoiceJour_MX getMessagesToBeSent(EInvoiceCFDIMessageType_MX _messageType = EInvoiceCFDIMessageType_MX::Submit)
    {
        EInvoiceJour_MX eInvoiceJour;

        select eInvoiceJour
            where eInvoiceJour.CFDIMessageStatus == EInvoiceCFDIMessageStatus_MX::Waiting
               && eInvoiceJour.CFDIMessageType == _messageType
               && eInvoiceJour.CFDIDocType == CFDIDocType_MX::Withholding;

        return eInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRun</Name>
				<Source><![CDATA[
    protected boolean validateRun()
    {
        if (!EinvoiceCFDIParameters_MX::isCFDIWithholdingEnabled())
        {
            throw error("@MexicoCFDIWithholding:CFDIWithholdingNotEnabled_error");
        }

        return super();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>