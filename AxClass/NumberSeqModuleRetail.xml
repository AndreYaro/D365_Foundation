<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleRetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>NumberSeqModuleRetail</c> class is used to configure all the number sequences in the system.
/// </summary>
public class NumberSeqModuleRetail extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures all the data types related to the Retail that are in use by the module.
    /// </summary>
    protected void loadModule()
    {
        List dataTypes = this.getNumberSequenceDataTypes();

        ListEnumerator enumerator = dataTypes.getEnumerator();
        while (enumerator.moveNext())
        {
            NumberSeqDataType dataType = enumerator.current();
            this.create(dataType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberSequenceDataTypes</Name>
				<Source><![CDATA[
    [HookableAttribute(true)]
    private List getNumberSequenceDataTypes()
    {
        List result = new List(Types::AnyType);

        // BuyersPushId
        NumberSeqDataType buyersPushIdDataType = NumberSeqDataType::construct();
        buyersPushIdDataType.parmdataTypeId(extendedtypenum(RetailBuyersPushId));
        buyersPushIdDataType.parmreferenceHelp(literalStr("@RET824"));
        buyersPushIdDataType.parmWizardIsContinuous(false);
        buyersPushIdDataType.parmWizardfetchAheadQty(10);
        buyersPushIdDataType.parmWizardIsManual(NoYes::No);
        buyersPushIdDataType.parmWizardIsChangeDownAllowed(NoYes::No);
        buyersPushIdDataType.parmWizardIsChangeUpAllowed(NoYes::No);
        buyersPushIdDataType.parmsortField(1);
        buyersPushIdDataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        result.addEnd(buyersPushIdDataType);

        // ImportJournalId
        NumberSeqDataType importJournalIdDataType = NumberSeqDataType::construct();
        importJournalIdDataType.parmdataTypeId(extendedtypenum(RetailImportJournalId));
        importJournalIdDataType.parmreferenceHelp(literalStr("@RET924"));
        importJournalIdDataType.parmWizardIsContinuous(false);
        importJournalIdDataType.parmWizardfetchAheadQty(10);
        importJournalIdDataType.parmWizardIsManual(NoYes::No);
        importJournalIdDataType.parmWizardIsChangeDownAllowed(NoYes::No);
        importJournalIdDataType.parmWizardIsChangeUpAllowed(NoYes::No);
        importJournalIdDataType.parmsortField(2);
        importJournalIdDataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        result.addEnd(importJournalIdDataType);

        //RetailReturnPolicyNumber
        NumberSeqDataType retailReturnPolicyNumberDataType = NumberSeqDataType::construct();
        retailReturnPolicyNumberDataType.parmdataTypeId(extendedtypenum(RetailReturnPolicyNumber));
        retailReturnPolicyNumberDataType.parmreferenceHelp(literalStr("@REX4160615"));
        retailReturnPolicyNumberDataType.parmWizardIsContinuous(false);
        retailReturnPolicyNumberDataType.parmWizardfetchAheadQty(10);
        retailReturnPolicyNumberDataType.parmWizardIsManual(NoYes::No);
        retailReturnPolicyNumberDataType.parmWizardIsChangeDownAllowed(NoYes::No);
        retailReturnPolicyNumberDataType.parmWizardIsChangeUpAllowed(NoYes::No);
        retailReturnPolicyNumberDataType.parmsortField(3);
        retailReturnPolicyNumberDataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        result.addEnd(retailReturnPolicyNumberDataType);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence area.
    /// </summary>
    /// <returns>
    /// Area that the current application object is attached to.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::RetailEx1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleRetail), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>