<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>wmsPickingRouteFinish</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class wmsPickingRouteFinish extends RunBase
{
    WMSPickingRouteID       wmsPickingRouteID;

    DialogField             pickingRouteIdField;

    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
         wMSPickingRouteId
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase dialog = super();

        pickingRouteIdField = dialog.addField(extendedTypeStr(WMSPickingRouteID));
        pickingRouteIdField.value(wmsPickingRouteID);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        wmsPickingRouteID   = pickingRouteIdField.value();
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWMSPickingRouteId</Name>
				<Source><![CDATA[
    public WMSPickingRouteID parmWMSPickingRouteId(WMSPickingRouteID _wmsPickingRouteID = wmsPickingRouteID)
    {
        wmsPickingRouteID = _wmsPickingRouteID;
        return wmsPickingRouteID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that performs the actual job of the class.
    /// </summary>
    public void run()
    {
        #OCCRetryCount
        WMSPickingRoute wmsPickingRoute;

        try
        {
            ttsbegin;

            wmsPickingRoute = WMSPickingRoute::find(wmsPickingRouteID, true);

            this.validate(null, wmsPickingRoute);

            wmsPickingRoute.finish();

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer     version     = conPeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion   :
                [version,#CurrentList] = packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null, WMSPickingRoute wmsPickingRoute = null)
    {
        if (!wmsPickingRoute)
        {
            wmsPickingRoute  = WMSPickingRoute::find(wmsPickingRouteID);
        }

        if (!wmsPickingRoute)
        {
            throw(error(strFmt("@SYS51116",wmsPickingRouteID)));
        }

        if (wmsPickingRoute.ExpeditionStatus != WMSExpeditionStatus::Activated &&
            wmsPickingRoute.ExpeditionStatus != WMSExpeditionStatus::Started)
        {
            throw(error(strFmt("@SYS50574", wmsPickingRoute.PickingRouteID)));
        }

        return super(calledFrom);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS50573";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        WMSPickingRouteFinish   wmsPickingRouteFinish;
        WMSPickingRoute         wmsPickingRoute;

        if (args && args.dataset())
        {
            switch (args.record().TableId)
            {
                case (tableNum(WMSPickingRoute)) :
                    wmsPickingRoute= args.record();

                    wmsPickingRouteFinish = new WMSPickingRouteFinish();
                    wmsPickingRouteFinish.getLast();
                    wmsPickingRouteFinish.parmWMSPickingRouteId(wmsPickingRoute.PickingRouteID);
                    if (wmsPickingRouteFinish.prompt())
                    {
                        wmsPickingRouteFinish.runOperation();

                        wmsPickingRoute= args.record();
                        if (FormDataUtil::isFormDataSource(wmsPickingRoute))
                        {
                            FormDataUtil::getFormDataSource(wmsPickingRoute).reread();
                            FormDataUtil::getFormDataSource(wmsPickingRoute).refresh();
                        }
                    }
                    break;
                default:
                    throw error(strFmt("@SYS19306",funcName()));
            }
        }
        else
        {
            wmsPickingRouteFinish = new WMSPickingRouteFinish();
            if (wmsPickingRouteFinish.prompt())
            {
                wmsPickingRouteFinish.runOperation();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>