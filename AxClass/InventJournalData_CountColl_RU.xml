<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalData_CountColl_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class InventJournalData_CountColl_RU extends InventJournalData_RU
{
    #InventJournalReport_CountColl_RU
    #define.emptyReal(0.00)

    Qty                 qtyIssueTotal,
                        qtyLossTotal;
    CostAmount          costIssueTotal,
                        costLossTotal;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clearValues</Name>
				<Source><![CDATA[
    protected XmlElement clearValues(XmlElement _xmlElement)
    {
        _xmlElement.setAttribute(#QtyPostIssue,           '');
        _xmlElement.setAttribute(#CostPostIssue,          '');
        _xmlElement.setAttribute(#LedgerAccountPostIssue, '');
        _xmlElement.setAttribute(#QtyPostLoss1,           '');
        _xmlElement.setAttribute(#CostPostLoss1,          '');
        return _xmlElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines cost amount.
    /// </summary>
    /// <param name="_inventJournalTrans">
    /// <c>InventJournalTrans</c> record.
    /// </param>
    /// <returns>
    /// Cost amount.
    /// </returns>
    abstract protected CostAmount costAmount(InventJournalTrans _inventJournalTrans)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createXML</Name>
				<Source><![CDATA[
    public XmlDocument createXML(InventJournalReportId_RU _reportId,
                                 JournalId                _journalId,
                                 TransDate                _transDate,
                                 OffSessionId_RU          _offsessionId)
    {
        InventJournalTrans  inventJournalTrans;
        TransDate           minInventoryDate,
                            maxInventoryDate = dateNull();
        int                 cnt;
        Set                 locationNameSet = new Set(Types::String);

        minInventoryDate = _transDate;

        qtyIssueTotal   = 0;
        qtyLossTotal    = 0;
        costIssueTotal  = 0;
        costLossTotal   = 0;

        while select inventJournalTrans
            where inventJournalTrans.JournalId == _journalId  &&
                  inventJournalTrans.Qty       != 0
        {
            this.setAddLocation(InventLocation::find(InventDim::find(inventJournalTrans.InventDimId).InventLocationId),
                                locationNameSet);

            if (maxInventoryDate < inventJournalTrans.TransDate)
            {
                maxInventoryDate = inventJournalTrans.TransDate;
            }

            if (minInventoryDate > inventJournalTrans.TransDate)
            {
                minInventoryDate = inventJournalTrans.TransDate;
            }
            cnt ++;

            this.initInventTableSection(cnt, inventJournalTrans);
            this.initRegradingSection(inventJournalTrans);
        }

        this.initPrologSection(_reportId,
                               _transDate,
                               _offsessionId,
                               this.setGet(locationNameSet),
                               minInventoryDate,
                               maxInventoryDate);

        this.initTotalsSection(_offsessionId,
                               qtyIssueTotal,
                               qtyLossTotal,
                               costIssueTotal,
                               costLossTotal);

        return xmlDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventTableSection</Name>
				<Source><![CDATA[
    private void initInventTableSection(LineNum            _lineNum,
                                        InventJournalTrans _inventJournalTrans)
    {
        XmlElement  xmlElement  = xmlDocument.createElement(#InventTableSection);
        InventTable inventTable = _inventJournalTrans.inventTable();

        xmlElement.setAttribute(#LineNum,          strFmt("@GLS106745", _lineNum));
        xmlElement.setAttribute(#ItemName,         _inventJournalTrans.itemName());
        xmlElement.setAttribute(#ItemId,           inventTable.ItemId);
        xmlElement.setAttribute(#CodeOkei,         UnitOfMeasure_RU::codeOKEI_RU(UnitOfMeasure::findBySymbol(inventTable.bomUnitId)));
        xmlElement.setAttribute(#BOMUnitId,        inventTable.inventUnitId());
        xmlElement.setAttribute(#ItemInventoryNum, '----');
        xmlElement.setAttribute(#ItemPassport,     '----');

        xmlElement.setAttribute(#QtyIssue,  strFmt("@GLS106745", #emptyReal));
        xmlElement.setAttribute(#CostIssue, strFmt("@GLS106745", #emptyReal));
        xmlElement.setAttribute(#QtyLoss,   strFmt("@GLS106745", #emptyReal));
        xmlElement.setAttribute(#CostLoss,  strFmt("@GLS106745", #emptyReal));

        CostAmount costAmount = this.costAmount(_inventJournalTrans);

        if (_inventJournalTrans.Qty > 0)
        {
            xmlElement.setAttribute(#QtyIssue,  strFmt("@GLS106745", _inventJournalTrans.Qty));
            xmlElement.setAttribute(#CostIssue, strFmt("@GLS106745", costAmount));
            qtyIssueTotal  += _inventJournalTrans.Qty;
            costIssueTotal += costAmount;
        }
        else
        {
            xmlElement.setAttribute(#QtyLoss,   strFmt("@GLS106745", abs(_inventJournalTrans.Qty)));
            xmlElement.setAttribute(#CostLoss , strFmt("@GLS106745", costAmount));
            qtyLossTotal   += abs(_inventJournalTrans.Qty);
            costLossTotal  += costAmount;
        }

        xmlElement.setAttribute(#QtyCorrectIssue,           '');
        xmlElement.setAttribute(#CostCorrectIssue,          '');
        xmlElement.setAttribute(#LedgerAccountCorrectIssue, '');
        xmlElement.setAttribute(#QtyCorrectLoss,            '');
        xmlElement.setAttribute(#CostCorrectLoss,           '');
        xmlElement.setAttribute(#LedgerAccountCorrectLoss,  '');

        xmlRootElement.appendChild(xmlElement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPrologSection</Name>
				<Source><![CDATA[
    private void initPrologSection(InventJournalReportId_RU _reportId,
                                   TransDate                _reportDate,
                                   OffSessionId_RU          _offsessionId,
                                   InventLocationName       _inventLocationName,
                                   TransDate                _minInventoryDate,
                                   TransDate                _maxInventoryDate)
    {
        XmlElement          xmlElement  = xmlDocument.createElement(#PrologSection);
        CompanyInfo         companyInfo = CompanyInfo::find();
        OfficialsTrans_RU   officialsTrans;

        xmlElement.setAttribute(#CompanyName,      companyInfo.name());
        xmlElement.setAttribute(#Department,       _inventLocationName);
        xmlElement.setAttribute(#OKPO,             CompanyInfoHelper::partyOKPOasOfDate_RU(companyInfo, _reportDate));
        xmlElement.setAttribute(#OKPD,             CompanyInfoHelper::partyOKDPasOfDate_RU(companyInfo, _reportDate));
        xmlElement.setAttribute(#OperationCode,    '');
        xmlElement.setAttribute(#MinInventoryDate, strFmt("@GLS106745", _minInventoryDate));
        xmlElement.setAttribute(#MaxInventoryDate, strFmt("@GLS106745", _maxInventoryDate));
        xmlElement.setAttribute(#DocumentNum,      _reportId);
        xmlElement.setAttribute(#DocumentDate,     strFmt("@GLS106745",_reportDate));

        xmlRootElement.appendChild(xmlElement);

        while select Title, Name from officialsTrans
            where officialsTrans.OffSessionId == _offsessionId &&
                  officialsTrans.ReportType   == offReportType &&
                  officialsTrans.Position     == OffPosition_RU::InCharge
        {
            xmlElement = xmlDocument.createElement(#InChargeSection);

            xmlElement.setAttribute(#InChargeName,  officialsTrans.Name);
            xmlElement.setAttribute(#InChargeTitle, officialsTrans.Title);

            xmlRootElement.appendChild(xmlElement);
        }

        xmlElement = xmlDocument.createElement(#TransDateSection);
        xmlElement.setAttribute(#TransDate, strFmt("@GLS106745",_reportDate));
        xmlRootElement.appendChild(xmlElement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRegradingSection</Name>
				<Source><![CDATA[
    abstract protected void initRegradingSection(InventJournalTrans _inventJournalTrans)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTotalsSection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes data for totals section of report
    /// </summary>
    /// <param name="_offsessionId">
    /// OfficialsSessionId report linked to
    /// </param>
    /// <param name="_qtyIssueTotal">
    /// Qty issue, total
    /// </param>
    /// <param name="_qtyLossTotal">
    /// Qty loss, total
    /// </param>
    /// <param name="_costIssueTotal">
    /// Cost amount of issue, total
    /// </param>
    /// <param name="_costLossTotal">
    /// Cost amount of loss, total
    /// </param>
    private void initTotalsSection(OffSessionId_RU _offsessionId,
                                   Qty             _qtyIssueTotal,
                                   Qty             _qtyLossTotal,
                                   CostAmount      _costIssueTotal,
                                   CostAmount      _costLossTotal)
    {
        XmlElement          xmlElement = xmlDocument.createElement(#TotalsSection);
        OfficialsTrans_RU   officialsTrans;

        xmlElement.setAttribute(#QtyIssueTotal,         strFmt("@GLS106745", _qtyIssueTotal));
        xmlElement.setAttribute(#CostIssueTotal,        strFmt("@GLS106745", _costIssueTotal));
        xmlElement.setAttribute(#QtyLossTotal,          strFmt("@GLS106745", _qtyLossTotal));
        xmlElement.setAttribute(#CostLossTotal,         strFmt("@GLS106745", _costLossTotal));
        xmlElement.setAttribute(#QtyCorrectIssueTotal,  '');
        xmlElement.setAttribute(#CostCorrectIssueTotal, '');
        xmlElement.setAttribute(#QtyCorrectLossTotal,   '');
        xmlElement.setAttribute(#CostCorrectLossTotal,  '');
        xmlElement.setAttribute(#QtyPostIssueTotal,     strFmt("@GLS106745", _qtyIssueTotal));
        xmlElement.setAttribute(#CostPostIssueTotal,    strFmt("@GLS106745", _costIssueTotal));
        xmlElement.setAttribute(#QtyPostLoss1Total,     strFmt("@GLS106745", _qtyLossTotal));
        xmlElement.setAttribute(#CostPostLoss1Total,    strFmt("@GLS106745", _costLossTotal));

        select firstonly Name from officialsTrans
            where officialsTrans.OffSessionId == _offsessionId &&
                  officialsTrans.ReportType   == offReportType &&
                  officialsTrans.Position     == OffPosition_RU::Accountant;

        xmlElement.setAttribute(#AccountantName, officialsTrans.Name);

        xmlRootElement.appendChild(xmlElement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        offReportType  = InventJournalReport_RU::inventJournalReportType2OffReportType(InventJournalReportType_RU::CountColl);

        xmlDocument    = XmlDocument::newBlank();
        xmlRootElement = xmlDocument.createElement(this.reportName());
        xmlDocument.appendChild(xmlRootElement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportName</Name>
				<Source><![CDATA[
    private reportName reportName()
    {
        return classStr(InventJournalReport_CountColl_RU);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
