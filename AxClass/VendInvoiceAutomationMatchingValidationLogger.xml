<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceAutomationMatchingValidationLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendInvoiceAutomationMatchingValidationLogger</c> class logs
/// automation matching validation of vendor invoices to product receipts results.
/// </summary>
internal final class VendInvoiceAutomationMatchingValidationLogger
{
    private ProcessExecutionId matchingValidationExecutionId;
    private ProcessScheduleWorkItem processScheduleWorkItem;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromProcessScheduleWorkItem</Name>
				<Source><![CDATA[
    internal static VendInvoiceAutomationMatchingValidationLogger newFromProcessScheduleWorkItem(ProcessScheduleWorkItem _processScheduleWorkItem)
    {
        VendInvoiceAutomationMatchingValidationLogger matchingValidationLogger =  new VendInvoiceAutomationMatchingValidationLogger();
        matchingValidationLogger.matchingValidationExecutionId = _processScheduleWorkItem.parmExecutionId();
        matchingValidationLogger.processScheduleWorkItem = _processScheduleWorkItem;

        return matchingValidationLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeInvoiceMatchingValidationSourceLink</Name>
				<Source><![CDATA[
    private ProcessExecutionSourceLinkItem initializeInvoiceMatchingValidationSourceLink()
    {
        // Initializes automatic invoice matching validation process automation details.
        ProcessExecutionSourceLinkItem sourceLinkItem = ProcessExecutionSourceLinkItem::construct();
        sourceLinkItem.parmExecutionId(matchingValidationExecutionId);
        sourceLinkItem.parmProcessScheduleSeriesPatternRecId(processScheduleWorkItem.parmProcessScheduleSeriesPatternRecId());
        sourceLinkItem.parmProcessScheduleOccurrenceRecId(processScheduleWorkItem.parmProcessScheduleOccurrenceRecId());
        
        // Assume matching validatiom will succeed until it fails
        sourceLinkItem.parmExecutionSourceStatus(ProcessExecutionSourceStatus::Success);
        sourceLinkItem.parmHeader("@AccountsPayable:MatchValidationProcessAutomation");
        sourceLinkItem.parmMessage("@AccountsPayable:MatchValidationProcessAutomationCompleted");
        sourceLinkItem.parmSourceRecId(0);
        sourceLinkItem.parmSourceTableId(0);
        
        return sourceLinkItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeMatchingValidationResultToProcessAutomationLogs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes automatic invoice matching validation process results to process automation logs.
    /// </summary>
    internal void writeMatchingValidationResultToProcessAutomationLogs()
    {
        ttsbegin;

        // Some batch maintenance required by process automation to ensure we persist a record of the batch task execution.
        RefRecId invoiceMatchingValidationSourceLinkRecId = ProcessExecutionSourceLink::insertSourceLink(this.initializeInvoiceMatchingValidationSourceLink()).RecId;

        // Writes message logs entry to process automation results.        
        ProcessExecutionMessageLogItem messageLogItem = ProcessExecutionMessageLogItem::construct();
        messageLogItem.parmProcessExecutionSourceLink(invoiceMatchingValidationSourceLinkRecId);
        messageLogItem.parmException(Exception::Info);
        messageLogItem.parmLabelId(literalStr("@AccountsPayable:MatchValidationProcessAutomationCompleted"));

        ProcessExecutionMessageLog::insertMessage(messageLogItem);
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>