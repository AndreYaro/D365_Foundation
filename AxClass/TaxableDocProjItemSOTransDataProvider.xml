<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxableDocProjItemSOTransDataProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data provider for Project - Sales line.
/// </summary>
public class TaxableDocProjItemSOTransDataProvider extends TaxableDocumentDataProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the query to load detail data for taxable document. And setup the row definitions.
    /// </summary>
    /// <returns>
    /// The query to load detail data for taxable document.
    /// </returns>
    /// <remarks>
    /// The row definitions must be setup here. It defines the mapping between row and data source,
    /// the child/parent relations between rows, and the row data provider class.
    /// </remarks>
    public Query buildQuery()
    {
        Query                   query;
        QueryBuildDataSource    projItemTransHeadDataSource;
        QueryBuildDataSource    projProposalJourDataSource;
        QueryBuildDataSource    projProposalItemTransLineDataSource;
        QueryBuildDataSource    salesLineDataSource;
        QueryBuildDataSource    markupTransDataSource;

        query = new Query();
        projItemTransHeadDataSource = query.addDataSource(tableNum(TaxEngineProjItemSOTransHeader));
        projItemTransHeadDataSource.addRange(fieldNum(TaxEngineProjItemSOTransHeader, RecId)).value(queryValue(rootTable.RecId));

        projProposalJourDataSource = projItemTransHeadDataSource.addDataSource(tableNum(ProjProposalJour));
        projProposalJourDataSource.joinMode(JoinMode::OuterJoin);
        projProposalJourDataSource.relations(true);

        projProposalItemTransLineDataSource = projProposalJourDataSource.addDataSource(tableNum(ProjProposalItem));
        projProposalItemTransLineDataSource.joinMode(JoinMode::OuterJoin);
        projProposalItemTransLineDataSource.relations(true);
        projProposalItemTransLineDataSource.addRange(fieldNum(ProjProposalItem,ItemType)).value(queryValue(ProjItemType::SalesOrder));

        salesLineDataSource = projProposalItemTransLineDataSource.addDataSource(tableNum(SalesLine));
        salesLineDataSource.joinMode(JoinMode::OuterJoin);
        salesLineDataSource.relations(true);

        markupTransDataSource = salesLineDataSource.addDataSource(tableNum(MarkupTrans));
        markupTransDataSource.joinMode(JoinMode::OuterJoin);
        markupTransDataSource.relations(true);

        rowDefinitions.empty();
        this.registerRow(projItemTransHeadDataSource.id(), 0, TaxEngineIntegrationConstants::Header, classStr(TaxableDocProjItemTransHeaderRowDP));
        this.registerRow(projProposalItemTransLineDataSource.id(), projItemTransHeadDataSource.id(), TaxEngineModelFieldsConstants::Lines, classStr(TaxableDocProjItemSOTransLineRowDP));
        this.registerRow(markupTransDataSource.id(), projProposalItemTransLineDataSource.id(), TaxEngineModelFieldsConstants::SubLines, classStr(TaxableDocMarkupTransRowDataProvider));

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>