<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanTaskLoggerInterface_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension methods for the <c>ReqDemPlanTaskLoggerInterface</c> interface.
/// </summary>
[ExtensionOf(classStr(ReqDemPlanTaskLoggerInterface))]
public final class ReqDemPlanTaskLoggerInterface_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>startMonitoredTask</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starts the task. The lifecycle of the task will be logged to telemetry.
    /// </summary>
    /// <param name = "_taskCode">Culture-agnostic code name of the task.</param>
    /// <param name = "_taskName">User-readable and translated name of the task.</param>
    /// <param name = "_taskDataAreaId">The ID of the company.</param>
    /// <remarks>
    /// The event will be logged to telemetry only if the logger
    /// implements the <c>ReqDemPlanIInstrumentedTaskLogger</c> interface.
    /// </remarks>
    public void startMonitoredTask(
        ReqDemPlanTaskCode _taskCode,
        ReqDemPlanTaskName  _taskName,
        DataAreaId _taskDataAreaId = '')
    {
        var instrumentedLogger = this as ReqDemPlanIInstrumentedTaskLogger;

        if (instrumentedLogger)
        {
            instrumentedLogger.startMonitoredTask(_taskCode, _taskName, _taskDataAreaId);
        }
        else
        {
            this.startTask(_taskName, _taskDataAreaId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendTaskDetailLogWithTelemetry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Appends the given message to the detailed log information for the current task and to the telemetry.
    /// </summary>
    /// <param name="_detailLog">
    /// The detailed logging information to log.
    /// </param>
    public void appendTaskDetailLogWithTelemetry(ReqDemPlanTaskDetailLog _detailLog)
    {
        var instrumentedLogger = this as ReqDemPlanTaskLogger;

        if (instrumentedLogger)
        {
            instrumentedLogger.appendTaskDetailLogWithTelemetry(_detailLog);
        }
        else
        {
            this.appendTaskDetailLog(_detailLog);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>