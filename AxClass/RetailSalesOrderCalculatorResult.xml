<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesOrderCalculatorResult</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Retail sales order calcuator result.
/// </summary>
class RetailSalesOrderCalculatorResult
{
    boolean needsRecalculateWholeOrder;
    InventTransId inventTransId;
    List discountLineList;
    List adjustmentLineList;
    RetailSalesPurchLineMap retailSalesQuotationLine;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
    needsRecalculateWholeOrder,
    inventTransId,
    discountLineListContainter,
    adjustmentLineListContainer,
    salesQuoteLineContainer
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addRetailSalesDiscountLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a retail sales discount line.
    /// </summary>
    /// <param name="_discountLine">
    /// Retail sales discount line.
    /// </param>
    public void addRetailSalesDiscountLine(RetailSalesQuotesDiscountLineMap _discountLine)
    {
        discountLineList.addEnd(_discountLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailSalesPriceAdjustmentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a retail retail price adjustment line.
    /// </summary>
    /// <param name="_priceAdjustmentLine">
    /// Retail sales price adjustment line.
    /// </param>
    public void addRetailSalesPriceAdjustmentLine(RetailSalesPriceAdjustmentLineMap _priceAdjustmentLine)
    {
        adjustmentLineList.addEnd(_priceAdjustmentLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailSalesDiscountLineList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the list of retail sales discount lines.
    /// </summary>
    /// <returns>
    /// A list of retail sales discount lines.
    /// </returns>
    public List getRetailSalesDiscountLineList()
    {
        return discountLineList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailSalesPriceAdjustmentLineList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the list of retail sales price adjustment lines.
    /// </summary>
    /// <returns>
    /// A list of retail sales price adjustment lines.
    /// </returns>
    public List getRetailSalesPriceAdjustmentLineList()
    {
        return adjustmentLineList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new()
    {
        discountLineList   = new List(Types::Record);
        adjustmentLineList = new List(Types::Record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        container discountLineListContainter, salesQuoteLineContainer, adjustmentLineListContainer;
        RetailSalesQuotesDiscountLineMap discountLine;
        RetailSalesPriceAdjustmentLineMap adjustmentLine;

        ListEnumerator listEn = discountLineList.getEnumerator();
        ListEnumerator adjustmentEn = adjustmentLineList.getEnumerator();

        salesQuoteLineContainer = buf2Con(retailSalesQuotationLine);

        while (listEn.moveNext())
        {
            discountLine = listEn.current();

            discountLineListContainter += [buf2Con(discountLine)];
        }

        while (adjustmentEn.moveNext())
        {
            adjustmentLine = adjustmentEn.current();

            adjustmentLineListContainer += [buf2Con(adjustmentLine)];
        }

        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
        public InventTransId parmInventTransId(InventTransId _inventTransId = inventTransId)
    {
        inventTransId = _inventTransId;

        return inventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNeedsRecalculateWholeOrder</Name>
				<Source><![CDATA[
        public boolean parmNeedsRecalculateWholeOrder(boolean _needsRecalculateWholeOrder = needsRecalculateWholeOrder)
    {
        needsRecalculateWholeOrder = _needsRecalculateWholeOrder;
        return needsRecalculateWholeOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailSalesQuotationLine</Name>
				<Source><![CDATA[
        public RetailSalesPurchLineMap parmRetailSalesQuotationLine(RetailSalesPurchLineMap _retailSalesQuotationLine = retailSalesQuotationLine)
    {
        retailSalesQuotationLine = _retailSalesQuotationLine;

        return retailSalesQuotationLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container _packedClass)
    {
        container discountLineListContainter, discountLineContainer, adjustmentLineListContainer, adjustmentLineContainer;
        container salesQuoteLineContainer;
        int discountLineCount, adjustmentLineCount, i;
        RetailSalesQuotesDiscountLineMap discountLine;
        RetailSalesPriceAdjustmentLineMap adjustmentLine;
        Integer     version     = conpeek(_packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = _packedClass;
                break;
            default :
                return false;
        }

        retailSalesQuotationLine = con2Buf(salesQuoteLineContainer);

        discountLineCount   = conLen(discountLineListContainter);
        adjustmentLineCount = conLen(adjustmentLineListContainer);

        discountLineList = new List(Types::Record);
        for (i = 1; i <= discountLineCount; i++)
        {
            discountLineContainer = conPeek(discountLineListContainter, i);
            discountLine = con2Buf(discountLineContainer);

            discountLineList.addEnd(discountLine);
        }

        adjustmentLineList = new List(Types::Record);
        for (i = 1; i <= adjustmentLineCount; i++)
        {
            adjustmentLineContainer = conPeek(adjustmentLineListContainer, i);
            adjustmentLine = con2Buf(adjustmentLineContainer);

            adjustmentLineList.addEnd(adjustmentLine);
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>