<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmmPhoneUtilities</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SmmPhoneUtilities
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createActivity</Name>
				<Source><![CDATA[
    public static smmActivities createActivity(
        ContactPersonId              _contactPersonId,
        DirPartyRecId                _party,
        smmActivityPurpose           _activityPurpose           = '',
        smmActivityUserMemo          _activityUserMemo          = '',
        smmActivityCategory          _category                  = smmActivityCategory::Event,
        smmActivityStartDateTime     _activityStartDateTime     = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),str2time('09:00'),DateTimeUtil::getUserPreferredTimeZone()),
        smmActivityEndDateTime       _activityEndDateTime       = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),str2time('10:00'),DateTimeUtil::getUserPreferredTimeZone()),
        smmTMCallListID              _callListId                = '',
        smmPhoneCallType             _callType                  = smmPhoneCallType::OutboundCall,
        CRMWorkerRecId               _responsibleWorker         = 0,
        CaseYesNoPrompt              _createActivity            = CaseYesNoPrompt::Yes,
        smmActivityTypeId            _activityTypeId            = '',
        smmActivityPhaseId           _activityPhaseId           = '',
        smmActivityPriority          _activityPriority          = smmActivityPriority::Low,
        smmActivityPlanId            _activityPlanId            = '',
        smmActivityLocation          _activityLocation          = '',
        smmActivityReminderActive    _activityReminderActive    = NoYes::No,
        smmActivityReminderMinutes   _activityReminderMinutes   = 0,
        smmActivityNumber            _templateActivityNo        = '')
    {
        smmActivities               activities = null;
        boolean                     activityTypeSet;
        CRMWorkerRecId              currentWorker;

        activityTypeSet = false;
        currentWorker = smmUtility::getCurrentContactWorker();

        ttsbegin;
        if (_templateActivityNo)
        {
            activities = smmActivities::find(_templateActivityNo,true);
        }
        else
        {
            activities.initValue(_category);
            activities.setActivityNum();
        }
        activities.Category             = _category;
        activities.StartDateTime        = _activityStartDateTime;
        activities.EndDateTime          = _activityEndDateTime;
        activities.Purpose              = _activityPurpose;
        activities.UserMemo             = _activityUserMemo;
        activities.ResponsibleWorker    = currentWorker;

        if (_category == smmActivityCategory::Task)
        {
            activities.ReminderDateTime     = _activityStartDateTime;
            activities.TypeId               = smmParameters::getTMActivityCallBackType();
            activities.PhaseId              = smmParameters::getTMActivityCallBackPhase();
            activities.ReminderActive       = NoYes::Yes;
            activityTypeSet                 = true;
        }

        if (_category == smmActivityCategory::Event)
        {
            activities.Closed               = NoYes::Yes;
            activities.ActualEndDateTime    = DateTimeUtil::getSystemDateTime();
            activities.DoneByWorker         = currentWorker;
        }

        if (!activityTypeSet)
        {
            if (_callType == smmPhoneCallType::InboundCall)
            {
                activities.TypeId = smmParameters::getPhoneInboundActivityType();
            }
            else
            {
                activities.TypeId = smmParameters::getPhoneOutboundActivityType();
            }
        }

        if (_responsibleWorker)
        {
            activities.ResponsibleWorker = _responsibleWorker;
        }

        // Is activity created from advance prompt
        if (_createActivity == CaseYesNoPrompt::Prompt)
        {
            activities.TypeId           = _activityTypeId;
            activities.PhaseId          = _activityPhaseId;
            activities.TaskPriority     = _activityPriority;
            activities.PlanId           = _activityPlanId;
            activities.Location         = _activityLocation;
            activities.ReminderActive   = _activityReminderActive;
            activities.ReminderMinutes  = _activityReminderMinutes;

            activities.validateWrite();
        }

        if (_templateActivityNo)
        {
            if (activities.validateWrite(true))
            {
                activities.update();
            }
        }
        else
        {
            if (activities.validateWrite(true))
            {
                activities.insert();
            }
        }

        if (_party)
        {
            // Create dir link
            smmActivityParentLinkTable::updateOrCreateLink(
                activities.ActivityNumber,
                (DirPartyTable::findRec(_party).Type() == DirPartyType::Person)?smmActivityParentType::Person:smmActivityParentType::Organization,
                DirPartyTable::findRec(_party).RecId);
        }
        if (_contactPersonId)
        {
            smmActivityParentLinkTable::updateOrCreateLink(activities.ActivityNumber,
                smmActivityParentType::ContactPerson, ContactPerson::find(_contactPersonId).RecId);
        }
        if (_callListId && ((_category == smmActivityCategory::Task || _category == smmActivityCategory::Event)
            || _createActivity == CaseYesNoPrompt::Prompt))
        {
            smmActivityParentLinkTable::updateOrCreateLink(activities.ActivityNumber,
                smmActivityParentType::CallList, smmTMCallListGroup::find(_callListId).RecId);
        }

        ttscommit;

        return activities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPhoneLog</Name>
				<Source><![CDATA[
    public static smmPhoneLog createPhoneLog(timeOfDay                _startTime,
                                             timeOfDay                _totalTime,
                                             smmPhoneCallType         _callType,
                                             smmPhone                 _phone,
                                             ContactPersonId          _contactPersonId,
                                             DirPartyRecId               _Party,
                                             smmActivityId            _activityId       = '',
                                             smmTMUserMemo            _longDescription  = '',
                                             smmTMCallSubject         _shortDescription = '')
    {
        smmPhoneLog    phoneLog = null;

        ttsbegin;

        phoneLog.initValue();
        phoneLog.StartTime       = _startTime;
        phoneLog.EndTime         = _startTime + _totalTime;
        phoneLog.DurationTime    = _totalTime;
        phoneLog.CallType        = _callType;
        phoneLog.PhoneNumber     = _phone;
        phoneLog.ContactPersonId = _contactPersonId;
        phoneLog.Party           = _Party;
        phoneLog.CallDescription = _longDescription;
        phoneLog.CallSubject     = _shortDescription;

        if (_activityId)
        {
            phoneLog.ActivityNumber  = _activityId;
        }

        phoneLog.CallDate        = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        phoneLog.Worker          = smmUtility::getCurrentContactWorker();

        phoneLog.insert();

        ttscommit;

        return phoneLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>savePhoneData</Name>
				<Source><![CDATA[
    public static smmPhoneLog savePhoneData(
        timeOfDay                _startTime,
        timeOfDay                _totalTime,
        smmPhoneCallType         _callType,
        smmPhone                 _phone,
        ContactPersonId          _contactPersonId,
        DirPartyRecId            _Party,
        boolean                  _createActivity        = true,
        smmActivityPurpose       _activityPurpose       = '',
        smmActivityUserMemo      _activityUserMemo      = '',
        smmActivityCategory      _category              = smmActivityCategory::Event,
        smmActivityStartDateTime _activityStartDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),str2time('09:00'),DateTimeUtil::getUserPreferredTimeZone()),
        smmActivityEndDateTime   _activityEndDateTime   = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),str2time('10:00'),DateTimeUtil::getUserPreferredTimeZone()),
        smmTMCallListID          _callListId            = '')
    {
        smmActivities  activities;
        smmPhoneLog    phoneLog;

        if (_createActivity)
        {
            // Create call activity
            activities = smmPhoneUtilities::createActivity(_contactPersonId,
                                                           _Party,
                                                           _activityPurpose,
                                                           _activityUserMemo,
                                                           _category,
                                                           _activityStartDateTime,
                                                           _activityEndDateTime,
                                                           _callListId,
                                                           _callType);
        }

        // Create entry in the phone log
        phoneLog = smmPhoneUtilities::createPhoneLog(_startTime,
                                          _totalTime,
                                          _callType,
                                          _phone,
                                          _contactPersonId,
                                          _Party,
                                          activities.ActivityNumber,
                                          _activityUserMemo,
                                          _activityPurpose);

        return phoneLog;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>