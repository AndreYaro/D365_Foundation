<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransReport_BE</Name>
	<SourceCode>
		<Declaration><![CDATA[
class TaxTransReport_BE extends TaxTransReport
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCreditNote</Name>
				<Source><![CDATA[
    NoYesId isCreditNote(TaxTrans _taxTrans)
    {
        TaxTrans            taxTransTotal;
        NoYes               creditNote;
        Amount              totalvoucherAmount=0;
        Amount              amount, totalAmount;
        NoYes               prevcreditNote=NoYes::No;
        NoYes               goThrough= NoYes::Yes;

        while select sum(TaxBaseAmount), sum(TaxAmount) from taxTransTotal
            group by TransDate, Voucher, TaxDirection, ExemptTax
            where taxTransTotal.Voucher   == _taxTrans.Voucher   &&
                  taxTransTotal.TransDate == _taxTrans.TransDate &&
                  taxTransTotal.ExemptTax == _taxTrans.ExemptTax
        {
            totalvoucherAmount += taxTransTotal.TaxBaseAmount;
            if (goThrough == NoYes::Yes || creditNote != prevcreditNote)
            {
                goThrough       = NoYes::No;
                prevcreditNote  = creditNote;
                amount      = taxTransTotal.TaxBaseAmount ? taxTransTotal.TaxBaseAmount : taxTransTotal.TaxAmount;
                totalAmount = taxTransTotal.TaxBaseAmount ? totalvoucherAmount
                                                          : totalvoucherAmount == 0 ? taxTransTotal.TaxAmount : 0;
                if (amount)
                {
                    if (taxTransTotal.TaxDirection == TaxDirection::IncomingTax        ||
                        taxTransTotal.TaxDirection == TaxDirection::UseTax             ||
                        taxTransTotal.TaxDirection == TaxDirection::TaxExemptPurchase)
                    {
                        if (amount > 0)
                        {
                            creditNote = NoYes::No;
                        }
                        else if (amount < 0)
                        {
                            creditNote = NoYes::Yes;
                        }
                    }
                    else if (taxTransTotal.TaxDirection == TaxDirection::OutgoingTax      ||
                             taxTransTotal.TaxDirection == TaxDirection::TaxExemptSales)
                    {
                        if (amount > 0)
                        {
                            creditNote = NoYes::Yes;
                        }
                        else if (amount < 0)
                        {
                            creditNote = NoYes::No;
                        }
                    }

                    if (prevcreditNote != creditNote)
                    {
                        if (taxTransTotal.TaxDirection == TaxDirection::IncomingTax        ||
                            taxTransTotal.TaxDirection == TaxDirection::UseTax             ||
                            taxTransTotal.TaxDirection == TaxDirection::TaxExemptPurchase)
                        {
                            if (totalAmount > 0)
                            {
                                creditNote = NoYes::No;
                            }
                            else if (totalAmount < 0)
                            {
                                creditNote = NoYes::Yes;
                            }
                        }
                        else if (taxTransTotal.TaxDirection == TaxDirection::OutgoingTax      ||
                                 taxTransTotal.TaxDirection == TaxDirection::TaxExemptSales)
                        {
                            if (totalAmount > 0)
                            {
                                creditNote = NoYes::Yes;
                            }
                            else if (totalAmount < 0)
                            {
                                creditNote = NoYes::No;
                            }
                        }
                    }
                }
            }
        }

        return creditNote;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAmountByReportId_Table</Name>
				<Source><![CDATA[
    TmpTaxReportById taxAmountByReportId_Table(
        TransDate           _fromDate,
        TransDate           _toDate,
        TaxPeriod           _taxPeriod,
        TaxRepVersion       _taxRepVersion,
        TaxVersion          _taxRepCounter,
        NoYes               _reported,
        DebCredProposal     _debitCredit,
        Counter             _versionMin,
        Counter             _versionMax
        )
    {
        TaxTrans            taxTrans;
        TmpTaxReportById    tmpTaxReportById;
        NoYesId             isCreditNote;

        ttsbegin;

        while select sum(TaxAmount), sum(TaxBaseAmount), sum(TaxInCostPriceMST)
            from taxTrans
            group by TransDate, Voucher, TaxDirection, TaxCode, ExemptTax
            where taxTrans.TransDate        >= _fromDate
               && taxTrans.TransDate        <= _toDate
               && taxTrans.TaxPeriod        == _taxPeriod
               && taxTrans.TaxOrigin        != TaxOrigin::TaxReporting
               && taxTrans.TaxRepCounter    >= _versionMin
               && taxTrans.TaxRepCounter    <= _versionMax
               && taxTrans.Source           != TaxModuleType::Tax
        {
            isCreditNote = this.isCreditNote(taxTrans);

            if ((_debitCredit == DebCredProposal::Credit && isCreditNote)  ||
                (_debitCredit == DebCredProposal::Debit && !isCreditNote) ||
                 _debitCredit == DebCredProposal::None)
            {
                tmpTaxReportById = taxTrans.taxAmountByTaxDirectionAndReportId(tmpTaxReportById,
                                                                                isCreditNote,
                                                                                null,
                                                                                TaxReportLayout::Belgium);
            }
        }
        ttscommit;

        return tmpTaxReportById;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>