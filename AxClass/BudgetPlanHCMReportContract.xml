<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanHCMReportContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanHCMReportContract</c> class is used as a data contract class for the <c>BudgetPlanHCMReport</c> SSRS report.
/// </summary>
[
    SysOperationContractProcessingAttribute(classstr(BudgetPlanHCMReportUIBuilder)),
    DataContractAttribute,
    SysOperationGroupAttribute('SummaryGroup', "@GLS150362", '5')
]
public class BudgetPlanHCMReportContract implements SysOperationValidatable
{
    BudgetPlanHCMReportGroupOption          firstGroupOption;
    BudgetPlanHCMReportGroupOption          secondGroupOption;
    BudgetPlanHCMIsRestrictedToExceptions   isRestrictedToExceptions;
    BudgetPlanningProcessName               budgetPlanningProcess;
    BudgetPlanScenarioName                  budgetPlanningMonetaryScenario;
    BudgetPlanScenarioName                  budgetPlanningQuantityScenario;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmBudgetPlanMonetaryScenario</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('BudgetPlanningMonetaryScenario'),
        SysOperationLabelAttribute(literalStr("@GLS70135")),
        SysOperationHelpTextAttribute(literalStr("@GLS70424")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public BudgetPlanScenarioName parmBudgetPlanMonetaryScenario(BudgetPlanScenarioName _budgetPlanningMonetaryScenario = budgetPlanningMonetaryScenario)
    {
        budgetPlanningMonetaryScenario = _budgetPlanningMonetaryScenario;

        return budgetPlanningMonetaryScenario;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetPlanningProcess</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('BudgetPlanningProcess'),
        SysOperationLabelAttribute(literalStr("@GLS70076")),
        SysOperationHelpTextAttribute(literalStr("@GLS70420")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public BudgetPlanningProcessName parmBudgetPlanningProcess(BudgetPlanningProcessName _budgetPlanningProcess = budgetPlanningProcess)
    {
        budgetPlanningProcess = _budgetPlanningProcess;

        return budgetPlanningProcess;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetPlanQuantityScenario</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('BudgetPlanningQuantityScenario'),
        SysOperationLabelAttribute(literalStr("@GLS150360")),
        SysOperationHelpTextAttribute(literalStr("@GLS150361")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public BudgetPlanScenarioName parmBudgetPlanQuantityScenario(BudgetPlanScenarioName _budgetPlanningQuantityScenario = budgetPlanningQuantityScenario)
    {
        budgetPlanningQuantityScenario = _budgetPlanningQuantityScenario;

        return budgetPlanningQuantityScenario;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFirstGroupOption</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FirstGroupOption'),
        SysOperationGroupMemberAttribute('SummaryGroup'),
        SysOperationLabelAttribute(literalStr("@GLS150346")),
        SysOperationHelpTextAttribute(literalStr("@GLS150374")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public BudgetPlanHCMReportGroupOption parmFirstGroupOption(BudgetPlanHCMReportGroupOption _firstGroupOption = firstGroupOption)
    {
        firstGroupOption = _firstGroupOption;

        return firstGroupOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsRestrictedToExceptions</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('isRestrictedToExceptions'),
        SysOperationDisplayOrderAttribute('4')
    ]
    public BudgetPlanHCMIsRestrictedToExceptions parmIsRestrictedToExceptions(BudgetPlanHCMIsRestrictedToExceptions _isRestrictedToExceptions = isRestrictedToExceptions)
    {
        isRestrictedToExceptions = _isRestrictedToExceptions;

        return isRestrictedToExceptions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSecondGroupOption</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('SecondGroupOption'),
        SysOperationGroupMemberAttribute('SummaryGroup'),
        SysOperationLabelAttribute(literalStr("@GLS150347")),
        SysOperationHelpTextAttribute(literalStr("@GLS150374")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public BudgetPlanHCMReportGroupOption parmSecondGroupOption(BudgetPlanHCMReportGroupOption _secondGroupOption = secondGroupOption)
    {
        secondGroupOption = _secondGroupOption;

        return secondGroupOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the parameters selected by the user.
    /// </summary>
    /// <returns>
    /// true if the parameter selections are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;
        const str emptyString = '';

        if (this.parmBudgetPlanMonetaryScenario() == emptyString)
        {
            isValid = checkFailed(strFmt("@SYS39376", "@GLS150049"));
        }
        else if (this.parmBudgetPlanQuantityScenario() == emptyString)
        {
            isValid = checkFailed(strFmt("@SYS39376", "@GLS150360"));
        }
        else if (this.parmFirstGroupOption() == this.parmSecondGroupOption() && this.parmFirstGroupOption() != BudgetPlanHCMReportGroupOption::NoSelection)
        {
            isValid = false;
            error("@GLS150372");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BudgetPlanHCMReportContract construct()
    {
        return new BudgetPlanHCMReportContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>