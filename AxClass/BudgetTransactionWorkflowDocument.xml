<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionWorkflowDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetTransactionWorkflowDocument</c> class provides a workflow document class for budget
///    transactions.
/// </summary>
/// <remarks>
///    This query wrapper class provides access to the query that defines the fields that are available
///    for condition values on workflow configurations. It also provides several methods that perform
///    aggregation, which are also available as condition values.
/// </remarks>
[ExpressionCurrencyProviderAttribute(classstr(BudgetTransWFExpressionCurrencyProvider))]
public class BudgetTransactionWorkflowDocument extends WorkflowDocument
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQueryName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query name for the budget transaction workflow document.
    /// </summary>
    /// <returns>
    /// The budget transaction workflow query name from the AOT.
    /// </returns>
    public queryName getQueryName()
    {
        return querystr(BudgetTransactionWorkflowDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetCheckResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>BudgetSourceCheckResult</c> object for the budget transaction workflow instance.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The <c>BudgetSourceCheckResult</c> object.
    /// </returns>
    public BudgetSourceCheckResult parmBudgetCheckResult(CompanyId _companyId, tableId _tableId, RecId _recId)
    {
        BudgetSourceCheckResult checkResult;

        if (_tableId == tablenum(BudgetTransactionHeader) &&
            _recId != 0)
        {
            checkResult = BudgetSourceBudgetTransactionHeader::findBudgetCheckResult(_recId);
        }

        return checkResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferPrevented</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets whether the budget transfer is prevented for the budget transaction workflow instance.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// true if the budget transfer is prevented; otherwise, false.
    /// </returns>
    public BudgetTransferPrevented parmTransferPrevented(CompanyId _companyId, tableId _tableId, RecId _recId)
    {
        BudgetTransferPrevented transferPrevented;

        if (_tableId == tablenum(BudgetTransactionHeader) &&
            _recId != 0)
        {
            if (!BudgetTransactionAllowTransferManager::isTransferAllowed(_recId))
            {
                // The transfer is not allowed for this transaction.
                transferPrevented = true;
            }
        }

        return transferPrevented;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>