<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkLineProcessingValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSWorkLineProcessingValidator
{
    private WHSWorkLine  workLine;
    private WHSUserId    userId;
    private boolean      throwOnInvalidWork = true;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmWorkLine</Name>
				<Source><![CDATA[
    internal WHSWorkLine parmWorkLine(WHSWorkLine _workLine = workLine)
    {
        workLine = _workLine;
        return workLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserId</Name>
				<Source><![CDATA[
    internal WHSUserId parmUserId(WHSUserId _userId = userId)
    {
        userId = _userId;
        return userId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmThrowOnInvalidWork</Name>
				<Source><![CDATA[
    internal boolean parmThrowOnInvalidWork(boolean _throwOnInvalidWork = throwOnInvalidWork)
    {
        throwOnInvalidWork = _throwOnInvalidWork;
        return throwOnInvalidWork;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromWorkLine</Name>
				<Source><![CDATA[
    internal static WHSWorkLineProcessingValidator newFromWorkLine(
        WHSWorkLine  _workLine,
        WHSUserId    _userId)
    {
        WHSWorkLineProcessingValidator validator = new WHSWorkLineProcessingValidator();
        validator.parmWorkLine(_workLine);
        validator.parmUserId(_userId);

        return validator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWorkLineForProcessing</Name>
				<Source><![CDATA[
    internal boolean validateWorkLineForProcessing()
    {
        boolean ret = this.validateWorkLineIsLockedByOtherUser();
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWorkLineIsLockedByOtherUser</Name>
				<Source><![CDATA[
    private boolean validateWorkLineIsLockedByOtherUser()
    {
        if (workLine.WorkStatus == WHSWorkStatus::InProcess
            && workLine.UserId
            && workLine.UserId  != userId)
        {
            if (throwOnInvalidWork)
            {
                throw error(strfmt("@SCM:WorkLockedByOtherUser", workLine.UserId));
            }

            return false;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>