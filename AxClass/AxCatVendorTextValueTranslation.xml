<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCatVendorTextValueTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxCatVendorTextValueTranslation extends AxInternalBase
{
    CatVendorTextValueTranslation catVendorTextValueTranslation;
    RefRecId    catVendorProductCandidate;
    RefRecId    ecoResAttribute;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>catVendorTextValueTranslation</Name>
				<Source><![CDATA[
    public CatVendorTextValueTranslation catVendorTextValueTranslation(CatVendorTextValueTranslation _catVendorTextValueTranslation = catVendorTextValueTranslation)
    {
        if (!prmisdefault(_catVendorTextValueTranslation))
        {
            this.setCurrentRecordFromExternal(_catVendorTextValueTranslation);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the current record in the <c>AxCatVendorTextValueTranslation</c> class.
    /// </summary>
    /// <param name="_catVendorTextValueTranslation">
    /// The <c>AxCatVendorTextValueTranslation</c> record to set; optional.
    /// </param>
    /// <returns>
    /// An <c>AxCatVendorTextValueTranslation</c> record.
    /// </returns>
    public Common currentRecord(Common _catVendorTextValueTranslation = catVendorTextValueTranslation)
    {
        if (!prmisdefault(_catVendorTextValueTranslation))
        {
            super(_catVendorTextValueTranslation);
            catVendorTextValueTranslation = _catVendorTextValueTranslation;
        }
        else
        {
            super();
        }

        return catVendorTextValueTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an empty record for the <c>CatVendorTextValueTranslation</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record from the <c>CatVendorTextValueTranslation</c> table.
    /// </returns>
    protected Common emptyRecord()
    {
        CatVendorTextValueTranslation localCatVendorTextValueTranslation;
        return localCatVendorTextValueTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodstr(AxCatVendorTextValueTranslation,parmTextValueTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCatVendorProductCandidate</Name>
				<Source><![CDATA[
    public RefRecId parmCatVendorProductCandidate(RefRecId _catVendorProductCandidate = 0)
    {
        if (!prmisdefault(_catVendorProductCandidate))
        {
            catVendorProductCandidate = _catVendorProductCandidate;
        }

        return catVendorProductCandidate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEcoResAttribute</Name>
				<Source><![CDATA[
    public RefRecId parmEcoResAttribute(RefRecId _ecoResAttribute = 0)
    {
        if (!prmisdefault(_ecoResAttribute))
        {
            ecoResAttribute = _ecoResAttribute;
        }

        return ecoResAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLanguage</Name>
				<Source><![CDATA[
    public LanguageId parmLanguage(LanguageId _language = '')
    {
        if (!prmisdefault(_language))
        {
            this.setField(fieldnum(CatVendorTextValueTranslation, Language), _language);
        }

        return catVendorTextValueTranslation.Language;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTextValue</Name>
				<Source><![CDATA[
    public AttributeValueText parmTextValue(AttributeValueText _textValue = '')
    {
        if (!prmisdefault(_textValue))
        {
            this.setField(fieldnum(CatVendorTextValueTranslation, TextValue), _textValue);
        }

        return catVendorTextValueTranslation.TextValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTextValueTable</Name>
				<Source><![CDATA[
    public RefRecId parmTextValueTable(RefRecId _textValueTable = 0)
    {
        if (!prmisdefault(_textValueTable))
        {
            this.setField(fieldnum(CatVendorTextValueTranslation, TextValueTable), _textValueTable);
        }
        return catVendorTextValueTranslation.TextValueTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts or updates the current record for the AxBC class.
    /// </summary>
    /// <remarks>
    ///    The <c>save</c> instance method on the AxBC class should be executed after assigning new values to
    ///    fields.The actual work of saving and updating a record is performed in the <c>doSave</c> method,
    ///    which this method calls.
    /// </remarks>
    public void save()
    {
        CatVendorTextValue catVendorTextValue;
        select firstonly catVendorTextValue
            where catVendorTextValue.CatVendorProductCandidate == catVendorProductCandidate
            && catVendorTextValue.EcoResAttribute == ecoResAttribute;
        if (catVendorTextValue)
        {
            this.parmTextValueTable(catVendorTextValue.RecId);
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLanguage</Name>
				<Source><![CDATA[
    protected void setLanguage()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorTextValueTranslation, Language)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls all of the default methods that must be called before a record is inserted or updated.
    /// </summary>
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setTextValue();
        this.setTextValueTable();
        this.setLanguage();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTextValue</Name>
				<Source><![CDATA[
    protected void setTextValue()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorTextValueTranslation, TextValue)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTextValueTable</Name>
				<Source><![CDATA[
    protected void setTextValueTable()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorTextValueTranslation, TextValueTable)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxCatVendorTextValueTranslation construct()
    {
        return new AxCatVendorTextValueTranslation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCatVendorTextValueTranslation</Name>
				<Source><![CDATA[
    public static AxCatVendorTextValueTranslation newCatVendorTextValueTranslation(CatVendorTextValueTranslation _catVendorTextValueTranslation)
    {
        AxCatVendorTextValueTranslation axCatVendorTextValueTranslation = AxCatVendorTextValueTranslation::construct();
        axCatVendorTextValueTranslation.catVendorTextValueTranslation(_catVendorTextValueTranslation);

        return axCatVendorTextValueTranslation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>