<?xml version="1.0" encoding="utf-8"?>

<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>AccDistRulePayrollEarningStatementCost</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
///     The <c>AccDistRulePayrollEarningStatementCost</c> extends the <c>AccountingDistributionRule</c> class for payroll.
/// </summary>
[
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_PayrollEarningStatement), BusinessEvent_PayrollEarningStatement::GenerateEarningsStatement, MonetaryAmount::PayrollCost)
]
public class AccDistRulePayrollEarningStatementCost extends AccountingDistributionRule
{
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>initDimAllocList</Name>
        <Source><![CDATA[
    protected void initDimAllocList()
    {
        LedgerDimensionAllocation                   ldAllocation;
        LedgerDimensionAllocationListEnumerator     ldaListEnumerator;
        boolean                                     isProject;
        str                                         errorMsg;

        super();
        ldaListEnumerator = this.parmLedgerDimensionAllocList().getEnumerator();
        ldaListEnumerator.moveNext();

        ldAllocation = ldaListEnumerator.current();

        if (this.parmLedgerDimensionAllocList().elements() == 0
            || ldAllocation.parmLedgerDimension() == 0)

        {
            isProject = ProjectSourceDocumentLineItemHelper::canProcessProject(sourceDocumentLineItem) &&
                        ProjectSourceDocumentLineItemHelper::isLedgerPostingTypeProject(this.parmLedgerPostingType());

            errorMsg = isProject ? "@Payroll:APostingRuleIsNotDefinedForTheProjectCreateThePostingRuleOnT" : "@Payroll:APostingRuleIsNotDefinedForTheEarningCodeCreateThePostingRul";

            throw error(errorMsg);
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmLedgerPostingType</Name>
        <Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        ProjectAccDistRule      projectAccDistRule = ProjectAccDistRule::newFromAccountingDistributionRule(this);
        boolean                 isProject = projectAccDistRule.parmIsProject();

        if (isProject)
        {
            return projectAccDistRule.parmLedgerPostingType();
        }

        return LedgerPostingType::PayrollDebitAccount;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmSide</Name>
        <Source><![CDATA[
    public DebitCredit parmSide()
    {
        return DebitCredit::Debit;
    }

]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>