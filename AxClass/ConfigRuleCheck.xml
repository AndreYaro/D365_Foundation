<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ConfigRuleCheck</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ConfigRuleCheck
{
    container               checkStructure;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkRule</Name>
				<Source><![CDATA[
    boolean checkRule(BOMConfigRule configRule)
    {
        checkStructure = conNull();

        this.insert(configRule.ChosenGroupId,configRule.ChosenItemId);
        if (! this.insert(configRule.DerivedGroupId,configRule.DerivedItemId))
            return false;

        return this.search(configRule.bomId,configRule.DerivedGroupId,configRule.DerivedItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    void delete(
        ConfigGroupId   configGroupId,
        ItemId          itemId
        )
    {
        Integer num;
        num             = conFind(checkStructure,[configGroupId,itemId]);
        checkStructure  = conDel(checkStructure,num,1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    boolean insert(
        ConfigGroupId   configGroupId,
        ItemId          itemId
        )
    {
        if (conFind(checkStructure,[configGroupId,itemId]))
            return checkFailed(strFmt("@SYS27018",itemId));
        checkStructure += [[configGroupId,itemId]];

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>search</Name>
				<Source><![CDATA[
    boolean search(
        BOMId           bomId,
        ConfigGroupId   groupId,
        ItemId          itemId
        )
    {
        BOMConfigRule           rule;
        ConfigExcludeInclude    exclIncl;

        rule  = BOMConfigRule::search(bomId,groupId,itemId);
        while (rule)
        {
            if (! this.insert(rule.DerivedGroupId,rule.DerivedItemId))
                return false;

            exclIncl    = ConfigExcludeInclude::construct(rule.Method);
            if (! exclIncl.check(this,rule))
                return false;

            this.delete(rule.DerivedGroupId,rule.DerivedItemId);

            next rule;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>