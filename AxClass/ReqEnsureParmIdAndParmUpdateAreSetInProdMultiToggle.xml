<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqEnsureParmIdAndParmUpdateAreSetInProdMultiToggle</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqEnsureParmIdAndParmUpdateAreSetInProdMultiToggle</c> class handles the flighting logic to
/// change the behavior of the following methods:
///   - <c>ensureParmIdHasBeenInitialized</c> in the <c>ProdMulti</c> class
///   - <c>ensureParmIdAndParmUpdateHaveBeenInitialized</c> in the <c>ProdMulti</c> class
///   - <c>query</c> in the <c>ProdMultiScheduling</c> class
/// So that no exception is thrown when setting the query for a job/operation scheduling task created from
/// the batch form, and that said query is retrieved correctly.
/// </summary>
internal class ReqEnsureParmIdAndParmUpdateAreSetInProdMultiToggle extends WHSDisabledByDefaultToggle
{
    static private ReqEnsureParmIdAndParmUpdateAreSetInProdMultiToggle singleton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>ReqEnsureParmIdAndParmUpdateAreSetInProdMultiToggle</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    static internal ReqEnsureParmIdAndParmUpdateAreSetInProdMultiToggle instance()
    {
        if (!singleton)
        {
            singleton = new ReqEnsureParmIdAndParmUpdateAreSetInProdMultiToggle();
        }

        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>