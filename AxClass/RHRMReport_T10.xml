<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RHRMReport_T10</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RHRMReport_T10 extends RHRMReport implements BatchRetryable
{
    RHRMOrderTable          orderTable;
    RHRMOrderTrans          orderTrans;
    RHRMPersonTable         rHRMPersonTable;
    RHRMEmplTable           rHRMEmplTable;
    IdentityCardTable_RU    identityCardTable;

    IdentityCardCode_Ru     identityCardCode;
    IdentityCardSeries_RU   identityCardSeries;
    IdentityCardNumber_RU   identityCardNumber;

    DialogField             identityCardCodeField;
    DialogField             identityCardSeriesField;
    DialogField             identityCardNumberField;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>animationBoxCaption</Name>
				<Source><![CDATA[
    public str animationBoxCaption()
    {
        return "@RUP1727";
    }

]]></Source>
			</Method>
			<Method>
				<Name>animationBoxText</Name>
				<Source><![CDATA[
    public str animationBoxText()
    {
        return "@RUP1814";
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        Dialog  dialog = super();
        ;

        dialog.addGroup("@RUP1346");
        identityCardCodeField = dialog.addField(extendedTypeStr(IdentityCardCode_Ru));
        identityCardSeriesField = dialog.addField(extendedTypeStr(IdentityCardSeries_RU));
        identityCardNumberField = dialog.addField(extendedTypeStr(IdentityCardNumber_RU));

        identityCardCodeField.value(identityCardCode);
        identityCardSeriesField.value(identityCardSeries);
        identityCardNumberField.value(identityCardNumber);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean                 ret;
        IdentityCardEngine_RU   identityCardEngine;
        IdentityCardTable_RU    identityCardTable_RU;

        ret = super();

        identityCardCode    =   identityCardCodeField.value();
        identityCardSeries  =   identityCardSeriesField.value();
        identityCardNumber  =   identityCardNumberField.value();

        if (identityCardCode)
        {
            identityCardTable_RU = IdentityCardTable_RU::findByCode(identityCardCode);

            identityCardEngine = IdentityCardEngine_RU::construct();

            ret = ret && identityCardEngine.checkNumber(identityCardNumber, identityCardTable_RU.IdentityCardPatternNumber);
            ret = ret && identityCardEngine.checkSeries(identityCardSeries, identityCardTable_RU.IdentityCardPatternSeries);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initData</Name>
				<Source><![CDATA[
    public void initData(Args _args)
    {
        super(_args);
        orderTrans = _args.record();
        orderTable = RHRMOrderTable::find(orderTrans.OrderTableRecId);

        rHRMEmplTable           = RHRMEmplTable::find(orderTrans.EmplId);
        rHRMPersonTable         = RHRMPersonTable::findPayMainEmplId(rHRMEmplTable.EmployeeId);

        identityCardCode        = IdentityCardTable_RU::find(rHRMPersonTable.IdentityCard).IdentityCardCode;
        identityCardSeries      = rHRMPersonTable.IdentityCardSeries;
        identityCardNumber      = rHRMPersonTable.IdentityCardNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        RPayHistory rpayHistoryLast;
        LogisticsPostalAddress logisticsPostalAddress;
        officialsTable_RU OfficialsTable_RU;

        wordDocument.insertFieldValue(#CI_Name,               CompanyInfo::find().Name);

        wordDocument.insertFieldValue(#CI_CodeOKPO_RU,       CompanyInfoHelper::partyOKPOasOfDate_RU(companyInfo::find()));

        wordDocument.insertFieldValue(#VNBT_tripOrder,       orderTable.OrderNum);

        wordDocument.insertFieldValue(#VNBT_tripOrderDate,   this.dateInNumber(orderTable.TransDate));

        wordDocument.insertFieldValue(#ET_Name,               orderTrans.emplName());

        wordDocument.insertFieldValue(#ET_EmplId,             orderTrans.EmplId);

        rpayHistoryLast = RPayHistory::findLastSignOnMove(orderTrans.EmplId, orderTrans.StartDate, orderTrans.RecId);

        wordDocument.insertFieldValue(#Organization,          rpayHistoryLast.organizationDescription());

        wordDocument.insertFieldValue(#Position,             rpayHistoryLast.titleId());

        logisticsPostalAddress = LogisticsPostalAddress::findByLocation(orderTable.TripLocation);

        wordDocument.insertFieldValue(#VNBT_TownCountryOrg,  this.delimiterN([LogisticsAddressCountryRegionTranslation::find(logisticsPostalAddress.CountryRegionId).LongName,
                                                                              LogisticsAddressState::find(logisticsPostalAddress.CountryRegionId, logisticsPostalAddress.State).Name,
                                                                              logisticsPostalAddress.City,
                                                                              orderTable.TripOrganization]));

        wordDocument.insertFieldValue(#VNBT_tripObject,      orderTrans.TripObject);

        wordDocument.insertFieldValue(#VNBT_dayNumber,       int2str(orderTrans.EndDate - orderTrans.StartDate + 1));

        if (orderTrans.StartDate)
            wordDocument.insertFieldValue(#VNBT_start,       this.dateInWord(orderTrans.StartDate));

        if (orderTrans.EndDate)
            wordDocument.insertFieldValue(#VNBT_end,         this.dateInWord(orderTrans.EndDate));

        identityCardTable       = IdentityCardTable_RU::findByCode(identityCardCode);

        wordDocument.insertFieldValue(#IdentityCardNameFull, identityCardTable.IdentityCardNameFull);
        wordDocument.insertFieldValue(#IdentityCardNumber, identityCardSeries + "@RUP2242" + identityCardNumber);

        officialsTable_RU = OfficialsTable_RU::findDirector();
        wordDocument.insertFieldValue(#OTR_title,             officialsTable_RU.Title);
        wordDocument.insertFieldValue(#OTR_name,              officialsTable_RU.Name);

        wordDocument.unlinkFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str templateName()
    {
        return #personnel_T10_dot;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>