<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustDueReportDetailContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustDueReportDetailContract</c> class is RDL contract class for the
/// <c>CustDueReportDetail</c> SSRS report.
/// </summary>
[
    SysOperationContractProcessingAttribute(classStr(CustDueReportDetailUIBuilder),
    SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly),
    DataContractAttribute
]
public class CustDueReportDetailContract
    implements SysOperationValidatable, SysOperationInitializable
{
    TransDate asOfDate;
    NoYes inclTransWithNoBillingClass;
    List billingClassification;

    // The following parameters are not shown to the user. They are set to a specific value in the Controller class.
    str sysVersion;
    DirPartyName userName;
    CurrencyCode accountingCurrency;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes data contract values.
    /// </summary>
    public void initialize()
    {
        billingClassification = new List(Types::String);

        if (!CustParameters::isBillingClassificationEnabled())
        {
            billingClassification.addEnd(SysLabel::labelId2String(literalStr("@GLS223107")));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingCurrency</Name>
				<Source><![CDATA[
    [DataMemberAttribute('AccountingCurrency')]
    public CurrencyCode parmAccountingCurrency(CurrencyCode _accountingCurrency = accountingCurrency)
    {
        accountingCurrency = _accountingCurrency;
        return accountingCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAsOfDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('AsOf'),
        SysOperationLabelAttribute(literalStr("@AccountsReceivable:CustDueReportDetailAsOf")),
        SysOperationHelpTextAttribute(literalStr("@SYS2282"))
    ]
    public TransDate parmAsOfDate(TransDate _asOfDate = asOfDate)
    {
        if (!_asOfDate)
        {
            asOfDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        }
        else
        {
            asOfDate = _asOfDate;
        }
        return asOfDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingClassification</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('BillingClassification'),
        SysOperationLabelAttribute(literalStr("@SPS371")),
        SysOperationHelpTextAttribute(literalStr("@SPS677")),
        SysOperationDisplayOrderAttribute('0'),
        AifCollectionTypeAttribute('return', Types::String)
    ]
    public List parmBillingClassification(List _billingClassification = billingClassification)
    {
        billingClassification = _billingClassification;
        return billingClassification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTransWithNoBillingClass</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('InclTransWithNoBillingClass'),
        SysOperationLabelAttribute(literalStr("@SPS691")),
        SysOperationHelpTextAttribute(literalStr("@SPS1009")),
        SysOperationDisplayOrderAttribute('0')
    ]
    public NoYes parmInclTransWithNoBillingClass(NoYes _inclTransWithNoBillingClass = inclTransWithNoBillingClass)
    {
        inclTransWithNoBillingClass = _inclTransWithNoBillingClass;
        return inclTransWithNoBillingClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSysVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>ParmSysVersion</c> parameter.
    /// </summary>
    /// <param name="_sysVersion">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>ParmSysVersion</c> parameter.
    /// </returns>
    [DataMemberAttribute('SysVersion')]
    public Description255 parmSysVersion(str _sysVersion = sysVersion)
    {
        sysVersion = _sysVersion;
        return sysVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserName</Name>
				<Source><![CDATA[
    [DataMemberAttribute('UserName')]
    public DirPartyName parmUserName(DirPartyName _userName = userName)
    {
        userName = _userName;
        return userName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the data contract.
    /// </summary>
    /// <returns>
    /// true if parameters are valid; otherwise false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!BrazilParameters::isEnabled())
        {
            isValid = CustBillingClassificationReportManager::validate(billingClassification, inclTransWithNoBillingClass);
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>