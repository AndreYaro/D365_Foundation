<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RCashReport_CashierBook</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RCashReport_CashierBook extends RCashReport_Base implements BatchRetryable
{
    identifiername reportName;
    NoYes cashierRepPrintNow;
    NoYes printCorrections;
    PageNo pageNum;
    PageNo pageRepNum;

    protected const Version currentVersion_CashierBook = 1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    public identifiername lastValueElementName()
    {
        return reportName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintCashierNow</Name>
				<Source><![CDATA[
    public NoYes parmPrintCashierNow(NoYes _cashierRepPrintNow = cashierRepPrintNow)
    {
        if (_cashierRepPrintNow)
            cashierRepPrintNow = _cashierRepPrintNow;

        return cashierRepPrintNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintCorrections</Name>
				<Source><![CDATA[
    public NoYes parmPrintCorrections(NoYes _printCorrections = printCorrections)
    {
        if (_printCorrections)
            printCorrections = _printCorrections;

        return printCorrections;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportName</Name>
				<Source><![CDATA[
    public identifiername parmReportName(identifiername _name = reportName)
    {
        reportName = _name;
        return reportName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [currentVersion_CashierBook, fromDate, toDate, cashAccount];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean ret;
        Integer version = conpeek(_packedClass,1);

        switch (version)
        {
            case currentVersion_CashierBook:
                container base;
                [version, fromDate, toDate, cashAccount, base] = _packedClass;
                ret = super(base);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>