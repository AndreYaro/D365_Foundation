<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResActivityResourceBookingCollection</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Activity resource booking collection controller
/// </summary>
public class ResActivityResourceBookingCollection extends ResResourceAssignmentCollection implements IAVCollectionController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCollectionQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query for all resources of the project
    /// </summary>
    /// <returns>Instance of query object</returns>
    public Query getCollectionQuery()
    {
        AvailabilityView avControl = this.control();
        ResAvailabilityViewContext context = avControl.controlContext();

        ResSearchCriteria searchCriteria = ResSearchCriteria::createCriteria(context.searchString());
        ResISearchCriteriaItem searchCriteriaItem = searchCriteria.getCriteriaItem(classNum(ResActivityTeamOnlySearchCriteria));
        ResBookingResourceSetting resourceSetting = searchCriteriaItem
            ? symbol2Enum(enumNum(ResBookingResourceSetting), searchCriteriaItem.getValues())
            : ResBookingResourceSetting::AllResources;

        Query query;
        if (resourceSetting == ResBookingResourceSetting::ActivityTeamOnly)
        {
            boolean performanceEnhancementFeatureEnabled = ResUtil::isPerformanceEnhancementFeatureEnabled(true);

            if (performanceEnhancementFeatureEnabled)
            {
                query = new Query(querystr(ResBookResourcesQueryV2));
            }
            else
            {
                query = new Query(querystr(ResBookResourcesQuery));
            }
            
            QueryBuildDataSource dataSource = query.dataSourceName('ActivityResources');

            // set recipientCompany
            SelectableDataArea currentDataArea = curExt();
            dataSource.range(1).value(queryValue(currentDataArea));

            // set activity
            ActivityRecId activity = context.activity();
            dataSource.range(2).value(queryValue(activity));

            if (performanceEnhancementFeatureEnabled)
            {
                dataSource.range(3).value(strfmt('..%1', queryValue(context.endDateTime())));
                dataSource.range(4).value(strfmt('%1..', queryValue(context.startDateTime())));
            }
        }
        else
        {
            query = super();
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the resource assignment collection controller
    /// </summary>
    /// <returns>Instance of <c>ResResourceAssignmentCollection</c></returns>
    public static ResActivityResourceBookingCollection construct()
    {
        ResActivityResourceBookingCollection controller = new ResActivityResourceBookingCollection();
        return controller;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>