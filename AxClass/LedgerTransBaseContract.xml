<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTransBaseContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerTransBaseContract</c> class is the data contract class for the <c>LedgerTransBase</c>
/// report.
/// </summary>
[
    DataContract,
    SysOperationGroup('Print', "@SYS8813", '1'),
    SysOperationGroup('Date', "@SYS7402", '2'),
    SysOperationGroup('Transactions', "@SYS54081", '3')
]
public class LedgerTransBaseContract implements SysOperationValidatable
{
    boolean newPage;
    boolean cust;
    boolean vend;
    boolean invent;
    boolean prod;
    boolean bank;
    boolean tax;
    boolean project;
    boolean showOperatingOnly;

    private TransDate fromDate;
    private TransDate toDate;

    // The following parameters are not shown to the user.
    str hiddenSysVersion;
    DirPartyName userName;
    boolean displayDescription;
    boolean showReportingCurrency = true;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmNewPage</Name>
				<Source><![CDATA[
    [
        DataMember('NewPage'),
        SysOperationLabel(literalstr("@SYS15349")),
        SysOperationHelpText(literalstr("@SYS24755")),
        SysOperationGroupMember('Print'),
        SysOperationDisplayOrder('1')
    ]
    public boolean parmNewPage(boolean _newPage = newPage)
    {
        newPage = _newPage;
        return newPage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter From date.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the data contract parameter From date; optional.
    /// </param>
    /// <returns>
    /// The current value of data contract parameter From date.
    /// </returns>
    [
        DataMember('FromDate'),
        SysOperationLabel(literalstr("@SYS5209")),
        SysOperationHelpText(literalstr("@SYS67")),
        SysOperationGroupMember('Date'),
        SysOperationDisplayOrder('2')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter To date.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the data contract parameter To date; optional.
    /// </param>
    /// <returns>
    /// The current value of data contract parameter To date.
    /// </returns>
    [
        DataMember('ToDate'),
        SysOperationLabel(literalstr("@SYS14656")),
        SysOperationHelpText(literalstr("@SYS67")),
        SysOperationGroupMember('Date'),
        SysOperationDisplayOrder('3')
    ]

    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCust</Name>
				<Source><![CDATA[
    [
        DataMember('Cust'),
        SysOperationLabel(literalstr("@SYS25196")),
        SysOperationHelpText(literalstr("@SYS3289")),
        SysOperationGroupMember('Transactions'),
        SysOperationDisplayOrder('4')
    ]
    public boolean parmCust(boolean _cust = cust)
    {
        cust = _cust;
        return cust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVend</Name>
				<Source><![CDATA[
    [
        DataMember('Vend'),
        SysOperationLabel(literalstr("@SYS25194")),
        SysOperationHelpText(literalstr("@SYS3289")),
        SysOperationGroupMember('Transactions'),
        SysOperationDisplayOrder('5')
    ]
    public boolean parmVend(boolean _vend = vend)
    {
        vend = _vend;
        return vend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvent</Name>
				<Source><![CDATA[
    [
        DataMember('Invent'),
        SysOperationLabel(literalstr("@SYS25197")),
        SysOperationHelpText(literalstr("@SYS3289")),
        SysOperationGroupMember('Transactions'),
        SysOperationDisplayOrder('6')
    ]
    public boolean parmInvent(boolean _invent = invent)
    {
        invent = _invent;
        return invent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProd</Name>
				<Source><![CDATA[
    [
        DataMember('Prod'),
        SysOperationLabel(literalstr("@SYS4398")),
        SysOperationHelpText(literalstr("@SYS3289")),
        SysOperationGroupMember('Transactions'),
        SysOperationDisplayOrder('7')
    ]
    public boolean parmProd(boolean _prod = prod)
    {
        prod = _prod;
        return prod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBank</Name>
				<Source><![CDATA[
    [
        DataMember('Bank'),
        SysOperationLabel(literalstr("@SYS7439")),
        SysOperationHelpText(literalstr("@SYS3289")),
        SysOperationGroupMember('Transactions'),
        SysOperationDisplayOrder('8')
    ]
    public boolean parmBank(boolean _bank = bank)
    {
        bank = _bank;
        return bank;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTax</Name>
				<Source><![CDATA[
    [
        DataMember('Tax'),
        SysOperationLabel(literalstr("@SYS22729")),
        SysOperationHelpText(literalstr("@SYS3289")),
        SysOperationGroupMember('Transactions'),
        SysOperationDisplayOrder('9')
    ]
    public boolean parmTax(boolean _tax = tax)
    {
        tax = _tax;
        return tax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProject</Name>
				<Source><![CDATA[
    [
        DataMember('Project'),
        SysOperationLabel(literalstr("@SYS80304")),
        SysOperationHelpText(literalstr("@SYS3289")),
        SysOperationGroupMember('Transactions'),
        SysOperationDisplayOrder('10')
    ]
    public boolean parmProject(boolean _project = project)
    {
        project = _project;
        return project;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowOperatingOnly</Name>
				<Source><![CDATA[
    [
        DataMember('ShowOperatingOnly'),
        SysOperationLabel(literalStr("@GeneralLedger:ShowOperatingOnly")),
        SysOperationHelpText(literalStr("@GeneralLedger:ShowOperatingOnly")),
        SysOperationGroupMember('Transactions'),
        SysOperationDisplayOrder('11')
    ]
    public boolean parmShowOperatingOnly(boolean _showOperatingOnly = showOperatingOnly)
    {
        showOperatingOnly = _showOperatingOnly;
        return showOperatingOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayDescription</Name>
				<Source><![CDATA[
    [
        DataMember(identifierStr(DisplayDescription))
    ]
    public boolean parmDisplayDescription(boolean _displayDescription = displayDescription)
    {
        displayDescription = _displayDescription;
        return displayDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSysVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>HiddenSysVersion</c> parameter of the data contract.
    /// </summary>
    /// <param name="_sysVersion">
    ///    The new value of the <c>SysVersion</c> parameter of the data contract; optional.
    /// </param>
    /// <returns>
    ///    The current value of the <c>HiddenSysVersion</c> parameter of the data contract.
    /// </returns>
    [
        DataMember(identifierStr(SysVersion))
    ]
    public Description255 parmSysVersion(str _sysVersion = hiddenSysVersion)
    {
        hiddenSysVersion = _sysVersion;
        return hiddenSysVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserName</Name>
				<Source><![CDATA[
    [
        DataMember(identifierStr(UserName))
    ]
    public DirPartyName parmUserName(DirPartyName _userName = userName)
    {
        userName = _userName;
        return userName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowReportingCurrency</Name>
				<Source><![CDATA[
    [
        DataMember('ShowReportingCurrency')
    ]
    public boolean parmShowReportingCurrency(boolean _show = showReportingCurrency)
    {
        showReportingCurrency = _show;
        return showReportingCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the report contract parameters.
    /// </summary>
    /// <returns>True if the report parameter values are valid, otherwise, false.</returns>
    public boolean validate()
    {
		return LedgerReportFromAndToDateValidator::validateReportFromAndToDate(
			this.fromDate,
			this.toDate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>