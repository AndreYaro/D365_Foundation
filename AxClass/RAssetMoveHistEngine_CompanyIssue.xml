<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetMoveHistEngine_CompanyIssue</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetMoveHistEngine_CompanyIssue extends RAssetMoveHistEngine
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
        public void updateDesign()
    {
        super();
        if (! rAssetMoveStandard_ds)
            return;
        rAssetMoveHist_ds.allowCreate(rAssetStatusType.allowCompanyIssue());
        rAssetMoveStandard_ds.allowEdit(false);
        rAssetMoveStandard_ds.allowCreate(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite(boolean _needinfo = true)
    {
        boolean             ret;
        RAssetMoveHist      rAssetMoveHistLocal;

        #localmacro.checkLastOperation
        if (%1.RecId)
        {
            return _needinfo ? checkFailed(strfmt("@GLS116698", %2, moveHist.AccountNum)) : false;
        }
        #endmacro

        if (! rAssetStatusType.allowCompanyIssue())
        {
            return _needinfo ? checkFailed(strFmt("@GLS116701", moveHist.AccountNum, "", rAssetStatusType.rAssetStatus(), RAssetTransType::CompanyIssue)) : false;
        }

        #checkLastOperation(moveHistLast, moveHist.MoveType)

        rAssetMoveHistLocal = RAssetMoveHist::findLastOperation(moveHist.AccountNum,
                                                                RAssetMoveType::CompanyReceipt);
        #checkLastOperation(rAssetMoveHistLocal, RAssetMoveType::CompanyReceipt)

        ret = super(_needinfo);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
        public void write()
    {
        moveHist.updateMoveStandard();
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>