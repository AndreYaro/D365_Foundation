<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailStatementController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Initializes the query by adding datasource and ranges to run the <c>RetailStatement</c> report.
/// </summary>
public class RetailStatementController extends SrsReportRunController implements BatchRetryable
{
    RetailStatementTable   statementTable;
    Args                   statementArgs;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifyQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds ranges to the report query as per the <c>Args</c> passed.
    /// </summary>
    /// <param name="_query">
    /// The <c>Query</c> object to modify.
    /// </param>
    /// <remarks>
    /// This modified query will be used by the report to fetch the specific statement.
    /// </remarks>
    public void modifyQuery(Query _query)
    {
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;
        Query                   query = _query;

        this.parmShowDialog(false);
        queryBuildDataSource = query.dataSourceTable(tablenum(RetailStatementTable));

        if (!queryBuildDataSource)
        {
            queryBuildDataSource = query.addDataSource(Tablenum(RetailStatementTable));
        }

        queryBuildRange = queryBuildDataSource.findRange(fieldnum(RetailStatementTable, statementId));

        if (!queryBuildRange)
        {
            queryBuildRange = queryBuildDataSource.addRange(fieldnum(RetailStatementTable, statementId));
        }

        if (statementTable)
        {
            queryBuildRange.value(statementTable.statementId);
        }
        else
        {
            queryBuildRange.value("");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatementArgs</Name>
				<Source><![CDATA[
        public Args parmStatementArgs(Args _statementArgs = statementArgs)
    {
        if (_statementArgs && _statementArgs.dataset())
        {
            statementArgs = _statementArgs;

            switch (statementArgs.dataset())
            {
                case(tablenum(RetailStatementTable))   :
                    statementTable = statementArgs.record();
                    break;
            }
        }

        return statementArgs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the method <c>modifyQuery</c> to modify the existing query.
    /// </summary>
    protected void prePromptModifyContract()
    {
        super();
        this.modifyQuery(this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>startOperation</Name>
				<Source><![CDATA[
        public SysOperationStartResult startOperation()
    {
        this.parmReportName(ssrsReportStr(RetailStatement, Report));
        this.parmDialogCaption("@RET3814");
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public static ClassDescription description()
    {
        return "@RET4132";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        RetailStatementController retailStatementController = new RetailStatementController();

        retailStatementController.parmStatementArgs(_args);
        retailStatementController.parmArgs(_args);
        retailStatementController.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>