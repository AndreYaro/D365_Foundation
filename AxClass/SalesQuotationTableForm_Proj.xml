<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationTableForm_Proj</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SalesQuotationTypeFactoryAttribute(QuotationType::Project)]
class SalesQuotationTableForm_Proj extends SalesQuotationTableForm
{
    ProjTable           projTable;
    ProjInvoiceTable    projInvoiceTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultQuotationType</Name>
				<Source><![CDATA[
    QuotationType  defaultQuotationType()
    {
        return QuotationType::Project;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableUpdateButtonGroup</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void enableUpdateButtonGroup(SalesQuotationTable        _salesQuotationTable,
                                 FormControl                _buttonGroupUpdate)
    {
        if ((_salesQuotationTable.QuotationStatus == SalesQuotationStatus::Confirmed) &&
            (_salesQuotationTable.TransferredToForecast == NoYes::Yes) &&
            (_salesQuotationTable.TransferredToItemReq == NoYes::Yes))
        {
            _buttonGroupUpdate.enabled(false);
        }
        else
        {
            _buttonGroupUpdate.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableUpdateButtonsProject</Name>
				<Source><![CDATA[
    void enableUpdateButtonsProject(SalesQuotationTable        _salesQuotationTable,
                                    FormFunctionButtonControl  buttonLinkAndTransferToProject)
    {
        boolean                     enableLinkAndTransferButton = buttonLinkAndTransferToProject ? false : true;

        SalesQuotationTable localSalesQuotationTable = _salesQuotationTable;

        if (localSalesQuotationTable)
        {
            if (!(enableLinkAndTransferButton == true))
            {
                SalesQuotationTableType salesQuotationTableType = localSalesQuotationTable.type();

                if (!enableLinkAndTransferButton)
                {
                    enableLinkAndTransferButton     = salesQuotationTableType.mayLinkToProjectBeUpdated();
                }
            }
        }

        if (localSalesQuotationTable.ProjIdRef)
        {
            ProjTable localProjTable = ProjTable::find(localSalesQuotationTable.ProjIdRef);

            if (!localProjTable.status().checkRule(ProjStatusRule::CreateQuotation))
            {
                enableLinkAndTransferButton     = false;
            }
        }

        if (buttonLinkAndTransferToProject)
        {
            buttonLinkAndTransferToProject.enabled(enableLinkAndTransferButton);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValues</Name>
				<Source><![CDATA[
    void initValues()
    {
        CustTable           custTable;
        ProjFundingSource   projFundingSource;

        salesQuotationTable.QuotationType   = QuotationType::Project;
        salesQuotationTable.QuotationStatus = SalesQuotationStatus::Created;

        if (projTable)
        {
            salesQuotationTable.ProjIdRef           = projTable.ProjId;
            salesQuotationTable.ProjInvoiceProjId   = projTable.ProjInvoiceProjId;

            if (projTable.PSASchedCalendarId)
            {
                salesQuotationTable.PSASchedCalendarId = projTable.PSASchedCalendarId;
            }
                    
            custAccount      = projTable.CustAccount;
            salesQuotationTable.CustAccount = custAccount;
            salesQuotationTable.initFromCustTable();

            custTable = CustTable::find(custAccount);

            salesQuotationTable.PriceGroupId = ProjTable::findPriceGroup(salesQuotationTable.ProjIdRef);
            salesQuotationTable.CurrencyCode = projTable.currencyId();

            select firstonly LanguageId from projFundingSource
                where projFundingSource.ContractId == projTable.ProjInvoiceProjId &&
                      projFundingSource.Party == custTable.Party;
            if (projFundingSource)
            {
                languageId       = projFundingSource.LanguageId;
            }
            else
            {
                // Handle case where there is no contract for the project or project customer is not a contract customer
                languageId       = custTable.languageId();
            }
        }
        else if (projInvoiceTable)
        {
            salesQuotationTable.ProjInvoiceProjId   = projInvoiceTable.ProjInvoiceProjId;

            // This code assumes a single customer funding source on the contract
            select firstonly LanguageId, Party, PaymentTermsId, CashDiscountId  from projFundingSource
                where projFundingSource.ContractId == projInvoiceTable.ProjInvoiceProjId &&
                      projFundingSource.FundingType == ProjFundingType::Customer;

            custTable        = CustTable::findByPartyRecId(projFundingSource.Party);
            custAccount      = custTable.AccountNum;

            salesQuotationTable.CustAccount = custAccount;
            salesQuotationTable.initFromCustTable();

            invoiceAccount   = CustTable::find(ProjFundingSource::findCustAccount(projInvoiceTable.ProjInvoiceProjId).CustAccount).InvoiceAccount;
            if (!invoiceAccount)
            {
                invoiceAccount = custAccount;
            }
            salesQuotationTable.InvoiceAccount = invoiceAccount;

            languageId                      = projFundingSource.LanguageId;
            salesQuotationTable.Payment     = projFundingSource.PaymentTermsId;
            salesQuotationTable.CashDisc    = projFundingSource.CashDiscountId;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    // Template method, mustn't be named lastValueElementName
    public IdentifierName lastValueElementName()
    {
        return formStr(SalesQuotationProjTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(
        Common          _source,
        QuotationType   _quotationType = QuotationType::Project)
    {
        if (_source.TableId == tableNum(ProjTable))
        {
            projTable = _source as ProjTable;
        }
        else if (_source.TableId == tableNum(ProjInvoiceTable))
        {
            projInvoiceTable = _source as ProjInvoiceTable;
        }

        super(_source,_quotationType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void  main(Args  args)
    {
        new MenuFunction(menuitemDisplayStr(SalesQuotationProjTable), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
