<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanUpdResetReceived</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>KanbanUpdResetReceived</c> class performs a status reset for kanbans that have a received
///    status.
/// </summary>
public class KanbanUpdResetReceived extends KanbanUpdReset
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cleanUp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs actions for the received status reset.
    /// </summary>
    protected void cleanUp()
    {
        this.resetQuantity();
        this.updateKanban();
        this.resetKanbanJobs();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetKanbanJobs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets kanban jobs that are related to the kanban that is being reset.
    /// </summary>
    protected void resetKanbanJobs()
    {
        KanbanStatus        kanbanStatusLocal       = kanban.status(updateJobs);
        LeanKanbanJobStatus leanKanbanJobStatus     = kanbanStatusLocal.correspondingKanbanJobStatus();
        boolean             ok                      = true;
        KanbanJob           kanbanJob;

        if (kanbanStatusLocal.mustSynchronizeKanbanJobStatus(true))
        {
            ttsbegin;
            while select kanbanJob
                order by Sequence desc
                where kanbanJob.Kanban == kanban.RecId
            {
                if (kanbanJob.existPreviousJob())
                {
                    ok = ok && this.resetKanbanJob(kanbanJob, LeanKanbanJobStatus::NotPlanned);
                }
                else
                {
                    ok = ok && this.resetKanbanJob(kanbanJob, leanKanbanJobStatus);
                }

                if (!ok)
                {
                    throw Exception::Error;
                }
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets the kanban received quantity.
    /// </summary>
    protected void resetQuantity()
    {
        kanban.QuantityReceived  = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateKanban</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the <c>Kanban</c> table record.
    /// </summary>
    /// <remarks>
    ///    The record must be selected for update.
    /// </remarks>
    protected void updateKanban()
    {
        this.setStatus(LeanKanbanStatus::Assigned);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static KanbanUpdReset construct()
    {
        return new KanbanUpdResetReceived();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>