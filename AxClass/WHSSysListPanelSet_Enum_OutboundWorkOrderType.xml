<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSSysListPanelSet_Enum_OutboundWorkOrderType</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>WHSSysListPanelSet_Enum_OutboundWorkOrderType</c> class initializes and sets up the <c>SysListPanel</c>
///    control on the outbound work load chart filter form. This control loads the outbound work transaction types.
/// </summary>
internal final class WHSSysListPanelSet_Enum_OutboundWorkOrderType extends SysListPanelSet_Enum
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /*
        Must be in the format [[Id,          column1, column2], [Id,          column1, column2], ...] when using one image
        Must be in the format [[Id, ImageId, column1, column2], [Id, ImageId, column1, column2], ...] when using imagelists
        Where Id is the Ids used when adding and removing items
    */
    [Hookable(false)]
    public final container getData()
    {
        DictEnum dictEnum = new DictEnum(enumNum(WHSWorkTransType));
        container selectedData, availableData;
        
        if (dictEnum)
        {
            Set inSetData = Set::create(inSet.pack());
            int i;

            for (int idx = 0; idx < dictEnum.values(); idx++)
            {
                WHSWorkTransType workTransType = dictEnum.index2Value(idx);

                if (inSetData.in(workTransType))
                {
                    i++;
                    selectedData    += [[i, dictEnum.index2Label(idx), idx]];
                }
                else if (WHSOutboundWorkLoadChartHelper::isOutboundWorkOrderType(workTransType))
                {
                    i++;
                    availableData   += [[i, dictEnum.index2Label(idx), idx]];
                }
            }
        }

        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSSysListPanelSet_Enum_OutboundWorkOrderType construct()
    {
        return new WHSSysListPanelSet_Enum_OutboundWorkOrderType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static SysListPanel newForm(FormRun     formRun,
                                        int         parentId,
                                        boolean     hasAddAllButton     = false,
                                        boolean     hasRemoveAllButton  = false)


    {
        WHSSysListPanelSet_Enum_OutboundWorkOrderType sysListPanel = WHSSysListPanelSet_Enum_OutboundWorkOrderType::construct();
    
        sysListPanel.parmFormRun(formRun);
        sysListPanel.parmParentId(parentId);
        sysListPanel.parmHasAddAllButton(hasAddAllButton);
        syslistPanel.parmHasRemoveAllButton(hasRemoveAllButton);

        sysListPanel.build();
        return sysListPanel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>