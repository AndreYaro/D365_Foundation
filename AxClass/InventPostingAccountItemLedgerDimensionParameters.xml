<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPostingAccountItemLedgerDimensionParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventPostingAccountItemLedgerDimensionParameters</c> class contains the parameters for retrieving the posting ledger dimension.
/// </summary>
class InventPostingAccountItemLedgerDimensionParameters extends InventPostingSearchParameters
{
    public InventCategoryRelation   ItemCategory;
    public CustVendAC               AccountNum;
    public CustVendGroupId          AccountGroup;
    public TaxGroup                 TaxGroup;
    public InventDim                InventDim_RU = null;
    public InventSiteRelation_CN    SiteRelation = '';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventPostingAccountItemLedgerDimensionParameters construct()
    {
        return new InventPostingAccountItemLedgerDimensionParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new parameter for searching an inventory posting account ledger dimension for an item.
    /// </summary>
    /// <param name="_accountType">An inventory account type.</param>
    /// <param name="_itemId">An item Id.</param>
    /// <param name="_itemGroupId">An item group Id.</param>
    /// <param name="_itemCategory">An item category.</param>
    /// <param name="_accountNum">An account number.</param>
    /// <param name="_accountGroup">An account group.</param>
    /// <param name="_taxGroup">A sales tax group.</param>
    /// <param name="_inventDim_RU">An inventory dimension.</param>
    /// <param name="_siteRelation">An inventory site relation.</param>
    /// <returns>The created search parameter.</returns>
    public static InventPostingAccountItemLedgerDimensionParameters newFromParameters(
        InventAccountType       _accountType,
        ItemId                  _itemId,
        ItemGroupId             _itemGroupId,
        InventCategoryRelation  _itemCategory,
        CustVendAC              _accountNum,
        CustVendGroupId         _accountGroup,
        TaxGroup                _taxGroup,
        InventDim               _inventDim_RU = null,
        InventSiteRelation_CN   _siteRelation = '')
    {
        InventPostingAccountItemLedgerDimensionParameters parameter = InventPostingAccountItemLedgerDimensionParameters::construct();

        parameter.AccountType = _accountType;
        parameter.ItemId = _itemId;
        parameter.ItemGroup = _itemGroupId;
        parameter.ItemCategory = _itemCategory;
        parameter.AccountNum = _accountNum;
        parameter.AccountGroup = _accountGroup;
        parameter.TaxGroup = _taxGroup;
        parameter.InventDim_RU = _inventDim_RU;
        parameter.SiteRelation = _siteRelation;

        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new parameter for searching an inventory posting account ledger dimension for an item.
    /// </summary>
    /// <param name = "_salesLine">A sales line.</param>
    /// <param name = "_inventAccountType">An inventory account type.</param>
    /// <param name = "_itemGroupId">An item group Id.</param>
    /// <param name = "_inventDim">An inventory dimension.</param>
    /// <param name = "_siteRelation">An inventory site relation.</param>
    /// <returns>The created parameter instance.</returns>
    public static InventPostingAccountItemLedgerDimensionParameters newFromSalesLine(
        SalesLine _salesLine,
        InventAccountType _inventAccountType,
        ItemGroupId _itemGroupId,
        InventDim _inventDim = null,
        InventSiteRelation_CN _siteRelation = '')
    {
        return InventPostingAccountItemLedgerDimensionParameters::newFromParameters(
            _inventAccountType,
            _salesLine.ItemId,
            _itemGroupId,
            _salesLine.SalesCategory,
            _salesLine.CustAccount,
            _salesLine.CustGroup,
            _salesLine.TaxGroup,
            _inventDim,
            _siteRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new parameter for searching an inventory posting account ledger dimension for an item.
    /// </summary>
    /// <param name = "_purchLine">A purchase line.</param>
    /// <param name = "_inventAccountType">An inventory account type.</param>
    /// <param name = "_itemGroupId">An item group Id.</param>
    /// <param name = "_inventDim">An inventory dimension.</param>
    /// <param name = "_siteRelation">An inventory site relation.</param>
    /// <returns>The created parameter instance.</returns>
    public static InventPostingAccountItemLedgerDimensionParameters newFromPurchLine(
        PurchLine _purchLine,
        InventAccountType _inventAccountType,
        ItemGroupId _itemGroupId,
        InventDim _inventDim = null,
        InventSiteRelation_CN _siteRelation = '')
    {
        return InventPostingAccountItemLedgerDimensionParameters::newFromParameters(
            _inventAccountType,
            _purchLine.ItemId,
            _itemGroupId,
            _purchLine.ProcurementCategory,
            _purchLine.VendAccount,
            _purchLine.VendGroup,
            _purchLine.TaxGroup,
            _inventDim,
            _siteRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSalesLineAndTableForCustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new parameter for searching an inventory posting account ledger dimension for an item from a sales line and a sales table for customer account.
    /// </summary>
    /// <param name = "_salesLine">A sales line record.</param>
    /// <param name = "_salesTable">A sales table record.</param>
    /// <param name = "_accountType">An inventory account type.</param>
    /// <returns>The created parameter instance.</returns>
    public static InventPostingAccountItemLedgerDimensionParameters newFromSalesLineAndTableForCustAccount(SalesLine _salesLine, SalesTable _salesTable, InventAccountType _accountType)
    {
        return InventPostingAccountItemLedgerDimensionParameters::newFromParameters(
            _accountType,
            _salesLine.ItemId,
            InventTable::find(_salesLine.ItemId).itemGroupId(),
            _salesLine.SalesCategory,
            _salesTable.CustAccount,
            _salesTable.CustGroup,
            _salesTable.TaxGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSalesLineAndTableForInvoiceAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new parameter for searching an inventory posting account ledger dimension for an item from a sales line and a sales table for an invoice account.
    /// </summary>
    /// <param name = "_salesLine">A sales line record.</param>
    /// <param name = "_salesTable">A sales table record.</param>
    /// <param name = "_accountType">An inventory account type.</param>
    /// <returns>The created parameter instance.</returns>
    public static InventPostingAccountItemLedgerDimensionParameters newFromSalesLineAndTableForInvoiceAccount(SalesLine _salesLine, SalesTable _salesTable, InventAccountType _accountType)
    {
        return InventPostingAccountItemLedgerDimensionParameters::newFromParameters(
            _accountType,
            _salesLine.ItemId,
            InventTable::find(_salesLine.ItemId).itemGroupId(),
            0,
            _salesTable.InvoiceAccount,
            _salesTable.CustGroup,
            _salesTable.TaxGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clones the current instance with copying the field values.
    /// </summary>
    /// <returns>The cloned parameter instance.</returns>
    public InventPostingAccountItemLedgerDimensionParameters clone()
    {
        return InventPostingAccountItemLedgerDimensionParameters::newFromParameters(
            this.AccountType,
            this.ItemId,
            this.ItemGroup,
            this.ItemCategory,
            this.AccountNum,
            this.AccountGroup,
            this.TaxGroup,
            this.InventDim_RU,
            this.SiteRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameterWithBackup</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Creates a new parameter for searching an inventory posting account ledger dimension for an item from a parameter with backup inventory account type.
    /// </summary>
    /// <param name = "_parameterWithBackup">A search parameter with backup inventory account type.</param>
    /// <returns>The created parameter instance.</returns>
    public static InventPostingAccountItemLedgerDimensionParameters newFromParameterWithBackup(InventPostingAccountItemWithBackupLedgerDimensionParameters _parameterWithBackup)
    {
        return InventPostingAccountItemLedgerDimensionParameters::newFromParameters(
            _parameterWithBackup.AccountType,
            _parameterWithBackup.ItemId,
            _parameterWithBackup.ItemGroup,
            _parameterWithBackup.ItemCategory,
            _parameterWithBackup.AccountNum,
            _parameterWithBackup.AccountGroup,
            _parameterWithBackup.TaxGroup,
            _parameterWithBackup.InventDim_RU,
            _parameterWithBackup.SiteRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateAccountGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the account group.
    /// </summary>
    public void populateAccountGroup()
    {
        if (!this.AccountGroup)
        {
            this.AccountGroup = InventPosting::accountGroup(this.AccountType, this.AccountNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the item group.
    /// </summary>
    public void populateItemGroup()
    {
        if (!this.ItemGroup && this.ItemId)
        {
            this.ItemGroup  = InventTable::find(this.ItemId).itemGroupId();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>