<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchFormletterParmDataInvoiceApplicationSuite_IT_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class complements the logic of <c>PurchFormletterParmDataInvoice</c> in order to pass additional field when form letter is initialized via <c>VendInvoiceInfoTableTmp</c>.
/// </summary>
[ExtensionOf(classStr(PurchFormletterParmDataInvoice))]
public final class PurchFormletterParmDataInvoiceApplicationSuite_IT_Extension
{
    private VendDocumentTableMap oldParmTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildCreateInvoiceHeaderFromTempTableFieldMap</Name>
				<Source><![CDATA[
    protected Map buildCreateInvoiceHeaderFromTempTableFieldMap(QueryBuildDataSource _qbdsVendInvoiceInfoTableTmp)
    {
        Map targetToSourceMap = next buildCreateInvoiceHeaderFromTempTableFieldMap(_qbdsVendInvoiceInfoTableTmp);
        targetToSourceMap.insert(fieldStr(VendInvoiceInfoTable, PlafondDate_IT), [_qbdsVendInvoiceInfoTableTmp.uniqueId(), fieldStr(VendInvoiceInfoTableTmp, PlafondDate_IT)]);
        targetToSourceMap.insert(fieldStr(VendInvoiceInfoTable, VendorVATDate), [_qbdsVendInvoiceInfoTableTmp.uniqueId(), fieldStr(VendInvoiceInfoTableTmp, VendorVATDate)]);

        return targetToSourceMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildCreateInvoiceHeaderFromTempTableFieldQuery</Name>
				<Source><![CDATA[
    protected void buildCreateInvoiceHeaderFromTempTableFieldQuery(QueryBuildDataSource _qbdsVendInvoiceInfoTableTmp)
    {
        next buildCreateInvoiceHeaderFromTempTableFieldQuery(_qbdsVendInvoiceInfoTableTmp);
        _qbdsVendInvoiceInfoTableTmp.addSelectionField(fieldNum(VendInvoiceInfoTableTmp, PlafondDate_IT));
        _qbdsVendInvoiceInfoTableTmp.addSelectionField(fieldNum(VendInvoiceInfoTableTmp, VendorVATDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultHeaderCountryRegionData</Name>
				<Source><![CDATA[
    protected void defaultHeaderCountryRegionData()
    {
        next defaultHeaderCountryRegionData();

        if (FeatureStateProvider::isFeatureEnabled(BaseDocumentTrackingImprovementsFeature_IT::instance()))
        {
            VendInvoiceInfoTable vendInvoiceInfoTable;
            while select vendInvoiceInfoTable
                where vendInvoiceInfoTable.ParmId == this.parmId()
            {
                BaseDocument_IT::insertForVendInvoiceInfoTable(vendInvoiceInfoTable);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>packExtensions</Name>
				<Source><![CDATA[
    public void packExtensions(VendDocumentTableMap _oldParmTable, VendDocumentTableMap _newParmTable)
    {
        next packExtensions(_oldParmTable, _newParmTable);

        if (FeatureStateProvider::isFeatureEnabled(BaseDocumentTrackingImprovementsFeature_IT::instance()))
        {
            oldParmTable = _oldParmTable;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertParmTable</Name>
				<Source><![CDATA[
    protected void insertParmTable(Common _vendInvoiceInfoTable)
    {
        next insertParmTable(_vendInvoiceInfoTable);

        if (FeatureStateProvider::isFeatureEnabled(BaseDocumentTrackingImprovementsFeature_IT::instance())
            && oldParmTable)
        {
            BaseDocument_IT baseDocument = BaseDocument_IT::findByTable(oldParmTable);
            BaseDocument_IT::updateRefRecords(baseDocument, _vendInvoiceInfoTable);
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>populateVendInvoiceInfoTable</Name>
				<Source><![CDATA[
    protected VendInvoiceInfoTable populateVendInvoiceInfoTable(Common _vendInvoiceInfoTable)
    {
        VendInvoiceInfoTable vendInvoiceInfoTable = next populateVendInvoiceInfoTable(_vendInvoiceInfoTable);

        if (FeatureStateProvider::isFeatureEnabled(VendorVATDateFeature::instance()))
        {
            LedgerJournalTrans ledgerJournalTransLocal = LedgerJournalTrans::findRecId(vendInvoiceInfoTable.PoolRecId, false);

            if (ledgerJournalTransLocal)
            {
                vendInvoiceInfoTable.VendorVATDate = ledgerJournalTransLocal.VendorVATDate;
            }
        }

        return vendInvoiceInfoTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>