<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25DimensionDefaultingLookupHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RTax25DimensionDefaultingLookupHelper
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isRTax25Lookup</Name>
				<Source><![CDATA[
    private static boolean isRTax25Lookup(DimensionAttributeRecId _dimensionAttribute)
    {
        RTax25Parameters rTax25Parameters = RTax25Parameters::find();
        return rTax25Parameters.LookupDimensionNum && _dimensionAttribute == rTax25Parameters.DimensionAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doShowTreeTab</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(DimensionLookup), delegatestr(DimensionLookup, doShowTreeTabDelegate))]
    public static void doShowTreeTab(DimensionAttributeRecId _dimensionAttribute, EventHandlerResult _ret)
    {
        boolean returnValue = false;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            returnValue = RTax25DimensionDefaultingLookupHelper::isRTax25Lookup(_dimensionAttribute);
        }

        _ret.result(returnValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTreeEngine</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(DimensionLookup), delegatestr(DimensionLookup, getTreeEngineDelegate))]
    public static void getTreeEngine(FormTreeControl _formTree, FormDataSource _tableDS, EventHandlerResult _ret)
    {
        RTax25ProfitDefaultingDimensionTree treeEngine;

        treeEngine = RTax25ProfitTree::newFormTree(_formTree, _tableDS);
        treeEngine.buildTree();

        _ret.result(treeEngine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTreeVisible</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(DimensionLookup), delegatestr(DimensionLookup, isTreeVisibleDelegate))]
    public static void isTreeVisible(Object _treeEngine, EventHandlerResult _ret)
    {
        RTax25ProfitDefaultingDimensionTree treeEngine = _treeEngine;

        _ret.result(treeEngine.parmTreeVisible());
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeClose</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(DimensionLookup), delegatestr(DimensionLookup, treeCloseDelegate))]
    public static void treeClose(Object _treeEngine, boolean _treeVisible)
    {
        RTax25ProfitDefaultingDimensionTree treeEngine = _treeEngine;

        treeEngine.parmTreeVisible(_treeVisible);
        treeEngine.close();
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeSelectionChanged</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(DimensionLookup), delegatestr(DimensionLookup, treeSelectionChangedDelegate))]
    public static void treeSelectionChanged(Object _treeEngine, FormTreeItem _OldItem, FormTreeItem _NewItem, FormTreeSelect _how, EventHandlerResult _ret)
    {
        RTax25ProfitDefaultingDimensionTree treeEngine = _treeEngine;

        treeEngine.treeChanged(_newItem);

        _ret.result(treeEngine.canSelect());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>