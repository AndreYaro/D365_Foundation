<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationEditLinesFormCBD_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>SalesQuotationEditLinesFormCBD_Extension</c> is an extension class of the <c>SalesQuotationEditLinesForm</c>
/// that supports ER runtime print destinations.
/// </summary>
[ExtensionOf(classStr(SalesQuotationEditLinesForm))]
internal final class SalesQuotationEditLinesFormCBD_Extension
{
    private container printManagementExtensionsParameters;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>printManagementExtensionsParameters</Name>
				<Source><![CDATA[
    public container printManagementExtensionsParameters()
    {
        return printManagementExtensionsParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrintManagementExtensionsParameters</Name>
				<Source><![CDATA[
    public void updatePrintManagementExtensionsParameters(container _printManagementExtensionsParameters)
    {
        printManagementExtensionsParameters = _printManagementExtensionsParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>callERPrintSettingsFormletter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls ER destinations forms.
    /// </summary>
    /// <param name = "_salesQuotationEditLinesForm">An instance of the class <c>SalesQuotationEditLinesForm</c>.</param>
    /// <returns>true if ER destinations were selected; otherwise, false.</returns>
    public static boolean callERPrintSettingsFormletter(SalesQuotationEditLinesForm _salesQuotationEditLinesForm)
    {
        boolean ret;

        NonSSRSPrintMgmtAdapterPromptAdditionalParametersResult result = NonSSRSPrintMgmtAdapter::promptAndRestoreAdditionalParameters(
            CBDDestinationsFormLetterEngine::getFormatNamesDestinationMapByFormLetter(_salesQuotationEditLinesForm, _salesQuotationEditLinesForm.printMgmtDocumentTypeProject()),
            NonSSRSPrintMgmtPromptExtensionParameters::newFromPacked(_salesQuotationEditLinesForm.printManagementExtensionsParameters()));

        if (result.parmPromptResult())
        {
            ret = true;

            if (result.parmExtensionParameters() &&
                !result.parmExtensionParameters().isEmpty())
            {
                _salesQuotationEditLinesForm.updatePrintManagementExtensionsParameters(result.parmExtensionParameters().pack());
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSupportedCBDReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Identifies if ER destination on runtime form is supported.
    /// </summary>
    /// <returns>true if ER destination on runtime form is supported; otherwise, false.</returns>
    internal boolean isSupportedCBDReport()
    {
        return CBDDestinationsFormLetterEngine::isSupportedPrintMgmtDocType(this.printMgmtDocumentTypeProject());
    }

]]></Source>
			</Method>
			<Method>
				<Name>analyzePrintManagementSetup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Analyzes the print management setup.
    /// </summary>
    /// <returns>A container of analyze results.</returns>
    internal container analyzePrintManagementSetup()
    {
        return CBDDestinationsFormLetterEngine::analyzePrintManagementSetup(this, this.printMgmtDocumentTypeProject());
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        container packed = next pack();
        packed = SysPackExtensions::appendVariableToPack(
            packed,
            classStr(SalesQuotationEditLinesFormCBD_Extension),
            varStr(printManagementExtensionsParameters),
            printManagementExtensionsParameters);
        return packed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean ret = next unpack(_packedClass);
        
        if (ret)
        {
            printManagementExtensionsParameters = SysPackExtensions::extractPackedVariable(
                _packedClass,
                classStr(SalesQuotationEditLinesFormCBD_Extension),
                varStr(printManagementExtensionsParameters));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkClientOutput</Name>
				<Source><![CDATA[
    protected boolean checkClientOutput()
    {
        boolean ret = next checkClientOutput();

        if (ret && this.isSupportedCBDReport())
        {
            boolean isSSRSPrintSetupExists;

            [isSSRSPrintSetupExists] = this.analyzePrintManagementSetup();

            if (!isSSRSPrintSetupExists)
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>printMgmtDocumentTypeProject</Name>
				<Source><![CDATA[
    private PrintMgmtDocumentType printMgmtDocumentTypeProject()
    {
        PrintMgmtDocumentType ret;

        switch (this.callerModuleAxapta())
        {
            case ModuleAxapta::SalesOrder:
                ret = this.printMgmtDocumentType();
                break;

            case ModuleAxapta::Project:
                ret = PrintMgmtDocumentType::ProjectQuotation;
                break;

            default:
                // Extension point
                ret = this.printMgmtDocumentTypeProjectDefault();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>