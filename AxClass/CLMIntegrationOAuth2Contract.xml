<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CLMIntegrationOAuth2Contract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CLMIntegrationOAuthDetailsContract</c> class defines data contract for OAuth authentication.
/// </summary>
[DataContract]
internal class CLMIntegrationOAuth2Contract
{
    private CLMIntegrationAuthorizationURL authorizationUrl;
    private CLMIntegrationAuthorizationHeaderPrefix authorizationHeaderPrefix;
    private CLMIntegrationAuthorizationClientID clientId;
    private CLMIntegrationAuthorizationClientSecret clientSecret;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAuthorizationUrl</Name>
				<Source><![CDATA[
    [DataMember('AuthorizationUrl')]
    internal CLMIntegrationAuthorizationURL parmAuthorizationUrl(CLMIntegrationAuthorizationURL _authorizationUrl = authorizationUrl)
    {
        authorizationUrl = _authorizationUrl;

        return authorizationUrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAuthorizationHeaderPrefix</Name>
				<Source><![CDATA[
    [DataMember('AuthorizationHeaderPrefix')]
    internal CLMIntegrationAuthorizationHeaderPrefix parmAuthorizationHeaderPrefix(CLMIntegrationAuthorizationHeaderPrefix _authorizationHeaderPrefix = authorizationHeaderPrefix)
    {
        authorizationHeaderPrefix = _authorizationHeaderPrefix;

        return authorizationHeaderPrefix;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClientId</Name>
				<Source><![CDATA[
    [DataMember('ClientID')]
    internal CLMIntegrationAuthorizationClientID parmClientId(CLMIntegrationAuthorizationClientID _clientId = clientId)
    {
        clientId = _clientId;

        return clientId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClientSecret</Name>
				<Source><![CDATA[
    [DataMember('ClientSecret')]
    internal CLMIntegrationAuthorizationClientSecret parmClientSecret(CLMIntegrationAuthorizationClientSecret _clientSecret = clientSecret)
    {
        clientSecret = _clientSecret;

        return clientSecret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWizard</Name>
				<Source><![CDATA[
    internal void initFromWizard(CLMIntegrationEstablishConnectionWizard _wizard)
    {
        this.parmAuthorizationUrl(_wizard.parmAuthorizationURL());
        this.parmAuthorizationHeaderPrefix(_wizard.parmAuthorizationHeaderPrefix());
        this.parmClientId(_wizard.parmClientID());
        this.parmClientSecret(_wizard.parmClientSecret());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static CLMIntegrationOAuth2Contract construct()
    {
        return new CLMIntegrationOAuth2Contract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>