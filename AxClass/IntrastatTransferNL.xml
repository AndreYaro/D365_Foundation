<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IntrastatTransferNL</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Transfers intrastat in Netherlands country context.
/// </summary>
#ISOCountryRegionCodes
[IntrastatCountryRegion(#isoNL)]
public class IntrastatTransferNL extends IntrastatTransfer implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exportToBeIncluded</Name>
				<Source><![CDATA[
    public boolean exportToBeIncluded(LogisticsAddressCountryRegionId _dlvCountryRegion,
                                      RefNum _refNum = RefNum::SalesOrder,
                                      LogisticsAddressCountryRegionId _countryRegionOfShipment = '',
                                      LogisticsAddressCountryRegionId _invoiceCountryRegion = '',
                                      TradeLineDlvTypeId _dlvType = TradeLineDlvType::None,
                                      LogisticsAddressCountryRegionId _trnasportDocumentCountryRegion = '',
                                      IntrastatOrderType _orderType = IntrastatOrderType::Order)
    {
        if ((_refNum != RefNum::SalesOrder &&  _refNum != RefNum::Cust ) && _refNum)
        {
            return false;
        }

        if (this.isDomesticCache(_dlvCountryRegion))
        {
            return false;
        }

        // triangular deals
        if (_dlvType == TradeLineDlvType::DropShip)
        {
            return this.exportToBeIncludedDropShip(_countryRegionOfShipment, _dlvCountryRegion);
        }

        if (!this.isCountryRegionStateInEU(deliveryPostalAddress) &&
            !this.isSpecialDomesticCache(_dlvCountryRegion))
        {
            return false;
        }

        // delivering to another EU country/region means that we should report
        if (_dlvCountryRegion == primaryPostalAddressForCurrentCompany.CountryRegionId)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDirectionCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the direction code on the <c>Intrastat</c> table buffer.
    /// </summary>
    /// <param name="_intrastat">
    /// The <c>Intrastat</c> table buffer.
    /// </param>
    /// <remarks>
    /// Any derived classes can override this method to set a value for the direction code.
    /// </remarks>
    protected void setDirectionCode(Intrastat _intrastat)
    {
        const str CommodityCodeArrival = '6';
        const str CommodityCodeDispatch = '7';

        _intrastat.StatTrans = _intrastat.Direction == IntrastatDirection::Import ? CommodityCodeArrival : CommodityCodeDispatch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>