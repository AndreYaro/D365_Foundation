<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsLocationDirectiveLocationTTSLock</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WhsLocationDirectiveLocationTTSLock extends WHSLocationDirectiveLockBase
{
    private str lockPrefix;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
        super();
        reqReaderWriterLock.parmForceUserConnectionLock(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lockName</Name>
				<Source><![CDATA[
    internal str lockName()
    {
        return strFmt('%1_%2_%3_%4', lockPrefix, location.DataAreaId, location.inventLocationId, location.wMSLocationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLocation</Name>
				<Source><![CDATA[
    internal static WhsLocationDirectiveLocationTTSLock newFromLocation(WMSLocation _location, str _lockPrefix)
    {
        WhsLocationDirectiveLocationTTSLock result = new WhsLocationDirectiveLocationTTSLock();
        result.init();
        result.setLocation(_location);
        result.lockPrefix = _lockPrefix;
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>acquireLock</Name>
				<Source><![CDATA[
    public boolean acquireLock(WHSWaveLockWait _waveLockWait)
    {
        Connection connection = new Connection();
        reqReaderWriterLock.setConnection(this.lockName(), connection);
        boolean lockAcquired = reqReaderWriterLock.tryEnterReaderLock(this.lockName(), _waveLockWait);
        connection.finalize();

        return lockAcquired;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>