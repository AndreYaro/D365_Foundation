<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjJournalTableParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class provides parameters for project journal table.
/// </summary>
public class ProjJournalTableParameters implements System.IDisposable
{
    private static ProjJournalTableParameters instance;
    private ProjJournalStatusNameId statusNameId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw Error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static ProjJournalTableParameters construct()
    {
        return new ProjJournalTableParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatusNameId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>StatusNameId</c> of the selected record.
    /// </summary>
    /// <param name="_statusNameId">
    /// A <c>StatusNameId</c> field value.
    /// </param>
    /// <returns>
    /// An instance of <c>ProjJournalTableParameters</c> which copies the selected <c>StatusNameId</c>.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    public static ProjJournalTableParameters parmStatusNameId(ProjJournalStatusNameId _statusNameId)
    {
        ProjJournalTableParameters insertMethodParameters = ProjJournalTableParameters::construct();
        insertMethodParameters.StatusNameId(_statusNameId);

        return insertMethodParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>statusNameId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>StatusNameId</c> of the selected record.
    /// </summary>
    /// <param name="_statusNameId">
    /// A <c>StatusNameId</c> field value.
    /// </param>
    /// <returns>
    /// An instance of <c>ProjJournalTableParameters</c> which copies the selected <c>StatusNameId</c>.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    public ProjJournalStatusNameId statusNameId(ProjJournalStatusNameId _statusNameId = statusNameId)
    {
        if (_statusNameId)
        {
            statusNameId = _statusNameId;
        }

        return statusNameId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disposes the current instance of <c>ProjJournalTableParameters</c>.
    /// </summary>
    [Hookable(false), Wrappable(false)]
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current instance of <c>ProjJournalTableParameters</c>.
    /// </summary>
    /// <returns>The current instance of <c>ProjJournalTableParameters</c>.</returns>
    [Hookable(false), Wrappable(false)]
    public static ProjJournalTableParameters current()
    {
        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>