<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25RegType_ProfitAllocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>RTax25RegType_ProfitAllocation</c> used to describe profit tax allocation register and its properties.
/// </summary>
/// <remarks>
/// The class is extended from the <c>RTax25RegType_Std</c> class, because it may use sequences for calculation.
/// </remarks>
class RTax25RegType_ProfitAllocation extends RTax25RegType_Std
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method returns description of register.
    /// </summary>
    /// <returns>
    /// The description of register.
    /// </returns>
    public NotesLine description()
    {
        return "@SYP4881209";
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the register's variables, structure and parameters.
    /// </summary>
    /// <param name="_useDetachedTable">
    /// If register uses separate table for data storage, then its true.
    /// </param>
    /// <remarks>
    /// The parameter _useDetachedTable kept for compatibity with parent classes, as this register always uses detached table.
    /// </remarks>
    public void init(boolean _useDetachedTable = true)
    {
        if (_useDetachedTable)
        {
            detachedTableId = tableNum(RTax25RegisterTrans_ProfitAllocation);
            this.initFromDetachedTable();
        }
        else
        {
            fieldType        = [ extendedtypenum(SeparateDivisionId_RU),
                                 extendedtypenum(OKATO_RU),
                                 extendedtypenum(RTax25EmplData),
                                 extendedtypenum(RAssetAmount),
                                 extendedtypenum(RTax25ProfitAllocPercent),
                                 extendedtypenum(AmountMST),
                                 extendedtypenum(TaxCode),
                                 extendedtypenum(TaxValue) ];

            fieldLabel       = [ "@GLS114703",
                                 "@Geocodes:RCM",
                                 "@SYP4881220",
                                 "@SYP4881231",
                                 "@SYP4881222",
                                 "@SYP4881219",
                                 "@SYS76477",
                                 "@SYS11762" ];

            fieldDescription = [ "@GLS114704",
                                 "@Geocodes:RCMText",
                                 "@SYP4881210",
                                 "@SYS25221",
                                 "@SYS69069",
                                 "@SYS25221",
                                 "@SYS21878",
                                 "@SYS21879" ];
        }

        registerType = RTax25RegisterType::ProfitAllocation;

        calcParameters = ["@GLS105368", "@SYP4881212", "@SYP4881230"];

        headerFields = [0, 0, 1, 1, 1, 1, 0, 0];

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>