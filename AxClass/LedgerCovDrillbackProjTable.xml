<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCovDrillbackProjTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>LedgerCovDrillbackProjTable</c> class provides the Cash Flow document drillback for project source type.
/// </summary>
[ExportMetadata(enumStr(LedgerCovDocumentType), LedgerCovDocumentType::Project)]
[Export(identifierStr(Dynamics.AX.Application.LedgerCovIDrillback))]
internal final class LedgerCovDrillbackProjTable implements LedgerCovIDrillback
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>showOriginalDocument</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void showOriginalDocument(LedgerCovDrillbackContract _contract)
    {
        ProjTable projTable = ProjTable::findRecId(_contract.ledgerCov.TransRecId);

        if (!projTable)
        {
            LedgerCovDrillback::throwOriginatingDocumentNotFoundErrorMessage();
        }

        Args args = new Args();

        // Use lookupRecord() to hit the special case on the ProjTable form for allowing direct navigation to a TaxTrans record.
        // This will make this behavior consistent with how report drill-through works, which this functionality closely mirrors.
        args.lookupRecord(projTable);
        
        MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(ProjTable), MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>userHasSecurityAccess</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean userHasSecurityAccess(LedgerCovDrillbackContract _contract)
    {
        return SecurityRights::construct().hasMenuItemAccess(SecurableType::MenuItemDisplay, menuItemDisplayStr(ProjTable));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>