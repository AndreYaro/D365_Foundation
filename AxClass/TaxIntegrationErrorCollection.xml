<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationErrorCollection</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntegrationErrorCollection</c> class is a collection of errors.
/// </summary>
public class TaxIntegrationErrorCollection
{
    private List errorList;
    private int errorCount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    private void init()
    {
        this.errorList = new List(Types::Class);
        this.errorCount = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        this.init();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationErrorCollection</c>.
    /// </summary>
    /// <returns>The new <c>TaxIntegrationErrorCollection</c>.</returns>
    public static TaxIntegrationErrorCollection construct()
    {
        return new TaxIntegrationErrorCollection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds error.
    /// </summary>
    /// <param name = "_errorCode">The error code.</param>
    /// <param name = "_errorMessage">The error message.</param>
    public void addError(TaxIntegrationErrorCode _errorCode, TaxIntegrationErrorMessage _errorMessage)
    {
        TaxIntegrationErrorObject errorObject = TaxIntegrationErrorObject::construct(_errorCode, _errorMessage);

        if (errorObject.isError())
        {
            errorCount++;
        }

        errorList.addEnd(errorObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the collection.
    /// </summary>
    public void clear()
    {
        this.init();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Has errors with valication type of error.
    /// </summary>
    /// <returns>True if has; otherwise, false.</returns>
    public boolean hasError()
    {
        return errorCount > 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayErrors</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the errors in the collection.
    /// </summary>
    public void displayErrors()
    {
        if (this.errorList)
        {
            setPrefix(this.hasError() ? "@TaxIntegrationException:ErrorReceivedFromServer" : "@TaxIntegrationException:WarningReceivedFromServer");

            var errorEnumerator = this.errorList.getEnumerator();
            while (errorEnumerator.MoveNext())
            {
                TaxIntegrationErrorObject errorObject = errorEnumerator.current();
                errorObject.display();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>