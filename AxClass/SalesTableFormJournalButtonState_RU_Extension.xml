<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTableFormJournalButtonState_RU_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesTableFormJournalButtonState))]
final class SalesTableFormJournalButtonState_RU_Extension
{
    #ISOCountryRegionCodes
    private boolean countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);

    public boolean enableInvoice4PaymButton;
    public boolean enableFactureButton;
    public boolean enableCommFactureButton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isAllEnabled</Name>
				<Source><![CDATA[
    public boolean isAllEnabled()
    {
        boolean isAllEnabled = next isAllEnabled();

        if (countryRegion_RU)
        {
            isAllEnabled = isAllEnabled && enableInvoice4PaymButton && enableFactureButton && enableCommFactureButton;
        }

        return isAllEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCheckIfUpdateContract</Name>
				<Source><![CDATA[
    public void initializeCheckIfUpdateContract(SalesTableCheckIfUpdateContract _contract)
    {
        next initializeCheckIfUpdateContract(_contract);

        _contract.parmCheckCommFacture_RU(!enableCommFactureButton);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseCanBeUpdatedContract</Name>
				<Source><![CDATA[
    public void parseCanBeUpdatedContract(SalesTableCanBeUpdatedContract _canBeUpdatedContract)
    {
        next parseCanBeUpdatedContract(_canBeUpdatedContract);
        if (countryRegion_RU)
        {
            if (!enableInvoice4PaymButton)
            {
                enableInvoice4PaymButton = _canBeUpdatedContract.parmCanInvoice4PaymBeUpdated_RU();
            }
            if (!enableFactureButton)
            {
                enableFactureButton = _canBeUpdatedContract.parmCanFactureBeUpdated_RU();
            }
                    
            if (!enableCommFactureButton)
            {
                enableCommFactureButton = _canBeUpdatedContract.parmCanCommFactureBeUpdated_RU();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the state to the buttons.
    /// </summary>
    public void applyState()
    {
        next applyState();

        if (countryRegion_RU)
        {
            switch (this.parmFormRun().name())
            {
                case formStr(SalesTable):
                    this.enableButton(formControlStr(SalesTable, buttonUpdateInvoice4Paym_RU), enableInvoice4PaymButton);
                    this.enableButton(formControlStr(SalesTable, buttonUpdateFacture_RU), enableCommFactureButton);
                    this.enableButton(formControlStr(SalesTable, factureEditLinesCust_RU), enableFactureButton && enableCommFactureButton);
                    this.enableButton(formControlStr(SalesTable, buttonProformaFacture_RU), enableInvoice4PaymButton);
                    this.enableButton(formControlStr(SalesTable, buttonProformaInvoice4Paym_RU), enableCommFactureButton);
                    this.enableButton(formControlStr(SalesTable, factureEditLinesCust_Proforma_RU), enableFactureButton && enableCommFactureButton);
                    this.showButton(formControlStr(SalesTable, factureEditLinesCust_RU), !enableInvoiceButton);
                    this.showButton(formControlStr(SalesTable, buttonUpdateFacture_RU), enableInvoiceButton);
                    this.showButton(formControlStr(SalesTable, buttonProformaInvoice4Paym_RU), enableInvoiceButton);
                    this.showButton(formControlStr(SalesTable, factureEditLinesCust_Proforma_RU), !enableInvoiceButton);
                    break;
            }
        }
        else
        {
            switch (this.parmFormRun().name())
            {
                case formStr(SalesTable):                    
                    this.showButton(formControlStr(SalesTable, buttonUpdateInvoice4Paym_RU), false);
                    this.showButton(formControlStr(SalesTable, buttonProformaFacture_RU), false);
                    this.showButton(formControlStr(SalesTable, factureEditLinesCust_RU), false);
                    this.showButton(formControlStr(SalesTable, buttonUpdateFacture_RU), false);
                    this.showButton(formControlStr(SalesTable, buttonProformaInvoice4Paym_RU), false);
                    this.showButton(formControlStr(SalesTable, factureEditLinesCust_Proforma_RU), false);
                    break;
            }     
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>