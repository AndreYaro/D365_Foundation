<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendUnrealizedRevInteractionHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     This class is the helper class for controlling the enable status of buttons on
///     <c>VendUnrealizedRevListPage_TH</c> and <c>VendUnrealizedRev_TH</c> forms.
/// </summary>
public class VendUnrealizedRevInteractionHelper
{
    VendUnrealizedRev       vendUnrealizedRev;

    boolean                 isGetRecord;
    boolean                 isPosted;

    boolean                 buttonEditEnabled;
    boolean                 buttonEditInGridEnabled;
    boolean                 buttonPostEnabled;

    boolean                 buttonAddLineEnabled;
    boolean                 buttonRemoveLineEnabled;
    boolean                 buttonUpdateEnabled;
    boolean                 buttonDeleteEnabled;
    boolean                 buttonMarkAllEnabled;
    boolean                 buttonUnmarkAllEnabled;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEnabledAddLineButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of add line button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledAddLineButton()
    {
        buttonAddLineEnabled = isGetRecord && !isPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnabledEditButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of edit button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledEditButton()
    {
        buttonEditEnabled = isGetRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnabledEditInGridButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of edit in grid button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledEditInGridButton()
    {
        buttonEditInGridEnabled = isGetRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnabledMarkAllButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of mark all button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledMarkAllButton()
    {
        buttonMarkAllEnabled = isGetRecord && !isPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnabledPostButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of post button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledPostButton()
    {
        buttonPostEnabled = isGetRecord && !isPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnabledRemoveLineButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of remove line button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledRemoveLineButton()
    {
        buttonRemoveLineEnabled = isGetRecord && !isPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnabledUnmarkAllButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of unmark all button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledUnmarkAllButton()
    {
        buttonUnmarkAllEnabled = isGetRecord && !isPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnabledUpdateButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of update button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledUpdateButton()
    {
        buttonUpdateEnabled = isGetRecord && !isPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnabledDeleteButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the enable status of delete button.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getEnabledDeleteButton()
    {
        buttonDeleteEnabled = isGetRecord && !isPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the enable status of buttons on <c>VendUnrealizedRevListPage_TH</c> form.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initActions()
    {
        this.getEnabledEditButton();
        this.getEnabledEditInGridButton();
        this.getEnabledPostButton();
        this.getEnabledDeleteButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDetailsActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the enable status of buttons on <c>VendUnrealizedRev_TH</c> form.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initDetailsActions()
    {
        this.getEnabledEditButton();
        this.getEnabledUpdateButton();
        this.getEnabledMarkAllButton();
        this.getEnabledUnmarkAllButton();
        this.getEnabledPostButton();
        this.getEnabledAddLineButton();
        this.getEnabledRemoveLineButton();
        this.getEnabledDeleteButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the initial value based on given <c>VendUnrealizedRev_TH</c> record buffer.
    /// </summary>
    /// <param name="_vendUnrealizedRev">
    ///     The given <c>VendUnrealizedRev_TH</c> record.
    /// </param>
    private void new(VendUnrealizedRev _vendUnrealizedRev)
    {
        vendUnrealizedRev = _vendUnrealizedRev;
        if (vendUnrealizedRev != null)
        {
            isGetRecord = true;
            if (vendUnrealizedRev.Posted)
            {
                isPosted = true;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonAddLineEnabled</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmButtonAddLineEnabled()
    {
        return buttonAddLineEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonEditEnabled</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmButtonEditEnabled()
    {
        return buttonEditEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonEditInGridEnabled</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmButtonEditInGridEnabled()
    {
        return buttonEditInGridEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonMarkAllEnabled</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmButtonMarkAllEnabled()
    {
        return buttonMarkAllEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonPostEnabled</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmButtonPostEnabled()
    {
        return buttonPostEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonRemoveLineEnabled</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmButtonRemoveLineEnabled()
    {
        return buttonRemoveLineEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonUnmarkAllEnabled</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmButtonUnmarkAllEnabled()
    {
        return buttonUnmarkAllEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonUpdateEnabled</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmButtonUpdateEnabled()
    {
        return buttonUpdateEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonDeleteEnabled</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmButtonDeleteEnabled()
    {
        return buttonDeleteEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs the instance of <c>VendUnrealizedRevInteractionHelper_TH</c> based on a given
    ///     <c>VendUnrealizedRev_TH</c> record buffer.
    /// </summary>
    /// <param name="_vendUnrealizedRev">
    ///     The given <c>VendUnrealizedRev_TH</c> record.
    /// </param>
    /// <returns>
    ///     Returns instance of <c>VendUnrealizedRevInteractionHelper_TH</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static VendUnrealizedRevInteractionHelper construct(VendUnrealizedRev _vendUnrealizedRev)
    {
        return new VendUnrealizedRevInteractionHelper(_vendUnrealizedRev);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>