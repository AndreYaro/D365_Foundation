<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSTransferOrderCreationCollection</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSTransferOrderCreationCollection</c> class holds a collection of information for creating transfer orders.
/// </summary>
internal final class WHSTransferOrderCreationCollection
{
    private Map transferOrders;
    private MapEnumerator transferOrdersEnumerator;
    private WHSTransferOrderCreationElement currentTransferOrderCreationElement;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>transferOrderKey</Name>
				<Source><![CDATA[
    private str transferOrderKey(InventTransferId _transferOrderId)
    {
        return strFmt('%1', _transferOrderId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addTransferOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the information about the transfer order creation to the collection.
    /// </summary>
    /// <param name = "_messageCollection">The message collection containing transfer order information.</param>
    /// <param name = "_message">The message containing transfer order information.</param>
    public void addTransferOrder(WHSMobileDeviceQueueMessageCollection _messageCollection, WHSMobileDeviceQueueMessage _message)
    {
        if (!_messageCollection)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        var key = this.transferOrderKey(_messageCollection.Identifier);

        WHSTransferOrderCreationElement transferOrder;

        if (!transferOrders.exists(key))
        {
            transferOrder = WHSTransferOrderCreationElement::newFromWHSMobileDeviceQueueMessageCollection(_messageCollection);

            transferOrders.insert(key, transferOrder);
        }
        else
        {
            transferOrder = transferOrders.lookup(key);
        }

        transferOrder.getTransferOrderLines().addTransferOrderLine(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentTransferOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>WHSTransferOrderCreationElement</c> class instance that the enumerator currently positions in the collection.
    /// </summary>
    /// <returns>A <c>WHSTransferOrderCreationElement</c> class instance.</returns>
    public WHSTransferOrderCreationElement currentTransferOrder()
    {
        return currentTransferOrderCreationElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>elements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of <c>WHSTransferOrderCreationElement</c> class instances in the collection.
    /// </summary>
    /// <returns>An integer that indicates the number of <c>WHSTransferOrderCreate</c> records in the collection.</returns>
    public int elements()
    {
        return transferOrders.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the enumerator of the collection.
    /// </summary>
    /// <remarks>The enumerator can be used to enumerate through the collection.</remarks>
    public void initializeEnumerator()
    {
        transferOrdersEnumerator = transferOrders.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the enumerator to the next <c>WHSTransferOrderCreationElement</c> class instance in the collection.
    /// </summary>
    /// <returns>A Boolean that indicates whether the enumerator successfully advances to the next <c>WHSTransferOrderCreationElement</c> class instance in the collection.</returns>
    public boolean moveNext()
    {
        boolean hasItem;

        if (transferOrdersEnumerator)
        {
            hasItem = transferOrdersEnumerator.moveNext();
        }
        else
        {
            hasItem = false;
        }

        if (hasItem)
        {
            currentTransferOrderCreationElement = transferOrdersEnumerator.currentValue();
        }

        return hasItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the enumerator to the first <c>WHSTransferOrderCreationElement</c> class instance in the collection.
    /// </summary>
    public void reset()
    {
        if (transferOrdersEnumerator)
        {
            transferOrdersEnumerator.reset();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        transferOrders = new Map(Types::String, Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSTransferOrderCreationCollection construct()
    {
        return new WHSTransferOrderCreationCollection();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>