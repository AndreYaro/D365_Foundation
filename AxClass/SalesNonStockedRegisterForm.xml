<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesNonStockedRegisterForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The sales order specific implementation for the <c>TradeNonStockedRegisterForm</c> class.
/// </summary>
class SalesNonStockedRegisterForm extends TradeNonStockedRegisterForm
{
    SalesLine salesLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventMovement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the instance of the <c>InventMovement</c> class based on the <c>SalesLine</c> object.
    /// </summary>
    /// <returns>
    /// Gets an instance of <c>InventMovement</c> class.
    /// </returns>
    protected InventMovement getInventMovement()
    {
        return InventMovement::construct(salesLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ordered and registered quantities for the <c>SalesLine</c> object.
    /// </summary>
    /// <returns>
    /// A container that has the on-order and registered quantities.
    /// </returns>
    protected container getQuantities()
    {
        return SalesNonStockedRegisterForm::getQuantitiesServer(salesLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesLine</Name>
				<Source><![CDATA[
        public SalesLine parmSalesLine(SalesLine _salesLine = salesLine)
    {
        salesLine = _salesLine;
        return salesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchLine</Name>
				<Source><![CDATA[
        public SalesPurchLine parmSalesPurchLine(SalesPurchLine _salesPurchLine = salesPurchLine)
    {
        salesLine       = _salesPurchLine;
        salesPurchLine  = _salesPurchLine;
        return salesPurchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        protected static SalesNonStockedRegisterForm construct()
    {
        return new SalesNonStockedRegisterForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantitiesServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ordered and registered quantities for the <c>SalesLine</c> object, runs on server.
    /// </summary>
    /// <param name="_salesLine">
    /// The sales line for which the quantities is returned.
    /// </param>
    /// <returns>
    /// A container that has the on-order and registered quantities.
    /// </returns>
    public static container getQuantitiesServer(SalesLine _salesLine)
    {
        UnitQty onorderQuantity = _salesLine.onOrderInSalesUnit();
        UnitQty registeredQuantity = _salesLine.registeredInSalesUnit();

        return [onorderQuantity, registeredQuantity];
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>SalesNonStockedRegisterForm</c> with the specified
    /// <c>SalesLine</c> object.
    /// </summary>
    /// <param name="_salesLine">
    /// A <c>SalesLine</c> object based on which the <c>SalesNonStockedRegisterForm</c> will be initialized.
    /// </param>
    /// <returns>
    /// A <c>SalesNonStockedRegisterForm</c> object.
    /// </returns>
    public static SalesNonStockedRegisterForm newFromSalesLine(SalesLine _salesLine)
    {
        SalesNonStockedRegisterForm salesNonStockedRegisterForm = SalesNonStockedRegisterForm::construct();
        salesNonStockedRegisterForm.parmSalesLine(_salesLine);
        salesNonStockedRegisterForm.parmSalesPurchLine(_salesLine);

        return salesNonStockedRegisterForm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
