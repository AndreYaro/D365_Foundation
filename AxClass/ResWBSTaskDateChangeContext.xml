<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResWBSTaskDateChangeContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Context class to store work breakdown structure tasks properties if date change is detected between the new and the existing version when user publishes.
/// </summary>
class ResWBSTaskDateChangeContext
{
    ActivityRecId       activityRecId;
    ProjTaskName        taskName;
    ResResourceName     resourceName;
    SchedFromDate       existingTaskStartDate;
    SchedToDate         existingTaskEndDate;
    SchedFromDate       newTaskStartDate;
    SchedToDate         newTaskEndDate;
    HierarchyIdBase     hierarchyId;
    ProjHierarchyTaskId hierarchyTaskId;
    boolean             isDraftActivityResource;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set <c>smmActivities</c> record ID.
    /// </summary>
    /// <param name = "_activityRecId"><c>smmActivities</c> record ID.</param>
    /// <returns><c>smmActivities</c> record ID.</returns>
    public ActivityRecId parmActivity(ActivityRecId _activityRecId = activityRecId)
    {
        activityRecId = _activityRecId;
        return activityRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaskName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set WBS task name.
    /// </summary>
    /// <param name = "_activityRecId">WBS task name.</param>
    /// <returns>WBS task name.</returns>
    public ProjTaskName parmTaskName(ProjTaskName _taskName = taskName)
    {
        taskName = _taskName;
        return taskName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set resource name.
    /// </summary>
    /// <param name = "_resourceName">Resource name.</param>
    /// <returns>Resource name.</returns>
    public ResResourceName parmResourceName(ProjTaskName _resourceName = resourceName)
    {
        resourceName = _resourceName;
        return resourceName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExistingTaskStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the existing task start date.
    /// </summary>
    /// <param name = "_existingTaskStartDate">Existing task start date.</param>
    /// <returns>Existing task start date.</returns>
    public SchedFromDate parmExistingTaskStartDate(SchedFromDate _existingTaskStartDate = existingTaskStartDate)
    {
        existingTaskStartDate = _existingTaskStartDate;
        return existingTaskStartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExistingTaskEndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the existing task end date.
    /// </summary>
    /// <param name = "_existingTaskEndDate">Existing task end date.</param>
    /// <returns>Existing task end date.</returns>
    public SchedToDate parmExistingTaskEndDate(SchedToDate _existingTaskEndDate = existingTaskEndDate)
    {
        existingTaskEndDate = _existingTaskEndDate;
        return existingTaskEndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewTaskStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the new task start date.
    /// </summary>
    /// <param name = "_newTaskStartDate">New task start date.</param>
    /// <returns>New task start date.</returns>
    public SchedFromDate parmNewTaskStartDate(SchedFromDate _newTaskStartDate = newTaskStartDate)
    {
        newTaskStartDate = _newTaskStartDate;
        return newTaskStartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewTaskEndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the new task end date.
    /// </summary>
    /// <param name = "_newTaskEndDate">New task end date.</param>
    /// <returns>New task end date.</returns>
    public SchedToDate parmNewTaskEndDate(SchedToDate _newTaskEndDate = newTaskEndDate)
    {
        newTaskEndDate = _newTaskEndDate;
        return newTaskEndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHierarchyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set WBS hierarchy ID.
    /// </summary>
    /// <param name = "_hierarchyId">WBS hierarchy ID.</param>
    /// <returns>WBS hierarchy ID.</returns>
    public HierarchyIdBase parmHierarchyId(HierarchyIdBase _hierarchyId = hierarchyId)
    {
        hierarchyId = _hierarchyId;
        return hierarchyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHierarchyTaskId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set WBS hierarchy task ID.
    /// </summary>
    /// <param name = "_hierarchyTaskId">WBS hierarchy task ID.</param>
    /// <returns>WBS hierarchy task ID.</returns>
    public ProjHierarchyTaskId parmHierarchyTaskId(ProjHierarchyTaskId _hierarchyTaskId = hierarchyTaskId)
    {
        hierarchyTaskId = _hierarchyTaskId;
        return hierarchyTaskId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsDraftActivityResource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set if this is an activity resource assign to a draft WBS task.
    /// </summary>
    /// <param name = "_isDraftActivityResource">Whether this is an activity resource assign to a draft WBS task.</param>
    /// <returns>true if this activity resource is assigned to a draft WBS task; otherwise false.</returns>
    public boolean parmIsDraftActivityResource(boolean _isDraftActivityResource = isDraftActivityResource)
    {
        isDraftActivityResource = _isDraftActivityResource;
        return isDraftActivityResource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor to create a new instance of <c>ResWBSTaskDateChangeContext</c> object.
    /// </summary>
    /// <returns>A new instance of <c>ResWBSTaskDateChangeContext</c> object.</returns>
    public static ResWBSTaskDateChangeContext construct()
    {
        ResWBSTaskDateChangeContext context = new ResWBSTaskDateChangeContext();
        return context;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>