<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventQualityReferenceTypeQuarantine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventQualityReferenceTypeQuarantine</c> class typifies a quarantine reference document.
/// </summary>
[InventQualityReferenceTableName(tableStr(InventQuarantineOrder))]
[InventTestReferenceTypeFactoryAttribute(InventTestReferenceType::Quarantine)]
class InventQualityReferenceTypeQuarantine extends InventQualityReferenceType
{
    InventQuarantineOrder inventQuarantineOrder;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEditQuarantineOnFailure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the quarantine upon validation failure field can be edited.
    /// </summary>
    /// <returns>
    /// true if the field can be edited; otherwise, false
    /// </returns>
    public boolean allowEditQuarantineOnFailure()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromQualityOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the instance based on an <c>InventQualityOrderTable</c> buffer.
    /// </summary>
    /// <param name="_orderTable">
    ///    An <c>InventQualityOrderTable</c> buffer.
    /// </param>
    protected void initFromQualityOrder(InventQualityOrderTable _orderTable)
    {
        this.parmBuffer(InventQuarantineOrder::find(_orderTable.InventRefId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDirection</Name>
				<Source><![CDATA[
    public InventDirection inventDirection()
    {
        return InventDirection::Receipt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventRefId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventRefId</c> value for this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>InventRefId</c> value.
    /// </returns>
    public InventRefId inventRefId()
    {
        return inventQuarantineOrder.QuarantineId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventSiteId</c> value for this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>InventSiteId</c> value.
    /// </returns>
    public InventSiteId inventSiteId()
    {
        return InventDim::find(inventQuarantineOrder.InventDimIdQuarantine).InventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventTransId</c> value for this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>InventTransId</c> value.
    /// </returns>
    public InventTransId inventTransId()
    {
        return inventQuarantineOrder.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEligibleForDestructiveTest</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that a quality order can be created for a destructive test.
    /// </summary>
    /// <returns>
    ///    true if the order can be created; otherwise, false.
    /// </returns>
    public boolean isEligibleForDestructiveTest()
    {
        return checkFailed("@SYS113838");
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    public Common parmBuffer(Common _buffer = inventQuarantineOrder)
    {
        inventQuarantineOrder = _buffer;

        defaultDimension  = inventQuarantineOrder.DefaultDimension      ? inventQuarantineOrder.DefaultDimension        : defaultDimension;
        inventDimId       = inventQuarantineOrder.InventDimIdQuarantine ? inventQuarantineOrder.InventDimIdQuarantine   : inventDimId;
        itemId            = inventQuarantineOrder.ItemId                ? inventQuarantineOrder.ItemId                  : itemId;

        return inventQuarantineOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryInventTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a query that iterates all referred inventory transactions.
    /// </summary>
    /// <param name="_inventTestDocumentStatus">
    ///    A document status value.
    /// </param>
    /// <param name="_inventTestExecution">
    ///    A test execution value.
    /// </param>
    /// <param name="_discriminatingInventoryDimensions">
    ///    An integer that represents discriminating inventory dimensions.
    /// </param>
    /// <returns>
    ///    A query that iterates all referred inventory transactions.
    /// </returns>
    public Query queryInventTrans(
        InventTestDocumentStatus            _inventTestDocumentStatus,
        InventTestExecution                 _inventTestExecution,
        InventTestDiscriminatingInventDims  _discriminatingInventoryDimensions)
    {
        Query query = super(
            _inventTestDocumentStatus,
            _inventTestExecution,
            _discriminatingInventoryDimensions);

        QueryBuildDataSource qbdsInventTrans = query.dataSourceTable(tableNum(InventTrans));
        qbdsInventTrans.addRange(fieldNum(InventTrans, MarkingRefInventTransOrigin)).value(SysQuery::valueNot(0));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventTestReferenceType</c> value of this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>InventTestReferenceType</c> value.
    /// </returns>
    public InventTestReferenceType referenceType()
    {
        return InventTestReferenceType::Quarantine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQueryInventTransOrdering</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the ordering of the transactions for the <c>InventTrans</c> table data source based on the
    /// document status and test execution values.
    /// </summary>
    /// <param name="_qbdsInventTrans">
    /// A query build data source object that is related to the <c>InventTrans</c> table.
    /// </param>
    /// <param name="_inventTestDocumentStatus">
    /// A document status value.
    /// </param>
    /// <param name="_inventTestExecution">
    /// A test execution value.
    /// </param>
    protected void setQueryInventTransOrdering(
        QueryBuildDataSource        _qbdsInventTrans,
        InventTestDocumentStatus    _inventTestDocumentStatus,
        InventTestExecution         _inventTestExecution)
    {
        // first take those most recently updated
        this.setQueryInventTransOrderingPhysicalVouch(_qbdsInventTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatusReceiptRangeValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets a range value for the <c>StatusReceipt</c> field on the data source of the <c>InventTrans</c>
    ///    table that is based on the document status and test execution values.
    /// </summary>
    /// <param name="_qbrStatusReceipt">
    ///    A query build range object.
    /// </param>
    /// <param name="_inventTestDocumentStatus">
    ///    A document status value.
    /// </param>
    /// <param name="_inventTestExecution">
    ///    A test execution value.
    /// </param>
    protected void setStatusReceiptRangeValue(
        QueryBuildRange             _qbrStatusReceipt,
        InventTestDocumentStatus    _inventTestDocumentStatus,
        InventTestExecution         _inventTestExecution)
    {
        _qbrStatusReceipt.value(queryValue(StatusReceipt::Received));
    }

]]></Source>
			</Method>
			<Method>
				<Name>supportsInventoryBlocking</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether quality orders for quarantine orders support blocking.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    public boolean supportsInventoryBlocking()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventQualityReferenceTypeQuarantine construct()
    {
        return new InventQualityReferenceTypeQuarantine();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
