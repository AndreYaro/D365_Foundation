<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Graphics_BOMCalc</Name>
	<SourceCode>
		<Declaration><![CDATA[
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
class Graphics_BOMCalc extends Graphics
{
    DialogField             dialogCostSales;

    CostSalesPriceDisplay   costSalesPrice;
    BOMCalcSumGroupField    xField1;
    BOMCalcSumGroupField    zField1;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        costSalesPrice,
        xField1,
        zField1
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    ///    interface.
    /// </summary>
    /// <returns>
    ///    A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    ///    in the Application Object Tree (AOT).
    /// </remarks>
    Object dialog()
    {
        DialogRunbase   dialog;
        ;
        dialog = super();

        dialogCostSales = dialog.addField(enumStr(CostSalesPriceDisplay));
        dialogCostSales.value(costSalesPrice);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        costSalesPrice = dialogCostSales.value();
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostSalesPrice</Name>
				<Source><![CDATA[
    CostSalesPriceDisplay parmCostSalesPrice(CostSalesPriceDisplay _costSalesPriceDisplay = costSalesPrice)
    {
        ;
        costSalesPrice = _costSalesPriceDisplay;
        return costSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmXfield1</Name>
				<Source><![CDATA[
    BOMCalcSumGroupField parmXfield1(BOMCalcSumGroupField _field = xField1)
    {
        xField1 = _field;

        this.parmTitleXAxis(enum2str(xField1));

        return xField1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZfield1</Name>
				<Source><![CDATA[
    BOMCalcSumGroupField parmZfield1(BOMCalcSumGroupField _field = zField1)
    {
        zField1 = _field;

        //    this.parmTitleXaxis(enum2Str(xField1));

        return zField1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>title</Name>
				<Source><![CDATA[
    TempStr title()
    {
        if (costSalesPrice == CostSalesPriceDisplay::SalesPrice)
            return strfmt("@SYS23944",xField1);
        else
            return strfmt("@SYS23945",xField1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer     version     = conpeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion :
                [version,#CurrentList] = packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SYS4816";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newGraphics</Name>
				<Source><![CDATA[
    static Graphics_BOMCalc newGraphics(FormManagedHostControl  imageControl,
                                        int                 width,
                                        int                 height
                                       )
    {
        Graphics_BOMCalc    graphics;

        graphics = new Graphics_BOMCalc();
        graphics.ManagedHostToControl(imageControl);
        graphics.create();

        return graphics;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>