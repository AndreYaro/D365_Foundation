<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendInvoiceAttachments</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustVendInvoiceAttachments</c> class contains functionality to support the addition of attachment counts for a given document or document line.
/// </summary>
public class CustVendInvoiceAttachments
{
    private Map attachmentCountMap;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAttachmentCountButtonLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the label value that contains the count of the attachments for a given <c>Common</c> table buffer.
    /// </summary>
    /// <param name = "_record">The table buffer to use for counting attachments.</param>
    /// <param name = "_originalButtonLabel">The original button label.</param>
    /// <param name = "_fromCache">true if the attachment count should be pulled from the local cache; otherwise, false.</param>
    /// <returns>The new label containing the original label with an attachment count.</returns>
    public str getAttachmentCountButtonLabel(Common _record, str _originalButtonLabel, boolean _fromCache = true)
    {
        int attachCount = this.getAttachmentCount(_record, _fromCache);

        return strFmt("@AccountsReceivable:NotesAndAttachmentsWithCount", _originalButtonLabel, attachCount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAttachmentCount</Name>
				<Source><![CDATA[
    private int getAttachmentCount(Common _record, boolean _fromCache = true)
    {
        int attachmentCount;
        str key = strFmt('%1_%2', _record.TableId, _record.RecId);

        if (_fromCache && attachmentCountMap.exists(key))
        {
            attachmentCount = attachmentCountMap.lookup(key);
        }
        else
        {
            DocuRef docuRef;

            select count(RecId) from docuRef
                where docuRef.RefCompanyId == _record.DataAreaId
                    && docuRef.RefTableId == _record.TableId
                    && docuRef.RefRecId == _record.RecId;

            attachmentCount = docuRef.RecId;

            attachmentCountMap.insert(key, attachmentCount);
        }

        return attachmentCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();

        attachmentCountMap = new Map(Types::String, Types::Integer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CustVendInvoiceAttachments construct()
    {
        return new CustVendInvoiceAttachments();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>