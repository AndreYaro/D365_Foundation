<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerSettlementsAutomationOccurrenceDeleteProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>LedgerSettlementsAutomationOccurrenceDeleteProvider</c> class is designed to handle
/// deleting the appropriate <c>LedgerSettlementsAutomationCriteria</c> records when <c>ProcessScheduleOccurrence</c> records are deleted.
/// </summary>
[ExportMetadata(extendedTypeStr(ProcessScheduleTypeName), 'LedgerSettlementsAutomation')]
[Export(identifierStr(Dynamics.AX.Application.ProcessScheduleIDeleteOccurrence))]
internal final class LedgerSettlementsAutomationOccurrenceDeleteProvider implements ProcessScheduleIDeleteOccurrence
{
    private ProcessScheduleSeriesOccurrenceTmp occurrencesExplodedTmp;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteOccurrences</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public void deleteOccurrences(ProcessScheduleSeriesOccurrenceTmp _occurrencesExplodedTmp)
    {
        this.initialize(_occurrencesExplodedTmp);

        this.deleteLedgerSettlementsAutomationCriteria();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(ProcessScheduleSeriesOccurrenceTmp _occurrencesExplodedTmp)
    {
        occurrencesExplodedTmp.linkPhysicalTableInstance(_occurrencesExplodedTmp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLedgerSettlementsAutomationCriteria</Name>
				<Source><![CDATA[
    private void deleteLedgerSettlementsAutomationCriteria()
    {
        LedgerSettlementsAutomationCriteria automationCriteria;
        automationCriteria.skipDeleteActions(true);
        automationCriteria.skipDataMethods(true);
        automationCriteria.skipAosValidation(true);
        automationCriteria.skipDatabaseLog(true);
        automationCriteria.skipEvents(true);

        LedgerSettlementsAutomationMatchSelection automationMatchSelection;
        automationMatchSelection.skipDeleteActions(true);
        automationMatchSelection.skipDataMethods(true);
        automationMatchSelection.skipAosValidation(true);
        automationMatchSelection.skipDatabaseLog(true);
        automationMatchSelection.skipEvents(true);

        delete_from automationMatchSelection
            exists join automationCriteria
                where automationMatchSelection.LedgerSettlementsAutomationCriteria == automationCriteria.RecId
            exists join occurrencesExplodedTmp
                where automationCriteria.ProcessScheduleOccurrence == occurrencesExplodedTmp.ProcessScheduleOccurrence;
        
        delete_from automationCriteria
            exists join occurrencesExplodedTmp
                where automationCriteria.ProcessScheduleOccurrence == occurrencesExplodedTmp.ProcessScheduleOccurrence;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>