<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSActiveWaveDemandReplenWorkTmpBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>WHSActiveWaveDemandReplenWorkTmpBuilder</c> class populates the <c>WHSActiveWaveDemandReplenWorkTmp</c> table
/// with data based on the <c>WHSActiveWaveDemandReplenWork</c> query.
/// </summary>
public class WHSActiveWaveDemandReplenWorkTmpBuilder implements SysIFilterConsumer
{
    QueryRun            activeWaveDemandReplenWorkQueryRun;
    SysIFilter          filter;
    SysQueryableQuery   queryable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmQueryable</Name>
				<Source><![CDATA[
    public SysIQueryable parmQueryable()
    {
        if (!queryable)
        {
            queryable = SysQueryableFactory::newFromQueryRun(activeWaveDemandReplenWorkQueryRun);
        }

        return queryable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceFilter</Name>
				<Source><![CDATA[
    public SysIFilter parmSourceFilter()
    {
        return filter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        activeWaveDemandReplenWorkQueryRun = new QueryRun(queryStr(WHSActiveWaveDemandReplenWork));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilter</Name>
				<Source><![CDATA[
    public SysIFilter parmFilter(SysIFilter _filter = filter)
    {
        filter = _filter;
        return filter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the table from the corresponding query for viewing in the form part.
    /// </summary>
    /// <returns>
    /// The reference to the <c>WHSActiveWaveDemandReplenWorkTmp</c> table.
    /// </returns>
    public WHSActiveWaveDemandReplenWorkTmp populateData()
    {
        WHSActiveWaveDemandReplenWorkTmp activeWaveDemandReplenWork;

        SysFilterService::applyFilter(this);

        var queryRun = queryable.parmQueryRun();
        while (queryRun.next())
        {
            WHSWorkTable work = queryRun.get(tableNum(WHSWorkTable));
            WHSWorkLine workLine = queryRun.get(tableNum(WHSWorkLine));

            activeWaveDemandReplenWork.clear();
            activeWaveDemandReplenWork.WorkId = work.WorkId;
            activeWaveDemandReplenWork.WorkCountHeldByCurrentReplen = work.displayWorkCountHeldByCurrentReplen();
            activeWaveDemandReplenWork.ItemId = workLine.ItemId;
            if (workLine.inventDim().anyProductDimensionSpecified())
            {
                var variant = InventDimCombination::findByInventDim(workLine.ItemId, workLine.inventDim());
                activeWaveDemandReplenWork.DisplayProductNumber = EcoResProduct::find(variant.DistinctProductVariant).DisplayProductNumber;
            }
            else
            {
                activeWaveDemandReplenWork.DisplayProductNumber = workLine.ItemId;
            }
            activeWaveDemandReplenWork.LoadSchedShipDateTime = activeWaveDemandReplenWork.getEarliestLoadSchedShippingDate();
            activeWaveDemandReplenWork.insert();
        }

        return activeWaveDemandReplenWork;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateFromQuery</Name>
				<Source><![CDATA[
    public static WHSActiveWaveDemandReplenWorkTmp populateFromQuery(SysIFilter _filter)
    {
        var builder = new WHSActiveWaveDemandReplenWorkTmpBuilder();
        builder.parmFilter(_filter);
        return builder.populateData();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>