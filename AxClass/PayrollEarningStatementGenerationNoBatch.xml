<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollEarningStatementGenerationNoBatch</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PayrollEarningStatementGenerationNoBatch</c> class is a wrapper class around the <c>PayrollEarningStatementGenerationTask</c> class
/// to provide a dialog to create recurring earnings and salary earnings.
/// </summary>
class PayrollEarningStatementGenerationNoBatch extends PayrollEarningStatementGeneration implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@Payroll:GenerateEarningsStatements";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct an instance of the process class on server.
    /// </summary>
    /// <returns>
    /// An instance of the process class on server.
    /// </returns>
    public static PayrollEarningStatementGenerationNoBatch construct()
    {
        return (new PayrollEarningStatementGenerationNoBatch());
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args _args)
    {
        PayrollEarningStatementGenerationNoBatch earningStatementGenerationNoBatch;

        earningStatementGenerationNoBatch = PayrollEarningStatementGenerationNoBatch::construct();

        if (_args && _args.record())
        {
            switch (_args.record().TableId)
            {
                case tableNum(HcmWorker):
                case tableNum(HcmPosition):
                    earningStatementGenerationNoBatch.parmCallingRecord(_args.record());
                    break;
            }
        }

        if (earningStatementGenerationNoBatch.prompt())
        {
            earningStatementGenerationNoBatch.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>