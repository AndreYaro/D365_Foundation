<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CurrencyLedgerGainLossAccountFormAppSuiteExtensionEventHandlers</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CurrencyLedgerGainLossAccountFormAppSuiteExtensionEventHandlers</c> class subscribes to events involving the <c>CurrencyLedgerGainLossAccount</c> form.
/// </summary>
public final class CurrencyLedgerGainLossAccountFormAppSuiteExtensionEventHandlers
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>TmpCurrencyLedgerGainLossAccount_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the OnInitialized event for the <c>TmpCurrencyLedgerGainLossAccount</c> data source of the <c>CurrencyLedgerGainLossAccount</c> form.
    /// </summary>
    /// <param name="_sender">The <c>TmpCurrencyLedgerGainLossAccount</c> data source.</param>
    /// <param name="_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(CurrencyLedgerGainLossAccount, TmpCurrencyLedgerGainLossAccount), FormDataSourceEventType::Initialized)]
    public static void TmpCurrencyLedgerGainLossAccount_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        boolean isCurrencyLedgerGainLossFromNetValueFeatureEnabled = CurrencyLedgerGainLossFromNetValueFeature_PL::isEnabled();

        _sender.object(fieldNum(TmpCurrencyLedgerGainLossAccount, ExchAdjTaxable_RU)).visible(isCurrencyLedgerGainLossFromNetValueFeatureEnabled);
        _sender.object(fieldNum(TmpCurrencyLedgerGainLossAccount, TaxLedgerDimension_RU)).visible(isCurrencyLedgerGainLossFromNetValueFeatureEnabled);
        _sender.object(fieldNum(TmpCurrencyLedgerGainLossAccount, TaxAccountName_RU)).visible(isCurrencyLedgerGainLossFromNetValueFeatureEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>TmpCurrencyLedgerGainLossAccount_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the OnActivated event for the <c>TmpCurrencyLedgerGainLossAccount</c> data source of the <c>CurrencyLedgerGainLossAccount</c> form.
    /// </summary>
    /// <param name="_sender">The <c>TmpCurrencyLedgerGainLossAccount</c> data source.</param>
    /// <param name="_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(CurrencyLedgerGainLossAccount, TmpCurrencyLedgerGainLossAccount), FormDataSourceEventType::Activated)]
    public static void TmpCurrencyLedgerGainLossAccount_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        if (CurrencyLedgerGainLossFromNetValueFeature_PL::isEnabled())
        {
            FormRun fr = _sender.formRun();
            TmpCurrencyLedgerGainLossAccount tmpCurrencyLedgerGainLossAccount = _sender.cursor();

            _sender.object(fieldNum(TmpCurrencyLedgerGainLossAccount, ExchAdjTaxable_RU)).allowEdit(
                formHasMethod(fr, identifierStr(ledgerSupportsGainLossFromNetValue))
                && fr.ledgerSupportsGainLossFromNetValue()
                && tmpCurrencyLedgerGainLossAccount.LedgerDimension
                && (   tmpCurrencyLedgerGainLossAccount.AccountType == CurrencyGainLossAccountType::RealizedGain
                    || tmpCurrencyLedgerGainLossAccount.AccountType == CurrencyGainLossAccountType::RealizedLoss));

            _sender.object(fieldNum(TmpCurrencyLedgerGainLossAccount, TaxLedgerDimension_RU)).allowEdit(
                tmpCurrencyLedgerGainLossAccount.ExchAdjTaxable_RU == ExchAdjTaxableType_W::Expense);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>TmpCurrencyLedgerGainLossAccount_OnWritten</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the OnWritten event for the <c>TmpCurrencyLedgerGainLossAccount</c> data source of the <c>CurrencyLedgerGainLossAccount</c> form.
    /// </summary>
    /// <param name="_sender">The <c>TmpCurrencyLedgerGainLossAccount</c> data source.</param>
    /// <param name="_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(CurrencyLedgerGainLossAccount, TmpCurrencyLedgerGainLossAccount), FormDataSourceEventType::Written)]
    public static void TmpCurrencyLedgerGainLossAccount_OnWritten(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun fr = _sender.formRun();

        if (CurrencyLedgerGainLossFromNetValueFeature_PL::isEnabled()
            && formHasMethod(fr, identifierStr(ledgerSupportsGainLossFromNetValue))
            && fr.ledgerSupportsGainLossFromNetValue())
        {
            CurrencyLedgerGainLossAccount_PL currencyLedgerGainLossAccount_PL;
            TmpCurrencyLedgerGainLossAccount tmpCurrencyLedgerGainLossAccount = _sender.cursor();

            if (tmpCurrencyLedgerGainLossAccount.LedgerDimension == 0)
            {
                tmpCurrencyLedgerGainLossAccount.ExchAdjTaxable_RU = ExchAdjTaxableType_W::No;
            }

            if (tmpCurrencyLedgerGainLossAccount.ExchAdjTaxable_RU == ExchAdjTaxableType_W::No)
            {
                tmpCurrencyLedgerGainLossAccount.TaxLedgerDimension_RU = 0;
                tmpCurrencyLedgerGainLossAccount.TaxAccountName_RU = '';
                FormSegmentedEntryControl taxLedgerDimensionControl = fr.design()
                    .controlName(formControlStr(CurrencyLedgerGainLossAccount, TmpCurrencyLedgerGainLossAccount_TaxLedgerDimension_RU)) as FormSegmentedEntryControl;

                if (taxLedgerDimensionControl)
                {
                    taxLedgerDimensionControl.value(0);
                }

                if (tmpCurrencyLedgerGainLossAccount.CurrencyLedgerGainLossAccount)
                {
                    delete_from currencyLedgerGainLossAccount_PL
                        where currencyLedgerGainLossAccount_PL.CurrencyLedgerGainLossAccount == tmpCurrencyLedgerGainLossAccount.CurrencyLedgerGainLossAccount;
                }
            }
            else
            {
                ttsbegin;
                currencyLedgerGainLossAccount_PL = CurrencyLedgerGainLossAccount_PL::findByCurrencyLedgerGainLossAccount(tmpCurrencyLedgerGainLossAccount.CurrencyLedgerGainLossAccount, true);
                currencyLedgerGainLossAccount_PL.CurrencyLedgerGainLossAccount = tmpCurrencyLedgerGainLossAccount.CurrencyLedgerGainLossAccount;
                currencyLedgerGainLossAccount_PL.ExchAdjTaxableType = tmpCurrencyLedgerGainLossAccount.ExchAdjTaxable_RU;
                currencyLedgerGainLossAccount_PL.RealizedTaxLedgerDimension = tmpCurrencyLedgerGainLossAccount.TaxLedgerDimension_RU;
                currencyLedgerGainLossAccount_PL.write();
                ttscommit;

                if (formHasMethod(fr, identifierStr(ledgerTable)))
                {
                    Ledger ledgerTable = fr.ledgerTable();
                    tmpCurrencyLedgerGainLossAccount.TaxAccountName_RU =
                        MainAccount::getLocalizedNameByMainAccountId(
                            LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(tmpCurrencyLedgerGainLossAccount.TaxLedgerDimension_RU), ledgerTable.ChartOfAccounts);
                }
            }

            tmpCurrencyLedgerGainLossAccount.write();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ExchAdjTaxable_RU_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the OnModified event for the <c>ExchAdjTaxable_RU</c> field of the <c>TmpCurrencyLedgerGainLossAccount</c> data source of the <c>CurrencyLedgerGainLossAccount</c> form.
    /// </summary>
    /// <param name="_sender">The form data object raising the event.</param>
    /// <param name="_e">Args for the event.</param>
    [FormDataFieldEventHandler(formDataFieldStr(CurrencyLedgerGainLossAccount, TmpCurrencyLedgerGainLossAccount, ExchAdjTaxable_RU), FormDataFieldEventType::Modified)]
    public static void ExchAdjTaxable_RU_OnModified(FormDataObject _sender, FormDataFieldEventArgs _e)
    {
        if (CurrencyLedgerGainLossFromNetValueFeature_PL::isEnabled())
        {
            _sender.datasource().write();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>