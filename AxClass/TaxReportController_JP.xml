<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportController_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxReportController_JP</c> is the controller class for <c>TaxReport_JP</c> SSRS report.
/// </summary>
public class TaxReportController_JP extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        #ISOCountryRegionCodes
        super();
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
            [#isoJP, GlobalizationConstants::FeatureReferenceJP00004] ],
            funcName()
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        TaxReport_JP            taxReport_JP;
        TaxReportContract_JP    contract;

        if (this.parmArgs() && classidget(this.parmArgs().caller()) == classnum(TaxReport_JP))
        {
            taxReport_JP = this.parmArgs().caller();
        }
        else
        {
            taxReport_JP = TaxReport_JP::construct();
        }

        super();

        contract = this.parmReportContract().parmRdpContract() as TaxReportContract_JP;

        contract.parmFromDate(taxReport_JP.fromDate());
        contract.parmToDate(taxReport_JP.toDate());
        contract.parmTaxPeriod(taxReport_JP.taxPeriod());
        contract.parmtypeOfDeclaration(taxReport_JP.typeOfDeclaration());
        contract.parmFileFormat(taxReport_JP.parmFileFormat());
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPrintSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Suppress print setting.
    /// </summary>
    /// <returns>false</returns>
    public boolean showPrintSettings()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        SRSPrintDestinationSettings printSetting  = this.parmReportContract().parmPrintSettings();
        ISrsReportFileFormatContract fileFormatContract = this.parmReportContract().parmRdpContract() as ISrsReportFileFormatContract;
        SrsReportFileFormatControllerHelper::setPrintMedium(printSetting, fileFormatContract.parmFileFormat(), this.parmReportName());
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// The constructor of the <c>TaxReportController_JP</c> class.
    /// </summary>
    /// <param name="_args">
    /// The args of the contructor.
    /// </param>
    /// <returns>
    /// The instance of the <c>TaxReportController_JP</c> class.
    /// </returns>
    public static TaxReportController_JP construct(Args _args)
    {
        TaxReportController_JP   controller = new TaxReportController_JP();

        controller.parmReportName(_args.designName());
        controller.parmShowDialog(false);
        controller.parmArgs(_args);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        _args.designName(ssrsReportStr(TaxReport_JP, Report));
        TaxReportController_JP controller = TaxReportController_JP::construct(_args);
        controller.startOperation();

        _args.designName(ssrsReportStr(TaxReport_JP, ReportAddon));
        TaxReportController_JP controllerAddon = TaxReportController_JP::construct(_args);
        controllerAddon.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Microsoft internal use only.
    /// </summary>
    /// <returns>
    /// A Boolean value.
    /// </returns>
    /*MAN
    The method must return false when the class is not batchable.
    */
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>