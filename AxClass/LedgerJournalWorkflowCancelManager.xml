<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalWorkflowCancelManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// WorkflowCancelManager for all workflow templates within the Journal Framework.
/// </summary>
internal class LedgerJournalWorkflowCancelManager extends WorkflowCancelManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateWorflowApprovalStatusInLedgerJournalTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to update the WorflowApprovalStatus in the LedgerJournalTable.
    /// </summary>
    /// <param name = "_list">
    /// List of Workflows to cancel.
    /// </param>
    internal void updateWorflowApprovalStatusInLedgerJournalTable(List _list)
    {
        ListEnumerator listEnumerator = _list.getEnumerator();
        WorkflowTrackingStatusTable workflowTrackingStatusTable;

        while (listEnumerator.moveNext())
        {
            workflowTrackingStatusTable = WorkflowTrackingStatusTable::findByCorrelation(listEnumerator.current());

            if (workflowTrackingStatusTable.ContextTableId == tableNum(LedgerJournalTable))
            {
                LedgerJournalWFApprovalStatusManager::cancelFromEvent(workflowTrackingStatusTable.ContextRecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDocumentWithinTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating status in the LedgerJournalTable within transaction.
    /// </summary>
    /// <param name = "_args">Arguments for run</param>
    internal void updateDocumentWithinTransaction(Args _args)
    {
        super(_args);

        List list = WorkflowCancelManager::getWorkflowsToCancel(_args.caller());
        
        this.updateWorflowApprovalStatusInLedgerJournalTable(list);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static LedgerJournalWorkflowCancelManager construct()
    {
        return new LedgerJournalWorkflowCancelManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    internal static void main(Args _args)
    {
        LedgerJournalWorkflowCancelManager workflowCancelManager = LedgerJournalWorkflowCancelManager::construct();

        workflowCancelManager.run(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>