<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationSysDaSearchBundle</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntegrationSysDaSearchBundle</c> supports multiple <c>select</c>.
/// </summary>
public final class TaxIntegrationSysDaSearchBundle
{
    private SysDaSearchObject object;
    private SysDaSearchStatement statement;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationSysDaSearchBundle</c> based on a query.
    /// </summary>
    /// <param name = "_query">The query.</param>
    private void new(SysDaQueryObject _query)
    {
        this.object = new SysDaSearchObject(_query);
        this.statement = new SysDaSearchStatement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationSysDaSearchBundle</c> based on a query.
    /// </summary>
    /// <param name = "_query">The query.</param>
    /// <returns> The new <c>TaxIntegrationSysDaSearchBundle</c>.</returns>
    public final static TaxIntegrationSysDaSearchBundle construct(SysDaQueryObject _query)
    {
        return new TaxIntegrationSysDaSearchBundle(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes <c>select</c>.
    /// </summary>
    /// <returns>true if the next record is found; otherwise, false.</returns>
    public final boolean findNext()
    {
        return statement.findNext(this.object);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>