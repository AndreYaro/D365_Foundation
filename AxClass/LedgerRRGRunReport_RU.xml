<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGRunReport_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGRunReport_RU
{
    date                            m_baseDate;
    ReportCalcMethod_RU             m_calcMethod;
    TransDate                       m_reportOnDate;
    LedgerRRGReportTable_RU         m_ReportTable;
    LedgerRRGCellTable_RU           m_CellTable;
    LedgerRRGOperationTable_RU      m_OperationTable;
    TmpLedgerRRGCellDefaultVal_RU   m_tblCellDefaultVal;
    LedgerRRGOperationParm_RU       reportParms;
    LedgerRRGOperationParm_RU       cellParms;
    LedgerRRGOperationParm_RU       operationParms;
    Map                             calcResult;
    Map                             staticValuesMap;
    Set                             removedWorksheets;

    private const str               Exclamation	            = '!';
    private const int               SafeCallRetryCount	    = 4;
    private const str               SafeCallNotifyMethod	= 'notify';
    private const int               SafeCallTimeOut	        = 250;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>baseDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public date baseDate(date _baseDate = m_baseDate)
    {
        m_baseDate = _baseDate;
        return m_baseDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcCell</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected AmountMST calcCell()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcOperation</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected AmountMST calcOperation()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcReport</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void calcReport()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcResult</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Map calcResult()
    {
        return calcResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cellTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    LedgerRRGCellTable_RU cellTable()
    {
        return m_CellTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateReport</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void generateReport()
    {
        LedgerRRGEBufferEvalReport_W reportEvaluator;
   
        try
        {
            if (this.getParamForCalc())
            {
                throw warning(strFmt("@LedgerRRG:LedgerRRG_GenerationCanceled", m_ReportTable.Description));
            }    
    
            reportEvaluator = LedgerRRGEBufferEvalReport_W::construct();
            reportEvaluator.initFromBuffer(m_ReportTable);
            reportEvaluator.parms().baseDate(m_baseDate);
            reportEvaluator.parms().calcMethod(m_calcMethod);
            reportEvaluator.parms().reportOnDate(m_reportOnDate);
            reportEvaluator.staticValuesMap(staticValuesMap);
            calcResult = reportEvaluator.evalReport();
        }
        catch (Exception::Error)
        {
            LedgerRRGEProperties_W::clearClientServerCache();
            throw error("@LedgerRRG:LedgerRRG_ErrorGenerating");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getApplicationName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected str getApplicationName()
    {
        return enum2str(m_ReportTable.ReportType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParamForCalc</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected boolean getParamForCalc()
    {
        FormRun form;
        Args    args;
       

        args     = new Args(formStr(LedgerRRGGetBaseDate_RU));
        args.caller(this);


        form     = ClassFactory::formRunClassOnClient(args);


        form.init();
        form.run();
        form.wait();

        return !form.closedOk();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromReportTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromReportTable(LedgerRRGReportTable_RU _reportTable)
    {
        LedgerRRGCellDefVal_RU ledgerRRGCellDefVal;

        m_ReportTable   = LedgerRRGReportTable_RU::findByRepCode(_reportTable.RepCode);
        staticValuesMap = new Map(Types::String, Types::Real);

        ttsbegin;

        while select  m_CellTable
            where m_CellTable.ReportRecId   == m_ReportTable.RecId   &&
                  m_CellTable.IsStatic
        {
            select firstonly ledgerRRGCellDefVal
                where ledgerRRGCellDefVal.CellRecId == m_CellTable.RecId;

            m_tblCellDefaultVal.CellCode     = m_CellTable.CellCode;
            m_tblCellDefaultVal.Description  = m_CellTable.Description;

            m_tblCellDefaultVal.DefaultValue = ledgerRRGCellDefVal ? ledgerRRGCellDefVal.DefaultValue : 0;

            m_tblCellDefaultVal.insert();
            staticValuesMap.insert(m_tblCellDefaultVal.CellCode, m_tblCellDefaultVal.DefaultValue);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerRRGReportTable_RU</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGReportTable_RU ledgerRRGReportTable_RU()
    {
        return m_ReportTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new()
    {
        m_baseDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        calcResult = new Map(Types::String, Types::Real);
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationParms</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGOperationParm_RU operationParms()
    {
        return operationParms;
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGOperationTable_RU operationTable()
    {
        return m_OperationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGReportTable_RU reportTable(LedgerRRGReportTable_RU _reportTable = m_ReportTable)
    {
        m_ReportTable = _reportTable;
        return m_ReportTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAbortReport</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setAbortReport(boolean _bAbort = false)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>staticValuesMap</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Map staticValuesMap()
    {
        return staticValuesMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tblCellDefaultVal</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpLedgerRRGCellDefaultVal_RU tblCellDefaultVal(TmpLedgerRRGCellDefaultVal_RU _tblCellDefaultVal = null)
    {
        if (! prmisDefault(_tblCellDefaultVal))
        {
            m_tblCellDefaultVal = _tblCellDefaultVal;
        }

        return m_tblCellDefaultVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGRunReport_RU construct()
    {
        return new LedgerRRGRunReport_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        LedgerRRGRunReport_RU runReport;

        if (!_args || !_args.record() || _args.dataset() != tableNum(LedgerRRGReportTable_RU))
        {
            throw error(strFmt("@SYS29104", classStr(LedgerRRGRunReport_RU)));
        }

        LedgerRRGEProperties_W::clearClientServerCache();

        runReport = LedgerRRGRunReport_RU::construct();
        runReport.initFromReportTable(_args.record());
        runReport.generateReport();

        LedgerRRGEProperties_W::clearClientServerCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromReportTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGRunReport_RU newFromReportTable(LedgerRRGReportTable_RU _reportTable)
    {
        LedgerRRGRunReport_RU runReport = LedgerRRGRunReport_RU::construct();

        runReport.initFromReportTable(_reportTable);

        return runReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcMethod</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ReportCalcMethod_RU calcMethod(ReportCalcMethod_RU _calcMethod = m_CalcMethod)
    {
        m_CalcMethod = _calcMethod;
        return m_CalcMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportOnDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TransDate reportOnDate(TransDate _reportOnDate = m_reportOnDate)
    {
        m_reportOnDate = _reportOnDate;
        return m_reportOnDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>