<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxArchiveAutomationJobRequestCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Archive.Contracts;

/// <summary>
/// Helper class for constructing contract for tax archive process.
/// </summary>
public class TaxArchiveAutomationJobRequestCreator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createPostJobRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a post job request for the tax archive process by tax archive criteria.
    /// </summary>
    /// <param name="_criteria">
    /// The criteria for the tax archive process.
    /// </param>
    /// <returns>
    /// The post archive job request.
    /// </returns>
    public ArchiveJobPostRequest createPostJobRequest(TaxArchiveAutomationCriteria _criteria)
    {
        // Get the tax archive transaction
        TaxArchiveTrans archiveTrans = TaxArchiveTrans::findByRecId(_criteria.TaxArchiveTrans);

        return this.createTaxArchivePostRequest(archiveTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPostJobRequestForArchiveTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a post job request for the tax archive process by tax archive transaction.
    /// </summary>
    /// <param name="_taxArchiveTrans">
    /// The tax archive transaction.
    /// </param>
    /// <returns>
    /// The post archive job request.
    /// </returns>
    public ArchiveJobPostRequest createPostJobRequestForArchiveTrans(TaxArchiveTrans _taxArchiveTrans)
    {
        return this.createTaxArchivePostRequest(_taxArchiveTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTaxArchivePostRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a post job request for the tax archive process.
    /// </summary>
    /// <param name="_taxArchiveTrans">
    /// The tax archive transaction.
    /// </param>
    /// <returns>
    /// The post archive job request.
    /// </returns>
    internal ArchiveJobPostRequest createTaxArchivePostRequest(TaxArchiveTrans _taxArchiveTrans)
    {
        // Check archive status is ready
        if (_taxArchiveTrans.Status != LedgerArchiveStatus::Ready)
        {
            FiscalCalendarYear fiscalCalYear = FiscalCalendarYear::find(_taxArchiveTrans.FiscalCalendarYear);
            FiscalCalendar fiscalCalendar = FiscalCalendar::find(_taxArchiveTrans.FiscalCalendar);

            throw error(strFmt("@Tax:TaxArchiveAutomationJobRequestCanNotBeCreated",
                _taxArchiveTrans.LedgerDataAreaId,
                fiscalCalendar.CalendarId,
                fiscalCalYear.Name));
        }

        ArchiveServiceArchiveJobPostRequestBuilder builder = ArchiveServiceArchiveJobPostRequestBuilder::construct(
            "@Tax:TaxArchiveAutomationJobRequestCreatorDescription",
            TaxArchiveAutomationConstants::RegisteredTypeName);

        return builder.finalizeArchiveJobPostRequest();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>