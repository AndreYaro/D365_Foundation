<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTransBegBalHour</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>ProjTransBegBalHour</c> class is used to represent beginning balance hour transaction.
/// </summary>
class ProjTransBegBalHour extends ProjTransEmpl
{
    ProjBegBalJournalTrans_CostSales    projBegBalJournalTrans_CostSales;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activityNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project activity number.
    /// </summary>
    /// <returns>
    ///    The value of the <c>ActivityNumber</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public ProjActivityNumber activityNumber()
    {
        return projBegBalJournalTrans_CostSales.ActivityNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeInvoiced</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Specifies whether this transaction can be invoiced.
    /// </summary>
    /// <param name="_chargeable">
    ///    A Boolean value that indicates whether invoice proposal transactions can be invoiced; optional.
    /// </param>
    /// <returns>
    ///    true if this transaction can be invoiced; otherwise, false.
    /// </returns>
    public boolean canBeInvoiced(boolean _chargeable = false)
    {
        ProjFundingSource   projFundingSource;
        boolean             ret = true;

        if (!ProjLineProperty::find(this.linePropertyId()).ToBeInvoiced)
        {
            ret = false;
        }

        if (ret)
        {
            projFundingSource = ProjFundingSource::find(this.fundingSource());
            if ((projFundingSource.FundingType == ProjFundingType::Organization) ||
                (projFundingSource.FundingType == ProjFundingType::OnHoldFundingSource))
            {
                ret = false;
            }
        }

        if (ret)
        {
            ret = ProjInvoiceTable::isBillingRuleInvoiceable(this.projId(), this.categoryId(), this.psaContractLineNum(), this.transType());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project category ID.
    /// </summary>
    /// <returns>
    ///    The value of the <c>ProjCategoryId</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public ProjCategoryId categoryId()
    {
        return projBegBalJournalTrans_CostSales.ProjCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the cost price.
    /// </summary>
    /// <returns>
    ///    The value of the <c>CostPrice</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public CostPrice costPrice()
    {
        return projBegBalJournalTrans_CostSales.CostPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyIdSales</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the sales currency.
    /// </summary>
    /// <returns>
    ///    The value of the <c>ProjSalesCurrencyId</c> field in the <c>ProjBegBalJournalTrans_CostSales</c>
    ///    table.
    /// </returns>
    public ProjSalesCurrencyCode currencyIdSales()
    {
        return projBegBalJournalTrans_CostSales.ProjSalesCurrencyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault defaultDimension()
    {
        return  projBegBalJournalTrans_CostSales.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fundingSource</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the funding source.
    /// </summary>
    /// <returns>
    ///    The <c>ProjFundingSource</c> field value from the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public ProjFundingSourceRefId fundingSource()
    {
        return projBegBalJournalTrans_CostSales.ProjFundingSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerSalesPosted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Specifies whether sales have been posted to the general ledger.
    /// </summary>
    /// <returns>
    ///    An enumeration value of <c>NoYes::No</c>.
    /// </returns>
    public NoYes ledgerSalesPosted()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerStatusCost</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ledger status for this transaction.
    /// </summary>
    /// <returns>
    ///    An enumeration value of <c>ProjLedgerStatus::None</c>.
    /// </returns>
    public ProjLedgerStatus ledgerStatusCost()
    {
        return ProjLedgerStatus::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linePropertyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the line property ID.
    /// </summary>
    /// <returns>
    ///    The value of the <c>LinePropertyId</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public ProjLinePropertyId linePropertyId()
    {
        return projBegBalJournalTrans_CostSales.LinePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustHandleCommittedCost</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Specifies whether to handle the committed cost.
    /// </summary>
    /// <returns>
    ///    Always returns false.
    /// </returns>
    public boolean mustHandleCommittedCost()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustHandleForecast</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Specifies whether to handle forecasting.
    /// </summary>
    /// <returns>
    ///    Always returns false.
    /// </returns>
    public boolean mustHandleForecast()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a new instance of the <c>ProjBegBalJournalTrans_CostSales</c> class.
    /// </summary>
    /// <param name="_projBegBalJournalTrans_CostSales">
    /// The <c>ProjBegBalJournalTrans_CostSales</c> table buffer.
    /// </param>
    public void new(ProjBegBalJournalTrans_CostSales _projBegBalJournalTrans_CostSales)
    {
        projBegBalJournalTrans_CostSales    = _projBegBalJournalTrans_CostSales;

        super(_projBegBalJournalTrans_CostSales);
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project number of the transaction.
    /// </summary>
    /// <returns>
    ///    The value of the <c>ProjID</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public ProjId projId()
    {
        return projBegBalJournalTrans_CostSales.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the quantity.
    /// </summary>
    /// <returns>
    ///    The value of the <c>Quantity</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public Qty qty()
    {
        return projBegBalJournalTrans_CostSales.Quantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the record ID of the transaction.
    /// </summary>
    /// <returns>
    ///    The value of the <c>RecID</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public RecId recId()
    {
        return projBegBalJournalTrans_CostSales.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>RecId</c> value for the resource category who is associated with this transaction.
    /// </summary>
    /// <returns>
    /// A resource category record ID.
    /// </returns>
    /// <remarks>
    /// This method should be overridden by classes that extend this class to provide the necessary
    /// functionality for the specific transaction.
    /// </remarks>
    public ResourceCategoryRecId resourceCategory()
    {
        return projBegBalJournalTrans_CostSales.ResourceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>RecId</c> value for the resource who is associated with this transaction.
    /// </summary>
    /// <returns>
    /// A resource record ID.
    /// </returns>
    /// <remarks>
    /// This method should be overridden by classes that extend this class to provide the necessary
    /// functionality for the specific transaction.
    /// </remarks>
    public ResourceRecId resource()
    {
        return projBegBalJournalTrans_CostSales.Resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the sales price of the transaction.
    /// </summary>
    /// <returns>
    ///    The value of the <c>SalesPrice</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public SalesPrice salesPrice()
    {
        return projBegBalJournalTrans_CostSales.SalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the table ID of the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </summary>
    /// <returns>
    ///    The table ID of the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public TableId tableId()
    {
        return tableName2id(tableStr(ProjBegBalJournalTrans_CostSales));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxGroup</Name>
				<Source><![CDATA[
    public TaxGroup taxGroup()
    {
        return projBegBalJournalTrans_CostSales.ProjTaxGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction date.
    /// </summary>
    /// <returns>
    ///    The value of the <c>ProjTransDate</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public TransDate transDate()
    {
        return projBegBalJournalTrans_CostSales.ProjTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction ID.
    /// </summary>
    /// <returns>
    ///    The value of the <c>TransID</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public TransactionID transId()
    {
        return projBegBalJournalTrans_CostSales.TransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txt</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction text.
    /// </summary>
    /// <returns>
    ///    The value of the <c>Txt</c> field in the <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </returns>
    public TransTxt txt()
    {
        return projBegBalJournalTrans_CostSales.Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>validateWrite</c> method to validate the transaction record of the
    ///    <c>ProjBegBalJournalTrans_CostSales</c> table.
    /// </summary>
    /// <returns>
    ///    true if the transaction record is valid; otherwise, false.
    /// </returns>
    public boolean validateWrite()
    {
        return projBegBalJournalTrans_CostSales.validateWrite();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>