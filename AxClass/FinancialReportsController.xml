<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FinancialReportsController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A controller class for Financial reports (Russia).
/// </summary>
public class FinancialReportsController extends ERFormatMappingRunBaseController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FinancialReportsController controller;

        controller = new FinancialReportsController(
            classStr(FinancialReportsController),
            methodStr(FinancialReportsController, runER),
            SysOperationExecutionMode::Synchronous);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets caption of the dialog.
    /// </summary>
    /// <returns>Caption of the dialog</returns>
    protected ClassDescription defaultCaption()
    {
        ClassDescription batchDescription;

        batchDescription = "@FinancialReports:FinancialReports";

        return batchDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runER</Name>
				<Source><![CDATA[
    public void runER(FinancialReportsContract _contract)
    {
        try
        {
            ERObjectsFactory::createFormatMappingRunByFormatMappingId(_contract.parmFormatMapping(),
                "@FinancialReports:FinancialReports", true)
                .withFileDestination(ERObjectsFactory::createFileDestinationBrowser())
                .withParameter(new ERModelDefinitionDatabaseContext()).run();
        }
        catch
        {
            error("@SYP4861341");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>