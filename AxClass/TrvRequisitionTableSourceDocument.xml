<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvRequisitionTableSourceDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TrvRequisitionTableSourceDocument</c> class provides the information to handle the
///    distributions and subledger journal lines of a <c>TrvRequisitionTable</c> record that is generated
///    from a travel requisition.
/// </summary>
[SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_TravelRequisition), SourceDocument_TravelRequisition::TravelRequisition, tableStr(TrvRequisitionTable))]
class TrvRequisitionTableSourceDocument extends SourceDocument
{
    TrvRequisitionTable trvRequisitionTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the instance variables.
    /// </summary>
    /// <param name="_sourceDocumentImplementation">
    ///    The source document implementation table.
    /// </param>
    protected void initializeImplementation(SourceDocumentHeaderImplementation    _sourceDocumentImplementation)
    {
        trvRequisitionTable = _sourceDocumentImplementation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentDate</Name>
				<Source><![CDATA[
    public DocumentDate parmDocumentDate()
    {
        return trvRequisitionTable.RequisitionDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentNumber</Name>
				<Source><![CDATA[
    public DocumentNum parmDocumentNumber()
    {
        return trvRequisitionTable.RequisitionNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReferenceDocumentNumber</Name>
				<Source><![CDATA[
    public DocumentNum parmReferenceDocumentNumber()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrievedSourceDocTypeInfoEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the <c>retrievedSourceDocTypeInfo</c> events.
    /// </summary>
    /// <param name="_sourceDocumentTmpTypeInformation">
    /// The <c>SourceDocumentTmpTypeInformation</c> table buffer.
    /// </param>
    /// <param name="_caller">
    /// The name of the caller.
    /// </param>
    [SubscribesTo(classstr(SourceDocumentTypeInformation),
                  delegatestr(SourceDocumentTypeInformation, retrievedSourceDocTypeInfoEventHandler))]
    public static void retrievedSourceDocTypeInfoEventHandler(SourceDocumentTmpTypeInformation _sourceDocumentTmpTypeInformation, str _caller)
    {
        if (SourceDocumentTypeInformation::isCallerSubledgerJournalTransferRelated(_caller))
        {
            // remove travel requisition line
            delete_from _sourceDocumentTmpTypeInformation
                where _sourceDocumentTmpTypeInformation.ClassId == classNum(TrvRequisitionTableSourceDocument);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLegalEntities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the list of <c>LegalEntity</c>s for the document.
    /// </summary>
    /// <returns>A <c>List</c> containing the RecIds of the <c>LegalEntity</c>s.</returns>
    protected List getLegalEntities()
    {
        var legalEntityList = new List(Types::Int64);
        TrvRequisitionLine trvRequisitionLine;

        while select LegalEntity from trvRequisitionLine
            group by LegalEntity
            where trvRequisitionLine.TrvRequisitionTable == trvRequisitionTable.RecId
        {
            legalEntityList.addEnd(trvRequisitionLine.LegalEntity);
        }

        return legalEntityList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>