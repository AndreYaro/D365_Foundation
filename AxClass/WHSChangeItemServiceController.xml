<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSChangeItemServiceController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  The <c>WHSChangeItemServiceController</c> class implements a custom controller for the services
///  allowing the change of warehouse-enabled items, which allows them to run in a new session (sandboxed).
/// </summary>
public class WHSChangeItemServiceController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSChangeItemServiceController controller = WHSChangeItemServiceController::construct();
        controller.initializeFromArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSChangeItemServiceController construct()
    {
        return new WHSChangeItemServiceController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    protected boolean validate()
    {
        boolean ret = super();

        Query query = this.getDataContractObject().getQuery();

        // Create a copy of the query to count the number of records selected
        if (ret)
        {
            Query queryCopy = new Query(query.pack());
            QueryBuildDataSource dsWHSInventEnabled = queryCopy.dataSourceTable(tableNum(WHSInventEnabled));
            dsWHSInventEnabled.addSelectionField(fieldNum(WHSInventEnabled, RecId), SelectionField::Count);

            QueryRun queryRunCount = new QueryRun(queryCopy);
            queryRunCount.next();
            WHSInventEnabled whsInventEnabledCount = queryRunCount.get(tableNum(WHSInventEnabled));
            
            // Inform the user if several items are going to be affected by the service and ask if they want to proceed
            if (whsInventEnabledCount.RecId > 1)
            {
                str prompt = strFmt("@SCM:PromptWithNumberOfWarehouseEnabledItems", whsInventEnabledCount.RecId);
                DialogButton answer = Box::yesNo(prompt, DialogButton::No);
                if (answer == DialogButton::No)
                {
                    ret = false;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>