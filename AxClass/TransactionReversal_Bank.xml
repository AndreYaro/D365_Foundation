<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransactionReversal_Bank</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TransactionReversal_Bank</c> class extends the <c>TransactionReversal</c> class and
/// contains the logic to reverse the adjstments made in bank transactions.
/// </summary>
internal abstract class TransactionReversal_Bank extends TransactionReversal
{
    protected BankAccountTrans bankAccountTransToReverse;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>reversal</Name>
				<Source><![CDATA[
    public void reversal(Args _args)
    {
        if (_args == null || _args.record() == null || _args.dataset() != tableNum(BankAccountTrans))
        {
            throw Error(error::missingRecord(funcName()));
        }

        super(_args);

        bankAccountTransToReverse = _args.record();
        this.findVoucherToReverse();
        this.reverseReconciliationAccounting();
        LedgerTransVoucherLink::createLedgerTransVoucherLink(
            bankAccountTransToReverse.Voucher,
            bankAccountTransToReverse.TransDate,
            reversalVoucher,
            reversalDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVoucherToReverse</Name>
				<Source><![CDATA[
    internal abstract void findVoucherToReverse()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>reverseReconciliationAccounting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the reversal process.
    /// </summary>
    internal abstract void reverseReconciliationAccounting()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeTransactionReversal_Bank</Name>
				<Source><![CDATA[
    internal void initializeTransactionReversal_Bank(TransDate _cancelDate, ReasonCode _reasonCode, ReasonComment _reasonComment)
    {
        this.parmReversalDate(_cancelDate);

        reasonRefRecID = ReasonTableRef::createReasonTableRef(_reasonCode, _reasonComment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLedgerVoucher</Name>
				<Source><![CDATA[
    public LedgerVoucher initLedgerVoucher()
    {
        ledgerVoucher = LedgerVoucher::newLedgerPost(DetailSummary::Detail, SysModule::Bank, LedgerParameters::numRefLedgerReversalVoucher().numberSequenceTable().NumberSequence);

        return ledgerVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Describes whether the class is designed for execution in a new session.
    /// </summary>
    /// <returns>
    /// true if the class is designed for executing the operation in a new session; otherwise, false.
    /// </returns>
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>