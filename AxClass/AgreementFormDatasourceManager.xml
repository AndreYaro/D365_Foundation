<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementFormDatasourceManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class AgreementFormDatasourceManager
{
    FormRun formRun;

    AgreementHeader         agreementHeader;
    AgreementHeaderDefault  agreementHeaderDefault;
    Common                  purchSalesAgreementHeaderDefault;
    AgreementHeaderExt_RU   agreementHeaderExt_RU;
    Common                  tmsAgreementHeader;

    #ISOCountryRegionCodes
    boolean countryRegion_RU;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFormRun</Name>
				<Source><![CDATA[
    public FormRun parmFormRun(FormRun _formRun = formRun)
    {
        formRun = _formRun;
        return formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementHeader</Name>
				<Source><![CDATA[
    public AgreementHeader parmAgreementHeader(AgreementHeader _agreementHeader = agreementHeader)
    {
        agreementHeader = _agreementHeader;
        return agreementHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementHeaderDefault</Name>
				<Source><![CDATA[
    public AgreementHeaderDefault parmAgreementHeaderDefault(AgreementHeaderDefault _agreementHeaderDefault = agreementHeaderDefault)
    {
        agreementHeaderDefault = _agreementHeaderDefault;
        return agreementHeaderDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchSalesAgreementHeaderDefault</Name>
				<Source><![CDATA[
    public Common parmPurchSalesAgreementHeaderDefault(Common _purchSalesAgreementHeaderDefault = purchSalesAgreementHeaderDefault)
    {
        purchSalesAgreementHeaderDefault = _purchSalesAgreementHeaderDefault;
        return purchSalesAgreementHeaderDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementHeaderExt_RU</Name>
				<Source><![CDATA[
    public AgreementHeaderExt_RU parmAgreementHeaderExt_RU(AgreementHeaderExt_RU _agreementHeaderExt_RU = agreementHeaderExt_RU)
    {
        agreementHeaderExt_RU = _agreementHeaderExt_RU;
        return agreementHeaderExt_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmsAgreementHeader</Name>
				<Source><![CDATA[
    public Common parmTmsAgreementHeader(Common _tmsAgreementHeader = tmsAgreementHeader)
    {
        tmsAgreementHeader = _tmsAgreementHeader;
        return tmsAgreementHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the agreement from the project
    /// </summary>
    public void initFromProject()
    {
        if (agreementHeaderDefault.Project)
        {
            agreementHeader.initFromProjTable(ProjTable::find(agreementHeaderDefault.Project));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the project is valid for this agreement header default.
    /// </summary>
    /// <returns>True if the project is valid.</returns>
    public boolean validateProject()
    {
        boolean ret = true;

        if (agreementHeaderDefault.RecId)
        {
            if ((agreementHeaderDefault.orig().Project) && (!agreementHeaderDefault.Project))
            {
                ret = checkFailed("@SYS78501");
            }

            if ((!agreementHeaderDefault.orig().Project) && (agreementHeaderDefault.Project))
            {
                ret = checkFailed("@SYS339382");
            }
        }

        if (agreementHeaderDefault.Project)
        {
            ret = ret && this.validateProjectWrite();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProjectWrite</Name>
				<Source><![CDATA[
    protected abstract boolean validateProjectWrite()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>editContactPersonName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get and sets the Contact Person.
    /// </summary>
    /// <param name="_set">
    /// true if the Contact Person Name is set; otherwise, false.
    /// </param>
    /// <param name="_agreementHeaderDefault">
    /// A table buffer containing the current Agreement Header Default table values.
    /// </param>
    /// <param name="_name">
    /// A string containing the Contact Person Name if the _set parameter is true; otherwise, empty.
    /// </param>
    /// <returns>
    /// Name of the Contact Person based on the Agreement Header Default record.
    /// </returns>
    public ContactPersonName editContactPersonName(boolean _set,
        AgreementHeaderDefault _agreementHeaderDefault,
        ContactPersonName _name)
    {
        ContactPersonName   name = _name;
        ContactPerson       contactPerson;
        ContactPersonId     contactPersonId;

        if (_set)
        {
            if (name)
            {
                contactPersonId = _agreementHeaderDefault.ContactPerson;
                contactPerson   = ContactPerson::find(name);
                _agreementHeaderDefault.ContactPerson = contactPerson.ContactPersonId;

                if (_agreementHeaderDefault.ContactPerson)
                {
                    name = contactPerson.personName();
                }
                else
                {
                    contactPerson = this.findContactPerson(name);

                    if (contactPerson)
                    {
                        _agreementHeaderDefault.ContactPerson = contactPerson.ContactPersonId;
                        name = contactPerson.personName();
                    }
                }

                if (contactPersonId != _agreementHeaderDefault.ContactPerson)
                {
                    if (!this.checkContactPerson())
                    {
                        _agreementHeaderDefault.ContactPerson = contactPersonId;
                    }
                    // <GEERU>
                    else
                        if (countryRegion_RU)
                    {
                        agreementHeaderExt_RU.initFromContactInfo(ContactPerson::find(_agreementHeaderDefault.ContactPerson));

                        FormDataSource agreementHeaderExt_RU_ds = SysFormDataSource::findDataSource(formRun, this.getAgreementHeaderExt_RUTableNum());
                        agreementHeaderExt_RU_ds.refresh();
                    }
                    // </GEERU>
                }
            }
            else
            {
                _agreementHeaderDefault.ContactPerson = '';
            }
        }
        else
        {
            name = ContactPerson::name(_agreementHeaderDefault.ContactPerson);
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkContactPerson</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks that the contact person entered is attached to the agreement vendor or customer.
    /// </summary>
    /// <returns>
    /// true if the contact person is attached to the agreement vendor or customer; otherwise, false.
    /// </returns>
    public boolean checkContactPerson()
    {
        if (agreementHeaderDefault.ContactPerson)
        {
            ContactPerson contactPerson = ContactPerson::find(agreementHeaderDefault.ContactPerson);
            CustVendAC contactCustVendAccount = this.getCustVendAccountFromContactPerson(contactPerson);
            CustVendAC custVendAccount        = this.getCustVendAccount();

            if (contactCustVendAccount != custVendAccount)
            {
                return checkFailed(strFmt(
                    this.checkContactPersonFailedMessage(),
                    agreementHeaderDefault.ContactPerson,
                    contactPerson.personName(),
                    custVendAccount)
                );
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkContactPersonFailedMessage</Name>
				<Source><![CDATA[
    protected abstract str checkContactPersonFailedMessage()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustVendAccount</Name>
				<Source><![CDATA[
    protected abstract CustVendAC getCustVendAccount()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustVendAccountFromContactPerson</Name>
				<Source><![CDATA[
    protected abstract CustVendAC getCustVendAccountFromContactPerson(ContactPerson _contactPerson)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>findContactPerson</Name>
				<Source><![CDATA[
    protected abstract ContactPerson findContactPerson(ContactPersonName _name)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAgreementHeaderExt_RUTableNum</Name>
				<Source><![CDATA[
    protected abstract int getAgreementHeaderExt_RUTableNum()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>