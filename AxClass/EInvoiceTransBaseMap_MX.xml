<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceTransBaseMap_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceTransBaseMap_MX</c> class is class that works as an abstraction over the invoice
/// lines for the Project and Sales modules.
/// </summary>
public abstract class EInvoiceTransBaseMap_MX
{
    EInvoiceJour_MX     eInvoiceJour;
    EInvoiceTrans_MX    eInvoiceTrans;
    NoYes               isPrint;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total amount of the posted document line.
    /// </summary>
    /// <returns>
    /// The original document line amount.
    /// </returns>
    public abstract LineAmount amount()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total amount of posted document line
    /// </summary>
    /// <returns>
    /// original document line amount
    /// </returns>
    public abstract LineAmount amountCur()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>brandCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the brand of the product.
    /// </summary>
    /// <returns>
    /// The Brand code.
    /// </returns>
    public BrandCode_MX brandCode()
    {
        return this.eInvoiceTrans().BrandCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customsDocDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the CustomsDocDate information from the posted document line.
    /// </summary>
    /// <returns>
    /// The CustomsDocDate information from the posted document line.
    /// </returns>
    public CustomsDocDate_MX customsDocDate()
    {
        return this.eInvoiceTrans().CustomsDocDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customsDocNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the CustomsDocNumber information from the posted document line
    /// </summary>
    /// <returns>
    /// The CustomsDocNumber information from the posted document line
    /// </returns>
    public CustomsDocNumber_MX customsDocNumber()
    {
        return this.eInvoiceTrans().CustomsDocNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customsQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the SAT customs quantity of posted invoice line.
    /// </summary>
    /// <returns>
    /// The SAT customs quantity of the posted invoice line.
    /// </returns>
    public SalesOrderedQty customsQty()
    {
        return this.eInvoiceTrans().CustomsQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customsName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the CustomsName information from the posted document line.
    /// </summary>
    /// <returns>
    /// The CustomsName information from the posted document line.
    /// </returns>
    public CustomsName_MX customsName()
    {
        return this.eInvoiceTrans().CustomsName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customUomCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a custom unit of measure code according to SAT classification.
    /// </summary>
    /// <returns>
    /// A custom unit of measure code according to SAT classification.
    /// </returns>
    public EInvoiceExtCodeId_MX customUomCode()
    {
        return this.eInvoiceTrans().CustomUOMCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return the currency code, used in the current CustInvoiceJour
    /// </summary>
    /// <returns>
    /// Invoice transaction currency code
    /// </returns>
    public abstract CurrencyCode currencyCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a discount amount for the invoice line.
    /// </summary>
    /// <returns>
    /// A discount amount for the invoice line.
    /// </returns>
    public abstract AmountCur discountAmount()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a discount amount for the invoice line.
    /// </summary>
    /// <returns>
    /// A discount amount for the invoice line.
    /// </returns>
    public abstract AmountMST discountAmountMST()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>eInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>EInvoiceJour_MX</c> record of the posted document.
    /// </summary>
    /// <returns>
    /// The <c>EInvoiceJour_MX</c> record of the posted document.
    /// </returns>
    public EInvoiceJour_MX eInvoiceJour()
    {
        return eInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>EInvoiceTrans_MX</c> record of the posted document.
    /// </summary>
    /// <returns>
    /// The <c>EInvoiceTrans_MX</c> record of the posted document.
    /// </returns>
    public EInvoiceTrans_MX eInvoiceTrans()
    {
        return eInvoiceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the map.
    /// </summary>
    /// <param name="_postedJournalLine">
    /// The posted journal line that will be mapped to the <c>EInvoiceTransBaseMap_MX</c> class.
    /// </param>
    /// <remarks>
    /// Do not override this method.
    /// </remarks>
    private void init(Common _postedJournalLine)
    {
        this.initLine(_postedJournalLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the map with the posted document journal line.
    /// </summary>
    /// <param name="_postedJournalLine">
    /// The original document journal line that will be mapped to the <c>EInvoiceTransBaseMap_MX</c> object.
    /// </param>
    /// <remarks>
    /// This method can be overridden to implement map initialization logic.
    /// </remarks>
    protected void initLine(Common _postedJournalLine)
    {
        this.initEInvoice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initEInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the Electronic invoice trans with the posted document journal line.
    /// </summary>
    /// <param name="_postedJournalLine">
    /// The original document journal line that will be mapped to the <c>EInvoiceTransBaseMap_MX</c> object.
    /// </param>
    /// <remarks>
    /// This method can be overridden to implement map initialization logic.
    /// </remarks>
    protected void initEInvoice()
    {
        eInvoiceTrans = EInvoiceTrans_MX::findByRef(this.sourceTableId(), this.sourceRecId());
        eInvoiceJour  = EInvoiceJour_MX::find(eInvoiceTrans.RefEInvoiceJourRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventTransId</c> from the posted document line.
    /// </summary>
    /// <returns>
    /// The <c>InventTransId</c> of the original document line.
    /// </returns>
    public abstract InventTransId inventTransId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the item ID from the posted document line.
    /// </summary>
    /// <returns>
    /// The item ID of the posted document line.
    /// </returns>
    public abstract ItemId itemId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the item name of the posted document line.
    /// </summary>
    /// <returns>
    /// The line item name of the posted document line.
    /// </returns>
    public abstract ItemFreeTxt itemName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupTransList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the list of <c>MarkupTrans</c> records that are related to each invoice line.
    /// </summary>
    /// <returns>
    /// A list of <c>MarkupTrans</c> records.
    /// </returns>
    public abstract List markupTransList()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// To create a new instance of <c>EInvoiceTransBaseMap_MX</c> use the static method construct.
    /// </summary>
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrint</Name>
				<Source><![CDATA[
    public NoYes parmIsPrint(NoYes _isPrint = isPrint)
    {
        isPrint = _isPrint;
        return isPrint;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrintInMST</Name>
				<Source><![CDATA[
    protected boolean isPrintInMST()
    {
        return this.parmIsPrint() && this.eInvoiceJour().PrintInMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>noIdentification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets item number of the merchandise.
    /// </summary>
    /// <returns>
    /// The item number.
    /// </returns>
    public str noIdentification()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>productCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a product code according to SAT classification.
    /// </summary>
    /// <returns>
    /// A product code according to SAT classification.
    /// </returns>
    public EInvoiceExtCodeId_MX productCode()
    {
        return this.eInvoiceTrans().ProductCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>propertyNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the property number information from the posted document line.
    /// </summary>
    /// <returns>
    /// The property number information from the posted document line
    /// </returns>
    public PropertyNumber_MX propertyNumber()
    {
        return this.eInvoiceTrans().PropertyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>serialNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the serial number of the line item.
    /// </summary>
    /// <returns>
    /// Serial number per line.
    /// </returns>
    public InventSerialId serialNumber()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns record id reference of the invoice line entity.
    /// </summary>
    /// <returns>
    /// A record id reference of the invoice line entity.
    /// </returns>
    public abstract RefRecId sourceRecId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns table id reference of the invoice line entity.
    /// </summary>
    /// <returns>
    /// A table id reference of the invoice line entity.
    /// </returns>
    public abstract RefTableId sourceTableId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>tariffFraction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a tariff fraction code according to SAT classification.
    /// </summary>
    /// <returns>
    /// A tariff fraction code according to SAT classification.
    /// </returns>
    public EInvoiceExtCodeId_MX tariffFraction()
    {
        return this.eInvoiceTrans().TariffFraction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>materialType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a customs material type code according to SAT classification.
    /// </summary>
    /// <returns>
    /// A customs material type code according to SAT classification.
    /// </returns>
    [Hookable(false)]
    public CustomsMaterialType_MX materialType()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>materialDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns material description
    /// </summary>
    /// <returns>
    /// Material description
    /// </returns>
    [Hookable(false)]
    public MaterialDescription_MX materialDescription()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a document type code according to SAT classification.
    /// </summary>
    /// <returns>
    /// A document type code according to SAT classification.
    /// </returns>
    [Hookable(false)]
    public DocumentType_MX documentType()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>identifierCustomsDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns identifier of customs document.
    /// </summary>
    /// <returns>
    /// Identifier of customs document
    /// </returns>
    [Hookable(false)]
    public IdentifierCustomDocument_MX identifierCustomsDocument()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax amount of the posted document line.
    /// </summary>
    /// <returns>
    /// The original document tax amount.
    /// </returns>
    public Amount taxAmount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the quantity of posted invoice line
    /// </summary>
    /// <returns>
    /// The quantity of the posted invoice line.
    /// </returns>
    public abstract Qty qty()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>uomCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a unit of measure code according to SAT classification.
    /// </summary>
    /// <returns>
    /// A unit of measure code according to SAT classification.
    /// </returns>
    public EInvoiceExtCodeId_MX uomCode()
    {
        return this.eInvoiceTrans().uomCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the unit ID of the original invoice line.
    /// </summary>
    /// <returns>
    /// The original invoice line unit ID.
    /// </returns>
    /// <remarks>
    /// This is the unit of the line item.
    /// </remarks>
    public abstract UnitOfMeasureSymbol unit()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the price per unit of original invoice line.
    /// </summary>
    /// <returns>
    /// The price per unit of the original invoice line.
    /// </returns>
    /// <remarks>
    /// The price per unit is how much each item unit costs.
    /// </remarks>
    public abstract SalesPrice unitPrice()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPriceMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the price MST per unit of original invoice line
    /// </summary>
    /// <returns>
    /// original invoice line price MST per unit
    /// </returns>
    /// <remarks>
    /// Price MST per unit is how much each item unit costs
    /// </remarks>
    public abstract SalesPrice unitPriceMST()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a object of the correct <c>ElectronicInvoiceTransBaseMap_MX</c> concrete implementation based on the _originalJournalLine table id
    /// </summary>
    /// <param name="_postedJournalLine">
    /// Original invoice journal line that will be mapped to <c>EInvoiceTransBaseMap_MX</c>
    /// </param>
    /// <returns>
    /// An <c>EInvoiceTransBaseMap_MX</c> instantiated object
    /// </returns>
    /// <remarks>
    /// Allways use this method to create new instances of <c>EInvoiceTransBaseMap_MX</c> classes
    /// </remarks>
    /// <exception cref="Exception::Error">
    /// If the provided _originalJournalLine is not supported
    /// </exception>
    public static EInvoiceTransBaseMap_MX construct(Common _postedJournalLine)
    {
        EInvoiceTransBaseMap_MX eInvoiceTransMap;

        switch (_postedJournalLine.TableId)
        {
            case tablenum(CustInvoiceTrans) :
                eInvoiceTransMap = CustInvoiceTransEInvoiceTransMap_MX::construct(_postedJournalLine);
                break;

            case tablenum(ProjInvoiceItem) :
            case tablenum(ProjInvoiceOnAcc) :
            case tablenum(ProjInvoiceRevenue) :
            case tablenum(ProjInvoiceCost) :
            case tablenum(ProjInvoiceEmpl) :
                eInvoiceTransMap = ProjInvoiceTransEInvoiceTransMap_MX::construct(_postedJournalLine);
                break;

            case tableNum(CustTrans) :
                eInvoiceTransMap = CustPaymentEInvoiceTransMap_MX::construct();
                break;

            case tableNum(CustPackingSlipTrans) :
                eInvoiceTransMap = CustPackingSlipTransEInvoiceTransMap_MX::construct(_postedJournalLine);
                break;

            case tableNum(InventTransferJourLine):
                eInvoiceTransMap = InvTransferJourLineEInvoiceTransMap_MX::construct(_postedJournalLine);
                break;

            case tableNum(RetailTransactionTable):
                eInvoiceTransMap = RetailEInvoiceTransMap_MX::construct();
                break;

            default :
                throw(error(strfmt("@SYS19306", funcname())));
        }

        eInvoiceTransMap.init(_postedJournalLine);

        return eInvoiceTransMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUnitApplicable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines if unit parameter is applicable.
    /// </summary>
    /// <returns>
    /// true if unit parameter is applicable; otherwise, false.
    /// </returns>
    public boolean isUnitApplicable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>productId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a product id.
    /// </summary>
    /// <returns>
    /// A product id.
    /// </returns>
    public str productId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a description of item.
    /// </summary>
    /// <returns>Item description.</returns>
    public str itemDescription()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>weight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a weight of item.
    /// </summary>
    /// <returns>Gross weight.</returns>
    public ItemNetWeight weight()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a total weight of the items of the line.
    /// </summary>
    /// <returns>Gross weight.</returns>
    public ItemNetWeight totalWeight()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dropOffSpot</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns drop off spot.
    /// </summary>
    /// <returns>Spot id.</returns>
    public EInvoiceSiteID_MX dropOffSpot()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>pickUpSpot</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns pick up spot.
    /// </summary>
    /// <returns>Spot id.</returns>
    public EInvoiceSiteID_MX pickUpSpot()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isHazardous</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows if the document is related with hazardous materials' transportation.
    /// </summary>
    /// <returns>
    /// Returns true if hazardous materials are used; otherwise false.
    /// </returns>
    public boolean isHazardous()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hazardousMaterialType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the type of hazardous material.
    /// </summary>
    /// <returns>Hazardous material type.</returns>
    public EInvoiceExtCodeId_MX hazardousMaterialType()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>containerType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the type of container.
    /// </summary>
    /// <returns>Container type.</returns>
    public EInvoiceExtCodeId_MX containerType()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayHazardous</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether hazardous material tag must be displayed in xml document.
    /// </summary>
    /// <returns><c>NoYes</c> value.</returns>
    public NoYes displayHazardous()
    {
        return NoYes::No;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>