<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_BudgetPlanning</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrade script for budget planning schema changes.
/// </summary>
public class ReleaseUpdateDB70_BudgetPlanning extends ReleaseUpdateDB
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>moduleName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the module name of an upgrade class.
    /// </summary>
    /// <returns>
    ///    The module name.
    /// </returns>
    /// <remarks>
    ///    This method must be implemented by sub classes.The module name is displayed on the cockpit form for
    ///    every script.
    /// </remarks>
    public ReleaseUpdateModule moduleName()
    {
        return "@Budget:BudgetPlanningTitle";
    }

]]></Source>
			</Method>
			<Method>
				<Name>myVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///     The script runs in any system having version < CTP8.
    /// </summary>
    /// <returns>Script version.</returns>
    public sysReleasedVersion myVersion()
    {
        return sysReleasedVersion::CTP8;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBudgetPlanLineNumberPreSync</Name>
				<Source><![CDATA[
	/// <summary>
    ///     Creates a table that is a subset of <c>BudgetPlanLine</c> table and copies corresponding column data.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
        UpgradeScriptTableAttribute(tableStr(BudgetPlanLine), false, true, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateBudgetPlanLineNumberPreSync()
    {
        UserConnection  sessionConnection = new UserConnection();
        Statement       statement = sessionConnection.createStatement();

        str sqlStatement = @"
            CREATE TABLE [BUDGETPLANLINETEMP](
                [BUDGETPLANHEADER] [bigint] NOT NULL,
                [LINECOUNT] [int] NOT NULL,
                [PARTITION] [bigint] NOT NULL,
                [RECID] [bigint] NOT NULL,
             CONSTRAINT [I_BUDGETPLANLINETEMP_RECID] PRIMARY KEY CLUSTERED
            (
                [RECID] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY]
            ALTER TABLE [BUDGETPLANLINETEMP] ADD  DEFAULT ((0)) FOR [BUDGETPLANHEADER]
            ALTER TABLE [BUDGETPLANLINETEMP] ADD  DEFAULT ((0)) FOR [LINECOUNT]
            ALTER TABLE [BUDGETPLANLINETEMP] ADD  DEFAULT ((5637144576.)) FOR [PARTITION]
            ALTER TABLE [BUDGETPLANLINETEMP] WITH CHECK ADD CHECK  (([RECID]<>(0)));

            INSERT INTO BUDGETPLANLINETEMP
            SELECT BUDGETPLANHEADER, ROW_NUMBER() OVER (ORDER BY BUDGETPLANLINE.RECID), PARTITION, RECID
            FROM BUDGETPLANLINE;

            DECLARE @MAXHEADER BIGINT;
            SET @MAXHEADER = (SELECT MAX(BUDGETPLANHEADER) FROM BUDGETPLANLINE);

            UPDATE BUDGETPLANLINE
            SET BUDGETPLANHEADER = @MAXHEADER + LINECOUNT
            FROM BUDGETPLANLINETEMP
            WHERE BUDGETPLANLINETEMP.RECID = BUDGETPLANLINE.RECID
            AND BUDGETPLANLINETEMP.PARTITION = BUDGETPLANLINE.PARTITION; ";

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdateWithParameters(sqlStatement, SqlParams::create());

        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBudgetPlanLineNumberPostSync</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates the line reference on the <c>BudgetPlanLine</c> table and restores the data in the header field.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
        UpgradeScriptTableAttribute(tableStr(BudgetPlanLine), false, true, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateBudgetPlanLineNumberPostSync()
    {
        UserConnection  sessionConnection = new UserConnection();
        Statement   statement = sessionConnection.createStatement();

        str sqlStatement = @"
            UPDATE BUDGETPLANLINE
            SET LINEREFERENCEID = NEWID();

            UPDATE BUDGETPLANLINE
            SET BUDGETPLANHEADER = BUDGETPLANLINETEMP.BUDGETPLANHEADER
            FROM BUDGETPLANLINETEMP
            WHERE BUDGETPLANLINETEMP.RECID = BUDGETPLANLINE.RECID
            AND BUDGETPLANLINETEMP.PARTITION = BUDGETPLANLINE.PARTITION;

            DROP TABLE [BUDGETPLANLINETEMP]; ";

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdateWithParameters(sqlStatement, SqlParams::create());

        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBudgetPlanningStageAllocationOrdinal</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates the <c>BudgetPlanningStageAllocation</c>'s Ordinal field with appropriate integer values.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
        UpgradeScriptTableAttribute(tableStr(BudgetPlanningStageAllocation), false, true, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateBudgetPlanningStageAllocationOrdinal()
    {
        BudgetPlanningStageAllocation       budgetPlanningStageAllocation;
        BudgetPlanningStageAllocation       stageAllocationWorkflow;
        BudgetPlanningStageAllocation       updateBudgetPlanningStageAllocation;

        ttsbegin;
        while select BudgetPlanningWorkflowStage from stageAllocationWorkflow
            group by BudgetPlanningWorkflowStage
        {
            while select forupdate Ordinal from updateBudgetPlanningStageAllocation
                where updateBudgetPlanningStageAllocation.BudgetPlanningWorkflowStage == stageAllocationWorkflow.BudgetPlanningWorkflowStage
                    && updateBudgetPlanningStageAllocation.Ordinal                    == 0
            {
                updateBudgetPlanningStageAllocation.Ordinal = (select maxOf(Ordinal)
                                                                from budgetPlanningStageAllocation
                                                                where budgetPlanningStageAllocation.BudgetPlanningWorkflowStage == stageAllocationWorkflow.BudgetPlanningWorkflowStage).Ordinal + 1;
                updateBudgetPlanningStageAllocation.update();
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBudgetPlanLineSourceDataAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>BudgetPlanLine</c>'s SourceDataAreaId column.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
        UpgradeScriptTableAttribute(tableStr(BudgetPlanLine), false, true, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateBudgetPlanLineSourceDataAreaId()
    {
        BudgetPlanHeader    budgetPlanHeader;
        BudgetPlanLine      budgetPlanLine;
        DataAreaId          dataAreaId;

        ttsbegin;
        while select RecId from budgetPlanHeader
        {
            dataAreaId = BudgetPlan::getDataAreaId(budgetPlanHeader.RecId);

            update_recordset budgetPlanLine
                setting SourceDataAreaId = dataAreaId
                where budgetPlanLine.BudgetPlanHeader == budgetPlanHeader.RecId
                && (budgetPlanLine.AssetId != null
					|| budgetPlanLine.ProjectId != null)
				&& budgetPlanLine.SourceDataAreaId == null;
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteBudgetPlanLayoutTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Deletes the existing <c>BudgetPlanLayout</c>'s template.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
        UpgradeScriptTableAttribute(tableStr(DocuTemplate), false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void deleteBudgetPlanLayoutTemplate()
    {
        BudgetPlanLayout    deleteBudgetPlanLayoutTemplate;

        ttsbegin;
        while select deleteBudgetPlanLayoutTemplate
        {
            BudgetPlanTemplateManager::deleteTemplate(deleteBudgetPlanLayoutTemplate.RecId);
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>