<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PaymentTimesBillProcessing</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PaymentTimesBillProcessing</c> class processes of payment times bill.
/// </summary>
public class PaymentTimesBillProcessing extends SysOperationServiceBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>runProcessing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Run processing the statistics of payment times bill.
    /// </summary>
    /// <param name = "_contract">The parameters for the processing.</param>
    public void runProcessing(PaymentTimesBillDataContract _contract)
    {
        PaymentTimesBillDateFrom dateFrom = _contract.parmDateFrom();
        PaymentTimesBillDateTo dateTo = _contract.parmDateTo();

        PaymentTimesBill paymentTimesBill = PaymentTimesBill::findByReportingPeriod(dateFrom, dateTo, true);

        ttsbegin;

        if (!paymentTimesBill)
        {
            paymentTimesBill.DateFrom = dateFrom;
            paymentTimesBill.DateTo = dateTo;

            paymentTimesBill.insert();
        }

        PaymentTimesBillPaymentDays minDays, maxDays;
        [ minDays, maxDays ] = this.getMinMaxPaymentPeriodInCalendarDays(dateFrom, dateTo);

        paymentTimesBill.ShortestActualStandardPaymentPeriod = minDays;
        paymentTimesBill.LongestActualStandardPaymentPeriod = maxDays;

        PaymentTimesBill paymentTimesBillPrevious = PaymentTimesBill::findPreviousReportingPeriod(dateFrom);
        paymentTimesBill.StandardPaymentPeriodPrevious = paymentTimesBillPrevious.StandardPaymentPeriodInCalendarDays;
        paymentTimesBill.ShortestActualPaymentPeriodPrevious = paymentTimesBillPrevious.ShortestActualStandardPaymentPeriod;
        paymentTimesBill.LongestActualPaymentPeriodPrevious = paymentTimesBillPrevious.LongestActualStandardPaymentPeriod;

        paymentTimesBill.update();

        ttscommit;

        info(strFmt("@PaymentTimesBill:PaymentTimesBillProcessingUpdated", dateFrom, dateTo));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMinMaxPaymentPeriodInCalendarDays</Name>
				<Source><![CDATA[
    private container getMinMaxPaymentPeriodInCalendarDays(PaymentTimesBillDateFrom _dateFrom, PaymentTimesBillDateTo _dateTo)
    {
        VendTable vendTable;
        StatisticsOnInvoiceJour jour;
        StatisticsOnInvoicePaymentSchedule paymentSchedule;

        boolean firstRecord = true;
        PaymentTimesBillPaymentDays minDays, maxDays;

        while select DocumentDate, InvoiceDate, InvoiceReceivedDate from jour
            where jour.AmountAccounting == jour.SettlementAmountAccounting
        exists join paymentSchedule
            where paymentSchedule.InvoiceJour == jour.RecId
                && paymentSchedule.TransDate >= _dateFrom
                && paymentSchedule.TransDate <= _dateTo
        exists join vendTable
            where vendTable.AccountNum == jour.InvoiceAccount
                && vendTable.SmallBusiness
        {
            PaymentTimesBillPaymentDays currentValueDays = jour.getPaymentPeriodInCalendarDays();

            if (firstRecord)
            {
                minDays = currentValueDays;
                maxDays = currentValueDays;
                firstRecord = false;
            }
            else
            {
                minDays = min(currentValueDays, minDays);
                maxDays = max(currentValueDays, maxDays);
            }
        }

        return [ minDays, maxDays ];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>