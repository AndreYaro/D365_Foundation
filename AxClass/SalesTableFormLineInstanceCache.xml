<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTableFormLineInstanceCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A helper class which bundles Sales line dependent queries into single RPC.
/// </summary>
class SalesTableFormLineInstanceCache implements SysPackable
{
    SalesLine salesLine;

    boolean            pdsAllowEditRebate;
    SalesQty           deliveredInTotal;

    boolean            isCached;

    #DEFINE.CurrentVersion(1)

    #LOCALMACRO.CurrentList
        pdsAllowEditRebate,
        deliveredInTotal,
        isCached
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDeliveredInTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrives total delivered sales quantity.
    /// </summary>
    /// <param name="_salesLine">
    /// A <c>SalesLine</c> record.
    /// </param>
    /// <returns>
    /// A total delivered sales quantiy.
    /// </returns>
    public SalesQty getDeliveredInTotal(SalesLine _salesLine)
    {
        if (!_salesLine.InventTransId)
        {
            return 0;
        }

        this.revalidateCache(_salesLine);

        return deliveredInTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPdsAllowEditRebate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if rebate is editable.
    /// </summary>
    /// <param name="_salesLine">
    /// A <c>SalesLine</c> record.
    /// </param>
    /// <returns>
    /// true if rebate is editable; otherwise, false.
    /// </returns>
    public boolean getPdsAllowEditRebate(SalesLine _salesLine)
    {
        if (!_salesLine.InventTransId)
        {
            return true;
        }

        this.revalidateCache(_salesLine);
        return pdsAllowEditRebate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>SalesTableFormLineInstanceCache</c> object.
    /// </summary>
    /// <remarks>
    /// All values stored in <c>SalesTableFormLineInstanceCache</c> instance are calculated in bulk in this method
    /// therefore this method should only be executed in server tier.
    /// </remarks>
    protected void init()
    {
        pdsAllowEditRebate = salesLine.canEditPdsRebate();
        deliveredInTotal = salesLine.deliveredInTotal();

        isCached = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesLine</Name>
				<Source><![CDATA[
    protected SalesLine parmSalesLine(SalesLine _salesLine = salesLine)
    {
        salesLine = _salesLine;
        return salesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>revalidateCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Recalculates cache if cache is outdate or not yet initialized.
    /// </summary>
    /// <param name="_salesLine">
    /// A sales line record for which the cache is calculated.
    /// </param>
    /// <remarks>
    /// Cache is recaclulated if sales line record or its version changes.
    /// </remarks>
    protected void revalidateCache(SalesLine _salesLine)
    {
        if (isCached && salesLine.RecId == _salesLine.RecId && salesLine.recVersion == _salesLine.recVersion)
        {
            return;
        }

        this.parmSalesLine(_salesLine);
        this.unpack(SalesTableFormLineInstanceCache::initOnServer(_salesLine));
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer     version     = conpeek(_packedClass,1);
        boolean     ret = true;

        switch (version)
        {
            case #CurrentVersion  :
                [version,#CurrentList] = _packedClass;
                break;

            default :
                ret = false;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SalesTableFormLineInstanceCache construct()
    {
        return new SalesTableFormLineInstanceCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initOnServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize line cache on server.
    /// </summary>
    /// <param name="_salesLine">
    /// A <c>SalesLine</c> record.
    /// </param>
    /// <returns>
    /// An initialized packed <c>SalesTableFormLineInstanceCache</c> instance.
    /// </returns>
    public static container initOnServer(SalesLine _salesLine)
    {
        SalesTableFormLineInstanceCache instanceCache = new SalesTableFormLineInstanceCache();

        instanceCache.parmSalesLine(_salesLine);
        instanceCache.init();

        return instanceCache.pack();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>