<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSBatchAttribReserveInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSBatchAttribReserveInstrumentationActivities</c> class provides activities for WHSbatchAttribReserve form.
/// </summary>
internal final class WHSBatchAttribReserveInstrumentationActivities
{
    private const str ActivityNamePrefix = 'WHSbatchAttribReserve.';
    private InventInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(InventInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static WHSBatchAttribReserveInstrumentationActivities newFromLogger(InventInstrumentationLogger _logger)
    {
        return new WHSBatchAttribReserveInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formInit</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext formInit()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'init');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReservationBatches</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext getReservationBatches() 
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'getReservationBatches');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBatchAttributesValues</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext validateBatchAttributesValues()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'validateBatchAttributesValues');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sameLotBatchId</Name>
				<Source><![CDATA[
    public void sameLotBatchId(
        SysInstrumentationActivityContext   _activityContext,
        InventBatchId                       _sameLotBatchId)
    {
        _activityContext.addCustomProperty('sameLotBatchId', _sameLotBatchId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshSelection</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext refreshSelection()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'refreshSelection');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>whsBatchReservationFormRun</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext whsBatchReservationFormRun()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'run');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reserveLine</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext reserveLine()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'reserveLine');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reserveLot</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext reserveLot()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'reserveLot');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>batchIdMapElementsCounts</Name>
				<Source><![CDATA[
    public void batchIdMapElementsCounts(
        SysInstrumentationActivityContext   _activityContext,
        int                                 _batchIdMapElementsCounts)
    {
        _activityContext.addCustomProperty('batchIdMapElementsCounts', any2Str(_batchIdMapElementsCounts));
    }

]]></Source>
			</Method>
			<Method>
				<Name>reservationBatchesCounts</Name>
				<Source><![CDATA[
    public void reservationBatchesCounts(
        SysInstrumentationActivityContext   _activityContext,
        int                                 _reservationBatchesCounts)
    {
        _activityContext.addCustomProperty('reservationBatchesCounts', any2Str(_reservationBatchesCounts));
    }

]]></Source>
			</Method>
			<Method>
				<Name>flexibleReservation</Name>
				<Source><![CDATA[
    public void flexibleReservation(
        SysInstrumentationActivityContext   _activityContext,
        boolean                             _flexibleReservation)
    {
        _activityContext.addCustomProperty('flexibleReservation', any2Str(_flexibleReservation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>whsInventReserveQuery</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext whsInventReserveQuery()
    {
        SysInstrumentationActivity activity = logger.activity('WHSInventReserve query measure in method '+ ActivityNamePrefix + 'refreshSelection');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSumFindSumQty</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext inventSumFindSumQty()
    {
        SysInstrumentationActivity activity = logger.activity('InventSum.FindSumQty measure in method '+ ActivityNamePrefix + 'refreshSelection');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBatchReservedCheck</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext isBatchReservedCheck(boolean _mustUseFlexibleWarehouseLevelDimensionReservation)
    {
        str activityDescription = 'Is batch reserved check in method '+ ActivityNamePrefix + 'refreshSelection';

        if (_mustUseFlexibleWarehouseLevelDimensionReservation)
        {
            activityDescription += ' by using flexible warehouse level dimension reservation';
        }
        
        SysInstrumentationActivity activity = logger.activity(activityDescription);
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillDefaultAttributes</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext fillDefaultAttributes()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'fillDefaultAttributes');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>