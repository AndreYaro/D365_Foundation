<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleAsset</Name>
	<SourceCode>
		<Declaration><![CDATA[
// Fixed Assets
public class NumberSeqModuleAsset extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
/// <summary>
    ///    Configures all the data types that are being used by the module.
    /// </summary>
    /*
    Detailed description of how to setup references for number sequences can
    be found i method loadModule() on the 'father' class: NumberSeqApplicationModule.
    */
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        /* Asset number */

        datatype.parmDatatypeId(extendedtypenum(AssetId));
        datatype.parmReferenceHelp(literalstr("@SYS67666"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        //Setup Asset Transfer
        datatype.parmDatatypeId(extendedtypenum(TransferSequenceNumber));
        datatype.parmReferenceHelp(literalstr("@SYS84050"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // <GJP>
        //Setup impairment test result
        datatype.parmDatatypeId(extendedtypenum(AssetImpairmentTestNum_JP));
        datatype.parmReferenceHelp(literalstr("@SYS4005140"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(3);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        //Setup impairment document
        datatype.parmDatatypeId(extendedtypenum(AssetImpairmentTestLineId_JP));
        datatype.parmReferenceHelp(literalstr("@SYS4005160"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(4);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

	    //Setup accelerated depreciation document id
	    datatype.parmDatatypeId(extendedtypenum(AssetAcceleratedDepDocumentId_JP));
        datatype.parmReferenceHelp(literalstr("@FixedAssetsIncentiveDepreciation:SYP4880035"));
	    datatype.parmWizardIsContinuous(false);
	    datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
	    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
	    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
	    datatype.parmSortField(5);

	    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
	    this.create(datatype);

	    //Setup cash generating unit number
	    datatype.parmDatatypeId(extendedtypenum(AssetImpairmentCGUName_JP));
        datatype.parmReferenceHelp(literalstr("@FixedAssetsImpairementAccounting:SYP4880246"));
	    datatype.parmWizardIsContinuous(false);
	    datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
	    datatype.parmWizardIsChangeDownAllowed(NoYes::No);
	    datatype.parmWizardIsChangeUpAllowed(NoYes::No);
	    datatype.parmSortField(6);

	    datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
	    this.create(datatype);

        //Setup asset idle period
        datatype.parmDatatypeId(extendedtypenum(AssetIdlePeriod_JP));
        datatype.parmReferenceHelp(literalstr("@FixedAssets:FA_HelpText_FixedAssetIdlePeriod_NumberSeq"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(7);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GJP>
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDataType</Name>
				<Source><![CDATA[
    private void addDataType(
        ExtendedTypeId _datatypeId,
        Integer _sortField,
        NumberSequenceRefLabel _referenceLabel = '',
        NumberSequenceRefHelp _referenceHelp = ''
    )
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();
        datatype.parmDataTypeId(_datatypeId);
        if (_referenceLabel)
        {
            datatype.parmReferenceLabel(_referenceLabel);
        }
        if (_referenceHelp)
        {
            datatype.parmReferenceHelp(_referenceHelp);
        }
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(_sortField);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the application-specific module for this class.
    /// </summary>
    /// <returns>
    ///    The module-specific ID.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Asset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleAsset), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>