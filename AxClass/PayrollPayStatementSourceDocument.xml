<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollPayStatementSourceDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PayrollPayStatementSourceDocument</c> class provides the information to handle the distributions and
/// subledger journal lines of a <c>PayrollPayStatement</c> record that is generated during a payroll run.
/// </summary>
[SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_PayrollPayStatement), SourceDocument_PayrollPayStatement::PayStatement, tableStr(PayrollPayStatement))]
class PayrollPayStatementSourceDocument extends SourceDocument
{
    PayrollPayStatement payStatement;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance variables.
    /// </summary>
    /// <param name="_sourceDocumentImplementation">
    /// A source document implementation table.
    /// </param>
    protected void initializeImplementation(SourceDocumentHeaderImplementation _sourceDocumentImplementation)
    {
        payStatement = _sourceDocumentImplementation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrentVoucher</Name>
				<Source><![CDATA[
    public Voucher parmCurrentVoucher(DataAreaId _dataAreaId)
    {
        Voucher                 voucher;
        NumberSeq               numberSeq;
        NumberSequenceReference numberSequenceReference;
        NumberSequenceTable     numberSequenceTable;

        // Try to pull from cache first
        voucher = SysTransactionScopeCache::get(classStr(PayrollPayStatementSourceDocument), [payStatement.RecId, _dataAreaId], null);

        if (!voucher)
        {
            changeCompany(_dataAreaId)
            {
                // Validate voucher settings
                numberSequenceReference = PayrollParameters::numRefPayStatementVoucher();

                if (!numberSequenceReference)
                {
                    throw error("@SYS53912");
                }

                numberSequenceTable = NumberSequenceTable::find(numberSequenceReference.NumberSequenceId);

                if (!numberSequenceTable)
                {
                    throw error(strfmt("@SYS53911", numberSequenceReference.referenceLabel(), numberSequenceReference.referenceModuleLabel()));
                }

                numberSeq   = NumberSeq::newGetVoucher(numberSequenceReference);
                voucher     = numberSeq.voucher();

                // Cache value for subsequent use
                if (payStatement.recid)
                {
                    SysTransactionScopeCache::set(classStr(PayrollPayStatementSourceDocument), [payStatement.RecId, _dataAreaId], voucher);
                }
            }
        }
        return voucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentDate</Name>
				<Source><![CDATA[
    public DocumentDate parmDocumentDate()
    {
        return payStatement.PaymentDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentNumber</Name>
				<Source><![CDATA[
    public DocumentNum parmDocumentNumber()
    {
        return payStatement.DocumentNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsDocumentEditable</Name>
				<Source><![CDATA[
    public boolean parmIsDocumentEditable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>