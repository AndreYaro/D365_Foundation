<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqStatisticsUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchReqStatisticsUIBuilder</c> class is the UI Builder class for the associated SQL
/// ServerReporting Services report.
/// </summary>
public class PurchReqStatisticsUIBuilder extends SrsReportDataContractUIBuilder
{
    PurchReqStatisticsContract  contract;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the UI modified event for the detail dialog field. The level must enabled or disabled
    /// according to value in detail field.
    /// </summary>
    /// <param name="_control">
    /// The control that is behind the changed dialog field.
    /// </param>
    /// <returns>
    /// true if the control value has been modified; otherwise false.
    /// </returns>
    public boolean allModified(FormCheckboxControl _control)
    {
        boolean ret = true;
        DialogField showRequisitions;

        showRequisitions = this.bindInfo().getDialogField(contract,methodStr(PurchReqStatisticsContract,parmShowRequisitions));

        if (_control.modified())
        {
            if (_control.value())
            {
                showRequisitions.enabled(false);
            }
            else
            {
                showRequisitions.enabled(true);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
        public void build()
    {
        DialogField showRequisitions;
        contract = this.dataContractObject() as PurchReqStatisticsContract;
        super();

        showRequisitions = this.bindInfo().getDialogField(contract,methodStr(PurchReqStatisticsContract,parmShowRequisitions));
        showRequisitions.showLabel(false);

        //If All checkbox is marked, disable showRequisitions combobox
        if (contract.parmAll())
        {
            showRequisitions.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs post run actions.
    /// </summary>
    public void postRun()
    {
        DialogField                 allField;
        DialogField                 statusField;
        super();

        allField = this.bindInfo().getDialogField(contract, methodStr(PurchReqStatisticsContract, parmAll));
        statusField = this.bindInfo().getDialogField(contract, methodStr(PurchReqStatisticsContract, parmStatus));
        dialog.dialogForm().formRun().controlMethodOverload(false);

        allField.registerOverrideMethod(methodstr(FormCheckBoxControl, modified), methodstr(PurchReqStatisticsUIBuilder, allModified), this);
        statusField.registerOverrideMethod(methodstr(FormComboBoxControl, modified), methodstr(PurchReqStatisticsUIBuilder, statusModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>statusModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the UI modified event for the Status dialog combobox. If Draft is selected, reverts it back to previous selection.
    /// </summary>
    /// <param name="_control">
    /// The control that is behind the changed dialog field.
    /// </param>
    /// <returns>
    /// true if the control value has been modified; otherwise false.
    /// </returns>
    public boolean statusModified(FormComboBoxControl _control)
    {
        int selection = _control.selection();
        boolean ret = true;

        if (selection == PurchReqRequisitionStatus::Draft)
        {
            info("@SYS4000771");
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>