<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanItemCheckItemId</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>KanbanItemCheckItemId</c> class provides a validation that checks whether a specific item
/// can be used with kanbans.
/// </summary>
/// <remarks>
/// Generally, all items that are used with kanbans must be standard cost controlled.An exception to
/// this rule is a withdrawal kanban that updates inventory on issue and receipt.
/// </remarks>
public class KanbanItemCheckItemId extends KanbanItemCheck
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkIsAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the item can be used with kanbans.
    /// </summary>
    /// <returns>
    /// true if the item can be used; otherwise, false.
    /// </returns>
    protected boolean checkIsAllowed()
    {
        return this.checkItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static KanbanItemCheckItemId construct()
    {
        return new KanbanItemCheckItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new <c>KanbanItemCheckItemId</c> object.
    /// </summary>
    /// <param name="_itemId">
    /// An item ID.
    /// </param>
    /// <param name="_warningOnFailure">
    /// A Boolean value that indicates whether a warning must be given when the check fails; optional.
    /// </param>
    /// <param name="_errorOnFailure">
    /// A Boolean value that indicates whether an error must be thrown when the check fails; optional.
    /// </param>
    /// <param name="_inventTable">
    /// The <c>InventTable</c> record of the item; optional.
    /// </param>
    /// <returns>
    /// A new <c>KanbanItemCheckItemId</c> object.
    /// </returns>
    public static KanbanItemCheckItemId newStandard(
        ItemId      _itemId,
        boolean     _warningOnFailure = false,
        boolean     _errorOnFailure   = false,
        InventTable _inventTable      = null)
    {
        KanbanItemCheckItemId kanbanItemCheckItemId = KanbanItemCheckItemId::construct();

        kanbanItemCheckItemId.parmItemId(_itemId);
        kanbanItemCheckItemId.parmInventTable(_inventTable);
        kanbanItemCheckItemId.parmWarningOnFailure(_warningOnFailure);
        kanbanItemCheckItemId.parmErrorOnFailure(_errorOnFailure);

        return kanbanItemCheckItemId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>