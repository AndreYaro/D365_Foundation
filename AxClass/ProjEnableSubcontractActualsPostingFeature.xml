<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjEnableSubcontractActualsPostingFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
			
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation;

/// <summary>
/// When <c>ProjEnableSubcontractActualsPostingFeature</c> is enabled, the user will be able to view
/// and post advanced journal/ vendor invoices linked to subcontract lines from CRM.
/// </summary>
[Export(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
[FeatureMetadataConfigurationKey(configurationKeyStr(Project))]
public final class ProjEnableSubcontractActualsPostingFeature implements IFeatureLifecycle, IFeatureMetadata, IFeatureDependencies
{
    private static ProjEnableSubcontractActualsPostingFeature instance;
     
					

				
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements constructor for <c>ProjEnableSubcontractActualsPostingFeature</c> class.
    /// </summary>
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    /// <summary>
    /// The static constructor for <c>ProjEnableSubcontractActualsPostingFeature</c> class.
    /// </summary>
    private static void typeNew()
    {
        instance = new ProjEnableSubcontractActualsPostingFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAllFeatures</Name>
				<Source><![CDATA[
    public IFeature[] dependsOnAllFeatures()
    {
        var featureDependency = new IFeature[1]();
        featureDependency.SetValue(ProjEnableAdvancedJournalErrorTransferFeature::instance(), 0);
        return featureDependency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAnyFeature</Name>
				<Source><![CDATA[
    public IFeature[] dependsOnAnyFeature()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>ProjEnableSubcontractActualsPostingFeature</c> instance.</returns>
    [Hookable(false)]
    public static ProjEnableSubcontractActualsPostingFeature instance()
    {
        return ProjEnableSubcontractActualsPostingFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the label Id of the feature that is shown on the feature management workspace
    /// </summary>
    /// <returns>Label for the feature.</returns>
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Proj:ProjEnableSubcontractActualsPostingFeature");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the application module of the feature that is displayed on the feature management workspace.
    /// </summary>
    /// <returns>
    /// The application module value of the feature that is displayed on the feature management workspace.
    /// </returns>
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::ProjectManagementAndAccounting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the label Id that is displayed as summary of the feature.
    /// </summary>
    /// <returns>Summary for the feature.</returns>
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Proj:ProjEnableSubcontractActualsPostingFeatureDesc");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// A forward link to the Microsoft documentation of the feature.
    /// </summary>
    /// <returns> URL to the Microsoft documentation of the feature.</returns>
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://aka.ms/ProjOpsProcurementCategories';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the feature is enabled by default.
    /// </summary>
    /// <returns>true when feature is enabled by default; otherwise false.</returns>
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Determines whether the user can disable the feature.
    /// </summary>
    /// <returns>true when user have capability to disable feature; otherwise false.</returns>
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Feature state defines the state of the feature's code. This is used by the runtime to derive when and how the
    /// feature is released to customers and/or enabled.
    /// Incomplete implies the feature should never be enabled for customers, but can be enabled on internal dev/test deployments
    /// PrivatePreview implies the feature can be released to customers
    /// PublicPreview implies the feature is released to all customers and has a kill switch
    /// Released implies the feature is released to all customers
    /// </summary>
    /// <returns>Current state of the feature's code</returns>
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>