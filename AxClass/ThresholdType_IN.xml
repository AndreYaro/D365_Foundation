<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ThresholdType_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ThresholdType_IN</c> class is operation class of table <c>Threshold_IN</c>.
/// </summary>
class ThresholdType_IN
{
    Threshold_IN       threshold;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canThresholdDelete</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates whether the <c>Threshold_IN</c> can be delete.
    /// </summary>
    /// <returns>
    ///     Returns true if threshold can be deleted; otherwise, false.
    /// </returns>
    public boolean canThresholdDelete()
    {
        boolean ret = true;
        if (ret && this.existsReference())
        {
            //You can't delete a threshold that is used by an entity.
            ret = checkFailed("@SYS4003344");
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyThresholdDesignTree</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Copies threshold sub tree of the from a specified threshold section node of a <c>Threshold_IN</c>.
    /// </summary>
    /// <param name="_fromThreshold">
    ///     From where threshold been copied.
    /// </param>
    /// <param name="_fromThresholdSectionParentRecId">
    ///     From which parent threshold section been copied.
    /// </param>
    /// <param name="_toThresholdSectionParentRecId">
    ///     To where threshold section been copied.
    /// </param>
    protected void copyThresholdDesignTree(
        Threshold_IN                _fromThreshold,
        ThresholdSectionsRecId_IN   _fromThresholdSectionParentRecId    = 0,
        ThresholdSectionsRecId_IN   _toThresholdSectionParentRecId      = 0)
    {
        ThresholdSections_IN        fromThresholdSection;
        ThresholdSections_IN        toThresholdSection;

        ttsBegin;
        while select fromThresholdSection
            where fromThresholdSection.Threshold    == _fromThreshold.RecId
                && fromThresholdSection.ParentRecId == _fromThresholdSectionParentRecId
        {
            toThresholdSection.clear();
            toThresholdSection.Threshold    = threshold.RecId;
            toThresholdSection.ParentRecId  = _toThresholdSectionParentRecId;
            toThresholdSection.initFromThresholdSection(fromThresholdSection);
            toThresholdSection.insert();
            if (!toThresholdSection.IsLeaf)
            {
                this.copyThresholdDesignTree(_fromThreshold, fromThresholdSection.RecId, toThresholdSection.RecId);
            }
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsOtherReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates whether exist other references for this threshold.
    /// </summary>
    /// <param name="_thresholdRefTableId">
    ///     The tableId of which reference to be exclude from check.
    /// </param>
    /// <param name="_thresholdRefRecId">
    ///     The recId of which reference to be exclude from check.
    /// </param>
    /// <returns>
    ///     Returns true if exist other reference; otherwise, false.
    /// </returns>
    public boolean existsOtherReference(RefTableId _thresholdRefTableId, RefRecId _thresholdRefRecId)
    {
        ThresholdReference_IN  thresholdReference;

        select firstOnly RecId
            from  thresholdReference
            where (thresholdReference.ReferenceTableId      != _thresholdRefTableId
                    || thresholdReference.ReferenceRecId    != _thresholdRefRecId)
                && thresholdReference.Threshold             == threshold.RecId;

        return thresholdReference.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Check whether exist reference for this threshold.
    /// </summary>
    /// <returns>
    ///     Returns true if exist reference; otherwise, false.
    /// </returns>
    public boolean existsReference()
    {
        ThresholdReference_IN  thresholdReference;

        select firstOnly RecId
            from  thresholdReference
            where thresholdReference.Threshold             == threshold.RecId;

        return thresholdReference.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmThreshold</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets and gets <c>Threshold_IN</c>.
    /// </summary>
    /// <param name="_threshold">
    ///     The <c>Threshold_IN</c> to initialize.
    /// </param>
    /// <returns>
    ///     Returns <c>Threshold_IN</c> instance.
    /// </returns>
    public Threshold_IN parmThreshold(Threshold_IN _threshold = threshold)
    {
        threshold = _threshold;
        return threshold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cloneThresholdDesigner</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Clones a <c>Threshold_IN</c> and its threshold design from and an existing <c>Threshold_IN</c>.
    /// </summary>
    /// <param name="_fromThresholdRecId">
    ///     Indicates the recId from which <c>Threshold_IN</c> to be copied.
    /// </param>
    /// <param name="_toThresholdRecId">
    ///     Indicates the recId to which <c>Threshold_IN</c> to copy.
    /// </param>
    static public void cloneThresholdDesigner(ThresholdRecId_IN _fromThresholdRecId, ThresholdRecId_IN _toThresholdRecId)
    {
        Thresholdtype_IN    thresholdType;
        Threshold_IN        fromThreshold;
        Threshold_IN        toThreshold;
        if (_fromThresholdRecId && _toThresholdRecId)
        {
            fromThreshold   = Threshold_IN::findByRecId(_fromThresholdRecId);
            toThreshold     = Threshold_IN::findByRecId(_toThresholdRecId);

            if (fromThreshold && toThreshold)
            {
                thresholdType = Thresholdtype_IN::construct(toThreshold);
                thresholdType.copyThresholdDesignTree(fromThreshold);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs <c>Thresholdtype_IN</c> instance.
    /// </summary>
    /// <param name="_threshold">
    ///     Indicate threshold from which to construct Thresholdtype.
    /// </param>
    /// <returns>
    ///     Returns Thresholdtype.
    /// </returns>
    public static Thresholdtype_IN construct(Threshold_IN _threshold)
    {
        Thresholdtype_IN thresholdtype;
        thresholdtype = new Thresholdtype_IN();
        thresholdtype.parmThreshold(_threshold);
        return Thresholdtype;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>