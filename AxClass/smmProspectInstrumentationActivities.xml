<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmProspectInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>smmProspectInstrumentationActivities</c> class provides activities for prospect instrumentation logging.
/// </summary>
internal final class smmProspectInstrumentationActivities
{
    private const str ActivityNamePrefix = 'Prospect.';
    private const str InsertActivity = 'Insert';
    private const str UpdateActivity = 'Update';
    private const str DeleteActivity = 'Delete';
    private const str Convert2CustomerActivity = 'Convert2Customer';
    private const str CleanUpConvert2Customer = 'CleanUpConvert2Customer';
    private const str UpdateReferencesForConvertedProspectActivity = 'UpdateReferences';

    private const str HasUIProperty = 'HasUI';
    private const str IsIntegrationProperty = 'IsIntegration';

    private smmInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(smmInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static smmProspectInstrumentationActivities newFromLogger(smmInstrumentationLogger _logger)
    {
        return new smmProspectInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(Common _prospectCommon, str _activityName)
    {
        return logger.activityContext(strFmt('%1.%2', tableId2Name(_prospectCommon.tableId), _activityName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext insert(Common _prospectCommon)
    {
        return this.activityContext(_prospectCommon, InsertActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext update(Common _prospectCommon)
    {
        return this.activityContext(_prospectCommon, UpdateActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext delete(Common _prospectCommon)
    {
        return this.activityContext(_prospectCommon, DeleteActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>convert2Customer</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext convert2Customer()
    {
        return logger.activityContext(ActivityNamePrefix + Convert2CustomerActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanUpConvert2Customer</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext cleanUpConvert2Customer()
    {
        return logger.activityContext(ActivityNamePrefix + CleanUpConvert2Customer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReferencesForConvertedProspect</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updateReferencesForConvertedProspect()
    {
        return logger.activityContext(ActivityNamePrefix + UpdateReferencesForConvertedProspectActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logProspect</Name>
				<Source><![CDATA[
    internal void logProspect(SysInstrumentationActivityContext _activityContext, smmBusRelTable _smmBusRelTable)
    {
        if (TradeTableInstrumentationFlight::instance().isEnabled())
        {
            _activityContext
                .addCustomProperty(HasUIProperty, any2Str(FormDataUtil::isFormDataSource(_smmBusRelTable)))
                .addCustomProperty(IsIntegrationProperty, enum2Symbol(enumNum(TradeIntegrationType), _smmBusRelTable.IsIntegration));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>