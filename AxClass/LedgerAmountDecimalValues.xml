<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAmountDecimalValues</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class LedgerAmountDecimalValues
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>decimalAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a rounded amount as string type based on a round setting for a given currency
    /// </summary>
    /// <param name="_amount">
    /// The amount to be rounded.
    /// </param>
    /// <param name="_currencyCode">
    /// The currency code used for rounding.
    /// </param>
    internal static str decimalAmount(Amount _amount, CurrencyCode _currencyCode)
    {
        return num2Str(_amount, 0, LedgerAmountDecimalValues::decimals(_currencyCode), -1, -1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>decimals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets decimal places as an integer for a given currency.
    /// </summary>
    /// <param name = "_currencyCode"></param>
    /// currency code to be checked for rounding precision.
    /// <remarks>
    /// Return decimal place as an integer for a given currency.
    /// For instance: when a rounding precision is 0.01, return 2.
    /// when a rounding precision is 0.001, return 3.
    /// When rounding precision sets 0 which is a default value,
    /// it returns a default decimal value of 2 when there is no customization to the decimal places.
    /// If there is a customization to the decimal places, it returns the customized value.
    /// </returns>
    private static int decimals(CurrencyCode _currencyCode)
    {
        RoundOff roundOff = Currency::roundingPrecisionAdjusted(_currencyCode);

        str tmpTxt = num2str(roundOff, 0, 6, 1, 0);
        tmpTxt = strDel(tmpTxt, 1, strFind(tmpTxt,'.,', 1, 999));

        return strNFind(tmpTxt, '0', strLen(tmpTxt), -999);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>