<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMDeduction_LedgerJournalTrans_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TAMDeduction_LedgerJournalTrans_Extension</c> class implements extension for the <c>LedgerJournalTrans</c> table 
/// to keep related data in the <c>TAMDeduction</c> table in sync.
/// </summary>
[ExtensionOf(tableStr(LedgerJournalTrans))]
final internal class TAMDeduction_LedgerJournalTrans_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        boolean promotionsManagementEnabled = isConfigurationkeyEnabled(configurationKeyNum(TAMPromotionsManagement));
        LedgerJournalTrans ledgerJournalTransOrig;

        if (promotionsManagementEnabled)
        {
            ledgerJournalTransOrig = this.orig();
        }

        next update();

        if (promotionsManagementEnabled)
        {
            LedgerJournalTrans ledgerJournalTrans = this;

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust &&
                ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                boolean offsetLedgerDimensionChanged = ledgerJournalTrans.OffsetLedgerDimension != ledgerJournalTransOrig.OffsetLedgerDimension;
                boolean amountCurCreditChanged = ledgerJournalTrans.AmountCurCredit != ledgerJournalTransOrig.AmountCurCredit;

                if (offsetLedgerDimensionChanged || amountCurCreditChanged)
                {
                    TAMDeduction deduction = TAMDeduction::findByLedgerJournalTransRecId(ledgerJournalTrans.RecId, true);

                    if (deduction)
                    {
                        if (offsetLedgerDimensionChanged)
                        {
                            deduction.DeductOffLedgerDimension = ledgerJournalTrans.OffsetLedgerDimension;
                        }
                        if (amountCurCreditChanged)
                        {
                            deduction.AmountCur             = ledgerJournalTrans.AmountCurCredit;
                        }
                        deduction.update();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>