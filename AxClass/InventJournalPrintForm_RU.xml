<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalPrintForm_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventJournalPrintForm_RU
{
    InventJournalReportPackable_RU  inventJournalReportPackable;
    Map                             control2Class;
    boolean                         hideForm;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>control2Class</Name>
				<Source><![CDATA[
    public Map control2Class()
    {
        return control2Class;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHideForm</Name>
				<Source><![CDATA[
    protected boolean parmHideForm(boolean _hideForm = hideForm)
    {
        hideForm = _hideForm;

        return hideForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventJournalCheckPost</Name>
				<Source><![CDATA[
    protected void parmInventJournalCheckPost(InventJournalReportPackable_RU  _inventJournalReportPackable)
    {
        inventJournalReportPackable = _inventJournalReportPackable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    #define.lookupButton(2)
    protected void run()
    {
        List            reportList = List::create(inventJournalReportPackable.packReportList());

        if (!reportList.empty() && !hideForm)
        {
            Form form = new Form(formStr(InventJournalPrint_RU));
            Args args = new Args();
            args.object(form);
            args.caller(this);

            FormRun formRun = classfactory.formRunClass(args);

            form            = formRun.form();

            formRun.init();

            ListIterator it = new ListIterator(reportList);
            DictEnum dictEnum = new DictEnum(enumNum(InventJournalReportType_RU));
            it.begin();

            while (it.more())
            {
                InventJournalReportInterface_RU report = it.value();
                str dsName = dictEnum.index2Symbol(report.reportType());

                FormDataSource formDataSource = formRun.dataSource(dsName);
                QueryBuildDataSource qbds = formDataSource.query().dataSourceName(dsName);

                InventJournalProforma_RU inventJournalProfroma_RU = report as InventJournalProforma_RU;
                OffSessionId_RU offSessionId;

                if (inventJournalProfroma_RU)
                {
                    offSessionId = inventJournalProfroma_RU.getOffSessionId();
                }
                else
                {
                    InventJournalReport_RU inventJournalReport_RU = report as InventJournalReport_RU;
                    offSessionId = inventJournalReport_RU.getOffSessionId();
                }

                qbds.addRange(fieldNum(OfficialsTrans_RU, OffSessionId)).value(offSessionId);
                qbds.addRange(fieldNum(OfficialsTrans_RU, ReportType)).value(SysQuery::value(InventJournalReport_RU::inventJournalReportType2OffReportType(report.reportType())));

                FormTabPageControl reportTabPage = formRun.design().controlName(dsName) as FormTabPageControl;

                if (reportTabPage != null)
                {
                    reportTabPage.visible(true);
                }

                it.next();
            }

            formRun.run();
            formRun.wait();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        InventJournalReportPackable_RU  inventJournalReportPackable;
        FormRun sysSetupFormRun;
        DialogRunbase                   dialogRunbase;

        if (_args && _args.caller())
        {
            sysSetupFormRun = _args.caller() as FormRun;
        }
        if (sysSetupFormRun)
        {
            dialogRunbase = sysSetupFormRun.caller_RU() as DialogRunbase;
        }
        if (dialogRunbase)
        {
            inventJournalReportPackable = dialogRunbase.runBase() as InventJournalReportPackable_RU;
        }

        if (!inventJournalReportPackable)
            throw error(Error::wrongUseOfFunction(funcName()));

        InventJournalPrintForm_RU inventJournalPrintForm = new InventJournalPrintForm_RU();
        inventJournalPrintForm.parmInventJournalCheckPost(inventJournalReportPackable);
        inventJournalPrintForm.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>