<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBillOfExchangePostDraw</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CustBillOfExchangePostDraw extends CustBillOfExchangePost
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postNextStep</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates new open transactions for transactions settled by the settling transaction.
    /// </summary>
    /// <param name = "_custVoucher">
    ///     An instance of <c>CustVendVoucher</c>.
    /// </param>
    /// <param name = "_settlingTrans">
    ///     A <c>CustVendTrans</c> table buffer.
    /// </param>
    protected void postNextStep(CustVendVoucher _custVoucher, CustVendTrans _settlingTrans)
    {
        CustVoucher             custVoucher = _custVoucher;
        CustTrans               settlingTrans = _settlingTrans;
        CustTrans               nextStepTrans;
        CustBillOfExchangeJour  custBillOfExchangeJour;
        CustBillOfExchangeTrans custBillOfExchangeTrans;
        ;

        nextStepTrans.data(settlingTrans);

        custVoucher.parmSettlementType(this.getSettlementType());
        custVoucher.parmPostingProfile(CustVendNegInstPost::getPostingProfile(ledgerJournalType,
                                                                              ledgerJournalTrans.BankRemittanceType));

        // Create a transaction for the new bill
        nextStepTrans.AmountCur = -settlingTrans.AmountCur;
        nextStepTrans.AmountMST = -settlingTrans.AmountMST;
        custVoucher.parmAmountCur(nextStepTrans.AmountCur);
        custVoucher.post(ledgerVoucher, nextStepTrans);

        custBillOfExchangeJour = CustBillOfExchangeJour::find(ledgerJournalTrans.NegInstId, true);
        custBillOfExchangeTrans = this.insertNegInstTrans(custBillOfExchangeJour, nextStepTrans);

        this.setNegInstFieldOnTrans(nextStepTrans,
                                    custBillOfExchangeTrans.BillOfExchangeId,
                                    custBillOfExchangeTrans.Status,
                                    custBillOfExchangeTrans.SeqNum);

        nextStepTrans.update();

        this.setNegInstFieldOnTrans(settlingTrans,
                                    custBillOfExchangeTrans.BillOfExchangeId,
                                    custBillOfExchangeTrans.Status,
                                    custBillOfExchangeTrans.SeqNum);

        settlingTrans.update();

        this.createCustBillOfExchangeInvoice(custBillOfExchangeJour, settlingTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>seqNum</Name>
				<Source><![CDATA[
        protected CustVendNegInstSeqNum seqNum(CustBillOfExchangeID _custBillOfExchangeID)
    {
        return 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
        protected CustVendNegInstStatus status()
    {
        return CustVendNegInstStatus::Drawn;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>