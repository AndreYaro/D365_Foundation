<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResWBSUsageDataController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Resource assignment controller class.
/// </summary>
public class ResWBSUsageDataController extends ResourceAvailabilityDataController implements IAvailabilityViewDataController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCoverageType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get roll-up coverage type by activity resource Id.
    /// </summary>
    /// <param name = "_collectionKey">Activity resource Id as collection key.</param>
    /// <returns>Activity resoruce Id associated roll-up coverage type.</returns>
    protected ResRollUpCoverage getCoverageType(str _collectionKey)
    {
        ResRollUpCoverage localCoverage;
        if (ResUtil::isCompanyResourceFromActivityResourceId(_collectionKey))
        {
            localCoverage = ResRollUpCoverage::Availability;
        }
        else
        {
            localCoverage = ResRollUpCoverage::Assignment;
        }
        return localCoverage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setChartController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the chart controller.
    /// </summary>
    protected void setChartController()
    {
        if (this.getPerfEnhancement())
        {
            super();
        }
        else
        {
            // cached chart availability data controller
            this.chartController(ResCachedResourceAssignmentChart::construct());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReservationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves reservation type.
    /// </summary>
    /// <returns>Reservation type.</returns>
    protected ResReservationType getReservationType()
    {
        return ResReservationType::Assignment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCancelReservationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cancel reservation type.
    /// </summary>
    /// <returns>Reservation type to cancel.</returns>
    protected ResReservationType getCancelReservationType()
    {
        return ResReservationType::Assignment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add the availability chart resource to cache.
    /// </summary>
    /// <param name = "_activityResourceId">Activity recource Id.</param>
    /// <param name = "_start">Starting date/time.</param>
    /// <param name = "_end">Ending date/time.</param>
    public void addEntity(ActivityResourceId _activityResourceId, str _start, str _end)
    {
        utcdatetime start = AVUtil::getDateTime(_start);
        utcdatetime end = AVUtil::getDateTime(_end);

        ResRollUpWriter::updateRollUpForSpecificActivityResourceId(_activityResourceId, start, end);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize an instance of assignment data controller.
    /// </summary>
    /// <param name = "_control">AvailabilityView control instance.</param>
    protected void new(AvailabilityView _control)
    {
        if (!this.collectionController())
        {
            this.collectionController(ResResourceAssignmentCollection::construct());
        }

        if (!this.chartController())
        {
            this.chartController(ResResourceAvailabilityChart::construct());
        }

        super(_control);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contructs a new instance of the assignment data controller.
    /// </summary>
    /// <returns>Returns an instance of the data controller.</returns>
    public static ResWBSUsageDataController construct(AvailabilityView _control = null)
    {
        ResWBSUsageDataController dataController = new ResWBSUsageDataController(_control);
        return dataController;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>