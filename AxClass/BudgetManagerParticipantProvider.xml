<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetManagerParticipantProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetManagerParticipantProvider</c> class implements the <c>WorkflowParticipantProvider</c> interface
///    to provide the budget responsible user participants.
/// </summary>
public class BudgetManagerParticipantProvider implements WorkflowParticipantProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getParticipantTokens</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets a list of participants to display in the workflow configuration user interface.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>WorkflowParticipantTokenList</c> class.
    /// </returns>
    public WorkflowParticipantTokenList getParticipantTokens()
    {
        WorkflowParticipantTokenList participants;

        participants = WorkflowParticipantTokenList::construct();

        participants.add("@SYS135001", "@SYS135001");

        return participants;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolve</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resolves a <c>WorkflowContext</c> class to a list of budget responsible users.
    /// </summary>
    /// <param name="_context">
    ///    An instance of the <c>WorkflowContext</c> class.
    /// </param>
    /// <param name="_participantTokenName">
    ///    The workflow participant token.
    /// </param>
    /// <returns>
    ///    An instance of the <c>WorkflowUserList</c> class.
    /// </returns>
    public WorkflowUserList resolve(WorkflowContext _context, WorkflowParticipantToken _participantTokenName)
    {
        WorkflowUserList userList;

        BudgetControlWFResolver budgetControlWFResolver;

        BudgetResponsibleUser responsibleUser;

        Set responsibleUsers;
        SetEnumerator responsibleUsersEnumerator;

        if (!_participantTokenName)
        {
            throw error("@SYS105453");
        }

        userList = WorkflowUserList::construct();

        if (_participantTokenName == "@SYS135001")
        {
            // Construct an instance of the resolver class.
            budgetControlWFResolver = BudgetControlWFResolver::construct(_context);

            if (budgetControlWFResolver)
            {
                // The workflow type is supported by the resolver.
                // Resolve the primary ledger and source ledger dimension combinations.
                budgetControlWFResolver.resolve();

                // Create a set to maintain the list of distinct responsible users.
                // The responsible user lookups may return the same user multiple times,
                // yet the workflow user list should only contain the user once.
                responsibleUsers = new Set(Types::String);

                while (budgetControlWFResolver.moveNext())
                {
                    // Get the user from the budget control rule.
                    responsibleUser = BudgetResponsibleUserManager::getResponsibleUserFromBudgetControlRule(
                        budgetControlWFResolver.currentPrimaryLedger(),
                        budgetControlWFResolver.currentSourceLedgerDimension());

                    if (responsibleUser)
                    {
                        responsibleUsers.add(responsibleUser);
                    }

                    // Get the user from the budget group.
                    responsibleUser = BudgetResponsibleUserManager::getResponsibleUserFromBudgetGroup(
                        budgetControlWFResolver.currentPrimaryLedger(),
                        budgetControlWFResolver.currentSourceLedgerDimension());

                    if (responsibleUser)
                    {
                        responsibleUsers.add(responsibleUser);
                    }
                }

                // Add the set of distinct responsible users to the workflow user list.
                responsibleUsersEnumerator = responsibleUsers.getEnumerator();

                while (responsibleUsersEnumerator.moveNext())
                {
                    userList.add(responsibleUsersEnumerator.current());
                }
            }
        }

        if (userList.getCount() == 0)
        {
            throw error(strFmt("@SYS313866", _participantTokenName));
        }

        return userList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static BudgetManagerParticipantProvider construct()
    {
        return new BudgetManagerParticipantProvider();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>