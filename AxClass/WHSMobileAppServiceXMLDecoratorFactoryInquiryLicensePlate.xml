<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppServiceXMLDecoratorFactoryInquiryLicensePlate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppServiceXMLDecoratorFactoryInquiryLicensePlate</c> class is responsible for instantiating a decorator depending on the current step of the menu item.
/// </summary>
[WHSWorkExecuteMode(WHSWorkExecuteMode::InquiryLicensePlate)]
public class WHSMobileAppServiceXMLDecoratorFactoryInquiryLicensePlate implements WHSIMobileAppServiceXMLDecoratorFactory
{
    #WHSRF

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDecorator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates the <c>WHSMobileAppServiceXMLDecorator</c> class.
    /// </summary>
    /// <param name = "_con">
    /// Contains information about the context that may be required for instantiating the <c>WHSMobileAppServiceXMLDecorator</c>.
    /// </param>
    /// <returns>
    /// An instance of the <c>WHSMobileAppServiceXMLDecorator</c> class.
    /// </returns>
    public WHSMobileAppServiceXMLDecorator getDecorator(container _con)
    {
        if (this.inputInquiryScreen(_con))
        {
            return new WHSMobileAppServiceXMLDecoratorInquiryInput();
        }

        return new WHSMobileAppServiceXMLDecoratorInquiry();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputInquiryScreen</Name>
				<Source><![CDATA[
    private boolean inputInquiryScreen(container _con)
    {
        str currentStep = this.getCurrentStep(_con);

        return currentStep == this.getInputStepName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inquiryLicensePlateInputStepDelegate</Name>
				<Source><![CDATA[
	/// <summary>
    /// Gets the input step for the license plate inquiry process guide.
    /// </summary>
    /// <param name = "_result">
    /// The <c>EventHandlerResult</c> containing the input step name.
	/// </param>
    delegate void inquiryLicensePlateInputStepDelegate(EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentStep</Name>
				<Source><![CDATA[
    private str getCurrentStep(container _con)
    {
        WhsrfPassthrough pass = WhsrfPassthrough::createFromFormContainer(_con);

        return pass.parmCurrentStep();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInputStepName</Name>
				<Source><![CDATA[
    private str getInputStepName()
    {
        str inputStep;
        EventHandlerResult result = new EventHandlerResult();

        this.inquiryLicensePlateInputStepDelegate(result);

        if (result.result() != null)
        {
            inputStep = result.result();
        }

        return inputStep;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>