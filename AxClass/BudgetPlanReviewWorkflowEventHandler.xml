<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanReviewWorkflowEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanReviewWorkflowEventHandler</c> class is the event handler class that manages a
/// workflow document started event, a workflow document canceled event, and a workflow document
/// completed event.
/// </summary>
public class BudgetPlanReviewWorkflowEventHandler implements
    WorkflowStartedEventHandler,
    WorkflowCompletedEventHandler,
    WorkflowCanceledEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the canceled event for the workflow document.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    public void canceled(WorkflowEventArgs _workflowEventArgs)
    {
        BudgetPlanWorkflowHelper::cancelWorkflow(_workflowEventArgs.parmWorkflowContext().parmRecId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkBudgetPlanValidForCompletion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether there are any uncompleted planning stages for the budget plan workflow.
    /// </summary>
    /// <param name="_budgetPlanHeaderRecId">
    /// The ID of a <c>BudgetPlanHeader</c> record.
    /// </param>
    /// <exception cref="M:Exception::Error">
    /// There are more planning stages for a budget plan.
    /// </exception>
    protected void checkBudgetPlanValidForCompletion(BudgetPlanHeaderRecId _budgetPlanHeaderRecId)
    {
        BudgetPlanHeader    budgetPlanHeader;
        BudgetPlanningStage budgetPlanningStage;

        budgetPlanningStage = BudgetPlan::getNextPlanningStage(_budgetPlanHeaderRecId);

        if (budgetPlanningStage)
        {
            budgetPlanHeader = budgetPlanHeader::find(_budgetPlanHeaderRecId);
            throw error(strFmt("@GLS70390", budgetPlanHeader.DocumentNumber));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles a completed event for the workflow document.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    public void completed(WorkflowEventArgs _workflowEventArgs)
    {
        this.checkBudgetPlanValidForCompletion(_workflowEventArgs.parmWorkflowContext().parmRecId());

        BudgetPlanWorkflowHelper::approveWorkflow(_workflowEventArgs.parmWorkflowContext().parmRecId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles a started event for the workflow document.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    public void started(WorkflowEventArgs _workflowEventArgs)
    {
        BudgetPlanWorkflowHelper::setWorkflowStatus(
            _workflowEventArgs.parmWorkflowContext().parmRecId(),
            BudgetPlanWorkflowStatus::InReview);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>