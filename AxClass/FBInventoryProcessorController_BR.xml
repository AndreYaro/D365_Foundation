<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBInventoryProcessorController_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Controller class for the inventory processor service.
/// </summary>
public class FBInventoryProcessorController_BR extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the <c>FBInventoryProcessorController_BR</c> class.
    /// </summary>
    /// <param name="_args">
    /// Instance of <c>Args</c> with the values used to initialize the controller.
    /// </param>
    /// <returns>
    /// An instance of <c>FBInventoryProcessorController_BR</c> class.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Exception thrown if the values passed in through the <c>Args</c> parameter are not appropriate.
    /// </exception>
    public static SysOperationController construct(Args _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR10019, funcName());

        FBInventoryProcessorController_BR controller = new FBInventoryProcessorController_BR();

        if (_args.dataset() == tableNum(FBBookingPeriod_BR) && _args.record().RecId)
        {
            controller.initializeFromArgs(_args);

            FBInventoryProcessorContract_BR contract = controller.getDataContractObject();

            FBBookingPeriod_BR bookingPeriod = _args.record();

            contract.parmBookingPeriod(bookingPeriod);

            controller.parmExecutionMode(SysOperationExecutionMode::ReliableAsynchronous);
            controller.parmShowProgressForm(true);
        }
        else
        {
            throw error("@SYS22996");
        }

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FBInventoryProcessorController_BR inventoryProcessorController = FBInventoryProcessorController_BR::construct(_args);

        inventoryProcessorController.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>