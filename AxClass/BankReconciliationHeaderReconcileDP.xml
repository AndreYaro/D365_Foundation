<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankReconciliationHeaderReconcileDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data provider class of reconciled header data for Bank reconciliation ER report.
/// </summary>
public final class BankReconciliationHeaderReconcileDP
{
    private BankAutomationReconciliationHeaderInformation headerInformation;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initByHeaderId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an object of <c>BankReconciliationHeaderReconcileDP</c>, find the header information table with reconciliation header id.
    /// The <c>BankAutomationReconciliationHeaderInformation</c> can not be used by GER configuration directly because it is an internal table.
    /// </summary>
    /// <param name = "_reconciliationHeaderRecId">The RecId of the bank reconciliation header for print</param>
    /// <returns>Data provider of header information for report when worksheet is reconciled.</returns>
    [Hookable(false)]
    public static BankReconciliationHeaderReconcileDP initByHeaderId(RecId _reconciliationHeaderRecId)
    {
        BankReconciliationHeaderReconcileDP dp = new BankReconciliationHeaderReconcileDP();
        dp.headerInformation = BankAutomationReconciliationHeaderInformation::findByReconciliationHeader(_reconciliationHeaderRecId);
        return dp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankEndingBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ending balance of bank statement lines.
    /// </summary>
    /// <returns>The ending balance of bank statement lines.</returns>
    [Hookable(false)]
    public AmountCur getBankEndingBalance()
    {
        return headerInformation.BankEndingBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankMatchedTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total amount of bank matched transactions.
    /// </summary>
    /// <returns>The total amount of bank matched transactions.</returns>
    [Hookable(false)]
    public AmountCur getBankMatchedTotal()
    {
        return headerInformation.BankMatchedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankUnmatchedTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total amount of bank unmatched transactions.
    /// </summary>
    /// <returns>The total amount of bank unmatched transactions.</returns>
    [Hookable(false)]
    public AmountCur getBankUnmatchedTotal()
    {
        return headerInformation.BankUnmatchedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompanyEndingBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ending balance of company transactions.
    /// </summary>
    /// <returns>The ending balance of company transactions.</returns>
    [Hookable(false)]
    public AmountCur getCompanyEndingBalance()
    {
        return headerInformation.CompanyEndingBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompanyMatchedCorrectionTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total correction amount of company matched transactions.
    /// </summary>
    /// <returns>The total correction amount of company matched transactions.</returns>
    [Hookable(false)]
    public AmountCur getCompanyMatchedCorrectionTotal()
    {
        return headerInformation.CompanyCorrectionAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompanyUnmatchedTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total amount of company unmatched transactions.
    /// </summary>
    /// <returns>The total amount of company unmatched transactions.</returns>
    [Hookable(false)]
    public AmountCur getCompanyUnmatchedTotal()
    {
        return headerInformation.CompanyUnmatchedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompanyMatchedTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total amount of company matched transactions.
    /// </summary>
    /// <returns>The total amount of company matched transactions.</returns>
    [Hookable(false)]
    public AmountCur getCompanyMatchedTotal()
    {
        return headerInformation.CompanyMatchedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasHeaderSnapshot</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether the bank reconciliation has stored snapshot of bank header information.
    /// </summary>
    /// <returns>True if the reconciliation has snapshot, otherwise false.</returns>
    [Hookable(false)]
    public boolean hasHeaderSnapshot()
    {
        return headerInformation.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>