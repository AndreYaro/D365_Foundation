<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventStatusContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for Invent Status SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the Invent Status SSRS Report.
/// </remarks>
[
    SysOperationGroupAttribute('IdentificationGroup', "@SYS5711", '1'),
    SysOperationGroupAttribute('DateIntervalGroup', "@SYS22142", '2'),
    SysOperationGroupAttribute('ViewGroup', "@SYS5252", '3')
]
class InventStatusContract_CN extends InventValueReportContract
{
    InventDimParm inventDimParm;
    InventSumReportType_CN reportType;
    boolean isViewConfig;

    #define.CurrentVersion(6)
    #LOCALMACRO.CurrentList
        transactionId,
        reportId,
        dateInterval,
        fromDate,
        toDate,
        filler,
        includeNotPostedValue,
        filler,
        filler,
        filler,
        filler,
        filler,
        viewConfigId,
        viewConfigIdTotal,
        viewInventColorId,
        viewInventColorIdTotal,
        viewInventSizeId,
        viewInventSizeIdTotal,
        viewInventSiteId,
        viewInventSiteIdTotal,
        viewInventLocationId,
        viewInventLocationIdTotal,
        viewWMSLocationId,
        viewWMSLocationIdTotal,
        viewWMSPalletId,
        viewWMSPalletIdTotal,
        viewInventBatchId,
        viewInventBatchIdTotal,
        viewInventSerialId,
        viewInventSerialIdTotal,
        // <GEERU>
        viewInventGTDId_RU,
        viewInventGTDIdTotal_RU,
        viewInventOwnerId_RU,
        viewInventOwnerIdTotal_RU,
        viewInventProfileId_RU,
        viewInventProfileIdTotal_RU,
        // </GEERU>
        viewInventStyleId,
        viewInventStyleIdTotal,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        filler,
        packedQuery,
        withDimensionSet,
        printSettings
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventDimParm</Name>
				<Source><![CDATA[
    public InventDimParm parmInventDimParm(InventDimParm _inventDimParm = inventDimParm)
    {
        inventDimParm = _inventDimParm;
        return inventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewConfigId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewConfigId'),
        SysOperationDisplayOrderAttribute('1'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public EcoResConfigurationFlag parmIsViewConfigId(EcoResConfigurationFlag _viewConfigId = isViewConfig)
    {
        isViewConfig = _viewConfigId;
        return isViewConfig;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventBatchId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventBatchId'),
        SysOperationDisplayOrderAttribute('11'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventBatchIdFlag parmIsViewInventBatchId(InventBatchIdFlag _viewInventBatchId = inventDimParm.InventBatchIdFlag)
    {
        inventDimParm.InventBatchIdFlag = _viewInventBatchId;
        return inventDimParm.InventBatchIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventColorId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventColorId'),
        SysOperationDisplayOrderAttribute('3'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public EcoResColorFlag parmIsViewInventColorId(EcoResColorFlag _viewInventColorId = inventDimParm.InventColorIdFlag)
    {
        inventDimParm.InventColorIdFlag = _viewInventColorId;
        return inventDimParm.InventColorIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventLocationId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventLocationId'),
        SysOperationDisplayOrderAttribute('6'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventLocationIdFlag parmIsViewInventLocationId(InventLocationIdFlag _viewInventLocationId = inventDimParm.InventLocationIdFlag)
    {
        inventDimParm.InventLocationIdFlag = _viewInventLocationId;
        return inventDimParm.InventLocationIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventSerialId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventSerialId'),
        SysOperationDisplayOrderAttribute('12'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventSerialIdFlag parmIsViewInventSerialId(InventSerialIdFlag _viewInventSerialId = inventDimParm.InventSerialIdFlag)
    {
        inventDimParm.InventSerialIdFlag = _viewInventSerialId;
        return inventDimParm.InventSerialIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventSiteId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventSiteId'),
        SysOperationDisplayOrderAttribute('5'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventSiteIdFlag parmIsViewInventSiteId(InventSiteIdFlag _viewInventSiteId = inventDimParm.InventSiteIdFlag)
    {
        inventDimParm.InventSiteIdFlag = _viewInventSiteId;
        return inventDimParm.InventSiteIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventSizeId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventSizeId'),
        SysOperationDisplayOrderAttribute('2'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public EcoResSizeFlag parmIsViewInventSizeId(EcoResSizeFlag _viewInventSizeId = inventDimParm.InventSizeIdFlag)
    {
    inventDimParm.InventSizeIdFlag = _viewInventSizeId;
    return inventDimParm.InventSizeIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventStatus</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventStatus'),
        SysOperationDisplayOrderAttribute('9'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public WHSInventStatusFlag parmIsViewInventStatus(WHSInventStatusFlag _viewInventStatus = inventDimParm.InventStatusFlag)
    {
        inventDimParm.InventStatusFlag = _viewInventStatus;
        return inventDimParm.InventStatusFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventStyleId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventStyleId'),
        SysOperationDisplayOrderAttribute('4'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public EcoResStyleFlag parmIsViewInventStyleId(EcoResStyleFlag _viewInventStyleId = inventDimParm.InventStyleIdFlag)
    {
        inventDimParm.InventStyleIdFlag = _viewInventStyleId;
        return inventDimParm.InventStyleIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewInventVersionId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewInventVersionId'),
        SysOperationDisplayOrderAttribute('13'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public EcoResVersionFlag parmIsViewInventVersionId(EcoResVersionFlag _viewInventVersionId = inventDimParm.InventVersionIdFlag)
    {
        inventDimParm.InventVersionIdFlag = _viewInventVersionId;
        return inventDimParm.InventVersionIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewLicensePlateId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewLicensePlate'),
        SysOperationDisplayOrderAttribute('10'),
        SysOperationGroupMemberAttribute('ViewGroup')
        ]
    public WHSLicensePlateFlag parmIsViewLicensePlateId(WHSLicensePlateFlag _viewLicensePlate = inventDimParm.LicensePlateFlag)
    {
        inventDimParm.LicensePlateFlag = _viewLicensePlate;
        return inventDimParm.LicensePlateFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsViewWMSLocationId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IsViewWMSLocationId'),
        SysOperationDisplayOrderAttribute('7'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public WMSLocationIdFlag parmIsViewWMSLocationId(WMSLocationIdFlag _viewWMSLocationId = inventDimParm.wmsLocationIdFlag)
    {
        inventDimParm.wmsLocationIdFlag = _viewWMSLocationId;
        return inventDimParm.wmsLocationIdFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    public Query parmQuery(Query _query = query)
    {
        query = _query;
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        if (query != null)
        {
            packedQuery = query.pack();
        }
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        int version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #currentList] = _packedClass;
                if (packedQuery)
                {
                    query = new Query(packedQuery);
                }
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Report type.
    /// </summary>
    /// <param name="_reportType">
    /// The new value of the datacontract parameter Report type;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Report type.
    /// </returns>
    [
        DataMemberAttribute('ReportType'),
        SysOperationGroupMemberAttribute('IdentificationGroup')
    ]
    public InventSumReportType_CN parmReportType(InventSumReportType_CN _reportType = reportType)
    {
        reportType = _reportType;
        return reportType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates parameter entered by the user in the custom-dialog.
    /// </summary>
    /// <returns>
    /// true if validations pass; false otherwise.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (!this.parmFromDate())
        {
            //Field Start date must be filled in.
            ret = checkFailed(strFmt("@SYS26332", "@SYS35856"));
        }
        if (ret && !this.parmToDate())
        {
            //Field End date must be filled in.
            ret = checkFailed(strFmt("@SYS26332", "@SYS177282"));
        }
        if (ret && this.parmFromDate() > this.parmToDate())
        {
            // Start Date should not be later than End Date.
            ret = checkFailed("@SYS343360");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventDimWithUserSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update Inventory value dimensions with the user selection values.
    /// </summary>
    public void updateInventDimWithUserSelection()
    {
        if (this.parmIsViewConfigId())
        {
            this.parmViewConfigId(NoYes::Yes);
        }
        if (this.parmIsViewInventSizeId())
        {
            this.parmViewInventSizeId(NoYes::Yes);
        }
        if (this.parmIsViewInventColorId())
        {
            this.parmViewInventColorId(NoYes::Yes);
        }
        if (this.parmIsViewInventStyleId())
        {
            this.parmViewInventStyleId(NoYes::Yes);
        }
        if (this.parmIsViewInventVersionId())
        {
            this.parmViewInventVersionId(NoYes::Yes);
        }
        if (this.parmIsViewInventSiteId())
        {
            this.parmViewInventSiteId(NoYes::Yes);
        }
        if (this.parmIsViewInventLocationId())
        {
            this.parmViewInventLocationId(NoYes::Yes);
        }
        if (this.parmIsViewWMSLocationId())
        {
            this.parmViewWMSLocationId(NoYes::Yes);
        }
        if (this.parmIsViewInventBatchId())
        {
            this.parmViewInventBatchId(NoYes::Yes);
        }
        if (this.parmIsViewInventSerialId())
        {
            this.parmViewInventSerialId(NoYes::Yes);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>