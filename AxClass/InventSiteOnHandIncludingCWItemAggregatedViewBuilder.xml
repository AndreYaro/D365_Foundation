<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSiteOnHandIncludingCWItemAggregatedViewBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventSiteOnHandIncludingCWItemAggregatedViewBuilder</c> class is used to create the <c>InventSiteOnHandIncludingCWItemAggregatedView</c> view.
/// </summary>
public class InventSiteOnHandIncludingCWItemAggregatedViewBuilder extends InventOnHandAggregatedViewBuilder
{
    private TableName       aggregatedViewName;
    private SysDictView     inventSiteOnHandIncludingCWItemAggregatedViewDictionary;
    private SysDictView     inventSiteOnHandIncludingCWItemViewDictionary;  

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildView</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public static void buildView()
    {
        #OccRetryCount
        try
        {
            InventSiteOnHandIncludingCWItemAggregatedViewBuilder::construct().createSqlObjects();
        }
        catch (Exception::Deadlock)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::Deadlock;
            }
            else
            {
                retry;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static InventSiteOnHandIncludingCWItemAggregatedViewBuilder construct()
    {
        return new InventSiteOnHandIncludingCWItemAggregatedViewBuilder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        super();

        this.whsInitInventReserveCWFullFieldsAlias();
        inventSiteOnHandIncludingCWItemAggregatedViewDictionary = new SysDictView(tableNum(InventSiteOnHandIncludingCWItemAggregatedView));
        inventSiteOnHandIncludingCWItemViewDictionary = new SysDictView(tableNum(InventSiteOnHandIncludingCWItemView));
        aggregatedViewName = inventSiteOnHandIncludingCWItemAggregatedViewDictionary.name(DbBackend::Sql);
        
        this.initInventDimensionsMetadataEntries();

        this.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewName</Name>
				<Source><![CDATA[
    protected TableName parmViewName()
    {
        return aggregatedViewName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceViewName</Name>
				<Source><![CDATA[
    protected TableName parmSourceViewName()
    {
        return inventSiteOnHandIncludingCWItemViewDictionary.name(DbBackend::Sql);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildViewSqlSelectStatement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a select SQl statement to query for inventory on-hand by site including catch weight item data.
    /// </summary>
    /// <returns>SQL statement to retrieve inventory on-hand by site including catch weight item data.</returns>
    /// <remarks>
    /// Creates the following SQL statement:
    /// SELECT InventSiteOnHandIncludingCWItemView.ITEMNUMBER AS ITEMNUMBER
    ///     ,InventSiteOnHandIncludingCWItemView.PRODUCTNAME AS PRODUCTNAME
    ///     ,InventSiteOnHandIncludingCWItemView.INVENTORYSITEID AS INVENTORYSITEID
    ///     ,InventSiteOnHandIncludingCWItemView.PRODUCTCOLORID AS PRODUCTCOLORID
    ///     ,InventSiteOnHandIncludingCWItemView.PRODUCTCONFIGURATIONID AS PRODUCTCONFIGURATIONID
    ///     ,InventSiteOnHandIncludingCWItemView.PRODUCTSIZEID AS PRODUCTSIZEID
    ///     ,InventSiteOnHandIncludingCWItemView.PRODUCTSTYLEID AS PRODUCTSTYLEID
    ///     ,InventSiteOnHandIncludingCWItemView.PRODUCTVERSIONID AS PRODUCTVERSIONID
    ///     ,InventSiteOnHandIncludingCWItemView.ONHANDQUANTITY AS ONHANDQUANTITY
    ///     ,InventSiteOnHandIncludingCWItemView.PDSCWONHANDQUANTITY AS PDSCWONHANDQUANTITY
    ///     ,InventSiteOnHandIncludingCWItemView.RESERVEDONHANDQUANTITY AS RESERVEDONHANDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.PDSCWRESERVONHANDQUANTITY AS PDSCWRESERVONHANDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.AVAILABLEONHANDQUANTITY AS AVAILABLEONHANDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.PDSCWAVAILONHANDQUANTITY AS PDSCWAVAILONHANDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.ORDEREDQUANTITY AS ORDEREDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.PDSCWORDEREDQUANTITY AS PDSCWORDEREDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.RESERVEDORDEREDQUANTITY AS RESERVEDORDEREDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.PDSCWRESERVORDEREDQUANTITY AS PDSCWRESERVORDEREDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.AVAILABLEORDEREDQUANTITY AS AVAILABLEORDEREDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.PDSCWAVAILABLEORDEREDQUANTITY AS PDSCWAVAILABLEORDEREDQUANTITYMAPPED
    ///     ,InventSiteOnHandIncludingCWItemView.ONORDERQUANTITY AS ONORDERQUANTITY
    ///     ,InventSiteOnHandIncludingCWItemView.PDSCWONORDERQUANTITY AS PDSCWONORDERQUANTITY
    ///     ,InventSiteOnHandIncludingCWItemView.TOTALAVAILABLEQUANTITY AS TOTALAVAILABLEQUANTITY
    ///     ,InventSiteOnHandIncludingCWItemView.PDSCWTOTALAVAILABLEQUANTITY AS PDSCWTOTALAVAILABLEQUANTITY
    ///     ,InventSiteOnHandIncludingCWItemView.AREWAREHOUSEMANAGEMENTPROCESSESUSED AS AREWAREHOUSEMANAGEMENTPROCESSESUSED
    ///     ,CALCULATIONS.RESERVEDONHANDQUANTITY AS RESERVEDONHANDQUANTITY
    ///     ,CALCULATIONS.PDSCWRESERVONHANDQUANTITY AS PDSCWRESERVONHANDQUANTITY
    ///     ,(InventSiteOnHandIncludingCWItemView.ONHANDQUANTITY - CALCULATIONS.RESERVEDONHANDQUANTITY) AS AVAILABLEONHANDQUANTITY
    ///     ,(InventSiteOnHandIncludingCWItemView.PDSCWONHANDQUANTITY - CALCULATIONS.PDSCWRESERVONHANDQUANTITY) AS PDSCWAVAILONHANDQUANTITY
    ///     ,CALCULATIONS.ORDEREDQUANTITY AS ORDEREDQUANTITY
    ///     ,CALCULATIONS.PDSCWORDEREDQUANTITY AS PDSCWORDEREDQUANTITY
    ///     ,CALCULATIONS.RESERVEDORDEREDQUANTITY AS RESERVEDORDEREDQUANTITY
    ///     ,CALCULATIONS.PDSCWRESERVORDEREDQUANTITY AS PDSCWRESERVORDEREDQUANTITY
    ///     ,(CALCULATIONS.ORDEREDQUANTITY - CALCULATIONS.RESERVEDORDEREDQUANTITY) AS AVAILABLEORDEREDQUANTITY
    ///     ,(CALCULATIONS.PDSCWORDEREDQUANTITY - CALCULATIONS.PDSCWRESERVORDEREDQUANTITY) AS PDSCWAVAILABLEORDEREDQUANTITY
    ///     ,InventSiteOnHandIncludingCWItemView.RECID AS RECID
    ///     ,InventSiteOnHandIncludingCWItemView.DATAAREAID AS DATAAREAID
    ///     ,InventSiteOnHandIncludingCWItemView.PARTITION AS PARTITION
    /// FROM InventSiteOnHandIncludingCWItemView
    /// CROSS APPLY (
    ///     SELECT COALESCE(SUM(WHSINVENTRESERVE.RESERVPHYSICAL), 0) AS RESERVPHYSICAL
    ///         ,COALESCE(SUM(WHSINVENTRESERVE.RESERVORDERED), 0) AS RESERVORDERED
    ///         ,COALESCE(SUM(WHSINVENTRESERVE.AVAILORDERED), 0) AS AVAILORDERED
    ///         ,COALESCE(SUM(WHSINVENTRESERVE.AVAILPHYSICAL), 0) AS AVAILPHYSICAL
    ///         ,COALESCE(SUM(WHSINVENTRESERVE.CWRESERVPHYSICAL), 0) AS CWRESERVPHYSICAL
    ///         ,COALESCE(SUM(WHSINVENTRESERVE.CWRESERVORDERED), 0) AS CWRESERVORDERED
    ///         ,COALESCE(SUM(WHSINVENTRESERVE.CWAVAILORDERED), 0) AS CWAVAILORDERED
    ///         ,COALESCE(SUM(WHSINVENTRESERVE.CWAVAILPHYSICAL), 0) AS CWAVAILPHYSICAL
    ///     FROM WHSINVENTRESERVE
    ///     WHERE WHSINVENTRESERVE.ITEMID = InventSiteOnHandIncludingCWItemView.ITEMNUMBER
    ///         AND WHSINVENTRESERVE.PARTITION = InventSiteOnHandIncludingCWItemView.PARTITION
    ///         AND WHSINVENTRESERVE.DATAAREAID = InventSiteOnHandIncludingCWItemView.DATAAREAID
    ///         AND EXISTS (
    ///             SELECT TOP 1 INVENTDIM.INVENTDIMID
    ///             FROM INVENTDIM
    ///             WHERE INVENTDIM.DATAAREAID = WHSINVENTRESERVE.DATAAREAID
    ///                 AND INVENTDIM.INVENTDIMID = WHSINVENTRESERVE.INVENTDIMID
    ///                 AND INVENTDIM.PARTITION = WHSINVENTRESERVE.PARTITION
    ///                 AND (
    ///                     INVENTDIM.INVENTSITEID = InventSiteOnHandIncludingCWItemView.INVENTORYSITEID
    ///                     OR InventSiteOnHandIncludingCWItemView.INVENTORYSITEID = ''
    ///                     )
    ///                 AND (
    ///                     INVENTDIM.INVENTCOLORID = InventSiteOnHandIncludingCWItemView.PRODUCTCOLORID
    ///                     OR InventSiteOnHandIncludingCWItemView.PRODUCTCOLORID = ''
    ///                     )
    ///                 AND (
    ///                     INVENTDIM.CONFIGID = InventSiteOnHandIncludingCWItemView.PRODUCTCONFIGURATIONID
    ///                     OR InventSiteOnHandIncludingCWItemView.PRODUCTCONFIGURATIONID = ''
    ///                     )
    ///                 AND (
    ///                     INVENTDIM.INVENTSIZEID = InventSiteOnHandIncludingCWItemView.PRODUCTSIZEID
    ///                     OR InventSiteOnHandIncludingCWItemView.PRODUCTSIZEID = ''
    ///                     )
    ///                 AND (
    ///                     INVENTDIM.INVENTSTYLEID = InventSiteOnHandIncludingCWItemView.PRODUCTSTYLEID
    ///                     OR InventSiteOnHandIncludingCWItemView.PRODUCTSTYLEID = ''
    ///                     )
    ///                 AND (
    ///                     INVENTDIM.INVENTVERSIONID = InventSiteOnHandIncludingCWItemView.PRODUCTVERSIONID
    ///                     OR InventSiteOnHandIncludingCWItemView.PRODUCTVERSIONID = ''
    ///                     )
    ///                 AND WHSINVENTRESERVE.HIERARCHYLEVEL = (
    ///                     SELECT MAX(WHSRESERVATIONHIERARCHYELEMENT.RESERVATIONHIERARCHYLEVEL)
    ///                     FROM WHSRESERVATIONHIERARCHYELEMENT
    ///                     JOIN WHSRESERVATIONHIERARCHYITEM ON WHSRESERVATIONHIERARCHYITEM.ITEMDATAAREAID = InventSiteOnHandIncludingCWItemView.DATAAREAID
    ///                         AND WHSRESERVATIONHIERARCHYELEMENT.PARTITION = InventSiteOnHandIncludingCWItemView.PARTITION
    ///                         AND WHSRESERVATIONHIERARCHYELEMENT.RESERVATIONHIERARCHY = WHSRESERVATIONHIERARCHYITEM.RESERVATIONHIERARCHY
    ///                         AND WHSRESERVATIONHIERARCHYITEM.ITEMID = InventSiteOnHandIncludingCWItemView.ITEMNUMBER
    ///                     WHERE (
    ///                             WHSRESERVATIONHIERARCHYELEMENT.DIMENSIONFIELDID = 10
    ///                             AND InventSiteOnHandIncludingCWItemView.INVENTORYSITEID != ''
    ///                             )
    ///                     )
    ///             )
    ///     ) INVENTRESERVES
    /// CROSS APPLY (
    ///     SELECT (
    ///             CASE
    ///                 WHEN InventSiteOnHandIncludingCWItemView.AREWAREHOUSEMANAGEMENTPROCESSESUSED = 1
    ///                     THEN INVENTRESERVES.AVAILORDERED + INVENTRESERVES.RESERVORDERED - INVENTRESERVES.AVAILPHYSICAL
    ///                 ELSE InventSiteOnHandIncludingCWItemView.ORDEREDQUANTITY
    ///                 END
    ///             ) AS ORDEREDQUANTITY
    ///         ,(
    ///             CASE
    ///                 WHEN INVENTSITEONHANDINCLUDINGCWITEMVIEW.AREWAREHOUSEMANAGEMENTPROCESSESUSED = 1
    ///                     THEN INVENTRESERVES.CWAVAILORDERED + INVENTRESERVES.CWRESERVORDERED - INVENTRESERVES.CWAVAILPHYSICAL
    ///                 ELSE INVENTSITEONHANDINCLUDINGCWITEMVIEW.PDSCWORDEREDQUANTITY
    ///                 END
    ///             ) AS PDSCWORDEREDQUANTITY
    ///         ,(
    ///             CASE
    ///                 WHEN InventSiteOnHandIncludingCWItemView.AREWAREHOUSEMANAGEMENTPROCESSESUSED = 1
    ///                     THEN INVENTRESERVES.RESERVORDERED
    ///                 ELSE InventSiteOnHandIncludingCWItemView.RESERVEDORDEREDQUANTITY
    ///                 END
    ///             ) AS RESERVEDORDEREDQUANTITY
    ///         ,(
    ///             CASE
    ///                 WHEN INVENTSITEONHANDINCLUDINGCWITEMVIEW.AREWAREHOUSEMANAGEMENTPROCESSESUSED = 1
    ///                     THEN INVENTRESERVES.CWRESERVORDERED
    ///                 ELSE INVENTSITEONHANDINCLUDINGCWITEMVIEW.PDSCWRESERVORDEREDQUANTITY
    ///                 END
    ///             ) AS PDSCWRESERVORDEREDQUANTITY
    ///         ,(
    ///             CASE
    ///                 WHEN InventSiteOnHandIncludingCWItemView.AREWAREHOUSEMANAGEMENTPROCESSESUSED = 1
    ///                     THEN INVENTRESERVES.RESERVPHYSICAL
    ///                 ELSE InventSiteOnHandIncludingCWItemView.RESERVEDONHANDQUANTITY
    ///                 END
    ///             ) AS RESERVEDONHANDQUANTITY
    ///         ,(
    ///             CASE
    ///                 WHEN INVENTSITEONHANDINCLUDINGCWITEMVIEW.AREWAREHOUSEMANAGEMENTPROCESSESUSED = 1
    ///                     THEN INVENTRESERVES.CWRESERVPHYSICAL
    ///                 ELSE INVENTSITEONHANDINCLUDINGCWITEMVIEW.PDSCWRESERVONHANDQUANTITY
    ///                 END
    ///             ) AS PDSCWRESERVONHANDQUANTITY         
    ///     ) CALCULATIONS
    /// </remarks>
    protected SysSQLStatementText buildViewSqlSelectStatement()
    {
        FieldName sourceItemNumberFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ItemNumber));
        FieldName asItemNumberFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ItemNumber), true);

        FieldName sourceProductNameFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ProductName));
        FieldName asProductNameFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ProductName), true);

        FieldName sourceOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, OnHandQuantity));
        FieldName asOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, OnHandQuantity), true);

        FieldName sourcePdsCWOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, PdsCWOnHandQuantity));
        FieldName asPdsCWOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOnHandQuantity), true);

        FieldName sourceReservedOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ReservedOnHandQuantity));
        FieldName asReservedOnHandQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ReservedOnHandQuantityMapped), true);

        FieldName sourcePdsCWReservOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, PdsCWReservOnHandQuantity));
        FieldName asPdsCWReservOnHandQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOnHandQuantityMapped), true);

        FieldName sourceAvailableOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, AvailableOnHandQuantity));
        FieldName asAvailableOnHandQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, AvailableOnHandQuantityMapped), true);

        FieldName sourcePdsCWAvailOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, PdsCWAvailOnHandQuantity));
        FieldName asPdsCWAvailOnHandQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWAvailOnHandQuantityMapped), true);

        FieldName sourceOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, OrderedQuantity));
        FieldName asOrderedQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, OrderedQuantityMapped), true);

        FieldName sourcePdsCWOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, PdsCWOrderedQuantity));
        FieldName asPdsCWOrderedQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOrderedQuantityMapped), true);

        FieldName sourceReservedOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ReservedOrderedQuantity));
        FieldName asReservedOrderedQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ReservedOrderedQuantityMapped), true);

        FieldName sourcePdsCWReservOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, PdsCWReservOrderedQuantity));
        FieldName asPdsCWReservOrderedQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOrderedQuantityMapped), true);

        FieldName sourceAvailableOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, AvailableOrderedQuantity));
        FieldName asAvailableOrderedQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, AvailableOrderedQuantityMapped), true);

        FieldName sourcePdsCWAvailableOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, PdsCWAvailableOrderedQuantity));
        FieldName asPdsCWAvailableOrderedQuantityMappedFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWAvailableOrderedQuantityMapped), true);

        FieldName sourceOnOrderQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, OnOrderQuantity));
        FieldName asOnOrderQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, OnOrderQuantity), true);

        FieldName sourcePdsCWOnOrderQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, PdsCWOnOrderQuantity));
        FieldName asPdsCWOnOrderQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOnOrderQuantity), true);

        FieldName sourceTotalAvailableQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, TotalAvailableQuantity));
        FieldName asTotalAvailableQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, TotalAvailableQuantity), true);

        FieldName sourcePdsCWTotalAvailableQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, PdsCWTotalAvailableQuantity));
        FieldName asPdsCWTotalAvailableQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWTotalAvailableQuantity), true);

        FieldName sourceAreWarehouseManagementProcessesUsedFieldExpression;
        FieldName isWhsItemFieldAlias;

        if (this.isConfigurationKeyEnabledForEdt(new SysDictType(extendedTypeNum(WHSIsItemWHSEnabled))))
        {
            sourceAreWarehouseManagementProcessesUsedFieldExpression = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, AreWarehouseManagementProcessesUsed));
            isWhsItemFieldAlias = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, AreWarehouseManagementProcessesUsed), true);
        }
        else
        {
            sourceAreWarehouseManagementProcessesUsedFieldExpression = '0';
            isWhsItemFieldAlias = fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, AreWarehouseManagementProcessesUsed);
        }

        str isWhsItemExpression = this.as(sourceAreWarehouseManagementProcessesUsedFieldExpression, isWhsItemFieldAlias);

        FieldName sourceRecIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, RecId));
        FieldName asRecIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, RecId), true);

        FieldName sourceDataAreaIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, DataAreaId));
        FieldName asDataAreaIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, DataAreaId), true);

        FieldName sourcePartitionFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, Partition));
        FieldName asPartitionFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, Partition), true);

        FieldName asReservedOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ReservedOnHandQuantity), true);
        FieldName asPdsCWReservOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOnHandQuantity), true);
        FieldName asAvailableOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, AvailableOnHandQuantity), true);
        FieldName asPdsCWAvailOnHandQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWAvailOnHandQuantity), true);
        FieldName asOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, OrderedQuantity), true);
        FieldName asPdsCWOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOrderedQuantity), true);
        FieldName asReservedOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ReservedOrderedQuantity), true);
        FieldName asPdsCWReservOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOrderedQuantity), true);
        FieldName asAvailableOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, AvailableOrderedQuantity), true);
        FieldName asPdsCWAvailableOrderedQuantityFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWAvailableOrderedQuantity), true);

        FieldName sourcePartitionFullFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, Partition));
        FieldName sourceDataAreaIdFullFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, DataAreaId));

        return 'SELECT ' +
            this.buildExtensionFields() +
            this.as(sourceItemNumberFieldName, asItemNumberFieldName) + ', ' +
            this.as(sourceProductNameFieldName, asProductNameFieldName) + ', ' +
            this.inventoryDimensionsToSelectFromSource() +
            this.as(sourceOnHandQuantityFieldName, asOnHandQuantityFieldName) + ', ' +
            this.pdsAs(sourcePdsCWOnHandQuantityFieldName, asPdsCWOnHandQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOnHandQuantity)) + ', ' +
            this.as(sourceReservedOnHandQuantityFieldName, asReservedOnHandQuantityMappedFieldName) + ', ' +
            this.pdsAs(sourcePdsCWReservOnHandQuantityFieldName, asPdsCWReservOnHandQuantityMappedFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOnHandQuantityMapped)) + ', ' +
            this.as(sourceAvailableOnHandQuantityFieldName, asAvailableOnHandQuantityMappedFieldName) + ', ' +
            this.pdsAs(sourcePdsCWAvailOnHandQuantityFieldName, asPdsCWAvailOnHandQuantityMappedFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWAvailOnHandQuantityMapped)) + ', ' +
            this.as(sourceOrderedQuantityFieldName, asOrderedQuantityMappedFieldName) + ', ' +
            this.pdsAs(sourcePdsCWOrderedQuantityFieldName, asPdsCWOrderedQuantityMappedFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOrderedQuantityMapped)) + ', ' +
            this.as(sourceReservedOrderedQuantityFieldName, asReservedOrderedQuantityMappedFieldName) + ', ' +
            this.pdsAs(sourcePdsCWReservOrderedQuantityFieldName, asPdsCWReservOrderedQuantityMappedFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOrderedQuantityMapped)) + ', ' +
            this.as(sourceAvailableOrderedQuantityFieldName, asAvailableOrderedQuantityMappedFieldName) + ', ' +
            this.pdsAs(sourcePdsCWAvailableOrderedQuantityFieldName, asPdsCWAvailableOrderedQuantityMappedFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWAvailableOrderedQuantityMapped)) + ', ' +
            this.as(sourceOnOrderQuantityFieldName, asOnOrderQuantityFieldName) + ', ' +
            this.pdsAs(sourcePdsCWOnOrderQuantityFieldName, asPdsCWOnOrderQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOnOrderQuantity)) + ', ' +
            this.as(sourceTotalAvailableQuantityFieldName, asTotalAvailableQuantityFieldName) + ', ' +
            this.pdsAs(sourcePdsCWTotalAvailableQuantityFieldName, asPdsCWTotalAvailableQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWTotalAvailableQuantity)) + ', ' +
            isWhsItemExpression + ', ' +
            this.as(
                this.buildFullFieldName(CalculationsSubQueryAlias, asReservedOnHandQuantityFieldName),
                asReservedOnHandQuantityFieldName) + ', ' +
            this.pdsAs(
                this.buildFullFieldName(CalculationsSubQueryAlias, asPdsCWReservOnHandQuantityFieldName),
                asPdsCWReservOnHandQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOnHandQuantity)) + ', ' +
            this.as(
                this.availableOnHandQuantityExpression(sourceOnHandQuantityFieldName, asReservedOnHandQuantityFieldName),
                asAvailableOnHandQuantityFieldName) + ', ' +
            this.pdsAs(
                this.availableOnHandQuantityExpression(sourcePdsCWOnHandQuantityFieldName, asPdsCWReservOnHandQuantityFieldName),
                asPdsCWAvailOnHandQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWAvailOnHandQuantity)) + ', ' +
            this.as(
                this.buildFullFieldName(CalculationsSubQueryAlias, asOrderedQuantityFieldName),
                asOrderedQuantityFieldName) + ', ' +
            this.pdsAs(
                this.buildFullFieldName(CalculationsSubQueryAlias, asPdsCWOrderedQuantityFieldName),
                asPdsCWOrderedQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOrderedQuantity)) + ', ' +
            this.as(
                this.buildFullFieldName(CalculationsSubQueryAlias, asReservedOrderedQuantityFieldName),
                asReservedOrderedQuantityFieldName) + ', ' +
            this.pdsAs(
                this.buildFullFieldName(CalculationsSubQueryAlias, asPdsCWReservOrderedQuantityFieldName),
                asPdsCWReservOrderedQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOrderedQuantity)) + ', ' +
            this.as(
                this.availableOrderedQuantityExpression(asOrderedQuantityFieldName, asReservedOrderedQuantityFieldName),
                asAvailableOrderedQuantityFieldName) + ', ' +
            this.pdsAs(
                this.availableOrderedQuantityExpression(asPdsCWOrderedQuantityFieldName, asPdsCWReservOrderedQuantityFieldName),
                asPdsCWAvailableOrderedQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWAvailableOrderedQuantity)) + ', ' +
            this.as(sourceRecIdFieldName, asRecIdFieldName) + ', ' +
            this.as(sourceDataAreaIdFieldName, asDataAreaIdFieldName) + ', ' +
            this.as(sourcePartitionFieldName, asPartitionFieldName) +
            ' FROM ' + inventSiteOnHandIncludingCWItemViewDictionary.name(DbBackend::Sql) +
            ' CROSS APPLY ( ' + this.inventReserveSelectStatement(sourceDataAreaIdFullFieldName, sourcePartitionFullFieldName, sourceItemNumberFieldName) +
            ') ' + InventReserveSubQueryAlias +
            ' CROSS APPLY (' +
            '   SELECT ' +
            this.as(
                this.orderedQuantityExpression(sourceOrderedQuantityFieldName, sourceAreWarehouseManagementProcessesUsedFieldExpression),
                asOrderedQuantityFieldName)  + ', ' +
            this.pdsAs(
                this.whsCWOrderedQuantityExpression(sourcePdsCWOrderedQuantityFieldName, sourceAreWarehouseManagementProcessesUsedFieldExpression),
                asPdsCWOrderedQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWOrderedQuantity))  + ', ' +
            this.as(
                this.reservedOrderedQuantityExpression(sourceReservedOrderedQuantityFieldName, sourceAreWarehouseManagementProcessesUsedFieldExpression),
                asReservedOrderedQuantityFieldName) + ', ' +
            this.pdsAs(
                this.whsCWReservedOrderedQuantityExpression(sourcePdsCWReservOrderedQuantityFieldName, sourceAreWarehouseManagementProcessesUsedFieldExpression),
                asPdsCWReservOrderedQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOrderedQuantity)) + ', ' +
            this.as(
                this.reservedOnHandQuantityExpression(sourceReservedOnHandQuantityFieldName, sourceAreWarehouseManagementProcessesUsedFieldExpression),
                asReservedOnHandQuantityFieldName) + ', ' +
            this.pdsAs(
                this.whsCWReservedOnHandQuantityExpression(sourcePdsCWReservOnHandQuantityFieldName, sourceAreWarehouseManagementProcessesUsedFieldExpression),
                asPdsCWReservOnHandQuantityFieldName, fieldStr(InventSiteOnHandIncludingCWItemAggregatedView, PdsCWReservOnHandQuantity)) + ') ' + CalculationsSubQueryAlias;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventDimensionsMetadataEntries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes metadata regarding used inventory dimension fields.
    /// </summary>
    protected void initInventDimensionsMetadataEntries()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Config)))
        {
            FieldName sourceProductConfigurationIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ProductConfigurationId));
            FieldName asProductConfigurationIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ProductConfigurationId), true);
            this.addInventDimensionMetadata(asProductConfigurationIdFieldName, sourceProductConfigurationIdFieldName, fieldNum(InventDim, configId));
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(EcoResProductColor)))
        {
            FieldName sourceProductColorIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ProductColorId));
            FieldName asProductColorIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ProductColorId), true);
            this.addInventDimensionMetadata(asProductColorIdFieldName, sourceProductColorIdFieldName, fieldNum(InventDim, InventColorId));
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(EcoResProductSize)))
        {
            FieldName sourceProductSizeIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ProductSizeId));
            FieldName asProductSizeIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ProductSizeId), true);
            this.addInventDimensionMetadata(asProductSizeIdFieldName, sourceProductSizeIdFieldName, fieldNum(InventDim, InventSizeId));
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(EcoResProductStyle)))
        {
            FieldName sourceProductStyleIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ProductStyleId));
            FieldName asProductStyleIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ProductStyleId), true);
            this.addInventDimensionMetadata(asProductStyleIdFieldName, sourceProductStyleIdFieldName, fieldNum(InventDim, InventStyleId));
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(EcoResProductVersion)))
        {
            FieldName sourceProductVersionIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, ProductVersionId));
            FieldName asProductVersionIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, ProductVersionId), true);
            this.addInventDimensionMetadata(asProductVersionIdFieldName, sourceProductVersionIdFieldName, fieldNum(InventDim, InventVersionId));
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(LogisticsBasic)))
        {
            FieldName sourceInventorySiteIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemView, InventorySiteId));
            FieldName asInventorySiteIdFieldName = this.buildFieldName(inventSiteOnHandIncludingCWItemAggregatedViewDictionary, fieldNum(InventSiteOnHandIncludingCWItemAggregatedView, InventorySiteId), true);
            this.addInventDimensionMetadata(asInventorySiteIdFieldName, sourceInventorySiteIdFieldName, fieldNum(InventDim, InventSiteId), true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggregationsToSelectFromInventReserve</Name>
				<Source><![CDATA[
    protected SysSQLStatementText aggregationsToSelectFromInventReserve()
    {
        SysSQLStatementText sqlStr  = super();
        return sqlStr + ', ' + this.whsCWAggregationsToSelectFromInventReserve();
    }

]]></Source>
			</Method>
			<Method>
				<Name>zerosToSubstituteAggregationsFromInventReserve</Name>
				<Source><![CDATA[
    protected SysSQLStatementText zerosToSubstituteAggregationsFromInventReserve()
    {
        SysSQLStatementText sqlStr  = super();

        return sqlStr + ', ' + this.whsCWZerosToSubstituteAggregationsFromInventReserve();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Recreates the <c>InventSiteOnHandIncludingCWItemAggregatedView</c> view.
    /// </summary>
    /// <remarks>
    /// Can be used for testing purposes.
    /// </remarks>
    /// <param name = "_args">Method arguments.</param>
    public static void main(Args _args)
    {
        InventSiteOnHandIncludingCWItemAggregatedViewBuilder::construct().createSqlObjects();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>