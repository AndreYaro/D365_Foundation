<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GBTFileGenerationDataContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract of GBT file generation
/// </summary>
[DataContractAttribute, SysOperationContractProcessingAttribute(classStr(GBTFileGenerationUIBuilder_CN))]
public class GBTFileGenerationDataContract_CN extends ERFormatMappingRunBaseContract implements SysOperationValidatable
{
    PeriodName                      startPeriodName;
    PeriodName                      endPeriodName;
    PeriodName                      periodName;
    FiscalYearName                  fiscalYearName;
    FiscalCalendarPeriod            startFiscalCalendarPeriod;
    FiscalCalendarPeriod            endFiscalCalendarPeriod;
    FiscalCalendarPeriod            fiscalCalendarPeriod;
    RecId                           fiscalCalendarYearRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFiscalYearName</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@SYS13292")),
        SysOperationHelpTextAttribute(literalStr("@SYS13292")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FiscalYearName parmFiscalYearName(FiscalYearName _fiscalYearName = fiscalYearName)
    {
        fiscalYearName = _fiscalYearName;

        return fiscalYearName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartPeriodName</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@SYS4000983")),
        SysOperationHelpTextAttribute(literalStr("@SYS4000983")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public PeriodName parmStartPeriodName(PeriodName _startPeriodName = startPeriodName)
    {
        startPeriodName = _startPeriodName;

        return startPeriodName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndPeriodName</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@SYS4000984")),
        SysOperationHelpTextAttribute(literalStr("@SYS4000984")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public PeriodName parmEndPeriodName(PeriodName _endPeriodName = endPeriodName)
    {
        endPeriodName = _endPeriodName;

        return endPeriodName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodName</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@SYS4000985")),
        SysOperationHelpTextAttribute(literalStr("@SYS4000985")),
        SysOperationDisplayOrderAttribute('4')
    ]
    public PeriodName parmPeriodName(PeriodName _periodName = periodName)
    {
        periodName = _periodName;

        return periodName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the instance of the <c>GBTFileGenerationDataContract_CN</c> class.
    /// </summary>
    /// <returns>
    /// Returns true if the validation succeed.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        //Checks fiscal year and fiscal period
        if (!fiscalYearName || !periodName || !startPeriodName || !endPeriodName)
        {
            //Fiscal year and fiscal period must be entered.
            ret = checkFailed("@GLS222981");
        }

        //Checks from period cannot greater than to period
        fiscalCalendarYearRecId     = FiscalCalendarYear::findByCalendarYearName(Ledger::find(Ledger::current()).FiscalCalendar, fiscalYearName).RecId;
        startFiscalCalendarPeriod   = FiscalCalendarPeriod::findByCalendarYearPeriod(fiscalCalendarYearRecId, startPeriodName);
        endFiscalCalendarPeriod     = FiscalCalendarPeriod::findByCalendarYearPeriod(fiscalCalendarYearRecId, endPeriodName);
        if (ret && startFiscalCalendarPeriod.StartDate > endFiscalCalendarPeriod.EndDate)
        {
            ret = checkFailed(strFmt("@SYS344287", "@GLS64474", "@SYS137232"));
        }

        if (ret)
        {
            //ret = GBTExportDataToXML_CN::validateFinancialstatement();
        }

        //Checks Chinese voucher system is enabled
        if (ret && !LedgerParameters::isChineseVoucher_CN())
        {
            ret = checkFailed("@GLS222991");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>