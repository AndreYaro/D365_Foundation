<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPeriodPostingLedger</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjPeriodPostingLedger extends RunBase
{
    ProjLedgerStatus        projLedgerStatus;
    TransDate               transactionDate;
    boolean                 reverseTurnover;

    TmpProjPeriodic         tmpProjPeriodic;
    TmpProjPeriodicCost     tmpProjPeriodicCost;
    TmpProjPeriodicSale     tmpProjPeriodicSale;
    DialogField             dialogTransDate;

    SysRecordSortedList     tmpSortedList;
    SysRecordSortedList     tmpSortedCostList;
    SysRecordSortedList     tmpSortedSaleList;

    DialogField             dialogAcknowledgementDate;
    AcknowledgementDate     acknowledgementDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
        public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        this.parmtransActionDate(dialogTransDate.value());
        if (LedgerParameters::find().AcknowledgementDate_IT)
        {
            this.parmAcknowledgementDate(dialogAcknowledgementDate.value());
        }

        if (!this.parmAcknowledgementDate())
        {
            this.parmAcknowledgementDate(transactionDate);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAcknowledgementDate</Name>
				<Source><![CDATA[
        public TransDate parmAcknowledgementDate(AcknowledgementDate _acknowledgementDate = acknowledgementDate)
    {
        acknowledgementDate = _acknowledgementDate;

        return acknowledgementDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjLedgerStatus</Name>
				<Source><![CDATA[
        public ProjLedgerStatus parmProjLedgerStatus(ProjLedgerStatus _projLedgerStatus = projLedgerStatus)
    {
        projLedgerStatus = _projLedgerStatus;

        return projLedgerStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReverseTurnover</Name>
				<Source><![CDATA[
        public boolean parmReverseTurnover(boolean _reverseTurnover = reverseTurnover)
    {
        reverseTurnover = _reverseTurnover;

        return reverseTurnover;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpProjPeriodic</Name>
				<Source><![CDATA[
        public TmpProjPeriodic parmTmpProjPeriodic(TmpProjPeriodic _tmpProjPeriodic = tmpProjPeriodic)
    {
        tmpProjPeriodic = _tmpProjPeriodic;

        return tmpProjPeriodic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpProjPeriodicCost</Name>
				<Source><![CDATA[
        public TmpProjPeriodicCost parmTmpProjPeriodicCost(TmpProjPeriodicCost _tmpProjPeriodicCost = tmpProjPeriodicCost)
    {
        tmpProjPeriodicCost = _tmpProjPeriodicCost;

        return tmpProjPeriodicCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpProjPeriodicSale</Name>
				<Source><![CDATA[
        public TmpProjPeriodicSale parmTmpProjPeriodicSale(TmpProjPeriodicSale _tmpProjPeriodicSale = tmpProjPeriodicSale)
    {
        tmpProjPeriodicSale = _tmpProjPeriodicSale;

        return tmpProjPeriodicSale;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmtransActionDate</Name>
				<Source><![CDATA[
        public TransDate parmtransActionDate(TransDate _transActionDate = transActionDate)
    {
        transActionDate = _transActionDate;

        return transActionDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static ProjPeriodPostingLedger construct(Args _args)
    {
        ProjCostSales               projCostSales;
        ProjPeriodPostingLedger     retval;

        if ( _args.parmEnumType()  && _args.parmEnumType() == enumNum(ProjCostSales) )
        {
            projCostSales   = _args.parmEnum();

            switch (projCostSales)
            {
                case  ProjCostSales::Cost  :
                    retval = new ProjPeriodPostingLedgerCost();
                    break;

                case ProjCostSales::Sales  :
                    retval = new ProjPeriodPostingLedgerSales();
                    break;

                default                      :
                    throw error(strFmt("@SYS22828","@SYS16522"));
            }
        }
        else
        {
            throw error(strFmt("@SYS22828","@SYS16522"));
        }

        return retval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        protected static ClassDescription description()
    {
        return strFmt("@SYS18885",funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>