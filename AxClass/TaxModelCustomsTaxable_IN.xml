<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelCustomsTaxable_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The interface of the document line supporting the Customs Tax.
/// </summary>
public interface TaxModelCustomsTaxable_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustomsDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Customs Direction
    /// </summary>
    /// <returns>
    /// The <c>Direction_IN</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Direction_IN getCustomsDirection()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsTariffCodeRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RecId</c> of the <c>CustomsTariffCodeTable_IN</c> of this document line.
    /// </summary>
    /// <returns>
    /// The <c>RecId</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId getCustomsTariffCodeRefRecId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsTariffCodeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>CustomsTariffCodeTable_IN</c> of this document line.
    /// </summary>
    /// <returns>
    /// The <c>CustomsTariffCodeTable_IN</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustomsTariffCodeTable_IN getCustomsTariffCodeTable()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsTaxAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax account type based on the given <c>TaxOnItem</c>
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// The tax account type.
    /// </returns>
    /// <remarks>
    /// The method returns the accounts type of the tax monentory amount.
    /// The tax monentory amount is decided based on below rule.
    ///
    /// Transaction Type,  Tax Direction, Line Amount, TaxOnDebit/Credit
    /// Invoice         ,  Incoming,    , Possitive,   Read on Debit
    /// Invoice         ,  Outgoing,    , Possitive,   Read on Credit
    /// Payment         ,  Incoming,    , Possitive,   Read on Credit
    /// Payment         ,  Outgoing,    , Possitive,   Read on Debit
    /// Invoice         ,  Incoming,    , Negative,    Read on Credit
    /// Invoice         ,  Outgoing,    , Negative,    Read on Debit
    /// Payment         ,  Incoming,    , Negative,    Read on Debit
    /// Payment         ,  Outgoing,    , Negative,    Read on Credit
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxAccountType_IN getCustomsTaxAccountType(TaxOnItem _taxOnItem)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsTaxOffsetAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax offset account type based on the given <c>TaxOnItem</c>
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// The tax account type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxAccountType_IN getCustomsTaxOffsetAccountType(TaxOnItem _taxOnItem)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsTaxRegistrationNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Customs Registration Number
    /// </summary>
    /// <returns>
    /// The <c>TaxRegistrationNumber_IN</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxRegistrationNumber_IN getCustomsTaxRegistrationNumber()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsTaxRegistrationRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the the <c>RecId</c> of Customs Registration.
    /// </summary>
    /// <returns>
    /// The the <c>RefRecId</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId getCustomsTaxRegistrationRefRecId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasApplyExcise</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check to see if the transaction document has the applyExcise
    /// </summary>
    /// <returns>
    /// True, if it has.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean hasApplyExcise()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomsPreferential</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine if the transaction is avaialbe for Preferential.
    /// </summary>
    /// <returns>
    /// True if the document line is Preferential applied; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public NoYes isCustomsPreferential()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSkipCustomsTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Should the Customs Tax be skipped on this transaction line?
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c> on the transaction line.
    /// </param>
    /// <returns>
    /// True, it should be skipped; Otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean shouldSkipCustomsTax(TaxOnItem _taxOnItem)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>