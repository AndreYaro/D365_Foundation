<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxRepRecordNumbering_NumSequence_ES</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    This class represents an algorithm for number sequence numbering of Tax Report 340 records.
/// </summary>
/// <remarks>
///    Record numbers produced by this algorithm are derived from the number sequence specified in the
///    <c>TaxBookTable.NumberSequenceTable</c> field.<c>TaxReportLines</c> with same the <c>Voucher</c>
///    and <c>TransDate</c> fields will have the same record number.Warning! A prerequisite for using this
///    class is to have your sequence of <c>TaxReportLine</c> records sorted by <c>Voucher</c> and
///    <c>TransDate</c> fields.
/// </remarks>
public class TaxRepRecordNumbering_NumSequence_ES extends TaxRepRecordNumbering_ES
{
    RefRecId                    numberSequenceTableRecId;

    Voucher                     prevVoucher;
    TransDate                   prevTransDate;
    CustAccount                 prevAccountNum;
    Yr                          prevCashInvoiceYear;

    TaxReportRecord             lastNum;
    TaxReportRecord             firstNum;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>firstNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the first record number that is generated by the algorithm.
    /// </summary>
    /// <returns>
    ///    The first record number that is generated by the algorithm.
    /// </returns>
    public TaxReportRecord firstNum()
    {
        return firstNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextRecordNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the current Tax Report 340 line number, depending on the properties of the line.
    /// </summary>
    /// <param name="_taxReportLines">
    ///    The line for which the record number is being generated.
    /// </param>
    /// <returns>
    ///    The next record number.
    /// </returns>
    public TaxReportRecord getNextRecordNumber(TaxReportLines _taxReportLines)
    {
        Num         result;
        NumberSeq   numberSeq;

        if (_taxReportLines.Voucher != prevVoucher
            || _taxReportLines.TransDate != prevTransDate
            || _taxReportLines.AccountNum != prevAccountNum
            || _taxReportLines.CashInvoiceYear != prevCashInvoiceYear)
        {
            numberSeq = NumberSeq::newGetNumFromId(numberSequenceTableRecId);
            result = numberSeq.num();
            numberSeq.used();

            firstNum = firstNum == '' ? result : firstNum;
            lastNum = result;

            prevVoucher = _taxReportLines.Voucher;
            prevTransDate = _taxReportLines.TransDate;
            prevAccountNum = _taxReportLines.AccountNum;
            prevCashInvoiceYear = _taxReportLines.CashInvoiceYear;
        }
        else
        {
            result = lastNum;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the last record number that is generated by the algorithm.
    /// </summary>
    /// <returns>
    ///    The last record number that is generated by the algorithm.
    /// </returns>
    public TaxReportRecord lastNum()
    {
        return lastNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>TaxRepRecordNumbering_NumSequence_ES</c> class.
    /// </summary>
    /// <param name="_numberSequenceTableRecId">
    ///    The <c>RecId</c> value of the number sequence that is used to generate record numbers.
    /// </param>
    public void new(RefRecId _numberSequenceTableRecId)
    {
        numberSequenceTableRecId = _numberSequenceTableRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>