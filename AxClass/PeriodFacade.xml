<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PeriodFacade</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Helper methods for ProjPeriod records.
/// </summary>
public class PeriodFacade
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>endDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the PeriodTo date on a ProjPeriodLine.
    /// </summary>
    /// <param name = "_period">
    /// Project period RecId.
    /// </param>
    /// <param name = "_date">
    /// PeriodFrom less than equal comparison date.
    /// </param>
    /// <returns>
    /// Period date.
    /// </returns>
    public static date endDate(PeriodRecId _period, date _date)
    {
        date endDate;
        ProjPeriodTable projPeriodTable;
        ProjPeriodLine projPeriodLine;

        if (_period)
        {
            select firstonly crossCompany DataAreaId, PeriodId
            from projPeriodTable
            where projPeriodTable.RecId == _period;

            if (projPeriodTable)
            {
                changecompany (projPeriodTable.DataAreaId)
                {
                    select firstonly reverse PeriodTo
                    from projPeriodLine
                    order by PeriodFrom
                    where projPeriodLine.PeriodId == projPeriodTable.PeriodId &&
                        projPeriodLine.PeriodFrom <= _date;

                    endDate = projPeriodLine.PeriodTo;
                }
            }
        }

        return endDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPeriodId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find ProjPeriodId.
    /// </summary>
    /// <param name = "_period">
    /// Project period RecId.
    /// </param>
    /// <returns>
    /// ProjPeriodId.
    /// </returns>
    public static ProjPeriodId getPeriodId(PeriodRecId _period)
    {
        ProjPeriodId periodId;
        ProjPeriodTable projPeriodTable;

        if (_period)
        {
            select firstonly crossCompany PeriodId
            from projPeriodTable
            where projPeriodTable.RecId == _period;

            periodId = projPeriodTable.PeriodId;
        }

        return periodId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find ProjPeriodLine name.
    /// </summary>
    /// <param name = "_period">
    /// Project period RecId.
    /// </param>
    /// <param name = "_date">
    /// The starting date.
    /// </param>
    /// <returns>
    /// Period name.
    /// </returns>
    public static Name periodName(PeriodRecId _period, date _date)
    {
        Name periodName;
        ProjPeriodTable projPeriodTable;

        if (_period)
        {
            select firstonly crossCompany DataAreaId, PeriodId
            from projPeriodTable
            where projPeriodTable.RecId == _period;

            if (projPeriodTable)
            {
                changecompany (projPeriodTable.DataAreaId)
                {
                    periodName = ProjPeriodLine::find(projPeriodTable.PeriodId, _date).PeriodName;
                }
            }
        }

        return periodName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the PeriodFrom date on a ProjPeriodLine.
    /// </summary>
    /// <param name = "_period">
    /// Project period RecId.
    /// </param>
    /// <param name = "_date">
    /// PeriodFrom less than equal comparison date.
    /// </param>
    /// <returns>
    /// Period date.
    /// </returns>
    public static date startDate(PeriodRecId _period, date _date)
    {
        date startDate;
        ProjPeriodTable projPeriodTable;
        ProjPeriodLine projPeriodLine;

        if (_period)
        {
            select firstonly crossCompany DataAreaId, PeriodId
            from projPeriodTable
            where projPeriodTable.RecId == _period;

            if (projPeriodTable)
            {
                changecompany (projPeriodTable.DataAreaId)
                {
                    select firstonly reverse PeriodFrom
                    from projPeriodLine
                    order by PeriodFrom
                        where projPeriodLine.PeriodId == projPeriodTable.PeriodId &&
                            projPeriodLine.PeriodFrom <= _date;

                    startDate = projPeriodLine.PeriodFrom;
                }
            }
        }

        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>weekStart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find project period week start.
    /// </summary>
    /// <param name = "_period">
    /// Project period RecId.
    /// </param>
    /// <returns>
    /// ProjPeriodTable weekStart.
    /// </returns>
    public static WeekDays weekStart(PeriodRecId _period)
    {
        WeekDays weekStart;
        ProjPeriodTable projPeriodTable;

        if (_period)
        {
            select firstonly crossCompany WeekStart from projPeriodTable
            where projPeriodTable.RecId == _period;

            weekStart = projPeriodTable.WeekStart;
        }

        return weekStart;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>