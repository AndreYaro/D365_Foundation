<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSQualityInQualityCheckWorkTransactionType</Name>
	<SourceCode>
		<Declaration><![CDATA[
[WhsWorkTransTypeStrategyFactory(WHSWorkTransType::QualityInQualityCheck)]
public final class WHSQualityInQualityCheckWorkTransactionType extends WhsWorkTransactionType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>workExecuteMode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WHSWorkExecuteMode workExecuteMode(boolean _hasTargetLicensePlate)
    {
        return WHSWorkExecuteMode::UserDirected;
    }

]]></Source>
			</Method>
			<Method>
				<Name>locationDirectiveQueryName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public QueryName locationDirectiveQueryName(WHSLocDirTable _whsLocDirTable)
    {
        return queryStr(WHSLocDirQualityIn);
    }

]]></Source>
			</Method>
			<Method>
				<Name>workTemplateQueryName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public QueryName workTemplateQueryName(WHSWorkTemplateTable _whsWorkTemplateTable)
    {
        return queryStr(WHSWorkTemplateQualityIn);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLocationDirectiveQuery</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void buildLocationDirectiveQuery(WhsLocationDirectiveTableQueryParameters _parameters)
    {
        if (_parameters.originWorkId)
        {
            Query locDirQuery;

            SysQuery::findOrCreateRange(_parameters.query.dataSourceTable(tableNum(WHSWorkTable)), fieldNum(WHSWorkTable, WorkId)).value(_parameters.originWorkId);

            locDirQuery = _parameters.query;
            locDirQuery.dataSourceTable(tableNum(WHSWorkLine)).addRange(fieldNum(WHSWorkLine, ItemId)).value(_parameters.itemId);
            
            _parameters.query = locDirQuery;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterLocationDirectiveTableQuery</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal Query filterLocationDirectiveTableQuery(Query _query, WHSLocDirTable _locDirTable)
    {
        QueryBuildDataSource qbdsWorkTable = _query.dataSourceTable(tableNum(WHSWorkTable));
        SysQuery::findOrCreateRange(qbdsWorkTable, fieldNum(WHSWorkTable, InventSiteId)).value(queryValue(_locDirTable.InventSiteId));
        SysQuery::findOrCreateRange(qbdsWorkTable, fieldNum(WHSWorkTable, InventLocationId)).value(queryValue(_locDirTable.InventLocationId));
        return _query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>openSourceOrder</Name>
				<Source><![CDATA[
    public void openSourceOrder(WHSWorkTable _whsWorkTable)
    {
        super(_whsWorkTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceOrderMenuItemDisplayStr</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str sourceOrderMenuItemDisplayStr()
    {
        return menuitemDisplayStr(InventQualityOrderTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSourceOrderByWorkOrder</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public Common findSourceOrderByWorkOrder(WHSWorkOrderInterface _workOrder)
    {
        return InventQualityOrderTable::find(_workOrder.parmOrderNum());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>