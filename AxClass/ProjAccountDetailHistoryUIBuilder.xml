<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjAccountDetailHistoryUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjAccountDetailHistoryUIBuilder</c> is extended from <c>SrsReportDataContractUIBuilder</c> to change the layout from 1 column to multiple columns and to get data from fields back into the contract.
/// </summary>
public class ProjAccountDetailHistoryUIBuilder extends SrsReportDataContractUIBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the layout for the report dialog.
    /// </summary>
    public void build()
    {
        FormBuildGroupControl grp;

        // Get the form group used in template form and set it to use 2 columns.
        grp = this.dialog().curFormGroup();
        grp.frameType();
        grp.columns(2);

        // now let the framework draw the controls and take care of everything.
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDimensionFocus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the dimension focus lookup fields.
    /// </summary>
    /// <param name="_dimensionFocusDialogControl">
    /// The <c>FormStringControl</c> for which the lookup fields need to be associated.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void lookupDimensionFocus(FormStringControl _dimensionFocusDialogControl)
    {
        DimensionHierarchyHelper::lookupDimensionSet(_dimensionFocusDialogControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override this method in order to initialize the dialog fields after the fields are build.
    /// </summary>
    public void postBuild()
    {
        DialogField dialogFieldDimensionFocus;

        super();

        // from binding info, get the dialog field for dimension focus and add button
        dialogFieldDimensionFocus = this.bindInfo().getDialogField(this.dataContractObject(), methodstr(ProjAccountDetailHistoryContract, parmProjDimensionFocus));
        if (dialogFieldDimensionFocus)
        {
            dialogFieldDimensionFocus.lookupButton(2);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Registers the dialog field methods to capture events.
    /// </summary>
    public void postRun()
    {
        Dialog dialogLocal = this.dialog();
        DialogField dialogFieldDimesionFocus;

        super();

        // This method should be called in order to handle events on dialogs.
        dialogLocal.dialogForm().formRun().controlMethodOverload(false);

        // Override the methods of dimension focus field.
        dialogFieldDimesionFocus = this.bindInfo().getDialogField(this.dataContractObject(), methodstr(ProjAccountDetailHistoryContract, parmProjDimensionFocus));
        dialogFieldDimesionFocus.registerOverrideMethod(methodstr(FormStringControl, lookup), methodstr(ProjAccountDetailHistoryUIBuilder, lookupDimensionFocus), this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>