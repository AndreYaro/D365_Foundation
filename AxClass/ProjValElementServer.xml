<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjValElementServer</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjValElementServer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCategoryToProj</Name>
				<Source><![CDATA[
    static void addCategoryToProj(container projLine, ProjId _projId)
    {
        int                         i;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        ProjCategoryId              categoryId;

        for (i=1; i<=conLen(projLine); i++)
        {
            categoryId = conPeek(projLine, i);
            projValProjCategorySetUp.CategoryId    = categoryId;
            projValProjCategorySetUp.ProjId        = _projId;
            if (projValProjCategorySetUp.validateWrite())
            {
                projValProjCategorySetUp.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCategoryToProjIfAbsent</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Adds the category to the project category validation list iff the category was not already in the list
    /// </summary>
    /// <param name="projId">
    ///     Identifies the project.
    /// </param>
    /// <param name="categoryId">
    ///     Identifies the category.
    /// </param>
    static void addCategoryToProjIfAbsent(ProjId projId, CategoryId categoryId)
    {
        if (!ProjValElementServer::hasCategoryInProject(projId, categoryId))
        {
            ProjValElementServer::addCategoryToProj([categoryId], projId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCategoryToResource</Name>
				<Source><![CDATA[
    static void addCategoryToResource(container projLine, ResourceRecId _resourceRecId)
    {
        int                         i;
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        ProjCategoryId              categoryId;

        for (i=1; i<=conLen(projLine); i++)
        {
            categoryId = conPeek(projLine, i);
            projValEmplCategorySetUp.CategoryId    = categoryId;
            projValEmplCategorySetUp.Resource      = _resourceRecId;            

            if (projValEmplCategorySetUp.validateWrite())
            {
                projValEmplCategorySetUp.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addProjToCategory</Name>
				<Source><![CDATA[
    static void addProjToCategory(container projLine, ProjCategoryId _categoryId)
    {
        int                         i;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        ProjId                      projId;

        for (i=1; i<=conLen(projLine); i++)
        {
            projId = conPeek(projLine, i);
            projValProjCategorySetUp.ProjId        = projId;
            projValProjCategorySetUp.CategoryId    = _categoryId;
            if (projValProjCategorySetUp.validateWrite())
            {
                projValProjCategorySetUp.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addProjToResource</Name>
				<Source><![CDATA[
	/// <summary>
    /// Initializes values to <c>ProjValEmplProjSetup</c> table.
    /// </summary>
    /// <param name = "projLine">
    /// The container value.
	/// </param>
    /// <param name = "_resourceRecId">
    /// The recid of resource.
	/// </param>
    static void addProjToResource(container projLine, ResourceRecId _resourceRecId)
    {
        int i;
        ProjValEmplProjSetup projValEmplProjSetup;
        ProjId projId;

        ProjValEmplProjSetupParameters insertParameters = ProjValEmplProjSetupParameters::current();
        DataAreaId selectedDataAreaId = curExt();

        if (insertParameters)
        {
            selectedDataAreaId = insertParameters.dataAreaId;
        }

        changecompany(selectedDataAreaId)
        {
            for (i=1; i<=conLen(projLine); i++)
            {
                projId = conPeek(projLine, i);
                projValEmplProjSetup.Projid = projId;
                projValEmplProjSetup.Resource = _resourceRecId;
                ProjValElementServer::insertIntoProjValEmplProjSetup(projValEmplProjSetup);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoProjValEmplProjSetup</Name>
				<Source><![CDATA[
	/// <summary>
    /// Inserts values to <c>ProjValEmplProjSetup</c> table.
    /// </summary>
    /// <param name = "_projValEmplProjSetup">
    /// The buffer of <c>ProjValEmplProjSetup</c> table.
	/// </param>
    protected static void insertIntoProjValEmplProjSetup(ProjValEmplProjSetup _projValEmplProjSetup)
    {
        ProjValEmplProjSetup projValEmplProjSetup = _projValEmplProjSetup;
        if (projValEmplProjSetup.validateWrite())
        {
            projValEmplProjSetup.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addResourceToCategory</Name>
				<Source><![CDATA[
    static void addResourceToCategory(container projLine, ProjCategoryId _categoryId)
    {
        int                         i;
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        ResourceRecId               resourceRecId;

        for (i=1; i<=conLen(projLine); i++)
        {
            resourceRecId = conPeek(projLine, i);
            projValEmplCategorySetUp.Resource      = resourceRecId;
            projValEmplCategorySetUp.CategoryId    = _categoryId;           

            if (projValEmplCategorySetUp.validateWrite())
            {
                projValEmplCategorySetUp.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addResourceToEmplCategoryIntercompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds selected resources from the resource category validation table.
    /// </summary>
    /// <param name="projLine">
    /// A set of selected resources from the resource category validation form.
    /// </param>
    /// <param name="_categoryId">
    /// The category ID that will be mapped to the selected resources.
    /// </param>
    static void addResourceToEmplCategoryIntercompany(
        Set                   projLine,
        ProjCategoryId       _categoryId)
    {
        SetEnumerator               projLineEnumerator = projLine.getEnumerator();
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        ResourceRecId               resourceRecId;       

        while (projLineEnumerator.moveNext())
        {           
            resourceRecId = projLineEnumerator.current();           

            projValEmplCategorySetUp.CategoryId    = _categoryId;
            projValEmplCategorySetUp.Resource      = resourceRecId;            

            projValEmplCategorySetUp.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addResourceToProjIntercompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds selected resources from the resource project validation table.
    /// </summary>
    /// <param name="projLine">
    /// A map of selected resources from the resource project validation form.
    /// </param>
    /// <param name="_projId">
    /// The project ID that will be mapped to the selected resources.
    /// </param>
    static void addResourceToProjIntercompany(Set projLine, ProjId _projId)
    {
        SetEnumerator               projLineEnumerator = projLine.getEnumerator();
        ProjValEmplProjSetup        projValEmplProjSetup;
        ResourceRecId               resourceRecId;       

        while (projLineEnumerator.moveNext())
        {            
            resourceRecId = projLineEnumerator.current();
           
            projValEmplProjSetup.Projid    = _projId;
            projValEmplProjSetup.Resource  = resourceRecId;
            projValEmplProjSetup.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteCategoryFromProj</Name>
				<Source><![CDATA[
    static void deleteCategoryFromProj(container projLine, ProjId _projId)
    {
        ProjCategoryId              categoryId;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            categoryId = conPeek(projLine, i);

            delete_from projValProjCategorySetUp
                where projValProjCategorySetUp.CategoryId  == categoryId   &&
                      projValProjCategorySetUp.ProjId      == _projId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteCategoryFromResource</Name>
				<Source><![CDATA[
    static void deleteCategoryFromResource(container projLine, ResourceRecId _resourceRecId)
    {
        ProjCategoryId              categoryId;
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            categoryId = conPeek(projLine, i);

            delete_from projValEmplCategorySetUp
                where projValEmplCategorySetUp.CategoryId  == categoryId   &&
                        projValEmplCategorySetUp.Resource    == _resourceRecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProjFromCategory</Name>
				<Source><![CDATA[
    static void deleteProjFromCategory(container projLine, ProjCategoryId _categoryId)
    {
        ProjId                      projId;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            projId = conPeek(projLine, i);

            delete_from projValProjCategorySetUp
                where projValProjCategorySetUp.ProjId      == projId       &&
                        projValProjCategorySetUp.CategoryId  == _categoryId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProjFromResource</Name>
				<Source><![CDATA[
	/// <summary>
    /// Deletes the records from <c>ProjValEmplProjSetup</c> table based on project specified in the container.
    /// </summary>
    /// <param name = "projLine">
    /// The container value.
	/// </param>
    /// <param name = "_resourceRecId">
    /// The value of resource recid.
	/// </param>
    static void deleteProjFromResource(container projLine, ResourceRecId _resourceRecId)
    {
        ProjId projId;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            projId = conPeek(projLine, i);
            ProjValElementServer::deleteProjValEmplProjSetup(projId, _resourceRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProjValEmplProjSetup</Name>
				<Source><![CDATA[
	/// <summary>
    /// Deletes the record from <c>ProjValEmplProjSetup</c> table for specified project and resource.
    /// </summary>
    /// <param name = "_projId">
    /// The value of project id.
	/// </param>
    /// <param name = "_resourceRecId">
    /// The value of resource recid.
	/// </param>
    protected static void deleteProjValEmplProjSetup(ProjId _projId, ResourceRecId _resourceRecId)
    {
        ProjValEmplProjSetup projValEmplProjSetup;

        ProjValEmplProjSetupParameters insertParameters = ProjValEmplProjSetupParameters::current();
        DataAreaId selectedDataAreaId = curExt();

        if (insertParameters)
        {
            selectedDataAreaId = insertParameters.dataAreaId;
        }

        changecompany(selectedDataAreaId)
        {
            delete_from projValEmplProjSetup
                where projValEmplProjSetup.Projid == _projId &&
                    projValEmplProjSetup.Resource == _resourceRecId;
        }
     }

]]></Source>
			</Method>
			<Method>
				<Name>deleteResourceFromCategory</Name>
				<Source><![CDATA[
    static void deleteResourceFromCategory(container projLine, ProjCategoryId _categoryId)
    {
        ResourceRecId resourceRecId;
        ProjValEmplCategorySetUp projValEmplCategorySetUp;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            resourceRecId = conPeek(projLine, i);

            delete_from projValEmplCategorySetUp
                where projValEmplCategorySetUp.Resource == resourceRecId &&
                      projValEmplCategorySetUp.CategoryId == _categoryId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteResourceFromCategoryIntercompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the selected resources from the resource category validation table.
    /// </summary>
    /// <param name="projLine">
    /// A map of selected resources from the resource category validation form.
    /// </param>
    /// <param name="_categoryId">
    /// The category ID that is mapped to the selected resources.
    /// </param>
    static void deleteResourceFromCategoryIntercompany(Set projLine, ProjCategoryId _categoryId)
    {
        SetEnumerator               projLineEnumerator = projLine.getEnumerator();
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        ResourceRecId               resourceRecId;        

        while (projLineEnumerator.moveNext())
        {           
            resourceRecId = projLineEnumerator.current();            

            delete_from projValEmplCategorySetUp
                where projValEmplCategorySetUp.Resource  == resourceRecId &&
                      projValEmplCategorySetUp.CategoryId  == _categoryId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasCategoryInProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the given category was already added to project category validation list.
    /// </summary>
    /// <param name="_projId">
    /// Identifies the project.
    /// </param>
    /// <param name="categoryId">
    /// Identifies the category.
    /// </param>
    /// <returns>
    /// true if category already in validation list; false otherwise;
    /// </returns>
    static boolean hasCategoryInProject(ProjId _projId, CategoryId categoryId)
    {
        ProjValProjCategorySetUp   projValProjCategorySetUp;

        select firstonly RecId from projValProjCategorySetUp
        where projValProjCategorySetUp.ProjId        == _projId
              && projValProjCategorySetUp.CategoryId == categoryId;

        return (projValProjCategorySetUp? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaAddCategoryToProjInvoice</Name>
				<Source><![CDATA[
    [SysObsoleteAttribute('This method is no longer needed because  ProjValProjCategorySetUp.PSAProjInvoiceProjId field is obsolete.', false, 15\09\2018)]
    // Define validation on project invoice table
    static void psaAddCategoryToProjInvoice(container projLine, ProjInvoiceProjId _sProjInvoiceProjId)
    {
        int                         i;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        ProjCategoryId              categoryId;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            for (i=1; i<=conLen(projLine); i++)
            {
                categoryId = conPeek(projLine, i);
                projValProjCategorySetUp.CategoryId    = categoryId;
                projValProjCategorySetUp.psaProjInvoiceProjId = _sProjInvoiceProjId;
                if (projValProjCategorySetUp.validateWrite())
                {
                    projValProjCategorySetUp.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaDeleteCategoryFromProjInvoice</Name>
				<Source><![CDATA[
    [SysObsoleteAttribute('This method is no longer needed because  ProjValProjCategorySetUp.PSAProjInvoiceProjId field is obsolete.', false, 15\09\2018)]
    // Define validation on project invoice table
    static void psaDeleteCategoryFromProjInvoice(container projLine, ProjInvoiceProjId _sProjInvoiceProjId)
    {
        ProjCategoryId              categoryId;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        int i;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
        for (i=1; i<=conLen(projLine); i++)
        {
            categoryId = conPeek(projLine, i);

            delete_from projValProjCategorySetUp
                where projValProjCategorySetUp.CategoryId  == categoryId   &&
                      projValProjCategorySetUp.psaProjInvoiceProjId == _sProjInvoiceProjId;
        }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>