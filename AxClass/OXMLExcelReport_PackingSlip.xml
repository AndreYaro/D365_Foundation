<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>OxmlExcelReport_PackingSlip</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The base classs for the packing slip reports to excel.
/// </summary>
abstract class OxmlExcelReport_PackingSlip extends XMLExcelReport_RU
{
    TmpSalesPurchReportLine_RU      line;
    TmpSalesPurchReportTable_RU     header;
    TmpSalesPurchReportSubtable_RU  subHeader;

    PrintoutTypeTable_RU            journalPrintoutType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAnalysisCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets analysis code for report header
    /// </summary>
    /// <returns>
    /// Analysis code for report header
    /// </returns>
    /// <remarks>
    /// If it is not the same for all lines, blank string returned
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected DimensionValue getAnalysisCode()
    {
        DimensionValue             ret;
        TmpSalesPurchReportLine_RU reportLocal;
        Counter                    valueCount;

        reportLocal.setTmpData(line);

        while select AnalysisCode from reportLocal
            group by AnalysisCode
            where reportLocal.InternalId       == subHeader.InternalId &&
                  reportLocal.InventLocationId == subHeader.InventLocationId
        {
            if (valueCount)
            {
                ret = '';
                break;
            }

            ret = reportLocal.AnalysisCode;
            valueCount++;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMainAccountNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return main account number for report header
    /// </summary>
    /// <returns>
    /// Main account number for report header
    /// </returns>
    /// <remarks>
    /// If it is not the same for all lines, blank string returned
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected MainAccountNum getMainAccountNum()
    {
        MainAccountNum             ret;
        TmpSalesPurchReportLine_RU reportLocal;

        reportLocal.setTmpData(line);

        while select InventPostingAccount from reportLocal
            group by InventPostingAccount
            where reportLocal.InternalId       == subHeader.InternalId &&
                  reportLocal.InventLocationId == subHeader.InventLocationId
        {
            if (ret)
            {
                ret = '';
                break;
            }

            ret = reportLocal.InventPostingAccount;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data to the object.
    /// </summary>
    /// <param name="_line">
    /// The record buffer of <c>TmpSalesPurchReportLine_RU</c> table.
    /// </param>
    /// <param name="_subHeader">
    /// The record buffer of <c>TmpSalesPurchReportSubtable_RU</c> table.
    /// </param>
    /// <param name="_header">
    /// The record buffer of <c>TmpSalesPurchReportTable_RU</c> table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    final public void parmData(TmpSalesPurchReportLine_RU     _line,
                               TmpSalesPurchReportSubtable_RU _subHeader,
                               TmpSalesPurchReportTable_RU    _header)
    {
        ;
        line.setTmpData(_line);

        subHeader = _subHeader;
        header    = _header;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalPrintoutType</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public PrintoutTypeTable_RU parmJournalPrintoutType(PrintoutTypeTable_RU _journalPrintoutType = journalPrintoutType)
    {
        journalPrintoutType = _journalPrintoutType;
        return journalPrintoutType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>OXMLExcelReport_PackingSlip</c> based class.
    /// </summary>
    /// <param name="_printoutType">
    /// The type of the printable document.
    /// </param>
    /// <returns>
    /// A new instance of the <c>OXMLExcelReport_PackingSlip</c> based class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static OXMLExcelReport_PackingSlip construct(PrintoutTypeTable_RU _printoutType)
    {
        OXMLExcelReport_PackingSlip packingSlipReport;
        PackingSlipReportAttribute  packingSlipReportAttribute = new PackingSlipReportAttribute(_printoutType);

        packingSlipReport = SysExtensionAppClassFactory::getClassFromSysAttribute(
            classStr(OXMLExcelReport_PackingSlip),
            packingSlipReportAttribute);

        return packingSlipReport;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>