<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferPrintAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventTransferPrintAttribute</c> is the attribute for <c>InventTransferPrintCommand</c> and <c>InventTransferPrintDataProvider</c> classes.
/// </summary>
class InventTransferPrintAttribute extends SysAttribute implements SysExtensionIAttribute
{
    InventTransferUpdateType inventTransferUpdateType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(InventTransferUpdateType _inventTransferUpdateType)
    {
        super();

        inventTransferUpdateType = _inventTransferUpdateType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCacheKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the key used for storing cached data for this attribute.
    /// </summary>
    /// <returns>
    /// A string representing the cache key.
    /// </returns>
    public str parmCacheKey()
    {
        return classStr(InventTransferPrintAttribute)+';'+int2str(inventTransferUpdateType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parminventTransferUpdateType</Name>
				<Source><![CDATA[
    public InventTransferUpdateType parminventTransferUpdateType(InventTransferUpdateType _inventTransferUpdateType = inventTransferUpdateType)
    {
        inventTransferUpdateType = _inventTransferUpdateType;

        return inventTransferUpdateType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSingleton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the same instance should be returned by the extension framework.
    /// </summary>
    /// <returns>
    /// true if the same instance should be returned; otherwise false.
    /// </returns>
    public boolean useSingleton()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>