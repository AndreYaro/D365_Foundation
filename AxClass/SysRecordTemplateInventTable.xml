<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysRecordTemplateInventTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SysRecordTemplateInventTable</c> class is the specialized version of the
/// <c>SysRecordTemplate</c> class that is responsible for setting the product per company attributes
/// from the product templates.
/// </summary>
/// <remarks>
/// This is a framework class. Customizing this class may cause problems with future upgrades to the
/// software.
/// </remarks>
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
class SysRecordTemplateInventTable extends SysRecordTemplate
{
    Set excludeFields;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isProductMaster</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if the current released product is a product master.
    /// </summary>
    /// <returns>
    ///     True if the current released product is a product master; otherwise false.
    /// </returns>
    public boolean isProductMaster()
    {
        InventTable         inventTable;
        EcoResProduct       product;
        boolean             ret = false;

        inventTable     = common as InventTable;
        product         = EcoResProduct::find(inventTable.Product);

        return (product is EcoResProductMaster);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldFieldBeCopied</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a field value should be copied from the template to the record buffer.
    /// </summary>
    /// <param name="_tableId">
    /// A table ID.
    /// </param>
    /// <param name="_fieldId">
    /// A field ID.
    /// </param>
    /// <returns>
    /// true if a field value should be copied from the template to the record buffer; otherwise, false.
    /// </returns>
    protected boolean shouldFieldBeCopied(TableId _tableId, FieldId _fieldId)
    {
        SysDictField    dictField = new SysDictField(_tableId, _fieldId);

        if (!excludeFields)
        {
            excludeFields = new Set(Types::String);
            excludeFields.add(fieldStr(InventTable, ItemType));
            excludeFields.add(fieldStr(InventTable, NameAlias));
            excludeFields.add(fieldStr(InventTable, Product));
            excludeFields.add(fieldStr(InventTable, ItemId));   
            excludeFields.add(fieldStr(InventTable, StandardInventColorId));
            excludeFields.add(fieldStr(InventTable, StandardInventSizeId));
            excludeFields.add(fieldStr(InventTable, StandardInventStyleId));
            excludeFields.add(fieldStr(InventTable, StandardInventVersionId));
            excludeFields.add(fieldStr(InventTable, StandardConfigId));

            if (#PDSPotencyEnabled)
            {
                excludeFields.add(fieldStr(InventTable, PDSBaseAttributeId));
                excludeFields.add(fieldStr(InventTable, PDSTargetFactor));
                excludeFields.add(fieldStr(InventTable, PDSPotencyAttribRecording));
            }

            if (!this.isProductMaster())
            {
                excludeFields.add(fieldStr(InventTable, ItemDimCostPrice));
            }
        }

        return super(_tableId, _fieldId) && !excludeFields.in(dictField.name());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SysRecordTemplateInventTable construct()
    {
        return new SysRecordTemplateInventTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>