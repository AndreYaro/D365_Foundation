<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttTableGroupField</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Holds information about the database field and settings necessary to define a summary group.
/// </summary>
public class GanttTableGroupField
{
    GanttTableGroupFieldType fieldType;
    FieldId fieldId;
    boolean showSummaryBar;
    boolean isCollapsed;
    boolean showDeliveryDateMarker;
    GanttControlSummaryType summaryType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldId</Name>
				<Source><![CDATA[
    public FieldId parmFieldId(FieldId _fieldId = fieldId)
    {
        fieldId = _fieldId;
        return fieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldType</Name>
				<Source><![CDATA[
    public GanttTableGroupFieldType parmFieldType(GanttTableGroupFieldType _fieldType = fieldType)
    {
        fieldType = _fieldType;
        return fieldType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowSummaryBar</Name>
				<Source><![CDATA[
    public boolean parmShowSummaryBar(boolean _showSummaryBar = showSummaryBar)
    {
        showSummaryBar = _showSummaryBar;
        return showSummaryBar;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSummaryType</Name>
				<Source><![CDATA[
    public GanttControlSummaryType parmSummaryType(GanttControlSummaryType _summaryType = summaryType)
    {
        summaryType = _summaryType;
        return summaryType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCollapsed</Name>
				<Source><![CDATA[
    public boolean parmIsCollapsed(boolean _isCollapsed = isCollapsed)
    {
        isCollapsed = _isCollapsed;
        return isCollapsed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowDeliveryDateMarker</Name>
				<Source><![CDATA[
    public boolean parmShowDeliveryDateMarker(boolean _showDeliveryDateMarker = showDeliveryDateMarker)
    {
        showDeliveryDateMarker = _showDeliveryDateMarker;
        return showDeliveryDateMarker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    public static GanttTableGroupField newStandard(
        GanttTableGroupFieldType _fieldType,
        FieldId _fieldId,
        boolean _showSummaryBar,
        boolean _isCollapsed,
        boolean _showDeliveryDateMarker = false,
        GanttControlSummaryType _summaryType = GanttControlSummaryType::SummaryBar)
    {
        GanttTableGroupField groupField = new GanttTableGroupField();
        groupField.parmFieldType(_fieldType);
        groupField.parmFieldId(_fieldId);
        groupField.parmShowSummaryBar(_showSummaryBar);
        groupField.parmSummaryType(_summaryType);
        groupField.parmIsCollapsed(_isCollapsed);
        groupField.parmShowDeliveryDateMarker(_showDeliveryDateMarker);
        return groupField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>text</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the grouping text based on a Gantt job record.
    /// </summary>
    /// <param name = "_ganttTmpWrkCtrJob">The Gantt job record to derive the text from.</param>
    /// <returns>The grouping text.</returns>
    public str text(GanttTmpWrkCtrJob _ganttTmpWrkCtrJob)
    {
        str text;
        str formatStr = "@SYS76766";

        switch (this.fieldType)
        {
            case GanttTableGroupFieldType::Site:
                text = strfmt(formatStr, _ganttTmpWrkCtrJob.InventSiteId, InventSite::find(_ganttTmpWrkCtrJob.InventSiteId).Name);
                break;

            case GanttTableGroupFieldType::OrderNumber:
                str subFormatStr = "@SYS76498";

                switch (_ganttTmpWrkCtrJob.RefType)
                {
                    case WrkCtrCapRefType::Production:
                        ProdTable prodTable = ProdTable::find(_ganttTmpWrkCtrJob.RefId);
                        text = strfmt(formatStr, _ganttTmpWrkCtrJob.RefId, strFmt(subFormatStr, prodTable.ItemId, prodTable.Name));
                        break;

                    case WrkCtrCapRefType::PlannedOrder:
                        ReqPO reqPO = ReqPO::find(_ganttTmpWrkCtrJob.reqPlan().findActiveVersion().RecId, _ganttTmpWrkCtrJob.RefId);
                        text = strfmt(formatStr, _ganttTmpWrkCtrJob.RefId, strFmt(subFormatStr, reqPO.ItemId, reqPO.itemName()));
                        break;

                    case WrkCtrCapRefType::Project:
                        text = strfmt(formatStr, _ganttTmpWrkCtrJob.RefId, ProjForecastEmpl::findRecId(str2int64(_ganttTmpWrkCtrJob.JobId)).projTable().Name);
                        break;
                }
                break;

            case GanttTableGroupFieldType::ProductionUnit:
                text = strfmt(formatStr, _ganttTmpWrkCtrJob.ProdUnitId, ProdUnitTable::find(_ganttTmpWrkCtrJob.ProdUnitId).Name);
                break;

            case GanttTableGroupFieldType::ResourceGroup:
                text = strfmt(formatStr, _ganttTmpWrkCtrJob.WrkCtrGroupId, WrkCtrTable::find(_ganttTmpWrkCtrJob.WrkCtrGroupId).Name);
                break;

            case GanttTableGroupFieldType::Resource:
                text = strfmt(formatStr, _ganttTmpWrkCtrJob.WrkCtrId, WrkCtrTable::find(_ganttTmpWrkCtrJob.WrkCtrId).Name);
                break;
        }

        if (!text)
        {
            text = _ganttTmpWrkCtrJob.(this.parmFieldId());
        }

        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tooltipText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the grouping tooltip text based on a Gantt job record.
    /// </summary>
    /// <param name = "_ganttTmpWrkCtrJob">The Gantt job record to derive the text from.</param>
    /// <returns>The grouping tooltip text.</returns>
    public str tooltipText(GanttTmpWrkCtrJob _ganttTmpWrkCtrJob)
    {
        str strToolTip;
        WrkCtrCapRefType refType = _ganttTmpWrkCtrJob.RefType;
        str formatStr = "@SYS76498";

        switch (this.fieldType)
        {
            case GanttTableGroupFieldType::Site:

                strToolTip = strfmt("@SYS114013", _ganttTmpWrkCtrJob.InventSiteId);
                break;

            case GanttTableGroupFieldType::OrderStatus:

                switch (refType)
                {
                    case WrkCtrCapRefType::Production:
                        strToolTip = strfmt(formatStr, "@SYS38590", _ganttTmpWrkCtrJob.RefStatus);
                        break;

                    case WrkCtrCapRefType::PlannedOrder:
                        strToolTip = strfmt(formatStr, "@SYS114014", _ganttTmpWrkCtrJob.RefStatus);
                        break;

                    case WrkCtrCapRefType::Project:
                        strToolTip = strfmt(formatStr, "@SYS97298", _ganttTmpWrkCtrJob.RefStatus);
                        break;

                    case WrkCtrCapRefType::Blank:
                        strToolTip = strfmt(formatStr, "@SYS108520", _ganttTmpWrkCtrJob.RefStatus);
                        break;
                }
                break;

            case GanttTableGroupFieldType::OrderNumber:

                switch (refType)
                {
                    case WrkCtrCapRefType::Production:
                        strToolTip = strfmt(formatStr, "@SYS89639", _ganttTmpWrkCtrJob.RefId);
                        break;

                    case WrkCtrCapRefType::PlannedOrder:
                        strToolTip = strfmt(formatStr, "@SYS108495", _ganttTmpWrkCtrJob.RefId);
                        break;

                    case WrkCtrCapRefType::Project:
                        strToolTip = strfmt(formatStr, "@SYS80304", _ganttTmpWrkCtrJob.RefId);
                        break;

                    case WrkCtrCapRefType::Blank:
                        strToolTip = strfmt(formatStr, "@SYS108519", _ganttTmpWrkCtrJob.RefId);
                        break;
                }

                break;

            case GanttTableGroupFieldType::ProductionUnit:
                strToolTip = strfmt(formatStr, "@SYS102967", _ganttTmpWrkCtrJob.ProdUnitId);
                break;

            case GanttTableGroupFieldType::ResourceGroup:
                strToolTip = strfmt(formatStr, "@SYS15433", _ganttTmpWrkCtrJob.WrkCtrGroupId);
                break;

            case GanttTableGroupFieldType::Resource:
                strToolTip = strfmt("@SYS75252", _ganttTmpWrkCtrJob.WrkCtrId);
                break;

            case GanttTableGroupFieldType::Operation:
                switch (refType)
                {
                    case WrkCtrCapRefType::Production:
                    case WrkCtrCapRefType::PlannedOrder:
                        strToolTip = strfmt(formatStr, "@SYS101237", _ganttTmpWrkCtrJob.OprId);
                        break;

                    case WrkCtrCapRefType::Project:
                        strToolTip = strfmt(formatStr, "@SYS81290", _ganttTmpWrkCtrJob.OprId);
                        break;

                    default:
                        strToolTip = strfmt(formatStr, "@SYS108518", _ganttTmpWrkCtrJob.OprId);
                }

                break;
        }

        return strToolTip;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>