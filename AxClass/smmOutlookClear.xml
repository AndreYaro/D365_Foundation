<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmmOutlookClear</Name>
	<SourceCode>
		<Declaration><![CDATA[
// The class is used to clear all entries in outlook that exist in axapta.
// It is usefull if outlook is migrated/backuped or OS is upgraded.
[SysObsolete('Microsoft discontinued support for synchronizing contacts, appointments, and tasks between Dynamics 365 Supply Chain Management and Outlook.', false, 01\12\2023)]
class SmmOutlookClear
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        smmOutlookSync_Contact      smmOutlookSync_Contact;
        smmOutlookSync_Task         smmOutlookSync_Task;
        smmOutlookSync_Appointment  smmOutlookSync_Appointment;
        OutlookUserSetup            outlookUserSetup;
        smmOutlookLastSync          smmOutlookLastSync;

        // Initialise contacts
        smmOutlookSync_Contact = smmOutlookSync::construct(smmOutlookMappingTypes::Contacts);
        smmOutlookSync_Contact.init();

        // If connected to outlook
        if (smmOutlookSync_Contact.connectedToOutlook())
        {
            // Clear contacts
            smmOutlookSync_Contact.clearOutlookEntries();
        }

        // Initialise tasks
        smmOutlookSync_Task = smmOutlookSync::construct(smmOutlookMappingTypes::Tasks);
        smmOutlookSync_Task.init();

        // If connected to outlook
        if (smmOutlookSync_Task.connectedToOutlook())
        {
            // Clear tasks
            smmOutlookSync_Task.clearOutlookEntries();
        }

        // Initialise appointments
        smmOutlookSync_Appointment = smmOutlookSync::construct(smmOutlookMappingTypes::Appointments);
        smmOutlookSync_Appointment.init();

        // If connected to outlook
        if (smmOutlookSync_Appointment.connectedToOutlook())
        {
            // Clear appointments
            smmOutlookSync_Appointment.clearOutlookEntries();
        }

        ttsbegin;

        outlookUserSetup = OutlookUserSetup::findByUser(curuserid(), true);
        if (outlookUserSetup)
        {
            // Clear outlook setup from employee
            outlookUserSetup.OutlookUserID                    = '';
            outlookUserSetup.OutlookUserEntryID               = '';
            outlookUserSetup.OutlookCalendarOutlookEntryID    = '';
            outlookUserSetup.OutlookCalendarOutlookStoreID    = '';
            outlookUserSetup.OutlookCalendarFolderName        = '';

            // Clear Outlook contact folder information
            outlookUserSetup.OutlookContactFolderEntryID   = '';
            outlookUserSetup.OutlookContactFolderStoreID   = '';
            outlookUserSetup.OutlookContactFolderName      = '';

            // Clear Outlook task folder information
            outlookUserSetup.OutlookTaskOutlookEntryID     = '';
            outlookUserSetup.OutlookTaskOutlookStoreID     = '';
            outlookUserSetup.OutlookTaskFolderName         = '';
            outlookUserSetup.update();

            // Clear last syncronisation stamps
            delete_from smmOutlookLastSync where smmOutlookLastSync.UserId == curuserid();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        if (smmOutlookSyncDeprecationHandler::isOutlookSyncDisabled())
        {
            smmOutlookSyncDeprecationHandler::logSyncSkipMessageToTelemetry();
            return;
        }

        smmOutlookSyncDeprecationHandler::showDeprecationMessage();

        smmOutlookClear smmOutlookClear;

        smmOutlookClear = new smmOutlookClear();

        // Warn user about deletion of outlook data
        if (Box::okCancel("@SYS91016", DialogButton::Cancel) == DialogButton::Ok)
        {
            smmOutlookClear.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>