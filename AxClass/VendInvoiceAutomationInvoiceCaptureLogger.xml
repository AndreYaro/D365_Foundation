<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceAutomationInvoiceCaptureLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class VendInvoiceAutomationInvoiceCaptureLogger
{
    private ProcessExecutionSourceLinkItem invoiceCaptureSourceLink;
    private RefRecId invoiceCaptureSourceLinkRecId;
    private ProcessExecutionId transferExecutionId;
    private VendInvoiceCapturedInvoiceInfoEntity capturedInvoice;
    private ProcessScheduleWorkItem processScheduleWorkItem;
    


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromInvoiceTransfer</Name>
				<Source><![CDATA[
    internal static VendInvoiceAutomationInvoiceCaptureLogger newFromInvoiceTransfer(
        VendInvoiceCapturedInvoiceInfoEntity _capturedInvoice,
        ProcessScheduleWorkItem _processScheduleWorkItem)
    {
        VendInvoiceAutomationInvoiceCaptureLogger transfer =  new VendInvoiceAutomationInvoiceCaptureLogger();
        transfer.capturedInvoice = _capturedInvoice;
        transfer.transferExecutionId = _processScheduleWorkItem.parmExecutionId();
        transfer.initializeInvoiceTransferSourceLink(_capturedInvoice, _processScheduleWorkItem);

        return transfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeInvoiceTransferSourceLink</Name>
				<Source><![CDATA[
    private void initializeInvoiceTransferSourceLink(VendInvoiceCapturedInvoiceInfoEntity _capturedInvoice, ProcessScheduleWorkItem _processScheduleWorkItem)
    {
        ProcessExecutionSourceLinkItem sourceLinkItem = ProcessExecutionSourceLinkItem::construct();
        sourceLinkItem.parmExecutionId(_processScheduleWorkItem.parmExecutionId());
        sourceLinkItem.parmProcessScheduleSeriesPatternRecId(_processScheduleWorkItem.parmProcessScheduleSeriesPatternRecId());
        sourceLinkItem.parmHeader(_capturedInvoice.CapturedDocumentId);
        sourceLinkItem.parmSourceRecId(_capturedInvoice.RecId);
        sourceLinkItem.parmSourceTableId(tableNum(VendInvoiceCapturedInvoiceInfo));
        sourceLinkItem.parmMessage("@AccountsPayable:VendInvoiceAutomationInvoiceCaptureTransferInProcess"); // need to modify
        sourceLinkItem.parmExecutionSourceStatus(ProcessExecutionSourceStatus::Success); 
        invoiceCaptureSourceLink = sourceLinkItem;
        invoiceCaptureSourceLinkRecId = ProcessExecutionSourceLink::insertSourceLink(invoiceCaptureSourceLink).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeSuccessfulTransferToProcessAutomationResults</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void writeSuccessfulTransferToProcessAutomationResults()
    {
        invoiceCaptureSourceLink.parmExecutionSourceStatus(ProcessExecutionSourceStatus::Success);
        invoiceCaptureSourceLink.parmMessage("@AccountsPayable:VendInvoiceAutomationInvoiceCaptureTransferSuccess");
        ProcessExecutionSourceLink::updateSourceLink(invoiceCaptureSourceLinkRecId, invoiceCaptureSourceLink);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeFailedTransferToProcessAutomationResults</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void writeFailedTransferToProcessAutomationResults()
    {
        invoiceCaptureSourceLink.parmExecutionSourceStatus(ProcessExecutionSourceStatus::Error);
        invoiceCaptureSourceLink.parmMessage("@AccountsPayable:VendInvoiceAutomationInvoiceCaptureTransferFailed");
        ProcessExecutionSourceLink::updateSourceLink(invoiceCaptureSourceLinkRecId, invoiceCaptureSourceLink);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>