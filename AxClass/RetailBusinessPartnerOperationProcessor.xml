<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailBusinessPartnerOperationProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailBusinessPartnerOperationProcessor</c> class to process <c>RetailBusinessPartnerOperation</c>.
/// </summary>
internal class RetailBusinessPartnerOperationProcessor
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    /// <summary>
    /// Process business partner operations.
    /// </summary>
    public void process()
    {
        RetailBusinessPartnerOperation retailBusinessPartnerOperation;
        RetailBusinessPartnerOperationStatus retailBusinessPartnerOperationStatus;

        smmBusRelTypeGroup::insertB2BProspect();

        while select retailBusinessPartnerOperation
            order by retailBusinessPartnerOperation.ReplicationCounterFromOrigin
            notexists join retailBusinessPartnerOperationStatus
                where retailBusinessPartnerOperation.OperationID == retailBusinessPartnerOperationStatus.OperationID
        {
            RetailBusinessPartnerOperationProcessor::processByType(retailBusinessPartnerOperation);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processByType</Name>
				<Source><![CDATA[
    internal static void processByType(RetailBusinessPartnerOperation _retailBusinessPartnerOperation)
    {
        switch (_retailBusinessPartnerOperation.Type)
        {
            case RetailBusinessPartnerOperationType::CreateProspect:
                RetailBusinessPartnerCreateProspectProcessor createProspectProcessor = new RetailBusinessPartnerCreateProspectProcessor();
                createProspectProcessor.process(_retailBusinessPartnerOperation);
                break;
            case RetailBusinessPartnerOperationType::AddUser:
                RetailBusinessPartnerAddUserProcessor addUserProcessor = new RetailBusinessPartnerAddUserProcessor();
                addUserProcessor.process(_retailBusinessPartnerOperation);
                break;
            case RetailBusinessPartnerOperationType::DeleteUser:
                RetailBusinessPartnerRemoveUserProcessor removeUserProcessor = new RetailBusinessPartnerRemoveUserProcessor();
                removeUserProcessor.process(_retailBusinessPartnerOperation);
                break;
            case RetailBusinessPartnerOperationType::EditUser:
                RetailBusinessPartnerEditUserProcessor editUserProcessor = new RetailBusinessPartnerEditUserProcessor();
                editUserProcessor.process(_retailBusinessPartnerOperation);
                break;
            case RetailBusinessPartnerOperationType::InvoiceRequest:
                RetailBusinessPartnerInvoiceRequestProcessor invoiceRequestProcessor = new RetailBusinessPartnerInvoiceRequestProcessor();
                invoiceRequestProcessor.process(_retailBusinessPartnerOperation);
                break;
            case RetailBusinessPartnerOperationType::RequestAccountStatement:
                RetailBusinessPartnerAccountStatementProcessor accountStatementProcessor = new RetailBusinessPartnerAccountStatementProcessor();
                accountStatementProcessor.process(_retailBusinessPartnerOperation);
                break;
            case RetailBusinessPartnerOperationType::PromoteBusinessPartner:
                RetailBusinessPartnerPromoteBusinessPartnerProcessor promoteBusinessPartnerProcessor = new RetailBusinessPartnerPromoteBusinessPartnerProcessor();
                promoteBusinessPartnerProcessor.process(_retailBusinessPartnerOperation);
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>