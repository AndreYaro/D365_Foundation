<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirectTaxInquiryReportDP_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Report Data Provier <c>DirectTaxInquiryReportDP_IN</c> class for <c>DirectTaxInquiryReport_IN</c> report.
/// </summary>
[
    SRSReportParameterAttribute(classstr(SrsTmpTblMarshallerContract))
]
class DirectTaxInquiryReportDP_IN extends SRSReportDataProviderBase
{
    TmpDirectTaxInquiryTable_IN tmpDirectTaxInquiryTable_IN;
    RecId                       tmpTableDataRecId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTmpDirectTaxInquiryTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes temporary table.
    /// </summary>
    /// <returns>
    /// Returns temporary table <c>TmpDirectTaxInquiryTable_IN</c>.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(TmpDirectTaxInquiryTable_IN))
    ]
    public TmpDirectTaxInquiryTable_IN getTmpDirectTaxInquiryTable_IN()
    {
        return tmpDirectTaxInquiryTable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    public void processReport()
    {
        SrsReportRunPermission  permission;

        SrsTmpTblMarshallerContract contract = this.parmDataContract() as SrsTmpTblMarshallerContract;
        tmpTableDataRecId   = contract.parmTmpTableDataRecId();
        permission          = new SrsReportRunPermission();
        permission.assert();

        //Temp table object that was returned from SRSTmpTblMarshaller
        tmpDirectTaxInquiryTable_IN = SRSTmpTblMarshaller::GetTmpTbl(tmpTableDataRecId);
        SRSTmpTblMarshaller::deleteTmpTblData(tmpTableDataRecId);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
