<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardPaymentBreakDownController</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CreditCardPaymentBreakDownController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>startProcess</Name>
				<Source><![CDATA[
    internal static void startProcess(Args _args)
    {
        CreditCardPaymentBreakDownLogger creditCardPaymentBreakDownLogger = CreditCardPaymentBreakDownLogger::createLogger();
        using (var runActivityContext = creditCardPaymentBreakDownLogger.activityContextWithCustomProperties(CreditCardPaymentBreakDownInstrumentationConstants::CreditCardPaymentBreakDownPaymentController))
        {
            CreditCardPaymentBreakDownController creditCardPaymentBreakDownController = new CreditCardPaymentBreakDownController(
            classStr(CreditCardPaymentBreakDownService),
            methodStr(CreditCardPaymentBreakDownService, processPayment),
            SysOperationExecutionMode::ReliableAsynchronous);

            RecId recId = _args.record().RecId;
            CreditCardPaymentBreakDownTable creditCardPaymentBreakDownTable = CreditCardPaymentBreakDownTable::findByRecId(recId);
            if (!creditCardPaymentBreakDownTable.RecId)
            {
                creditCardPaymentBreakDownLogger.logError(strFmt('Empty break down table RecId'));
                error("@CashManagement:CreditCardPaymentBreakDownSystemError");
                return;
            }
            if (creditCardPaymentBreakDownTable.isInActiveBatchJob())
            {
                creditCardPaymentBreakDownLogger.logInformation(strFmt('Break down table RecId %1 is already running', any2Str(recId)));
                info("@CashManagement:CreditCardPaymentBreakDownUnderExecution");
                return;
            }

            CreditCardPaymentBreakDownDataContract creditCardPaymentBreakDownDataContract = creditCardPaymentBreakDownController.getDataContractObject();
            creditCardPaymentBreakDownDataContract.parmCreditCardPaymentBreakDownTableRecId(recId);
            creditCardPaymentBreakDownDataContract.parmCreditCardPaymentExecutionId(creditCardPaymentBreakDownTable.CreditCardPaymentExecutionId);
            creditCardPaymentBreakDownController.setRetryCount(0);
            creditCardPaymentBreakDownController.setCaption(recId);
            creditCardPaymentBreakDownController.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetryCount</Name>
				<Source><![CDATA[
    private void setRetryCount(int _retryCount)
    {
        BatchInfo currentBatchInfo = this.batchInfo();
        currentBatchInfo.parmRetriesOnFailure(_retryCount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCaption</Name>
				<Source><![CDATA[
    private void setCaption(RecId _recId)
    {
        str caption = CreditCardBreakDownRunnerHelper::getCaptionStr(_recId);
        this.parmDialogCaption(caption);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>