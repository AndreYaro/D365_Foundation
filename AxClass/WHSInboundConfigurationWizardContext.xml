<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInboundConfigurationWizardContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSInboundConfigurationWizardContext implements SysSaveable
{
    public Set warehouseIds = new Set(Types::String);
    public WMSLocationId receivingLocationId;
    public WHSLocProfileId receivingProfileId;
    public WhsWarehouseGroupAll warehouseSelection;
    public WhsWarehouseGroupId warehouseGroupId;
    public WHSWorkClassId purchaseWorkClassId;
    public WHSWorkTemplateCode purchaseWorkTemplateCode;
    public WHSLocDirName poPutLocationDirectiveName;
    internal WHSWorkTransType inboundWorkTransType;
    internal WHSInboundConfigurationWizardWorkTransTypeLabels workTransTypeLabels;
    
    #define.CurrentVersion(1)
    #localmacro.CurrentList
        receivingLocationId,
        purchaseWorkClassId,
        purchaseWorkTemplateCode,
        poPutLocationDirectiveName
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        inboundWorkTransType = WHSWorkTransType::Purch;
        workTransTypeLabels = WHSInboundConfigurationWizardWorkTransTypeLabels::construct(inboundWorkTransType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSInboundConfigurationWizardContext construct()
    {
        WHSInboundConfigurationWizardContext context = new WHSInboundConfigurationWizardContext();
        xSysLastValue::getLast(context);
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>switchContext</Name>
				<Source><![CDATA[
    internal void switchContext(WHSWorkTransType _inboundWorkTransType)
    {
        this.saveContext();

        if (inboundWorkTransType != _inboundWorkTransType)
        {
            inboundWorkTransType = _inboundWorkTransType;
            workTransTypeLabels = WHSInboundConfigurationWizardWorkTransTypeLabels::construct(inboundWorkTransType);

            xSysLastValue::getLast(this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveContext</Name>
				<Source><![CDATA[
    internal void saveContext()
    {
        xSysLastValue::saveLast(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        purchaseWorkClassId = workTransTypeLabels.defaultInboundWorkClassId();
        purchaseWorkTemplateCode = workTransTypeLabels.defaultInboundWorkTemplateCode();
        poPutLocationDirectiveName = workTransTypeLabels.defaultInboundPutLocationDirectiveName();

        receivingLocationId = "@WAX:InitiationManagementWizard_Recv";
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        int version = runbase::getVersion(packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = packedClass;
                return true;
            default :
                return false;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    public DataAreaId lastValueDataAreaId()
    {
        return curExt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    public IdentifierName lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    public IdentifierName lastValueElementName()
    {
        return inboundWorkTransType == WHSWorkTransType::Purch
            ? classStr(WHSInboundConfigurationWizardContext)
            : classStr(WHSInboundConfigurationWizardContext) + enum2Str(inboundWorkTransType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    public UtilElementType lastValueType()
    {
        return UtilElementType::Class;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    public UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>