<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>pcRuntimeXmlParseComponent</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCRuntimeXmlParseComponent</c> class parses the runtime XML for a component.
/// </summary>
class pcRuntimeXmlParseComponent extends PCRuntimeXmlParseBase
{
    PCRuntimeXmlParseAttribute      runtimeXmlParseAttribute;
    PCRuntimeXmlParseAttributeGroup runtimeXmlParseAttributeGroup;
    PCRuntimeXmlParseSubcomponent   runtimeXmlParseSubcomponent;
    PCRuntimeXmlParsePriceElement   runtimeXmlParsePriceElement;

    #PC
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addToParentTypeAndParseComponentDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds to the parent type and parses the component's detail information.
    /// </summary>
    /// <param name="_xmlElement">
    /// An xml element instance.
    /// </param>
    /// <param name="_runtimeParent">
    /// The parent of the current instance.
    /// </param>
    /// <returns>
    /// An initialized <c>PCRuntimeComponent</c> instance.
    /// </returns>
    protected PCRuntimeComponent addToParentTypeAndParseComponentDetails(XmlElement _xmlElement, PCRuntimeInterface _runtimeParent)
    {
        PCRuntimeModel      runtimeModel;
        PCRuntimeComponent  parentRuntimeComponent;
        PCRuntimeComponent  runtimeComponent = PCRuntimeComponent::construct();

        this.parseComponentDetails(_xmlElement, runtimeComponent);

        if (_runtimeParent is PCRuntimeModel)
        {
            runtimeModel = _runtimeParent as PCRuntimeModel;
            runtimeModel.parmRootComponent(runtimeComponent);
            // special case for root component
            runtimeComponent.parmDisplayName(runtimeComponent.parmName());
        }
        else
        {
            parentRuntimeComponent = _runtimeParent as PCRuntimeComponent;
            parentRuntimeComponent.addSubcomponent(runtimeComponent);
        }

        return runtimeComponent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        runtimeXmlParseAttribute        = PCRuntimeXmlParseAttribute::construct();
        runtimeXmlParseAttributeGroup   = PCRuntimeXmlParseAttributeGroup::construct();
        runtimeXmlParseSubcomponent     = PCRuntimeXmlParseSubcomponent::construct();
        runtimeXmlParsePriceElement     = PCRuntimeXmlParsePriceElement::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRuntimeXmlParseAttribute</Name>
				<Source><![CDATA[
        public PCRuntimeXmlParseAttribute parmRuntimeXmlParseAttribute(PCRuntimeXmlParseAttribute _runtimeXmlParseAttribute = runtimeXmlParseAttribute)
    {
        runtimeXmlParseAttribute = _runtimeXmlParseAttribute;

        return runtimeXmlParseAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRuntimeXmlParseAttributeGroup</Name>
				<Source><![CDATA[
        public PCRuntimeXmlParseAttributeGroup parmRuntimeXmlParseAttributeGroup(PCRuntimeXmlParseAttributeGroup _runtimeXmlParseAttributeGroup = runtimeXmlParseAttributeGroup)
    {
        runtimeXmlParseAttributeGroup = _runtimeXmlParseAttributeGroup;

        return runtimeXmlParseAttributeGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRuntimeXmlParsePriceElement</Name>
				<Source><![CDATA[
        public PCRuntimeXmlParsePriceElement parmRuntimeXmlParsePriceElement(PCRuntimeXmlParsePriceElement _runtimeXmlParsePriceElement = runtimeXmlParsePriceElement)
    {
        runtimeXmlParsePriceElement = _runtimeXmlParsePriceElement;

        return runtimeXmlParsePriceElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRuntimeXmlParseSubcomponent</Name>
				<Source><![CDATA[
        public PCRuntimeXmlParseSubcomponent parmRuntimeXmlParseSubcomponent(PCRuntimeXmlParseSubcomponent _runtimeXmlParseSubcomponent = runtimeXmlParseSubcomponent)
    {
        runtimeXmlParseSubcomponent = _runtimeXmlParseSubcomponent;

        return runtimeXmlParseSubcomponent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parse</Name>
				<Source><![CDATA[
        public void parse(XmlElement _componentXmlElement, PCRuntimeInterface _runtimeParent)
    {
        PCRuntimeComponent runtimeComponent = this.addToParentTypeAndParseComponentDetails(_componentXmlElement, _runtimeParent);

        this.parseAttributes(_componentXmlElement, runtimeComponent);

        this.parseAttributeGroups(_componentXmlElement, runtimeComponent);

        this.parsePriceElements(_componentXmlElement, runtimeComponent);

        this.parseComponents(_componentXmlElement, runtimeComponent);

        this.parseSubcomponents(_componentXmlElement, runtimeComponent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseAttributeGroups</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the xml for attribute groups.
    /// </summary>
    /// <param name="_componentXmlElement">
    /// An xml element containing information about the component.
    /// </param>
    /// <param name="_runtimeComponent">
    /// The runtime component.
    /// </param>
    protected void parseAttributeGroups(XmlElement _componentXmlElement, PCRuntimeComponent _runtimeComponent)
    {
        this.parseXmlElementCollection(_componentXmlElement, #attributeGroupElement, runtimeXmlParseAttributeGroup, _runtimeComponent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseAttributes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the xml for attributes.
    /// </summary>
    /// <param name="_componentXmlElement">
    /// An xml element containing information about the component.
    /// </param>
    /// <param name="_runtimeComponent">
    /// The runtime component.
    /// </param>
    protected void parseAttributes(XmlElement _componentXmlElement, PCRuntimeComponent _runtimeComponent)
    {
        this.parseXmlElementCollection(_componentXmlElement, #attributeElement, runtimeXmlParseAttribute, _runtimeComponent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseComponentDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the xml for component's details.
    /// </summary>
    /// <param name="_xmlElement">
    /// An xml element containing information about the component.
    /// </param>
    /// <param name="_runtimeComponent">
    /// The runtime component.
    /// </param>
    protected void parseComponentDetails(XmlElement _xmlElement, PCRuntimeComponent _runtimeComponent)
    {
        Debug::assert(_xmlElement.baseName() == #componentElement);

        _runtimeComponent.parmName(_xmlElement.getAttribute(#nameAttribute));
        _runtimeComponent.parmComponentRecId(str2int64(_xmlElement.getAttribute(#componentId)));
        _runtimeComponent.parmInstanceId(str2int(_xmlElement.getAttribute(#instanceId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseComponents</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the xml for components.
    /// </summary>
    /// <param name="_componentXmlElement">
    /// An xml element containing information about the component.
    /// </param>
    /// <param name="_runtimeComponent">
    /// The runtime component.
    /// </param>
    protected void parseComponents(XmlElement _componentXmlElement, PCRuntimeComponent _runtimeComponent)
    {
        this.parseXmlElementCollection(_componentXmlElement, #componentElement, this, _runtimeComponent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parsePriceElements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the xml for PriceElements.
    /// </summary>
    /// <param name="_componentXmlElement">
    /// An xml element containing information about the component.
    /// </param>
    /// <param name="_runtimeComponent">
    /// The runtime component.
    /// </param>
    protected void parsePriceElements(XmlElement _componentXmlElement, PCRuntimeComponent _runtimeComponent)
    {
        this.parseXmlElementCollection(_componentXmlElement, #PriceElement, runtimeXmlParsePriceElement, _runtimeComponent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseSubcomponents</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the xml for subcomponents.
    /// </summary>
    /// <param name="_componentXmlElement">
    /// An xml element containing information about the component.
    /// </param>
    /// <param name="_runtimeComponent">
    /// The runtime component.
    /// </param>
    protected void parseSubcomponents(XmlElement _componentXmlElement, PCRuntimeComponent _runtimeComponent)
    {
        this.parseXmlElementCollection(_componentXmlElement, #subcomponentElement, runtimeXmlParseSubcomponent, _runtimeComponent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PCRuntimeXmlParseComponent construct()
    {
        return new PCRuntimeXmlParseComponent();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>