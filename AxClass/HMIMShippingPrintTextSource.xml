<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMIMShippingPrintTextSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class HMIMShippingPrintTextSource
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isPrintFieldSet</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public boolean isPrintFieldSet(HMIMPrintField _printField)
    {
        switch (_printField)
        {
            case HMIMPrintField::LimitedQty:
                return this.limitedQty();

            case HMIMPrintField::MarinePollutant:
                return this.marinePollutant();

            case HMIMPrintField::EnvironmentalHazard:
                return this.environmentalHazard();
        }

        return this.isCustomPrintFieldSet(_printField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomPrintFieldSet</Name>
				<Source><![CDATA[
    [Replaceable]
    public boolean isCustomPrintFieldSet(HMIMPrintField _printField)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeForPrintField</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public Description255 getCodeForPrintField(HMIMPrintField _printField)
    {
        switch (_printField)
        {
            case HMIMPrintField::Class:
                return this.classCode();
                
            case HMIMPrintField::Division:
                return this.divisionCode();

            case HMIMPrintField::EMSCode:
                return this.emsCode();

            case HMIMPrintField::Identification:
                return this.identificationCode();

            case HMIMPrintField::LabelCode:
                return this.labelCode();

            case HMIMPrintField::PackDescription:
                return this.packCode();

            case HMIMPrintField::PackGroup:
                return this.packingGroupCode();

            case HMIMPrintField::StowageCode:
                return this.stowageCode();

            case HMIMPrintField::TechnicalName:
                return this.technicalNameCode();

            case HMIMPrintField::TransportCategory:
                return this.transportCategoryCode();

            case HMIMPrintField::TunnelCode:
                return this.tunnelCode();
        }

        return this.getCodeForCustomPrintField(_printField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeForCustomPrintField</Name>
				<Source><![CDATA[
    [Replaceable]
    public Description255 getCodeForCustomPrintField(HMIMPrintField _printField)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDescriptionForPrintField</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public Description255 getDescriptionForPrintField(HMIMPrintField _printField, LanguageId _languageId)
    {
        switch (_printField)
        {            
            case HMIMPrintField::Class:
                return HMIMClass::find(this.classCode()).Description;
                
            case HMIMPrintField::Division:
                if (HMIMMaterialDivisionUniqueInClassFeature::instance().isEnabled())
                {
                    return HMIMMaterialDivision::find(this.classCode(), this.divisionCode()).Description;
                }
                else
                {
                    return HMIMDivision::find(this.divisionCode()).Description;
                }

            case HMIMPrintField::EMSCode:
                return HMIMEMS::find(this.emsCode()).Description;

            case HMIMPrintField::Identification:
                HMIMIdentification identification = HMIMIdentification::find(this.identificationCode());
                return HMIMIdentificationTranslation::findByLanguage(identification.RecId, _languageId).IdentificationDescription;

            case HMIMPrintField::LabelCode:
                return HMIMLabel::find(this.labelCode()).Description;

            case HMIMPrintField::PackGroup:
                return HMIMPackingGroup::find(this.packingGroupCode()).Description;

            case HMIMPrintField::PackDescription:
                HMIMPackDescription packDescription = HMIMPackDescription::find(this.packCode());
                return HMIMPackDescriptionTranslation::findByLanguage(packDescription.RecId, _languageId).PackingDescription;

            case HMIMPrintField::StowageCode:
                return HMIMStowage::find(this.stowageCode()).Description;

            case HMIMPrintField::TechnicalName:
                HMIMTechnicalName technicalName = HMIMTechnicalName::find(this.technicalNameCode());
                return HMIMTechnicalNameTranslation::findByLanguage(technicalName.RecId, _languageId).TechnicalDescription;

            case HMIMPrintField::TransportCategory:
                return HMIMTransportCategory::find(this.transportCategoryCode()).Description;

            case HMIMPrintField::TunnelCode:
                return HMIMTunnel::find(this.tunnelCode()).Description;

            case HMIMPrintField::Flashpoint:
                return this.flashpoint();
        }

        return this.getDescriptionForCustomPrintField(_printField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDescriptionForCustomPrintField</Name>
				<Source><![CDATA[
    [Replaceable]
    public Description255 getDescriptionForCustomPrintField(HMIMPrintField _printField)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>record</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the source record.
    /// </summary>
    /// <returns>The source record.</returns>
    protected abstract Common record()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>regCode</Name>
				<Source><![CDATA[
    internal abstract HMIMRegCode regCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>identificationCode</Name>
				<Source><![CDATA[
    internal abstract HMIMIdentificationCode identificationCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>technicalNameCode</Name>
				<Source><![CDATA[
    internal abstract HMIMTechnicalNameCode technicalNameCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>classCode</Name>
				<Source><![CDATA[
    internal abstract HMIMClassCode classCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>divisionCode</Name>
				<Source><![CDATA[
    internal abstract HMIMDivisionCode divisionCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>packingGroupCode</Name>
				<Source><![CDATA[
    internal abstract HMIMPackingGroupCode packingGroupCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>transportCategoryCode</Name>
				<Source><![CDATA[
    internal abstract HMIMTransportCategoryCode transportCategoryCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>marinePollutant</Name>
				<Source><![CDATA[
    internal abstract HMIMMarinePollutant marinePollutant()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>environmentalHazard</Name>
				<Source><![CDATA[
    internal abstract HMIMEnviroDangerous environmentalHazard()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>limitedQty</Name>
				<Source><![CDATA[
    internal abstract HMIMLimitedQty limitedQty()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>tunnelCode</Name>
				<Source><![CDATA[
    internal abstract HMIMTunnelCode tunnelCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>labelCode</Name>
				<Source><![CDATA[
    internal abstract HMIMLabelCode labelCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>stowageCode</Name>
				<Source><![CDATA[
    internal abstract HMIMStowageCode stowageCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>emsCode</Name>
				<Source><![CDATA[
    internal abstract HMIMEMSCode emsCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>airType</Name>
				<Source><![CDATA[
    internal abstract HMIMAirType airType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>packInstCodePassenger</Name>
				<Source><![CDATA[
    internal abstract HMIMPackInstCode packInstCodePassenger()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>packInstCodeCargo</Name>
				<Source><![CDATA[
    internal abstract HMIMPackInstCode packInstCodeCargo()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>packCode</Name>
				<Source><![CDATA[
    internal abstract HMIMPackCode packCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>flashpoint</Name>
				<Source><![CDATA[
    internal abstract HMIMFlashpoint flashpoint()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>