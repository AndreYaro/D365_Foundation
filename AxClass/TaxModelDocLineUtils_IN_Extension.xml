<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineUtils_IN_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxModelDocLineUtils_IN_Extension</c> handles the Indian extensions for the <c>TaxModelDocLineUtils</c> class.
/// </summary>
[ExtensionOf(classStr(TaxModelDocLineUtils))]
final class TaxModelDocLineUtils_IN_Extension
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isSupportReturnLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the document line supports return transaction besides normal transaction
    /// </summary>
    /// <param name = "_documentLine">
    /// The document line information.
    /// </param>
    /// <returns>
    /// True if it supports return transaction besides normal transaction
    /// </returns>
    protected static boolean isSupportReturnLine(SalesPurchJournalLine _documentLine)
    {
        boolean ret = next isSupportReturnLine(_documentLine);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            switch (_documentLine.SourceTableId)
            {
                case tableNum(CustomsShippingBillTrans_IN) :
                case tableNum(CustomsVendBOETrans_IN) :
                    ret = true;
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSupportNormalLineOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the document line supports normal transaction only
    /// </summary>
    /// <param name = "_documentLine">
    /// The document line information.
    /// </param>
    /// <returns>
    /// True if it supports normal transaction only
    /// </returns>
    protected static boolean isSupportNormalLineOnly(SalesPurchJournalLine _documentLine)
    {
        boolean ret = next isSupportNormalLineOnly(_documentLine);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            switch (_documentLine.SourceTableId)
            {
                case tableNum(InventTransferJourLine) :
                case tableNum(PurchRFQCaseLine) :
                case tableNum(PurchRFQReplyLine) :
                case tableNum(SalesQuotationParmLine) :
                case tableNum(ProjProposalCost) :
                case tableNum(ProjProposalItem) :
                case tableNum(ProjProposalEmpl) :
                case tableNum(ProjProposalOnAcc) :
                case tableNum(ProjProposalRevenue) :
                case tableNum(ProjItemTransSale) :
                case tableNum(ProjEmplTransSale) :
                case tableNum(TSTimesheetLine) :
                case tableNum(ProjCostTransSale) :
                case tableNum(ProjOnAccTransSale) :
                case tableNum(ProjRevenueTransSale) :
                case tableNum(MarkupTrans) :
                    ret = true;
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>