<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransSelectorDeprWithCritCWReceipt</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventTransSelectorDeprWithCritCWReceipt</c> provides the select statement for the receipt inventory transactions for catch weight controlled items
/// that are elegible for depriciation and that are constrained by some subset of the inventory dimensions.
/// </summary>
[InventTransSelectorDepreciationAttribute(InventDirection::Receipt, NoYes::Yes, NoYes::Yes)]
class InventTransSelectorDeprWithCritCWReceipt extends InventTransSelectorDepreciation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>select</Name>
				<Source><![CDATA[
    public void select(InventTrans _inventTrans)
    {
        InventDim   inventDimJoin;
        #macro.QueryInventTransWhereClause
        where _inventTrans.InventTransOrigin == movement.inventTransOriginId()
                && _inventTrans.TransChildType   == movement.transChildType()
                && _inventTrans.TransChildRefId  == movement.transChildRefId()
                && _inventTrans.StatusIssue      >= fromStatusIssue
                && _inventTrans.StatusIssue      <= toStatusIssue
                && _inventTrans.StatusReceipt    >= fromStatusReceipt
                && _inventTrans.StatusReceipt    <= toStatusReceipt
                && ((   selectMarkedTrans && _inventTrans.MarkingRefInventTransOrigin != 0)
                    ||(!selectMarkedTrans && _inventTrans.MarkingRefInventTransOrigin == 0))
            #inventDimExistsJoin(_inventTrans.InventDimId, inventDimJoin, inventDimCriteria, inventDimParm);
        #endmacro     

        // Need to process none 'intercompany inventdim transfer' transaction firstly for intercompany transaction
        if (movement.interCompanyTransaction())
        {
            select noFetch forupdate _inventTrans
                order by StatusReceipt desc, StatusIssue desc, InterCompanyInventDimTransferred asc, PdsCWQty asc, InventDimId desc
                #QueryInventTransWhereClause
        }
        else
        {
            select noFetch forupdate _inventTrans
                order by StatusReceipt desc, StatusIssue desc, PdsCWQty asc, InventDimId desc
                #QueryInventTransWhereClause
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>