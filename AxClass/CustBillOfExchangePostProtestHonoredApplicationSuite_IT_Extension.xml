<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBillOfExchangePostProtestHonoredApplicationSuite_IT_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(CustBillOfExchangePostProtestHonored))]
public final class CustBillOfExchangePostProtestHonoredApplicationSuite_IT_Extension
{
}

]]></Declaration>
		<Methods>
			<Method>
				<Name>postNextStepCustSettlement</Name>
				<Source><![CDATA[
    protected void postNextStepCustSettlement(
        CustSettlement _custSettlement,
        CustVoucher _custVoucher,
        CustTrans _nextStepTrans)
    {
        next postNextStepCustSettlement(
            _custSettlement,
            _custVoucher,
            _nextStepTrans);

        if (FeatureStateProvider::isFeatureEnabled(CommissionSettlementOnPaymentsFeature::instance()))
        {
            this.reverseCommissions_IT(custTrans::find(_custSettlement.TransRecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reverseCommissions_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reverses commissions.
    /// </summary>
    /// <param name = "_custTrans">The <c>CustTrans</c> record to reverse commissions for.</param>
    public void reverseCommissions_IT(CustTrans _custTrans)
    {
        setprefix("@SYS334280");

        if (_custTrans)
        {
            CustBillOfExchangeInvoice boeInvoices;
            CustInvoiceJour custInvoiceJour;

            while select InvoiceId, InvoiceDate from boeInvoices
                where boeInvoices.BillOfExchangeId == _custTrans.BillOfExchangeID
                join custInvoiceJour
                    where custInvoiceJour.InvoiceId == boeInvoices.InvoiceId
                        && custInvoiceJour.InvoiceDate == boeInvoices.InvoiceDate
                        && custInvoiceJour.CommissionType_IT == CommissionType_IT::Payment
            {
                if (Commission_Settlement_IT::reverseAccruing(
                        ledgerVoucher,
                        _custTrans.Voucher,
                        custInvoiceJour,
                        true))
                {
                    info (strfmt("@ExtendedItallianLocalization:CommissionsReversedForInvoice", custInvoiceJour.InvoiceId, _custTrans.Voucher));
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>