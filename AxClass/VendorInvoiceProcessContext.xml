<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoiceProcessContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Establishes the current vendor invoice processing context.
/// </summary>
internal final class VendorInvoiceProcessContext implements System.IDisposable
{
    private static VendorInvoiceProcessContext instance;
    private boolean isWorkflowEventInProcess;
    private boolean doesContextSupportsParallelLineProcessing;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new VendorInvoiceProcessContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the singleton instance of <c>VendorInvoiceProcessContext</c>.
    /// </summary>
    /// <returns>The <c>VendorInvoiceProcessConext</c> instance.</returns>
    public static VendorInvoiceProcessContext instance()
    {
        if (!instance)
        {
            instance = new VendorInvoiceProcessContext();
        }
        
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsWorkflowEventInProcess</Name>
				<Source><![CDATA[
    public boolean parmIsWorkflowEventInProcess(boolean _isWorkflowEventInProcess = isWorkflowEventInProcess)
    {
        isWorkflowEventInProcess = _isWorkflowEventInProcess;

        return isWorkflowEventInProcess;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoesContextSupportsParallelLineProcessing</Name>
				<Source><![CDATA[
    public boolean parmDoesContextSupportsParallelLineProcessing(boolean _doesContextSupportsParallelLineProcessing = doesContextSupportsParallelLineProcessing)
    {
        doesContextSupportsParallelLineProcessing = _doesContextSupportsParallelLineProcessing;

        return doesContextSupportsParallelLineProcessing;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>