<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BarcodeEAN_UPC</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract public class BarcodeEAN_UPC extends Barcode
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasFixedLength</Name>
				<Source><![CDATA[
    /// <summary>
    /// Describes if the barcode has fixed length.
    /// </summary>
    /// <returns>true, if it has fixed length; otherwise, false.</returns>
    public boolean hasFixedLength()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCheckDigit</Name>
				<Source><![CDATA[
    protected BarCodeString insertCheckDigit(BarCodeString _barCodeString)
    {
        return _barCodeString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultFont</Name>
				<Source><![CDATA[
    public FontName defaultFont()
    {
        return 'BC UPC HD Wide';
    }

]]></Source>
			</Method>
			<Method>
				<Name>encode</Name>
				<Source><![CDATA[
    public void encode()
    {
        if (strLen(string) < this.strlen() - 1)
        {
            throw(error(strFmt("@SYS23264", funcName())));
        }

        if (strLen(string) > this.strlen())
        {
            throw(error(strFmt("@SYS23264", funcName())));
        }

        if (strLen(string) > MaxStringLength)
        {
            throw(error("@SYS90717"));
        }

        barcodeStr = this.encodeString(string);

        encoded = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>encodeString</Name>
				<Source><![CDATA[
    abstract BarCodeString encodeString(BarCodeString _stringIn)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>strlen</Name>
				<Source><![CDATA[
    abstract protected Integer strlen()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>fixedLength</Name>
				<Source><![CDATA[
    /// <summary>
    /// Describes the barcode's fixed length including check digit.
    /// </summary>
    /// <returns>The fixed length of the barcode.</returns>
    public Integer fixedLength()
    {
        return this.strlen();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCharacters</Name>
				<Source><![CDATA[
    protected boolean validateCharacters(BarCodeString barCodeString)
    {
        boolean ret =  true;

        setPrefix(strFmt("@SYS76950", this.barcodeType()));
        setPrefix(strFmt("@SYS76954", barCodeString));

        if (!isInteger(barCodeString))
        {
            ret = checkFailed("@SYS76955");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCheckDigit</Name>
				<Source><![CDATA[
    protected boolean validateCheckDigit(BarCodeString barCodeString)
    {
        boolean             ret = true;
        str                 tmp;
        BarCodeString       barCodeStringWithCheckDigit;

        if (strLen(barCodeString) != this.strlen())
        {
            return true;    // Actually an error, but has already been reported.
        }

        barcodeStr = this.encodeString(subStr(barCodeString,1,this.strlen()));

        barCodeStringWithCheckDigit = this.insertCheckDigit(barCodeString);
        tmp = Barcode::insertModulo10CheckDigit(barCodeStringWithCheckDigit, strLen(barCodeStringWithCheckDigit));
        if (tmp != barCodeStringWithCheckDigit)
        {
            ret = checkFailed(strFmt("@SCM:BarcodeError", 
                             subStr(barCodeStringWithCheckDigit, strLen(barCodeStringWithCheckDigit), 1), 
                             subStr(tmp, strLen(tmp), 1), 
                             barCodeString));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validFontInfo</Name>
				<Source><![CDATA[
    protected container validFontInfo()
    {
        container   res;

        res += [['BC UPC Narrow'     ,  33, '']];
        res += [['BC UPC Medium'     ,  65, '']];
        res += [['BC UPC Wide'       , 100, '']];
        res += [['BC UPC HD Narrow'  ,   8, '']];
        res += [['BC UPC HD Medium'  ,  15, '']];
        res += [['BC UPC HD Wide'    ,  25, '']];

        return res;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>