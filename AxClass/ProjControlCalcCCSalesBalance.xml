<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjControlCalcCCSalesBalance</Name>
	<SourceCode>
		<Declaration><![CDATA[
class   ProjControlCalcCCSalesBalance extends ProjControlCalc
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcTotals</Name>
				<Source><![CDATA[
        public void calcTotals(ProjControlPeriodTableColumn _projControlPeriodTableColumn, ProjEstimateColumn _estimateColumn)
    {;
        _projControlPeriodTableColumn.PLCostTotalCost                   = this.PLCostTotalCost(_projControlPeriodTableColumn);
        _projControlPeriodTableColumn.PLAccRevTotalAccRev               = this.PLAccRevTotalAccRev(_projControlPeriodTableColumn);
        _projControlPeriodTableColumn.WIPSalespriceTotal                = this.WIPSalespriceTotal(_projControlPeriodTableColumn, _estimateColumn);

        _projControlPeriodTableColumn.ConsumCostHourRate                = this.consumHourCostHourRate(_projControlPeriodTableColumn);

        _projControlPeriodTableColumn.WIPCostpriceTotal                 = this.WIPCostpriceTotal(_projControlPeriodTableColumn, _estimateColumn);
        _projControlPeriodTableColumn.WIPTotalGrossWIP                  = this.WIPTotalGrossWIP(_projControlPeriodTableColumn, _estimateColumn);
        _projControlPeriodTableColumn.WIPTotalNetWIP                    = this.WIPTotalNetWIP(_projControlPeriodTableColumn, _estimateColumn);

        _projControlPeriodTableColumn.PLTotalRevenue                    = this.PLTotalRevenue(_projControlPeriodTableColumn);
        _projControlPeriodTableColumn.PLTotalValueAddedAmount           = this.PLTotalValueAddedAmount(_projControlPeriodTableColumn);
        _projControlPeriodTableColumn.PLTotalGrossMargin                = this.PLTotalGrossMargin(_projControlPeriodTableColumn);

        _projControlPeriodTableColumn.GeneralHourRevenue                = this.generalHourRevenue(_projControlPeriodTableColumn);
        _projControlPeriodTableColumn.GeneralHourValuaddedHourRate      = this.generalHourValuaddedHourRate(_projControlPeriodTableColumn);
        _projControlPeriodTableColumn.GeneralHourCostHourRate           = this.generalHourCostHourRate(_projControlPeriodTableColumn);
        _projControlPeriodTableColumn.GeneralHourGrossMarginHourRate    = this.generalHourGrossMarginHourRate(_projControlPeriodTableColumn);
    }

]]></Source>
			</Method>
			<Method>
				<Name>eliminationAmountTurnover</Name>
				<Source><![CDATA[
        protected AmountMST eliminationAmountTurnover(ProjControlPeriodTable _projControlPeriod)
    {
        AmountMST ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodUpdateColumnAccEstimateSecond</Name>
				<Source><![CDATA[
        public void periodUpdateColumnAccEstimateSecond(ProjControlPeriodTable _projControlPeriodTable)
    {;

        if (this.parmCalledFromCode())
        {
            projControlPeriodTableColumnAccEstimate.PLCostAccCost = projControlColumnAccEstimatePrev.PLCostAccCost + this.parmAccruedCost();
        }
        else
        if (this.provisionForseeablesLosses(_projControlPeriodTable))
        {
            projControlPeriodTableColumnAccEstimate.PLCostAccCost = projControlColumnAccEstimatePrev.PLCostAccCost + accGrossMarginTemp;
        }

        projControlPeriodTableColumnAccEstimate.WIPCostpriceAccruedCost = this.WIPCostpriceAccruedCost(projControlPeriodTableColumnAccEstimate, ProjEstimateColumn::Accumulated);

        this.calcTotals(projControlPeriodTableColumnAccEstimate, ProjEstimateColumn::Accumulated);
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodUpdateColumnEstimateSecond</Name>
				<Source><![CDATA[
        public void periodUpdateColumnEstimateSecond(ProjControlPeriodTable _projControlPeriodTable)
    {;
        if (this.parmCalledFromCode())
        {
            projControlPeriodTableColumnEstimate.PLCostAccCost = this.parmAccruedCost();
        }
        else
        if (this.provisionForseeablesLosses(_projControlPeriodTable))
        {
            projControlPeriodTableColumnEstimate.PLCostAccCost = accGrossMarginTemp;
        }

        projControlPeriodTableColumnEstimate.WIPCostpriceAccruedCost = this.WIPCostpriceAccruedCost(projControlPeriodTableColumnEstimate, ProjEstimateColumn::Estimate);

        this.calcTotals(projControlPeriodTableColumnEstimate, ProjEstimateColumn::Estimate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLAccRevAccOnAcc</Name>
				<Source><![CDATA[
        public AmountMST PLAccRevAccOnAcc(ProjControlPeriodTable _projControlPeriodTable, ProjEstimateColumn _estimateColumn)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLAccRevSalesValue</Name>
				<Source><![CDATA[
        public AmountMST PLAccRevSalesValue(ProjControlPeriodTable          _projControlPeriodTable,
                                        ProjEstimateColumn              _estimateColumn,
                                        ProjControlPeriodTableColumn    _projControlPeriodTableColumnAccEstimate = _projControlPeriodTableColumnAccEstimate)
    {;
        if (_estimateColumn == ProjEstimateColumn::Total)
        {
            return super(_projControlPeriodTable, _estimateColumn);
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLCostAccCost</Name>
				<Source><![CDATA[
        // This method is only called in the second round
    public AmountMST PLCostAccCost(ProjControlPeriodTable          _projControlPeriodTable,
                                   ProjEstimateColumn              _estimateColumn,
                                   ProjControlPeriodTableColumn    _projControlPeriodTableColumnAccEstimate = _projControlPeriodTableColumnAccEstimate)
    {
        switch (_estimateColumn)
        {
            case ProjEstimateColumn::Estimate:
                return 0;

            case ProjEstimateColumn::Accumulated:
                return  projControlColumnAccEstimatePrev.PLCostAccCost - 0;

            case ProjEstimateColumn::Total:
                break;
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLInvRevInvoiceOnAcc</Name>
				<Source><![CDATA[
        public AmountMST PLInvRevInvoiceOnAcc(ProjControlPeriodTable _projControlPeriodTable, ProjEstimateColumn _estimateColumn)
    {;
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnover</Name>
				<Source><![CDATA[
        protected AmountMST WIPAccruedTurnover(ProjControlPeriodTable _projControlPeriod)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnoverCredit</Name>
				<Source><![CDATA[
        public boolean WIPAccruedTurnoverCredit(ProjControlPeriodTable _projControlPeriod)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnoverDebit</Name>
				<Source><![CDATA[
        public boolean WIPAccruedTurnoverDebit(ProjControlPeriodTable _projControlPeriod)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnoverProd</Name>
				<Source><![CDATA[
        protected AmountMST WIPAccruedTurnoverProd(ProjControlPeriodTable _projControlPeriod)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnoverProfit</Name>
				<Source><![CDATA[
        protected AmountMST WIPAccruedTurnoverProfit(ProjControlPeriodTable _projControlPeriod)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPCost</Name>
				<Source><![CDATA[
        protected AmountMST WIPCost(ProjControlPeriodTable _projControlPeriod)
    {
        return _projControlPeriod.ActualCostAmount - this.WIPCostAcc();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>