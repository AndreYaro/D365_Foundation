<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUseDimOfWHSInventReserveToggle</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventUseDimOfWHSInventReserveToggle</c> class handles the flighting logic to use dimension values from <c>WHSInventReserve</c>.
/// </summary>
public class InventUseDimOfWHSInventReserveToggle implements WHSIFeatureToggle
{
    static private InventUseDimOfWHSInventReserveToggle singleton;
    private boolean isDataUpgradeCompleted;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        isDataUpgradeCompleted = this.hasDataUpgradeCompleted();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasDataUpgradeCompleted</Name>
				<Source><![CDATA[
    private boolean hasDataUpgradeCompleted()
    {
        return WHSInventReserveInventDimEnable::hasDataUpgradeCompleted();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the feature is enabled.
    /// </summary>
    /// <returns>
    /// true if the feature is enabled; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean isEnabled()
    {
        return this.enabled() && isDataUpgradeCompleted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabled</Name>
				<Source><![CDATA[
    private boolean enabled()
    {
        const int MaxLengthOfFlightNameInCarbon = 64;
        SysFlightName flightName = classId2Name(classIdGet(this));
        SysFlightName carbonFlightName = subStr(flightName, 1, MaxLengthOfFlightNameInCarbon);
        
        if (flightName == carbonFlightName)
        {
            return !isFlightEnabled(flightName);
        }
        return !isFlightEnabled(flightName) && !isFlightEnabled(carbonFlightName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>InventUseDimOfWHSInventReserveToggle</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    static public InventUseDimOfWHSInventReserveToggle instance()
    {
        if (!singleton)
        {
            singleton = new InventUseDimOfWHSInventReserveToggle();
        }
        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the state of the feature.
    /// </summary>
    [Hookable(false)]
    static public void clearInstance()
    {
        singleton = null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>