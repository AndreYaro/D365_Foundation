<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>tmsDeliveryModeSyncAgentSales</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Synchronizes TMS specific delivery mode data from sales order header.
/// </summary>
public class tmsDeliveryModeSyncAgentSales extends TMSDeliveryModeSyncAgent
{
    SalesTable salesTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSalesTable</Name>
				<Source><![CDATA[
    public SalesTable parmSalesTable(SalesTable _salesTable = salesTable)
    {
        salesTable = _salesTable;

        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data.
    /// </summary>
    /// <param name="_tmsSalesTable">
    /// A table <c>TMSSalesTable</c> that should be synchronized.
    /// </param>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    private void syncData(
        TMSSalesTable   _tmsSalesTable,
        DlvModeId       _deliveryModeId
    )
    {
        _tmsSalesTable.setCarrierFieldsFromDlvMode(_deliveryModeId);
        _tmsSalesTable.setCarrierCustomerAccountNumber(this.salesTable.CustAccount);

        _tmsSalesTable.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncOnInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data, when the sales order header is inserted.
    /// </summary>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    public void syncOnInsert(DlvModeId _deliveryModeId)
    {
        TMSSalesTable   tmsSalesTable;
        Counter         logCount = infologLine();

        try
        {
            ttsbegin;

            tmsSalesTable.initFromSalesTable(salesTable.SalesId);

            this.syncData(tmsSalesTable, _deliveryModeId);

            ttscommit;
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::lastDuplicateKeyViolatingTable() == tmsSalesTable.TableId)
            {
                infolog.clear(logCount);
                this.syncOnUpdate(_deliveryModeId);
            }
            else
            {
                throw Exception::DuplicateKeyException;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncOnUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data, when the sales order header is updated.
    /// </summary>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    public void syncOnUpdate(DlvModeId _deliveryModeId)
    {
        TMSSalesTable tmsSalesTable;

        ttsbegin;

        tmsSalesTable = TMSSalesTable::find(salesTable.SalesId, true);

        if (tmsSalesTable.RecId == 0)
        {
            this.syncOnInsert(_deliveryModeId);
        }
        else
        {
            this.syncData(tmsSalesTable, _deliveryModeId);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TMSDeliveryModeSyncAgentSales construct()
    {
        return new TMSDeliveryModeSyncAgentSales();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes a new instance of the <c>TMSDeliveryModeSyncAgentSales</c> class that is based on a table <c>SalesTable</c>
    /// </summary>
    /// <param name="_salesTable">
    /// A table <c>SalesTable</c> that should be syncronized
    /// </param>
    /// <returns>
    /// A new instance of the <c>TMSDeliveryModeSyncAgentSales</c> class.
    /// </returns>
    public static TMSDeliveryModeSyncAgentSales newFromBuffer(SalesTable _salesTable)
    {
        TMSDeliveryModeSyncAgentSales tmsDeliveryModeSyncAgentSales;

        tmsDeliveryModeSyncAgentSales = TMSDeliveryModeSyncAgentSales::construct();
        tmsDeliveryModeSyncAgentSales.parmSalesTable(_salesTable);

        return tmsDeliveryModeSyncAgentSales;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>