<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransOpenLedgerCovTypeInvoiceMarked</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CustVendTransOpenLedgerCovTypeInvoiceMarked extends CustVendTransOpenLedgerCovTypeInvoice
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateLedgerCov</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    internal void updateLedgerCov()
    {
        AmountCur invoiceAmountCur = contract.getCustVendTransOpen().AmountCur;
        AmountCur invoiceAmountCurBalance = contract.getCustVendTransOpen().AmountCur;

        SpecTrans specTrans;

        while select specTrans
            where specTrans.RefCompany == contract.getCustVendTransOpen().DataAreaId
                && specTrans.RefTableId == contract.getCustVendTransOpen().TableId
                && specTrans.RefRecId == contract.getCustVendTransOpen().RecId
                && specTrans.SpecTableId == tableNum(LedgerJournalTrans)
        {
            LedgerJournalTrans ledgerJournalTrans;

            changecompany(specTrans.SpecCompany)
            {
                select firstonly CurrencyCode
                    from ledgerJournalTrans
                    where ledgerJournalTrans.RecId == specTrans.SpecRecId;
            }

            if (contract.getCustVendTrans().CurrencyCode == ledgerJournalTrans.CurrencyCode)
            {
                TransDate paymentTransDate = ledgerJournalTrans.TransDate;
                paymentTransDate = CustVendTransOpenLedgerCovType::calculateMinimumPaymentDate(paymentTransDate);

                AmountCur paymentAmountCur = specTrans.Balance01;
                AmountCur paymentAndCashDiscountAmountCur = specTrans.Balance01 + specTrans.CashDiscToTake;

                if (abs(invoiceAmountCur) >= abs(paymentAndCashDiscountAmountCur))
                {
                    this.updateLedgerCovForInvoiceDetail(paymentTransDate, paymentAmountCur);
                    invoiceAmountCurBalance -= paymentAndCashDiscountAmountCur;
                }
                else
                {
                    this.updateLedgerCovForInvoiceDetail(paymentTransDate, invoiceAmountCur);
                    invoiceAmountCurBalance -= invoiceAmountCur;
                }
            }
        }

        if (contract.isInvoiceBalanceRemaining(invoiceAmountCurBalance))
        {
            this.updateLedgerCovForInvoice(invoiceAmountCurBalance);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>