<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSChangeWorkPriorityService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The service class for executing the 'Change work priority' business operation.
/// </summary>
class WHSChangeWorkPriorityService extends WHSChangeWorkDetailsServiceBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>startOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Entry point for the business operation.
    /// </summary>
    /// <param name="_dataContract">The data contract object reference.</param>
    public void startOperation(WHSChangeWorkPriorityDataContract _dataContract)
    {
        this.loopWorkLinesAndDoOperation(_dataContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the actual business operation. Overridden to do the actual implementation.
    /// </summary>
    /// <param name="_workId">Work Id to modify.</param>
    /// <param name="_dataContract">The data contract object reference.</param>
    protected void doOperation(WHSWorkId _workId, WHSChangeWorkDetailsDataContract _dataContract)
    {
        var dataContract = _dataContract as WHSChangeWorkPriorityDataContract;
        this.updateWorkPriority(_workId, dataContract.parmNewWorkPriority());
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationFailedErrorMsg</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the message for errors in the operation.
    /// </summary>
    /// <returns>The message to use for formatting the user error message.</returns>
    protected str operationFailedErrorMsg()
    {
        return "@WAX:WorkPriorityUpdateFailed";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWorkPriority</Name>
				<Source><![CDATA[
    private void updateWorkPriority(WHSWorkId _workId, WHSWorkPriority _newPriority)
    {
        ttsbegin;
        var workTable = WHSWorkTable::find(_workId, true);
        if (workTable.WorkPriority != _newPriority)
        {
            workTable.WorkPriority = _newPriority;
            workTable.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
