<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomersOverCreditLimitSummaryQueryFilterStrategy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>CustomersOverCreditLimitSummaryQueryFilterStrategy</c> is the filter strategy for <c>CustomersOverCreditLimitSummaryQuery</c> query
/// </summary>
[SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(CustomersOverCreditLimitSummaryQuery))]
class CustomersOverCreditLimitSummaryQueryFilterStrategy extends SysFilterStructureStrategyQuery implements SysIFilterStructureStrategy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>resolve</Name>
				<Source><![CDATA[
    protected boolean resolve(SysIFilterValueType _valueType)
    {
        boolean isResolved = false;

        switch (_valueType.parmTypeIdentifier())
        {
            case extendedTypeNum(SelectableDataArea):

                this.addLinkFromTableToFilter(query.dataSourceTable(tableNum(CustTable)), fieldNum(CustTable, DataAreaId));

                isResolved = true;

                break;

            case tableNum(StatRepInterval):
                this.addLinkFromTableToFilter(query.dataSourceTable(tableNum(StatRepInterval)), fieldNum(StatRepInterval, RecId));
                isResolved = true;
                break;

            case extendedTypeNum(CustAccount):
            case extendedTypeNum(MaximumString):
                this.addLinkFromTableToFilter(query.dataSourceTable(tableNum(CustTable)), fieldNum(CustTable, AccountNum));
                isResolved = true;
                break;
        }

        return isResolved;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>