<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjWorkBreakdownStructureContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used as a data contract class to pass parameters to <c>ProjWorkBreakdownStructureHelper</c> class.
/// </summary>
class ProjWorkBreakdownStructureContract
{
    ProjPlanVersion targetTask;
    ProjPlanVersion upperSiblingTask;
    HierarchyIdBase hierarchyId;
    CalendarId calendarId;
    Hours calendarStandardWorkDayHours;
    ProjWBSType wbsType;
    boolean autoScheduling;
    boolean updateTempTable;
    ProjHierarchySorting upperSiblingHierarchySorting;
    ProjHierarchyTemp hierarchyTemp;
    ListEnumerator taskToDeleteListEnum;
    ListEnumerator taskToIndentListEnum;
    ListEnumerator taskToOutdentListEnum;
    int nextSelectionGroup;
    int currentHierarchyMaxLevel;
    int moveTaskDeltaPosition;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmTargetTask</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific target Task.
    /// </summary>
    /// <param name = "_targetTask">Target task <c>ProjPlanVersion</c> table buffer.</param>
    /// <returns>Target task <c>ProjPlanVersion</c> table buffer.</returns>
    public ProjPlanVersion parmTargetTask(ProjPlanVersion _targetTask = targetTask)
    {
        targetTask = _targetTask;
        return targetTask;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpperSiblingTask</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific upper sibling Task.
    /// </summary>
    /// <param name = "_upperSiblingTask">Target task's sibling task <c>ProjPlanVersion</c> table buffer.</param>
    /// <returns>Target task's sibling task <c>ProjPlanVersion</c> table buffer.</returns>
    public ProjPlanVersion parmUpperSiblingTask(ProjPlanVersion _upperSiblingTask = upperSiblingTask)
    {
        upperSiblingTask = _upperSiblingTask;
        return upperSiblingTask;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHierarchyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific hierarchy identifier.
    /// </summary>
    /// <param name = "_hierarchyId">Target task hierarchy identifier.</param>
    /// <returns>Target task hierarchy identifier.</returns>
    public HierarchyIdBase parmHierarchyId(HierarchyIdBase _hierarchyId = hierarchyId)
    {
        hierarchyId = _hierarchyId;
        return hierarchyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalendarId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific calendar identifier.
    /// </summary>
    /// <param name = "_calendarId">Calendar identifier.</param>
    /// <returns>Calendar identifier.</returns>
    public CalendarId parmCalendarId(CalendarId _calendarId = calendarId)
    {
        calendarId = _calendarId;
        return calendarId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalendarStandardWorkDayHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific calendar standard work day hours.
    /// </summary>
    /// <param name = "_calendarId">Calendar standard work day hours.</param>
    /// <returns>Calendar standard work day hours.</returns>
    public Hours parmCalendarStandardWorkDayHours(Hours _calendarStandardWorkDayHours = calendarStandardWorkDayHours)
    {
        calendarStandardWorkDayHours = _calendarStandardWorkDayHours;
        return calendarStandardWorkDayHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWbsType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific <c>ProjWBSType</c> enumerator.
    /// </summary>
    /// <param name = "_projWBSType"><c>ProjWBSType</c> enumerator.</param>
    /// <returns><c>ProjWBSType</c> enumerator.</returns>
    public ProjWBSType parmWbsType(ProjWBSType _wbsType = wbsType)
    {
        wbsType = _wbsType;
        return wbsType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAutoScheduling</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific WBS auto scheduling configuration boolean.
    /// </summary>
    /// <param name = "_autoScheduling">Whether the specific WBS auto scheduling is turn on or off.</param>
    /// <returns>true if WBS auto scheduling is set to true; otherwise, false.</returns>
    public boolean parmAutoScheduling(boolean _autoScheduling = autoScheduling)
    {
        autoScheduling = _autoScheduling;
        return autoScheduling;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateTempTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set whether to update <c>ProjHierarchyTemp</c> table.
    /// </summary>
    /// <param name = "_updateSortingTable">Whether to update <c>ProjHierarchyTemp</c> table.</param>
    /// <returns>true if <c>ProjHierarchyTemp</c> table should be updated; otherwise, false.</returns>
    public boolean parmUpdateTempTable(boolean _updateTempTable = updateTempTable)
    {
        updateTempTable = _updateTempTable;
        return updateTempTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpperSiblingHierarchySorting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific upper sibling task <c>ProjHierarchySorting</c> table buffer.
    /// </summary>
    /// <param name = "_upperSiblingHierarchySorting"><c>ProjHierarchySorting</c> table buffer.</param>
    /// <returns>Upper sibling task <c>ProjHierarchySorting</c> table buffer.</returns>
    public ProjHierarchySorting parmUpperSiblingHierarchySorting(ProjHierarchySorting _upperSiblingHierarchySorting = upperSiblingHierarchySorting)
    {
        upperSiblingHierarchySorting = _upperSiblingHierarchySorting;
        return upperSiblingHierarchySorting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHierarchyTemp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the specific <c>ProjHierarchyTemp</c> table buffer.
    /// </summary>
    /// <param name = "_hierarchyTemp"><c>ProjHierarchyTemp</c> table buffer.</param>
    /// <returns><c>ProjHierarchyTemp</c> table buffer.</returns>
    public ProjHierarchyTemp parmHierarchyTemp(ProjHierarchyTemp _hierarchyTemp = hierarchyTemp)
    {
        hierarchyTemp = _hierarchyTemp;
        return hierarchyTemp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaskToDeleteListEnum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the list enumerator of the tasks to delete. This list should base on Type:Int64 of the <c>ProjPlanVersion</c> record identifier.
    /// </summary>
    /// <param name = "_taskToDeleteListEnum">The list enumerator of the tasks to delete.</param>
    /// <returns>The list enumerator of the tasks to delete.</returns>
    public ListEnumerator parmTaskToDeleteListEnum(ListEnumerator _taskToDeleteListEnum = taskToDeleteListEnum)
    {
        taskToDeleteListEnum = _taskToDeleteListEnum;
        return taskToDeleteListEnum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaskToIndentListEnum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the list enumerator of the tasks to indent. This list should base on Type:Int64 of the <c>ProjPlanVersion</c> record identifier.
    /// </summary>
    /// <param name = "_taskToIndentListEnum">The list enumerator of the tasks to indent.</param>
    /// <returns>The list enumerator of the tasks to indent.</returns>
    public ListEnumerator parmTaskToIndentListEnum(ListEnumerator _taskToIndentListEnum = taskToIndentListEnum)
    {
        taskToIndentListEnum = _taskToIndentListEnum;
        return taskToIndentListEnum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaskToOutdentListEnum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the list enumerator of the tasks to outdent. This list should base on Type:Int64 of the <c>ProjPlanVersion</c> record identifier.
    /// </summary>
    /// <param name = "_taskToOutdentListEnum">The list enumerator of the tasks to outdent.</param>
    /// <returns>The list enumerator of the tasks to outdent.</returns>
    public ListEnumerator parmTaskToOutdentListEnum(ListEnumerator _taskToOutdentListEnum = taskToOutdentListEnum)
    {
        taskToOutdentListEnum = _taskToOutdentListEnum;
        return taskToOutdentListEnum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNextSelectionGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the next selection group as an unique number for indent and outdent operation.
    /// </summary>
    /// <param name = "_nextSelectionGroup">Next selection group value.</param>
    /// <returns>Next selection group value.</returns>
    public int parmNextSelectionGroup(int _nextSelectionGroup = nextSelectionGroup)
    {
        nextSelectionGroup = _nextSelectionGroup;
        return nextSelectionGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrentHierarchyMaxLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the current WBS hierarchy max level.
    /// </summary>
    /// <param name = "_currentHierarchyMaxLevel">The current WBS hierarchy max level.</param>
    /// <returns>The current WBS hierarchy max level.</returns>
    public int parmCurrentHierarchyMaxLevel(int _currentHierarchyMaxLevel = currentHierarchyMaxLevel)
    {
        currentHierarchyMaxLevel = _currentHierarchyMaxLevel;
        return currentHierarchyMaxLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMoveTaskDeltaPosition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Move task delta position.
    /// </summary>
    /// <param name = "_moveTaskDeltaPosition">The delta position for the task to be moved.</param>
    /// <returns>The delta position for the task to be moved.</returns>
    /// <remarks>
    /// Setting to 1 to move down.
    /// Setting to -1 to move up.
    /// </remarks>
    public int parmMoveTaskDeltaPosition(int _moveTaskDeltaPosition = moveTaskDeltaPosition)
    {
        moveTaskDeltaPosition = _moveTaskDeltaPosition;
        return moveTaskDeltaPosition;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>