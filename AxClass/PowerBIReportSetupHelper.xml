<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PowerBIReportSetupHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class exists to share common logic for setting up embedded pbi reports.
/// </summary>
public class PowerBIReportSetupHelper
{
    FormGroupControl groupControl;
    PowerBIReportControl reportControl;
    str resourceName;
    str pageName;
    str companyFilterTableName = 'Entities';
    str companyFilterColumnName = 'ID';
    boolean isCrossCompany = false;
    boolean showNavContentPane = true;
    boolean showFilterPane = true;

    List basicFilters = new List(Types::Class);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        PBIReportHelper::initializeReportControlWithReportRunParams(this.parmGroupControl(), this.buildReportRunParams());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowFilterPane</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicate to show or hide filter pane.
    /// </summary>
    /// <returns><c>true</c>Show filter pane. Otherwise, hide it.</returns>
    public boolean parmShowFilterPane(boolean _showFilterPane = showFilterPane)
    {
        showFilterPane = _showFilterPane;
        return showFilterPane;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowNavContentPane</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicate to show or hide navigation content pane.
    /// </summary>
    /// <returns><c>true</c>Show it. Otherwise, hide it.</returns>
    public boolean parmShowNavContentPane(boolean _showNavContentPane = showNavContentPane)
    {
        showNavContentPane = _showNavContentPane;
        return showNavContentPane;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPageName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicate the default report page name.
    /// </summary>
    /// <returns>the default report page name</returns>
    public str parmPageName(str _pageName = pageName)
    {
        pageName = _pageName;
        return _pageName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyFilterTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The default company filter Power BI table name
    /// </summary>
    /// <returns>default table name Entities</returns>
    public str parmCompanyFilterTableName(str _companyFilterTableName = companyFilterTableName)
    {
        companyFilterTableName = _companyFilterTableName;
        return companyFilterTableName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyFilterColumnName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The default company filter Power BI column name
    /// </summary>
    /// <returns>default column name ID</returns>
    public str parmCompanyFilterColumnName(str _companyFilterColumnName = companyFilterColumnName)
    {
        companyFilterColumnName = _companyFilterColumnName;
        return companyFilterColumnName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBasicFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// The pre-defined basic filters
    /// </summary>
    /// <returns>The list of basic filters</returns>
    public List parmBasicFilters(List _basicFilters = basicFilters)
    {
        basicFilters = _basicFilters;
        return basicFilters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCrossCompany</Name>
				<Source><![CDATA[
    public boolean parmIsCrossCompany(boolean _isCrossCompany = isCrossCompany)
    {
        isCrossCompany = _isCrossCompany;
        return isCrossCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupControl</Name>
				<Source><![CDATA[
    public FormGroupControl parmGroupControl(FormGroupControl _groupControl = groupControl)
    {
        groupControl = _groupControl;
        return groupControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportControl</Name>
				<Source><![CDATA[
    [SysObsolete('Behavior is part of platfrom api PBIReportHelper::initializeReportControlWithReportRunParams', false, 30\06\2018)]
    public PowerBIReportControl parmReportControl(PowerBIReportControl _reportControl = reportControl)
    {
        reportControl = _reportControl;
        
        if(!reportControl)
        {
            reportControl = this.parmGroupControl().addControlEx(classStr(PowerBIReportControl), strFmt('%1_PowerBIReportControl', this.parmGroupControl().name()));
            reportControl.heightMode(FormHeight::SizeToContent);
            reportControl.widthMode(FormWidth::SizeToContent);
        }

        return reportControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceName</Name>
				<Source><![CDATA[
    public str parmResourceName(str _resourceName = resourceName)
    {
        resourceName = _resourceName;
        return resourceName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PowerBIReportSetupHelper construct()
    {
        return new PowerBIReportSetupHelper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildReportRunParams</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the <c>PBIReportRunParameters</c>  object from the settings passed in.
    /// </summary>
    /// <returns>The report run parameters.</returns>
    protected PBIReportRunParameters buildReportRunParams()
    {
        // populate and return the report run parameters for the session
        PBIReportRunParameters reportRunParams = new PBIReportRunParameters();
        reportRunParams.parmResourceName(this.parmResourceName());
        reportRunParams.parmShowFilterPane(this.parmShowFilterPane());
        reportRunParams.parmShowNavContentPane(this.parmShowNavContentPane());
        reportRunParams.parmPageName(this.parmPageName());
        reportRunParams.parmIsEmbedded(true);
        reportRunParams.parmApplyCompanyFilter(!this.parmIsCrossCompany());
        reportRunParams.parmBasicFilters(this.parmBasicFilters());
        return reportRunParams;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>