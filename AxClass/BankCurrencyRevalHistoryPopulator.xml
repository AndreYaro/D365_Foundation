<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankCurrencyRevalHistoryPopulator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankCurrencyRevalHistoryPopulator</c> class handles the population of the historical record for the bank - foreign currency revaluation process.
/// </summary>
internal final class BankCurrencyRevalHistoryPopulator
{
    private BankCurrencyRevalTmp bankCurrencyRevalTmp;
    private Voucher subledgerVoucher;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBankCurrencyRevalTmpAndVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>BankCurrencyRevalHistoryPopulator</c> class given a populated <c>BankCurrencyRevalTmp</c> table buffer and the subledger voucher
    /// value used in the posting of the transactions.
    /// </summary>
    /// <param name = "_bankCurrencyRevalTmp">A populated <c>BankCurrencyRevalTmp</c> table buffer containing the currency revaluation data.</param>
    /// <param name = "_subledgerVoucher">The subledger voucher value used in the posting of the transactions.</param>
    /// <returns>A new instance of the <c>BankCurrencyRevalHistoryPopulator</c> class.</returns>
    internal static BankCurrencyRevalHistoryPopulator newFromBankCurrencyRevalTmpAndVoucher(BankCurrencyRevalTmp _bankCurrencyRevalTmp, Voucher _subledgerVoucher)
    {
        BankCurrencyRevalHistoryPopulator historyPopulator = new BankCurrencyRevalHistoryPopulator();
        historyPopulator.bankCurrencyRevalTmp = _bankCurrencyRevalTmp;
        historyPopulator.subledgerVoucher = _subledgerVoucher;

        return historyPopulator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateBankCurrencyRevalHistory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates a <c>BankCurrencyRevalHistory</c> table buffer with values primarily stored on the <c>BankCurrencyRevalTmp</c> table buffer.
    /// </summary>
    /// <returns>The populated <c>BankCurrencyRevalHistory</c> table buffer.</returns>
    internal BankCurrencyRevalHistory populateBankCurrencyRevalHistory()
    {
        BankCurrencyRevalHistory bankCurrencyRevalHistory;

        bankCurrencyRevalHistory.LegalEntity = curExt();
        bankCurrencyRevalHistory.BankAccountId = bankCurrencyRevalTmp.BankAccountId;
        bankCurrencyRevalHistory.ExchangeRateType = bankCurrencyRevalTmp.ExchangeRateType;
        bankCurrencyRevalHistory.ReportingCurrencyExchangeRateType = bankCurrencyRevalTmp.ReportingCurrencyExchangeRateType;
        bankCurrencyRevalHistory.TransDate = bankCurrencyRevalTmp.TransDate;
        bankCurrencyRevalHistory.ExchangeRateDate = bankCurrencyRevalTmp.ExchangeRateDate;
        bankCurrencyRevalHistory.SubledgerVoucher = subledgerVoucher;
        bankCurrencyRevalHistory.Ledger = Ledger::current();

        return bankCurrencyRevalHistory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>