<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTransferPriceParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class holds the parameters used for calculation of project transfer prices.
/// </summary>
class ProjTransferPriceParameters
{
    ResourceRecId resourceRecId;
    DataAreaId projectDataAreaId;
    ProjectRecId projectRecId;
    RefRecId projectCategoryRecId;
    ProjLinePropertyId linePropertyId;
    TransDate transDate;
    DataAreaId resourceDataAreaId;
    CurrencyCode transferCurrencyCode;
    ProjInvoiceTableRecId contractRecId;
    CostPrice costPrice;
    SalesPrice salesPrice;
    ProjTransferPriceTransType transferPriceTransType;
    ResourceCategoryRecId resourceCategoryRecId;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmResourceRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the resource record identifier.
    /// </summary>
    /// <param name = "_resourceRecId">Resource record identifier.</param>
    /// <returns>Resource record identifier.</returns>
    public ResourceRecId parmResourceRecId(ResourceRecId _resourceRecId = resourceRecId)
    {
        if (_resourceRecId != resourceRecId)
        {
            resourceRecId = _resourceRecId;

            // In the case of set, set resourceDataAreaId as well.
            if (_resourceRecId != 0)
            {
                resourceDataAreaId = ResourceFacade::getLegalEntityId(resourceRecId);

                if (!resourceDataAreaId)
                {
                    resourceDataAreaId = curExt();
                }
            }
        }

        return resourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjectDataAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the project data area identifier.
    /// </summary>
    /// <param name = "_projectDataAreaId">Project data area identifier.</param>
    /// <returns>Project data area identifier.</returns>
    public DataAreaId parmProjectDataAreaId(DataAreaId _projectDataAreaId = projectDataAreaId)
    {
        projectDataAreaId = _projectDataAreaId;
        return projectDataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjectRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the project record identifier.
    /// </summary>
    /// <param name = "_projectRecId">Project record identifier.</param>
    /// <returns>Project record identifier.</returns>
    public ProjectRecId parmProjectRecId(ProjectRecId _projectRecId = projectRecId)
    {
        if (_projectRecId != projectRecId)
        {
            // In the case of set, if set contractRecId as well.
            projectRecId = _projectRecId;
            contractRecId = ProjInvoiceTable::find(ProjTable::findRecId(_projectRecId).ProjInvoiceProjId).RecId;
        }

        return projectRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjectCategoryRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the project category record identifier.
    /// </summary>
    /// <param name = "_projectCategoryRecId">Project category record identifier.</param>
    /// <returns>Project category record identifier.</returns>
    public RefRecId parmProjectCategoryRecId(RefRecId _projectCategoryRecId = projectCategoryRecId)
    {
        projectCategoryRecId = _projectCategoryRecId;
        return projectCategoryRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePropertyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the line property identifier.
    /// </summary>
    /// <param name = "_linePropertyId">Line property identifier.</param>
    /// <returns>Line property identifier.</returns>
    public ProjLinePropertyId parmLinePropertyId(ProjLinePropertyId _linePropertyId = linePropertyId)
    {
        linePropertyId = _linePropertyId;
        return linePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the transaction date.
    /// </summary>
    /// <param name = "_transDate">Transaction date.</param>
    /// <returns>Transaction date.</returns>
    public TransDate parmTransDate(TransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceDataAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the resource data area ID.
    /// </summary>
    /// <param name = "_resourceDataAreaId">resource data area ID.</param>
    /// <returns>Resource data area ID.</returns>
    public DataAreaId parmResourceDataAreaId()
    {
        return resourceDataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the transfer currency code.
    /// </summary>
    /// <param name = "_transferCurrency">Transfer currency code.</param>
    /// <returns>Transfer currency code.</returns>
    public CurrencyCode parmTransferCurrencyCode(CurrencyCode _transferCurrencyCode = transferCurrencyCode)
    {
        transferCurrencyCode = _transferCurrencyCode;
        return transferCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContractRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the contract record identifier.
    /// </summary>
    /// <param name = "_contractRecId">Contract record identifier.</param>
    /// <returns>Contract record identifier.</returns>
    public ProjInvoiceTableRecId parmContractRecId(ProjInvoiceTableRecId _contractRecId = contractRecId)
    {
        if (_contractRecId == contractRecId)
        {
            // If contractRecId is not defined and projectRecId is defined, then calculates the contract record ID. 
            if (contractRecId == 0 && projectRecId)
            {
                contractRecId = ProjInvoiceTable::find(ProjTable::findRecId(projectRecId).ProjInvoiceProjId).RecId;
            }
        }
        else
        {
            contractRecId = _contractRecId;
        }
        return contractRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the cost price.
    /// </summary>
    /// <param name = "_costPrice">Cost price.</param>
    /// <returns>Cost price.</returns>
    public CostPrice parmCostPrice(CostPrice _costPrice = costPrice)
    {
        costPrice = _costPrice;
        return costPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the sales price.
    /// </summary>
    /// <param name = "_salesPrice">Sales price.</param>
    /// <returns>Sales price.</returns>
    public SalesPrice parmSalesPrice(SalesPrice _salesPrice = salesPrice)
    {
        salesPrice = _salesPrice;
        return salesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferPriceTransType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the transfer price transaction type.
    /// </summary>
    /// <param name = "_transferPriceTransType">Transfer price transaction type.</param>
    /// <returns>Transfer price transaction type.</returns>
    public ProjTransferPriceTransType parmTransferPriceTransType(ProjTransferPriceTransType _transferPriceTransType = transferPriceTransType)
    {
        transferPriceTransType = _transferPriceTransType;
        return transferPriceTransType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceCategoryRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set the resource category record identifier.
    /// </summary>
    /// <param name = "_resourceCategoryRecId">Resource category record identifier.</param>
    /// <returns>Resource category record identifier.</returns>
    public ResourceCategoryRecId parmResourceCategoryRecId(ResourceCategoryRecId _resourceCategoryRecId = resourceCategoryRecId)
    {
        if (_resourceCategoryRecId == resourceCategoryRecId)
        {
            if (resourceCategoryRecId == 0 && resourceRecId)
            {
                // In the case of get, if resourceCategoryRecId is not set, then lookup the value by resourceRecId.
                resourceCategoryRecId = ResourceFacade::getResourceCategory(resourceRecId, transDate, resourceDataAreaId);
            }
        }
        else
        {
            resourceCategoryRecId = _resourceCategoryRecId;
        }

        return resourceCategoryRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of <c>ProjTransferPriceParameters</c>.
    /// </summary>
    /// <returns>An instance of the <c>ProjTransferPriceParameters</c> class.</returns>
    public static ProjTransferPriceParameters construct()
    {
        return new ProjTransferPriceParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        super();

        // Set default parameters
        transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        resourceDataAreaId = curExt();
        transferPriceTransType = ProjTransferPriceTransType::All;
        transferCurrencyCode = '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>