<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqForecastReduce_Percent</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqForecastReduce_Percent</c> class handles reduction of demand or supply forecast according the percentage principle.
/// </summary>
class ReqForecastReduce_Percent extends ReqForecastReduce
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcNewReqQty</Name>
				<Source><![CDATA[
/// <summary>
    /// Calculates a new forecast quantity.
    /// </summary>
    /// <param name="_reqTrans">
    /// A <c>ReqTrans</c> record of type forecast.
    /// </param>
    /// <param name="_setupDim">
    /// A <c>ReqSetupDim</c> object that contains coverage settings for a specific item ID and inventory dimensions.
    /// </param>
    /// <param name="_reduceValue">
    /// A real value that contains a percentage.
    /// </param>
    /// <returns>
    /// A real value that contains the reduced forecast quantity.
    /// </returns>
    protected ReqQty calcNewReqQty(
        ReqTrans        _reqTrans,
        ReqSetupDim     _setupDim,
        real            _reduceValue)
    {
        #define.percent(100)

        ReqQty      newReqQty;

        if (_reduceValue > #percent)
        {
            return 0;
        }

        newReqQty = _reqTrans.OriginalQuantity - decround(_reqTrans.OriginalQuantity * _reduceValue / #percent,_setupDim.setup().inventDecimals());

        return sign(newReqQty) == sign(_reqTrans.OriginalQuantity) ? newReqQty : 0;
    }
]]></Source>
			</Method>
			<Method>
				<Name>mapPeriodCreateSetKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the key element in the map that contains the reduction periods.
    /// </summary>
    /// <param name="_forecastType">
    /// An enumeration value of type <c>ForecastTableType</c> that determines if the forecast reduction is regarding a demand forecast or a supply forecast.
    /// </param>
    /// <param name="_reqTransCache">
    /// A <c>ReqTransCache</c> object that contains cached master planning transactions.
    /// </param>
    /// <param name="_setupDim">
    /// A <c>ReqSetupDim</c> object that contains coverage settings for a specific item ID and inventory dimensions.
    /// </param>
    protected void mapPeriodCreateSetKey(
        ForecastTableType   _forecastType,
        ReqTransCache       _reqTransCache,
        ReqSetupDim         _setupDim)
    {
        this.mapPeriodCreateSetKeyFromReduceKey(_setupDim.reqReduceKeyId(),
        true,
        _forecastType,
        _reqTransCache,
        _setupDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapPeriodCreateSetValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value element in the map that contains the reduction periods.
    /// </summary>
    /// <param name="_forecastType">
    /// An enumeration value of type <c>ForecastTableType</c> that determines if the forecast reduction is regarding a demand forecast or a supply forecast.
    /// </param>
    /// <param name="_reqTransCache">
    /// A <c>ReqTransCache</c> object that contains cached master planning transactions.
    /// </param>
    /// <param name="_setupDim">
    /// A <c>ReqSetupDim</c> object that contains coverage settings for a specific item ID and inventory dimensions.
    /// </param>
    protected void mapPeriodCreateSetValue(
        ForecastTableType   _forecastType,
        ReqTransCache       _reqTransCache,
        ReqSetupDim         _setupDim)
    {
        // the percent values are set during creation of the keys
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapPeriodUpdateBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the map that contains the reduction periods.
    /// </summary>
    /// <param name="_reqDate">
    ///  A date that contains the start date of the reduction period.
    /// </param>
    /// <param name="_addValue">
    /// A real value that contains a value which is added to the reduction balance.
    /// </param>
    /// <param name="_customerGroupId">
    /// A Customer Group Identification
    /// </param>
    /// <param name="_customerAccountId">
    /// A Customer Account Identification
    /// </param>
    protected void mapPeriodUpdateBalance(
        TransDate   _reqDate,
        real        _addValue,
        CustGroupId _customerGroupId = '',
        CustAccount _customerAccountId = '')
    {
        // no update of balance
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
        reductionType = ReqReduceType::Percent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>contruct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>ReqForecastReducePercent</c> class and initializes the object.
    /// </summary>
    /// <returns>
    /// An <c>ReqForecastReducePercent</c> object.
    /// </returns>
    public static ReqForecastReduce_Percent contruct()
    {
        return new ReqForecastReduce_Percent();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>