<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollEarningCodeEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles events for the <c>PayrollEarningCodeEventHandler</c> table.
/// </summary>
public final class PayrollEarningCodeEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>PayrollEarningCode_onInitializedRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the <c>OnInitializedRecord</c> event and sets the fields on the table extension.
    /// </summary>
    /// <param name="_sender">The table context.</param>
    /// <param name="_e">The data event args.</param>
    [DataEventHandler(tableStr(PayrollEarningCode), DataEventType::InitializedRecord)]
    public static void PayrollEarningCode_onInitializedRecord(Common _sender, DataEventArgs _e)
    {
        PayrollEarningCode payrollEarningCode = _sender as PayrollEarningCode;

        payrollEarningCode.BaseDefinition = PayrollBaseDefinition::NotApplicable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PayrollEarningCode_onValidatingWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add logic that makes the tax group field required when the tax method is set to custom and not required when the tax method is not set to custom.
    /// </summary>
    /// <param name="_sender">PayrollEarningCode instance</param>
    /// <param name="_e">DataEventArgs from the event</param>
    [DataEventHandler(tableStr(PayrollEarningCode), DataEventType::ValidatingWrite)]
    public static void PayrollEarningCode_onValidatingWrite(Common _sender, DataEventArgs _e)
    {
        PayrollEarningCode payrollEarningCode = _sender as PayrollEarningCode;
        ValidateEventArgs validateEventArgs = _e as ValidateEventArgs;

        boolean result = validateEventArgs.parmValidateResult();

        if (payrollEarningCode.TaxMethod != PayrollTaxMethod::Custom && payrollEarningCode.TaxGroup != 0)
        {
            result = checkFailed("@Payroll:YouMustSetTheTaxGroupSettingToBeBlank");
        }

        if (payrollEarningCode.TaxMethod == PayrollTaxMethod::Custom && payrollEarningCode.TaxGroup == 0)
        {
            result = checkFailed("@Payroll:YouMustSetTheTaxGroupSetting");
        }

        validateEventArgs.parmValidateResult(result);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>