<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJournalAccEntryForm_PurchTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SubledgerJournalAccEntryForm_PurchTable
{
    #SubledgerJournal

    Common                                  implementation;
    MenuItemType                            menuItemType;
    str                                     menuItemName;
    Object                                  caller;
    SubledgerJournalAccountEntryFormView    subledgerJournalAccountEntryFormView;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDataSourceEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// An add datasource event handler
    /// </summary>
    /// <param name="_form">
    /// The <c>Form</c> object that the new datasource will be added to.
    /// </param>
    /// <param name="_subledgerJournalAccEntrytmpSummaryDataSource">
    /// The <c>SubledgerJournalAccountEntryTmpSummary</c> datasource.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    delegate void addDataSourceEventHandler(Form _form, FormBuildDataSource _subledgerJournalAccEntrytmpSummaryDataSource)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>warningMessage</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Exception warningMessage()
    {
        return warning("@SYS329503");
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the accounting distribution form display object.
    /// </summary>
    /// <param name="_args">
    /// An <c>Args</c> object from the calling form.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void initialize(Args _args)
    {
        implementation = _args.record();
        menuItemName = _args.menuItemName();
        menuItemType = _args.menuItemType();
        caller = _args.caller();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void run()
    {
        Form                    form;
        FormBuildDataSource     subledgerJournalAccEntrytmpSummaryDataSource;
        Args                    args;
        FormRun                 formRun;

        form = new Form(formStr(SubledgerJournalAccountEntry));
        subledgerJournalAccEntrytmpSummaryDataSource = form.dataSource(1);
        this.addDataSourceEventHandler(form, subledgerJournalAccEntrytmpSummaryDataSource);

        args = new Args();
        args.object(form);
        args.record(implementation);
        args.menuItemName(menuItemName);
        args.menuItemType(menuItemType);
        args.caller(caller);

        formRun = classfactory.formRunClass(args);
        formRun.run();
        formRun.wait(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runForm</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void runForm()
    {
        this.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>noEncumbranceForPurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks to see if encumbrance is set up for purchTable
    /// </summary>
    /// <param name="_purchTable">
    /// The purchTable from which we want to launch the form
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean noEncumbranceForPurchTable(PurchTable _purchTable)
    {
        return ((_purchTable.DocumentState == VersioningDocumentState::Confirmed)
                && (_purchTable.isEncumbranceRequired == UnknownNoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>subLedgerJournalAccountEntryFormError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the Infolog messages to display.
    /// </summary>
    /// <param name="_recordContext">
    /// The current record for which the subledger journal account entries are being evaluated.
    /// </param>
    /// <remarks>
    /// This method is called from the <c>SubLedgerJournalAccountEntry</c> form.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void subLedgerJournalAccountEntryFormError(Common _recordContext)
    {
        PurchTable              purchTable;
        PurchLine               purchLine;
        boolean                 runForm;

        if (LedgerParameters::find().IsEncumbranceProcessEnabled)
        {
            switch (_recordContext.TableId)
            {
                case tableNum(PurchTable) :
                    purchTable = _recordContext as PurchTable;
                    runForm = true;
                    break;

                case tableNum(PurchLine) :
                    purchLine = _recordContext as PurchLine;
                    runForm = true;
                    select firstonly purchTable
                        where purchTable.PurchId == purchLine.PurchId;
                    break;
            }

            if (runForm)
            {
                if (purchTable.Recid != 0 && SubledgerJournalAccEntryForm_PurchTable::noEncumbranceForPurchTable(purchTable))
                {
                    this.warningMessage();
                }
                this.runForm();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        Common                                      recordContext;
        SubledgerJournalAccEntryForm_PurchTable     subledgerJournalAccEntryForm_PurchTable;

        recordContext = args.record();
        subledgerJournalAccEntryForm_PurchTable = new SubledgerJournalAccEntryForm_PurchTable();
        subledgerJournalAccEntryForm_PurchTable.initialize(args);
        subledgerJournalAccEntryForm_PurchTable.subLedgerJournalAccountEntryFormError(recordContext);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>