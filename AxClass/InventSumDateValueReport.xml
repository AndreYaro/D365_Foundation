<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumDateValueReport</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventSumDateValueReport extends InventSumDateValue
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>selectInventSum</Name>
				<Source><![CDATA[
    protected void selectInventSum()
    {
        super();

        this.selectSumPhysicalValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransPostingFinancial</Name>
				<Source><![CDATA[
    protected void selectInventTransPostingFinancial()
    {
        InventTransPosting  inventTransPostingFinancial;
        InventTransPosting  inventTransPostingPhysical;
        InventTrans         inventTrans;
        InventSettlement    inventSettlement;

        while select forceplaceholders TableId
            from inventTransPostingFinancial
            where  inventTransPostingFinancial.ItemId                   == itemId
                && inventTransPostingFinancial.InventTransPostingType   == InventTransPostingType::Financial
                && inventTransPostingFinancial.TransDate                > perDate
            join sum(CostAmountPhysical), sum(CostAmountPosted),
                sum(CostAmountAdjustment), sum(Qty), sum(PdsCWQty)
            from inventTrans
            group by StatusIssue, StatusReceipt, PackingSlipReturned
            where  inventTrans.Voucher                                  == inventTransPostingFinancial.Voucher
                && inventTrans.DateFinancial                            == inventTransPostingFinancial.TransDate
                && inventTrans.InventTransOrigin                        == inventTransPostingFinancial.InventTransOrigin
            join IsPosted
            from inventTransPostingPhysical
            group by IsPosted
            where  inventTrans.VoucherPhysical                          == inventTransPostingPhysical.Voucher
                && inventTrans.DatePhysical                             == inventTransPostingPhysical.TransDate
                && inventTrans.InventTransOrigin                        == inventTransPostingPhysical.InventTransOrigin
                && inventTransPostingPhysical.InventTransPostingType    == InventTransPostingType::Physical
        {
            this.updatePhysicalValues(
                    inventTransPostingPhysical.IsPosted,
                    inventTrans.CostAmountPhysical);
            this.addInventTransFinancial(inventTrans);
        }

        while select forceplaceholders sum(CostAmountAdjustment) from inventSettlement
            where inventSettlement.ItemId       == itemId
              &&  inventSettlement.Cancelled    == NoYes::No
              &&  inventSettlement.TransDate    >  perDate
              &&  inventSettlement.SettleModel  == InventSettleModel::PhysicalValue
              // <GEERU>
              &&  inventSettlement.InventTransCurrency_RU == InventTransCurrency_RU::PrimaryCur
              // </GEERU>
        join TableId from inventTrans
            where inventTrans.RecId             == inventSettlement.TransRecId
              &&  inventTrans.StatusReceipt     == StatusReceipt::None
              &&  inventTrans.StatusIssue       == StatusIssue::Sold
        join IsPosted from inventTransPostingPhysical
            group by IsPosted
            where inventTrans.VoucherPhysical                           == inventTransPostingPhysical.Voucher
              &&  inventTrans.DatePhysical                              == inventTransPostingPhysical.TransDate
              &&  inventTrans.InventTransOrigin                         == inventTransPostingPhysical.InventTransOrigin
              &&  inventTransPostingPhysical.InventTransPostingType     == InventTransPostingType::Physical
              &&  inventTransPostingPhysical.IsPosted                   == inventSettlement.Posted
        {
            this.updatePhysicalValues(inventTransPostingPhysical.IsPosted, -inventSettlement.CostAmountAdjustment);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransPostingPhysical</Name>
				<Source><![CDATA[
    protected void selectInventTransPostingPhysical()
    {
        InventTrans                 inventTrans;
        InventTransPosting          inventTransPostingPhysical;

        while select forceplaceholders IsPosted
            from inventTransPostingPhysical
            group by IsPosted
            where  inventTransPostingPhysical.ItemId                    == itemId
                && inventTransPostingPhysical.InventTransPostingType    == InventTransPostingType::Physical
                && inventTransPostingPhysical.TransDate                 > perDate
            join sum(CostAmountPhysical), sum(CostAmountPosted),
                sum(CostAmountAdjustment), sum(Qty), sum(PdsCWQty)
            from inventTrans
            group by StatusIssue, StatusReceipt, DateInvent
            where  inventTrans.VoucherPhysical              == inventTransPostingPhysical.Voucher
                && inventTrans.DatePhysical                 == inventTransPostingPhysical.TransDate
                && inventTrans.InventTransOrigin            == inventTransPostingPhysical.InventTransOrigin
        {
            this.updatePhysicalValues(
                    inventTransPostingPhysical.IsPosted,
                    -inventTrans.CostAmountPhysical);
            this.addInventTransPhysical(inventTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectSumPhysicalValue</Name>
				<Source><![CDATA[
    void selectSumPhysicalValue()
    {
        InventTrans             inventTrans;
        InventSettlement        inventSettlement;
        InventTransPosting      inventTransPosting;
        InventTransPosting      inventTransPostingPhysical;
        InventTransOrigin       inventTransOrigin;

        postedPhysicalValue = 0;

        if (deductedQty)
        {
            while select forceplaceholders TableId from inventTransOrigin
                where inventTransOrigin.ItemId          == itemId
                    join sum(CostAmountPhysical) from inventTrans
                    where inventTrans.InventTransOrigin == inventTransOrigin.RecId
                      &&  inventTrans.StatusReceipt     == StatusReceipt::None
                      &&  inventTrans.StatusIssue       == StatusIssue::Deducted
                        join IsPosted from inventTransPosting
                            group by IsPosted
                            where inventTrans.VoucherPhysical               == inventTransPosting.Voucher
                              &&  inventTrans.DatePhysical                  == inventTransPosting.TransDate
                              &&  inventTrans.InventTransOrigin             == inventTransPosting.InventTransOrigin
                              &&  inventTransPosting.InventTransPostingType == InventTransPostingType::Physical
            {
                this.updatePhysicalValues(inventTransPosting.IsPosted, inventTrans.CostAmountPhysical);
            }

            while select forceplaceholders sum(CostAmountAdjustment) from inventSettlement
                where inventSettlement.ItemId       == itemId
                  &&  inventSettlement.Cancelled    == NoYes::No
                  &&  inventSettlement.TransDate    >  perDate
                  &&  inventSettlement.SettleModel  == InventSettleModel::PhysicalValue
                join TableId from inventTrans
                    where inventTrans.RecId             == inventSettlement.TransRecId
                      &&  inventTrans.StatusReceipt     == StatusReceipt::None
                      &&  inventTrans.StatusIssue       == StatusIssue::Deducted
                    join IsPosted from inventTransPostingPhysical
                        group by IsPosted
                        where inventTrans.VoucherPhysical                           == inventTransPostingPhysical.Voucher
                          &&  inventTrans.DatePhysical                              == inventTransPostingPhysical.TransDate
                          &&  inventTrans.InventTransOrigin                         == inventTransPostingPhysical.InventTransOrigin
                          &&  inventTransPostingPhysical.InventTransPostingType     == InventTransPostingType::Physical
                          &&  inventTransPostingPhysical.IsPosted                   == inventSettlement.Posted
            {
                this.updatePhysicalValues(inventTransPostingPhysical.IsPosted, -inventSettlement.CostAmountAdjustment);
            }
        }

        if (receivedQty)
        {
            while select forceplaceholders TableId from inventTransOrigin
                where inventTransOrigin.ItemId          == itemId
                    join sum(CostAmountPhysical) from inventTrans
                    where inventTrans.InventTransOrigin == inventTransOrigin.RecId
                      &&  inventTrans.StatusReceipt     == StatusReceipt::Received
                      &&  inventTrans.StatusIssue       == StatusIssue::None
                join IsPosted from inventTransPosting
                    group by IsPosted
                    where inventTrans.VoucherPhysical               == inventTransPosting.Voucher
                      &&  inventTrans.DatePhysical                  == inventTransPosting.TransDate
                      &&  inventTrans.InventTransOrigin             == inventTransPosting.InventTransOrigin
                      &&  inventTransPosting.InventTransPostingType == InventTransPostingType::Physical
            {
                this.updatePhysicalValues(inventTransPosting.IsPosted, inventTrans.CostAmountPhysical);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
    static InventSumDateValueReport newParameters(
        TransDate   _perDate,
        ItemId      _itemId
        )
    {
        InventSumDateValueReport inventSumDateValueReport = new InventSumDateValueReport();

        inventSumDateValueReport.parmItemId(_itemId);
        inventSumDateValueReport.parmPerDate(_perDate);

        inventSumDateValueReport.init();

        return inventSumDateValueReport;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>