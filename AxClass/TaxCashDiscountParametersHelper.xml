<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxCashDiscountParametersHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxCashDiscountParametersHelper</c> class is a helper class to get the tax-related cash discount parameters.
/// </summary>
internal final class TaxCashDiscountParametersHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cashDiscInclTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the cash discount should be calculated on an amount including sales tax.
    /// </summary>
    /// <param name = "_custVend">The customer or vendor module.</param>
    /// <returns>true if the cash discount should be calculated on an amount including sales tax; otherwise, false.</returns>
    internal static boolean cashDiscInclTax(ModuleCustVend _custVend)
    {
        boolean cashDiscInclTax;

        TaxIntegrationTaxJurisdictionParameters taxIntegrationTaxJurisdictionParameters;
        TaxIntegrationTaxJurisdictionParametersContext taxIntegrationTaxJurisdictionParametersContext = TaxIntegrationTaxJurisdictionParametersContext::current();
        if (taxIntegrationTaxJurisdictionParametersContext != null
            && taxIntegrationTaxJurisdictionParametersContext.parmSourceHeadingRecId())
        {
            taxIntegrationTaxJurisdictionParameters = TaxIntegrationFacade::getTaxJurisdictionParameters(
                taxIntegrationTaxJurisdictionParametersContext.parmSourceHeadingTableId(),
                taxIntegrationTaxJurisdictionParametersContext.parmsourceHeadingRecId());
        }

        switch (_custVend)
        {
            case ModuleCustVend::Cust:
                if (taxIntegrationTaxJurisdictionParameters
                    && !taxIntegrationTaxJurisdictionParameters.empty())
                {
                    cashDiscInclTax = taxIntegrationTaxJurisdictionParameters.isCashDiscCalculatedOnAmountInclTaxForCust();
                }
                else
                {
                    cashDiscInclTax = CustParameters::find().CashDiscVAT;
                }
                break;
            case ModuleCustVend::Vend:
                if (taxIntegrationTaxJurisdictionParameters
                    && !taxIntegrationTaxJurisdictionParameters.empty())
                {
                    cashDiscInclTax = taxIntegrationTaxJurisdictionParameters.isCashDiscCalculatedOnAmountInclTaxForVend();
                }
                else
                {
                    cashDiscInclTax = VendParameters::find().CashDiscVAT;
                }
                break;
        }

        return cashDiscInclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCashDiscDeductedBeforeTaxCalculation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the cash discount is deducted before tax calculation for the transaction that specfied by the heading tableId and heading recId.
    /// </summary>
    /// <param name = "_sourceHeadingTableId">The heading table Id.</param>
    /// <param name = "_sourceHeadingRecId">The heading recId.</param>
    /// <returns>true if the cash discount is deducted before tax calculation; otherwise, false.</returns>
    internal static boolean isCashDiscDeductedBeforeTaxCalculation(RefTableId _sourceHeadingTableId, RefRecId _sourceHeadingRecId)
    {
        TaxIntegrationTaxJurisdictionParameters taxIntegrationTaxJurisdictionParameters = TaxIntegrationFacade::getTaxJurisdictionParameters(_sourceHeadingTableId, _sourceHeadingRecId);
        if (taxIntegrationTaxJurisdictionParameters && !taxIntegrationTaxJurisdictionParameters.empty())
        {
            return taxIntegrationTaxJurisdictionParameters.isCashDiscDeductedBeforeTaxCalculation();
        }

        return TaxParameters::find().TaxLessCashDisc;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>