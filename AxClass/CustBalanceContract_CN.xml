<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBalanceContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Contract class for Customer balance report.
/// </summary>
[
    DataContract,
    SysOperationContractProcessing(classStr(CustBalanceUIBuilder_CN)),
    SysOperationGroupAttribute('ProfileUIGroup', "@SYS21530", '2'),
    SysOperationGroupAttribute('CustGroupUIGroup', "@SYS11904", '3'),
    SysOperationGroupAttribute('SalesGroupUIGroup', "@SYS23784", '4')
]
class CustBalanceContract_CN extends ERFormatMappingRunBaseContract
{
    ERFormatMappingId erBinding;
    List localizedAttributeNames;
    LedgerFiscalPeriodNameContractER_CN ledgerFiscalPeriodNameContractER_CN;
    CustPostingProfile fromProfile, toProfile;
    CustGroupId fromCustGroup, toCustGroup;
    CommissSalesGroup fromSalesGroup, toSalesGroup;

    private const ERFinDimensionsSelectType dimSelectType = ERFinDimensionsSelectType::LegalEntity;
    private const DimensionSetName dimSetSelectType = '';
    private const NoYes askForMainAccount = NoYes::No;
    private const NoYes isMainAccountMandatory = NoYes::No;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmLedgerFiscalPeriodNameContractER_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Data property of ledger period range.
    /// </summary>
    /// <param name = "_ledgerFiscalPeriodNameContractER_CN">Ledger period range contract</param>
    /// <returns>Ledger period range contract</returns>
    [
        DataMemberAttribute('LedgerFiscalPeriodNameContractER'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerFiscalPeriodNameContractER_CN parmLedgerFiscalPeriodNameContractER_CN(LedgerFiscalPeriodNameContractER_CN _ledgerFiscalPeriodNameContractER_CN = ledgerFiscalPeriodNameContractER_CN)
    {
        ledgerFiscalPeriodNameContractER_CN = _ledgerFiscalPeriodNameContractER_CN;
        return ledgerFiscalPeriodNameContractER_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starting posting profile.
    /// </summary>
    /// <param name = "_fromProfile">Starting posting profile</param>
    /// <returns>Starting posting profile</returns>
    [
        DataMemberAttribute('FromProfile'),
        SysOperationLabelAttribute(literalstr("@SYS179495")),
        SysOperationGroupMemberAttribute('ProfileUIGroup'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public CustPostingProfile parmFromProfile(CustPostingProfile _fromProfile = fromProfile)
    {
        fromProfile = _fromProfile;
        return fromProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ending posting profile.
    /// </summary>
    /// <param name = "_toProfile">Ending posting profile</param>
    /// <returns>Ending posting profile</returns>
    [
        DataMemberAttribute('ToProfile'),
        SysOperationLabelAttribute(literalstr("@SYS179496")),
        SysOperationGroupMemberAttribute('ProfileUIGroup'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public CustPostingProfile parmToProfile(CustPostingProfile _toProfile = toProfile)
    {
        toProfile = _toProfile;
        return toProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromCustGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starting customer group.
    /// </summary>
    /// <param name = "_fromCustGroup">Starting customer group</param>
    /// <returns>Starting customer group</returns>
    [
        DataMemberAttribute('FromCustomerGroup'),
        SysOperationLabelAttribute(literalstr("@SYS24610")),
        SysOperationGroupMemberAttribute('CustGroupUIGroup'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public CustGroupId parmFromCustGroup(CustGroupId _fromCustGroup = fromCustGroup)
    {
        fromCustGroup = _fromCustGroup;
        return fromCustGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToCustGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ending customer group.
    /// </summary>
    /// <param name = "_toCustGroup">Ending customer group</param>
    /// <returns>Ending customer group</returns>
    [
        DataMemberAttribute('ToCustomerGroup'),
        SysOperationLabelAttribute(literalstr("@SYS24611")),
        SysOperationGroupMemberAttribute('CustGroupUIGroup'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public CustGroupId parmToCustGroup(CustGroupId _toCustGroup = toCustGroup)
    {
        toCustGroup = _toCustGroup;
        return toCustGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromSalesGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starting sales group.
    /// </summary>
    /// <param name = "_fromSalesGroup">Starting sales group</param>
    /// <returns>Starting sales group</returns>
    [
        DataMemberAttribute('FromSalesGroup'),
        SysOperationLabelAttribute(literalstr("@GLS100109")),
        SysOperationGroupMemberAttribute('SalesGroupUIGroup'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public CommissSalesGroup parmFromSalesGroup(CommissSalesGroup _fromSalesGroup = fromSalesGroup)
    {
        fromSalesGroup = _fromSalesGroup;
        return fromSalesGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToSalesGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ending sales group.
    /// </summary>
    /// <param name = "_toSalesGroup">Ending sales group</param>
    /// <returns>Ending sales group</returns>
    [
        DataMemberAttribute('ToSalesGroup'),
        SysOperationLabelAttribute(literalstr("@GLS100110")),
        SysOperationGroupMemberAttribute('SalesGroupUIGroup'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public CommissSalesGroup parmToSalesGroup(CommissSalesGroup _toSalesGroup = toSalesGroup)
    {
        toSalesGroup = _toSalesGroup;
        return toSalesGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmERBinding</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter erBinding
    /// </summary>
    /// <param name = "_erBinding">ER format binding</param>
    /// <returns>ER format binding</returns>
    [
        DataMemberAttribute('FormatMapping'),
        SysOperationLabelAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationHelpTextAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationDisplayOrderAttribute('5')
    ]
    public ERFormatMappingId parmERBinding(ERFormatMappingId _erBinding = erBinding)
    {
        erBinding = _erBinding;
        return erBinding;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocalizedAttributeNames</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter localizedAttributeNames.
    /// </summary>
    /// <param name = "_localizedAttributeNames">List of dimension names</param>
    /// <returns>List of dimension names</returns>
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@SYS56299")),
        AifCollectionTypeAttribute('return', Types::String),
        SysOperationDisplayOrderAttribute('6')
    ]
    public List parmLocalizedAttributeNames(List _localizedAttributeNames = localizedAttributeNames)
    {
        localizedAttributeNames = _localizedAttributeNames;
        return localizedAttributeNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the user parameter values.
    /// </summary>
    /// <returns>
    /// <c>true</c> if valid; else <c>false</c>
    /// </returns>
    public boolean validate()
    {
        return ledgerFiscalPeriodNameContractER_CN.validate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimSelectType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets financial dimension selection type.
    /// </summary>
    /// <returns>Financial dimension selection type</returns>
    public ERFinDimensionsSelectType getDimSelectType()
    {
        return dimSelectType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimSetSelectType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets financial dimension set name.
    /// </summary>
    /// <returns>Financial dimension set name</returns>
    public DimensionSetName getDimSetSelectType()
    {
        return dimSetSelectType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAskForMainAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets if ask for main account.
    /// </summary>
    /// <returns>True if ask for main account; otherwise, false.</returns>
    public NoYes getAskForMainAccount()
    {
        return askForMainAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsMainAccountMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets is main account mandatory.
    /// </summary>
    /// <returns>True if main account is mandatory; otherwise, false.</returns>
    public NoYes getIsMainAccountMandatory()
    {
        return isMainAccountMandatory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>