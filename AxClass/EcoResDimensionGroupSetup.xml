<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResDimensionGroupSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class EcoResDimensionGroupSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFieldSetupForInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds an instance of the <c>InventDimGroupFieldSetup</c> class that matches the specified item and
    ///    dimension field.
    /// </summary>
    /// <param name="_inventTable">
    ///    The item.
    /// </param>
    /// <param name="_dimFieldId">
    ///    The field ID of the inventory dimension field.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventDimGroupFieldSetup</c> class.
    /// </returns>
    static public InventDimGroupFieldSetup getFieldSetupForInventTable(
        InventTable _inventTable,
        FieldId     _dimFieldId)
    {
        return InventDimGroupSetup::newInventTable(_inventTable).getFieldSetup(_dimFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFieldSetupForItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds an instance of the <c>InventDimGroupFieldSetup</c> class that matches the specified item and
    ///    dimension field.
    /// </summary>
    /// <param name="_itemId">
    ///    The ID of the item.
    /// </param>
    /// <param name="_dimFieldId">
    ///    The field ID of the inventory dimension field.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventDimGroupFieldSetup</c> class.
    /// </returns>
    static public InventDimGroupFieldSetup getFieldSetupForItem(
        ItemId      _itemId,
        FieldId     _dimFieldId)
    {
        return InventDimGroupSetup::newItemId(_itemId).getFieldSetup(_dimFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventDimActiveWithCoveragePlanForItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates, for the specified item, whether the specified dimension is active and has coverage plan by dimension enabled.
    /// </summary>
    /// <param name="_itemId">
    ///    The ID of the item.
    /// </param>
    /// <param name="_dimFieldId">
    ///    The field ID of the inventory dimension field.
    /// </param>
    /// <returns>
    ///    true if the inventory dimension is active and has Coverage plan by dimension enabled; otherwise, false.
    /// </returns>
    static public boolean isInventDimActiveWithCoveragePlanForItem(ItemId _itemId, FieldId  _dimFieldId)
    {
        InventDimGroupFieldSetup inventDimGroupFieldSetup = EcoResDimensionGroupSetup::getFieldSetupForItem(_itemId, _dimFieldId);

        return inventDimGroupFieldSetup.isActive()
            && inventDimGroupFieldSetup.isCoveragePlanByDimensionEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventoryDimensionActiveForInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified inventory dimension is active for the specified item.
    /// </summary>
    /// <param name="_inventTable">
    ///    The item.
    /// </param>
    /// <param name="_dimFieldId">
    ///    The field ID of the inventory dimension field.
    /// </param>
    /// <returns>
    ///    true if the inventory dimension is active; otherwise, false.
    /// </returns>
    static public boolean isInventoryDimensionActiveForInventTable(
        InventTable  _inventTable,
        FieldId     _dimFieldId)
    {
        InventDimGroupFieldSetup dimFieldSetup = EcoResDimensionGroupSetup::getFieldSetupForInventTable(_inventTable, _dimFieldId);

        return dimFieldSetup.isActive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventoryDimensionActiveForItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified inventory dimension is active for the specified item.
    /// </summary>
    /// <param name="_itemId">
    ///    The ID of the item.
    /// </param>
    /// <param name="_dimFieldId">
    ///    The field ID of the inventory dimension field.
    /// </param>
    /// <returns>
    ///    true if the inventory dimension is active; otherwise, false.
    /// </returns>
    static public boolean isInventoryDimensionActiveForItem(
        ItemId      _itemId,
        FieldId     _dimFieldId)
    {
        InventDimGroupFieldSetup dimFieldSetup = EcoResDimensionGroupSetup::getFieldSetupForItem(_itemId, _dimFieldId);

        return dimFieldSetup.isActive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWarehouseDimensionMandatoryForItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the warehouse inventory dimension is mandatory for the specified item.
    /// </summary>
    /// <param name="_itemId">
    ///    The ID of the item.
    /// </param>
    /// <returns>
    ///    true if the inventory dimension is active; otherwise, false.
    /// </returns>
    static public boolean isWarehouseDimensionMandatoryForItem(ItemId _itemId)
    {
        InventDimGroupFieldSetup    dimFieldSetup   = EcoResDimensionGroupSetup::getFieldSetupForItem(_itemId, fieldNum(InventDim, InventLocationId));

        return dimFieldSetup.isMandatory();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventoryDimensionSalesProcessActive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified inventory dimension is active for sales process for the specified item.
    /// </summary>
    /// <param name="_itemId">
    ///    The ID of the item.
    /// </param>
    /// <param name="_dimFieldId">
    ///    The field ID of the inventory dimension field.
    /// </param>
    /// <returns>
    ///    true if the inventory dimension is active for sales process; otherwise, false.
    /// </returns>
    static public boolean isInventoryDimensionSalesProcessActive(
        ItemId      _itemId,
        FieldId     _dimFieldId)
    {
        InventDimGroupFieldSetup dimFieldSetup = EcoResDimensionGroupSetup::getFieldSetupForItem(_itemId, _dimFieldId);

        return dimFieldSetup.isSalesProcessActivated();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
