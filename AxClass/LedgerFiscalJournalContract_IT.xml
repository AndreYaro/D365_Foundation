<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerFiscalJournalContract_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for LedgerFiscalJournal_IT SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the LedgerFiscalJournal_IT SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(LedgerFiscalJournalUIBuilder_IT), SysOperationDataContractProcessingMode::CreateSeparateUIBuilderForEachContract)
]
public class LedgerFiscalJournalContract_IT implements SysOperationValidatable, SysOperationInitializable
{
    FromDate fromDate;
    ToDate toDate;
    boolean allYear;
    boolean postingProfileCurrent;
    boolean postingProfileOperations;
    boolean postingProfileTax;
    boolean changePageNumber;
    boolean changeSequenceNumber;
    boolean changeAmountCurCredit;
    boolean changeAmountCurDebit;
    Integer lastPage;
    Integer lastsequenceNumber;
    AmountCurDebit lastAmountCurDebit;
    AmountCurCredit lastAmountCurCredit;
    Integer changelastPage;
    Integer changeLastSequenceNumber;
    AmountCurDebit changeLastAmountCurDebit;
    AmountCurCredit changeLastAmountCurCredit;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the data contract values.
    /// </summary>
    public void initialize()
    {
        LedgerReportJournal_IT ledgerReportJournal_IT;
        date    prevDate;
        allYear = true;
        postingProfileCurrent = true;
        postingProfileOperations = true;
        postingProfileTax = true;
        changePageNumber = false;
        changeSequenceNumber = false;
        changeAmountCurCredit = false;
        changeAmountCurDebit = false;

        ledgerReportJournal_IT = LedgerReportJournal_IT::findByPrintDate(fromDate-1);

        if (!ledgerReportJournal_IT)
        {
            select maxof(PrintDate) from ledgerReportJournal_IT where
                ledgerReportJournal_IT.PrintDate < (fromDate - 1);
            prevDate = ledgerReportJournal_IT.PrintDate;
            if ((prevDate) &&
                (fiscalCalendars::findLastDayofYear(CompanyInfoHelper::fiscalCalendarRecId(), fromDate) == FiscalCalendars::findLastDayofYear(CompanyInfoHelper::fiscalCalendarRecId(), prevDate)))

            {
                ledgerReportJournal_IT = LedgerReportJournal_IT::findByPrintDate(prevDate);
            }
        }

        changelastPage = ledgerReportJournal_IT.Page;
        changeLastSequenceNumber = ledgerReportJournal_IT.SeqNum;
        changeLastAmountCurDebit = ledgerReportJournal_IT.SumDebit;
        changeLastAmountCurCredit = ledgerReportJournal_IT.SumCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllYear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter AllYear.
    /// </summary>
    /// <param name="_allYear">
    /// The new value of the datacontract parameter AllYear; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter AllYear
    /// </returns>
    [
        DataMemberAttribute('AllYear'),
        SysOperationLabelAttribute(literalstr("@SYS81803")),
        SysOperationHelpTextAttribute(literalstr("@SYS81804"))
    ]
    public boolean parmAllYear(boolean _allYear = allYear)
    {
        allYear = _allYear;
        return allYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeAmountCurCredit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ChangeAmountCurCredit.
    /// </summary>
    /// <param name="_changeAmountCurCredit">
    /// The new value of the datacontract parameter ChangeAmountCurCredit; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ChangeAmountCurCredit
    /// </returns>
    [
        DataMemberAttribute('ChangeAmountCurCredit'),
        SysOperationLabelAttribute(literalstr("@SYS81523")),
        SysOperationHelpTextAttribute(literalstr("@SYS81813"))
    ]
    public boolean parmChangeAmountCurCredit(boolean _changeAmountCurCredit = changeAmountCurCredit)
    {
        changeAmountCurCredit = _changeAmountCurCredit;
        return changeAmountCurCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeAmountCurDebit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ChangeAmountCurDebit.
    /// </summary>
    /// <param name="_changeAmountCurDebit">
    /// The new value of the datacontract parameter ChangeAmountCurDebit; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ChangeAmountCurDebit
    /// </returns>
    [
        DataMemberAttribute('ChangeAmountCurDebit'),
        SysOperationLabelAttribute(literalstr("@SYS81521")),
        SysOperationHelpTextAttribute(literalstr("@SYS81811"))
    ]
    public boolean parmChangeAmountCurDebit(boolean _changeAmountCurDebit = changeAmountCurDebit)
    {
        changeAmountCurDebit = _changeAmountCurDebit;
        return changeAmountCurDebit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeLastAmountCurCredit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ChangeLastAmountCurCredit.
    /// </summary>
    /// <param name="_changeLastAmountCurCredit">
    /// The new value of the datacontract parameter ChangeLastAmountCurCredit; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ChangeLastAmountCurCredit
    /// </returns>
    [
        DataMemberAttribute('ChangeLastAmountCurCredit'),
        SysOperationLabelAttribute(literalstr("@SYS81533")),
        SysOperationHelpTextAttribute(literalstr("@SYS81825"))
    ]
    public AmountCurCredit parmChangeLastAmountCurCredit(AmountCurCredit _changeLastAmountCurCredit = changeLastAmountCurCredit)
    {
        changeLastAmountCurCredit = _changeLastAmountCurCredit;
        return changeLastAmountCurCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeLastAmountCurDebit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ChangeLastAmountCurDebit.
    /// </summary>
    /// <param name="_changeLastAmountCurDebit">
    /// The new value of the datacontract parameter ChangeLastAmountCurDebit; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ChangeLastAmountCurDebit
    /// </returns>
    [
        DataMemberAttribute('ChangeLastAmountCurDebit'),
        SysOperationLabelAttribute(literalstr("@SYS81533")),
        SysOperationHelpTextAttribute(literalstr("@SYS81824"))
    ]
    public AmountCurDebit parmChangeLastAmountCurDebit(AmountCurDebit _changeLastAmountCurDebit = changeLastAmountCurDebit)
    {
        changeLastAmountCurDebit = _changeLastAmountCurDebit;
        return changeLastAmountCurDebit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangelastPage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ChangelastPage.
    /// </summary>
    /// <param name="_changelastPage">
    /// The new value of the datacontract parameter ChangelastPage; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ChangelastPage
    /// </returns>
    [
        DataMemberAttribute('ChangelastPage'),
        SysOperationLabelAttribute(literalstr("@SYS81533")),
        SysOperationHelpTextAttribute(literalstr("@SYS81822"))
    ]
    public Integer parmChangelastPage(Integer _changelastPage = changelastPage)
    {
        changelastPage = _changelastPage;
        return changelastPage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeLastSequenceNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ChangeLastSequenceNumber.
    /// </summary>
    /// <param name="_changeLastSequenceNumber">
    /// The new value of the datacontract parameter ChangeLastSequenceNumber; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ChangeLastSequenceNumber
    /// </returns>
    [
        DataMemberAttribute('ChangeLastSequenceNumber'),
        SysOperationLabelAttribute(literalstr("@SYS81533")),
        SysOperationHelpTextAttribute(literalstr("@SYS81823"))
    ]
    public Integer parmChangeLastSequenceNumber(Integer _changeLastSequenceNumber = changeLastSequenceNumber)
    {
        changeLastSequenceNumber = _changeLastSequenceNumber;
        return changeLastSequenceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangePageNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ChangePageNumber.
    /// </summary>
    /// <param name="_changePageNumber">
    /// The new value of the datacontract parameter ChangePageNumber; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ChangePageNumber
    /// </returns>
    [
        DataMemberAttribute('ChangePageNumber'),
        SysOperationLabelAttribute(literalstr("@SYS81515")),
        SysOperationHelpTextAttribute(literalstr("@SYS81517"))
    ]
    public boolean parmChangePageNumber(boolean _changePageNumber = changePageNumber)
    {
        changePageNumber = _changePageNumber;
        return changePageNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeSequenceNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ChangeSequenceNumber.
    /// </summary>
    /// <param name="_changeSequenceNumber">
    /// The new value of the datacontract parameter ChangeSequenceNumber; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ChangeSequenceNumber
    /// </returns>
    [
        DataMemberAttribute('ChangeSequenceNumber'),
        SysOperationLabelAttribute(literalstr("@SYS81519")),
        SysOperationHelpTextAttribute(literalstr("@SYS81520"))
    ]
    public boolean parmChangeSequenceNumber(boolean _changeSequenceNumber = changeSequenceNumber)
    {
        changeSequenceNumber = _changeSequenceNumber;
        return changeSequenceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS95981")),
        SysOperationHelpTextAttribute(literalstr("@SYS81801"))
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastAmountCurCredit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter LastAmountCurCredit.
    /// </summary>
    /// <param name="_lastAmountCurCredit">
    /// The new value of the datacontract parameter LastAmountCurCredit; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter LastAmountCurCredit
    /// </returns>
    [
        DataMemberAttribute('LastAmountCurCredit'),
        SysOperationLabelAttribute(literalstr("@SYS81820")),
        SysOperationHelpTextAttribute(literalstr("@SYS81819"))
    ]
    public AmountCurCredit parmLastAmountCurCredit(AmountCurCredit _lastAmountCurCredit = lastAmountCurCredit)
    {
        lastAmountCurCredit = _lastAmountCurCredit;
        return lastAmountCurCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastAmountCurDebit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter LastAmountCurDebit.
    /// </summary>
    /// <param name="_lastAmountCurDebit">
    /// The new value of the datacontract parameter LastAmountCurDebit; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter LastAmountCurDebit
    /// </returns>
    [
        DataMemberAttribute('LastAmountCurDebit'),
        SysOperationLabelAttribute(literalstr("@SYS81817")),
        SysOperationHelpTextAttribute(literalstr("@SYS81818"))
    ]
    public AmountCurDebit parmLastAmountCurDebit(AmountCurDebit _lastAmountCurDebit = lastAmountCurDebit)
    {
        lastAmountCurDebit = _lastAmountCurDebit;
        return lastAmountCurDebit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastPage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter LastPage.
    /// </summary>
    /// <param name="_lastPage">
    /// The new value of the datacontract parameter LastPage; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter LastPage
    /// </returns>
    [
        DataMemberAttribute('LastPage'),
        SysOperationLabelAttribute(literalstr("@SYS81814")),
        SysOperationHelpTextAttribute(literalstr("@SYS81526"))
    ]
    public Integer parmLastPage(Integer _lastPage = lastPage)
    {
        lastPage = _lastPage;
        return lastPage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastsequenceNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter LastsequenceNumber.
    /// </summary>
    /// <param name="_lastsequenceNumber">
    /// The new value of the datacontract parameter LastsequenceNumber; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter LastsequenceNumber
    /// </returns>
    [
        DataMemberAttribute('LastsequenceNumber'),
        SysOperationLabelAttribute(literalstr("@SYS81815")),
        SysOperationHelpTextAttribute(literalstr("@SYS81816"))
    ]
    public Integer parmLastsequenceNumber(Integer _lastsequenceNumber = lastsequenceNumber)
    {
        lastsequenceNumber = _lastsequenceNumber;
        return lastsequenceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfileCurrent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PostingProfileCurrent.
    /// </summary>
    /// <param name="_postingProfileCurrent">
    /// The new value of the datacontract parameter PostingProfileCurrent; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PostingProfileCurrent
    /// </returns>
    [
        DataMemberAttribute('PostingProfileCurrent'),
        SysOperationLabelAttribute(literalstr("@SYS95952")),
        SysOperationHelpTextAttribute(literalstr("@SYS95951"))
    ]
    public boolean parmPostingProfileCurrent(boolean _postingProfileCurrent = postingProfileCurrent)
    {
        postingProfileCurrent = _postingProfileCurrent;
        return postingProfileCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfileOperations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PostingProfileOperations.
    /// </summary>
    /// <param name="_postingProfileOperations">
    /// The new value of the datacontract parameter PostingProfileOperations; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PostingProfileOperations
    /// </returns>
    [
        DataMemberAttribute('PostingProfileOperations'),
        SysOperationLabelAttribute(literalstr("@SYS95960")),
        SysOperationHelpTextAttribute(literalstr("@SYS95959"))
    ]
    public boolean parmPostingProfileOperations(boolean _postingProfileOperations = postingProfileOperations)
    {
        postingProfileOperations = _postingProfileOperations;
        return postingProfileOperations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfileTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PostingProfileTax.
    /// </summary>
    /// <param name="_postingProfileTax">
    /// The new value of the datacontract parameter PostingProfileTax; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PostingProfileTax
    /// </returns>
    [
        DataMemberAttribute('PostingProfileTax'),
        SysOperationLabelAttribute(literalstr("@SYS95962")),
        SysOperationHelpTextAttribute(literalstr("@SYS95961"))
    ]
    public boolean parmPostingProfileTax(boolean _postingProfileTax = postingProfileTax)
    {
        postingProfileTax = _postingProfileTax;
        return postingProfileTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS95982")),
        SysOperationHelpTextAttribute(literalstr("@SYS81802"))
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the dialog values for errors. The dialog values are handled through the contract.
    /// </summary>
    /// <returns>
    /// True if an error has occurred in the dialog values; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if ((this.parmPostingProfileCurrent() == false) && (this.parmPostingProfileTax() == false) && (this.parmPostingProfileOperations() == false))
        {
            ret = checkFailed("@SYS95979");
        }

        if (this.parmFromDate() == dateNull() || this.parmToDate() == dateNull())
        {
             ret = checkFailed("@SYS22087");
        }

        else
        {
            if (year(this.parmFromDate()) != year(this.parmToDate()))
            {
                ret = checkFailed("@SYS95984");
            }

            if (mthofyr(this.parmFromDate()) != mthofyr(this.parmToDate()))
            {
                 ret = checkFailed("@SYS95985");
            }

            if (this.parmFromDate() > this.parmToDate())
            {
                 ret = checkFailed("@SYS16982");
            }

            if (!LedgerFiscalJournalDP_IT::dataExistContract(this))
            {
                ret = checkFailed("@SYS26947");
            }

            return ret;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>