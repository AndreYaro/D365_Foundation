<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPeriodCreateEmpl</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjPeriodCreateEmpl extends ProjPeriodCreate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
/// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
/// interface.
/// </summary>
/// <returns>
/// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
/// </returns>
/// <remarks>
/// A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
/// in the Application Object Tree (AOT).
/// </remarks>
public Object dialog()
{
    DialogRunbase dialog    =  super();
    date tmpStartDate       = this.lastDateInPeriod(projPeriodEmpl);
    date tmpEndDate         = this.lastDateInPeriod(projPeriodLine);

    dialog.caption("@SYS50721");
    dialog.addGroup("@SYS40"); //period

    dialogPeriodStartDate = dialog.addFieldValue(extendedTypeStr(ProjPeriodFrom),startDate,"@SYS57856");
    dialogPeriodToDate    = dialog.addFieldValue(extendedTypeStr(ProjPeriodTo),stopDate,"@SYS22882");

    dialogPeriodStartDate.value(tmpStartDate);
    dialogPeriodToDate.value(tmpEndDate);

    dialogUtilNormsGroup = dialog.addGroup("@SYS102367"); //Utilization norm hours

    dialogNormBillable = dialog.addFieldValue(extendedTypeStr(RealBase), normBillable, "@SYS102368"); //billable hours
    dialogNormBillable.helpText("@SYS102670");//Norm hours for billable calculation.
    dialogNormBillable.configurationKey(configurationKeyNum(Project));

    dialogNormEfficiency = dialog.addFieldValue(extendedTypeStr(RealBase), normEfficiency, "@SYS102369"); //efficiency hours
    dialogNormEfficiency.helpText("@SYS102671");//Norm hours for efficiency calculation.
    dialogNormEfficiency.configurationKey(configurationKeyNum(Project));

    return dialog;
}

]]></Source>
			</Method>
			<Method>
				<Name>executeClass</Name>
				<Source><![CDATA[
    protected void executeClass()
{
    progress.setCaption("@Res:UpdatingResourcePeriods");
    progress.setTotal(any2int((select count(RecId) from projPeriodLine
                            where projPeriodLine.PeriodId   == this.parmProjPeriodId()  &&
                                  projPeriodLine.PeriodFrom >= startDate                &&
                                  projPeriodLine.PeriodTo   <= stopDate).RecId));

    progressCounter++;
    progress.setCount(progressCounter);
    progress.setText(strFmt("@Res:UpdatingResource", ResourceFacade::getID(this.parmResource())));

    if (this.parmResource())
    {
        ProjPeriodEmpl::generatePeriods(this.parmProjPeriodId(),this.parmResource(),startDate,stopDate, normBillable, normEfficiency);
    }
    else
    {
        this.resourcePeriod();
    }

}

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
{
    boolean ret;

    ret = super();

    this.parmStopDate(dialogPeriodToDate.value());
    this.parmStartDate(dialogPeriodStartDate.value());

    this.parmNormBillable(dialogNormBillable.value());
    this.parmNormEfficiency(dialogNormEfficiency.value());

    return ret;
}

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
public boolean validate(Object _calledFrom = null)
{
    boolean         ret;
    HcmWorkerRecId  worker;

    ret = super();

    if (ret)
    {
        if (! ProjPeriodTable::nextPeriod(this.parmProjPeriodId(),startDate))
        {
            return checkFailed("@SYS62476");
        }

        worker = ResourceFacade::getWorker(this.parmResource());
        if (worker && HcmWorker::find(worker).workerStatus() == HcmWorkerStatus::Terminated)
        {
            return checkFailed("@SYS98747");
        }
    }

    return ret;
}

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    private static ClassDescription description()
{
    return "@Res:UpdatingResourcePeriods";
}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>