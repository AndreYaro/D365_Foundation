<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventSerialReserveQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventSerialReserveQueryBuilder</c> class is used to build a<c>Query</c> sorted by serial values for selecting quantities and dimensions for reservation from the <c>WHSInventReserve</c> table.
/// </summary>
internal class WHSInventSerialReserveQueryBuilder extends WHSInventReserveQueryBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildOnHandQuery</Name>
				<Source><![CDATA[
    public Query buildOnHandQuery()
    {
        QueryBuildDataSource            qbdsInventSerial;
        QueryBuildDataSource            qbdsWHSInventReserve;
        QueryBuildDataSource            qbdsInventDim;
        InventOnHandQueryWHSStandard    onHandQuery;

        this.initQuery();

        qbdsInventSerial = query.addDataSource(tableNum(InventSerial));
        qbdsInventSerial.addRange(fieldNum(InventSerial, ItemId)).value(queryValue(itemId));

        qbdsWHSInventReserve = qbdsInventSerial.addDataSource(tableNum(WHSInventReserve));
        qbdsWHSInventReserve.joinMode(JoinMode::InnerJoin);
        qbdsWHSInventReserve.addLink(fieldNum(InventSerial, ItemId),fieldNum(WHSInventReserve, ItemId), qbdsInventSerial.name());

        this.addRangesToInventReserveQBDS(qbdsWHSInventReserve);

        qbdsInventDim = this.addInventDimDS(qbdsWHSInventReserve);
        qbdsInventDim.addLink(fieldNum(InventSerial, InventSerialId),fieldNum(InventDim, InventSerialId), qbdsInventSerial.name());

        if (this.parmExcludeSumWithDeltaRecords())
        {
            this.addWHSInventReserveDeltaDSNotExist(qbdsWHSInventReserve);
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSInventSerialReserveQueryBuilder construct()
    {
        return new WHSInventSerialReserveQueryBuilder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newExcludeSumWithDeltaRecords</Name>
				<Source><![CDATA[
	/// <summary>
	/// Initiates a new instance of this class based on the arguments together with excludeSumWithDeltaRecords field set to true.
	/// </summary>
	/// <param name="_itemId">
	/// The item ID to select on-hand for.
	/// </param>
	/// <param name="_inventDimCriteria">
	/// An <c>InventDim</c> buffer that will be used to filter the on-hand.
	/// </param>
	/// <param name="_inventDimParmCriteria">
	/// An <c>InventDimParm</c> buffer that will be used to filter the on-hand.
	/// </param>
	/// <param name="_reservationHierarchyLevel">
	/// The reservation level that should be used when selecting on-hand.
	/// </param>
	/// <param name="_ttsId">
	/// Created transaction id.
	/// </param>
	/// <param name="_includeOrdered">
	/// A boolean indicating of available ordered should be included.
	/// </param>
	/// <param name="_includePhysical">
	/// A boolean indicating if available physical should be included.
	/// </param>
	/// <param name="_minAvailQty">
	/// The minimum qty availablity to be used as a filter on the query.
	/// </param>
    /// <param name="_onlyReserveOnWHSEnabledWarehouses">
    /// Whether to allow reservation on non-WHS enabled warehouses.
    /// </param>
	/// A new instance of this class based on the arguments.
	/// </returns>
    public static WHSInventSerialReserveQueryBuilder newExcludeSumWithDeltaRecords(
        ItemId                          _itemId,
        InventDim                       _inventDimCriteria,
        InventDimParm                   _inventDimParmCriteria,
        WHSReservationHierarchyLevel    _reservationHierarchyLevel,
        CreatedTransactionId            _ttsId,
        boolean                         _includeOrdered,
        boolean                         _includePhysical,
        InventQty                       _minAvailQty,
        boolean                         _onlyReserveOnWHSEnabledWarehouses)
    {
        WHSInventSerialReserveQueryBuilder whsInventSerialReserveQueryBuilder = WHSInventSerialReserveQueryBuilder::construct();

        whsInventSerialReserveQueryBuilder.initializeFromParameters(_itemId,
            _inventDimCriteria,
            _inventDimParmCriteria,
            _reservationHierarchyLevel,
            _includeOrdered,
            _includePhysical);

        whsInventSerialReserveQueryBuilder.parmTtsId(_ttsId);
        whsInventSerialReserveQueryBuilder.parmExcludeSumWithDeltaRecords(true);
        whsInventSerialReserveQueryBuilder.parmMinAvailQty(_minAvailQty);
        whsInventSerialReserveQueryBuilder.parmOnlyReserveOnWHSEnabledWarehouses(_onlyReserveOnWHSEnabledWarehouses);

        return whsInventSerialReserveQueryBuilder;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>