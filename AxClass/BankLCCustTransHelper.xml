<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCCustTransHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCCustTransHelper</c> class helps filter and show the <c>CustTransOpen</c> records on
///    the <c>CustOpenTrans</c> form that are Letter of Credit related.
/// </summary>
class BankLCCustTransHelper extends BankLCCustVendTransHelper
{
    FormDataSource              bankLCCustTrans_ds;
    BankLCExportFeatureChecker  bankLCExportFeatureChecker;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the query for the form.
    /// </summary>
    /// <param name="_query">
    /// The form query.
    /// </param>
    public void buildQuery(Query _query)
    {
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;

        queryBuildDataSource = _query.dataSourceTable(tablenum(BankLCCustTrans));

        switch (bankDocumentTypeFilter)
        {
            case BankLCBankDocumentType::All :
                queryBuildDataSource.joinMode(JoinMode::OuterJoin);
                queryBuildDataSource.clearRange(fieldnum(BankLCCustTrans, BankDocumentType));
                break;
            default :
                queryBuildDataSource.joinMode(JoinMode::InnerJoin);
                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(BankLCCustTrans, BankDocumentType));
                queryBuildRange.value(QueryValue(BankLCCustVendTransHelper::convertDocumentType(bankDocumentTypeFilter)));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>configBankLCControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configs the Letter of Credit related controls shown on the form.
    /// </summary>
    /// <param name="_query">
    /// The form query.
    /// </param>
    public void configBankLCControls(Query   _query)
    {
        QueryBuildDataSource queryBuildDataSource;

        queryBuildDataSource = _query.dataSourceTable(tablenum(BankLCCustTrans));

        queryBuildDataSource.relations(false);
        queryBuildDataSource.addLink(fieldnum(CustTrans, BankLCExportLine), fieldnum(BankLCCustTrans, BankLCExportLine));

        if (bankLCExportFeatureChecker.checkFeatureEnabled())
        {
            bankDocumentTypeFilterControl.visible(true);
            bankLCCustTrans_ds.object(fieldnum(BankLCCustTrans, BankLCNumber)).visible(true);
            bankLCCustTrans_ds.object(fieldnum(BankLCCustTrans, LineNum)).visible(true);
        }
        else
        {
            _query.dataSourceTable(tablenum(BankLCCustTrans)).enabled(false);
            bankDocumentTypeFilterControl.visible(false);

            bankLCCustTrans_ds.object(fieldnum(BankLCCustTrans, BankLCNumber)).visible(false);
            bankLCCustTrans_ds.object(fieldnum(BankLCCustTrans, LineNum)).visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
        bankLCExportFeatureChecker = BankLCExportFeatureChecker::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankLCCustTransDS</Name>
				<Source><![CDATA[
        public FormDataSource parmBankLCCustTransDS(FormDataSource _bankLCCustTrans_ds = bankLCCustTrans_ds)
    {
        bankLCCustTrans_ds = _bankLCCustTrans_ds;
        return bankLCCustTrans_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static BankLCCustTransHelper construct()
    {
        return new BankLCCustTransHelper();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>