<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppStepFieldDataExtractorLocationInquiryList</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppStepFieldDataExtractorLocationInquiryList</c> class extracts fields value on location inquiry detail page.
/// </summary>
[WHSMobileAppStepId('LocationInquiryList')]
public class WHSMobileAppStepFieldDataExtractorLocationInquiryList extends WHSMobileAppStepFieldDataExtractorInquiryList
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>extractFieldVaule</Name>
				<Source><![CDATA[
    public str extractFieldVaule(ExtendedTypeId _typeId, container _formContainer)
    {
        switch (_typeId)
        {
            case extendedTypeNum(InventInventItemSearchItem):
                return this.getSelectedItemId(_formContainer);

            case extendedTypeNum(WMSLocationId):
                return this.getLocationId(_formContainer);

            case extendedTypeNum(WHSLicensePlateId):
                return this.getSelectedLicensePlateId(_formContainer);

            default:
                return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedItemId</Name>
				<Source><![CDATA[
    private str getSelectedItemId(container _formContainer)
    {
        // The code in the buildLocationInquiryForNonLPControlled and buildLocationInquiryForLPControlled methods
        // from the InventProcessGuideDisplayLocationDetailsPageBuilder class is deciding which position inside the item card control container should be used.
        // Because an empty line feed (\n) is added to the beginning, then the second position in the container has the item ID information.
        int position = 2;
        return this.getData(_formContainer, position);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLocationId</Name>
				<Source><![CDATA[
    private str getLocationId(container _formContainer)
    {
        container controlCon = conPeek(_formContainer, #FieldControlStartLoc + 1);
        var controlType = conPeek(controlCon, #controlType);
        if (controlType == #RFLabel)
        {
            return this.getDataFromLabelAttr(controlCon);
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedLicensePlateId</Name>
				<Source><![CDATA[
    private str getSelectedLicensePlateId(container _formContainer)
    {
        this.getSelectedControl(_formContainer);

        for (int i = selectedControlIndex-1; i > 0; i--)
        {
            container controlCon = conPeek(_formContainer, i);
            ExtendedTypeId inputType = str2Int(conPeek(controlCon, #inputType));
            if (inputType == extendedTypeNum(WHSLicensePlateId))
            {
                return this.getDataFromLabelAttr(controlCon);
            }
        }

        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>