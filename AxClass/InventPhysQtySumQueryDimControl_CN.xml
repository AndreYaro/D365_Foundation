<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPhysQtySumQueryDimControl_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class <c>InventPhysQtySumQueryDimControl_CN</c> is used to perform dimention control on the query.
/// </summary>

class InventPhysQtySumQueryDimControl_CN
{
    InventDimParm dimParmVisible;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addGroupByDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds group by Inventory dimension according to setting.
    /// </summary>
    /// <param name="_inventSumQuery">
    /// A query with datasource InventDim.
    /// </param>

    protected void addGroupByDim(Query _inventSumQuery)
    {
        QueryBuildDataSource qbdsDim;

        qbdsDim = _inventSumQuery.dataSourceTable(tablenum(InventDim));

        if (qbdsDim)
        {
            qbdsDim.sortClear();
            dimParmVisible.queryAddSortField(qbdsDim);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>configQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures group by dimension setting of query
    /// </summary>
    /// <param name="_inventSumQuery">
    /// A query.
    /// </param>
    /// <returns>
    /// A query after configured by dimention control.
    /// </returns>

    public Query configQuery(Query _inventSumQuery)
    {
        this.addGroupByDim(_inventSumQuery);

        return _inventSumQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustShowField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gtes whether the dimension field is shown in the result.
    /// </summary>
    /// <param name="_tmpDimFieldId">
    /// A dimension field.
    /// </param>
    /// <returns>
    /// Whether the dimension field is shown in the result.
    /// </returns>

    protected NoYes mustShowField(fieldId _tmpDimFieldId)
    {
        fieldId dimfield;

        dimfield = InventPhysQtySumTmp_CN::tmpDim2Dim(_tmpDimFieldId);
        return dimParmVisible.(InventDim::dim2dimParm(dimfield));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimParmVisible</Name>
				<Source><![CDATA[
        InventDimParm parmDimParmVisible(InventDimParm _dimParmVisible = dimParmVisible)
    {
        dimParmVisible = _dimParmVisible;
        return dimParmVisible;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventPhysQtySumQueryDimControl_CN construct()
    {
        return new InventPhysQtySumQueryDimControl_CN();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>