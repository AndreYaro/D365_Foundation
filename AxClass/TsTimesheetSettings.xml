<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TsTimesheetSettings</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TSTimesheetSettings</c> class is the data contract class that represents information about initial settings.
/// </summary>
[DataContractAttribute]
public class TsTimesheetSettings
{
    protected LegalEntityDataAreaId defaultLegalEntity;
    protected NoYes                 hideExtComments;
    protected NoYes                 hideIntComments;
    protected NoYes                 hideCategory;
    protected NoYes                 hideActivity;
    protected NoYes                 hideLineProperty;
    protected NoYes                 enableIntercompanyTimesheet;
    protected List                  periodList;
    protected ProjPeriodId          periodId;
    protected LanguageId            userLanguage;

    private TSFieldVisibility       visibilityCustomer;
    private TSFieldVisibility       visibilityCategory;
    private TSFieldVisibility       visibilityActivity;
    private TSFieldVisibility       visibilityLineProperty;
    private TSFieldVisibility       visibilityInternalComment;
    private TSFieldVisibility       visibilityExternalComment;
    private TSFieldVisibility       visibilitySalesTaxGroup;
    private TSFieldVisibility       visibilityItemSalesTaxGroup;

    private LegalEntityDataAreaId   legalEntity;
    private Name                    legalEntityName;
    private NoYes                   useFavorites;
    private NoYes                   requireStartStopTime;
    private NoYes                   isCurrentUserAnApprover;
    private TSWeekStart             dayWeekStarts;
    private List                    resources;
    private List                    customFields;
    private LanguageId              preferredLocale;

    // Used to set the order in which custom fields should appear on the user interface
    protected Counter customFieldOrderSequence;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildCustomFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a list of the custom fields that get passed via services
    /// so that consuming app knows the meta data for custom fields used in timesheet functionality.
    /// </summary>
    /// <returns>
    /// A <c>List</c> of <c>TSTimesheetCustomField</c> objects;
    /// </returns>
    /// <remarks>
    /// Utilize chain of command via extension to add custom fields to the data contract.
    /// Add your custom fields after calling next.
    ///</remarks>
    protected List buildCustomFieldList()
    {
        List customFieldList = new List(Types::Class);
        customFieldOrderSequence = 1;
        return customFieldList;

        //
        //// SAMPLE CODE FOR ADDING CUSTOM FIELDS
        //
        // public List buildCustomFieldList()
        // {
        //    List customFieldList = next buildCustomFieldList();
        //
        //    TSTimesheetCustomField tsTimesheetCustomField;
        //
        //// 1) The following code adds a real value displayed as money with the USD currency code in the consumer app in the timesheet header section.
        ////    Its values are initialized from the metadata of the field on the table.
        //
        //     tsTimesheetCustomField = TSTimesheetCustomField::newFromMetadata(tableNum(<TableName>), fieldNum(<TableName>, <fieldName>));
        //     tsTimesheetCustomField.parmFieldExtendedType(TSCustomFieldExtendedType::Currency);
        //     tsTimesheetCustomField.parmFieldSection(TSCustomFieldSection::Header);
        //     tsTimesheetCustomField.parmStringValue('USD');
        //     tsTimesheetCustomField.parmOrderSequence(customFieldOrderSequence);
        //     customFieldOrderSequence++;
        //     customFieldList.addEnd(tsTimesheetCustomField);
        //
        //// 2) The following code would add a string value with options displayed in the consumer app in the timesheet line section.
        ////    Its values can be set from business logic written in X++.
        //
        //     tsTimesheetCustomField = new TSTimesheetCustomField();
        //     tsTimesheetCustomField.parmFieldExtendedType(TSCustomFieldExtendedType::None);
        //     tsTimesheetCustomField.parmFieldSection(TSCustomFieldSection::Line);
        //
        //     SysDictField dict = new SysDictField(tableNum(<TableName>), fieldNum(<TableName>, <fieldName>));
        //     tsTimesheetCustomField.parmFieldBaseType(Types::String);
        //     tsTimesheetCustomField.parmTableName('<TableName>');
        //     tsTimesheetCustomField.parmFieldName('<fieldName>');
        //     tsTimesheetCustomField.parmLabel('hardcoded string');
        //     tsTimesheetCustomField.parmIsEditable(false);
        //     tsTimesheetCustomField.parmIsMandatory(false);
        //     tsTimesheetCustomField.parmStringLength(10);
        //
        //     List stringOptions = new List(Types::String);
        //     stringOptions.addEnd("First option");
        //     stringOptions.addEnd("Second option");
        //     stringOptions.addEnd("Third option");
        //     stringOptions.addEnd("Fourth option");
        //     stringOptions.addEnd("Fifth option");
        //
        //     tsTimesheetCustomField.parmStringOptions(stringOptions);
        //     tsTimesheetCustomField.parmOrderSequence(customFieldOrderSequence);
        //     customFieldOrderSequence++;
        //     customFieldList.addEnd(tsTimesheetCustomField);
        //
        //     return customFieldList;
        // }
        //
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateCustomFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provide metadata for custom fields in the data contract that gets passed via services
    /// so that consumer knows what custom fields to expect for timesheet functionality.
    /// </summary>
    internal void populateCustomFields()
    {
        List customFieldList = this.buildCustomFieldList();
        this.parmCustomFields(customFieldList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates fields based on project parameters.
    /// </summary>
    internal void populateFromParameters()
    {
        ProjParameters projParameters = ProjParameters::find();

        this.parmHideActivity(projParameters.HideTimesheetActivity);
        this.parmHideCategory(projParameters.HideTimesheetCategory);
        this.parmHideExtComments(projParameters.HideTimesheetExtComments);
        this.parmHideIntComments(projParameters.HideTimesheetIntComments);
        this.parmHideLineProperty(projParameters.HideTimesheetLineProperty);

        this.parmEnableIntercompanyTimesheet(projParameters.EnableIntercompanyTimesheet);
        this.parmUseFavorites(projParameters.UseFavorites);
        this.parmRequireStartStopTime(projParameters.RequireStartStopTime);
        this.parmDayWeekStart(projParameters.WeekStart);

        this.parmVisibilityCustomer(projParameters.TimesheetServiceVisibilityCustomer);
        this.parmVisibilityCategory(projParameters.TimesheetServiceVisibilityCategory);
        this.parmVisibilityActivity(projParameters.TimesheetServiceVisibilityActivity);
        this.parmVisibilityLineProperty(projParameters.TimesheetServiceVisibilityLineProperty);
        this.parmVisibilityInternalComment(projParameters.TimesheetServiceVisibilityInternalComment);
        this.parmVisibilityExternalComment(projParameters.TimesheetServiceVisibilityExternalComment);
        this.parmVisibilitySalesTaxGroup(projParameters.TimesheetServiceVisibilitySalesTaxGroup);
        this.parmVisibilityItemSalesTaxGroup(projParameters.TimesheetServiceVisibilityItemSalesTaxGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateFromUserInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates fields based on current user's preferences.
    /// </summary>
    internal void populateFromUserInfo()
    {
        UserInfo userInfo;
        select firstonly Language, PreferredLocale from userInfo where userInfo.Id == curUserId();
        this.parmUserLanguage(userInfo.Language);

        if (userInfo.PreferredLocale)
        {
            this.parmPreferredLocale(userInfo.PreferredLocale);
        }
        else
        {
            this.parmPreferredLocale(userInfo.Language);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>DefaultLegalEntity</c> parameter.
    /// </summary>
    /// <param name="_legalEntity">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>DefaultLegalEntity</c> parameter.
    /// </returns>
    [DataMemberAttribute('defaultLegalEntity')]
    public LegalEntityDataAreaId parmDefaultLegalEntity(LegalEntityDataAreaId _legalEntity = defaultLegalEntity)
    {
        defaultLegalEntity = _legalEntity;
        return defaultLegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>legalEntity</c> parameter.
    /// </summary>
    /// <param name="_legalEntity">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>legalEntity</c> parameter.
    /// </returns>
    [DataMemberAttribute('legalEntity')]
    public LegalEntityDataAreaId parmLegalEntity(LegalEntityDataAreaId _legalEntity = legalEntity)
    {
        legalEntity = _legalEntity;
        return legalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntityName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>legalEntityName</c> parameter.
    /// </summary>
    /// <param name="_legalEntityName">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>legalEntityName</c> parameter.
    /// </returns>
    [DataMemberAttribute('legalEntityName')]
    public Name parmLegalEntityName(Name _legalEntityName = legalEntityName)
    {
        legalEntityName = _legalEntityName;
        return legalEntityName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnableIntercompanyTimesheet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>EnableIntercompanyTimesheet</c> parameter.
    /// </summary>
    /// <param name="_enableIntercompanyTimesheet">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>HideActivity</c> parameter.
    /// </returns>
    [DataMemberAttribute('enableIntercompanyTimesheet')]
    public NoYes parmEnableIntercompanyTimesheet(NoYes _enableIntercompanyTimesheet = enableIntercompanyTimesheet)
    {
        enableIntercompanyTimesheet = _enableIntercompanyTimesheet;
        return enableIntercompanyTimesheet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUseFavorites</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>useFavorites</c> parameter.
    /// </summary>
    /// <param name="_useFavorites">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>useFavorites</c> parameter.
    /// </returns>
    [DataMemberAttribute('useFavorites')]
    public NoYes parmUseFavorites(NoYes _useFavorites = useFavorites)
    {
        useFavorites = _useFavorites;
        return useFavorites;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequireStartStopTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>requireStartStopTime</c> parameter.
    /// </summary>
    /// <param name="_requireStartStopTime">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>requireStartStopTime</c> parameter.
    /// </returns>
    [DataMemberAttribute('requireStartStopTime')]
    public NoYes parmRequireStartStopTime(NoYes _requireStartStopTime = requireStartStopTime)
    {
        requireStartStopTime = _requireStartStopTime;
        return requireStartStopTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCurrentUserAnApprover</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>isCurrentUserAnApprover</c> parameter.
    /// </summary>
    /// <param name="_isCurrentUserAnApprover">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>isCurrentUserAnApprover</c> parameter.
    /// </returns>
    [DataMemberAttribute('isCurrentUserAnApprover')]
    public NoYes parmIsCurrentUserAnApprover(NoYes _isCurrentUserAnApprover = isCurrentUserAnApprover)
    {
        isCurrentUserAnApprover = _isCurrentUserAnApprover;
        return isCurrentUserAnApprover;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDayWeekStart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>dayWeekStarts</c> parameter.
    /// </summary>
    /// <param name="_dayWeekStarts">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>dayWeekStarts</c> parameter.
    /// </returns>
    [DataMemberAttribute('dayWeekStarts')]
    public TSWeekStart parmDayWeekStart(TSWeekStart _dayWeekStarts = dayWeekStarts)
    {
        dayWeekStarts = _dayWeekStarts;
        return dayWeekStarts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHideActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>HideActivity</c> parameter.
    /// </summary>
    /// <param name="_hideActivity">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>HideActivity</c> parameter.
    /// </returns>
    [DataMemberAttribute('hideActivity')]
    public NoYes parmHideActivity(NoYes _hideActivity = hideActivity)
    {
        hideActivity = _hideActivity;
        return hideActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHideCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>HideCategory</c> parameter.
    /// </summary>
    /// <param name="_hideCategory">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>HideCategory</c> parameter.
    /// </returns>
    [DataMemberAttribute('hideCategory')]
    public NoYes parmHideCategory(NoYes _hideCategory = hideCategory)
    {
        hideCategory = _hideCategory;
        return hideCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHideExtComments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>HideExtComments</c> parameter.
    /// </summary>
    /// <param name="_hideExtComments">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>HideExtComments</c> parameter.
    /// </returns>
    [DataMemberAttribute('hideExtComments')]
    public NoYes parmHideExtComments(NoYes _hideExtComments = hideExtComments)
    {
        hideExtComments = _hideExtComments;
        return hideExtComments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHideIntComments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>HideIntComments</c> parameter.
    /// </summary>
    /// <param name="_hideIntComments">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>HideIntComments</c> parameter.
    /// </returns>
    [DataMemberAttribute('hideIntComments')]
    public NoYes parmHideIntComments(NoYes _hideIntComments = hideIntComments)
    {
        hideIntComments = _hideIntComments;
        return hideIntComments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHideLineProperty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>HideLineProperty</c> parameter.
    /// </summary>
    /// <param name="_hideLineProperty">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>HideLineProperty</c> parameter.
    /// </returns>
    [DataMemberAttribute('hideLineProperty')]
    public NoYes parmHideLineProperty(NoYes _hideLineProperty = hideLineProperty)
    {
        hideLineProperty = _hideLineProperty;
        return hideLineProperty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>PeriodId</c> parameter.
    /// </summary>
    /// <param name="_periodId">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>PeriodId</c> parameter.
    /// </returns>
    [DataMemberAttribute('periodId')]
    public ProjPeriodId parmPeriodId(ProjPeriodId _periodId = periodId)
    {
        periodId = _periodId;
        return periodId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>Period</c> parameter.
    /// </summary>
    /// <param name="_periodList">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>Period</c> parameter.
    /// </returns>
    [DataMemberAttribute('periodList'),
     AifCollectionTypeAttribute('return', Types::Class, classStr(TSTimesheetPeriods))]
    public List parmPeriodList(List _periodList = periodList)
    {
        periodList = _periodList;
        return periodList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>resources</c> parameter.
    /// </summary>
    /// <param name="_resources">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>resources</c> parameter.
    /// </returns>
    [DataMemberAttribute('resources'),
     AifCollectionTypeAttribute('return', Types::Class, classStr(TSTimesheetResource))]
    public List parmResources(List _resources = resources)
    {
        resources = _resources;
        return resources;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>customFields</c> parameter.
    /// </summary>
    /// <param name="_customFields">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>customFields</c> parameter.
    /// </returns>
    [DataMemberAttribute('customFields'), AifCollectionTypeAttribute('return', Types::Class, classStr(TSTimesheetCustomField))]
    public List parmCustomFields(List _customFields = customFields)
    {
        customFields = _customFields;
        return customFields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>userLanguage</c> parameter.
    /// </summary>
    /// <param name="_userLanguage">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>userLanguage</c> parameter.
    /// </returns>
    [DataMemberAttribute('userLanguage')]
    public str parmUserLanguage(str _userLanguage = userLanguage)
    {
        userLanguage = _userLanguage;
        return userLanguage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreferredLocale</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>preferredLocale</c> parameter.
    /// </summary>
    /// <param name="_preferredLocale">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>preferredLocale</c> parameter.
    /// </returns>
    [DataMemberAttribute('preferredLocale')]
    public LanguageId parmPreferredLocale(LanguageId _preferredLocale = preferredLocale)
    {
        preferredLocale = _preferredLocale;
        return preferredLocale;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVisibilityCustomer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>visibilityCustomer</c> parameter.
    /// </summary>
    /// <param name="_visibilityCustomer">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>visibilityCustomer</c> parameter.
    /// </returns>
    [DataMemberAttribute('visibilityCustomer')]
    public TSFieldVisibility parmVisibilityCustomer(TSFieldVisibility _visibilityCustomer = visibilityCustomer)
    {
        visibilityCustomer = _visibilityCustomer;
        return visibilityCustomer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVisibilityCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>visibilityCategory</c> parameter.
    /// </summary>
    /// <param name="_visibilityCategory">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>visibilityCategory</c> parameter.
    /// </returns>
    [DataMemberAttribute('visibilityCategory')]
    public TSFieldVisibility parmVisibilityCategory(TSFieldVisibility _visibilityCategory = visibilityCategory)
    {
        visibilityCategory = _visibilityCategory;
        return visibilityCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVisibilityActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>visibilityActivity</c> parameter.
    /// </summary>
    /// <param name="_visibilityActivity">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>visibilityActivity</c> parameter.
    /// </returns>
    [DataMemberAttribute('visibilityActivity')]
    public TSFieldVisibility parmVisibilityActivity(TSFieldVisibility _visibilityActivity = visibilityActivity)
    {
        visibilityActivity = _visibilityActivity;
        return visibilityActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVisibilityLineProperty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>visibilityLineProperty</c> parameter.
    /// </summary>
    /// <param name="_visibilityLineProperty">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>visibilityLineProperty</c> parameter.
    /// </returns>
    [DataMemberAttribute('visibilityLineProperty')]
    public TSFieldVisibility parmVisibilityLineProperty(TSFieldVisibility _visibilityLineProperty = visibilityLineProperty)
    {
        visibilityLineProperty = _visibilityLineProperty;
        return visibilityLineProperty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVisibilityInternalComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>visibilityInternalComment</c> parameter.
    /// </summary>
    /// <param name="_visibilityInternalComment">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>visibilityInternalComment</c> parameter.
    /// </returns>
    [DataMemberAttribute('visibilityInternalComment')]
    public TSFieldVisibility parmVisibilityInternalComment(TSFieldVisibility _visibilityInternalComment = visibilityInternalComment)
    {
        visibilityInternalComment = _visibilityInternalComment;
        return visibilityInternalComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVisibilityExternalComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>visibilityExternalComment</c> parameter.
    /// </summary>
    /// <param name="_visibilityExternalComment">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>visibilityExternalComment</c> parameter.
    /// </returns>
    [DataMemberAttribute('visibilityExternalComment')]
    public TSFieldVisibility parmVisibilityExternalComment(TSFieldVisibility _visibilityExternalComment = visibilityExternalComment)
    {
        visibilityExternalComment = _visibilityExternalComment;
        return visibilityExternalComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVisibilitySalesTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>visibilitySalesTaxGroup</c> parameter.
    /// </summary>
    /// <param name="_visibilitySalesTaxGroup">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>visibilitySalesTaxGroup</c> parameter.
    /// </returns>
    [DataMemberAttribute('visibilitySalesTaxGroup')]
    public TSFieldVisibility parmVisibilitySalesTaxGroup(TSFieldVisibility _visibilitySalesTaxGroup = visibilitySalesTaxGroup)
    {
        visibilitySalesTaxGroup = _visibilitySalesTaxGroup;
        return visibilitySalesTaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVisibilityItemSalesTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>visibilityItemSalesTaxGroup</c> parameter.
    /// </summary>
    /// <param name="_visibilityItemSalesTaxGroup">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>visibilityItemSalesTaxGroup</c> parameter.
    /// </returns>
    [DataMemberAttribute('visibilityItemSalesTaxGroup')]
    public TSFieldVisibility parmVisibilityItemSalesTaxGroup(TSFieldVisibility _visibilityItemSalesTaxGroup = visibilityItemSalesTaxGroup)
    {
        visibilityItemSalesTaxGroup = _visibilityItemSalesTaxGroup;
        return visibilityItemSalesTaxGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>