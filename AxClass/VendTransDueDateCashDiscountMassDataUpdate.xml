<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTransDueDateCashDiscountMassDataUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Performs a mass data update in batch for the CashDiscBaseDate and PaymTermId fields on the VendTrans table,
/// populating them with data queried from underlying documents.
/// </summary>
public class VendTransDueDateCashDiscountMassDataUpdate extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        VendTransDueDateCashDiscountMassDataUpdate controller = new VendTransDueDateCashDiscountMassDataUpdate(
            classStr(VendTransDueDateCashDiscountMassDataUpdate),
            methodStr(VendTransDueDateCashDiscountMassDataUpdate, updateVendTransCashDiscountFields),
            SysOperationExecutionMode::ScheduledBatch);

        controller.batchInfo().parmBatchExecute(NoYes::Yes);
        controller.parmDialogCaption("@AccountsReceivable:CustVendTransDueDateCashDiscountActivationHeader");
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateForm</Name>
				<Source><![CDATA[
    public FormName templateForm()
    {
        return formStr(CustVendTransDueDateCashDiscountActivation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendTransCashDiscountFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates cash discount fields for all VendTrans records.
    /// </summary>
    public void updateVendTransCashDiscountFields()
    {
        VendTrans vendTrans;
        VendTransDueDateCashDiscountUpdateView updateView;

        vendTrans.skipAosValidation(true);
        vendTrans.skipDataMethods(true);
        vendTrans.skipEvents(true);
        vendTrans.skipDeleteActions(true);

        update_recordset vendTrans
            setting CashDiscBaseDate = updateView.VendTransBaseDate,
                    PaymTermId = updateView.VendTransPaymentTerms
            join updateView
                where vendTrans.RecId == updateView.VendTransRecId
                   && !vendTrans.CashDiscBaseDate
                   && !vendTrans.PaymTermId
                   && (updateView.VendTransBaseDate || updateView.VendTransPaymentTerms);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>