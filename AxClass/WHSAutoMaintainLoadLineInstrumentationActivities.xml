<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSAutoMaintainLoadLineInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for auto maintenance of load line instrumentation logging.
/// </summary>
internal final class WHSAutoMaintainLoadLineInstrumentationActivities
{
    private const str ActivityNamePrefix = 'AutoMaintainLoadLine.';

    private WHSInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static WHSAutoMaintainLoadLineInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSAutoMaintainLoadLineInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>locateShipment</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext locateShipment()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'LocateShipment'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>locatedShipment</Name>
				<Source><![CDATA[
    public void locatedShipment(SysInstrumentationActivityContext _activityContext, boolean _createdNewShipment)
    {
        _activityContext.addCustomProperty('CreatedNewShipment', any2Str(_createdNewShipment));
    }

]]></Source>
			</Method>
			<Method>
				<Name>maintainLoadLine</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext maintainLoadLine(InventHandlingQty _diffHandlingQty)
    {
        var activity = logger.activity(ActivityNamePrefix + 'MaintainLoadLine');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty('LoadLine.AddRemoveQty', any2Str(_diffHandlingQty > 0 ? AddRemove::Add : AddRemove::Remove));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maintainedLoadLine</Name>
				<Source><![CDATA[
    public void maintainedLoadLine(SysInstrumentationActivityContext _activityContext, SysAppCRUDOperation _operation)
    {
        _activityContext.addCustomProperty('LoadLine.Operation', any2Str(_operation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLoadLines</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext updateLoadLines()
    {
        var activity = logger.activity(ActivityNamePrefix + 'UpdateLoadLines');

        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>