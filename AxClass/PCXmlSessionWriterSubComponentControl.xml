<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCXmlSessionWriterSubComponentControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCXmlSessionWriterSubComponentControl</c> class writes session XML for the sub component control records.
/// </summary>
public class PCXmlSessionWriterSubComponentControl
{
    #PC
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeEnd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes ending XML tags for the component control.
    /// </summary>
    /// <param name="_xmlWriter">
    ///    The XML writer to use to store the XML representation of this record.
    /// </param>
    protected void writeEnd(PCXmlWriter _xmlWriter)
    {
        _xmlWriter.writeEndElement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Writes the XML representation of a component control.
    /// </summary>
    /// <param name="_subComponent">
    ///    The component control record for which to generate the XML.
    /// </param>
    /// <param name="_xmlWriter">
    ///    The XML writer to use to store the XML representation of this record.
    /// </param>
    public void write(PCSubComponent _subComponent, PCXmlWriter _xmlWriter)
    {
        PCSubComponentControl  subComponentControl = PCSubComponentControl::findBySubComponentAndModifierType(_subComponent.RecId, PCSubComponentModifierType::Hidden);
        PCExpressionConstraint constraint;

        PcXmlSessionWriterControlConstraint xmlSessionWriterControlConstraint;

        if (subComponentControl.RecId != 0)
        {
            this.writeStart(subComponentControl, _xmlWriter);

            constraint = subComponentControl.getConstraint();

            if ((constraint) && (constraint.Expression))
            {
                xmlSessionWriterControlConstraint = PcXmlSessionWriterControlConstraint::construct();
                xmlSessionWriterControlConstraint.write(constraint, _xmlWriter);
            }

            this.writeEnd(_xmlWriter);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeStart</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Writes the starting XML tags for the component control.
    /// </summary>
    /// <param name="_subComponentControl">
    ///    The component control record for which to generate the XML.
    /// </param>
    /// <param name="_xmlWriter">
    ///    The XML writer to use to store the XML representation of this record.
    /// </param>
    protected void writeStart(PCSubComponentControl    _subComponentControl,
                                PCXmlWriter              _xmlWriter)
    {
        switch (_subComponentControl.Modifier)
        {
            case PCSubComponentModifierType::Hidden:
                _xmlWriter.writeStartElement(#HiddenModifierElement);
                break;
            default:
                throw error(error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCXmlSessionWriterSubComponentControl construct()
    {
        return new PCXmlSessionWriterSubComponentControl();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>