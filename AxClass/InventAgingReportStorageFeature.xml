<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAgingReportStorageFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;

[ExportAttribute(identifierstr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal class InventAgingReportStorageFeature implements IFeatureLifecycle, IFeatureMetadata
{
    private static InventAgingReportStorageFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new InventAgingReportStorageFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static InventAgingReportStorageFeature instance()
    {
        return InventAgingReportStorageFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemFlightingHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hides Invent value report storage menu item based on feature status.
    /// </summary>
    /// <param name = "_rootMenu">Root menu.</param>
    /// <param name = "_subMenu">Sub menu.</param>
    /// <param name = "_visible">Whether or not the submenu should be visible.</param>
    /// <remarks>This will only hide the individual menu items if they are contained in a group that we will also be hiding.</remarks>
    [SubscribesTo(classstr(SysMenuNavigationObjectFactory), staticdelegatestr(SysMenuNavigationObjectFactory, checkAddSubMenuDelegate))]
    public static void menuItemFlightingHandler(SysDictMenu _rootMenu, SysDictMenu _subMenu, SysBoxedBoolean _visible)
    {
        if (_subMenu.isMenuItem())
        {
            var metaElement = _subMenu.GetMenuItemMetaElement();
            if (metaElement != null)
            {
                if (metaElement.Name == menuItemDisplayStr(InventAgingStorage))
                {
                    _visible.value = Dynamics.AX.Application.FeatureStateProvider::isFeatureEnabled(InventAgingReportStorageFeature::instance());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>FeatureLabelId</c> for the invent value report storage feature.
    /// </summary>
    /// <returns>The label for the invent value report storage feature.</returns>
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@SCM:InventAgingReportStorage");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>FeatureModuleV0</c> for the invent value report storage feature.
    /// </summary>
    /// <returns>The module for the invent value report storage feature.</returns>
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::CostManagement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>FeatureLabelId</c> for the invent value report storage feature.
    /// </summary>
    /// <returns>The summary for the invent value report storage feature.</returns>
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@SCM:InventoryAgingReportStorageFeatureSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>WebSiteURL</c> for the invent value report storage feature.
    /// </summary>
    /// <returns>The URL for the invent value report storage feature.</returns>
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the invent value report storage feature is enabled by default.
    /// </summary>
    /// <returns>False</returns>
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the invent value report storage feature can be disabled.
    /// </summary>
    /// <returns>true</returns>
    [Hookable(false)]
    public boolean canDisable()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>