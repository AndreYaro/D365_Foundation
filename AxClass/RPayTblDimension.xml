<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayTblDimension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// class-container for time dimensions.
/// </summary>
final public class RPayTblDimension
{
    RPayTblTimeCode         timeCode;
    RHRMTitleRecId          hcmTitleId;
    RPayCalendarId          calendarId;
    container               tblRate;
    ReportPeriod_RU         sourceDate;
    RPayHRMOrganizationId   organizationId;
    RPayFormType            payFormType;
    RPayCorrectedPeriod     correctedPeriod;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clones the time dimension.
    /// </summary>
    /// <param name="_tblDimensionDestination">
    /// The time dimension to clone to.
    /// </param>
    /// <returns>
    /// The cloned time dimension.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayTblDimension clone(RPayTblDimension _tblDimensionDestination = null)
    {
        RPayTblDimension ret;

        if (_tblDimensionDestination)
        {
            ret = _tblDimensionDestination;
        }
        else
        {
            ret = new RPayTblDimension();
        }

        ret.parmCalendarId(this.parmCalendarId());
        ret.parmHcmTitleId(this.parmHcmTitleId());
        ret.parmOrganizationId(this.parmOrganizationId());
        ret.parmSourceDate(this.parmSourceDate());
        ret.parmTblRate(this.parmTblRate());
        ret.parmTimeCode(this.parmTimeCode());
        ret.parmPayFormType(this.parmPayFormType());
        ret.parmCorrectedPeriod(this.parmCorrectedPeriod());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>equal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if time dimensions are equal.
    /// </summary>
    /// <param name="_dim">
    /// The dimension to comapre to.
    /// </param>
    /// <returns>
    /// True if time dimensions are equal.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean equal(Object _dim)
    {
        boolean ret;

        ret = this.parmCalendarId() == _dim.parmCalendarId()
            && this.parmHcmTitleId() == _dim.parmHcmTitleId()
            && this.parmOrganizationId() == _dim.parmOrganizationId()
            && this.parmPayFormType()    == _dim.parmPayFormType()
            && this.parmSourceDate()     == _dim.parmSourceDate()
            && this.parmTblRate()        == _dim.parmTblRate()
            && this.parmTimeCode()       == _dim.parmTimeCode()
            && this.parmCorrectedPeriod() == _dim.parmCorrectedPeriod();
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalendarId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayCalendarId parmCalendarId(RPayCalendarId _calendarId = calendarId)
    {
        calendarId = _calendarId;

        return calendarId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCorrectedPeriod</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayCorrectedPeriod parmCorrectedPeriod(RPayCorrectedPeriod _correctedPeriod = correctedPeriod)
    {
        correctedPeriod = _correctedPeriod;
        return correctedPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHcmTitleId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RHRMTitleRecId parmHcmTitleId(RHRMTitleRecId _hcmTitleId = hcmTitleId)
    {
        hcmTitleId = _hcmTitleId;

        return hcmTitleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrganizationId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayHRMOrganizationId parmOrganizationId(RPayHRMOrganizationId _organizationId = organizationId)
    {
        organizationId = _organizationId;

        return organizationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayFormType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayFormType parmPayFormType(RPayFormType _payFormType = payFormType)
    {
        payFormType = _payFormType;

        return payFormType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ReportPeriod_RU parmSourceDate(ReportPeriod_RU _sourceDate = sourceDate)
    {
        sourceDate = _sourceDate;

        return sourceDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTblRate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public container parmTblRate(container _tblRate = tblRate)
    {
        tblRate = _tblRate;

        return tblRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayTblTimeCode parmTimeCode(RPayTblTimeCode _timeCode = timeCode)
    {
        timeCode = _timeCode;

        return timeCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string description.
    /// </summary>
    /// <returns>
    /// The string.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str toString()
    {
        str ret;

        ret = "(";
        ret += timeCode;
        ret += ",[" + con2Str(tblRate) + "]";
        ret += "," + date2StrUsr(sourceDate, DateFlags::None);
        ret += "," + date2StrUsr(correctedPeriod, DateFlags::None);
        ret += ")";

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionClassesIds</Name>
				<Source><![CDATA[
/// <summary>
    /// Gets the container will time dimensions handling classes ids.
    /// </summary>
    /// <returns>
    /// The container with classes ids.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected static container getDimensionClassesIds()
    {
        return [classNum('RPayTblDimensionFillerOrgTitle'),
                classNum('RPayTblDimensionFillerPayFormType'),
                classNum('RPayTblDimensionFillerSourceDate'),
                classNum('RPayTblDimensionFillerRate'),
                classNum('RPayTblDimensionFillerCorrectedPeriod')
               ];
    }
]]></Source>
			</Method>
			<Method>
				<Name>getDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets time dimensions.
    /// </summary>
    /// <returns>
    /// The list of time dimensions.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static List getDimensions()
    {
        SysDictClass dictClass;
        container con = RPayTblDimension::getDimensionClassesIds();
        RPayTblIDimensionFiller tblDimensionFiller;
        int i;

        List list = new List(Types::Class);

        for (i=1; i<= conLen(con); ++i)
        {
            dictClass = new SysDictClass(conPeek(con, i));
            tblDimensionFiller = dictClass.makeObject();
            list.addEnd(tblDimensionFiller);
        }

        return list;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>