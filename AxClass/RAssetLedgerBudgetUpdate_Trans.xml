<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetLedgerBudgetUpdate_Trans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RAssetLedgerBudgetUpdate_Trans</c> transfers the asset budget transactions to ledger budget
///  from the asset transaction form.
/// </summary>
class rAssetLedgerBudgetUpdate_Trans extends RAssetLedgerBudgetUpdate
{
    RAssetBudgetTrans   rAssetBudgetTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase dialog = super();
        ;

        dialog.caption("@SYS8801");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a buffer of <c>RAssetBudgetTrans</c> table record.
    /// </summary>
    /// <param name="_common">
    /// A buffer of <c>RAssetBudgetTrans</c> table record.
    /// </param>
    protected void initInstance(Common _common)
    {
        rAssetBudgetTrans  = _common as RAssetBudgetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        RAssetBudgetTrans   budgetTrans;
        ;

        if (! this.check())
            throw error("@SYS79625");

        this.initForBudgetTransaction();

        ttsbegin;

        while select forupdate budgetTrans
            order by TransDate
            where budgetTrans.AssetId                  == rAssetBudgetTrans.AssetId         &&
                  budgetTrans.BudgetModel              == rAssetBudgetTrans.BudgetModel     &&
                  budgetTrans.AssetStandardId          == rAssetBudgetTrans.AssetStandardId &&
                  budgetTrans.AssetBudgetPostingStatus == RAssetBudgetPostingStatus::PostedToAssets
        {
            if (this.validateBudget(budgetTrans))
            {
                // Create budget transaction for asset budget ledger account & offset
                this.createBudgetTransaction(budgetTrans);

                budgetTrans.AssetBudgetPostingStatus = RAssetBudgetPostingStatus::PostedToBudgets;
                budgetTrans.update();
            }
        }

        if (budgetTransactionPost != null)
        {
            // Update budget balances for transactions created
            budgetTransactionPost.runOperation();
        }

        ttscommit;

        if (budgetTransactionManager != null)
        {
            budgetTransactionManager.showWarningsDimAttsNotBudgetEnabled("@SYS300283");
        }

        info("@GLS116466");

    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBudget</Name>
				<Source><![CDATA[
    private boolean validateBudget(RAssetBudgetTrans   budgetTrans)
    {
        boolean ret = true;

        setPrefix(strFmt("@SYS76889", budgetTrans.BudgetModel, date2StrUsr(budgetTrans.TransDate, DateFlags::FormatAll)));

        if (budgetTrans.LedgerDimension == 0)
        {
            ret = checkFailed("@SYS25989");
        }
        else if (budgetTrans.OffsetLedgerDimension == 0)
        {
            ret = checkFailed("@SYS25236");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>