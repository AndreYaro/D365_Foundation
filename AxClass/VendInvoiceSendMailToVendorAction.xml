<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceSendMailToVendorAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

[DataContract]
[SysCopilotChatGlobalAction]
[SysCopilotChatActionDefinition(
    identifierStr(MS.ServerForm.VendInvoiceCopilot.SendMail),
    'Send mail to vendor',
    'Send generated email to vendor',
    'VendInvoiceSendMailToVendorAction',
    MenuItemType::Action)]
public final class VendInvoiceSendMailToVendorAction extends SysCopilotChatAction
{
    private const str metricNamespace = 'VendorInvoiceCopilot';
    private const str actionName = 'MS.ServerForm.VendInvoiceCopilot.SendMail';
    private str mailContent;
    private str vendAccount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmMailContent</Name>
				<Source><![CDATA[
    [DataMember('mailContent'),
    SysCopilotChatActionInputParameter('Generated mail content', true)]
    public str parmMailContent(str _mailContent = mailContent)
    {
        mailContent = _mailContent;
        return mailContent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendAccount</Name>
				<Source><![CDATA[
    [DataMember('vendAccount'),
    SysCopilotChatActionInputParameter('Vendor account number', true)]
    public str parmVendAccount(str _vendAccount = vendAccount)
    {
        vendAccount = _vendAccount;
        return vendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeAction</Name>
				<Source><![CDATA[
    public void executeAction(SysCopilotChatActionDefinitionAttribute _actionDefinition, object _context)
    {
        SysInstrumentationLogger logger = SysInstrumentationLoggerFactory::CreateLogger(classStr(VendInvoiceSendMailToVendorAction));

        using (var context = logger.activityContext(actionName, metricNamespace))
        {
            if (VendInvoiceCopilotMatchProductReceiptFlight::instance().isEnabled())
            {
                str subject = System.Uri::EscapeDataString('@AccountsPayable:VendInvoiceFollowUpReceiptMailTitle');
                str email = VendTable::find(this.parmVendAccount()).email();;
                str content = System.Uri::EscapeDataString(this.parmMailContent());
                str url = strFmt('mailto:%1?subject=%2&body=%3', email, subject, content);
                Browser b = new Browser();
                b.navigate(url);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>