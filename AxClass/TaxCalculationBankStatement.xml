<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxCalculationBankStatement</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxCalculationBankStatement</c> class is the tax calculation class for the bank statement.
/// </summary>
class TaxCalculationBankStatement extends TaxCalculation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowAdjustBaseAmountForTaxAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the transaction supports adjusting the calculated base amount when tax is
    /// included in item price and the users adjusts the tax amount.
    /// </summary>
    /// <returns>
    /// true if adjusting the calculated base amount is supported; otherwise, false.
    /// </returns>
    public boolean allowAdjustBaseAmountForTaxAdjustment()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the default tax direction for the transaction.
    /// </summary>
    /// <param name="_taxGroupData">
    /// The <c>TaxGroupData</c> table buffer that represents the tax code being considered.
    /// </param>
    /// <returns>
    /// The default tax direction.
    /// </returns>
    /// <remarks>
    /// A customer transaction will have a tax direction of sales tax payable. A vendor transaction will
    /// have a tax direction of sales tax receivable.
    /// </remarks>
    protected TaxDirection determineDirection(TaxGroupData _taxGroupData)
    {
        return taxableLineCurrentlyBeingCalculated.getDefaultTaxDirection(_taxGroupData, this.getCompany());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the default dimension.
    /// </summary>
    /// <param name="_sourceRecId">
    /// The record Id of the parent of the tax line.
    /// </param>
    /// <returns>
    ///  A <c>DimensionDefault</c> value.
    /// </returns>
    public DimensionDefault getDefaultDimension(RefRecId _sourceRecId)
    {
        DimensionDefault ret;

        ret = taxableLineCurrentlyBeingCalculated.getDefaultDimension();

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>