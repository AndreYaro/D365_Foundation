<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCostPurchIndirect</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventCostPurchIndirect</c> class creates an indirect cost based on a cost amount or cost
///    breakdown.
/// </summary>
/// <remarks>
///    This class is used to calculate partially indirect costs that must be added to a purchase order to
///    calculate the full indirect cost.
/// </remarks>
class InventCostPurchIndirect extends InventCostIndirect
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>CostCalcTransData</c> class that will later be passed to a
    ///    costing sheet for calculation.
    /// </summary>
    /// <param name="_indirectData">
    ///    The inventory transactions for which to calculate the indirect cost.
    /// </param>
    protected void init(InventCostIndirectData  _indirectData)
    {
        indirectData = _indirectData;
        InventCostPurchIndirectData purchIndirectData = _indirectData;

        costCalcTransData = CostCalcTransData::construct(
            purchIndirectData.parmItemId(),
            0,
            transDate,
            1,
            purchIndirectData.parmInventSiteId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();

        // Initialize class that will generate the indirect cost records
        journalIndirectCost = PurchJournalIndirectCost::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountPhysicalPurchaseOffset</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the physical purchase offset that is  specified by the <c>LedgerDimensionDefaultAccount</c>
    ///    value for the <c>PurchJournalIndirectCost</c> member object.
    /// </summary>
    /// <param name="_accountPhysicalPurchaseOffset">
    ///    The <c>LedgerDimensionDefaultAccount</c> value for the physical purchase offset.
    /// </param>
    public void parmAccountPhysicalPurchaseOffset(
        LedgerDimensionDefaultAccount _accountPhysicalPurchaseOffset)
    {
        PurchJournalIndirectCost purchJournalIndirectCost = journalIndirectCost;
        purchJournalIndirectCost.parmAccountPhysicalPurchaseOffset(_accountPhysicalPurchaseOffset);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingTypePhysicalPurchaseOffset</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>LedgerPostingType</c> value for the <c>PurchJournalIndirectCost</c> member object.
    /// </summary>
    /// <param name="_postingTypePhysicalPurchaseOffset">
    ///    The <c>LedgerPostingType</c> value for the physical purchase offset.
    /// </param>
    public void parmPostingTypePhysicalPurchaseOffset(
        LedgerPostingType _postingTypePhysicalPurchaseOffset)
    {
        PurchJournalIndirectCost purchJournalIndirectCost = journalIndirectCost;
        purchJournalIndirectCost.parmPostingTypePhysicalPurchaseOffset(_postingTypePhysicalPurchaseOffset);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        protected static InventCostPurchIndirect construct()
    {
        return new InventCostPurchIndirect();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and initializes an instance of the <c>InventCostPurchIndirect</c> class.
    /// </summary>
    /// <param name="_accountPhysicalPurchaseOffset">
    ///    The ledger account to use as a packing slip offset account.
    /// </param>
    /// <param name="_postingTypePhysicalPurchaseOffset">
    ///    The posting type to use as a packing slip offset posting type.
    /// </param>
    /// <param name="_ledgerVoucher">
    ///    An instance of the <c>LedgerVoucher</c> class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventCostPurchIndirect</c> class.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    Not all parameters were specified.
    /// </exception>
    public static InventCostPurchIndirect newParameters(
        LedgerDimensionDefaultAccount       _accountPhysicalPurchaseOffset,
        LedgerPostingType                   _postingTypePhysicalPurchaseOffset,
        LedgerVoucher                       _ledgerVoucher)
    {
        if (_ledgerVoucher == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        InventCostPurchIndirect inventCostPurchIndirect = InventCostPurchIndirect::construct();
        inventCostPurchIndirect.parmAccountPhysicalPurchaseOffset(_accountPhysicalPurchaseOffset);
        inventCostPurchIndirect.parmPostingTypePhysicalPurchaseOffset(_postingTypePhysicalPurchaseOffset);
        inventCostPurchIndirect.initFromLedgerVoucher(_ledgerVoucher);

        return inventCostPurchIndirect;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
