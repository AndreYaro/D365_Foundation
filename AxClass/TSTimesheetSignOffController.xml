<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>tsTimesheetSignOffController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>TSTimesheetSignOffController</c> class is the controller class for the
/// <c>TSTimesheetSignOff</c>Microsoft SQL Server Reporting Services report.
/// </summary>
public class tsTimesheetSignOffController extends SrsReportRunController implements BatchRetryable
{
    private const str tSTimesheetSignOff    = 'TSTimesheetSignOff.Report';

}
]]></Declaration>
    <Methods>
      <Method>
        <Name>setRange</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Applies filters to the report.
    /// </summary>
    /// <param name="_query">
    ///    The report query to modify.
    /// </param>
    /// <remarks>
    ///    Set ranges on a data source that is based on the values that are selected in the report parameters
    ///    dialog box.
    /// </remarks>
    public void setRange(Query _query)
    {
        if (this.parmArgs().dataset() && this.parmArgs().dataset() != tableNum(TSTimesheetTable))
        {
            throw error(strFmt("@SYS22828", funcName()));
        }

        FormDataSource formDataSource = FormDataUtil::getFormDataSource(this.parmArgs().record());

        QueryBuildDataSource    queryBuildDataSource = _query.dataSourceTable(tablenum(TSTimesheetTable));
        QueryBuildRange queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(TSTimesheetTable , TimesheetNbr));
        queryBuildRange.status(RangeStatus::Locked);

        if (formDataSource)
        {
            MultiSelectionHelper selectionHelper = MultiSelectionHelper::construct();
            selectionHelper.parmDataSource(formDataSource);
            selectionHelper.createQueryRanges(queryBuildDataSource, fieldStr(TSTimesheetTable, TimesheetNbr));
        }
        else
        {
            TSTimesheetTable timesheetTable = this.parmArgs().record();
            queryBuildRange.value(timesheetTable.TimesheetNbr);
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>showQuerySelectButton</Name>
        <Source><![CDATA[
    public boolean showQuerySelectButton(str _parameterName)
    {
        return false;
    }

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
    public static void main(Args _args)
    {
        var controller = new TSTimesheetSignOffController();
        controller.parmReportName(tSTimesheetSignOff);
        controller.parmArgs(_args);

        controller.setRange(controller.parmReportContract().parmQueryContracts().lookup(controller.getFirstQueryContractKey()));
        controller.parmDialogCaption("@SYS190473");
        controller.parmLoadFromSysLastValue(false);
        controller.parmShowReportViewerParameters(false);

        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>