<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAdditionalDepreciationUIBuilder_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetAdditionalDepreciationUIBuilder_JP</c> class is for building an input dialog.
/// </summary>
public class AssetAdditionalDepreciationUIBuilder_JP extends SrsReportDataContractUIBuilder
{
    DialogField     dialogFieldFiscalYearName;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildSysTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a system lookup method.
    /// </summary>
    /// <param name="_stringControl">
    /// A <c>FormStringControl</c> reference for which to build the lookup.
    /// </param>
    /// <returns>
    /// System table lookup method.
    /// </returns>
    public SysTableLookup buildSysTableLookup(FormStringControl _stringControl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    qbds_FiscalCalendar;
        QueryBuildDataSource    qbds_FiscalCalendarYear;

        sysTableLookup = SysTableLookup::newParameters(tableNum(FiscalCalendarYear), _stringControl);

        // Add the fields to be shown in the lookup form
        sysTableLookup.addLookupfield(fieldNum(FiscalCalendarYear, Name));
        sysTableLookup.addLookupfield(fieldNum(FiscalCalendarYear, StartDate));
        sysTableLookup.addLookupfield(fieldNum(FiscalCalendarYear, EndDate));

        // Create the query datasource
        query = new Query();
        qbds_FiscalCalendarYear = query.addDataSource(tableNum(FiscalCalendarYear));
        qbds_FiscalCalendar = qbds_FiscalCalendarYear.addDataSource(tableNum(FiscalCalendar));
        qbds_FiscalCalendar.addLink(fieldNum(FiscalCalendarYear, FiscalCalendar), fieldNum(FiscalCalendar, RecId));

        qbds_FiscalCalendar.addRange(fieldNum(FiscalCalendar, RecId)).value(queryValue(Ledger::find(Ledger::current()).FiscalCalendar));

        sysTableLookup.parmQuery(query);

        return sysTableLookup;
    }
]]></Source>
			</Method>
			<Method>
				<Name>fiscalYearFieldModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a modified method for fiscal calendar year.
    /// </summary>
    /// <param name="_fiscalCalendarYearControl">
    /// The fiscal calendar year form string control.
    /// </param>
    /// <returns>
    /// True when fiscal year name is valid, else false.
    /// </returns>
    public boolean fiscalYearFieldModified(FormStringControl _fiscalCalendarYearControl)
    {
        str fiscalYearNamelocal = _fiscalCalendarYearControl.text();
        boolean ret = true;

        if (!AssetAdditionalDepreciationUIBuilder_JP::validateYearName(fiscalYearNamelocal))
        {
            ret = false;
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>lookupByFiscalYearName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a fiscal calendar year lookup that contains the <c>Name</c>, <c>StartDate</c> and
    /// <c>EndDate</c> fields.
    /// </summary>
    /// <param name="_stringControl">
    /// A <c>FormStringControl</c> reference for which to create the lookup.
    /// </param>
    public void lookupByFiscalYearName(FormStringControl _stringControl)
    {
        SysTableLookup          sysTableLookup;

        sysTableLookup = this.buildSysTableLookup(_stringControl);

        sysTableLookup.performFormLookup();
    }
]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the defaults in order to handle events on dialogs.
    /// </summary>
    public void postRun()
    {
        super();

        dialogFieldFiscalYearName = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(AssetAdditionalDepreciationContract_JP, parmFiscalYear));

        dialogFieldFiscalYearName.registerOverrideMethod(
            methodStr(FormStringControl, lookup),
            methodStr(AssetAdditionalDepreciationUIBuilder_JP, lookupByFiscalYearName),
            this);
        dialogFieldFiscalYearName.registerOverrideMethod(
            methodStr(FormStringControl, Modified),
            methodStr(AssetAdditionalDepreciationUIBuilder_JP, fiscalYearFieldModified),
            this);
    }
]]></Source>
			</Method>
			<Method>
				<Name>validateYearName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the fiscal calendar year user chooses is valid.
    /// </summary>
    /// <param name="_fiscalYearName">
    /// The fiscal year name of current dialog field.
    /// </param>
    /// <returns>
    /// True when user inputs for fiscal calendar year is valid, else, false.
    /// </returns>
    public static boolean validateYearName(FiscalYearName _fiscalYearName)
    {
        boolean existCheck = true;

        if (_fiscalYearName)
        {
            existCheck = FiscalCalendarYear::existByCalendarYearName(
                Ledger::fiscalCalendar(CompanyInfo::current()),
                _fiscalYearName);
        }

        if (!existCheck)
        {
            existCheck = checkFailed(
                strFmt(
                    FiscalCalendarYear::txtNotExistByCalendarYear(),
                    FiscalCalendar::find(Ledger::fiscalCalendar(CompanyInfo::current())).CalendarId,
                    _fiscalYearName));
        }

        return existCheck;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>