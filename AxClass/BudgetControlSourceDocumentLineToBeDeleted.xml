<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlSourceDocumentLineToBeDeleted</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetControlSourceDocumentLineToBeDeleted</c> is responsible for maintaining an instance of a tempory table,
/// <c>BudgetControlSourceDocumentLineToBeDeletedTmp</c> within cache scope to store source document line to be deleted.
/// </summary>
internal class BudgetControlSourceDocumentLineToBeDeleted
{
    private BudgetControlSourceDocumentLineToBeDeletedTmp budgetControlSourceDocumentLineToBeDeletedTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setBudgetControlSourceDocumentLineToBeDeletedTmp</Name>
				<Source><![CDATA[
    private void setBudgetControlSourceDocumentLineToBeDeletedTmp(BudgetControlSourceDocumentLineToBeDeletedTmp _table)
    {
        budgetControlSourceDocumentLineToBeDeletedTmp.linkPhysicalTableInstance(_table);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    internal static BudgetControlSourceDocumentLineToBeDeletedTmp instance()
    {
        BudgetControlSourceDocumentLineToBeDeletedTmp localBudgetControlSourceDocumentLineTmp;

        if (appl.ttsLevel() > 0)
        {
            BudgetControlSourceDocumentLineToBeDeleted sourceDocumentLineToBeDeleted;
            str cacheScope = tableStr(BudgetControlSourceDocumentLineToBeDeletedTmp);
            str cacheKey = funcname();

            if (SysTransactionScopeCache::isSet(cacheScope, cacheKey))
            {
                sourceDocumentLineToBeDeleted = SysTransactionScopeCache::get(cacheScope, cacheKey);
                localBudgetControlSourceDocumentLineTmp.linkPhysicalTableInstance(sourceDocumentLineToBeDeleted.budgetControlSourceDocumentLineToBeDeletedTmp);
            }
            else
            {
                // Construct a new instance
                sourceDocumentLineToBeDeleted = BudgetControlSourceDocumentLineToBeDeleted::construct(localBudgetControlSourceDocumentLineTmp);

                // Cache for future use in this transaction scope
                SysTransactionScopeCache::set(cacheScope, cacheKey, sourceDocumentLineToBeDeleted);
            }
        }

        return localBudgetControlSourceDocumentLineTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static BudgetControlSourceDocumentLineToBeDeleted construct(BudgetControlSourceDocumentLineToBeDeletedTmp _table)
    {
        BudgetControlSourceDocumentLineToBeDeleted sourceDocumentLineToBeDeleted = new BudgetControlSourceDocumentLineToBeDeleted();
        sourceDocumentLineToBeDeleted.setBudgetControlSourceDocumentLineToBeDeletedTmp(_table);

        return sourceDocumentLineToBeDeleted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    internal static boolean exist(RecId _sourceDocumentRecId)
    {
        return BudgetControlSourceDocumentLineToBeDeleted::instance().exist(_sourceDocumentRecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>