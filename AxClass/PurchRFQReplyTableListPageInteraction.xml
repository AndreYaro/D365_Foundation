<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQReplyTableListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchRFQReplyTableListPageInteraction extends ListPageInteraction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes button attributes when the active record is changed.
    /// </summary>
    public void selectionChanged()
    {
        super();

        this.setButtonAccess();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables buttons depending on the displayed information.
    /// </summary>
    /// <remarks>
    /// The implementations are dictated by the task page behavior.
    /// </remarks>
    public void setButtonAccess()
    {
        ListPage            listPage            = this.listPage();
        PurchRFQTable       purchRFQTable       = listPage.activeRecord(tablestr(PurchRFQTable));
        PurchRFQCaseTable   purchRFQCaseTable   = listPage.activeRecord(tablestr(PurchRFQCaseTable));
        boolean             gridIsNotEmpty      = (purchRFQTable.RecId);
        boolean             isNotSealed            = purchRFQCaseTable.IsSealed == NoYes::No;
        boolean             isRFQAmendmentEnabled = PurchRFQParameters::isRFQAmendmentEnabled();
        boolean             isNotCanceled        = !purchRFQCaseTable.isRFQCanceled();

        
        listPage.actionPaneControlVisible(formcontrolstr(PurchRFQReplyTableListPage,PurchRFQReplyEncryptionAuditLog),
                                        purchRFQCaseTable.BidType == PurchRFQBidType::Sealed);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage, returnMenuItemButton),
                                        gridIsNotEmpty &&
                                        (purchRFQTable.StatusLow == PurchRFQStatus::Received || purchRFQTable.StatusHigh == PurchRFQStatus::Received) &&
                                        isNotCanceled);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,acceptMenuItemButton),
                                        ((isRFQAmendmentEnabled && !purchRFQCaseTable.isAmended) || !isRFQAmendmentEnabled) &&
                                        gridIsNotEmpty &&
                                        (purchRFQTable.StatusLow  < PurchRFQStatus::Rejected) &&
                                        (purchRFQTable.StatusHigh > PurchRFQStatus::Sent) &&
                                        isNotSealed &&
                                        isNotCanceled);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage, rejectMenuItemButton),
                                        ((isRFQAmendmentEnabled && !purchRFQCaseTable.isAmended) || !isRFQAmendmentEnabled) &&
                                        gridIsNotEmpty &&
                                        (purchRFQTable.StatusLow  < PurchRFQStatus::Rejected) &&
                                        (purchRFQTable.StatusHigh > PurchRFQStatus::Sent) &&
                                        isNotSealed &&
                                        isNotCanceled);

        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,totalsMenuItemButton),gridIsNotEmpty);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,manageMiscChargesMenuItemButton),gridIsNotEmpty);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,rfqJournalMenuItemButton),gridIsNotEmpty);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,printMgmtButton),gridIsNotEmpty);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,compareRepliesMenuItemButton),gridIsNotEmpty);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,rfqMenuItemButton),gridIsNotEmpty);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,poMenuItemButton),gridIsNotEmpty && purchRFQTable.PurchId);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,PurchAgreement),gridIsNotEmpty && purchRFQTable.AgreementId);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,tradeAgreementsButtonGroup),gridIsNotEmpty);
        listPage.actionPaneControlEnabled(formcontrolstr(PurchRFQReplyTableListPage,edit_MenuFunctionButton),gridIsNotEmpty && isNotSealed && isNotCanceled);

        PurchRFQSealedBidFlightingManager::initSealedBiddingSpecificControl(listPage.formRun());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>