<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanForecastAggregatorController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ReqDemPlanForecastAggregatorController</c> class is a controller for launching the forecast aggregation process.
/// </summary>
class ReqDemPlanForecastAggregatorController extends ReqDemPlanSysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        ReqDemPlanForecastAggregatorController controller = ReqDemPlanForecastAggregatorController::construct();

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ReqDemPlanForecastAggregatorController construct()
    {
        return new ReqDemPlanForecastAggregatorController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the name of the form to use as template for the dialog.
    /// </summary>
    /// <returns>
    /// The name of the form to use as template for the dialog.
    /// </returns>
    protected FormName templateForm()
    {
        return formStr(ReqDemPlanForecastAggregationConfigurator);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super(classStr(ReqDemPlanForecastAggregator),
            methodStr(ReqDemPlanForecastAggregator, runService),
            SysOperationExecutionMode::Synchronous);

        this.parmDialogCaption("@DMP:AggregationChange");
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>