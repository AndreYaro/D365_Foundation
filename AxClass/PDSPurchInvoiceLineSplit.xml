<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PDSPurchInvoiceLineSplit</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>PDSPurchInvoiceLineSplit</c> contains line split information for advancing pricing lines that are being
/// invoiced.
/// </summary>
class PDSPurchInvoiceLineSplit
{
    PurchLine                   purchLine;

    InventQty                   inventQty;
    PurchQty                    purchQty;
    PdsCWInventQty              cwQty;
    PDSCalculatedUnitPrice      unitPrice;
    PDSCalculatedLineAmount     lineAmount;

    InventDim                   inventDim;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the calculated line amount for this split line.
    /// </summary>
    /// <returns>
    /// The calculated line amount.
    /// </returns>
    public Amount lineAmount()
    {
        return unitPrice * purchQty / purchLine.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCWQty</Name>
				<Source><![CDATA[
        public PdsCWInventQty parmCWQty(PdsCWInventQty _cwInventQty = cwQty)
    {
        cwQty = _cwInventQty;

        return cwQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDim</Name>
				<Source><![CDATA[
        public InventDim parmInventDim(InventDim _inventDim = inventDim)
    {
        inventDim = _inventDim;

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventQty</Name>
				<Source><![CDATA[
        public InventQty parmInventQty(InventQty _inventQty = inventQty)
    {
        if (!prmisDefault(_inventQty))
        {
            inventQty = _inventQty;

            purchQty = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(purchLine.ItemId,
                                                                                             purchLine.InventDimId,
                                                                                             _inventQty,
                                                                                             purchLine.inventTable().inventUnitId(),
                                                                                             purchLine.PurchUnit,
                                                                                             NoYes::Yes);
        }

        return inventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLine</Name>
				<Source><![CDATA[
        public PurchLine parmPurchLine(PurchLine _purchLine = purchLine)
    {
        purchLine = _purchLine;

        return purchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchQty</Name>
				<Source><![CDATA[
        public PurchQty parmPurchQty(PurchQty _purchQty = purchQty)
    {
        purchQty = _purchQty;

        return purchQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitPrice</Name>
				<Source><![CDATA[
        public PDSCalculatedUnitPrice parmUnitPrice(PDSCalculatedUnitPrice _unitPrice = unitPrice)
    {
        unitPrice = _unitPrice;

        return unitPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PDSPurchInvoiceLineSplit construct()
    {
        return new PDSPurchInvoiceLineSplit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>PDSPurchInvoiceLineSplit</c>.
    /// </summary>
    /// <param name="_purchLine">
    /// The purchase order line.
    /// </param>
    /// <param name="_inventTrans">
    /// The inventory transaction line.
    /// </param>
    /// <param name="_inventDim">
    /// The inventory dim for <paramref _name="_inventTrans"/>.
    /// </param>
    /// <param name="_unitPrice">
    /// The calculated unit price for this transaction line.
    /// </param>
    /// <returns>
    /// A new <c>PDSPurchInvoiceLineSplit</c> holding the specific quantities and price for the transaction line.
    /// </returns>
    public static PDSPurchInvoiceLineSplit newPurchLine(PurchLine _purchLine, InventTrans _inventTrans, InventDim _inventDim, PDSCalculatedUnitPrice _unitPrice)
    {
        PDSPurchInvoiceLineSplit            lineSplit = PDSPurchInvoiceLineSplit::construct();

        lineSplit.parmPurchLine(_purchLine);
        lineSplit.parmInventDim(_inventDim);
        lineSplit.parmInventQty(_inventTrans.Qty);
        lineSplit.parmCWQty(_inventTrans.PdsCWQty);
        lineSplit.parmUnitPrice(_unitPrice);

        return lineSplit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>