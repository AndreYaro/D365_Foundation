<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WrkCtrSchedulerCapacityReservation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WrkCtrSchedulerCapacityReservation
{
    // these indexes are referring to a relative position in the capacity reservation data container received from the scheduling engine
    internal const int FromDateIndex = 0;
    internal const int FromTimeIndex = 1;
    internal const int ToDateIndex = 2;
    internal const int ToTimeIndex = 3;
    internal const int LoadPctIndex = 4;
    internal const int CapacitySecondsIndex = 5;
    internal const int CapacityReservationFields = 6;

    private date reservationFromDate;
    private TimeOfDay reservationFromTime;
    private date reservationToDate;
    private TimeOfDay reservationToTime;
    private WrkCtrLoadPct reservationLoadPct;
    private CapacitySec reservationCapSec;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the WrkCtrSchedulerCapacityReservation class.
    /// </summary>
    /// <param name = "_capacityReservationContainer">A container of capacity reservations.</param>
    /// <param name = "_pos">Specifies the container position to retrieve the data.</param>
    /// <param name = "_applyUserTimeZone">Indicates whether the user time zone should be applied.</param>
    /// <returns>A new instance of the WrkCtrSchedulerCapacityReservation class.</returns>
    public static WrkCtrSchedulerCapacityReservation construct(
        container _capacityReservationContainer,
        int _pos,
        boolean _applyUserTimeZone = true)
    {
        WrkCtrSchedulerCapacityReservation schedulerCapacityReservation = new WrkCtrSchedulerCapacityReservation();
        schedulerCapacityReservation.parmReservationFromDate(conPeek(_capacityReservationContainer, _pos + WrkCtrSchedulerCapacityReservation::FromDateIndex));
        schedulerCapacityReservation.parmReservationFromTime(conPeek(_capacityReservationContainer, _pos + WrkCtrSchedulerCapacityReservation::FromTimeIndex));
        schedulerCapacityReservation.parmReservationToDate(conPeek(_capacityReservationContainer, _pos + WrkCtrSchedulerCapacityReservation::ToDateIndex));
        schedulerCapacityReservation.parmReservationToTime(conPeek(_capacityReservationContainer, _pos + WrkCtrSchedulerCapacityReservation::ToTimeIndex));
        schedulerCapacityReservation.parmReservationLoadPct(conPeek(_capacityReservationContainer, _pos + WrkCtrSchedulerCapacityReservation::LoadPctIndex));
        schedulerCapacityReservation.parmReservationCapSec(conPeek(_capacityReservationContainer, _pos + WrkCtrSchedulerCapacityReservation::CapacitySecondsIndex));
        
        if (_applyUserTimeZone)
        {
            schedulerCapacityReservation.applyUserTimeZone();
        }

        return schedulerCapacityReservation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservationFromDate</Name>
				<Source><![CDATA[
    public date parmReservationFromDate(date _reservationFromDate = reservationFromDate)
    {
        reservationFromDate = _reservationFromDate;
        return reservationFromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservationFromTime</Name>
				<Source><![CDATA[
    public TimeOfDay parmReservationFromTime(TimeOfDay _reservationFromTime = reservationFromTime)
    {
        reservationFromTime = _reservationFromTime;
        return reservationFromTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservationToDate</Name>
				<Source><![CDATA[
    public date parmReservationToDate(date _reservationToDate = reservationToDate)
    {
        reservationToDate = _reservationToDate;
        return reservationToDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservationToTime</Name>
				<Source><![CDATA[
    public TimeOfDay parmReservationToTime(TimeOfDay _reservationToTime = reservationToTime)
    {
        reservationToTime = _reservationToTime;
        return reservationToTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservationLoadPct</Name>
				<Source><![CDATA[
    public WrkCtrLoadPct parmReservationLoadPct(WrkCtrLoadPct _reservationLoadPct = reservationLoadPct)
    {
        reservationLoadPct = _reservationLoadPct;
        return reservationLoadPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservationCapSec</Name>
				<Source><![CDATA[
    public CapacitySec parmReservationCapSec(CapacitySec _reservationCapSec = reservationCapSec)
    {
        reservationCapSec = _reservationCapSec;
        return reservationCapSec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyUserTimeZone</Name>
				<Source><![CDATA[
    public void applyUserTimeZone()
    {
        Timezone userTimeZone = DateTimeUtil::getUserPreferredTimeZone();
        utcdatetime dateTimeFrom = DateTimeUtil::applyTimeZoneOffset(DateTimeUtil::newDateTime(reservationFromDate,
                    reservationFromTime),
                    userTimeZone);
        utcdatetime dateTimeTo = DateTimeUtil::applyTimeZoneOffset(DateTimeUtil::newDateTime(reservationToDate,
                    reservationToTime),
                    userTimeZone);

        this.parmReservationFromDate(DateTimeUtil::date(dateTimeFrom));
        this.parmReservationFromTime(DateTimeUtil::time(dateTimeFrom));
        this.parmReservationToDate(DateTimeUtil::date(dateTimeTo));
        this.parmReservationToTime(DateTimeUtil::time(dateTimeTo));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>