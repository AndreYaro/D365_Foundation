<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionLineWorkflowDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetTransactionLineWorkflowDocument</c> class provides a workflow document class for the
///    budget transaction lines.
/// </summary>
/// <remarks>
///    This query wrapper class provides access to the query that defines the fields that are available
///    for the condition values on workflow configurations. It also provides several methods that perform
///    aggregation that are also available as condition values.
/// </remarks>
[ExpressionCurrencyProviderAttribute(classstr(BudgetTransWFExpressionCurrencyProvider))]
public class BudgetTransactionLineWorkflowDocument extends WorkflowDocument
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQueryName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query name for the budget transaction line workflow document.
    /// </summary>
    /// <returns>
    /// The budget transaction line workflow query name from the Application Object Tree (AOT).
    /// </returns>
    public queryName getQueryName()
    {
        return querystr(BudgetTransactionLineWorkflowDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetCheckResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>BudgetSourceCheckResult</c> value for the budget transaction line workflow instance.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// A <c>BudgetSourceCheckResult</c> value.
    /// </returns>
    public BudgetSourceCheckResult parmBudgetCheckResult(CompanyId _companyId, tableId _tableId, RecId _recId)
    {
        BudgetSourceCheckResult checkResult;

        if (_tableId == tablenum(BudgetTransactionLine) &&
            _recId != 0)
        {
            checkResult = BudgetSourceBudgetTransactionLine::findBudgetCheckResult(_recId);
        }

        return checkResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferPrevented</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the budget transfer is prevented for the budget transaction line workflow
    /// instance.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// true if the budget transfer is prevented; otherwise, false.
    /// </returns>
    public BudgetTransferPrevented parmTransferPrevented(CompanyId _companyId, tableId _tableId, RecId _recId)
    {
        BudgetTransferPrevented transferPrevented;

        if (_tableId == tablenum(BudgetTransactionLine) &&
            _recId != 0)
        {
            if (!BudgetTransactionAllowTransferManager::isTransferAllowedForLine(_recId))
            {
                // The transfer is not allowed for this line.
                transferPrevented = true;
            }
        }

        return transferPrevented;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>