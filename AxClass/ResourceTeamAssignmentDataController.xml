<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResourceTeamAssignmentDataController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Resource team assignment controller.
/// </summary>
public class ResourceTeamAssignmentDataController extends ResourceAvailabilityDataController implements IAvailabilityViewDataController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCoverageType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get roll-up coverage type by activity resource Id.
    /// </summary>
    /// <param name = "_collectionKey">Activity resource Id as collection key.</param>
    /// <returns>Activity resoruce Id associated roll-up coverage type.</returns>
    protected ResRollUpCoverage getCoverageType(str _collectionKey)
    {
        ResRollUpCoverage localCoverage;
        if (_collectionKey)
        {
            localCoverage = ResRollUpCoverage::Availability;
        }
        return localCoverage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReservationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves reservation type.
    /// </summary>
    /// <returns><c>ResReservationType</c> enum value.</returns>
    protected ResReservationType getReservationType()
    {
        return ResReservationType::Booking;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCancelReservationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cancel reservation type.
    /// </summary>
    /// <returns>Reservation type to cancel.</returns>
    protected ResReservationType getCancelReservationType()
    {
        return ResReservationType::Both;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>ResourceTeamAssignmentDataController</c>.
    /// </summary>
    /// <param name = "_control">Instance of the <c>AvailabilityView</c> runtime class.</param>
    public void new(AvailabilityView _control)
    {
        if (!this.CollectionController())
        {
            this.CollectionController(ResResourceAvailabilityCollection::construct());
        }

        if (!this.chartController())
        {
            this.chartController(ResCachedResourceAvailabilityChart::construct());
        }
        super(_control);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contructs a new instance of the resource team assignment data controller.
    /// </summary>
    /// <param name = "_control">Instance of the <c>AvailabilityView</c> runtime class.</param>
    /// <returns>Returns an instance of the data controller.</returns>
    public static ResourceTeamAssignmentDataController construct(AvailabilityView _control = null)
    {
        ResourceTeamAssignmentDataController dataController = new ResourceTeamAssignmentDataController(_control);
        return dataController;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>