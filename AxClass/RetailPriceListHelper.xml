<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPriceListHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailPriceListHelper</c> is a helper class for price list.
/// </summary>
internal static class RetailPriceListHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getOffersAssignedToCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the offers assigned to a category to which the product belongs.
    /// </summary>
    /// <param name = "_channel"> The channel RecId to retrieve the periodic discount offers for.</param>
    /// <param name = "_product"> The product RecId that we want to fetch the offers for.</param>
    /// <param name = "_activeDate"> Look for offers active on this date. </param>
    /// <param name = "_isPromotion"> Offer type, true if offer type is Promotion else false.</param>
    /// <returns>A string of comma separated list of offer identifiers.</returns>
    public static RetailMemo getOffersAssignedToCategory(RetailChannelRecId _channel, RefRecId _product, date _activeDate, boolean _isPromotion = false)
    {
        RetailMemo offerIds;
        date activeDatePlusOne = _activeDate + 1;
        date activeDateMinusOne = _activeDate - 1;
        RetailChannelPriceGroup RetailChannelPriceGroup;
        RetailDiscountPriceGroup RetailDiscountPriceGroup;
        RetailPeriodicDiscount retailPeriodicDiscount;
        RetailPeriodicDiscountLine RetailPeriodicDiscountLine;
        RetailGroupMemberLine RetailGroupMemberLine;
        RetailAllProductCategories RetailAllProductCategories;

        // Fetch offers for discount type other than Price adjustment.
        if (!_isPromotion)
        {
            while select RetailChannelPriceGroup
                group by retailPeriodicDiscount.OfferId
                join PriceDiscGroup from RetailDiscountPriceGroup
                    where RetailChannelPriceGroup.PriceGroup == RetailDiscountPriceGroup.PriceDiscGroup
                    &&    RetailChannelPriceGroup.RetailChannel == _channel
                    join OfferId from retailPeriodicDiscount
                        where RetailDiscountPriceGroup.OfferId == retailPeriodicDiscount.OfferId
                        && retailPeriodicDiscount.PeriodicDiscountType != RetailDiscountOfferTypeBase::Promotion
                        && retailPeriodicDiscount.status == RetailDisabledEnabled::Enabled
                        && retailPeriodicDiscount.ValidFrom < activeDatePlusOne
                        && retailPeriodicDiscount.ValidTo > activeDateMinusOne
                        exists join RetailPeriodicDiscountLine
                            where retailPeriodicDiscount.OfferId == RetailPeriodicDiscountLine.OfferId
                            exists join RetailGroupMemberLine
                                where RetailPeriodicDiscountLine.RetailGroupMemberLine == RetailGroupMemberLine.RecId
                                &&    RetailGroupMemberLine.Product == 0
                                exists join RetailAllProductCategories
                                    where RetailGroupMemberLine.Category == RetailAllProductCategories.Category
                                    && RetailAllProductCategories.Product == _product
            {
                offerIds += (offerIds ? ', ' : '') + retailPeriodicDiscount.OfferId;
            }
        }
        else
        {
            // Fetch offers for discount type Price adjustment.
            while select RetailChannelPriceGroup GROUP BY retailPeriodicDiscount.OfferId
            join PriceDiscGroup from RetailDiscountPriceGroup
                where RetailChannelPriceGroup.PriceGroup == RetailDiscountPriceGroup.PriceDiscGroup
                &&    RetailChannelPriceGroup.RetailChannel == _channel
                join OfferId from retailPeriodicDiscount
                    where RetailDiscountPriceGroup.OfferId == retailPeriodicDiscount.OfferId
                    && retailPeriodicDiscount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Promotion
                    && retailPeriodicDiscount.status == RetailDisabledEnabled::Enabled
                    && retailPeriodicDiscount.ValidFrom < activeDatePlusOne
                    && retailPeriodicDiscount.ValidTo > activeDateMinusOne
                    exists join RetailPeriodicDiscountLine
                        where retailPeriodicDiscount.OfferId == RetailPeriodicDiscountLine.OfferId
                        exists join RetailGroupMemberLine
                            where RetailPeriodicDiscountLine.RetailGroupMemberLine == RetailGroupMemberLine.RecId
                            &&    RetailGroupMemberLine.Product == 0
                            exists join RetailAllProductCategories
                                where RetailGroupMemberLine.Category == RetailAllProductCategories.Category
                                && RetailAllProductCategories.Product == _product
            {
                offerIds += (offerIds ? ', ' : '') + retailPeriodicDiscount.OfferId;
            }

        }

        return offerIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOffersDirectlyAssignedToCategoryAndCatalog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the offers assigned to the category and catalog for a product.
    /// </summary>
    /// <param name = "_catalog"> The Catalog RecId to retrieve the periodic discount offers for.</param>
    /// <param name = "_product"> The product RecId that we want to fetch the offers for.</param>
    /// <param name = "_activeDate"> Look for offers active on this date. </param>
    /// <param name = "_isPromotion"> Offer type, true if offer type is Promotion else false.</param>
    /// <returns> A string of comma separated list of offer identifiers.</returns>
    public static RetailMemo getOffersDirectlyAssignedToCategoryAndCatalog(CatalogRefRecId _catalog, RefRecId _product, date _activeDate, boolean _isPromotion = false)
    {
        RetailMemo offerIds;
        date activeDatePlusOne = _activeDate + 1;
        date activeDateMinusOne = _activeDate - 1;

        RetailCatalogPriceGroup retailCatalogPriceGroup;
        RetailChannelPriceGroup retailChannelPriceGroup;
        RetailDiscountPriceGroup retailDiscountPriceGroup;
        RetailPeriodicDiscount retailPeriodicDiscount;
        RetailPeriodicDiscountLine retailPeriodicDiscountLine;
        RetailGroupMemberLine retailGroupMemberLine;
        RetailAllProductCategories retailAllProductCategories;

        // Fetch offers for discount type other than Price adjustment.
        if (!_isPromotion)
        {
            while select retailCatalogPriceGroup group by retailPeriodicDiscount.OfferId, retailAllProductCategories.Product
                join OfferId from retailDiscountPriceGroup
                    where retailCatalogPriceGroup.PriceDiscGroup == retailDiscountPriceGroup.PriceDiscGroup
                    &&    retailCatalogPriceGroup.Catalog == _catalog
                    join OfferId FROM retailPeriodicDiscount
                        where retailDiscountPriceGroup.OfferId == retailPeriodicDiscount.OfferId
                        && retailPeriodicDiscount.PeriodicDiscountType != RetailDiscountOfferTypeBase::Promotion
                        && retailPeriodicDiscount.status == RetailDisabledEnabled::Enabled
                        && retailPeriodicDiscount.ValidFrom < activeDatePlusOne
                        && retailPeriodicDiscount.ValidTo > activeDateMinusOne
                        exists join retailPeriodicDiscountLine
                            where retailPeriodicDiscount.OfferId == retailPeriodicDiscountLine.OfferId
                            exists join retailGroupMemberLine
                                where retailPeriodicDiscountLine.RetailGroupMemberLine == retailGroupMemberLine.RecId
                                join Product from retailAllProductCategories
                                    where retailGroupMemberLine.Category == retailAllProductCategories.Category
                                    && RetailAllProductCategories.Product == _product
            {
                offerIds += (offerIds ? ', ' : '') + retailPeriodicDiscount.OfferId;
            }
        }
        else
        {
            // Fetch offers for discount type Price adjustment.
            while select retailCatalogPriceGroup group by retailPeriodicDiscount.OfferId, retailAllProductCategories.Product
                join OfferId from retailDiscountPriceGroup
                    where retailCatalogPriceGroup.PriceDiscGroup == retailDiscountPriceGroup.PriceDiscGroup
                    &&    retailCatalogPriceGroup.Catalog ==- _catalog
                    join OfferId FROM retailPeriodicDiscount
                        where retailDiscountPriceGroup.OfferId == retailPeriodicDiscount.OfferId
                        && retailPeriodicDiscount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Promotion
                        && retailPeriodicDiscount.status == RetailDisabledEnabled::Enabled
                        && retailPeriodicDiscount.ValidFrom < activeDatePlusOne
                        && retailPeriodicDiscount.ValidTo > activeDateMinusOne
                        exists join retailPeriodicDiscountLine
                            where retailPeriodicDiscount.OfferId == retailPeriodicDiscountLine.OfferId
                            exists join retailGroupMemberLine
                                where retailPeriodicDiscountLine.RetailGroupMemberLine == retailGroupMemberLine.RecId
                                join Product from retailAllProductCategories
                                    where retailGroupMemberLine.Category == retailAllProductCategories.Category
                                    && RetailAllProductCategories.Product == _product
            {
                offerIds += (offerIds ? ', ' : '') + retailPeriodicDiscount.OfferId;
            }
        }

        return offerIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOffersDirectlyAssignedToProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the offers assigned to the product directly.
    /// </summary>
    /// <param name = "_channel"> The channel RecId to retrieve the periodic discount offers for.</param>
    /// <param name = "_product"> The product RecId that we want to fetch the offers for.</param>
    /// <param name = "_activeDate"> Look for offers active on this date. </param>
    /// <param name = "_isPromotion"> Offer type, true if offer type is Promotion else false.</param>
    /// <returns>A string of comma separated list of offer identifiers.</returns>
    public static RetailMemo getOffersDirectlyAssignedToProduct(RetailChannelRecId _channel, RefRecId _product, date _activeDate, boolean _isPromotion = false)
    {
        RetailMemo offerIds;
        date activeDatePlusOne = _activeDate + 1;
        date activeDateMinusOne = _activeDate - 1;
        RetailChannelPriceGroup retailChannelPriceGroup;
        RetailDiscountPriceGroup retailDiscountPriceGroup;
        RetailPeriodicDiscount retailPeriodicDiscount;
        RetailPeriodicDiscountLine retailPeriodicDiscountLine;
        RetailGroupMemberLine retailGroupMemberLine;

        // Fetch offers for discount type other than Price adjustment.
        if (!_isPromotion)
        {
            while select retailChannelPriceGroup group by retailGroupMemberLine.Product ,retailPeriodicDiscount.OfferId
            where RetailChannelPriceGroup.RetailChannel == _channel
            join OfferId from retailDiscountPriceGroup
                where retailDiscountPriceGroup.PriceDiscGroup == retailChannelPriceGroup.PriceGroup
                join OfferId from retailPeriodicDiscount
                    where retailPeriodicDiscount.OfferId == retailDiscountPriceGroup.OfferId
                    && RetailPeriodicDiscount.PeriodicDiscountType != RetailDiscountOfferTypeBase::Promotion
                    && retailPeriodicDiscount.Status == RetailDisabledEnabled::Enabled
                    && retailPeriodicDiscount.ValidFrom < activeDatePlusOne
                    && retailPeriodicDiscount.ValidTo > activeDateMinusOne
                    exists join retailPeriodicDiscountLine
                        where RetailPeriodicDiscountLine.OfferId == retailPeriodicDiscount.OfferId
                        join Product from retailGroupMemberLine
                            where  RetailGroupMemberLine.RecId == retailPeriodicDiscountLine.RetailGroupMemberLine
                                    && retailGroupMemberLine.Product == _product
            {
                offerIds += (offerIds ? ', ' : '') + retailPeriodicDiscount.OfferId;
            }
        }
        else
        {
            // Fetch offers for discount type Price adjustment.
            while select retailChannelPriceGroup group by retailGroupMemberLine.Product ,retailPeriodicDiscount.OfferId
                where RetailChannelPriceGroup.RetailChannel == _channel
                join OfferId from retailDiscountPriceGroup
                    where retailDiscountPriceGroup.PriceDiscGroup == retailChannelPriceGroup.PriceGroup
                    join OfferId from retailPeriodicDiscount
                        where retailPeriodicDiscount.OfferId == retailDiscountPriceGroup.OfferId
                        && RetailPeriodicDiscount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Promotion
                        && retailPeriodicDiscount.Status == RetailDisabledEnabled::Enabled
                        && retailPeriodicDiscount.ValidFrom < activeDatePlusOne
                        && retailPeriodicDiscount.ValidTo > activeDateMinusOne
                        exists join retailPeriodicDiscountLine
                            where RetailPeriodicDiscountLine.OfferId == retailPeriodicDiscount.OfferId
                            join Product from retailGroupMemberLine
                                where  RetailGroupMemberLine.RecId == retailPeriodicDiscountLine.RetailGroupMemberLine
                                        && retailGroupMemberLine.Product == _product
            {
                offerIds += (offerIds ? ', ' : '') + retailPeriodicDiscount.OfferId;
            }
        }

        return offerIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOffersDirectlyAssignedToProductAndCatalog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the offers assigned to the product and catalog directly.
    /// </summary>
    /// <param name = "_catalog"> The Catalog RecId to retrieve the periodic discount offers for.</param>
    /// <param name = "_product"> The product RecId that we want to fetch the offers for.</param>
    /// <param name = "_activeDate"> Look for offers active on this date. </param>
    /// <param name = "_isPromotion"> Offer type, true if offer type is Promotion else false.</param>
    /// <returns> A string of comma separated list of offer identifiers.</returns>
    public static RetailMemo getOffersDirectlyAssignedToProductAndCatalog(CatalogRefRecId _catalog, RefRecId _product, date _activeDate, boolean _isPromotion = false)
    {
        RetailMemo offerIds;
        date activeDatePlusOne = _activeDate + 1;
        date activeDateMinusOne = _activeDate - 1;

        RetailCatalogPriceGroup retailCatalogPriceGroup;
        RetailChannelPriceGroup retailChannelPriceGroup;
        RetailDiscountPriceGroup retailDiscountPriceGroup;
        RetailPeriodicDiscount retailPeriodicDiscount;
        RetailPeriodicDiscountLine retailPeriodicDiscountLine;
        RetailGroupMemberLine retailGroupMemberLine;

        // Fetch offers for discount type other than Price adjustment.
        if (!_isPromotion)
        {
            while select retailCatalogPriceGroup group by retailPeriodicDiscount.OfferId, retailGroupMemberLine.Product
            where retailCatalogPriceGroup.Catalog == _catalog
            join OfferId from retailDiscountPriceGroup
                where retailDiscountPriceGroup.PriceDiscGroup == retailCatalogPriceGroup.PriceDiscGroup
                join OfferId from retailPeriodicDiscount
                    where retailPeriodicDiscount.OfferId == retailDiscountPriceGroup.OfferId
                    &&    RetailPeriodicDiscount.PeriodicDiscountType != RetailDiscountOfferTypeBase::Promotion
                    &&    retailPeriodicDiscount.Status == RetailDisabledEnabled::Enabled
                    && retailPeriodicDiscount.ValidFrom < activeDatePlusOne
                    && retailPeriodicDiscount.ValidTo > activeDateMinusOne
                    join   retailPeriodicDiscountLine
                        where RetailPeriodicDiscountLine.OfferId == retailPeriodicDiscount.OfferId
                        join Product from retailGroupMemberLine
                            where  RetailGroupMemberLine.RecId == retailPeriodicDiscountLine.RetailGroupMemberLine
                            &&     retailGroupMemberLine.Product == _product
            {
                offerIds += (offerIds ? ', ' : '') + retailPeriodicDiscount.OfferId;
            }
        }
        else
        {
            // Fetch offers for discount type Price adjustment.
            while select retailCatalogPriceGroup group by retailPeriodicDiscount.OfferId, retailGroupMemberLine.Product
            where retailCatalogPriceGroup.Catalog == _catalog
            join OfferId from retailDiscountPriceGroup
                where retailDiscountPriceGroup.PriceDiscGroup == retailCatalogPriceGroup.PriceDiscGroup
                join OfferId from retailPeriodicDiscount
                    where retailPeriodicDiscount.OfferId == retailDiscountPriceGroup.OfferId
                    &&    RetailPeriodicDiscount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Promotion
                    &&    retailPeriodicDiscount.Status == RetailDisabledEnabled::Enabled
                    && retailPeriodicDiscount.ValidFrom < activeDatePlusOne
                    && retailPeriodicDiscount.ValidTo > activeDateMinusOne
                    join   retailPeriodicDiscountLine
                        where RetailPeriodicDiscountLine.OfferId == retailPeriodicDiscount.OfferId
                        join Product from retailGroupMemberLine
                            where  RetailGroupMemberLine.RecId == retailPeriodicDiscountLine.RetailGroupMemberLine
                            &&     retailGroupMemberLine.Product == _product
            {
                offerIds += (offerIds ? ', ' : '') + retailPeriodicDiscount.OfferId;
            }
        }

        return offerIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>