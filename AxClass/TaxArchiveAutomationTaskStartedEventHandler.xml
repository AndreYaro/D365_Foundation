<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxArchiveAutomationTaskStartedEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

[Export(identifierStr(Dynamics.AX.Application.ArchiveServiceITaskStartedHandler))]
[ExportMetadata(extendedTypeStr(ArchiveServiceTypeName), 'TaxArchiveAutomation')]
internal final class TaxArchiveAutomationTaskStartedEventHandler implements ArchiveServiceITaskStartedHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>executeTaskStartedEventHandler</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void executeTaskStartedEventHandler(
        ArchiveServiceTaskID _taskID,
        RefTableId _sourceTableId,
        RefRecId _sourceRecId)
    {
        if (_sourceTableId == tableNum(TaxArchiveTrans))
        {
            // State flow is: WaitingToBeReversed -> Reversing, Any other state -> Archiving
            TaxArchiveTrans archiveTrans = TaxArchiveTrans::findByRecId(_sourceRecId, true);

            if (archiveTrans)
            {
                ttsbegin;
                if (archiveTrans.Status == LedgerArchiveStatus::WaitingToBeReversed)
                {
                    archiveTrans.Status = LedgerArchiveStatus::Reversing;
                }
                else
                {
                    archiveTrans.Status = LedgerArchiveStatus::Archiving;
                }
                archiveTrans.update();
                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>