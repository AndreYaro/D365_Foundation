<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementProformaConfirmCBD_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>AgreementProformaConfirmCBD_Extension</c> is an extension class of the <c>AgreementProformaConfirm</c>
/// that supports ER runtime print destinations.
/// </summary>
[ExtensionOf(classStr(AgreementProformaConfirm))]
internal final class AgreementProformaConfirmCBD_Extension
{
    private container printManagementExtensionsParameters;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>printManagementExtensionsParameters</Name>
				<Source><![CDATA[
    public container printManagementExtensionsParameters(container _printManagementExtensionsParameters = printManagementExtensionsParameters)
    {
        printManagementExtensionsParameters = _printManagementExtensionsParameters;
        return printManagementExtensionsParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectERPrintDestination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls ER destinations forms.
    /// </summary>
    /// <param name = "_agreementConfirm">An instance of the class <c>AgreementProformaConfirm</c>.</param>
    public static void selectERPrintDestination(AgreementProformaConfirm _agreementConfirm)
    {
        NonSSRSPrintMgmtAdapterPromptAdditionalParametersResult result = NonSSRSPrintMgmtAdapter::promptAndRestoreAdditionalParameters(
            CBDDestinationsFormLetterEngine::getFormatNamesDestinationMapByFormLetter(
                _agreementConfirm,
                _agreementConfirm.printMgmtDocumentType()),
            NonSSRSPrintMgmtPromptExtensionParameters::newFromPacked(_agreementConfirm.printManagementExtensionsParameters()));

        if (result.parmPromptResult())
        {
            if (result.parmExtensionParameters() &&
                !result.parmExtensionParameters().isEmpty())
            {
                _agreementConfirm.printManagementExtensionsParameters(result.parmExtensionParameters().pack());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>printMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns Print management document type.
    /// </summary>
    /// <returns>Print management document type.</returns>
    internal PrintMgmtDocumentType printMgmtDocumentType()
    {
        return this.parmAgreementHeader().moduleType() == ModuleSalesPurch::Sales
            ? PrintMgmtDocumentType::SalesAgreementConfirmation
            : PrintMgmtDocumentType::PurchAgreementConfirmation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSupportedCBDReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Identifies if ER destination on runtime form is supported.
    /// </summary>
    /// <returns>true if ER destination on runtime form is supported; otherwise, false.</returns>
    internal boolean isSupportedCBDReport()
    {
        return CBDDestinationsFormLetterEngine::isSupportedPrintMgmtDocType(this.printMgmtDocumentType());
    }

]]></Source>
			</Method>
			<Method>
				<Name>analyzePrintManagementSetup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Analyzes the print management setup.
    /// </summary>
    /// <returns>A container of analyze results.</returns>
    internal container analyzePrintManagementSetup()
    {
        return CBDDestinationsFormLetterEngine::analyzePrintManagementSetup(this, this.printMgmtDocumentType());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>