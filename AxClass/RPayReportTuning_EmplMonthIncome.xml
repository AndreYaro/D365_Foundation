<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayReportTuning_EmplMonthIncome</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class RPayReportTuning_EmplMonthIncome extends RPayReportTuning
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
        public void lookup(FormStringControl _lookupCtrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(RPayCounterTable), _lookupCtrl);
        Query                   query = new Query();

        query.addDataSource(tableNum(RPayCounterTable));

        query.dataSourceNo(1).addRange(fieldNum(RPayCounterTable,CounterType)).value(queryValue(RPayCounterType::Fund));

        sysTableLookup.addLookupfield(fieldNum(RPayCounterTable,CounterUnit));
        sysTableLookup.addLookupfield(fieldNum(RPayCounterTable,Name));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(RPayReportName _reportName, FormRun _formRun)
    {
        parameterName = [literalStr("@RUP1944")];

        super(_reportName, _formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>openReportTemplate</Name>
				<Source><![CDATA[
        public void openReportTemplate()
    {
        ComExcelDocument_RU doc = new ComExcelDocument_RU();

        doc.open(TemplateProvider_RU::getFor(RPayReport_EmplMonthIncome::construct()).get(resourceStr(RPayReport_EmplMonthIncome)), true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printReport</Name>
				<Source><![CDATA[
        public void printReport()
    {
        new MenuFunction(menuitemoutputstr(RPayReport_EmplMonthIncome), MenuItemType::Output).run(new Args());
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        rPayReportTuningTable = rPayReportTuningTableDs.cursor();

        if (! (select firstfast rpayCounterTable
                  where rpayCounterTable.CounterUnit == rPayReportTuningTable.Parameter &&
                        rPayCounterTable.CounterType == RPayCounterType::Fund).RecId)
        {
            return checkFailed(strFmt("@GLS106038",
                               rPayReportTuningTable.Parameter,
                               fieldPName(RPayCounterTable, CounterUnit),
                               tablePName(RPayCounterTable)));
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>