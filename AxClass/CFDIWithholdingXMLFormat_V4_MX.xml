<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFDIWithholdingXMLFormat_V4_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CFDIWithholdingXMLFormat_V4_MX</c> prepares output xml file for CFDI 4.0 withholding tax format.
/// </summary>
public class CFDIWithholdingXMLFormat_V4_MX extends CFDIWithholdingXMLFormat_MX
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>retencionesSchemaVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns version of the "Retenciones" element.
    /// </summary>
    /// <returns>Version of the "Retenciones" element.</returns>
    protected str retencionesSchemaVersion()
    {
        return '2.0';
    }

]]></Source>
			</Method>
			<Method>
				<Name>retencionesNamespace</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns namespace of the "Retenciones" element.
    /// </summary>
    /// <returns>Namespace of the "Retenciones" element.</returns>
    protected str retencionesNamespace()
    {
        return 'http://www.sat.gob.mx/esquemas/retencionpago/2';
    }

]]></Source>
			</Method>
			<Method>
				<Name>retencionesSchema</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns schema of the "Retenciones" element.
    /// </summary>
    /// <returns>Schema of the "Retenciones" element.</returns>
    protected str retencionesSchema()
    {
        return 'http://www.sat.gob.mx/esquemas/retencionpago/2/retencionpagov2.xsd';
    }

]]></Source>
			</Method>
			<Method>
				<Name>montoRetAttributeName</Name>
				<Source><![CDATA[
    protected str montoRetAttributeName()
    {
        return 'MontoRet';
    }

]]></Source>
			</Method>
			<Method>
				<Name>impuestoAttributeName</Name>
				<Source><![CDATA[
    protected str impuestoAttributeName()
    {
        return 'ImpuestoRet';
    }

]]></Source>
			</Method>
			<Method>
				<Name>ejercAttributeName</Name>
				<Source><![CDATA[
    protected str ejercAttributeName()
    {
        return 'Ejercicio';
    }

]]></Source>
			</Method>
			<Method>
				<Name>rfcEmisorAttributeName</Name>
				<Source><![CDATA[
    protected str rfcEmisorAttributeName()
    {
        return 'RfcE';
    }

]]></Source>
			</Method>
			<Method>
				<Name>rfcRecepAttributeName</Name>
				<Source><![CDATA[
    protected str rfcRecepAttributeName()
    {
        return 'RfcR';
    }

]]></Source>
			</Method>
			<Method>
				<Name>numCertAttributeName</Name>
				<Source><![CDATA[
    protected str numCertAttributeName()
    {
        return 'NoCertificado';
    }

]]></Source>
			</Method>
			<Method>
				<Name>certAttributeName</Name>
				<Source><![CDATA[
    protected str certAttributeName()
    {
        return 'Certificado';
    }

]]></Source>
			</Method>
			<Method>
				<Name>nacionalidadAttributeName</Name>
				<Source><![CDATA[
    protected str nacionalidadAttributeName()
    {
        return 'NacionalidadR';
    }

]]></Source>
			</Method>
			<Method>
				<Name>curpRAttributeName</Name>
				<Source><![CDATA[
    protected str curpRAttributeName()
    {
        return 'CurpR';
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRegIdTribAttributeName</Name>
				<Source><![CDATA[
    protected str numRegIdTribAttributeName()
    {
        return 'NumRegIdTribR';
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReceptorElement</Name>
				<Source><![CDATA[
    protected XmlElement createReceptorElement()
    {
        XmlElement receptorElement = super();

        XMLElement receptorDetails = receptorElement.getNamedElement('retenciones:Nacional');

        if (receptorDetails)
        {
            receptorDetails.setAttribute('DomicilioFiscalR', vendTable.postalAddress().ZipCode);
        }

        return receptorElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createEmisorElement</Name>
				<Source><![CDATA[
    protected XmlElement createEmisorElement()
    {
        XmlElement emisorElement = super();

        if (emisorElement)
        {
            emisorElement.setAttribute('RegimenFiscalE', CompanyInfo::find().TaxRegimeCode_MX);
        }

        return emisorElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRetencionesElement</Name>
				<Source><![CDATA[
    protected void createRetencionesElement()
    {
        super();

        if (retencionesElement)
        {
            retencionesElement.setAttribute('LugarExpRetenc', LogisticsPostalAddress::findByLocation(CompanyInfo::find().PrimaryAddressLocation).ZipCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRetencionesElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes "Retenciones" element.
    /// </summary>
    protected void initRetencionesElement()
    {
        super();

        XmlElement cfdiRetenRelacionadosElement = this.createCfdiRetenRelacionadosElement();

        if (cfdiRetenRelacionadosElement)
        {
            retencionesElement.appendChild(cfdiRetenRelacionadosElement);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCfdiRetenRelacionadosElement</Name>
				<Source><![CDATA[
    private XmlElement createCfdiRetenRelacionadosElement()
    {
        EInvoiceCFDIReference_MX reference;
        XmlElement cfdiRetenRelacionadosElement;

        select firstonly reference
            where reference.EInvoiceJour_MX == eInvoiceJour.RecId;

        if (reference)
        {
            cfdiRetenRelacionadosElement = this.createElement('CfdiRetenRelacionados');
            cfdiRetenRelacionadosElement.setAttribute('TipoRelacion', strRFix(int2Str(enum2int(reference.ReferenceType)), 2, '0'));
            cfdiRetenRelacionadosElement.setAttribute('UUID', reference.CFDIUUID);
        }

        return cfdiRetenRelacionadosElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getXmlTaxType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets XML tax type string.
    /// </summary>
    /// <param name="_taxType">
    /// Tax type.
    /// </param>
    /// <returns>
    /// The string with tax type.
    /// </returns>
    protected str getXmlTaxType(TaxType_MX _taxType)
    {
        str taxTypeStr;

        switch(_taxType)
        {
            case TaxType_MX::ISR:
                taxTypeStr = '001';
                break;
            case TaxType_MX::IVA:
                taxTypeStr = '002';
                break;
            case TaxType_MX::IEPS:
                taxTypeStr = '003';
                break;
            default:
                throw error(error::wrongUseOfFunction(funcName()));
        }

        return taxTypeStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>month2str</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the string representation of the month.
    /// </summary>
    /// <param name = "_month">Month to convert to string.</param>
    /// <returns>The string representation of the month.</returns>
    protected str month2str(int _month)
    {
        return strRFix(int2str(_month), 2, '0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalDateTimeFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the format of date/time to be used in the output XML.
    /// </summary>
    /// <returns>The format of date/time to be used in the output XML</returns>
    protected str getJournalDateTimeFormat()
    {
        return 'yyyy-MM-ddThh:mm:ss';
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTotalesElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates "Totales" element.
    /// </summary>
    /// <returns>Created "Totales" element.</returns>
    protected XmlElement createTotalesElement()
    {
        boolean isRIFTaxpayersWithholdingType = withholdingJour.WithholdingTypeCode == EInvoiceCFDIJournalHelper::RIFTaxpayersWithholdingType();
        roundingPrecision = 0.01;

        XmlElement totalesElement = this.createElement('Totales');

        totalesElement.setAttribute('MontoTotOperacion', this.formatXMLAmount(isRIFTaxpayersWithholdingType ? 0 : withholdingJour.TaxBaseAmount + withholdingJour.ExemptAmount));
        totalesElement.setAttribute('MontoTotGrav', this.formatXMLAmount(isRIFTaxpayersWithholdingType ? 0 : withholdingJour.TaxBaseAmount));
        totalesElement.setAttribute('MontoTotExent', this.formatXMLAmount(isRIFTaxpayersWithholdingType ? 0 : withholdingJour.ExemptAmount));
        totalesElement.setAttribute('MontoTotRet', this.formatXMLAmount(abs(withholdingJour.WithholdingAmount)));

        if (isRIFTaxpayersWithholdingType)
        {
            totalesElement.setAttribute('UtilidadBimestral', this.formatXMLAmount(withholdingJour.BimonthlyProfitAmount));
            totalesElement.setAttribute('ISRCorrespondiente', this.formatXMLAmount(withholdingJour.ISRCorrepondingAmount));
        }

        this.createImpRetenidosElements(totalesElement);

        roundingPrecision = 0.00;

        return totalesElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tipoPagoRet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the string representation of the tax type to be used in the "TipoPagoRet" attribute.
    /// </summary>
    /// <param name = "_taxType">Tax type.</param>
    /// <returns>The string representation of the tax type to be used in the "TipoPagoRet" attribute.</returns>
    protected str tipoPagoRet(TaxType_MX _taxType)
    {
        str ret;

        switch(_taxType)
        {
            case TaxType_MX::IVA:
                ret = '01';
                break;
            case TaxType_MX::IEPS:
                ret = '02';
                break;
            case TaxType_MX::ISR:
                ret = '04';
                break;
            default:
                throw error(error::wrongUseOfFunction(funcName()));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSetCURPE</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if CURPE attribute should be set.
    /// </summary>
    /// <returns>Always returns false.</returns>
    protected boolean shouldSetCURPE()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>