<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceTableToLineUpdate_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used to roll various data from <c>VendInvoiceInfoTable</c> to <c>VendInvoiceInfoLine</c>.
/// </summary>
class VendInvoiceTableToLineUpdate_W extends SalesPurchTableToLineUpdate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canUpdateLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method determines whether a rolldown from  <c>VendInvoiceInfoTable</c> to <c>VendInvoiceInfoLine</c> is permitted.
    /// </summary>
    /// <param name="_sourceLine">
    /// The source line to be validated
    /// </param>
    /// <param name="_previousErrorsFound">
    /// A Boolean value that determines whether errors previous have been found; optional.
    /// </param>
    /// <param name="_axTable">
    /// A <c>AxInternalBase</c> object that can be used for validating if a <c>VendInvoiceInfoLine</c> can be
    /// updated; optional.
    /// </param>
    /// <returns>
    /// Returns true if <c>VendInvoiceInfoLine</c> is not for a Purchase Order.
    /// </returns>
    protected boolean canUpdateLine(Common _sourceLine, boolean _previousErrorsFound = false, AxInternalBase _axTable = null)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = _sourceLine as VendInvoiceInfoLine;

        return vendInvoiceInfoLine.isNonPO();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAxLineObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>AxVendInvoiceInfoLine</c> class.
    /// </summary>
    /// <param name="_axTable">
    /// The <c>AxVendInvoiceInfoTablee</c> class from which to initialize the <c>AxVendInvoiceInfoLine</c>
    /// class.
    /// </param>
    /// <param name="_sourceLine">
    /// The <c>VendInvoiceInfoLine</c> buffer to initialize the <c>AxVendInvoiceInfoLine</c> class from.
    /// </param>
    /// <returns>
    /// A <c>AxVendInvoiceInfoLine</c> class.
    /// </returns>
    protected AxInternalBase getAxLineObject(AxInternalBase _axTable, Common _sourceLine)
    {
        AxVendInvoiceInfoLine axVendInvoiceInfoLine = AxVendInvoiceInfoLine::newVendInvoiceInfoLine(_sourceLine);

        axVendInvoiceInfoLine.axVendInvoiceInfoTable(_axTable);
        axVendInvoiceInfoLine.isTableToLine(false);

        return axVendInvoiceInfoLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAxTableObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>AxVendInvoiceInfoTable</c> class.
    /// </summary>
    /// <param name="_sourceTable">
    /// The <c>VendInvoiceInfoTable</c> buffer from which to initialize the <c>AxVendInvoiceInfoTable</c>
    /// class.
    /// </param>
    /// <returns>
    /// An <c>AxVendInvoiceInfoTable</c> class.
    /// </returns>
    protected AxInternalBase getAxTableObject(Common _sourceTable)
    {
        return AxVendInvoiceInfoTable::newVendInvoiceInfoTable(_sourceTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the table ID for the line table that is used in the header to line feature.
    /// </summary>
    /// <returns>
    /// The table ID for the <c>VendInvoiceInfoLine</c> table.
    /// </returns>
    protected TableId lineTableId()
    {
        return tableNum(VendInvoiceInfoLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRunLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Builds and returns a <c>QueryRun</c> object.
    /// </summary>
    /// <param name="_update">
    ///    A Boolean value that determines whether the record is to be selected for updated; optional.
    /// </param>
    /// <returns>
    ///    A <c>QueryRun</c> object.
    /// </returns>
    protected QueryRun queryRunLine(boolean _update = false)
    {
        VendInvoiceInfoTable vendInvoiceInfoTable = sourceTable as VendInvoiceInfoTable;

        return new QueryRun(vendInvoiceInfoTable.queryLine(_update));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldAsModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a field as modified in a <c>AxInternalBase</c> object.
    /// </summary>
    /// <param name="_axTable">
    /// An <c>AxInternalBase</c> object.
    /// </param>
    /// <param name="_fieldId">
    /// The field ID for the field to be set as modified.
    /// </param>
    protected void setFieldAsModified(AxInternalBase _axTable, FieldId _fieldId)
    {
        FieldId invoiceFieldId = VendInvoiceTableToLineUpdate_W::convertPurchTableFieldToVendInvoice(_fieldId);

        _axTable.setFieldAsModified(invoiceFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>VendInvoiceTableToLineUpdate_W</c> class.
    /// </summary>
    /// <param name="_vendInvoiceTableToLineUpdatePrompt_W">
    /// A <c>VendInvoiceTableToLineUpdatePrompt_W</c> object that contains fields to be updated.
    /// </param>
    /// <returns>
    /// A new instance of the <c>VendInvoiceTableToLineUpdate_W</c> class.
    /// </returns>
    public static VendInvoiceTableToLineUpdate_W construct(VendInvoiceTableToLineUpdatePrompt_W _vendInvoiceTableToLineUpdatePrompt_W)
    {
        VendInvoiceTableToLineUpdate_W   vendInvoiceTableToLineUpdate_W;

        vendInvoiceTableToLineUpdate_W = new VendInvoiceTableToLineUpdate_W();
        vendInvoiceTableToLineUpdate_W.initUpdateFields(_vendInvoiceTableToLineUpdatePrompt_W);
        return vendInvoiceTableToLineUpdate_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertPurchTableFieldToVendInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines and returns the field id in <c>VendInvoiceInfoTable_W</c> that is being rolled down.
    /// </summary>
    /// <param name="_purchTableFieldId">
    /// The field field id in <c>PurchTable</c> that will map to its companion in <c>VendInvoiceInfoTable_W</c>.
    /// </param>
    /// <returns>
    /// The field id in <c>VendInvoiceInfoTable_W</c> that is being rolled down.
    /// </returns>
    public static FieldId convertPurchTableFieldToVendInvoice(FieldId _purchTableFieldId)
    {
        switch (_purchTableFieldId)
        {
            case fieldNum(PurchTable, IntrastatFulfillmentDate_HU):
                return VendInvoiceInfoTable_W::convertPurchTableFieldToVendInvoice(_purchTableFieldId);
        }
        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>