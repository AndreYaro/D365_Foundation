<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesDeliveryScheduleFormContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>SalesDeliveryScheduleFormContext</c> holds delivery schedule form context/data needed by delivery date calculation logic.
/// Using the context class allows delivery date calculation logic to consider a user input/edit, which might not have been saved in database yet.
/// </summary>
internal class SalesDeliveryScheduleFormContext implements System.IDisposable
{
    private static SalesDeliveryScheduleFormContext instance;

    protected Map deliveryQtyByDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        instance = this;

        this.deliveryQtyByDate = new Map(typeName2Type(extendedTypeStr(DateExpected)), Types::Real);
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    internal static SalesDeliveryScheduleFormContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructCommon</Name>
				<Source><![CDATA[
    internal static SalesDeliveryScheduleFormContext constructCommon(Common _formCallerRecord)
    {
        switch (_formCallerRecord.TableId)
        {
            case tableNum(SalesLine) :
                return SalesDeliveryScheduleFormContext_SalesLine::newSalesLine(_formCallerRecord);
            default : throw error(strFmt("@SYS19306",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLine</Name>
				<Source><![CDATA[
    internal void addLine(Common _orderLine)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrderLineTransId</Name>
				<Source><![CDATA[
    internal InventTransId getOrderLineTransId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShippingQtyByDateMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a map with delivery quantity per date, where the key is the date and the value is the quantity.
    /// </summary>
    /// <returns>
    /// A map with collected data {key: date, value: quantity}.
    /// </returns>
    internal Map getShippingQtyByDateMap()
    {
        return deliveryQtyByDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderLineHasDeliveryLines</Name>
				<Source><![CDATA[
    internal boolean orderLineHasDeliveryLines()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyDeliveryScheduleFormContextForIssues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Call specific implementation of applying deliveryScheduleFormContext logic.
    /// </summary>    
    /// <param name="_parameters">
    /// Parameters for adjusting the quantity in the delivery lines using the delivery schedule form specific to the SalesLine.
    /// </param>
    internal void applyDeliveryScheduleFormContextForIssues(SalesDeliveryScheduleFormContextIssueParameters _parameters)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>