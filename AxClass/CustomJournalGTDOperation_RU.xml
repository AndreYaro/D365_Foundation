<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomJournalGTDOperation_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CustomJournalGTDOperation_RU extends CustomJournalGTDBase_RU
{
    InventJournalTable  inventJournalTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInventJournalTransfer</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected InventTransId createInventJournalTransfer(Common              _common,
                                                        InventGTDId_RU      _toInventGtdId,
                                                        InventLocationId    _toInventLocationId,
                                                        InventProfileId_RU  _inventProfileId,
                                                        Qty                 _qty = 0,
                                                        DimensionDefault    _dimension = 0)
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventProfile</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected InventProfileId_RU getInventProfile(InventProfileId_RU _inventProfileId)
    {
        AgreementHeaderDefault agreementHeaderDefault;
        DlvTerm                dlvTerm;

        InventProfileId_RU  ret = _inventProfileId;

        agreementHeaderDefault = AgreementHeaderDefault::findAgreementHeader(customJournalTable.agreementHeaderExt().AgreementHeader);

        if (agreementHeaderDefault.DeliveryTerm)
        {
            dlvTerm = DlvTerm::find(agreementHeaderDefault.DeliveryTerm);

            if (dlvTerm.CustomInventProfileId_RU)
            {
                ret = dlvTerm.CustomInventProfileId_RU;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventJournalTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected InventJournalTable inventJournalTable()
    {
        InventJournalName inventJournalName;

        if (inventJournalTable)
            return inventJournalTable;

        inventJournalName = InventJournalName::find(InventParameters::find().TransferJournalNameId);

        inventJournalTable.initValue();
        inventJournalTable.initFromInventJournalName(inventJournalName);

        inventJournalTable.JournalId = NumberSeq::newGetNum(InventParameters::numRefInventJournalId()).num();
        inventJournalTable.insert();

        return inventJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postInventJournalTransfer</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void postInventJournalTransfer()
    {
        JournalCheckPost        inventJournalCheckPost;
        JournalTableData        journalTableData;

        if (inventJournalTable)
        {
            inventJournalTable.selectForUpdate(true);
            inventJournalTable.reread();

            journalTableData = new InventJournalTableData(inventJournalTable);

            journalTableData.updateBlock(JournalBlockLevel::None, JournalBlockLevel::System, false);

            inventJournalCheckPost = InventJournalCheckPost::newJournalCheckPost(JournalCheckPostType::Post, inventJournalTable);

            try
            {
                inventJournalCheckPost.runOperation();
            }
            catch (Exception::Error)
            {
                throw error("@GLS101992");
            }

            journalTableData.updateBlock(JournalBlockLevel::System, JournalBlockLevel::None, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFactureExp</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void updateFactureExp()
    {
        CustInvoiceTrans        custInvoiceTrans;
        FactureJour_RU          factureJour;
        CustomJournalTrans_RU   customJournalTrans;
        RecordSortedList        recordSortedList;

        if (customJournalTable.CustomJournalType != CustomJournalType_RU::Export)
        {
            return;
        }

        while select SalesPurchInventTransId from customJournalTrans
            where customJournalTrans.CustomJournalId == customJournalTable.CustomJournalId
        {
            custInvoiceTrans = CustInvoiceTrans::findInventTransid(customJournalTrans.SalesPurchInventTransId);
            if (custInvoiceTrans)
            {
                recordSortedList = custInvoiceTrans.custInvoiceJour().factureJourSortedList_RU();

                while (recordSortedList.next(factureJour))
                {
                    this.updateFactureExpDate(factureJour);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFactureExpDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void updateFactureExpDate(FactureJour_RU _factureJour)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>