<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvParametersTableHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
class TrvParametersTableHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultInstructions</Name>
				<Source><![CDATA[
    public static BarcodeCoverPageInstructions defaultInstructions(TrvParameters parameters)
    {
        TrvBarcodeInstructionsLanguageTxt trvBarcodeInstructionsLanguageTxt;

        select firstOnly Txt from trvBarcodeInstructionsLanguageTxt
            where trvBarcodeInstructionsLanguageTxt.TrvParameterRecId ==  parameters.RecId
            && trvBarcodeInstructionsLanguageTxt.LanguageId == CompanyInfo::languageId();

        return trvBarcodeInstructionsLanguageTxt.Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxRecoveryEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether VAT tax recovery is enabled.
    /// </summary>
    /// <returns>
    /// true if tax recovery is enabled; otherwise, false.
    /// </returns>
    public static boolean isTaxRecoveryEnabled(TrvParameters parameters)
    {
        return parameters.EnableTaxRecovery == NoYes::Yes && TaxParameters::find().PurchTaxOnOperations == NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefCashAdvanceNumber</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefCashAdvanceNumber()
    {
        return NumberSeqReference::findReference(extendedtypenum(TrvCashAdvanceNumber));
    }

]]></Source>
			</Method>
			<Method>
				<Name>userInstructions</Name>
				<Source><![CDATA[
    public static BarcodeCoverPageInstructions userInstructions(TrvParameters parameters)
    {
        TrvBarcodeInstructionsLanguageTxt trvBarcodeInstructionsLanguageTxt;

        select firstOnly Txt from trvBarcodeInstructionsLanguageTxt
            where trvBarcodeInstructionsLanguageTxt.TrvParameterRecId ==  parameters.RecId
            && trvBarcodeInstructionsLanguageTxt.LanguageId == infolog.language();

        return trvBarcodeInstructionsLanguageTxt ? trvBarcodeInstructionsLanguageTxt.Txt : TrvParametersTableHelper::defaultInstructions(parameters);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>