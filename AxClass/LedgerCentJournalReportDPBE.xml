<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCentJournalReportDPBE</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerCentJournalReportDPBE</c> class is the Report data provider class for the
///    <c>LedgerCentralisationJournalReportBE</c> SSRS report.
/// </summary>
[
    SRSReportParameterAttribute(classstr(LedgerCentJournalReportContractBE))
]
class LedgerCentJournalReportDPBE extends SrsReportDataProviderPreProcessTempDB
{
    TmpCentralisationBE              tmpCentralisationBE;
    LedgerJournalPeriodFinalPrintBE  journalPeriodFinalPrintBE;

    FromDate                         fromDate;
    ToDate                           toDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTmpCentralisationBE</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the data from <c>TmpCentralisationBE</c> table.
    /// </summary>
    /// <returns>
    ///    The populated <c>TmpCentralisationBE</c> object.
    /// </returns>
    /// <remarks>
    ///    This method is called from the AX-SSRS framework code.
    /// </remarks>
    [
        SRSReportDataSetAttribute(tableStr(TmpCentralisationBE))
    ]
    public TmpCentralisationBE getTmpCentralisationBE()
    {
        select tmpCentralisationBE;
        return tmpCentralisationBE;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the business logic of the SSRS report.
    /// </summary>
    /// <remarks>
    ///    This method will be called by SSRS at runtime.The method should compute data and populate the data
    ///    tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        LedgerCentJournalReportContractBE contract  = this.parmDataContract() as LedgerCentJournalReportContractBE;

        fromDate  = contract.parmFromDate();
        toDate    = contract.parmToDate();

        ttsbegin;
        insert_recordset tmpCentralisationBE (LedgerPostingJournalId, Name, DebitTotal, CreditTotal)
        select
                LedgerPostingJournalId, Name, DebitTotal, CreditTotal
                from  journalPeriodFinalPrintBE
                       order by LedgerPostingJournalId
                        where journalPeriodFinalPrintBE.PeriodStart  == fromDate &&
                                journalPeriodFinalPrintBE.PeriodEnd  == toDate;
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>