<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tax1099DupTINDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>Tax1099DupTINDP</c> class contains the variables to use in this class.
/// </summary>
[SRSReportQueryAttribute(queryStr(Tax1099DupTIN))]
public class Tax1099DupTINDP extends SrsReportDataProviderPreProcessTempDB
{
    Tax1099DupTINTmp tmpTax1099DupTIN;
    Tax1099DupTINTmp tmpTax1099DupTINLocal;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTax1099DupTINTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Queries the temporary table to retrieve the data table.
    /// </summary>
    /// <returns>
    ///    The required report data from the temporary table.
    /// </returns>
    [SRSReportDataSetAttribute('Tax1099DupTINTmp')]
    public Tax1099DupTINTmp getTax1099DupTINTmp()
    {
        select tmpTax1099DupTIN;
        return tmpTax1099DupTIN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTax1099DupTINTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts the required data into the temporary table.
    /// </summary>
    /// <param name="_tax1099DupTINTmp">
    ///    The <c>Tax1099DupTINTmp</c> object that contains the values to assign to the temporary table.
    /// </param>
    /// <param name="_vendTableTmp">
    ///    The <c>VendTable</c> object that contains the values to assign to the temporary table.
    /// </param>
    public void insertTax1099DupTINTmp(Tax1099DupTINTmp _tax1099DupTINTmp, VendTable _vendTableTmp)
    {
        tmpTax1099DupTIN.AccountNum = _tax1099DupTINTmp.AccountNum;
        tmpTax1099DupTIN.Tax1099RegNum = _tax1099DupTINTmp.Tax1099RegNum;
        tmpTax1099DupTIN.Name = _vendTableTmp.name();
        tmpTax1099DupTIN.Address = _vendTableTmp.postalAddress().Address;
        tmpTax1099DupTIN.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the report business logic.
    /// </summary>
    /// <remarks>
    ///    This method provides the ability to write the report business logic. It will be called by SQL
    ///    Server Reporting Services (SSRS) at run time. The method should compute data and populate the data
    ///    tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceUS00003, funcName());

        #define.toRemove('ABCDEFGHIJKLMNOPQRSTUVWXYZ- ')
        QueryRun qr;
        VendTable vendTable;
        VendSettlementTax1099 localvendSettlementTax1099;
        VendTable vendTableTemp;
        Tax1099RegNum localvendTax1099RegNum;

        qr = new QueryRun(this.parmQuery());
        while (qr.next())
        {
            localvendSettlementTax1099 = qr.get(tableNum(VendSettlementTax1099));
            while select vendTable
                where vendTable.AccountNum == localvendSettlementTax1099.VendAccount &&
                      vendTable.Tax1099Reports == true && vendTable.Tax1099RegNum != ''
            {
                localvendTax1099RegNum = vendTable.Tax1099RegNum;

                vendTable.Tax1099RegNum = strRem(vendTable.Tax1099RegNum, #toRemove);
                tmpTax1099DupTINLocal.AccountNum = vendTable.AccountNum;
                tmpTax1099DupTINLocal.Tax1099RegNum = strRem(vendTable.Tax1099RegNum, #toRemove);
                tmpTax1099DupTINLocal.Name = vendTable.name();
                tmpTax1099DupTINLocal.Address = vendTable.postalAddress().Address;
                tmpTax1099DupTINLocal.insert();

                select count(RecId) from vendTableTemp
                    where vendTableTemp.Tax1099RegNum == localvendTax1099RegNum &&
                          vendTableTemp.Tax1099Reports == true && vendTableTemp.Tax1099RegNum != '';

                if (vendTableTemp.RecId > 1)
                {
                    this.insertTax1099DupTINTmp(tmpTax1099DupTINLocal, vendTable);
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>