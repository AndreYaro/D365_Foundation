<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DiotDeclarationContract_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for DiotDeclaration_MX SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the DiotDeclaration_MX SSRS Report.
/// </remarks>
[
    DataContract,
    SysOperationGroupAttribute('@SYS13128', '@SYS13128', '1')]
public class DiotDeclarationContract_MX implements SysOperationValidatable
{
    TransDate             fromDate;
    TransDate             toDate;
    DIOTReportType_MX     reportType;
    TaxVatReportOption_MX show;
    NoYes                 generateFile;
    RealBase              percentageGlobalVendors;
    Amount                upperlimit;
    TaxPeriod             unrealizedTaxPeriod;
    TaxPeriod             realizedTaxPeriod;
    private NoYes         absValueInGeneratedFile;

    #DIOT_MX

    #DEFINE.currentVersion(4)
    #LOCALMACRO.currentList
        fromDate,
        reportType,
        generateFile,
        percentageGlobalVendors,
        upperlimit,
        show,
        unrealizedTaxPeriod,
        realizedTaxPeriod
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmUnrealizedTaxPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Unrealized Tax Period.
    /// </summary>
    /// <param name="_taxPeriod">
    /// The new value of the datacontract parameter Unrealized Tax Period; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Unrealized Tax Period
    /// </returns>
    [
        DataMember(#parmUnrealizedTaxPeriod),
        SysOperationLabel(literalStr("@Mexico:VatReport_UnrealizedTaxPeriod")),
        SysOperationDisplayOrder('1')
    ]
    public TaxPeriod parmUnrealizedTaxPeriod(TaxPeriod _taxPeriod = unrealizedTaxPeriod)
    {
        unrealizedTaxPeriod = _taxPeriod;
        return unrealizedTaxPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRealizedTaxPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Realized Tax Period.
    /// </summary>
    /// <param name="_taxPeriod">
    /// The new value of the datacontract parameter Realized Tax Period; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Realized Tax Period
    /// </returns>
    [
        DataMember(#parmRealizedTaxPeriod),
        SysOperationLabel(literalStr("@Mexico:VatReport_RealizedTaxPeriod")),
        SysOperationDisplayOrder('2')
    ]
    public TaxPeriod parmRealizedTaxPeriod(TaxPeriod _taxPeriod = realizedTaxPeriod)
    {
        realizedTaxPeriod = _taxPeriod;
        return realizedTaxPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter fromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter fromDate
    /// </returns>
    [
        DataMember(#paramFromDate),
        SysOperationLabel(literalstr("@SYS24050")),
        SysOperationHelpText(literalstr("@SYS315362")),
        SysOperationDisplayOrder('3')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter toDate
    /// </returns>
    [DataMember(#paramToDate)]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter reportType.
    /// </summary>
    /// <param name="_reportType">
    /// The new value of the datacontract parameter reportType; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter reportType
    /// </returns>
    [
        DataMember(#paramDIOTReportType),
        SysOperationLabel(literalstr("@SYS314910")),
        SysOperationHelpText(literalstr("@SYS314911")),
        SysOperationDisplayOrder('4')
    ]
    public DIOTReportType_MX parmReportType(DIOTReportType_MX _reportType = reportType)
    {
        reportType = _reportType;
        return reportType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter show.
    /// </summary>
    /// <param name="_show">
    /// The new value of the datacontract parameter show; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter show
    /// </returns>
    [
        DataMember(#paramShow),
        SysOperationLabel(literalstr("@SYS71862")),
        SysOperationHelpText(literalstr("@SYS4002958")),
        SysOperationDisplayOrder('5')
    ]
    public TaxVatReportOption_MX parmShow(TaxVatReportOption_MX _show = show)
    {
        show = _show;
        return show;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGenerateFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter generateFile.
    /// </summary>
    /// <param name="_generateFile">
    /// The new value of the datacontract parameter generateFile; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter generateFile
    /// </returns>
    [
        DataMember(#paramGenerateFile),
        SysOperationLabel(literalstr("@SYS100854")),
        SysOperationHelpText(literalstr("@SYS315370")),
        SysOperationDisplayOrder('6')
    ]
    public NoYes parmGenerateFile(NoYes _generateFile = generateFile)
    {
        generateFile = _generateFile;
        return generateFile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPercentageGlobalVendors</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter percentageGlobalVendors.
    /// </summary>
    /// <param name="_percentageGlobalVendors">
    /// The new value of the datacontract parameter percentageGlobalVendors; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter percentageGlobalVendors
    /// </returns>
    [
        DataMember(#parmpercentageGlobalVendors),
        SysOperationLabel(literalstr("@SYS314920")),
        SysOperationHelpText(literalstr("@SYS314921")),
        SysOperationDisplayOrder('7')
    ]
    public RealBase parmPercentageGlobalVendors(RealBase _percentageGlobalVendors = percentageGlobalVendors)
    {
        percentageGlobalVendors = _percentageGlobalVendors;
        return percentageGlobalVendors;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpperlimit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter upperlimit.
    /// </summary>
    /// <param name="_upperlimit">
    /// The new value of the datacontract parameter upperlimit; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter upperlimit
    /// </returns>
    [
        DataMember(#parmUpperlimit),
        SysOperationLabel(literalstr("@SYS21886")),
        SysOperationHelpText(literalstr("@SYS314922")),
        SysOperationDisplayOrder('8')
    ]
    public Amount parmUpperlimit(Amount _upperlimit = upperlimit)
    {
        upperlimit = _upperlimit;
        return upperlimit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAbsValueInGeneratedFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Print absolute value.
    /// </summary>
    /// <param name="_absValueInGeneratedFile">
    /// The new value of the datacontract parameter Print absolute value; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Print absolute value
    /// </returns>
    [
        DataMember(identifierStr(absValueInGeneratedFile)),
        SysOperationLabel(literalStr("@Mexico:DIOTPrintAbsoluteValue")),
        SysOperationHelpText(literalstr("@Mexico:DIOTPrintAbsoluteValueHelpText")),
        SysOperationDisplayOrder('10')
    ]
    public NoYes parmAbsValueInGeneratedFile(NoYes _absValueInGeneratedFile = absValueInGeneratedFile)
    {
        absValueInGeneratedFile = _absValueInGeneratedFile;
        return absValueInGeneratedFile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    [SysObsolete('This method has been deprecated.', false, 15\10\2023)]
    public boolean  unpack(container  _packedClass)
    {
        boolean ret;
        Integer version = conpeek(_packedClass, 1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #currentList] = _packedClass;
                ret = true;
                break;

            case 1:
                _packedClass += DIOTAllOpenSettled_MX::All;
                [version, #currentList] = _packedClass;
                ret = true;
                break;

            default:
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the  report parameters.
    /// </summary>
    /// <returns>
    ///    true if the report parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret= true;

        if (fromDate == dateNull())
        {
            ret = checkFailed("@SYS315366");
        }

        if ((show == TaxVatReportOption_MX::Unrealized || show == TaxVatReportOption_MX::Both) && unrealizedTaxPeriod == '')
        {
            ret = checkFailed("@Mexico:VatReport_UnrealizedTaxPeriod_Mandatory");
        }

        if ((show == TaxVatReportOption_MX::Realized || show == TaxVatReportOption_MX::Both) && realizedTaxPeriod == '')
        {
            ret = checkFailed("@Mexico:VatReport_RealizedTaxPeriod_Mandatory");
        }

        if (unrealizedTaxPeriod && realizedTaxPeriod && show == TaxVatReportOption_MX::Both)
        {
            var realizedTaxReportPeriod = TaxReportPeriod::find(realizedTaxPeriod, fromDate);
            var unrealizedTaxReportPeriod = TaxReportPeriod::find(unrealizedTaxPeriod, fromDate);

            if ((realizedTaxReportPeriod.FromDate != unrealizedTaxReportPeriod.FromDate)
                    || (realizedTaxReportPeriod.ToDate != unrealizedTaxReportPeriod.ToDate))
            {
                ret = checkFailed("@Mexico:VatReport_MustHaveSameDateInterval");
            }
        }

        if (upperlimit == 0.00)
        {
            ret = checkFailed("@SYS322168");
        }

        if (percentageGlobalVendors < 0)
        {
            ret = checkFailed("@SYS328635");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>