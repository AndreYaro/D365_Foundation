<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashRegisterWebResponse_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CashRegisterWebResponse_W</c> generates web response 
/// by initialising the required parameters.
/// </summary>
public class CashRegisterWebResponse_W
{
    int httpStatus;
    str data;
    str contentType;
    str contentEncoding;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a new object for web requests.
    /// </summary>
    /// <param name="_httpStatus">
    /// The value of <c>httpStatus</c> parameter.
    /// </param>
    /// <param name="_data">
    /// String value for data.
    /// </param>
    /// <param name="_contentType">
    /// String value for type of content.
    /// </param>
    public void new(int _httpStatus, str _data = '', str _contentType = '')
    {
        httpStatus = _httpStatus;
        data = _data;
        [contentType, contentEncoding] = CashRegisterWebResponse_W::parseContentType(_contentType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContentEncoding</Name>
				<Source><![CDATA[
    public str parmContentEncoding(str _contentEncoding = contentEncoding)
    {
        contentEncoding = _contentEncoding;
        return contentEncoding;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContentType</Name>
				<Source><![CDATA[
    public str parmContentType(str _contentType = contentType)
    {
        contentType = _contentType;
        return contentType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmData</Name>
				<Source><![CDATA[
    public str parmData(str _data = data)
    {
        data = _data;
        return data;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHttpstatus</Name>
				<Source><![CDATA[
    public int parmHttpstatus(int _httpStatus = httpStatus)
    {
        httpStatus = _httpStatus;
        return httpStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RequestSucceeded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checkes that the request succeeded and that the requested information is in the response.
    /// </summary>
    /// <returns>
    /// Returns true if the HttpStatus is OK; otherwise, false.
    /// </returns>
    public boolean RequestSucceeded()
    {
        return this.parmHttpStatus() == enum2int(System.Net.HttpStatusCode::OK);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseContentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the type of content in the response generated.
    /// </summary>
    /// <param name="_rawContentType">
    /// String value for raw content type.
    /// </param>
    /// <returns>
    /// Container holding string values for content type and content encodeing.
    /// </returns>
    public static container parseContentType(str _rawContentType)
    {
        const str separator = ';';

        int rawContentTypeLen = strLen(_rawContentType);

        str contentType;
        str contentEncoding;

        int separatorIndex = strScan(_rawContentType, separator, 1, rawContentTypeLen);
        if (separatorIndex > 0)
        {
            contentType = subStr(_rawContentType, 1, separatorIndex - 1);
            separatorIndex++;
            if (separatorIndex <= rawContentTypeLen)
            {
                contentEncoding = subStr(_rawContentType, separatorIndex, rawContentTypeLen - separatorIndex + 1);
            }
        }
        else
        {
            contentType = _rawContentType;
        }

        return [contentType, contentEncoding];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>