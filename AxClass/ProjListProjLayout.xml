<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjListProjLayout</Name>
	<SourceCode>
		<Declaration><![CDATA[
// This class sets up the dialogs for ProjListProjTable and ProjListCustTable reports

public class ProjListProjLayout implements sysPackable
{
    DialogField          dialogProjTM,
                         dialogProjFixedPrice,
                         dialogProjInvestment,
                         dialogProjInternal,
                         dialogProjTime,
                         dialogProjActive,
                         dialogProjFinished;

    ProjOptionTM         projTM;
    ProjOptionFixedPrice projFixedPrice;
    ProjOptionInvestment projInvestment;
    ProjOptionInternal   projInternal;
    ProjOptionTime       projTime;

    boolean              projActive;
    boolean              projFinished;

    #define.CurrentVersion(1)

    #localmacro.CurrentList
        projTM,
        projFixedPrice,
        projInvestment,
        projInternal,
        projTime,
        projActive,
        projFinished
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    Object dialog(Object _dialog)
    {
        DialogRunbase dialog = _dialog;

        dialog.addGroup("@SYS78367");

        dialogProjTM         = dialog.addFieldValue(extendedTypeStr(ProjOptionTM),         projTM,           "@SYS53874", "@SYS78362");
        dialogProjFixedPrice = dialog.addFieldValue(extendedTypeStr(ProjOptionFixedPrice), projFixedPrice,   "@SYS3237",  "@SYS78361");
        dialogProjInvestment = dialog.addFieldValue(extendedTypeStr(ProjOptionInvestment), projInvestment,   "@SYS78353", "@SYS78364");
        dialogProjInternal   = dialog.addFieldValue(extendedTypeStr(ProjOptionInternal),   projInternal,     "@SYS78366", "@SYS78363");
        dialogProjTime       = dialog.addFieldValue(extendedTypeStr(ProjOptionTime),       projTime,         "@SYS8827",  "@SYS78365");

        dialog.addGroup("@SYS7403");

        dialogProjActive   = dialog.addFieldValue(enumStr(NoYes), projActive,   "@SYS98957", "@SYS98958");
        dialogProjFinished = dialog.addFieldValue(enumStr(NoYes), projFinished, "@SYS74816",  "@SYS98959");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        projTM          = dialogProjTM.value();
        projFixedPrice  = dialogProjFixedPrice.value();
        projInvestment  = dialogProjInvestment.value();
        projInternal    = dialogProjInternal.value();
        projTime        = dialogProjTime.value();
        projActive      = dialogProjActive.value();
        projFinished    = dialogProjFinished.value();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjActive</Name>
				<Source><![CDATA[
    public boolean parmProjActive(boolean _projActive = projActive)
    {
        projActive = _projActive;

        return projActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjFinished</Name>
				<Source><![CDATA[
    public boolean parmProjFinished(boolean _projFinished = projFinished)
    {
        projFinished = _projFinished;

        return projFinished;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjFixedPrice</Name>
				<Source><![CDATA[
    public ProjOptionFixedPrice parmProjFixedPrice(ProjOptionFixedPrice _projFixedPrice = projFixedPrice)
    {
        projFixedPrice = _projFixedPrice;

        return projFixedPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjInternal</Name>
				<Source><![CDATA[
    public ProjOptionInternal parmProjInternal(ProjOptionInternal _projInternal = projInternal)
    {
        projInternal = _projInternal;

        return projInternal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjInvestment</Name>
				<Source><![CDATA[
    public ProjOptionInvestment parmProjInvestment(ProjOptionInvestment _projInvestment = projInvestment)
    {
        projInvestment = _projInvestment;

        return projInvestment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTime</Name>
				<Source><![CDATA[
    public ProjOptionTime parmProjTime(ProjOptionTime _projTime = projTime)
    {
        projTime = _projTime;

        return projTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTM</Name>
				<Source><![CDATA[
    public ProjOptionTM parmProjTM(ProjOptionTM _projTM = projTM)
    {
        projTM = _projTM;

        return projTM;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean ret;
        Integer version =   RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                ret = true;
                break;
            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    boolean validate(Object _calledFrom)
    {
        boolean ret;

        ret = true;

        // Check if project type has been selected
        if (!ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled() &&
            !(projTM || projFixedPrice || projInvestment || projInternal || projTime))
        {
            ret = checkFailed("@SYS91026");
        }

        // Check if project status has been selected
        if (!(projActive || projFinished))
        {
            ret = checkFailed("@SYS98960");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjListProjLayout construct()
    {
        return new ProjListProjLayout();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>