<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqTraceLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class used for logging master planning tracing information to Crimson and/or the log table.
/// </summary>
class ReqTraceLogger
{
    ReqTraceLogContext      context;

    ReqTraceLoggerInterface reqTraceTableLogger;
    boolean                 logToTable;

    ReqTraceLoggerInterface reqTraceCrimsonLogger;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loggingEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if logging is enabled.
    /// </summary>
    /// <returns>
    /// true if logging is enabled; otherwise, false.
    /// </returns>
    public boolean loggingEnabled()
    {
        return logToTable || reqTraceCrimsonLogger.loggingEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContext</Name>
				<Source><![CDATA[
        public ReqTraceLogContext parmContext(ReqTraceLogContext _context = context)
    {
        context = _context;
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLogToTable</Name>
				<Source><![CDATA[
        public boolean parmLogToTable(boolean _logToTable = logToTable)
    {
        logToTable = _logToTable;
        return logToTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqTraceCrimsonLogger</Name>
				<Source><![CDATA[
        public ReqTraceLoggerInterface parmReqTraceCrimsonLogger(ReqTraceLoggerInterface _reqTraceCrimsonLogger = reqTraceCrimsonLogger)
    {
        reqTraceCrimsonLogger = _reqTraceCrimsonLogger;
        return reqTraceCrimsonLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqTraceTableLogger</Name>
				<Source><![CDATA[
        public ReqTraceLoggerInterface parmReqTraceTableLogger(ReqTraceLoggerInterface _reqTraceTableLogger = reqTraceTableLogger)
    {
        reqTraceTableLogger = _reqTraceTableLogger;
        return reqTraceTableLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeLog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logs a master planning trace message.
    /// </summary>
    /// <param name="_message">
    /// The trace message to log.
    /// </param>
    public void writeLog(ReqTraceLogMessage _message)
    {
        // Ensure that the message will be written with a new sequence number
        context.increaseSequence();

        if (logToTable)
        {
            reqTraceTableLogger.writeLog(context, _message);
        }

        reqTraceCrimsonLogger.writeLog(context, _message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>ReqTraceLogger</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>ReqTraceLogger</c> class.
    /// </returns>
    public static ReqTraceLogger construct()
    {
        ReqTraceLogger reqTraceLogger = new ReqTraceLogger();

        reqTraceLogger.parmContext(ReqTraceLogContext::construct());
        reqTraceLogger.parmLogToTable(false);

        return reqTraceLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLoggers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>ReqTraceLogger</c> class.
    /// </summary>
    /// <param name="_reqTraceTableLogger">
    ///    The table logger to use.
    /// </param>
    /// <param name="_reqTraceCrimsonLogger">
    ///    The Windows Event Log logger to use.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>ReqTraceLogger</c> class.
    /// </returns>
    public static ReqTraceLogger newLoggers(ReqTraceLoggerInterface _reqTraceTableLogger, ReqTraceLoggerInterface _reqTraceCrimsonLogger)
    {
        ReqTraceLogger reqTraceLogger = ReqTraceLogger::construct();

        reqTraceLogger.parmReqTraceTableLogger(_reqTraceTableLogger);
        reqTraceLogger.parmReqTraceCrimsonLogger(_reqTraceCrimsonLogger);

        return reqTraceLogger;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>