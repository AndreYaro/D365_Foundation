<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmWorker_AppSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>HcmWorker_AppSuite_Extension</c> is an extension of the <c>HcmWorker</c> table
/// and contains methods and event subscribers for the table.
/// </summary>
[ExtensionOf(tableStr(HcmWorker))]
public final class HcmWorker_AppSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>workerCurrentPerformanceRating</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the latest active performance rating for this worker.
    /// </summary>
    /// <returns>Latest active HRMCompPerfRatingId for this worker</returns>
    public display HRMCompPerfRatingId workerCurrentPerformanceRating()
    {      
        HRMCompPerfPlanEmpl hrmCompPerfPlanEmpl;
        date companyToday = DateTimeUtil::getToday(DateTimeUtil::getCompanyTimeZone());

        select firstonly CompPerfRatingId from hrmCompPerfPlanEmpl
            order by ValidFrom desc
            where hrmCompPerfPlanEmpl.Worker == this.RecId
               && hrmCompPerfPlanEmpl.ValidFrom <= companyToday
               && hrmCompPerfPlanEmpl.ValidTo >= companyToday;

        return hrmCompPerfPlanEmpl.CompPerfRatingId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDriverIdentification_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns identification number of the given type associated with the worker.
    /// </summary>
    /// <param name = "_identificationType">Identification type.</param>
    /// <returns>Identification number.</returns>
    [Hookable(false)]
    public HCMIdentificationNumber getDriverIdentification_MX(IdentificationType_MX _identificationType)
    {
        HcmPersonIdentificationNumber identification;
        HcmIdentificationType identificationType;

        select firstonly IdentificationNumber from identification
            where identification.Person == this.Person
            exists join identificationType
                where identificationType.IdentificationType_MX == _identificationType
                    && identificationType.RecId == identification.IdentificationType;

        return identification.IdentificationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret = next validateDelete();

        if (ret)
        {
            if (PurchReqTable::existActiveByOriginator(this.RecId) || PurchReqLine::existActiveByRequisitioner(this.RecId))
            {
                ret = checkFailed("@SCM:EmployeeCannotBeDeletedOpenPurchaseRequisitions");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>