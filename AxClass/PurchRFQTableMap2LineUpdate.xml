<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQTableMap2LineUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PurchRFQTableMap2LineUpdate</c> class provides base functionality to update Request for
///    Quote (RFQ) lines from RFQ headers.
/// </summary>
abstract class PurchRFQTableMap2LineUpdate
{
    PurchRFQTableMap    purchRFQTableMap;
    List                purchRFQTableMap2LineUpdateFields;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAxLineObject</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an <c>AxBC</c> object for a line record.
    /// </summary>
    /// <param name="_axTable">
    ///    An <c>AxBC</c> object for a header table.
    /// </param>
    /// <param name="_lineMap">
    ///    The line record for which the <c>AxBC</c> object should be created.
    /// </param>
    /// <returns>
    ///    The <c>AxBC</c> object for the line record.
    /// </returns>
    /// <remarks>
    ///    This method should be overridden in a derived classes.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The method is not overridden.
    /// </exception>
    AxInternalBase getAxLineObject(AxInternalBase _axTable, PurchRFQLineMap _lineMap)
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAxTableObject</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Create an <c>AxBC</c> object for a header record.
    /// </summary>
    /// <returns>
    ///    The <c>AxBC</c> object for a header record
    /// </returns>
    /// <remarks>
    ///    This method should be overridden in derived classes.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The method is not overridden.
    /// </exception>
    AxInternalBase getAxTableObject()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFieldIdFromMappedTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Converts a field ID from a <c>PurchRFQTableMap</c> map to the field ID of a mapped physical table.
    /// </summary>
    /// <param name="_mapFieldId">
    ///    A <c>PurchRFQTableMap</c> field ID.
    /// </param>
    /// <returns>
    ///    The mapped physical table filed ID.
    /// </returns>
    /// <remarks>
    ///    The mapped physical tables are the <c>PurchRFQCaseTable</c>, <c>PurchRFQTable</c>, and
    ///    <c>PurchRFQReplyTable</c> tables.This method should be overridden in a derived classes.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The method is not overridden.
    /// </exception>
    fieldId getFieldIdFromMappedTable(fieldId _mapFieldId)
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineTableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a line table ID.
    /// </summary>
    /// <returns>
    ///    A table ID.
    /// </returns>
    /// <remarks>
    ///    This method should be overridden in derived classes.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The method is not overridden.
    /// </exception>
    TableId lineTableId()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs a new instance of the <c>PurchRFQTableMap2LineUpdate</c> class.
    /// </summary>
    /// <param name="_purchRFQTableMap2LineUpdatePrompt">
    ///    The list of fields update.
    /// </param>
    protected void new(PurchRFQTableMap2LineUpdatePrompt _purchRFQTableMap2LineUpdatePrompt)
    {
        container   packedList = _purchRFQTableMap2LineUpdatePrompt.packedPurchRFQTableMap2LineUpdateFields();
        purchRFQTableMap                  = _purchRFQTableMap2LineUpdatePrompt.purchRFQTableMap();
        if (packedList)
            purchRFQTableMap2LineUpdateFields = List::create(packedList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRunLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a query that selects the line records that are linked to the current header record.
    /// </summary>
    /// <param name="_update">
    ///    A <c>NoYes</c> enumeration value that specifies whether the record should be selected for update;
    ///    optional.
    /// </param>
    /// <returns>
    ///    A query that selects line records.
    /// </returns>
    /// <remarks>
    ///    This method should be overridden in a derived classes.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The method is not overridden.
    /// </exception>
    QueryRun queryRunLine(boolean _update = false)
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs through the all modified header fields and updates corresponding line fields.
    /// </summary>
    public void update()
    {
        QueryRun                    queryRun;
        ListEnumerator              purchRFQTableMap2LineUpdateFieldsEnumerator;
        PurchRFQTableMap2LineField  purchRFQTableMap2LineField;
        PurchRFQLineMap             purchRFQLineMap;
        AxInternalBase              axTable;
        AxInternalBase              axLine;

        ttsbegin;

        axTable = this.getAxTableObject();

        if (purchRFQTableMap2LineUpdateFields)
        {
            purchRFQTableMap2LineUpdateFieldsEnumerator = purchRFQTableMap2LineUpdateFields.getEnumerator();

            while (purchRFQTableMap2LineUpdateFieldsEnumerator.moveNext())
            {
                purchRFQTableMap2LineField = purchRFQTableMap2LineUpdateFieldsEnumerator.current();

                if (purchRFQTableMap2LineField.updatePurchRFQLines())
                {
                    if (purchRFQTableMap2LineField.fieldId() == fieldnum(PurchRFQTableMap, InventLocationId))
                    {
                        axTable.setFieldAsModified(this.getFieldIdFromMappedTable(fieldnum(PurchRFQTableMap, InventSiteId)));
                    }
                    axTable.setFieldAsModified(this.getFieldIdFromMappedTable(purchRFQTableMap2LineField.fieldId()));
                }
            }
        }

        queryRun = this.queryRunLine(true);

        while (queryRun.next())
        {
            if (queryRun.changed(this.lineTableId()))
            {
                purchRFQLineMap = queryRun.get(this.lineTableId());
                if (purchRFQLineMap)
                {
                    axLine = this.getAxLineObject(axTable, purchRFQLineMap);
                    axLine.save();
                }
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs a new instance of one of either the <c>PurchRFQCaseTable2LineUpdate</c>,
    ///    <c>PurchRFQTable2LineUpdate</c>, or <c>PurchRFQReplyTable2LineUpdate</c> subclasses.
    /// </summary>
    /// <param name="_purchRFQTableMap2LineUpdatePrompt">
    ///    An instance of the <c>PurchRFQTableMap</c> map. The appropriate subclass will be used based on the
    ///    table ID.
    /// </param>
    /// <returns>
    ///    An instance of one of the subclasses.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    There is no class for the specified table.
    /// </exception>
    static PurchRFQTableMap2LineUpdate create(PurchRFQTableMap2LineUpdatePrompt _purchRFQTableMap2LineUpdatePrompt)
    {
        PurchRFQTableMap tableMap = _purchRFQTableMap2LineUpdatePrompt.purchRFQTableMap();

        switch (tableMap.TableId)
        {
            case tablenum(PurchRFQCaseTable)    : return new PurchRFQCaseTable2LineUpdate(_purchRFQTableMap2LineUpdatePrompt);
            case tablenum(PurchRFQTable)        : return new PurchRFQTable2LineUpdate(_purchRFQTableMap2LineUpdatePrompt);
            case tablenum(PurchRFQReplyTable)   : return new PurchRFQReplyTable2LineUpdate(_purchRFQTableMap2LineUpdatePrompt);
        }

        throw error(strfmt("@SYS19306",funcname()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>