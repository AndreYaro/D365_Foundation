<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPurchSummaryModel_Order</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesPurchSummaryModel_Order extends SalesPurchSummaryModel
{
    Num prevorderId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkUpdateAllowed</Name>
				<Source><![CDATA[
    boolean checkUpdateAllowed()
    {
        Common          parmTable;
        container       differenceMandatoryFieldIds;
        container       differenceOptionalFieldIds;
        str             fieldIdNames;
        int             i;
        fieldId         fieldId;
        boolean         summaryTableInQuery = false;
        boolean         updateAllowed = true;
        Common summaryOrderTable = orderSummary.summaryOrderTable();
        if (!summaryOrderTable)
            return checkFailed("@SYS25707");

        container selectedFieldIdList = orderSummary.orderSummaryFields().selectedFieldIdList();

        QueryRun queryRun = this.queryBuild();
        while (queryRun.next())
        {
            if (queryRun.changed(orderSummary.tableNumParmTable()))
                parmTable = queryRun.get(orderSummary.tableNumParmTable());

            if (!parmTable)
                continue;

            Common orderTable = orderSummary.orderTable(parmTable);

            if (orderSummary.isSummaryTableInQuery(orderTable, summaryOrderTable))
                summaryTableInQuery = true;

            for (i=1;i<=conlen(selectedFieldIdList);i++)
            {
                fieldId = conpeek(selectedFieldIdList,i);
                if (!orderSummary.areFieldsEqual(orderTable, summaryOrderTable, fieldId))
                {
                    if (orderSummary.isSummaryFieldMandatory(fieldId))
                    {
                        if (!confind(differenceMandatoryFieldIds, fieldId))
                            differenceMandatoryFieldIds += fieldId;
                    }
                    else
                    {
                        switch (orderSummary.summaryErrorTolerance())
                        {
                            case ErrorTolerance::Warning    :   if (!confind(differenceOptionalFieldIds, fieldId))
                                                                    differenceOptionalFieldIds += fieldId;
                                                                break;
                            case ErrorTolerance::Error      :   if (!confind(differenceMandatoryFieldIds, fieldId))
                                                                    differenceMandatoryFieldIds += fieldId;
                                                                break;
                        }
                    }
                }
            }
        }

        if (!summaryTableInQuery)
            return checkFailed(strfmt("@SYS15067", orderSummary.orderId(summaryOrderTable)));

        if (conlen(differenceMandatoryFieldIds))
        {
            for (i=1;i<=conlen(differenceMandatoryFieldIds);i++)
            {
                fieldId = conpeek(differenceMandatoryFieldIds,i);
                if (fieldIdNames)
                    fieldIdNames += ', ';

                fieldIdNames += fieldid2pname(orderSummary.tableNumOrderTable(), fieldId);
            }

            return checkFailed(strfmt("@SYS59153",fieldIdNames));
        }

        if (conlen(differenceOptionalFieldIds))
        {
            for (i=1;i<=conlen(differenceOptionalFieldIds);i++)
            {
                fieldId = conpeek(differenceOptionalFieldIds,i);
                if (fieldIdNames)
                    fieldIdNames += ', ';

                fieldIdNames += fieldid2pname(orderSummary.tableNumOrderTable(), fieldId);
            }

            return (Box::yesNo(strfmt("@SYS59155",fieldIdNames),DialogButton::No)== DialogButton::Yes);
        }

        return updateAllowed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewJournal</Name>
				<Source><![CDATA[
    boolean createNewJournal(Common _orderTable)
    {
        if (orderSummary.isThisSumTable(_orderTable) && prevorderId != orderSummary.orderId(_orderTable))
        {
            prevorderId = orderSummary.orderId(_orderTable);
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
