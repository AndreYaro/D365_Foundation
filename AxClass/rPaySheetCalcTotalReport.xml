<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPaySheetCalcTotalReport</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rPaySheetCalcTotalReport extends RunBaseBatch implements BatchRetryable
{
    RPaySheetTable  rPaySheetTable;
    DialogField     dialogPayPeriod;
    ReportPeriod_RU rPayPeriod;

    QueryRun        queryRun;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase   dialog = super();

        dialog.addGroup("@SYS2163");
        dialogPayPeriod = dialog.addField(extendedTypeStr(ReportPeriod_RU));
        dialogPayPeriod.value(rPayPeriod ? rPayPeriod : RPayParameters::payPeriod());

        if (rPayPeriod)
        {
            dialogPayPeriod.allowEdit(false);
        }

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();
        if (ret)
        {
            rPayPeriod = endmth(dialogPayPeriod.value());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    private void initFromArgs(Args args)
    {
        if (args && args.dataset() == tableNum(RPaySheetTable))
        {
            rPaySheetTable = args.record();
            this.rpayPeriod(rPaySheetTable.RecId ? endmth(rPaySheetTable.PayPeriod) : dateNull());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        super();
        this.initQueryRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    private Query initQuery()
    {
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;
        Query                   query;

        query = new Query(queryStr(RPaySheetTotalReport));

        queryBuildDataSource = query.dataSourceTable(tableNum(RPaySheetTable));
        queryBuildRange = findOrCreateRange_W(queryBuildDataSource, fieldNum(RPaySheetTable, PayPeriod));

        if (rPayPeriod)
        {
            queryBuildRange.value(queryValue(rPayPeriod));
        }
        else
        {
            queryBuildRange.value('');
        }

        if (rPaySheetTable)
        {
            findOrCreateRange_W(queryBuildDataSource, fieldNum(RPaySheetTable,PaySheetType), queryValue(rPaySheetTable.PaySheetType));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQueryRun</Name>
				<Source><![CDATA[
    private void initQueryRun()
    {
        queryRun = new QueryRun(this.initQuery());
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyQuery</Name>
				<Source><![CDATA[
    private void modifyQuery()
    {
        findOrCreateRange_W(this.queryRun().query().dataSourceTable(tableNum(RPaySheetTable)), fieldNum(RPaySheetTable, PayPeriod), queryValue(rPayPeriod));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rpayPeriod</Name>
				<Source><![CDATA[
    private ReportPeriod_RU rpayPeriod(ReportPeriod_RU _rPayPeriod = rPayPeriod)
    {
        rPayPeriod = _rPayPeriod;
        return rPayPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        OXMLExcelReport_RPaySheetCalcTotalReport report = new OXMLExcelReport_RPaySheetCalcTotalReport();

        this.modifyQuery();

        report.setQueryRun(this.queryRun());
        report.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDefaultButton</Name>
				<Source><![CDATA[
    public boolean showDefaultButton()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ClassDescription description()
    {
        return "@RUP755";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        RPaySheetCalcTotalReport rPaySheetCalcTotalReport = new RPaySheetCalcTotalReport();

        rPaySheetCalcTotalReport.getLast();
        rPaySheetCalcTotalReport.initFromArgs(args);
        if (rPaySheetCalcTotalReport.prompt())
        {
            rPaySheetCalcTotalReport.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>