<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQPriceDiscAdmCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PurchRFQPriceDiscAdmCreate</c> class is used to create a price discount agreement journal
///    for a purchase requisition record.
/// </summary>
class PurchRFQPriceDiscAdmCreate
{
    PurchRFQTable       purchRFQTable;
    PurchRFQReplyTable  purchRFQReplyTable;
    PriceDiscAdmTable   priceDiscAdmTable;

    LineNum lineNum;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether a price discount agreement journal can be created.
    /// </summary>
    /// <returns>
    ///    true if price discount agreement journal can be created; otherwise, false.
    /// </returns>
    protected boolean check()
    {
        boolean ok = true;
        if (!PurchRFQParameters::find().PriceDiscJournalName)
        {
            ok = checkFailed("@SYS117696");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPriceDiscAdmTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the price discount agreement journal header.
    /// </summary>
    protected void createPriceDiscAdmTable()
    {
        priceDiscAdmTable.initFromPriceDiscAdmName(PriceDiscAdmName::find(PurchRFQParameters::find().PriceDiscJournalName));
        priceDiscAdmTable.Name += strfmt("@SYS117697",purchRFQTable.rfqId);
        priceDiscAdmTable.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPriceDiscAdmTrans</Name>
				<Source><![CDATA[
/// <summary>
    /// Creates the price discount journal lines.
    /// </summary>
    protected void createPriceDiscAdmTrans()
    {
        PurchRFQLine        purchRFQLine;
        PurchRFQReplyLine   purchRFQReplyLine;
        PriceDiscAdmTrans   priceDiscAdmTrans;

        Query query = this.buildPurchRFQReplyLineQuery();
        QueryRun queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            purchRFQLine = queryRun.get(tableNum(PurchRFQLine));
            PurchRFQReplyLine = queryRun.get(tableNum(PurchRFQReplyLine));

            priceDiscAdmTrans.clear();
            this.initPriceDiscAdmTrans(priceDiscAdmTrans, purchRFQLine, purchRFQReplyLine);

            if (purchRFQReplyLine.PurchPrice)
            {
                this.createPriceJournalLine(priceDiscAdmTrans, purchRFQReplyLine);
            }

            if (purchRFQReplyLine.LinePercent || purchRFQReplyLine.LineDisc)
            {
                this.createDiscountJournalLine(priceDiscAdmTrans, purchRFQReplyLine);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    private void initPriceDiscAdmTrans(PriceDiscAdmTrans _priceDiscAdmTrans,
                                         PurchRFQLine      _purchRFQLine,
                                         PurchRFQReplyLine _purchRFQReplyLine)
    {
        InventDim inventDim;

        _priceDiscAdmTrans.JournalNum        = priceDiscAdmTable.JournalNum;
        _priceDiscAdmTrans.LineNum           = this.lineNum();
        _priceDiscAdmTrans.Module            = ModuleInventCustVend::Vend;

        _priceDiscAdmTrans.AccountCode       = PriceDiscPartyCodeType::Table;
        _priceDiscAdmTrans.AccountRelation   = purchRFQTable.VendAccount;
        _priceDiscAdmTrans.ItemCode          = PriceDiscProductCodeType::Table;
        _priceDiscAdmTrans.ItemRelation      = _purchRFQLine.ItemId;

        _priceDiscAdmTrans.FromDate          = _purchRFQReplyLine.ValidFrom;
        _priceDiscAdmTrans.ToDate            = _purchRFQReplyLine.ValidTo;

        _priceDiscAdmTrans.UnitId            = _purchRFQReplyLine.PurchUnit;
        _priceDiscAdmTrans.Currency          = purchRFQReplyTable.CurrencyCode;

        inventDim = this.inventDim(_purchRFQLine.ItemId, _purchRFQLine.InventDimId);
        _priceDiscAdmTrans.InventDimId       = inventDim.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPriceJournalLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the price journal line.
    /// </summary>
    /// <param name = "_priceDiscAdmTrans">
    /// The <c>PriceDiscAdmTrans</c> record to be initialized.
    /// </param>
    /// <param name = "_purchRFQReplyLine">
    /// The <c>PurchRFQReplyLine</c> record to initialize from.
    /// </param>
    protected void initPriceJournalLine(PriceDiscAdmTrans _priceDiscAdmTrans,
                                        PurchRFQReplyLine _purchRFQReplyLine)
    {
        _priceDiscAdmTrans.Amount                = _purchRFQReplyLine.PurchPrice;
        _priceDiscAdmTrans.PriceUnit             = _purchRFQReplyLine.PriceUnit;
        _priceDiscAdmTrans.Relation              = PriceType::PricePurch;
        _priceDiscAdmTrans.QuantityAmountFrom    = _purchRFQReplyLine.PurchQty;
        _priceDiscAdmTrans.Markup                = _purchRFQReplyLine.PurchMarkup;
        _priceDiscAdmTrans.DeliveryTime          = _purchRFQReplyLine.LeadTime;
        _priceDiscAdmTrans.CalendarDays          = _purchRFQReplyLine.CalendarDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPriceJournalLine</Name>
				<Source><![CDATA[
    private void createPriceJournalLine(PriceDiscAdmTrans _priceDiscAdmTrans,
                                        PurchRFQReplyLine _purchRFQReplyLine)
    {
        this.initPriceJournalLine(_priceDiscAdmTrans, _purchRFQReplyLine);
        _priceDiscAdmTrans.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDiscountJournalLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the discount journal line.
    /// </summary>
    /// <param name = "_priceDiscAdmTrans">
    /// The <c>PriceDiscAdmTrans</c> record to be initialized.
    /// </param>
    /// <param name = "_purchRFQReplyLine">
    /// The <c>PurchRFQReplyLine</c> record to initialize from.
    /// </param>
    protected void initDiscountJournalLine(PriceDiscAdmTrans _priceDiscAdmTrans,
                                           PurchRFQReplyLine _purchRFQReplyLine)
    {
        _priceDiscAdmTrans.Relation  = PriceType::LineDiscPurch;
        _priceDiscAdmTrans.PriceUnit = 0;
        _priceDiscAdmTrans.LineNum   = this.lineNum();
        _priceDiscAdmTrans.Amount    = _purchRFQReplyLine.LineDisc;
        _priceDiscAdmTrans.Percent1  = _purchRFQReplyLine.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDiscountJournalLine</Name>
				<Source><![CDATA[
    private void createDiscountJournalLine(PriceDiscAdmTrans _priceDiscAdmTrans,
                                           PurchRFQReplyLine _purchRFQReplyLine)
    {
        this.initDiscountJournalLine(_priceDiscAdmTrans, _purchRFQReplyLine);
        _priceDiscAdmTrans.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildPurchRFQReplyLineQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the <c>Query</c> object for selecting the <c>PurchRFQLine</c> records used to create the price discount journal lines.
    /// </summary>
    /// <returns>
    /// The <c>Query</c> object for selecting the <c>PurchRFQLine</c> records used to create the price discount journal lines.
    /// </returns>
    private Query buildPurchRFQReplyLineQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsPurchRFQLine = query.addDataSource(tableNum(PurchRFQLine));
        this.addPurchRFQLineSelectionFields(qbdsPurchRFQLine);
        this.addPurchRFQLineRanges(qbdsPurchRFQLine);
        
        QueryBuildDataSource qbdsPurchRFQReplyLine = qbdsPurchRFQLine.addDataSource(tableNum(PurchRFQReplyLine));
        qbdsPurchRFQReplyLine.relations(true);
        this.addPurchRFQReplyLineSelectionFields(qbdsPurchRFQReplyLine);
        this.addPurchRFQReplyLineRanges(qbdsPurchRFQReplyLine);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPurchRFQLineSelectionFields</Name>
				<Source><![CDATA[
    private void addPurchRFQLineSelectionFields(QueryBuildDataSource _qbdsPurchRFQLine)
    {
        _qbdsPurchRFQLine.addSelectionField(fieldNum(PurchRFQLine, ItemId));
        _qbdsPurchRFQLine.addSelectionField(fieldNum(PurchRFQLine, InventDimId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPurchRFQLineRanges</Name>
				<Source><![CDATA[
    protected void addPurchRFQLineRanges(QueryBuildDataSource _qbdsPurchRFQLine)
    {
        _qbdsPurchRFQLine.addRange(fieldNum(PurchRFQLine, rfqId)).value(queryValue(purchRFQTable.rfqId));
        _qbdsPurchRFQLine.addRange(fieldNum(PurchRFQLine, LineType)).value(queryValue(PurchRFQLineItemType::Item));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPurchRFQReplyLineSelectionFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specify the selection fields on the <c>PurchRFQReplyLine</c> datasource.
    /// </summary>
    /// <param name = "_qbdsPurchRFQReplyLine">
    /// The <c>QueryBuildDataSource</c> for <c>PurchRFQReplyLine</c> table.
    /// </param>
    protected void addPurchRFQReplyLineSelectionFields(QueryBuildDataSource _qbdsPurchRFQReplyLine)
    {
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, ValidFrom));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, ValidTo));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, PurchUnit));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, PurchPrice));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, PriceUnit));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, PurchQty));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, PurchMarkup));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, LeadTime));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, LinePercent));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, LineDisc));
        _qbdsPurchRFQReplyLine.addSelectionField(fieldNum(PurchRFQReplyLine, CalendarDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPurchRFQReplyLineRanges</Name>
				<Source><![CDATA[
    private void addPurchRFQReplyLineRanges(QueryBuildDataSource _qbdsPurchRFQReplyLine)
    {
        str purchRFQReplyLineRange = strFmt('(%1.%2 != 0) || (%1.%3 != 0) || (%1.%4 != 0)',
                                            _qbdsPurchRFQReplyLine.name(),
                                            fieldStr(PurchRFQReplyLine, PurchPrice),
                                            fieldStr(PurchRFQReplyLine, LinePercent),
                                            fieldStr(PurchRFQReplyLine, LineDisc));
        _qbdsPurchRFQReplyLine.addRange(fieldNum(PurchRFQReplyLine, RecId)).value(purchRFQReplyLineRange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the location ID and site ID from the inventory dimension record if the two fields are not to be included in price search.
    /// </summary>
    /// <param name="_itemId">
    /// The ID of the item.
    /// </param>
    /// <param name="_inventDimId">
    /// The ID of the inventory dimension record.
    /// </param>
    /// <returns>
    /// An inventory dimension record.
    /// </returns>
    protected InventDim inventDim(ItemId        _itemId,
                                  InventDimId   _inventDimId)
    {
        InventDim                   inventDim           = InventDim::find(_inventDimId);
        InventDimGroupSetup         inventDimGroupSetup = InventDimGroupSetup::newItemId(_itemId);
        InventDimParm               inventDimParm;

        inventDimGroupSetup.inventDimParmActivePurchPrice(inventDimParm);
        if (!inventDimParm.InventLocationIdFlag) // warehouse is not marked as price search for purchase
        {
            inventDim.InventLocationId = '';
            if (!inventDimParm.InventSiteIdFlag) // site is not marked as price search for purchase
            {
                inventDim.InventSiteId = '';
            }
        }
        
        if (!inventDimParm.InventStatusFlag) // Inventory Status is not marked as price search for purchase
        {
            inventDim.InventStatusId = '';   
        }

        if (!inventDimParm.WMSLocationIdFlag) // Location is not marked as price search for purchase
        {
            inventDim.wMSLocationId = '';
        }

        if (!inventDimParm.LicensePlateFlag) // LicensePlate is not marked as price search for purchase
        {
            inventDim.LicensePlateId = '';
        }

        inventDim = InventDim::findOrCreate(inventDim);

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Increments the line number.
    /// </summary>
    /// <returns>
    /// The next line number.
    /// </returns>
    protected LineNum lineNum()
    {
        lineNum++;
        return lineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchRFQTable</Name>
				<Source><![CDATA[
    public PurchRFQTable parmPurchRFQTable(PurchRFQTable _purchRFQTable = purchRFQTable)
    {
        purchRFQTable = _purchRFQTable;
        return purchRFQTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a price discount agreement journal.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    ///    The price discount agreement journal can not be created.
    /// </exception>
    public void run()
    {
        purchRFQReplyTable = purchRFQTable.purchRFQReplyTable();

        if (!this.check())
            throw error("@SYS107501");

        ttsbegin;
        this.createPriceDiscAdmTable();
        this.createPriceDiscAdmTrans();
        ttscommit;

        this.runForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Opens the <c>PriceDiscAdmTable</c> form.
    /// </summary>
    protected void runForm()
    {
        Args         args = new Args();
        MenuFunction mf;

        mf = new MenuFunction(menuitemdisplaystr(PriceDiscAdmTable_Purch),MenuItemType::Display);
        args.record(priceDiscAdmTable);
        args.parmEnumType(enumnum(NoYes));
        args.parmEnum(NoYes::No);
        mf.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static PurchRFQPriceDiscAdmCreate construct()
    {
        return new PurchRFQPriceDiscAdmCreate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args _args)
    {
        PurchRFQPriceDiscAdmCreate purchRFQPriceDiscAdmCreate = PurchRFQPriceDiscAdmCreate::construct();
        if (_args.dataset() == tablenum(PurchRFQTable))
        {
            purchRFQPriceDiscAdmCreate.parmPurchRFQTable(_args.record());
        }
        else
        {
            throw error(strfmt("@SYS22828",funcname()));
        }
        purchRFQPriceDiscAdmCreate.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>