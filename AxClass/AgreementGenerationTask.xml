<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementGenerationTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AgreementGenerationTask</c> class is the base class to generate agreements.
/// </summary>
abstract class AgreementGenerationTask
{
    AgreementGenerationStrategy agreementGenerationStrategy;
    Common                      callerRecord;
    #ISOCountryRegionCodes

    boolean intraCompany_RU;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>agreementCreatedInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the info for the created agreement.
    /// </summary>
    protected void agreementCreatedInfo()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an agreement with header and lines.
    /// </summary>
    /// <exception cref="M:Exception::UpdateConflictNotRecovered">
    ///    A update conflict was encountered when creating the agreement and the state could not be recovered.
    /// </exception>
    /// <exception cref="M:Exception::UpdateConflict">
    ///    An update conflict was encountered when creating the agreement.
    /// </exception>
    public void create()
    {
        #OCCRetryCount

        this.initAgreementGenerationStrategy();
        try
        {
            this.setPrefix();

            ttsbegin;

            this.setCustVendAccount();

            this.setCustVendPrefix();

            this.createAgreementHeader();

            this.createAgreementLines();

            this.endCreate();

            ttscommit;

            if (this.showInfo())
            {
                this.agreementCreatedInfo();
            }
        }

        catch (Exception::Deadlock)
        {
            retry;
        }

        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAgreementHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an agreement header.
    /// </summary>
    protected void createAgreementHeader()
    {
        if (agreementGenerationStrategy)
        {
            agreementGenerationStrategy.createAgreementHeader();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAgreementLines</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates the agreement lines for the agreement.
    /// </summary>
    protected void createAgreementLines()
    {
        if (agreementGenerationStrategy)
        {
            agreementGenerationStrategy.createAgreementLines();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>endCreate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs functions after the creation of the agreement.
    /// </summary>
    protected void endCreate()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAgreementGenerationStrategy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initiates an agreement generation strategy object to use to create an agreement.
    /// </summary>
    protected void initAgreementGenerationStrategy()
    {
        if (callerRecord)
        {
            agreementGenerationStrategy = AgreementGenerationStrategy::newCommon(callerRecord);
            // <GEERU>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            {
                agreementGenerationStrategy.parmIntraCompany_RU(intraCompany_RU);
            }
            // </GEERU>
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerRecord</Name>
				<Source><![CDATA[
    public Common parmCallerRecord(Common _callerRecord = callerRecord)
    {
        callerRecord = _callerRecord;

        return callerRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntraCompany_RU</Name>
				<Source><![CDATA[
    public boolean parmIntraCompany_RU(boolean _intracompany = intraCompany_RU)
    {
        intraCompany_RU = _intracompany;
        return intraCompany_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustVendAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the customer or vendor account to use to create the agreement.
    /// </summary>
    protected void setCustVendAccount()
    {
        if (agreementGenerationStrategy)
        {
            agreementGenerationStrategy.setCustVendTable();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustVendPrefix</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the prefix in relation to the customer or vendor that is related to the agreement that is
    ///    being created.
    /// </summary>
    protected void setCustVendPrefix()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPrefix</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the prefix for creating the agreement.
    /// </summary>
    protected void setPrefix()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>showInfo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if info should be shown after the agreement is created.
    /// </summary>
    /// <returns>
    ///    true if info should be shown after the agreement is created; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    In this base class this method always returns true.
    /// </remarks>
    protected boolean showInfo()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        Common                  record;
        AgreementGenerationTask agreementGenerationTask;

        if (!_args)
        {
            throw error("@SYS333209");
        }

        record = _args.record();

        agreementGenerationTask = AgreementGenerationTask::newCommon(record);
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (   _args.menuItemName() == menuitemActionStr(AgreementGenerationTaskSalesToPurch_RU)
                || _args.menuItemName() == menuitemActionStr(AgreementGenerationTaskPurchToSales_RU))
            {
                agreementGenerationTask.parmIntraCompany_RU(true);
            }
        }
        // </GEERU>

        agreementGenerationTask.create();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCommon</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an <c>AgreementGenerationTask</c> class based on the specified <c>Common</c> buffer.
    /// </summary>
    /// <param name="_common">
    ///    The <c>Common</c> buffer from which to construct the <c>AgreementGenerationTask</c> class.
    /// </param>
    /// <returns>
    ///    The constructed <c>AgreementGenerationTask</c> class.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    It is possible to create an <c>AgreementGenerationTask</c> class by using the specified
    ///    <c>Common</c> buffer.
    /// </exception>
    public static AgreementGenerationTask newCommon(Common _common)
    {
        AgreementGenerationTask agreementGenerationTask;

        switch (_common.TableId)
        {
            case tablenum(PurchAgreementHeader):
                agreementGenerationTask = SalesAgreementGenerationTask::construct();
                break;

            case tablenum(SalesAgreementHeader):
                agreementGenerationTask = PurchAgreementGenerationTask::construct();
                break;

            default :
                throw error(strfmt("@SYS19306",funcname()));
        }

        agreementGenerationTask.parmCallerRecord(_common);
        return agreementGenerationTask;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>