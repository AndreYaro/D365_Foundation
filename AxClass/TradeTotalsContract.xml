<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeTotalsContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TradeTotalsContract</c> class will be used as the input data contract class for the <c>displayFieldsServerIL</c> method in the <c>SalesTotals</c> and <c>PurchTotalsForm</c> classes.
/// </summary>
class TradeTotalsContract
implements SysPackable
{
    Common  orderTable;
    int     specQty;  //it can be SalesUpdate, PurchUpdate or PurchRFQUpdate

    #define.CurrentVersion(1)
    #LOCALMACRO.ParmList
        orderTable,
        specQty
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        return [#CurrentVersion,#ParmList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderTable</Name>
				<Source><![CDATA[
        public Common parmOrderTable(Common _orderTable = orderTable)
    {
        orderTable = _orderTable;
        return orderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSpecQty</Name>
				<Source><![CDATA[
        public int parmSpecQty(int _specQty = specQty)
    {
        specQty = _specQty;
        return specQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container  _packedClass)
    {
        Integer  version = conPeek(_packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #ParmList] = _packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static TradeTotalsContract construct()
    {
        return new TradeTotalsContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>