<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgCleanupTermReg_TermReg</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgCleanupTermReg_TermReg</c> class is used to clean up the <c>JmgTermReg</c> table.
/// </summary>
/// <remarks>
///    This class should not be used directly. Instead use the <see cref="M:JmgCleanupTermReg::main" />
///    method to run the class.
/// </remarks>
class JmgCleanupTermReg_TermReg extends JmgCleanupTermReg implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initQueryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>QueryRun</c> object, which is used to fetch the records to clean up.
    /// </summary>
    /// <returns>
    /// A <c>QueryRun</c> object that references the records to clean up.
    /// </returns>
    /// <remarks>
    /// Based on the maximum age field, a query is constructed that returns records from the
    /// <c>JmgTermReg</c> table with a registration date before today minus the maximum age. It returns a
    /// <c>QueryRun</c> object by using a query that contains one data source that can be mapped to the
    /// <c>JmgTermRegArchiveMap</c> map.
    /// </remarks>
    protected QueryRun initQueryRun()
    {
        Query                   q       = new Query();
        QueryBuildDataSource    qbds    =  q.addDataSource(tablenum(JmgTermReg));
        qbds.addRange(fieldnum(JmgTermReg, RegDateTime)).value(queryRange(dateNull(), DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()) - maxAge));
        qbds.update(true);
        qbds    = qbds.addDataSource(tablenum(JmgStampJournalTable));
        qbds.joinMode(JoinMode::ExistsJoin);
        qbds.addLink(fieldnum(JmgTermReg, Worker), fieldnum(JmgStampJournalTable, Worker));
        qbds.addLink(fieldnum(JmgTermReg, ProfileDate), fieldnum(JmgStampJournalTable, ProfileDate));
        qbds.addRange(fieldnum(JmgStampJournalTable, Calculated)).value(queryValue(NoYes::Yes));

        return new QueryRun(q);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS39821";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Export to file option is possible for interactive browser session only; 
    /// </summary>
    /// <returns>False for Export to file option; otherwise true</returns>
    protected boolean canRunInNewSession()
    {
        return cleanupMode == JmgTermRegCleanupMode::ToFile ? false : true;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>