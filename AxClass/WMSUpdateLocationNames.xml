<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsUpdateLocationNames</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WmsUpdateLocationNames extends RunBaseBatch implements BatchRetryable
{
    QueryRun        queryRun;
    NoYes           updateLocationName;
    NoYes           updateCheckText;

    DialogField     dialogUpdateLocationName;
    DialogField     dialogUpdateCheckText;

    #DEFINE.CurrentVersion(1)

    #LOCALMACRO.CurrentList
        UpdateLocationName,
        UpdateCheckText
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatchJournal</Name>
				<Source><![CDATA[
    public boolean canGoBatchJournal()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase   dialog = super();

        dialogUpdateLocationName    = dialog.addFieldValue(enumStr(NoYes), updateLocationName, "@SYS50210", "@SYS50210");
        dialogUpdateCheckText       = dialog.addFieldValue(enumStr(NoYes), updateCheckText, "@SYS50211", "@SYS50211");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        updateLocationName  = dialogUpdateLocationName.value();
        updateCheckText     = dialogUpdateCheckText.value();

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        Query   query = new Query(queryStr(WMSLocation));

        super();
        query.dataSourceNo(1).update(true);
        queryRun = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList, queryRun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        WMSLocation     wmsLocation;
        NoYes           changeName;

        ttsbegin;
        while (queryRun.next())
        {
            wmsLocation = queryRun.getNo(1);
            if (!wmsLocation.ManualName || updateLocationName)
            {
                changeName = NoYes::Yes;
            }
            else
            {
                changeName = NoYes::No;
            }

            if (changeName || updateCheckText)
            {
                wmsLocation.updateLocationNames(changeName, updateCheckText);
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Instructs the batch framework that this class can run impersonating the user who requested the task.
    /// </summary>
    /// <returns>
    ///    true always.
    /// </returns>
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer     version     = conPeek(packedClass,1);
        container   packedQuery;

        switch (version)
        {
            case #CurrentVersion :
                [version,#CurrentList, packedQuery] = packedClass;
                if (packedQuery)
                    queryRun = new QueryRun(packedQuery);
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WMSUpdateLocationNames construct()
    {
        return new WMSUpdateLocationNames();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS50209";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        WMSUpdateLocationNames  wmsUpdateLocationNames = WMSUpdateLocationNames::construct();

        if (!wmsUpdateLocationNames.prompt())
        {
            return;
        }

        wmsUpdateLocationNames.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>