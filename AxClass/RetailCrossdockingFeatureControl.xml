<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCrossdockingFeatureControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailCrossDockingFeatureControl</c> class is used to control feature flags.
/// </summary>
internal class RetailCrossDockingFeatureControl
{
    private const str crossDockingUpdateTransferOrderLegacyBehaviourFlightingKey = 'RETAIL_CROSS_DOCKING_SKIP_TRANSFER_ORDER_UPDATE';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isLegacyTransferOrderUpdateSkipEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Feature flag controlling the cross docking order skip to update transfer order or not.
    /// </summary>
    /// <returns>
    /// true if RETAIL_CROSS_DOCKING_SKIP_TRANSFER_ORDER_UPDATE is enabled or not found; otherwise, false.
    /// </returns>
    internal static boolean isLegacyTransferOrderUpdateSkipEnabled()
    {
        return RetailFeatureControl::isFeatureFlightKeySet(crossDockingUpdateTransferOrderLegacyBehaviourFlightingKey, funcName());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>