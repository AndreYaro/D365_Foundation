<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tax1099ReportUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>Tax1099ReportUIBuilder</c> class is the UI builder class for the <c>Tax1099Report</c> report.
/// </summary>
public class Tax1099ReportUIBuilder extends SrsReportDataContractUIBuilder
{
    DialogField box1ASum;
    DialogField tax1099Type;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds all the fields in parameter data contract to the parameter dialog.
    /// </summary>
    public void build()
    {
        super();

        Tax1099ReportContract contract = this.dataContractObject() as Tax1099ReportContract;

        box1ASum = this.bindInfo().getDialogField(contract, methodStr(Tax1099ReportContract, parmBox1ASum));

        tax1099Type = this.bindInfo().getDialogField(contract, methodStr(Tax1099ReportContract, parmTax1099Type));

        this.updateControlForBox1A();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Registers the method override in order to capture dialog events.
    /// </summary>
    public void postRun()
    {
        super();

        dialog.dialogForm().formRun().controlMethodOverload(false);

        tax1099Type.registerOverrideMethod(methodStr(FormStringControl, modified), methodStr(Tax1099ReportUIBuilder, tax1099TypeModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tax1099TypeModified</Name>
				<Source><![CDATA[
    private boolean tax1099TypeModified(FormComboBoxControl _control)
    {
        boolean ret = _control.modified();

        if (ret)
        {
            this.updateControlForBox1A();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControlForBox1A</Name>
				<Source><![CDATA[
    private void updateControlForBox1A()
    {
        box1ASum.value(true);
        box1ASum.enabled(true);

        if (tax1099Type.value() != Tax1099Type::F1099DIV)
        {
            box1ASum.value(false);
            box1ASum.enabled(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>