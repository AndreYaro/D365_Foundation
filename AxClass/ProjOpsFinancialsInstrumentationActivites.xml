<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjOpsFinancialsInstrumentationActivites</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class ProjOpsFinancialsInstrumentationActivites extends ProjOpsInstrumentationBaseActitivies
{
    private const str ProjOpsFinancialsPrefix = 'ProjOpsFinancials.';

    // Activity property constants

    // Unique feature names being instrumented
    public static const str CashAdvances = 'CashAdvances';
    public static const str CashAdvSource = 'CashAdvSource';
    public static const str CashAdvSource_Unknown = 'Unknown';
    public static const str CashAdvSource_Lumpsum = 'Lumpsum';
    public static const str CashAdvSource_Budget = 'BudgetPercentage';
    public static const str ProjAdjustment = 'ProjAdjustment';
    public static const str ProjAdjustmentSplitTrans = 'ProjAdjustmentSplitTrans';
    public static const str ProjDeleteFundingLimitTracking = 'ProjDeleteFundingLimitTracking';
    public static const str DeleteCreateAdjustmentUpdateFundingLimit = 'DeleteCreateAdjustmentUpdateFundingLimit';
    public static const str AdjustmentRecordsBeingPostedSynchronously = 'NumOfAdjustmentRecordsBeingPostedSynchronously';
    public static const str AdjustmentRecordsBeingPostedAsynchronously = 'NumOfAdjustmentRecordsBeingPostedAsynchronously';
    public static const str Action = 'Action';
    public static const str ActionClosingAdjustmentForm = 'Closing Adjustment Form';
    public static const str ActionClearingAdjustmentCache = 'Clearing Adjustment Cache';
    public static const str ActionAdjustingTransaction = 'Adjusting transactions';
    public static const str InvProposalRecId = 'ProposalRecId';
    public static const str InvProposalNonBillingRulesCreation = 'InvoiceProposalNonBillingRulesCreation';
    public static const str InvProposalPerfEnhancementFeature = 'ProjInvoiceProposalPerfEnhancementFeature';
    public static const str InvProposalNumberOfProjects = 'ProjectsNum';
    public static const str InvProposalNumberOfDisplayTransactions = 'DisplayTransNum';
    public static const str InvProposalNumberOfDisplayDeductionTransactions = 'DisplayDeductionTransNum';
    public static const str InvProposalInsertLinesCreateFeeJournal = 'InvProposalInsertLinesCreateFeeJournal';
    public static const str InvProposalInsertLinesRun = 'InvProposalInsertLinesRun';
    public static const str InvProposalTranSummariesRefresh = 'InvProposalTranSummariesRefresh';
    public static const str InvPosting = 'InvoiceProposalPosting';
    public static const str InvPostingProforma = 'IsProforma';
    public static const str InvPostingNumberOfHourTransactions = 'HoursTransNum';
    public static const str InvPostingNumberOfCostTransactions = 'CostTransNum';
    public static const str InvPostingNumberOfItemTransactions = 'ItemTransNum';
    public static const str InvPostingNumberOfRevenueTransactions = 'RevenueTransNum';
    public static const str InvPostingNumberOfOnAccTransactions = 'OnAccountTransNum';
    public static const str InvPostingNumberOfSalesOrderTransactions = 'SalesOrderTransNum';
    public static const str ResProjectResourceBatchDataPopulate = 'ResProjectResourceBatchDataPopulate';
    public static const str ResProjectResourceTotalRecords = 'TotalResProjectResourceRecords';
    public static const str ResProjectResourceTotalResources = 'TotalProjectResources';
    public static const str ResProjectResourceTotalSchedulableResources = 'TotalSchedulableResources';
    public static const str ResCalendarCapacityBatchDataPopulate = 'ResCalendarCapacityBatchDataPopulate';
    public static const str ResCalendarCapacityTotalCalendars = 'TotalCalendars';
    public static const str ResCalendarCapacityTotalRemovedExistingRecords = 'RemovedExistingRecords';
    public static const str ResCalendarCapacityUsePeriodCode = 'UsePeriodCode';
    public static const str ResCalendarCapacityDurationInDays = 'DurationInDays';
    public static const str ResRequestWorkflowCompleted = 'ResRequestWorkflowCompleted';
    public static const str ResRequestWorkflowSubmitForAssignment = 'ResRequestWorkflowSubmitForAssignment';
    public static const str ResRequestWorkflowSubmitForBooking = 'ResRequestWorkflowSubmitForBooking';
    public static const str ResRequestWorkflowRollbackRequest = 'ResRequestWorkflowRollbackRequest';
    public static const str DistributionProcessorPreProcessing = 'DistributionProcessorPreProcessing';
    public static const str DistributionProcessorPostProcessing = 'DistributionProcessorPostProcessing';
    public static const str DistributionProcessorProcessRegularDistributions = 'DistributionProcessorProcessRegularDistributions';
    public static const str BudgetCarryForwardProcessing = 'BudgetCarryForwardProcessing';
    public static const str ProjGetPostedExchRateSalesFromGL = 'ProjGetPostedExchRateSalesFromGL';
    public static const str ProjBudgetAllocationLineCost = 'ProjBudgetAllocationLineCost';
    public static const str ProjBudgetAllocationLineSales = 'ProjBudgetAllocationLineSales';
    public static const str ProjBudgetAllocationLineMissing = 'ProjBudgetAllocationLineMissing';
    public static const str ProjComputeFundingLimitActual = 'ProjComputeFundingLimitActual';
    public static const str ProjProformaInvoiceCleanup = 'ProjProformaInvoiceCleanup';
    public static const str ProjFundingLimitSpentAmountCleanUp = 'ProjFundingLimitSpentAmountCleanUp';
    public static const str ProjFundingLimitSpentAmountDetection = 'ProjFundingLimitSpentAmountDetection';
    public static const str ProjOrphanFundingLimitSourceDocumentLineCleanup = 'ProjOrphanFundingLimitSourceDocumentLineCleanup';
    public static const str ProjOrphanFundingLimitAccountingDistributionCleanup = 'ProjOrphanFundingLimitAccountingDistributionCleanup';
    public static const str ProjFundingLimiSpentAmountValidation = 'ProjFundingLimitSpentAmountValidationService';
    public static const str ProjDefaultDimensionRule = 'ProjDefaultDimensionRule';
    public static const str DimensionSourceFromRule = 'DimensionSourceFromRule';
    public static const str DimensionSourceFromDefault = 'DimensionSourceFromDefault';
    public static const str DimensionPriority = 'DimensionPriority';
    public static const str ContractLineGroupRelation = 'ContractLineGroupRelation';
    public static const str RevenueProfileRelation = 'RevenueProfileRelation';
    public static const str ContractRelation = 'ContractRelation';
    public static const str ProjRelation = 'ProjRelation';
    public static const str DimensionRuleWasFound = 'DimensionRuleWasFound';


    private const str PostTrans = 'PostTrans';
    private const str CreateTrans = 'CreateTrans';
    private const str UpdateTrans = 'UpdateTrans';
    private const str PostTransLedgerNotProject = 'PostTransLedgerNotProject';
    private const str PostTransLedgerRetainage = 'PostTransLedgerRetainage';
    private const str PostTransLedger = 'PostTransLedger';

    internal static const str CreateProjectTrans = 'CreateProjectTrans';
    internal static const str PostProjectJournal = 'PostProjectJournal';
    internal static const str JournalPostingLogMessageFmt = 'Project journal posting. JournalName: %1, JournalId: %2, LineNum: %3, ProjId: %4, TransId: %5, Voucher: %6';
    internal static const str ReversePostedRevenueLine = 'ReversePostedRevenueLineForInvProposal';
    internal static const str ProjProformaInvoiceCleanupLogMessageFmt = 'Cleaning up orphaned Project proforma invoice. InvoiceId: %1';
    internal static const str ProjFundingLimitSpentAmountCleanUpLogMessageFmt = 'Cleaning up LimitSpent amount. FundingLimit: %1, Old amount: %2, New amount: %3';
    internal static const str ProjFundingLimitSpentAmountDetectionLogMessageFmt = 'Detecting inconsistent LimitSpent amounts.';
    internal static const str ProjOrphanFundingLimitSourceDocumentLineCleanupLogMessageFmt = 'Cleaning up orphaned funding limit source document line. FundingLimit: %1, SourceDocumentLine: %2';
    internal static const str ProjOrphanFundingLimitAccountingDistributionCleanupLogMessageFmt = 'Cleaning up orphaned funding limit accounting distribution line. FundingLimit: %1, SourceDocumentLine: %2 AccountingDistribution: %3';
    internal static const str CreateTransProperty = 'CreateTrans';
    internal static const str UpdateTransProperty = 'UpdateTrans';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor for <c>ProjOpsFinancialsInstrumentationActivites</c> object.
    /// </summary>
    /// <param name = "_logger"><c>ProjOpsFinancialsLogger</c> object.</param>
    /// <returns><c>ProjOpsFinancialsInstrumentationActivites</c> instance.</returns>
    [Hookable(false)]
    public static ProjOpsFinancialsInstrumentationActivites construct(ProjOpsFinancialsLogger _logger)
    {
        ProjOpsFinancialsInstrumentationActivites activities = new ProjOpsFinancialsInstrumentationActivites();
        activities.logger = _logger;
        activities.Prefix = ProjOpsFinancialsPrefix;
        return activities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>featureInstrumentationContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds activity context for any feature instrumentation.
    /// </summary>
    /// <param name = "_featureName">Name of the feature being instrumented.</param>
    /// <returns>Instrumentation activity context object</returns>
    [Hookable(false)]
    public SysInstrumentationActivityContext featureInstrumentationContext(str _featureName)
    {
        return logger.activityContext(this.activity(_featureName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>projAdjustmentSplitTransContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext projAdjustmentSplitTransContext()
    {
        return logger.activityContext(this.activity(ProjAdjustmentSplitTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>projDeleteFundingLimitTrackingContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext projDeleteFundingLimitTrackingContext()
    {
        return logger.activityContext(this.activity(ProjDeleteFundingLimitTracking));
    }

]]></Source>
			</Method>
			<Method>
				<Name>projComputeFundingLimitActualContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext projComputeFundingLimitActualContext()
    {
        return logger.activityContext(this.activity(ProjComputeFundingLimitActual));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteCreateAdjustmentUpdateFundingLimitContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext deleteCreateAdjustmentUpdateFundingLimitContext()
    {
        return logger.activityContext(this.activity(DeleteCreateAdjustmentUpdateFundingLimit));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invProposalInsertLinesCreateFeeJournalContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext invProposalInsertLinesCreateFeeJournalContext()
    {
        return logger.activityContext(this.activity(InvProposalInsertLinesCreateFeeJournal));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invProposalInsertLinesRunContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext invProposalInsertLinesRunContext()
    {
        return logger.activityContext(this.activity(InvProposalInsertLinesRun));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invProposalTranSummariesRefresh</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext invProposalTranSummariesRefresh()
    {
        return logger.activityContext(this.activity(InvProposalTranSummariesRefresh));
    }

]]></Source>
			</Method>
			<Method>
				<Name>projFundingLimitSpentAmountValidation</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext projFundingLimitSpentAmountValidation()
    {
        return logger.activityContext(this.activity(ProjFundingLimiSpentAmountValidation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProjectTransContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext createProjectTransContext()
    {
        return logger.activityContext(this.activity(CreateProjectTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postProjectJournalContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext postProjectJournalContext()
    {
        return logger.activityContext(this.activity(PostProjectJournal));
    }

]]></Source>
			</Method>
			<Method>
				<Name>reversePostedRevenueLineContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext reversePostedRevenueLineContext()
    {
        return logger.activityContext(this.activity(ReversePostedRevenueLine));
    }

]]></Source>
			</Method>
			<Method>
				<Name>projProformaInvoiceCleanup</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext projProformaInvoiceCleanup()
    {
        return logger.activityContext(this.activity(ProjProformaInvoiceCleanup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProjFundingLimitSpentAmountCleanUp</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext ProjFundingLimitSpentAmountCleanUp()
    {
        return logger.activityContext(this.activity(ProjFundingLimitSpentAmountCleanUp));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProjFundingLimitSpentAmountDetection</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext ProjFundingLimitSpentAmountDetection()
    {
        return logger.activityContext(this.activity(ProjFundingLimitSpentAmountDetection));
    }

]]></Source>
			</Method>
			<Method>
				<Name>projOrphanFundingLimitSourceDocumentLineCleanup</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext projOrphanFundingLimitSourceDocumentLineCleanup()
    {
        return logger.activityContext(this.activity(ProjOrphanFundingLimitSourceDocumentLineCleanup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>projOrphanFundingLimitAccountingDistributionCleanup</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext projOrphanFundingLimitAccountingDistributionCleanup()
    {
        return logger.activityContext(this.activity(ProjOrphanFundingLimitAccountingDistributionCleanup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTransContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext postTransContext(boolean _createTrans, boolean _updateTrans)
    {
        SysInstrumentationActivityContext currentActivityContext = this.activityContext(PostTrans);

        currentActivityContext.addCustomProperty(CreateTransProperty, int2Str(_createTrans));
        currentActivityContext.addCustomProperty(UpdateTransProperty, int2Str(_updateTrans));

        return currentActivityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTransContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext createTransContext()
    {
        return logger.activityContext(this.activity(CreateTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTransContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext updateTransContext()
    {
        return logger.activityContext(this.activity(UpdateTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTransLedgerNotProject</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext postTransLedgerNotProject()
    {
        return logger.activityContext(this.activity(PostTransLedgerNotProject));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTransLedgerRetainage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext postTransLedgerRetainage()
    {
        return logger.activityContext(this.activity(PostTransLedgerRetainage));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTransLedger</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysInstrumentationActivityContext postTransLedger()
    {
        return logger.activityContext(this.activity(PostTransLedger));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>