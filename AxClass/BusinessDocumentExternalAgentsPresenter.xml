<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentExternalAgentsPresenter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A presenter for business document channels.
/// </summary>
internal final class BusinessDocumentExternalAgentsPresenter
{
    private BusinessDocumentSubmissionExternal defaultSubmission;
    private BusinessDocumentExternalAgents defaultAgent;
    private BusinessDocumentExternalAgentExecutions defaultAgentExecution;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(xArgs _formArgs)
    {
        if (_formArgs != null
            && _formArgs.dataset() == tableNum(BusinessDocumentSubmissionExternal)
            && _formArgs.record()
            && _formArgs.menuItemName() == menuItemDisplayStr(BusinessDocumentExternalAgentExecutionDetails))
        {
            defaultSubmission = _formArgs.record();
            defaultAgentExecution = BusinessDocumentExternalAgentExecutions::find(defaultSubmission.AgentExecutionRefRecId);
            defaultAgent = BusinessDocumentExternalAgents::find(defaultAgentExecution.AgentRefRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateData</Name>
				<Source><![CDATA[
    public void updateData()
    {
        BusinessDocumentVendorImportService::importAndUpdateDocuments();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initExternalAgentsDataSource</Name>
				<Source><![CDATA[
    public void initExternalAgentsDataSource(FormDataSource _externalAgentsDataSource)
    {
        if (defaultAgent.RecId != 0)
        {
            QueryBuildRange range = findOrCreateRange_W(
                _externalAgentsDataSource.queryBuildDataSource(),
                fieldNum(BusinessDocumentExternalAgents, RecId));
            range.value(queryValue(defaultAgent.RecId));
            range.status(RangeStatus::Locked);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initExternalAgentExecutionsDataSource</Name>
				<Source><![CDATA[
    public void initExternalAgentExecutionsDataSource(FormDataSource _externalAgentExecutionsDataSource)
    {
        if (defaultAgentExecution.RecId != 0)
        {
            QueryBuildRange range = findOrCreateRange_W(
                _externalAgentExecutionsDataSource.queryBuildDataSource(),
                fieldNum(BusinessDocumentExternalAgentExecutions, RecId));
            range.value(queryValue(defaultAgentExecution.RecId));
            range.status(RangeStatus::Locked);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSubmissionExternalDataSource</Name>
				<Source><![CDATA[
    public void initSubmissionExternalDataSource(FormDataSource _submissionExternalDataSource)
    {
        QueryBuildRange range = findOrCreateRange_W(
            _submissionExternalDataSource.queryBuildDataSource(),
            fieldNum(BusinessDocumentSubmissionExternal, AgentExecutionRefRecId));
        range.value(queryNotValueCon_W([0]));
        range.status(RangeStatus::Locked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSubmission</Name>
				<Source><![CDATA[
    [SuppressBPWarning("BPDeprecatedDataSourceMethod", "Required for positioning on the needed record. Should be fixed later.")]
    public void findSubmission(FormDataSource _submissionExternalDataSource)
    {
        if (defaultSubmission.RecId != 0)
        {
            _submissionExternalDataSource.findRecord(defaultSubmission);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayLog</Name>
				<Source><![CDATA[
    public void displayLog(BusinessDocumentSubmissionExternal _submissionExternal)
    {
        if (_submissionExternal)
        {
            for (int i = 1; i <= conLen(_submissionExternal.Log); i++)
            {
                setPrefix("@BusinessDocumentSubmissionService:ElectronicDocumentLog" + ':');
                warning(conPeek(_submissionExternal.Log, i));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>