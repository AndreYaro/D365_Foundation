<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tax1099FRecord</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The last record in all electronic 1099 forms, summarizes the number of Payers and Payees in the preceeding lines of the file
/// </summary>
public class Tax1099FRecord extends Tax1099ElectronicEndRecord
{
    private const Tax1099ERecordType recordType_F = 'F'; /* End of Transmission */

    int numberOfARecords;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a F-Record with given information
    /// </summary>
    /// <param name = "_numARecord">The number of Payers present in the file</param>
    /// <param name = "_numBRecords">The number of Payees present in the file (May be left as 0 if this was already recorded in the T-Record)</param>
    /// <returns>a new F-Record</returns>
    public static Tax1099FRecord construct(int _numARecords, int _numBRecords)
    {
        return new Tax1099FRecord(_numARecords, _numBRecords);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(int _numARecords, int _numBRecords)
    {
        super(_numBRecords);

        numberOfARecords = _numARecords;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the F-Record for use in electronic 1099 file
    /// </summary>
    /// <param name = "_realSequenceNumber">The line in which this record will appear in the file</param>
    /// <param name = "_calendarYear">The calendar year to which this file will belong</param>
    /// <param name = "_isCombinedFiling">Whether combined State/Federal filing is to be used for this file</param>
    /// <param name = "_localIRSPayerRec">Table buffer containing transaction information (Optional argument)</param>
    /// <returns>A Tax1099ERecord embodying a formatted, 750 character string</returns>
    public Tax1099ERecord generateRecord(real _realSequenceNumber, Tax1099CalendarYear _calendarYear, boolean _isCombinedFiling, Tax1099IRSPayerRec _localIRSPayerRec = null)
    {
        // End of Transmission "F" record
        // The End of Transmission "F" record is a summary of the number of payers in the entire file.
        this.fillOutputRecord();

        // Record Type: Required. Enter F. Field Position: 1
        this.strInsert(recordType_F, 1);

        // Number of Payees. Field Position: 2-9
        this.strInsert(num2Str0(numberOfARecords, 8, 0, 0, 0), 2);

        // Zero. Field Position: 10-30
        this.strInsert('000000000000000000000', 10);

        // Blank. Field Position: 31-49

        // Total Number of Payees. Field Position: 50-57
        this.strInsert(num2Str0(numberOfBRecords, 8, 0, 0, 0), 50);

        // Blank. Field Position: 58-499

        // Record Sequence Number. Field Position: 500-507
        this.strInsert(num2Str0(_realSequenceNumber, 8, 0, 0, 0), 500);

        // Blank. Field Position: 508-748

        // Blank. Field Position: 749-750 - (CR/LF)

        return output;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>