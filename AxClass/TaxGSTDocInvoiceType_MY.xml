<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGSTDocInvoiceType_MY</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// It is a helper class to handle the logic of invoice type for Malaysia.
/// </summary>
public class TaxGSTDocInvoiceType_MY
{
    TableId     docTableId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the default value of invoice type.
    /// </summary>
    /// <returns>
    /// The default value of invoice type.
    /// </returns>
    public InvoiceType_MY defaultType()
    {
        InvoiceType_MY  defaultType;

        switch (docTableId)
        {
            case tableNum(SalesTable_W):
            case tableNum(CustInvoiceTable_W):
            case tableNum(ProjProposalJour):
                defaultType = TaxParameters::find().DefaultInvoiceType_MY;
                break;

            default:
                defaultType = InvoiceType_MY::Invoice;
                break;
        }

        return defaultType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the lookup form for invoice type.
    /// </summary>
    /// <param name="_formControl">
    /// The control to perform lookup form.
    /// </param>
    public void lookup(FormControl _formControl)
    {
        EnumLookup_RU::lookup(
            _formControl,
            enumNum(InvoiceType_MY),
            this.validTypes());
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocTableId</Name>
				<Source><![CDATA[
    protected TableId parmDocTableId(TableId _docTableId = docTableId)
    {
        docTableId = _docTableId;
        return docTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether an invoice type valie is valid or not.
    /// </summary>
    /// <param name="_invoiceType_MY">
    /// An invoice type value.
    /// </param>
    /// <returns>
    /// true if it is valid; otherwise, return false.
    /// </returns>
    public boolean validate(InvoiceType_MY _invoiceType_MY)
    {
        boolean     isValid;

        isValid = conFind(this.validTypes(), _invoiceType_MY) > 0;

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validTypes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets all valid invoice types.
    /// </summary>
    /// <returns>
    /// All valid invoice types.
    /// </returns>
    protected container validTypes()
    {
        container   validTypes;

        switch (docTableId)
        {
            case tableNum(SalesTable_W):
            case tableNum(CustInvoiceTable_W):
            case tableNum(ProjProposalJour):
                validTypes = [InvoiceType_MY::Invoice, InvoiceType_MY::GST, InvoiceType_MY::ServiceInvoice];
                break;

            case tableNum(PurchTable_W):
                if (TaxGSTFeatureChecker_MY::isSelfBilledInvoiceEnabled())
                {
                    validTypes = [InvoiceType_MY::Invoice, InvoiceType_MY::SelfBilled];
                }
                else
                {
                    validTypes = [InvoiceType_MY::Invoice];
                }
                break;
        }

        return validTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <C>TaxGSTDocInvoiceType_MY</C>.
    /// </summary>
    /// <param name="_docTableId">
    /// The ID of table that has the information about invoice type of Malaysia.
    /// </param>
    /// <returns>
    /// A new instance of <C>TaxGSTDocInvoiceType_MY</C>.
    /// </returns>
    public static TaxGSTDocInvoiceType_MY construct(TableId _docTableId)
    {
        TaxGSTDocInvoiceType_MY     docInvoiceType;

        docInvoiceType = new TaxGSTDocInvoiceType_MY();
        docInvoiceType.parmDocTableId(_docTableId);

        return docInvoiceType;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>