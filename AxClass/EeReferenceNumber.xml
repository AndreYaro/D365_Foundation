<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EeReferenceNumber</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>EeReferenceNumber</c> represents functionality for Customer payment reference gerenaration for Estonia
/// </summary>
class EeReferenceNumber
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkRefNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the reference number is valid
    /// </summary>
    /// <param name="_reference">
    /// Reference number to be checked
    /// </param>
    /// <returns>
    /// true if reference number is valid, otherwise false
    /// </returns>
    public static boolean checkRefNum (str _reference)
    {
        return (_reference == EeReferenceNumber::genRefNum(substr(_reference, 1, strlen(_reference) - 1)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>genRefNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates reference number based on the passed reference adding the checksum to the end
    /// </summary>
    /// <param name="_reference">
    /// Reference number to be updated
    /// </param>
    /// <returns>
    /// Reference number with added checksum
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Exception is thrown if the passed reference is not a number
    /// </exception>
    #define.Two(2)
    #define.Three(3)
    #define.Seven(7)
    #define.Ten(10)
    public static str genRefNum (str _reference)
    {
        int counter = 0, len, sumUp;
        str reference = _reference;

        len = strlen(reference);

        if (EeReferenceNumber::isValidRefNum(reference))
        {
            while (counter < len)
            {
                counter++;
                sumUp += str2int(substr(reference, len - counter + 1, 1)) * ((counter mod #Three) == 1 ?
                                                                             #Seven                    :
                                                                             ((counter mod #Three) == #Two ?
                                                                              #Three                    :
                                                                              1));
            }

            reference += int2str(sumUp mod #Ten == 0 ? 0 : #Ten - (sumUp mod #Ten));
        }
        else
        {
            throw error("@GLS222341");
        }
        return reference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidRefNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies passed reference number
    /// </summary>
    /// <param name="_reference">
    /// A reference number to be verified
    /// </param>
    /// <returns>
    /// true if reference number contains only digits, otherwise false
    /// </returns>
    #define.Digits("0123456789")
    public static boolean isValidRefNum(str _reference)
    {
        //if reference number is non-empty and contains only digits
        return _reference && !strRem(_reference, #Digits);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>