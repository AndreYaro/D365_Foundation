<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSRecordCommiterBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSRecordCommiterBase</c> class deletes records by committing the deletions in predefined chunks of records.
/// </summary>
/// <remarks>
/// The class honours the initial transaction level; i.e. if a transaction is already started then nothing will be committed until that transaction completes.
/// </remarks>
internal class WHSRecordCommiterBase implements System.IDisposable
{
    private const int commitSize = 100;
    private int initialTtsLevel;
    private int changedRecordsInTTSScope;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    public void Dispose()
    {
        if (this.isTransactionStartedByScope())
        {
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        initialTtsLevel = appl.ttsLevel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTransactionStartedByScope</Name>
				<Source><![CDATA[
    protected boolean isTransactionStartedByScope()
    {
        Debug::assert(appl.ttsLevel() - initialTtsLevel <= 1);
        return (appl.ttsLevel() - initialTtsLevel) == 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>commitIfNeeded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Commit records if the number of records exceeds the maximum number of uncommitted records.
    /// </summary>
    protected void commitIfNeeded()
    {
        if (changedRecordsInTTSScope >= commitSize &&
            this.isTransactionStartedByScope())
        {
            ttscommit;
            changedRecordsInTTSScope = 0;
            ttsbegin;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>increaseChangedRecordsInTTSScope</Name>
				<Source><![CDATA[
    protected void increaseChangedRecordsInTTSScope()
    {
        changedRecordsInTTSScope++;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>