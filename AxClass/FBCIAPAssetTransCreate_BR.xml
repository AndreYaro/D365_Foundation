<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBCIAPAssetTransCreate_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Creates a CIAP transaction
/// </summary>
abstract class FBCIAPAssetTransCreate_BR
{
    FBCIAPAssetTrans_BR fbCIAPAssetTrans;

    FBCIAPAssessment_BR             ciapAssessment;
    FBBookingPeriod_BR              bookingPeriod;
    FiscalEstablishmentRecId_BR     fiscalEstablishmentRecId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the CIAP asset transaction.
    /// </summary>

    abstract public void create()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates the <c>FBCIAPAssetTransCreate_BR</c> class
    /// </summary>
    /// <param name="_ciapAssessment">
    /// The <c>FBCIAPAssessment_BR</c> record required to instantiate the class
    /// </param>

    public void new(FBCIAPAssessment_BR _ciapAssessment)
    {
        FBTaxAssessment_BR      taxAssessment;

        ciapAssessment   = _ciapAssessment;

        select RecId,FiscalEstablishmentDataArea, FiscalEstablishmentId from bookingPeriod
            exists join taxAssessment
                where taxAssessment.FBBookingPeriod_BR == bookingPeriod.RecId
                    && taxAssessment.RecId == ciapAssessment.FBTaxAssessment_BR;

        fiscalEstablishmentRecId = bookingPeriod.fiscalEstablishment().RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteICMSInstallmentCreditTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Deletes the ICMS credit transaction for a given asset id and a CIAP assessment period
    /// </summary>
    /// <param name="_assetId">
    ///     The AssetId of the fixed asset
    /// </param>
    /// <param name="_ciapAssessment">
    ///     The <c>FBCIAPAssessment_BR</c> record
    /// </param>
    /// <remarks>
    ///     Used by outgoing processes that need to delete the ICMS credit generated when tax tax assessement is opened
    /// </remarks>

    public static void deleteICMSInstallmentCreditTransaction(AssetId _assetId, FBCIAPAssessment_BR _ciapAssessment)
    {
        FBCIAPAssetTrans_BR ciapAssetTrans;
        FBCIAPAssetTable_BR ciapAssetTable;

        delete_from ciapAssetTrans
            where ciapAssetTrans.FBCIAPAssessment_BR == _ciapAssessment.RecId
                && ciapAssetTrans.TransType == FBCIAPAssetTransType_BR::SIICMSCredit
                    || ciapAssetTrans.TransType == FBCIAPAssetTransType_BR::BA
                exists join ciapAssetTable
                    where ciapAssetTable.RecId == ciapAssetTrans.FBCIAPAssetTable_BR
                        && ciapAssetTable.AssetTable == _assetId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAcquisition</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the <c>FBCIAPAssetTransCreate_BR</c> object from an acquisiton asset transaction
    /// </summary>
    /// <param name="_ciapAssessment">
    ///     The <c>FBCIAPAssessment_BR</c> record
    /// </param>
    /// <param name="_assetTrans">
    ///     The <c>AssetTrans</c> record
    /// </param>
    /// <returns>
    ///     The <c>FBCIAPAssetTransCreate_BR</c> object
    /// </returns>

    public static FBCIAPAssetTransCreate_BR newAcquisition(FBCIAPAssessment_BR _ciapAssessment, AssetTrans _assetTrans)
    {
        FBCIAPAssetTransCreate_Acquisition_BR   createAcquisition;

        switch (_assetTrans.TransType)
        {
            case AssetTransType::Acquisition :
            case AssetTransType::AcquisitionAdj :
                createAcquisition = new FBCIAPAssetTransCreate_Acquisition_BR(_ciapAssessment);

                createAcquisition.parmAssetTrans(_assetTrans);

                return createAcquisition;

            default : throw Error(error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDisposal</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the <c>FBCIAPAssetTransCreate_BR</c> object from an disposal asset transaction
    /// </summary>
    /// <param name="_ciapAssessment">
    ///     The <c>FBCIAPAssessment_BR</c> record
    /// </param>
    /// <param name="_fbCIAPAssetTable">
    ///     The <c>FBCIAPAssetTable_BR</c> record
    /// </param>
    /// <param name="_assetTrans">
    ///     The <c>AssetTrans</c> record
    /// </param>
    /// <param name="_calculateInstallmentForOutgoing">
    ///     Determines if the ICMS credit installment will be calculated when a outgoing transaction is created
    /// </param>
    /// <returns>
    ///     The <c>FBCIAPAssetTransCreate_BR</c> object
    /// </returns>

    public static FBCIAPAssetTransCreate_BR newDisposal(FBCIAPAssessment_BR _ciapAssessment, FBCIAPAssetTable_BR _fbCIAPAssetTable, AssetTrans _assetTrans, NoYesId _calculateInstallmentForOutgoing = false)
    {
        FBCIAPAssetTransCreate_DisposalSale_BR  createDisposalSale;
        FBCIAPAssetTransCreate_DisposalScrap_BR createDisposalScrap;

        switch (_assetTrans.TransType)
        {
            case AssetTransType::DisposalSale :

                createDisposalSale = new FBCIAPAssetTransCreate_DisposalSale_BR(_ciapAssessment);

                createDisposalSale.parmAssetTrans(_assetTrans);
                createDisposalSale.parmCIAPAssetTable(_fbCIAPAssetTable);
                createDisposalSale.parmCalculateInstallmentForOutgoing(_calculateInstallmentForOutgoing);

                return createDisposalSale;

            case AssetTransType::DisposalScrap :

                createDisposalScrap = new FBCIAPAssetTransCreate_DisposalScrap_BR(_ciapAssessment);

                createDisposalScrap.parmAssetTrans(_assetTrans);
                createDisposalScrap.parmCIAPAssetTable(_fbCIAPAssetTable);
                createDisposalScrap.parmCalculateInstallmentForOutgoing(_calculateInstallmentForOutgoing);

                return createDisposalScrap;

            default : throw Error(error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newICMSRecover</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the <c>FBCIAPAssetTransCreate_BR</c> object to recover ICMS installment amount
    /// </summary>
    /// <param name="_ciapAssessment">
    ///     The <c>FBCIAPAssessment_BR</c> record
    /// </param>
    /// <param name="_fbCIAPAssetTable">
    ///     The <c>FBCIAPAssetTable_BR</c> record
    /// </param>
    /// <returns>
    ///     The <c>FBCIAPAssetTransCreate_BR</c> object
    /// </returns>

    public static FBCIAPAssetTransCreate_BR newICMSRecover(FBCIAPAssessment_BR _ciapAssessment, FBCIAPAssetTable_BR _fbCIAPAssetTable)
    {
        FBCIAPAssetTransCreate_ICMSRecover_BR ciapAssetTransCreate;

        ciapAssetTransCreate = new FBCIAPAssetTransCreate_ICMSRecover_BR(_ciapAssessment);

        ciapAssetTransCreate.parmCIAPAssetTable(_fbCIAPAssetTable);

        return ciapAssetTransCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newTransfer</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the <c>FBCIAPAssetTransCreate_BR</c> object to transfer fixed asset between fiscal establishments
    /// </summary>
    /// <param name="_ciapAssessment">
    ///     The <c>FBCIAPAssessment_BR</c> record
    /// </param>
    /// <param name="_fiscaldocument">
    ///     The <c>FiscalDocument_BR</c> record
    /// </param>
    /// <param name="_fiscaldocumentLine">
    ///     The <c>FiscaldocumentLine_BR</c> record
    /// </param>
    /// <param name="_calculateInstallmentForOutgoing">
    ///     Determines if the ICMS credit installment will be calculated when a outgoing transaction is created
    /// </param>
    /// <returns>
    ///     The <c>FBCIAPAssetTransCreate_BR</c> object
    /// </returns>

    public static FBCIAPAssetTransCreate_BR newTransfer(FBCIAPAssessment_BR _ciapAssessment, FiscalDocument_BR _fiscaldocument, FiscaldocumentLine_BR _fiscaldocumentLine, NoYesId _calculateInstallmentForOutgoing = false)
    {
        FBCIAPAssetTransCreate_Transfer_BR ciapAssetTransCreate;

        ciapAssetTransCreate = new FBCIAPAssetTransCreate_Transfer_BR(_ciapAssessment);

        ciapAssetTransCreate.parmFiscaldocument(_fiscaldocument);
        ciapAssetTransCreate.parmFiscaldocumentLine(_fiscaldocumentLine);
        ciapAssetTransCreate.parmCalculateInstallmentForOutgoing(_calculateInstallmentForOutgoing);

        return ciapAssetTransCreate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>