<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipPlanningListPageForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSShipPlanningListPageForm</c> class contains the business logic for <c>WHSShipPlanningListPage</c> form.
/// </summary>
public class WHSShipPlanningListPageForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>filterWaveLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Filters wave lines of a shipment.
    /// </summary>
    /// <param name="_whsShipmentTable">
    /// Shipment record.
    /// </param>
    /// <returns>
    /// Args object with wave ids set.
    /// </returns>
    public Args filterWaveLines(WHSShipmentTable _whsShipmentTable)
    {
        str         filter;
        WHSWaveLine waveLine;
        Args        args = new Args();

        select count(RecId) from waveLine
            where waveLine.ShipmentId == _whsShipmentTable.ShipmentId;

        if (waveLine.RecId > 1)
        {
            while select ShipmentId, WaveId from waveLine
                where waveLine.ShipmentId == _whsShipmentTable.ShipmentId
            {
                if (!filter)
                {
                    filter = waveLine.WaveId;
                }
                else
                {
                    filter += ',' + waveLine.WaveId;
                }
            }
            args.parm(filter);
        }
        else
        {
            args.record(WHSWaveTable::find(_whsShipmentTable.WaveId));
        }

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>launchContainerTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launches <c>WHSContainerTable</c> form for containers in shipment.
    /// </summary>
    /// <param name="_whsShipmentTable">
    /// Shipment record.
    /// </param>
    public void launchContainerTable(WHSShipmentTable _whsShipmentTable)
    {
        Args        args = new Args();

        args.name(formStr(WHSContainerTable));
        args.record(_whsShipmentTable);

        FormRun formRun = classFactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.wait();
    }

]]></Source>
			</Method>
			<Method>
				<Name>launchLoadListControllerReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs <c>WHSLoadList</c> report for load list of the shipment.
    /// </summary>
    /// <param name="_whsShipmentTable">
    /// Shipment record.
    /// </param>
    public void launchLoadListControllerReport(WHSShipmentTable _whsShipmentTable)
    {
        Args args = new args(ssrsReportStr(WHSLoadList, Report));
        args.caller(this);
        args.menuItemType(MenuItemType::Display);
        args.menuItemName(menuItemDisplayStr(WHSShipPlanningListPage));
        args.record(WHSLoadTable::find(_whsShipmentTable.LoadId));
        args.parm(_whsShipmentTable.LoadId);

        WHSLoadListController srsReportRun = new WHSLoadListController();
        srsReportRun.parmReportName(ssrsReportStr(WHSLoadList, Report));
        srsReportRun.parmArgs(args);
        srsReportRun.parmShowDialog(false);
        srsReportRun.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>launchPickListShippingReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs <c>WHSPickListShipping</c> report for pick list of a shipment.
    /// </summary>
    /// <param name="_whsShipmentTable">
    /// Shipment record.
    /// </param>
    public void launchPickListShippingReport(WHSShipmentTable _whsShipmentTable)
    {
        Args args = new Args(ssrsReportStr(WHSPickListShipping, Report));
        args.caller(this);
        args.menuItemType(MenuItemType::Display);
        args.menuItemName(menuItemDisplayStr(WHSShipPlanningListPage));
        args.record(_whsShipmentTable);
        args.parm(_whsShipmentTable.LoadId);

        WHSPickListShippingController srsReportRun = new WHSPickListShippingController();
        srsReportRun.parmReportName(ssrsReportStr(WHSPickListShipping, Report));
        srsReportRun.parmArgs(args);
        srsReportRun.parmShowDialog(false);
        srsReportRun.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shipmentsFilteredByMenuItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds which shipments to be set on query range.
    /// </summary>
    /// <param name="_filteredByMenuItem">
    /// Determines whether the shipments are filtered by menu item already.
    /// </param>
    /// <param name="_showClosedShipments">
    /// Determines whether to show closed shipments.
    /// </param>
    /// <param name="_qbrShipment">
    /// Query range for the shipments.
    /// </param>
    /// <returns>
    /// The value of the query range.
    /// </returns>
    public str shipmentsFilteredByMenuItem(boolean         _filteredByMenuItem,
                                            boolean         _showClosedShipments,
                                            QueryBuildRange _qbrShipment)
    {
        if (!_filteredByMenuItem)
        {
            if (_showClosedShipments)
            {
                _qbrShipment.value('');
            }
            else
            {
                str shipmentStatusFilterStr = strFmt('(((%1.%2 == %4) && (%1.%3 != %5)) || ((%1.%2 == %6) && (%1.%3 != %7)))',
                                                        formDataSourceStr(WHSShipPlanningListPage, WHSShipmentTable),   // 1
                                                        fieldStr(WHSShipmentTable, LoadDirection),                      // 2
                                                        fieldStr(WHSShipmentTable, ShipmentStatus),                     // 3
                                                        any2Int(WHSLoadDirection::Outbound),                            // 4
                                                        any2Int(WHSShipmentStatus::Shipped),                            // 5
                                                        any2Int(WHSLoadDirection::Inbound),                             // 6
                                                        any2Int(WHSShipmentStatus::Received));                          // 7

                _qbrShipment.value(shipmentStatusFilterStr);
            }
        }

        return _qbrShipment.value();
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipWorkLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Skips work lines of a shipment.
    /// </summary>
    /// <param name="_whsShipmentTable">
    /// Shipment record.
    /// </param>
    public void skipWorkLines(WHSShipmentTable _whsShipmentTable)
    {
        _whsShipmentTable.skipWorkLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableConsolidateShipments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables consolidate shipments button.
    /// </summary>
    /// <param name = "_btnConsolidateShipments">
    /// Consolidate shipments button control.
    /// </param>
    /// <param name = "_shipmentTable">
    /// Shipment record.
    /// </param>
    public void enableConsolidateShipments(FormButtonControl _btnConsolidateShipments, WHSShipmentTable _shipmentTable)
    {
        _btnConsolidateShipments.enabled(_shipmentTable.isConsolidateShipmentsAllowed());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableTransferShipment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables transfer shipments button.
    /// </summary>
    /// <param name = "_btnTransferShipment">
    /// Transfer shipments button control.
    /// </param>
    /// <param name = "_shipmentTable">
    /// Shipment record.
    /// </param>
    public void enableTransferShipment(FormButtonControl _btnTransferShipment, WHSShipmentTable _shipmentTable)
    {
        _btnTransferShipment.enabled(_shipmentTable.isTransferShipmentAllowed());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableTransferShipmentNew</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables transfer shipments to new load button.
    /// </summary>
    /// <param name = "_btnTransferShipmentNew">
    /// Transfer shipments to new load button control.
    /// </param>
    /// <param name = "_shipmentTable">
    /// Shipment record.
    /// </param>
    public void enableTransferShipmentNew(FormButtonControl _btnTransferShipmentNew, WHSShipmentTable _shipmentTable)
    {
        _btnTransferShipmentNew.enabled(_shipmentTable.isTransferShipmentAllowed());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>