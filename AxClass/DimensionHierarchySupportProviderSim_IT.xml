<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionHierarchySupportProviderSim_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides support for <c>DimensionHierarchy</c> operations independent
/// </summary>
/// <remarks>This class is necessary because <c>DimensionHierarchyHelper</c> is in the application suite model.
/// When that class is moved to a lower level model is should be possible to collaspe this class with it.
/// </remarks>
public static class DimensionHierarchySupportProviderSim_IT
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateStateSim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the state of a focus <c>DimensionHierarchy</c>.
    /// </summary>
    /// <param name = "_focusDimensionHierarchyRecId">The focus <c>DimensionHierarchy</c> record identifier.</param>
    /// <param name = "_oldState">The current state.</param>
    /// <param name = "_newState">The state to update to.</param>
    /// <returns>true if the <c>DimensionHierarchy</c> was updated to the new state; otherwise, false.</returns>
    public static boolean updateStateSim(
        DimensionFocusStateRecId _focusDimensionHierarchyRecId,
        DimensionFocusBalanceInitializationState _oldState,
        DimensionFocusBalanceInitializationState _newState)
    {
        DimensionHierarchy focusDimensionHierarchy;

        // do not call update override because it clears the cache
        focusDimensionHierarchy.skipDataMethods(true);

        // disable caching so we don't get stale data
        focusDimensionHierarchy.disableCache(true);

        update_recordset focusDimensionHierarchy
            setting FocusStateSim_IT = _newState
            where focusDimensionHierarchy.RecId == _focusDimensionHierarchyRecId
                && focusDimensionHierarchy.FocusStateSim_IT == _oldState;

        return focusDimensionHierarchy.RowCount() > 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>