<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEDatasourceQueryComplex_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEDatasourceQueryComplex_W extends LedgerRRGEDatasourceQuery_W
{
    Map                     values;

    protected const str     Zero    = '0';
    protected const str     Minus   = '-';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findValue</Name>
				<Source><![CDATA[
    protected str findValue(int _fieldId, int _tableId = 1)
    {
        Map tableValues;

        if(values && values.exists(_tableId))
        {
            tableValues = values.lookup(_tableId);
            if (tableValues && tableValues.exists(_fieldId))
            {
                return tableValues.lookup(_fieldId);
            }
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    public void reset(int _tableId)
    {
        super(_tableId);

        if (values)
        {
            values.insert(_tableId, new Map(Types::Integer, Types::String));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setValue(int _fieldId, int _tableId, anytype _value)
    {
        Map tableValues;
        str strValue;

        values = this.getValues();

        if (values.exists(_tableId))
        {
            tableValues = values.lookup(_tableId);
        }
        else
        {
            tableValues = new Map(Types::Integer, Types::String);
        }

        switch (typeOf(_value))
        {
            case Types::String:
                strValue = _value;
                break;

            case Types::Real, Types::Integer, Types::Int64:
                strValue = num2str(_value, -1, -1, 1, 0);
                break;

            default:
                strValue = any2str(_value);
        }

        tableValues.insert(_fieldId, strValue);
        values.insert(_tableId, tableValues);
    }

]]></Source>
      </Method>
      <Method>
        <Name>getValues</Name>
        <Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Map getValues()
    {
        if (!values)
        {
            this.resetValues();
        }

        return values;
    }

]]></Source>
      </Method>
      <Method>
        <Name>resetValues</Name>
        <Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void resetValues()
    {
        values = new Map(Types::Integer, Types::Class);
    }

]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>