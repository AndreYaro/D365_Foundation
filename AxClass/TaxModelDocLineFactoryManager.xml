<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineFactoryManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A manager class to get an TaxModel document line factory instance
/// </summary>
class TaxModelDocLineFactoryManager
{
    TaxModelDocLineFactoryable  factoryInstance;
    SalesPurchJournalLine documentLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFactoryInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get TaxModel document line factory instance
    /// </summary>
    /// <param name = "_documentLine">
    /// The document line information.
    /// </param>
    /// <returns>
    /// <c>TaxModelDocLineFactoryable</c> instance.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxModelDocLineFactoryable getFactoryInstance(SalesPurchJournalLine _documentLine)
    {
        TaxModelDocLineFactoryManager   manager = new TaxModelDocLineFactoryManager(_documentLine);
        TaxModelDocLineFactoryable      factory = manager.getInstance();

        return factory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new(SalesPurchJournalLine _documentLine) 
    {
        documentLine = _documentLine;

        this.init();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the instance.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void init()
    {
        TaxModelDocLineFactoryable      factory;
        container                       cacheResult;
        classId                         derivedClassId;
        DictClass                       dictClass;
        container                       cacheKey;

        cacheKey    = [classNum(TaxModelDocLineFactoryManager), documentLine.SourceTableId];
        cacheResult = TaxModelCache::getValue(
                        TaxModelCacheScope::TaxableTransactionFactoryClassInfo,
                        cacheKey);

        if (cacheResult != conNull())
        {
            derivedClassId = conPeek(cacheResult, 1);
            dictClass = new DictClass(derivedClassId);
            factory = dictClass.makeObject();
        }
        else
        {
            factory = this.generateFactoryInstance();
            if (factory != null)
            {
                derivedClassId = classIdGet(factory);
                cacheResult = [derivedClassId];
                TaxModelCache::insertValue(
                    TaxModelCacheScope::TaxableTransactionFactoryClassInfo,
                    cacheKey,
                    cacheResult);
            }
        }

        factoryInstance = factory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateFactoryInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate the instance.
    /// </summary>
    /// <returns>
    /// <c>TaxModelDocLineFactoryable</c> instance.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected TaxModelDocLineFactoryable generateFactoryInstance()
    {
        TaxModelDocLineType docLineType = TaxModelDocLineUtils::determineDocLineType(documentLine);
        TaxModelDocLineFactoryAttribute attr = new TaxModelDocLineFactoryAttribute(docLineType);

        return SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(TaxModelDocLineFactory), attr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the instance.
    /// </summary>
    /// <returns>
    /// <c>TaxModelDocLineFactoryable</c> instance.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected TaxModelDocLineFactoryable getInstance() 
    {
        return factoryInstance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>