<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetBalanceProcessContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContract]
internal final class BudgetBalanceProcessContract extends BudgetBalanceContractBase
{
    private boolean isInitialize;
    private ProcessScheduleWorkItem workItem;
    private utcdatetime processAsOfDateTime;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmIsInitialize</Name>
				<Source><![CDATA[
    [DataMember, Hookable(false)]
    public boolean parmIsInitialize(boolean _isInitialize = isInitialize)
    {
        isInitialize = _isInitialize;
        return isInitialize;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkItem</Name>
				<Source><![CDATA[
    [DataMember, Hookable(false)]
    public ProcessScheduleWorkItem parmWorkItem(ProcessScheduleWorkItem _workItem = workItem)
    {
        workItem = _workItem;
        return workItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcessAsOfDateTime</Name>
				<Source><![CDATA[
    [DataMember, Hookable(false)]
    public utcdatetime parmProcessAsOfDateTime(utcdatetime _processAsOfDateTime = processAsOfDateTime)
    {
        processAsOfDateTime = _processAsOfDateTime;

        if (processAsOfDateTime == utcDateTimeNull())
        {
            processAsOfDateTime = DateTimeUtil::utcNow();
        }

        return processAsOfDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForGeneralLedgerBalanceContract</Name>
				<Source><![CDATA[
    internal static BudgetBalanceProcessContract newForGeneralLedgerBalanceContract(
        GeneralLedgerBalanceContract _balanceContract)
    {
        BudgetBalanceProcessContract contract = new BudgetBalanceProcessContract();

        contract.parmLedgerRecId(_balanceContract.parmLedgerRecId());
        contract.parmToDate(_balanceContract.parmToDate());
        contract.parmFromDate(_balanceContract.parmFromDate());
        contract.parmIsUpdate(_balanceContract.parmIsUpdate());
        contract.parmProcessAsOfDateTime(DateTimeUtil::utcNow());

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForLedgerDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create <b>BudgetBalanceProcessContract</b> with parameter values
    /// </summary>
    /// <param name = "_fromDate">From date to check the records in given range.</param>
    /// <param name = "_toDate">To date to check the records in given range.</param>
    /// <param name = "_ledgerRecId">RecId of Ledger</param>
    /// <returns> A new instance of the <c>BudgetBalanceProcessContract</c> class.</returns>
    [Hookable(false)]
    public static BudgetBalanceProcessContract newForLedgerDate(
        FromDate _fromDate,
        ToDate _toDate,
        LedgerRecId _ledgerRecId = Ledger::current())
    {
        BudgetBalanceProcessContract contract = new BudgetBalanceProcessContract();
        contract.parmToDate(_toDate);
        contract.parmFromDate(_fromDate);
        contract.parmLedgerRecId(_ledgerRecId);
        contract.parmProcessAsOfDateTime(DateTimeUtil::utcNow());

        return contract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>