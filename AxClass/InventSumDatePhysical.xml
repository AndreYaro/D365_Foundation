<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumDatePhysical</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventSumDatePhysical extends InventSumDate
{
    InventQtyRegistered         registeredQty;
    InventQtyPicked             pickedQty;
    PdsCWRegistered             cwRegisteredQty;
    PdsCWPicked                 cwPickedQty;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addInventSum</Name>
				<Source><![CDATA[
    protected void addInventSum(InventSum _inventSum)
    {
        super(_inventSum);

        pickedQty       += _inventSum.Picked;
        registeredQty   += _inventSum.Registered;

        cwPickedQty     += _inventSum.PdsCWPicked;
        cwRegisteredQty += _inventSum.PdsCWRegistered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInventTransPhysical</Name>
				<Source><![CDATA[
    protected void addInventTransPhysical(InventTrans _inventTrans)
    {
        super(_inventTrans);

        if (_inventTrans.DateInvent && _inventTrans.DateInvent <= perDate)
        {
            if (_inventTrans.Qty > 0)
            {
                registeredQty   += _inventTrans.Qty;
                cwRegisteredQty += _inventTrans.PdsCWQty;
            }
            else
            {
                pickedQty       -= _inventTrans.Qty;
                cwPickedQty     -= _inventTrans.PdsCWQty;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWPhysicalQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the physical catch weight quantity.
    /// </summary>
    /// <returns>
    /// The calculated physical catch weight quantity.
    /// </returns>
    public  PdsCWInventQty pdsCWPhysicalQuantity()
    {
        return this.pdsCWPostedQty()
            - this.pdsCWDeductedQty()
            + this.pdsCWReceivedQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWPickedQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the picked catch weight quantity.
    /// </summary>
    /// <returns>
    /// The picked catch weight quantity.
    /// </returns>
    public PdsCWPicked pdsCWPickedQty()
    {
        return cwPickedQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWRegisteredQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the registered catch weight quantity.
    /// </summary>
    /// <returns>
    /// The registered catch weight quantity.
    /// </returns>
    public PdsCWRegistered pdsCWRegisteredQty()
    {
        return cwRegisteredQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>physicalQuantity</Name>
				<Source><![CDATA[
    InventQty physicalQuantity()
    {
        return this.postedQty() - this.deductedQty() + this.receivedQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pickedQty</Name>
				<Source><![CDATA[
    InventQtyPicked pickedQty()
    {
        return pickedQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registeredQty</Name>
				<Source><![CDATA[
    InventQtyRegistered registeredQty()
    {
        return registeredQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventSum</Name>
				<Source><![CDATA[
    protected void selectInventSum()
    {
        InventSum   inventSum;

        select sum(PostedQty), sum(Received), sum(Deducted), sum(Picked),
                sum(Registered), sum(PdsCWPostedQty), sum(PdsCWReceived),
                sum(PdsCWDeducted), sum(PdsCWPicked), sum(PdsCWRegistered)
            from inventSum
            where  inventSum.ItemId     == itemId
                && inventSum.ClosedQty  == NoYes::No;

        this.addInventSum(inventSum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransPicked</Name>
				<Source><![CDATA[
    protected void selectInventTransPicked()
    {
        InventTrans inventTrans;

        select sum(Qty), sum(PdsCWQty)
            from inventTrans
            where inventTrans.ItemId            == itemId
                && inventTrans.StatusReceipt    == StatusReceipt::None
                && inventTrans.StatusIssue      == StatusIssue::Picked
                && inventTrans.ValueOpen        == InventTransOpen::Yes
                && inventTrans.DateInvent       >  perDate;

        pickedQty   += inventTrans.Qty;
        cwPickedQty += inventTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransRegistered</Name>
				<Source><![CDATA[
    protected void selectInventTransRegistered()
    {
        InventTrans inventTrans;

        select sum(Qty), sum(PdsCWQty)
            from inventTrans
            where inventTrans.ItemId            == itemId
                && inventTrans.StatusReceipt    == StatusReceipt::Registered
                && inventTrans.StatusIssue      == StatusIssue::None
                && inventTrans.ValueOpen        == InventTransOpen::Yes
                && inventTrans.DateInvent       >  perDate;

        registeredQty   -= inventTrans.Qty;
        cwRegisteredQty -= inventTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValueQty</Name>
				<Source><![CDATA[
    protected  void setValueQty()
    {
        super();

        this.selectInventTransPicked();
        this.selectInventTransRegistered();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>