<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPurchTableLedgerCovTypeByTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class SalesPurchTableLedgerCovTypeByTable extends SalesPurchTableLedgerCovType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>processInvoices</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected int processInvoices(
        TransDate _invoiceDate)
    {
        int invoiceLineCount = super(_invoiceDate);

        if (invoiceLineCount > 0)
        {
            AmountCur totalAmount = contract.totalAmount() * contract.parmSign();

            this.updateLedgerCovForInvoiceSummary(_invoiceDate, totalAmount);
            this.updateLedgerCovForInvoiceMarkup(_invoiceDate, totalAmount);
            this.updateLedgerCovForInvoiceTaxes(_invoiceDate);
        }

        return invoiceLineCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processPayments</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected void processPayments(TransDate _invoiceDate)
    {
        TransDate dueDate = this.determineDueDate(_invoiceDate);

        AmountCur totalAmount = contract.totalAmount() * contract.parmSign();
        this.updateLedgerCovForPayment(dueDate, totalAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLedgerCovForPayment</Name>
				<Source><![CDATA[
    private void updateLedgerCovForPayment(
        DueDate _dueDate,
        AmountCur _invoiceAmount)
    {
        TransDate paymentDueDate = contract.parmLedgerCoverage().determinePaymentDueDateWithAverages(
            contract.parmLedgerCovAvgAverageDaysSelectorPayment(),
            contract.parmInvoiceCustVendTable().AccountNum,
            _dueDate,
            contract.parmSalesPurchTableInterface().clearingPeriod());

        //Payment summary
        contract.parmLedgerCoverage().updateSum(
            paymentDueDate,
            contract.parmSummaryPostingType(),
            LedgerDimensionFacade::getMainAccountRecIdFromLedgerDimension(contract.parmSalesPurchTableInterface().summaryLedgerDimension()),
            contract.parmInvoiceCustVendTable().DefaultDimension,
            contract.parmSalesPurchTableInterface().parmCurrencyCode(),
            -_invoiceAmount);

        //Payment clearing
        contract.parmLedgerCoverage().updateSum(
            paymentDueDate,
            contract.parmSummaryPostingType(),
            LedgerDimensionFacade::getMainAccountRecIdFromLedgerDimension(contract.parmSalesPurchTableInterface().clearingLedgerDimension()),
            contract.parmInvoiceCustVendTable().DefaultDimension,
            contract.parmSalesPurchTableInterface().parmCurrencyCode(),
            _invoiceAmount);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>