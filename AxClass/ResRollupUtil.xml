<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResRollupUtil</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Utility class for resource rollup caching feature.
/// </summary>
class ResRollupUtil
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCapacity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Round capacity to a decimal value with two fractional digitals.
    /// </summary>
    /// <param name = "_tableStr">Table string for the target view.</param>
    /// <param name = "_identifierStr">Identifier string for the capacity field string.</param>
    /// <param name = "_fieldStr">Capacity field string.</param>
    /// <returns>Capacity with two decmial points as string.</returns>
    public static str getCapacity(str _tableStr, str _identifierStr, str _fieldStr)
    {
        str zeroCapacity = SysComputedColumn::returnLiteral(0);

        // get capacity
        str capacity = SysComputedColumn::sum(SysComputedColumn::returnField(
            _tableStr,
            _identifierStr,
            _fieldStr));
        capacity = SysComputedColumn::if(
            SysComputedColumn::isNullExpression(capacity), zeroCapacity, capacity);

        // return capacity
        return SysComputedColumn::cast(capacity, 'Decimal(10,4)');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLockedCapacity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets locked capacity by comparing booked and assigned capacity and take whichever on is higher.
    /// </summary>
    /// <param name = "_tableStr">Table string for the target view.</param>
    /// <param name = "_identifierStr">Identifier string for both the booked capacity and the assigned capacity field strings.</param>
    /// <param name = "_bookedCapacityFieldStr">Booked capacity field string.</param>
    /// <param name = "_assignedCapacityFieldStr">Assigned capacity field string.</param>
    /// <returns>Locked capacity as string.</returns>
    public static str getLockedCapacity(str _tableStr, str _identifierStr, str _bookedCapacityFieldStr, str _assignedCapacityFieldStr)
    {
        str zeroCapacity = SysComputedColumn::returnLiteral(0);

        // get booked capacity
        str bookedCapacity = SysComputedColumn::sum(SysComputedColumn::returnField(
            _tableStr,
            _identifierStr,
            _bookedCapacityFieldStr));
        bookedCapacity = SysComputedColumn::if(
            SysComputedColumn::isNullExpression(bookedCapacity), zeroCapacity, bookedCapacity);

        // get assigned capacity
        str assignedCapacity = SysComputedColumn::sum(SysComputedColumn::returnField(
            _tableStr,
            _identifierStr,
            _assignedCapacityFieldStr));
        assignedCapacity = SysComputedColumn::if(
            SysComputedColumn::isNullExpression(assignedCapacity), zeroCapacity, assignedCapacity);

        // return locked capacity for whichever is higher
        return SysComputedColumn::cast(SysComputedColumn::if(
            strfmt("%1 >= %2", bookedCapacity, assignedCapacity), bookedCapacity, assignedCapacity),
            'Decimal(10,4)');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>