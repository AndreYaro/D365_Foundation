<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsOrderTransMultiFinishPickHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WmsOrderTransMultiFinishPickHandler</c> class updates multiple <c>WMSOrderTrans</c> records.
/// </summary>
/// <remarks>
/// The <c>updateWMSOrderTrans</c> method is an implementation of the
/// <c>WMSOrderTransMultiUpdateHandleable</c> class.
/// </remarks>
class WmsOrderTransMultiFinishPickHandler implements WMSOrderTransMultiUpdateHandleable
{
    WMSPickPalletId     wmsPickPalletId;
    HCMWorkerRecId      worker;
    WMSExpeditionTime   timePerLine;
    boolean             firstLine;
    WMSPickingRouteID   pickingRouteId;

    container           orderIds;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addOrderId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds an order ID to the list of handled order IDs.
    /// </summary>
    /// <param name="_orderId">
    /// An order ID to add to the list.
    /// </param>
    /// <remarks>
    /// If the order ID is already present in the list, it will be ignored.
    /// </remarks>
    private void addOrderId(WMSOrderId _orderId)
    {
        if (confind(orderIds,_orderId) <= 0)
        {
            orderIds = conins(orderIds,conlen(orderIds)+1,_orderId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        firstLine = true;

        orderIds = connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimePerLine</Name>
				<Source><![CDATA[
    public WMSExpeditionTime parmTimePerLine(WMSExpeditionTime _timePerLine = timePerLine)
    {
        timePerLine = _timePerLine;
        return timePerLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorker</Name>
				<Source><![CDATA[
    public HcmWorkerRecId parmWorker(HcmWorkerRecId _worker = worker)
    {
        worker = _worker;
        return worker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsGetOrderIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the WMS order IDs for the handled transactions.
    /// </summary>
    /// <returns>
    /// A container that contains the order IDs.
    /// </returns>
    public container pdsGetOrderIds()
    {
        return orderIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWMSOrderTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finishes the selection for the specified <c>WMSOrderTrans</c> record.
    /// </summary>
    /// <param name="_wmsOrderTrans">
    /// The <c>WMSOrderTrans</c> record that should be updated.
    /// </param>
    /// <remarks>
    /// It is not possible to post <c>WMSOrderTrans</c> records for more than one picking route.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// The <c>WMSOrderTrans</c> records that are related to different picking routes are posted.
    /// </exception>
    void updateWMSOrderTrans(WMSOrderTrans _wmsOrderTrans)
    {
        if (firstLine)
        {
            pickingRouteId = _wmsOrderTrans.RouteId;
            firstLine = false;
        }

        if (_wmsOrderTrans.RouteId != pickingRouteId)
        {
            throw error("@SYS111937");
        }

        _wmsOrderTrans.wmsOrderTransType().finishPickingLine(wmsPickPalletId,_wmsOrderTrans.inventDim(),worker,timePerLine,true,true);

        this.addOrderId(_wmsOrderTrans.OrderId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WmsOrderTransMultiFinishPickHandler construct()
    {
        return new WmsOrderTransMultiFinishPickHandler();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>WmsOrderTransMultiFinishPickHandler</c> class based on the
    /// parameters.
    /// </summary>
    /// <param name="_wmsPickPalletId">
    /// The pallet ID to use as the picking pallet.
    /// </param>
    /// <param name="_worker">
    /// The ID of the worker that performs the update.
    /// </param>
    /// <param name="_timePerLine">
    /// The amount of time that each line took to pick.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WmsOrderTransMultiFinishPickHandler</c> class.
    /// </returns>
    public static WmsOrderTransMultiFinishPickHandler newParameters(
        WMSPickPalletId     _wmsPickPalletId,
        HcmWorkerRecId      _worker,
        WMSExpeditionTime   _timePerLine)
    {
        WmsOrderTransMultiFinishPickHandler wmsOrderTransMultiFinishPickHandler;

        wmsOrderTransMultiFinishPickHandler = WmsOrderTransMultiFinishPickHandler::construct();

        wmsOrderTransMultiFinishPickHandler.parmWorker(_worker);
        wmsOrderTransMultiFinishPickHandler.parmTimePerLine(_timePerLine);

        return wmsOrderTransMultiFinishPickHandler;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>