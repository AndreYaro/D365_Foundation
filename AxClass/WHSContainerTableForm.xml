<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSContainerTableForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSContainerTableForm</c> class contains the business logic of the <c>WHSContainerTable</c> form.
/// </summary> 
public class WHSContainerTableForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>btnPackingSlip_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prints packing slip for an outbound load found based on a container
    /// </summary>
    /// <param name="_whsContainerTable">
    /// Container used for identifying the load
    /// </param>
    /// <param name="_caller">
    /// The form that is calling the method.
    /// </param>
    public void btnPackingSlip_clicked(WHSContainerTable _whsContainerTable, FormRun _caller = null)
    {
        WHSShipConfirm  shipConfirm = new WHSShipConfirm();

        shipConfirm.runPackingSlipForContainer(_whsContainerTable, _caller);
    }

]]></Source>
			</Method>
			<Method>
				<Name>btnReopen_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reopens a container and unmanifests shipment.
    /// </summary>
    /// <param name="_whsContainerTable">
    /// Container to be reopened.
    /// </param>
    public void btnReopen_clicked(WHSContainerTable    _whsContainerTable)
    {
        if (_whsContainerTable.shouldUnmanifestShipment())
        {
            DialogButton unmanifestShipment = DialogButton::No;

            unmanifestShipment = Box::yesNo("@WAX3325", DialogButton::No, "@WAX3326");

            if (unmanifestShipment == DialogButton::No)
            {
                throw error("@SYS25904");
            }
        }

        WHSContainerTable::reOpenContainer(
            _whsContainerTable.ShipmentId,
            _whsContainerTable.ContainerId,
            _whsContainerTable.shouldUnmanifestShipment());

        FormDataUtil::getFormDataSource(_whsContainerTable).research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadId_jumpRef</Name>
				<Source><![CDATA[
	/// <summary>
	/// Displays a load record.
	/// </summary>
	/// <param name="_loadId">
	/// Id of the record to be displayed.
	/// </param>
    public void loadId_jumpRef(WHSLoadId   _loadId)
    {
        Args            args = new Args();
        WHSLoadTable    loadTable = WHSLoadTable::find(_loadId);

        args.caller(this);

        if (loadTable)
        {
            args.record(loadTable);
        }

        new MenuFunction(menuitemdisplaystr(WHSLoadTable), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSContainerTableForm construct()
    {
        return new WHSContainerTableForm();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>