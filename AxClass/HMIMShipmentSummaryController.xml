<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMIMShipmentSummaryController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>HMIMShipmentSummaryController</c> class is used to run controller of the <c>HMIMShipmentSummary</c> report.
/// </summary>
public class HMIMShipmentSummaryController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>SRSReportParameters</c> values to the report contract.
    /// </summary>
    protected void prePromptModifyContract()
    {
        HMIMShipmentSummaryContract contract = this.parmReportContract().parmRdpContract() as HMIMShipmentSummaryContract;
        
        if (this.parmArgs().dataset() == tableNum(WHSShipmentTable))
        {
            WHSShipmentTable shipTable = this.parmArgs().record() as WHSShipmentTable;
            contract.parmShipmentId(shipTable.ShipmentId);
        }
            
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initailzes the controller, assigns parameter values and runs the SSRS report.
    /// </summary>
    /// <param name="_args"> <c>Args</c> object.
    /// </param>
    public static void main(Args _args)
    {
        if (_args.record() && _args.dataset() == tableNum(WHSShipmentTable))
        {
            HMIMShipmentSummaryController shipmentSummaryController = new HMIMShipmentSummaryController();
            shipmentSummaryController.parmArgs(_args);
            shipmentSummaryController.parmReportName(ssrsReportStr(HMIMShipmentSummary, Design));
            shipmentSummaryController.parmShowDialog(false);
            shipmentSummaryController.startOperation();
        }
        else if (_args.record()
                && _args.dataset() == tableNum(WHSLoadTable))
        {
            WHSLoadTable loadTable = _args.record();
            WHSShipmentTable shipmentTable;
            Args newArgs = Args::createFromArgs(_args);
            
            while select shipmentTable
                where shipmentTable.LoadId  ==  loadTable.LoadId
            {
                HMIMShipmentSummaryController shipmentSummaryController = new HMIMShipmentSummaryController();
                shipmentSummaryController.parmArgs(newArgs).record(shipmentTable);
                shipmentSummaryController.parmReportName(ssrsReportStr(HMIMShipmentSummary, Design));
                shipmentSummaryController.parmShowDialog(false);
                shipmentSummaryController.startOperation();
            }
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>