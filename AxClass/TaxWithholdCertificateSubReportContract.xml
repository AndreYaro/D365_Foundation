<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdCertificateSubReportContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxWithholdCertificateSubReportContract</c> class is the data contract class for the
/// <c>TaxWithholdingCertificate</c> SSRS report.
/// </summary>
[
    DataContractAttribute
]
class TaxWithholdCertificateSubReportContract
{
    TaxWithholdCertificateNumber_IN certificateNumber;
    CustVendACType                  custVendACType;
    TransDate                       fromDate;
    TransDate                       toDate;
    AccountNum                      accountNum;
    TaxWithholdTAN_IN               tanNumber;
    boolean                         isDuplicate;
    TaxWithholdType_IN              taxWithholdType;
    TaxWithholdComponentGroup_IN    componentGroup;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAccountNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter accountNum.
    /// </summary>
    /// <param name="_accountNum">
    /// The new value of the datacontract parameter accountNum.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter accountNum.
    /// </returns>
    [
        DataMemberAttribute('accountNum')
    ]
    public AccountNum parmAccountNum(AccountNum _accountNum = accountNum)
    {
        accountNum = _accountNum;

        return accountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCertificateNumber</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter CertificateNumber.
    /// </summary>
    /// <param name="_certificateNumber">
    /// The new value of the datacontract parameter CertificateNumber.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter CertificateNumber.
    /// </returns>
    [
        DataMemberAttribute('CertificateNumber')
    ]
    public Taxwithholdcertificatenumber_in parmCertificateNumber(Taxwithholdcertificatenumber_in _certificateNumber = certificateNumber)
    {
        certificateNumber = _certificateNumber;

        return certificateNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmComponentGroup</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter componentGroup.
    /// </summary>
    /// <param name="_componentGroup">
    /// The new value of the datacontract parameter componentGroup.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter componentGroup.
    /// </returns>
    [
        DataMemberAttribute('componentGroup')
    ]
    public TaxWithholdComponentGroup_IN parmComponentGroup(TaxWithholdComponentGroup_IN _componentGroup = componentGroup)
    {
        componentGroup = _componentGroup;

        return componentGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustVendACType</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter custVendACType.
    /// </summary>
    /// <param name="_custVendACType">
    /// The new value of the datacontract parameter custVendACType.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter custVendACType.
    /// </returns>
    [
        DataMemberAttribute('custVendACType')
    ]
    public CustVendACType parmCustVendACType(CustVendACType _custVendACType = custVendACType)
    {
        custVendACType = _custVendACType;

        return custVendACType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter fromDate.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter fromDate.
    /// </returns>
    [
        DataMemberAttribute('fromDate')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;

        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsDuplicate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter isDuplicate.
    /// </summary>
    /// <param name="_isDuplicate">
    /// The new value of the datacontract parameter isDuplicate.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter isDuplicate.
    /// </returns>
    [
        DataMemberAttribute('isDuplicate')
    ]
    public boolean parmIsDuplicate(boolean _isDuplicate = isDuplicate)
    {
        isDuplicate = _isDuplicate;

        return isDuplicate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTanNumber</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter tanNumber.
    /// </summary>
    /// <param name="_tanNumber">
    /// The new value of the datacontract parameter tanNumber.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter tanNumber.
    /// </returns>
    [
        DataMemberAttribute('tanNumber')
    ]
    public TaxWithholdTAN_IN parmTanNumber(TaxWithholdTAN_IN _tanNumber = tanNumber)
    {
        tanNumber = _tanNumber;

        return tanNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdType</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter taxWithholdType.
    /// </summary>
    /// <param name="_taxWithholdType">
    /// The new value of the datacontract parameter taxWithholdType.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter taxWithholdType.
    /// </returns>
    [
        DataMemberAttribute('taxWithholdType')
    ]
    public TaxWithholdType_IN parmTaxWithholdType(TaxWithholdType_IN _taxWithholdType = taxWithholdType)
    {
        taxWithholdType = _taxWithholdType;

        return taxWithholdType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter toDate.
    /// </returns>
    [
        DataMemberAttribute('toDate')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;

        return toDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>