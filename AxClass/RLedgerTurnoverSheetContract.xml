<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RLedgerTurnoverSheetContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for the <c>RLedgerTurnoverSheet</c>SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>RLedgerTurnoverSheet</c>SSRS Report.
/// </remarks>
[
DataContractAttribute,
SysOperationContractProcessingAttribute(classStr(RLedgerTurnoverSheetUI)),
SysOperationGroupAttribute('Period', "@SYS4080", '1'),
SysOperationGroupAttribute('MainAccount', "@GLS103791", '2'),
SysOperationGroupAttribute('Setup', "@SYS29158", '3')
]
public class RLedgerTurnoverSheetContract implements SysOperationValidatable
{
    FromDate                        fromDate;
    ToDate                          toDate;
    MainAccountRange                mainAccountId;

    DimensionDefault                dimensionCriteria;
    NoYes                           printRanges;
    NoYes                           deleteZero;
    NoYes                           showSumAccount;
    NoYes                           showTrans;
    NoYes                           showBalanceTrans;
    NoYes                           showBalance;
    NoYes                           showOrigin;

    TempStr                         reportTableRecId;
    Query                           query;
    container                       packedQuery;
    protected const Version currentVersion = 1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        if (query)
        {
            packedQuery = query.pack();
        }

        return [currentVersion, fromDate, toDate, mainAccountId, dimensionCriteria, printRanges, deleteZero, showSumAccount, showTrans, showBalanceTrans, showBalance, reportTableRecId, packedQuery];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeleteZero</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('DeleteZero'),
    SysOperationDisplayOrderAttribute('2'),
    SysOperationGroupMemberAttribute('Setup'),
    SysOperationLabelAttribute(literalstr("@GLS104958"))
    ]
    public NoYes parmDeleteZero(NoYes _deleteZero = deleteZero)
    {
        deleteZero = _deleteZero;

        return deleteZero;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionCriteria</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('DimensionCriteria'),
    SysOperationDisplayOrderAttribute('1'),
    SysOperationGroupMemberAttribute('Dimensions')
    ]
    public DimensionDefault parmDimensionCriteria(DimensionDefault _dimensionCriteria = dimensionCriteria)
    {
        dimensionCriteria = _dimensionCriteria;

        return dimensionCriteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('FromDate'),
    SysOperationDisplayOrderAttribute('1'),
    SysOperationGroupMemberAttribute('Period')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMainAccountId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('MainAccountId'),
    SysOperationDisplayOrderAttribute('1'),
    SysOperationGroupMemberAttribute('MainAccount')
    ]
    public MainAccountRange parmMainAccountId(MainAccountRange _mainAccountId = mainAccountId)
    {
        mainAccountId = _mainAccountId;
        return mainAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintRanges</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('PrintRanges'),
    SysOperationDisplayOrderAttribute('1'),
    SysOperationGroupMemberAttribute('Setup'),
    SysOperationLabelAttribute(literalstr("@SYS56502"))
    ]
    public NoYes parmPrintRanges(NoYes _printRanges = printRanges)
    {
        printRanges = _printRanges;

        return printRanges;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    public Query parmQuery(Query _query = query)
    {
        query = _query;

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportName</Name>
				<Source><![CDATA[
    public str parmReportName()
    {
        return ssrsReportStr(RLedgerTurnoverSheet, Report);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportTableRecId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ReportTableRecId')
    ]
    public TempStr parmReportTableRecId(TempStr _reportTableRecId = reportTableRecId)
    {
        reportTableRecId = _reportTableRecId;
        return reportTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowBalance</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ShowBalance'),
    SysOperationDisplayOrderAttribute('5'),
    SysOperationGroupMemberAttribute('Setup'),
    SysOperationLabelAttribute(literalstr("@SYS4081691"))
    ]
    public NoYes parmShowBalance(NoYes _showBalance = showBalance)
    {
        showBalance = _showBalance;
        return showBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowBalanceTrans</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ShowBalanceTrans'),
    SysOperationDisplayOrderAttribute('5'),
    SysOperationGroupMemberAttribute('Setup'),
    SysOperationLabelAttribute(literalstr("@GLS114497"))
    ]
    public NoYes parmShowBalanceTrans(NoYes _showBalanceTrans = showBalanceTrans)
    {
        showBalanceTrans = _showBalanceTrans;
        return showBalanceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowSumAccount</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ShowSumAccount'),
    SysOperationDisplayOrderAttribute('3'),
    SysOperationGroupMemberAttribute('Setup'),
    SysOperationLabelAttribute(literalstr("@SYS3783"))
    ]
    public NoYes parmShowSumAccount(NoYes _showSumAccount = showSumAccount)
    {
        showSumAccount = _showSumAccount;

        return showSumAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowTrans</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ShowTrans'),
    SysOperationDisplayOrderAttribute('4'),
    SysOperationGroupMemberAttribute('Setup'),
    SysOperationLabelAttribute(literalstr("@GLS100955"))
    ]
    public NoYes parmShowTrans(NoYes _showTrans = showTrans)
    {
        showTrans = _showTrans;
        return showTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ToDate'),
    SysOperationDisplayOrderAttribute('2'),
    SysOperationGroupMemberAttribute('Period')
    ]
    public FromDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        int version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case currentVersion:
                [version, fromDate, toDate, mainAccountId, dimensionCriteria, printRanges, deleteZero, showSumAccount, showTrans, showBalanceTrans, showBalance, reportTableRecId, packedQuery] = _packedClass;
                if (packedQuery)
                {
                    query = new Query(packedQuery);
                }
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the parameters.
    /// </summary>
    /// <returns>
    ///    true if all parameters are correct; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (! toDate)
        {
            isValid = checkFailed("@GLS105013");
        }

        if (fromDate > toDate)
        {
            isValid = checkFailed("@GLS101164");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static RLedgerTurnoverSheetContract construct()
    {
        return new RLedgerTurnoverSheetContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>