<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleJobManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class NumberSeqModuleJobManager extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createJobIdNumSeqRef</Name>
				<Source><![CDATA[
    [SysObsolete('This method is deprecated because it can result in job Ids that overlap across number sequences. Use the NumberSeqModuleProductionAndShopFloor class instead', false, 28\10\2020)]
    public void createJobIdNumSeqRef()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        if (!FeatureStateProvider::isFeatureEnabled(ProductionAndShopFloorJobIdNumberSeqFeature::instance()))
        {
            datatype.parmDatatypeId(extendedtypenum(JmgJobId));

            datatype.parmReferenceHelp(literalstr("@SYS38672"));
            datatype.parmWizardIsContinuous(false);
            datatype.parmWizardIsManual(NoYes::No);
            datatype.parmWizardFetchAheadQty(10);
            datatype.parmWizardIsChangeDownAllowed(NoYes::No);
            datatype.parmWizardIsChangeUpAllowed(NoYes::No);
            datatype.parmWizardHighest(999999);
            datatype.parmSortField(30);
            datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
            this.create(datatype);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        // Setup Job TransId
        datatype.parmDatatypeId(extendedtypenum(JmgTransId));
        datatype.parmReferenceHelp(literalstr("@SYS39339"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup paycountid
        datatype.parmDatatypeId(extendedtypenum(JmgPayCountId));
        datatype.parmReferenceHelp(literalstr("@SYS39340"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup Job Id for activities, if mrp system is uses it must be the same as production jobid
        this.createJobIdNumSeqRef();

        // Setup numbersequence for message ids
        datatype.parmDatatypeId(extendedtypenum(JmgMsgId));
        datatype.parmReferenceHelp(literalstr("@SYS39945"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(40);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup numbersequence for IPC Journal Ids
        datatype.parmDatatypeId(extendedtypenum(JmgIPCJournalId));
        datatype.parmReferenceHelp(literalstr("@SYS135378"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(50);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::SFC;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    /// <param name = "numberSeqModuleNamesMap">The map to add the <c>NumberSeqModule::SFC</c> number sequence module to.</param>
    [SubscribesTo(classstr(NumberSeqGlobal), delegatestr(NumberSeqGlobal, buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleJobManager), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>