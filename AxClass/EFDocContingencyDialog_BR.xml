<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocContingencyDialog_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Creates the dialog to turn on/off the contingency mode
/// </summary>
class EFDocContingencyDialog_BR extends RunBase
{
    Dialog                                      dialog;
    DialogField                                 mode;
    DialogField                                 reason;

    EFDocContingencyDialogComboOption_BR        contingComboBoxOption;
    EFDocContingencyReason_BR                   efDocContingencyReason;

    #DEFINE.CurrentVersion(2)
    #LOCALMACRO.CurrentList
        contingComboBoxOption,
        efDocContingencyReason
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        dialog = super();

        dialog.caption("@GLS62663");
        dialog.windowType(FormWindowType::Standard);

        mode = new DialogField(dialog, enumStr(EFDocContingencyDialogComboOption_BR));
        dialog.addCtrlDialogField(mode.name());
        mode.init(dialog);
        mode.label("@GLS62659");
        mode.helpText("@GLS62658");

        reason  = dialog.addField(extendedTypeStr(EFDocContingencyReason_BR));

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContingMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches the selected Contingency Mode option from the dialog
    /// </summary>
    /// <returns>
    /// The enum value for the Contingency Mode option
    /// </returns>
    public EFDocContingencyDialogComboOption_BR getContingMode()
    {
        return contingComboBoxOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        contingComboBoxOption   = mode.value();
        efDocContingencyReason  = reason.value();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReason</Name>
				<Source><![CDATA[
    EFDocContingencyReason_BR parmReason(EFDocContingencyReason_BR _efDocContingencyReason = efDocContingencyReason)
    {
        efDocContingencyReason = _efDocContingencyReason;

        return efDocContingencyReason;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        int version = conPeek(packedClass, 1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = packedClass;
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates user input according to contingency rules
    /// </summary>
    /// <param name="calledFrom">
    /// An <c>Object</c> type parameter that representes the caller of this method
    /// </param>
    /// <returns>
    /// True if validation succeeded, otherwise false
    /// </returns>
    public boolean validate(Object calledFrom = null)
    {
        #define.ContingencyReasonMinimumSize(15)

        boolean ret;

        ret = super(calledFrom);

        if (!efDocContingencyReason)
        {
            ret = checkFailed(strfmt("@SYS26332", "@GLS62656"));
        }
        else if (strLen(strLRTrim(efDocContingencyReason)) < #ContingencyReasonMinimumSize)
        {
            ret = checkFailed(strfmt("@SYS4002455", "@GLS62656", #ContingencyReasonMinimumSize));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>