<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanQtyCalcUpdateCommand</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>KanbanQtyCalcUpdateCommand</c> class makes sure that one or more
///    <c>KanbanQtyCalcTaskProcessor</c> objects are created.
/// </summary>
public class KanbanQtyCalcUpdateCommand extends KanbanQtyCalcCommand implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Ensures that one or more <c>KanbanQtyCalcTaskProcessor</c> objects are created by calling the main
    ///    logic.
    /// </summary>
    protected void execute()
    {
        this.createTaskProcessor(this.name());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>CalculationStatus</c> field for the <c>KanbanQuantityCalculation</c> record.
    /// </summary>
    public void updateStatus()
    {
        kanbanQuantityCalculationLock.CalculationStatus = KanbanQuantityCalculationStatus::Calculated;
        kanbanQuantityCalculationLock.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>kanbanQtyCalcUpdateCommand</c> class.
    /// </summary>
    /// <returns>
    /// A <c>kanbanQtyCalcUpdateCommand</c> object.
    /// </returns>
    private static KanbanQtyCalcUpdateCommand construct()
    {
        return new KanbanQtyCalcUpdateCommand();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ClassDescription description()
    {
        return "@SYS318737";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static public void main(Args _args)
    {
        KanbanQuantityCalculation kanbanQuantityCalculation = KanbanQtyCalcCommand::getKanbanQuantityCalculationFromArgs(_args);

        KanbanQtyCalcUpdateCommand kanbanQtyCalcUpdateCommand = KanbanQtyCalcUpdateCommand::newStandard(kanbanQuantityCalculation.data());
        kanbanQtyCalcUpdateCommand.saveLast();

        if (! kanbanQtyCalcUpdateCommand.prompt())
        {
            return;
        }

        kanbanQtyCalcUpdateCommand.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>KanbanQtyCalcUpdateCommand</c> class.
    /// </summary>
    /// <param name="_kanbanQuantityCalculation">
    /// A <c>KanbanQuantityCalculation</c> record.
    /// </param>
    /// <returns>
    /// A <c>KanbanQtyCalcUpdateCommand</c> object.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static KanbanQtyCalcUpdateCommand newStandard(
        KanbanQuantityCalculation   _kanbanQuantityCalculation)
    {
        KanbanQtyCalcUpdateCommand kanbanQtyCalcUpdateCommand = KanbanQtyCalcUpdateCommand::construct();
        kanbanQtyCalcUpdateCommand.parmKanbanQuantityCalculation(_kanbanQuantityCalculation);

        return kanbanQtyCalcUpdateCommand;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>
