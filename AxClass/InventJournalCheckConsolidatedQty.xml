<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalCheckConsolidatedQty</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  A class which will save the consolidated quantity per item ID and physical dimensions.
/// </summary>
public class InventJournalCheckConsolidatedQty
{
    private Map inventJournalCheckConsolidatedQtyMap;
    private Set consolidatedTransRecIds;
    private Set checkedSerialNumbers;
    private Map checkedJournalQtyForSerialNumber;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        inventJournalCheckConsolidatedQtyMap = new Map(Types::Container, Types::Container);
        consolidatedTransRecIds = new Set(Types::Int64);
        checkedSerialNumbers = new Set(Types::Container);
        checkedJournalQtyForSerialNumber = new Map(Types::Container, Types::Real);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Save the checked quantities.
    /// </summary>
    /// <param name = "_itemId">
    ///  The item ID.
    /// </param>
    /// <param name = "_physicalDimId">
    ///  The physical dimension ID.
    /// </param>
    /// <param name = "_cwQtyChecked">
    ///  The checked catch weight quantity.
    /// </param>
    /// <param name = "_qtyChecked">
    ///  The checked inventory quantity.
    /// </param>
    /// <param name = "_inventTransRecId">
    ///  The checked inventory transaction record ID.
    /// </param>
    public void insert(
        ItemId _itemId, 
        InventDimID _physicalDimId, 
        PdsCWInventQty _cwQtyChecked, 
        InventQty _qtyChecked, 
        RecId _inventTransRecIdChecked)
    {
        if (!consolidatedTransRecIds.in(_inventTransRecIdChecked))
        {
            inventJournalCheckConsolidatedQtyMap.insert([_itemId, _physicalDimId], [_cwQtyChecked, _qtyChecked]);
            consolidatedTransRecIds.add(_inventTransRecIdChecked);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookUp</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Find the checked quantities according to item ID and physical dimension ID.
    /// </summary>
    /// <param name = "_itemId">
    ///  The item ID.
    /// </param>
    /// <param name = "_physicalDimId">
    ///  The physical dimension ID.
    /// </param>
    /// <returns>
    /// A container for the checked inventory quantity and catch weight quantity.
    /// </returns>
    public container lookUp(ItemId _itemId, InventDimId _physicalDimId)
    {
        container ret = [0, 0];

        if (inventJournalCheckConsolidatedQtyMap.exists([_itemId, _physicalDimId]))
        {
            ret = inventJournalCheckConsolidatedQtyMap.lookup([_itemId, _physicalDimId]);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSerialNumberChecked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate if the item serial number has been checked.
    /// </summary>
    /// <param name = "_itemId"> The item ID of the serial number.</param>
    /// <param name = "_inventSerialId">The serial number to check</param>
    /// <returns>true if the serial number has been checked; otherwise, false</returns>
    public boolean isSerialNumberChecked(ItemId _itemId, InventSerialId _inventSerialId)
    {
        return checkedSerialNumbers.in([_itemId, _inventSerialId]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCheckedSerialNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add the item serial number has been checked.
    /// </summary>
    /// <param name = "_itemId"> The item ID of the serial number.</param>
    /// <param name = "_inventSerialId">The serial number to check</param>
    public void addCheckedSerialNumber(ItemId _itemId, InventSerialId _inventSerialId)
    {
        checkedSerialNumbers.add([_itemId, _inventSerialId]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addQtyForSerialNumber</Name>
				<Source><![CDATA[
    public void addQtyForSerialNumber(ItemId _itemId, InventSerialId _inventSerialId, InventQty _journalQty)
    {
        InventQty journalQtyTotal = _journalQty;

        if (checkedJournalQtyForSerialNumber.exists([_itemId, _inventSerialId]))
        {
            journalQtyTotal += checkedJournalQtyForSerialNumber.lookup([_itemId, _inventSerialId]);
        }

        checkedJournalQtyForSerialNumber.insert([_itemId, _inventSerialId], journalQtyTotal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccumulatdQtyForSerialNumber</Name>
				<Source><![CDATA[
    public InventQty getAccumulatdQtyForSerialNumber(ItemId _itemId, InventSerialId _inventSerialId)
    {
        InventQty journalQtyTotal = 0;

        if (checkedJournalQtyForSerialNumber.exists([_itemId, _inventSerialId]))
        {
            journalQtyTotal = checkedJournalQtyForSerialNumber.lookup([_itemId, _inventSerialId]);
        }

        return journalQtyTotal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>