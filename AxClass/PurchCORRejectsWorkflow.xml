<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCORRejectsWorkflow</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchCORRejectsWorkflow</c> class is used to run an unconfirmed product receipt rejection
/// notification workflow.
/// </summary>
class PurchCORRejectsWorkflow extends PurchCORWorkflow
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canSubmit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the <c>PurchCORRejectsTable</c> record can be submitted to the workflow.
    /// </summary>
    /// <returns>
    ///    true if the <c>PurchCORRejectsTable</c> record can be submitted to the workflow; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    The <c>PurchCORRejectsTable</c> workflow state field state must have the not submitted value, the
    ///    <c>RejectStatus</c> field of the <c>PurchCORRejectsTable</c> table must have the rejected value,
    ///    and an active workflow configuration must be found.
    /// </remarks>
    protected boolean canSubmit()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSubmitState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the document can be submitted.
    /// </summary>
    /// <returns>
    /// true if the document can be submitted; otherwise, false.
    /// </returns>
    protected boolean checkSubmitState()
    {
        PurchCORRejectsTable    purchCORRejectsTable = this.getPurchCORRejectsTable();

        return ((purchCORRejectsTable.WorkflowState == TradeWorkflowState::NotSubmitted) &&
                (purchCORRejectsTable.RejectStatus == PurchCORRejectStatus::Rejected));
    }

]]></Source>
			</Method>
			<Method>
				<Name>completeAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the name of a menu item used when taking the complete action.
    /// </summary>
    /// <returns>
    ///    A menu item name.
    /// </returns>
    protected menuItemNameAction completeAction()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchCORRejectsTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the document record as a <c>PurchCORRejectsTable</c> record.
    /// </summary>
    /// <returns>
    ///    A <c>PurchCORRejectsTable</c> record.
    /// </returns>
    protected PurchCORRejectsTable getPurchCORRejectsTable()
    {
        return this.parmDocumentRecord() as PurchCORRejectsTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>PurchLine</c> state.
    /// </summary>
    /// <returns>
    /// The <c>PurchLine</c> state value.
    /// </returns>
    protected TradeWorkflowState getState()
    {
        return this.getPurchCORRejectsTable().WorkflowState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkflowType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of a workflow type that is used when activating the workflow.
    /// </summary>
    /// <returns>
    /// A workflow type name.
    /// </returns>
    protected workflowTypeName getWorkflowType()
    {
        return PurchCORRejectsWorkflow::templateName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setState</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the workflow state
    /// </summary>
    protected void setState()
    {
        PurchCORRejectsTable::setWorkflowState(this.getPurchCORRejectsTable().RecId, TradeWorkflowState::Submitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCaller</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the calling form.
    /// </summary>
    /// <param name="_args">
    ///    The arguments of the <c>PurchCORRejectsWorkflow</c> class.
    /// </param>
    protected void updateCaller(Args _args)
    {
        PurchCORRejectsTable    purchCORRejectsTable = _args.record();
        Object                  purchCORRejectsTable_ds;

        purchCORRejectsTable_ds = FormDataUtil::getFormDataSource(purchCORRejectsTable);
        purchCORRejectsTable.WorkflowState = TradeWorkflowState::Submitted;
        if (purchCORRejectsTable_ds)
        {
            purchCORRejectsTable_ds.write();
            purchCORRejectsTable_ds.refresh();
        }

        if (_args.caller())
        {
            _args.caller().updateWorkflowControls();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates an instance of the <c>PurchCORRejectsWorkflow</c> class.
    /// </summary>
    /// <returns>
    ///     An instance of the <c>PurchCORRejectsWorkflow</c> class.
    /// </returns>
    public static PurchCORRejectsWorkflow construct()
    {
        return new PurchCORRejectsWorkflow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Submits a <c>PurchCORRejectsTable</c> document and activates the corresponding workflow.
    /// </summary>
    /// <param name="_args">
    ///    The arguments of the <c>PurchCORRejectsWorkflow</c> class.
    /// </param>
    public static void main(Args _args)
    {
        PurchCORRejectsWorkflow purchCORRejectsWorkflow;

        if (_args.dataset() != tableNum(PurchCORRejectsTable))
        {
            throw error(strFmt("@SYS19306",funcName()));
        }

        purchCORRejectsWorkflow = PurchCORRejectsWorkflow::newPurchCORRejectsTable(_args.record());

        if (purchCORRejectsWorkflow.canSubmit())
        {
            purchCORRejectsWorkflow.activateWorkflow(_args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchCORRejectsTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>PurchCORRejectsWorkflow</c> class.
    /// </summary>
    /// <param name="_purchCORRejectsTable">
    /// The <c>PurchCORRejectsTable</c> record in which to submit the workflow.
    /// </param>
    /// <returns>
    /// An instance of the <c>PurchCORRejectsWorkflow</c> class.
    /// </returns>
    public static PurchCORRejectsWorkflow newPurchCORRejectsTable(PurchCORRejectsTable _purchCORRejectsTable)
    {
        PurchCORRejectsWorkflow purchCORRejectsWorkflow = PurchCORRejectsWorkflow::construct();

        purchCORRejectsWorkflow.parmDocumentRecord(_purchCORRejectsTable);

        return purchCORRejectsWorkflow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activatePurchCORRejectsTableWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Activates the <c>PurchCORRejectsTable</c> workflow.
    /// </summary>
    /// <param name="_purchCORRejectsTable">
    ///    A <c>RejectsTable</c> buffer to update.
    /// </param>
    /// <param name="_workflowComment">
    ///    A comment on the workflow.
    /// </param>
    /// <remarks>
    ///    Activates the workflow configuration by calling the <c>ActivateFromWorkflowtemplate</c> method on
    ///    the workflow class that has information about the <c>PurchCORRejectsTable</c> record.
    /// </remarks>
    public static void activatePurchCORRejectsTableWorkflow(PurchCORRejectsTable _purchCORRejectsTable, WorkflowComment _workflowComment = "@SYS303447")
    {
        PurchCORRejectsWorkflow::newPurchCORRejectsTable(_purchCORRejectsTable).submit(_workflowComment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the AOT element name of this workflow.
    /// </summary>
    /// <returns>
    /// The <c>WorkflowTemplateName</c> value of this workflows template element.
    /// </returns>
    public static workflowTypeName templateName()
    {
        return workFlowTypeStr(PurchCORResolveRejects);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>