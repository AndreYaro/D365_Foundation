<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalDocumentTextUpdateLine_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>FiscalDocumentTextUpdateLine_BR</c> provides functions to replace tags existing in fiscal document line texts.
/// </summary>
class FiscalDocumentTextUpdateLine_BR extends FiscalDocumentTextUpdate_BR
{
    InventTable inventTable;
    CFOPTable_BR cfopTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the object based on the mainRecord.
    /// </summary>
    public void init()
    {
        CustInvoiceLine custInvoiceLine;
        VendInvoiceInfoLine vendInvoiceInfoLine;
        SalesLine           salesLine;
        PurchLine           purchLine;
        ItemId itemId;
        recId  cfopRecId;
        TaxFiscalDocumentLine_BR taxFiscalDocLine;
        InventTransferLine inventTransferLine;

        switch (mainRecord.TableId)
        {
            case tableNum(CustInvoiceLine) :
                custInvoiceLine = mainRecord;
                itemId = '';
                cfopRecId = custInvoiceLine.CFOPTable_BR;
                break;

            case tableNum(VendInvoiceInfoLine) :
                vendInvoiceInfoLine = mainRecord;
                itemId              = vendInvoiceInfoLine.ItemId;
                cfopRecId           = vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFOPTable_BR;
                break;

            case tableNum(TaxFiscalDocumentLine_BR):
                itemId = BrazilParameters::find().FiscalDocumentItemId;
                taxFiscalDocLine = mainRecord;
                cfopRecId = taxFiscalDocLine.CFOPTable_BR;
                break;

            case tableNum(InventTransferLine):
                inventTransferLine = mainRecord;
                itemId = inventTransferLine.ItemId;
                cfopRecId = inventTransferLine.inventTransferLineFiscalInfo_BR().ShipCFOPTable_BR;
                break;

            case tableNum(SalesLine) :
                salesLine  = mainRecord;
                itemId = salesLine.ItemId;
                cfopRecId = salesLine.salesLine_BR().CFOPTable_BR;
                break;

            case tableNum(PurchLine) :
                purchLine  = mainRecord;
                itemId = purchLine.ItemId;
                cfopRecId = purchLine.CFOPTable_BR;
                break;
        }

        inventTable = InventTable::find(itemId);
        cfopTable   = CFOPTable_BR::find(cfopRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTexts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates Fiscal document texts attached to the class' main record.
    /// </summary>
    /// <param name="_type">
    /// The type (<c>FiscalDocumentTextType_BR</c>) to be updated.
    /// </param>
    public void updateTexts( FiscalDocumentTextType_BR   _type)
    {
        switch (_type)
        {
            case FiscalDocumentTextType_BR::CFOP:
                this.delete(FiscalDocumentTextType_BR::CFOP);
                this.add(cfopTable.FiscalDocumentTextID, FiscalDocumentTextType_BR::CFOP);
                break;

            case FiscalDocumentTextType_BR::Inventory:
                this.delete(FiscalDocumentTextType_BR::UserDef);

                this.delete(FiscalDocumentTextType_BR::Inventory);
                this.copy(inventTable);
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>