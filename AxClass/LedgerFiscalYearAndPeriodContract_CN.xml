<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerFiscalYearAndPeriodContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for getting FiscalCalendarYear and corresponding FiscalCalendarPeriod records.
/// </summary>
/// <remarks>
/// This is data contract to get FiscalCalendarYear and FiscalCalendarPeriod records.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(LedgerFiscalYearAndPeriodUIBuilder_CN))
]
public class LedgerFiscalYearAndPeriodContract_CN implements SysOperationValidatable
{
    FiscalYearName  yearName;
    PeriodName      periodName;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPeriodName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Period.
    /// </summary>
    /// <param name="_periodName">
    /// The new value of the data contract parameter Period.
    /// </param>
    /// <returns>
    /// The current value of data contract parameter Period
    /// </returns>
    [
        DataMemberAttribute('Period'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public PeriodName parmPeriodName(PeriodName _periodName = periodName)
    {
        periodName = _periodName;
        return periodName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodYearName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter yearName.
    /// </summary>
    /// <param name="_yearName">
    /// The new value of the data contract parameter yearName.
    /// </param>
    /// <returns>
    /// The current value of data contract parameter yearName.
    /// </returns>
    [
        DataMemberAttribute('Year'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FiscalYearName parmPeriodYearName(FiscalYearName _yearName = yearName)
    {
        yearName = _yearName;
        return yearName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        FiscalCalendarYear      fiscalCalendarYearLocal;
        FiscalCalendarPeriod    fiscalCalendarPeriodLocal;

        boolean isValid = true;

        if (!yearName)
        {
            //Fiscal year must be  entered
            isValid = checkFailed(strFmt("@SYS39376", "@SYS127885"));
        }
        if (isValid && !periodName)
        {
            //Period name must be entered
            isValid = checkFailed(strFmt("@SYS39376", "@SYS127887"));
        }

        if (isValid)
        {
            select firstOnly RecId from fiscalCalendarPeriodLocal
                where fiscalCalendarPeriodLocal.Name            == periodName
                exists join fiscalCalendarYearLocal
                    where fiscalCalendarYearLocal.FiscalCalendar    == Ledger::fiscalCalendar(CompanyInfo::current())
                        && fiscalCalendarYearLocal.Name             == yearName
                        && fiscalCalendarYearLocal.RecId            == fiscalCalendarPeriodLocal.FiscalCalendarYear;

            if (!fiscalCalendarPeriodLocal.RecId)
            {
                //The period %1 is not valid for the fiscal year. Change the fiscal year or select another fiscal period.
                isValid = checkFailed(strFmt("@GLS70437", periodName));
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>