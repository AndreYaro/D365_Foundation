<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjDayTimeframe</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class implements the Day timeframe
/// </summary>
/// <remarks>
/// This class implements logic to calculate start and end dates of a Day from a specified date
/// and provides Day-timeframe specific Availability view settings
/// </remarks>
class ProjDayTimeframe extends ProjTimeframe
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateDates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates start and end dates of the Day timeframe
    /// </summary>
    /// <param name="dateInTimeframe">
    /// User-specified date
    /// </param>
    /// <remarks>
    /// Calculates start and end dates of a Day
    /// </remarks>
    public void calculateDates(date dateInTimeframe)
    {
        _StartDate = dateInTimeframe;
        _EndDate = dateInTimeframe;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIndention</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the Indentions for the Day timeframe
    /// </summary>
    /// <returns>
    /// String text indention
    /// </returns>
    /// <remarks>
    /// Used to set the indention of the Availability view cell contents
    /// </remarks>
    public str getIndention()
    {
        return "               ";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the Availability view cell header labels for Day timeframe
    /// </summary>
    /// <returns>
    /// String cell header text
    /// </returns>
    /// <remarks>
    /// Used to set Availability view column header labels
    /// </remarks>
    public str getLabel()
    {
        SysDictEnum nameOfMonth = new SysDictEnum(enumNum(MonthsOfYear)),
        nameOfDay = new SysDictEnum(enumNum(WeekDays));
        int currentMonth, currentDay, dayOfWeek;

        currentMonth = mthOfYr(_StartDate);
        currentDay = dayOfMth(_StartDate);
        dayOfWeek = dayOfWk(_StartDate);

        return strFmt("%1, %2 %3", nameOfDay.index2Label(dayOfWeek),
            nameOfMonth.index2Label(currentMonth), currentDay);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the End date
    /// </summary>
    /// <param name="endDate">
    /// User-specified date
    /// </param>
    /// <returns>
    /// Date value used as End date of the Day timeframe
    /// </returns>
    /// <remarks>
    /// Gets or sets the End date of the Day timeframe
    /// </remarks>
    public date parmEndDate(date endDate = _EndDate)
    {
        return super(endDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the Start date
    /// </summary>
    /// <param name="startDate">
    /// User-specified date
    /// </param>
    /// <returns>
    /// Date value used as Start date of the Day timeframe
    /// </returns>
    /// <remarks>
    /// Gets or sets the Start date of the Day timeframe
    /// </remarks>
    public date parmStartDate(date startDate = _StartDate)
    {
        return super(startDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>ProjDayTimeframe</c> extension
    /// </summary>
    /// <returns>
    /// Instance of the <c>ProjDayTimeframe</c> class
    /// </returns>
    /// <remarks>
    /// This construct method returns an instance of the <c>ProjDayTimeframe</c>
    /// using the <c>ProjITimeframe</c> interface
    /// </remarks>
    public static ProjITimeframe construct()
    {
        ProjITimeframe timeframe = new ProjDayTimeframe();
        return timeframe;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>