<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanDataReader</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ReqDemPlanDataReader</c> class provides a wrapper for reading data using .NET IDataReader interface.
/// </summary>
public class ReqDemPlanDataReader
{
    System.Data.IDataReader reader;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Disposes the underlying data reader object.
    /// </summary>
    public void dispose()
    {
        reader.Dispose();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the date time value in the specified column.
    /// </summary>
    /// <param name="_position">
    ///     The column index.
    /// </param>
    /// <returns>
    ///     The date time value.
    /// </returns>
    public System.DateTime getDateTime(int _position)
    {
        return reader.GetDateTime(_position);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDouble</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the double value in the specified column.
    /// </summary>
    /// <param name="_position">
    ///     The column index.
    /// </param>
    /// <returns>
    ///     The double value.
    /// </returns>
    public System.Double getDouble(int _position)
    {
        return reader.GetDouble(_position);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getString</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the string value in the specified column.
    /// </summary>
    /// <param name="_position">
    ///     The column index.
    /// </param>
    /// <returns>
    ///     The string value.
    /// </returns>
    public System.String getString(int _position)
    {
        return reader.GetString(_position);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReader</Name>
				<Source><![CDATA[
    public System.Data.IDataReader parmReader(System.Data.IDataReader _reader = reader)
    {
        reader = _reader;

        return reader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>read</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Moves to the next data row in the underlying data reader object.
    /// </summary>
    /// <returns>
    ///     true if more data can be read; otherwise, false.
    /// </returns>
    public boolean read()
    {
        return reader.Read();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ReqDemPlanDataReader construct()
    {
        return new ReqDemPlanDataReader();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newReader</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a new instance of the data reader wrapper class based on the specified <c>IDataReader</c> instance.
    /// </summary>
    /// <param name="_reader">
    ///     The specified instance to use.
    /// </param>
    /// <returns>
    ///     An instance of the <c>ReqDemPlanDataReader</c> class.
    /// </returns>
    public static ReqDemPlanDataReader newReader(System.Data.IDataReader _reader)
    {
        ReqDemPlanDataReader result = ReqDemPlanDataReader::construct();
        result.parmReader(_reader);
        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>