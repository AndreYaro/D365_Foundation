<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransIdSum_WHSMatchOrBlankDimensions</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventTransIdSum_WHSMatchOrBlankDimensions</c> class calculates the sum of the <c>InventTrans</c>
/// records based on the inventDim criteria where inventTrans records are allow
/// to hold less specific dimension sets than the dimension criteria.
/// </summary>
/// <remarks>
/// Useful for WHS enabled items because reservation can happen at different levels in the hierarchy
/// but the dimension criteria might be more specific such as, full physical dimensions.
/// </remarks>
class InventTransIdSum_WHSMatchOrBlankDimensions extends InventTransIdSum
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcSumImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and stores the results that are shown in internal variables.
    /// </summary>
    [Replaceable]
    public void calcSumImplementation()
    {    
        if (inventDimCriteria)
        {
            InventTrans     inventTrans;
            InventDim       inventDimTest;

            // #WHSInventDimExistsJoin requires dims to either have matching values or be blank.
            while select sum(Qty), sum(PdsCWQty) from inventTrans
                group by StatusIssue, StatusReceipt
                where   inventTrans.InventTransOrigin == transOriginId
                    && (inventTrans.TransChildType == childType || !perChildType)
                    && (inventTrans.TransChildRefId == childRefId || !perChildType || !childRefId)
                #WHSInventDimExistsJoin(inventTrans.inventDimId, inventDimTest, inventDimCriteria)
            {
                this.addInventTransToTotals(inventTrans);
            }
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWHSMatchOrBlankDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>InventTransIdSum_WHSMatchOrBlankDimensions</c> class for a given inventory movement based on specified parameters.
    /// </summary>
    /// <param name="_transOriginId">
    /// The reference to the inventory movement for which the results are calculated.
    /// </param>
    /// <param name="_perChildType">
    /// True if the result should be calculated for the specified child type and reference; otherwise, false.
    /// </param>
    /// <param name="_childType">
    /// The type of the inventory reference.
    /// </param>
    /// <param name="_childRefId">
    /// The ID of the inventory reference.
    /// </param>
    /// <param name="_inventDimCriteria">
    /// The dimensions criteria set for which the results are calculated against.
    /// </param>
    /// <returns>
    /// A new instance of the class
    /// </returns>
    public static InventTransIdSum_WHSMatchOrBlankDimensions newWHSMatchOrBlankDimensions(
        InventTransOriginId     _transOriginId,
        boolean                 _perChildType,
        InventTransChildType    _childType,
        InventTransChildRefId   _childRefId,
        InventDim               _inventDimCriteria)
    {
        InventTransIdSum_WHSMatchOrBlankDimensions inventTransIdSum_WHSMatchOrBlankDimensions;
    
        inventTransIdSum_WHSMatchOrBlankDimensions = InventTransIdSum_WHSMatchOrBlankDimensions::newTransOriginId(_transOriginId);
        inventTransIdSum_WHSMatchOrBlankDimensions.parmPerChildType(_perChildType);
        inventTransIdSum_WHSMatchOrBlankDimensions.parmChildType(_childType);
        inventTransIdSum_WHSMatchOrBlankDimensions.parmChildRefId(_childRefId);
        inventTransIdSum_WHSMatchOrBlankDimensions.parmInventDimCriteria(_inventDimCriteria);
    
        return inventTransIdSum_WHSMatchOrBlankDimensions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>InventTransIdSum_WHSMatchOrBlankDimensions</c> class for a given inventory movement.
    /// </summary>
    /// <param name="_transOriginId">
    /// The reference to the inventory movement for which the results are calculated.
    /// </param>
    /// <returns>
    /// A new instance of the <c>InventTransIdSum_WHSMatchOrBlankDimensions</c> class.
    /// </returns>
    private static InventTransIdSum_WHSMatchOrBlankDimensions newTransOriginId(InventTransOriginId _transOriginId)
    {
        return new InventTransIdSum_WHSMatchOrBlankDimensions(_transOriginId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>