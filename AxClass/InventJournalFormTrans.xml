<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalFormTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventJournalFormTrans extends JournalFormTrans
{
    FormDataSource inventDim_ds;
    InventDim      inventDim;

    FormFunctionButtonControl ctrlDeleteLines;
    FormFunctionButtonControl ctrlInventReserve;
    FormFunctionButtonControl ctrlInventMarking;
    FormFunctionButtonControl ctrlInventTransRegister;
    FormFunctionButtonControl ctrlInventTransPick;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventDim_ds</Name>
				<Source><![CDATA[
    public FormDataSource inventDim_ds()
    {
        return inventDim_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceActivePost</Name>
				<Source><![CDATA[
    public void datasourceActivePost()
    {
        super();

        if (inventDim_ds)
        {
            inventDim_ds.active();
        }

        this.updateDesign(InventDimFormDesignUpdate::Active);
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceInitValuePre</Name>
				<Source><![CDATA[
    public void datasourceInitValuePre()
    {
        super();

        if (journalTransData)
        {
            journalTransData.initFromJournalTable();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    protected void enableButtonsActive()
    {
        super();

        if (journalTransData)
        {
            JournalTableMap journalTable = journalTableData.journalTable();
            boolean enabled = journalTable.JournalNameId && journalFormTable.isJournalFree();

            if (ctrlInventReserve)
            {
                ctrlInventReserve.enabled(enabled && !journalTable.Posted);
            }

            if (ctrlInventMarking)
            {
                ctrlInventMarking.enabled(enabled);
            }

            if (ctrlInventTransRegister)
            {
                ctrlInventTransRegister.enabled(enabled && !journalTable.Posted);
            }

            if (ctrlInventTransPick)
            {
                ctrlInventTransPick.enabled(enabled && !journalTable.Posted);
            }

            Integer journalTypeId = journalTable.JournalType;
            InventJournalType journalTypeEnumValue = any2Enum(journalTypeId);
           
            if (journalTypeEnumValue == InventJournalType::Project && ProjJournalReadOnlyAfterPostingFlight::instance().isEnabled())
            {
                this.setFormViewEditMode();
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>formInitPostJournalTrans</Name>
				<Source><![CDATA[
    protected void formInitPostJournalTrans()
    {
        if (!journalTrans.JournalId)
        {
            journalTrans.JournalId = journalTableData.journalTable().JournalId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formInitPost</Name>
				<Source><![CDATA[
    public void formInitPost()
    {
        super();

        if (journalTableData) // might be null if form is already open - form is in process of closing again.
        {
            this.formInitPostJournalTrans();

            this.reset();
            this.updateDesign(InventDimFormDesignUpdate::Init);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formRun</Name>
				<Source><![CDATA[
    public FormRun formRun()
    {
        return formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDatasourceAllow</Name>
				<Source><![CDATA[
    protected void initDatasourceAllow()
    {
        boolean allow = this.allowEditAndCreateLines();

        super();

        if (inventDim_ds)
        {
            inventDim_ds.allowEdit(allow);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimInitPost</Name>
				<Source><![CDATA[
    public void inventDimInitPost(InventDim _inventDim)
    {
        inventDim_ds    = FormDataUtil::getFormDataSource(_inventDim);
        inventDim       = _inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlDeleteLines</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlDeleteLines(FormFunctionButtonControl _deleteLines = ctrlDeleteLines)
    {
        ctrlDeleteLines = _deleteLines;
        return ctrlDeleteLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlInventReserve</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlInventReserve(FormFunctionButtonControl _inventReserve = ctrlInventReserve)
    {
        ctrlInventReserve = _inventReserve;
        return ctrlInventReserve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlInventMarking</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlInventMarking(FormFunctionButtonControl _inventMarking = ctrlInventMarking)
    {
        ctrlInventMarking = _inventMarking;
        return ctrlInventMarking;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlInventTransPick</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlInventTransPick(FormFunctionButtonControl _inventTransPick = ctrlInventTransPick)
    {
        ctrlInventTransPick = _inventTransPick;
        return ctrlInventTransPick;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlInventTransRegister</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlInventTransRegister(FormFunctionButtonControl _inventTransRegister = ctrlInventTransRegister)
    {
        ctrlInventTransRegister = _inventTransRegister;
        return ctrlInventTransRegister;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    protected void updateDesign(InventDimFormDesignUpdate _mode)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormViewEditMode</Name>
				<Source><![CDATA[
    private void setFormViewEditMode()
    {
        boolean enabled = this.isJournalEnabled();
        ViewEditMode viewEditMode = enabled ? ViewEditMode::Edit : ViewEditMode::View;
        formRun.design().viewEditMode(viewEditMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isJournalEnabled</Name>
				<Source><![CDATA[
    protected boolean isJournalEnabled()
    {
        boolean enabled = (journalTableData.blockLevel() != JournalBlockLevel::System) && !journalTableData.journalTable().Posted;
        return enabled;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>