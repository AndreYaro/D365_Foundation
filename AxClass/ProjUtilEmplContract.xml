<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjUtilEmplContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for ProjUtilEmpl SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the ProjUtilEmpl SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(ProjUtilReportUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class ProjUtilEmplContract implements SysOperationValidatable,SysOperationInitializable
{
    ProjPeriodId            editPeriodID;
    TransDate               projFromDate;
    TransDate               projToDate;
    boolean                 projDeptOnly;
    ProjActualBudgetOnly    projActualVsBudget;
    ForecastModelId         projForecastModelId;
    boolean                 projSkipZero;
    boolean                 projIsEfficiency;
    boolean                 projSkipBlankId;
    Level                   projLevel;
    ProjListStateProjType   projView;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default values for instance variables.
    /// </summary>
    public void initialize()
    {
        this.parmProjLevel(1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEditPeriodID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter EditPeriodID.
    /// </summary>
    /// <param name="_editPeriodID">
    /// The new value of the datacontract parameter EditPeriodID; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter EditPeriodID
    /// </returns>
    [
        DataMemberAttribute('EditPeriodID'),
        SysOperationLabelAttribute(literalstr("@SYS102628")),
        SysOperationHelpTextAttribute(literalstr("@SYS102846"))
    ]
    public ProjPeriodId parmEditPeriodID(ProjPeriodId _editPeriodID = editPeriodID)
    {
        editPeriodID = _editPeriodID;
        return editPeriodID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjActualVsBudget</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjActualVsBudget.
    /// </summary>
    /// <param name="_projActualVsBudget">
    /// The new value of the datacontract parameter ProjActualVsBudget; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjActualVsBudget
    /// </returns>
    [
        DataMemberAttribute('ProjActualVsBudget'),
        SysOperationLabelAttribute(literalstr("@SYS82685")),
        SysOperationHelpTextAttribute(literalstr("@SYS102847"))
    ]
    public ProjActualBudgetOnly parmProjActualVsBudget(ProjActualBudgetOnly _projActualVsBudget = projActualVsBudget)
    {
        projActualVsBudget = _projActualVsBudget;
        return projActualVsBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjDeptOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjDeptOnly.
    /// </summary>
    /// <param name="_projDeptOnly">
    /// The new value of the datacontract parameter ProjDeptOnly; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjDeptOnly
    /// </returns>
    [
        DataMemberAttribute('ProjDeptOnly'),
        SysOperationLabelAttribute(literalstr("@SYS104848")),
        SysOperationHelpTextAttribute(literalstr("@SYS104849"))
    ]
    public boolean parmProjDeptOnly(boolean _projDeptOnly = projDeptOnly)
    {
        projDeptOnly = _projDeptOnly;
        return projDeptOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjForecastModelId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjForecastModelId.
    /// </summary>
    /// <param name="_projForecastModelId">
    /// The new value of the datacontract parameter ProjForecastModelId; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjForecastModelId
    /// </returns>
    [
        DataMemberAttribute('ProjForecastModelId'),
        SysOperationLabelAttribute(literalstr("@SYS82923")),
        SysOperationHelpTextAttribute(literalstr("@SYS102848"))
    ]
    public ForecastModelId parmProjForecastModelId(ForecastModelId _projForecastModelId = projForecastModelId)
    {
        projForecastModelId = _projForecastModelId;
        return projForecastModelId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjFromDate.
    /// </summary>
    /// <param name="_projFromDate">
    /// The new value of the datacontract parameter ProjFromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjFromDate
    /// </returns>
    [
        DataMemberAttribute('ProjFromDate'),
        SysOperationLabelAttribute(literalstr("@SYS24050")),
        SysOperationHelpTextAttribute(literalstr("@SYS84248"))
    ]
    public TransDate parmProjFromDate(TransDate _projFromDate = projFromDate)
    {
        projFromDate = _projFromDate;
        return projFromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjIsEfficiency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjIsEfficiency.
    /// </summary>
    /// <param name="_projIsEfficiency">
    /// The new value of the datacontract parameter ProjIsEfficiency; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjIsEfficiency
    /// </returns>
    [DataMemberAttribute('ProjIsEfficiency')]
    public boolean parmProjIsEfficiency(boolean _projIsEfficiency = projIsEfficiency)
    {
        projIsEfficiency = _projIsEfficiency;
        return projIsEfficiency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjLevel.
    /// </summary>
    /// <param name="_projLevel">
    /// The new value of the datacontract parameter ProjLevel; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjLevel
    /// </returns>
    [
        DataMemberAttribute('ProjLevel'),
        SysOperationLabelAttribute(literalstr("@SYS90474")),
        SysOperationHelpTextAttribute(literalstr("@SYS104010"))
    ]
    public Level parmProjLevel(Level _projLevel = projLevel)
    {
        projLevel = _projLevel;
        return projLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSkipBlankId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjSkipBlankId.
    /// </summary>
    /// <param name="_projSkipBlankId">
    /// The new value of the datacontract parameter ProjSkipBlankId; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjSkipBlankId
    /// </returns>
    [
        DataMemberAttribute('ProjSkipBlankId'),
        SysOperationLabelAttribute(literalstr("@SYS91206")),
        SysOperationHelpTextAttribute(literalstr("@SYS91208"))
    ]
    public boolean parmProjSkipBlankId(boolean _projSkipBlankId = projSkipBlankId)
    {
        projSkipBlankId = _projSkipBlankId;
        return projSkipBlankId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSkipZero</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjSkipZero.
    /// </summary>
    /// <param name="_projSkipZero">
    /// The new value of the datacontract parameter ProjSkipZero; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjSkipZero
    /// </returns>
    [
        DataMemberAttribute('ProjSkipZero'),
        SysOperationLabelAttribute(literalstr("@SYS19052")),
        SysOperationHelpTextAttribute(literalstr("@SYS90472"))
    ]
    public boolean parmProjSkipZero(boolean _projSkipZero = projSkipZero)
    {
        projSkipZero = _projSkipZero;
        return projSkipZero;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjToDate.
    /// </summary>
    /// <param name="_projToDate">
    /// The new value of the datacontract parameter ProjToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjToDate
    /// </returns>
    [
        DataMemberAttribute('ProjToDate'),
        SysOperationLabelAttribute(literalstr("@SYS80662")),
        SysOperationHelpTextAttribute(literalstr("@SYS84281"))
    ]
    public TransDate parmProjToDate(TransDate _projToDate = projToDate)
    {
        projToDate = _projToDate;
        return projToDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjView.
    /// </summary>
    /// <param name="_projView">
    /// The new value of the datacontract parameter ProjView; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjView
    /// </returns>
    [
        DataMemberAttribute('ProjView'),
        SysOperationLabelAttribute(literalstr("@SYS75799")),
        SysOperationHelpTextAttribute(literalstr("@SYS90476"))
    ]
    public ProjListStateProjType parmProjView(ProjListStateProjType _projView = projView)
    {
        projView = _projView;
        return projView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if ((this.parmProjActualVsBudget() == ProjActualBudgetOnly::Budget) && ! this.parmProjForecastModelId())
        {
            isValid = checkFailed("@SYS102649");
        }

        if (this.parmProjFromDate() && this.parmProjToDate() && (this.parmProjFromDate() > this.parmProjToDate()))
        {
            isValid = checkFailed("@SYS102648");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>