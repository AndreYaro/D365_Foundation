<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryTrackingTransaction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  Keeps information about a single invent tracking dimensions for the warehouse inventory transaction stack.
/// </summary>
public final class WHSInventoryTrackingTransaction extends InventTrackingTransaction
{
    private InventTrackingDimTracingWHSInventoryTransactionDTO dto;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addTrackingNode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventDimTrackingInventTransNode addTrackingNode(InventTrackingDimTracingRelations _inventTrackingDimTracingRelations)
    {
        return _inventTrackingDimTracingRelations.addWHSInventoryTransactionNode(dto, this.tracingNodeKey());
    }

]]></Source>
			</Method>
			<Method>
				<Name>tracingNodeKey</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str tracingNodeKey()
    {
        return dto.uniqueKey();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventDim inventDim()
    {
        return InventDim::find(dto.inventDimId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ItemId getItemId()
    {
        return dto.itemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>uniqueKey</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public  str uniqueKey()
    {
        return dto.uniqueKey();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBatchId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventBatchId getBatchId()
    {
        return this.inventDim().inventBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>stockQtyChangeDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public StockQtyChangeDate stockQtyChangeDate()
    {
        return dto.stockQtyChangeDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>cwQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public PdsCWQty cwQty()
    {        
        return dto.catchWeightQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventQty qty()
    {           
        return dto.inventQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventUnit</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public UnitIDInventory inventUnit()
    {
        return InventTableModule::find(dto.itemId(), ModuleInventPurchSales::Invent).UnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWUnitId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public PdsCWUnitId pdsCWUnitId()
    {
        return PdsCatchWeight::cwUnitId(dto.itemId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductionRelated</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isProductionRelated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventTransRefId referenceId()
    {
        return dto.referenceId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceCategory</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventTransType referenceCategory()
    {
        return WHSInventoryTransactionReferenceCategoryToInventTransTypeConverter::convert(dto.referenceCategory());
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasReferenceDetails</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean hasReferenceDetails()
    {
        return dto.referenceId() != '';            
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventTrackingTransactionType getTransactionType()
    {
        return InventTrackingTransactionType::WHSInventoryTransaction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventDimId inventDimId()
    {
        return dto.inventDimId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isByProductProductionTransaction</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isByProductProductionTransaction()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTrackingNode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventDimTrackingInventTransNode createTrackingNode()
    {
        return InventDimTrackingWHSInventoryTransactionNode::newFromWHSInventoryTransDTO(dto);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventoryTransactionView</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WHSInventoryTrackingTransaction newFromInventoryTransactionView(
        WHSInventoryTransactionView _transactionView)
    {
        WHSInventoryTrackingTransaction trackingTransaction = new WHSInventoryTrackingTransaction();
        trackingTransaction.dto = InventTrackingDimTracingWHSInventoryTransactionDTO::initFromCommon(_transactionView);
        return trackingTransaction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPackedContainer</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WHSInventoryTrackingTransaction newFromPackedContainer(
       container _packedContainer)
    {
        WHSInventoryTrackingTransaction whsInventoryTransaction = new WHSInventoryTrackingTransaction();
        whsInventoryTransaction.dto = InventTrackingDimTracingWHSInventoryTransactionDTO::create(_packedContainer);

        return whsInventoryTransaction;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>