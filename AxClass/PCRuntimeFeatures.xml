<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCRuntimeFeatures</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCRuntimeFeatures</c> class exposes the collection of product configuration runtime features.
/// </summary>
internal class PCRuntimeFeatures
{
    private static PCRuntimeFeatures singleton;
    private PCInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        logger = PCInstrumentationLogger::createLogger(classStr(PCRuntimeFeatures));
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        singleton = new PCRuntimeFeatures();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>PCRuntimeFeatures</c> instance.</returns>
    [Hookable(false)]
    internal static PCRuntimeFeatures instance()
    {
        if (!singleton)
        {
            singleton = new PCRuntimeFeatures();
        }

        return PCRuntimeFeatures::singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabledFeaturesListEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a list enumerator for the enabled feature names.
    /// </summary>
    /// <returns>A list enumerator for the enabled feature names.</returns>
    [Hookable(false)]
    internal ListEnumerator enabledFeaturesListEnumerator()
    {
        return this.enabledFeatureNamesList().getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabledFeatureNamesList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a list of the enabled feature names.
    /// </summary>
    /// <returns>A list of the enabled feature names.</returns>
    [Hookable(false)]
    internal List enabledFeatureNamesList()
    {
        List list = new List(Types::String);

        // Features are hard-coded below for performance rather than enmerating the implementations of the IPCFeature interface
        this.addIfEnabled(
            list,
            PCModelCachingForExistingVariantFixedFlight::instance().isEnabled(),
            PCModelCachingForExistingVariantFixedFlight::instance().metadataName());

        this.addIfEnabled(
            list,
            PCExtensibilityImprovementsFlight::instance().isEnabled(),
            PCExtensibilityImprovementsFlight::instance().metadataName());

        this.addIfEnabled(
            list,
            PCDisplayValueResolutionFlight::instance().isEnabled(),
            PCDisplayValueResolutionFlight::instance().metadataName());

        this.addIfEnabled(
            list,
            PCTaskRecorderImprovementsFlight::instance().isEnabled(),
            PCTaskRecorderImprovementsFlight::instance().metadataName());

        if (PCTaskRecorderImprovementsFixFlight::instance().isEnabled())
        {
            this.addIfEnabled(
                list,
                PCTaskRecorderImprovementsFixFlight::instance().isEnabled(),
                PCTaskRecorderImprovementsFixFlight::instance().metadataName());
        }

        this.addIfEnabled(
            list,
            PCRuntimeControlModelCompressionFlight::instance().isEnabled(),
            PCRuntimeControlModelCompressionFlight::instance().metadataName());

        this.addIfEnabled(
            list,
            PCTaskRecorderAttributeDisplayValueFixFlight::instance().isEnabled(),
            PCTaskRecorderAttributeDisplayValueFixFlight::instance().metadataName());

        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addIfEnabled</Name>
				<Source><![CDATA[
    private void addIfEnabled(List _list, boolean _isEnabled, str _name)
    {
        using (var a = logger.runtime().feature(_name, _isEnabled))
        {
            if (_isEnabled)
            {
                _list.addEnd(_name);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>