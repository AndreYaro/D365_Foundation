<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirPartyToolTipExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DirPartyToolTipExtension implements DirPartyToolTipExtensible
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>registerToolTipTableList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers messages for toolTip lists.
    /// </summary>
    /// <param name="_toolTipList">
    ///    The Map that contains the toolTip list.
    /// </param>
    public void registerToolTipTableList(Map _toolTipList)
    {
        _toolTipList.insert(tableNum(CustTable), "@SYS24704");
        _toolTipList.insert(tableNum(VendTable), "@SYS9455");
        _toolTipList.insert(tableNum(smmBusRelTable), "@SYS80084");
        _toolTipList.insert(tableNum(HcmWorker), "@SYS92116");
        _toolTipList.insert(tableNum(smmQuotationCompetitorGroup), "@SYS79821");
        _toolTipList.insert(tableNum(smmLeadTable), "@SYS107849");
        _toolTipList.insert(tableNum(smmOpportunityTable), "@SYS102388");
        _toolTipList.insert(tableNum(HcmApplicant), "@SYS30003");
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerExtension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Event handler for the registerExtensionDelegate delegate on DirPartyExtensibilityHelper class.
    /// </summary>
    /// <param name="_helper">
    ///    The DirPartyExtensibilityHelper instance to register the extension with. Extension class
    ///    should call the registerExtension method on it.
    /// </param>
    [SubscribesTo(classstr(DirPartyExtensibilityHelper), delegatestr(DirPartyExtensibilityHelper, registerExtensionDelegate))]
    static void registerExtension(DirPartyExtensibilityHelper _helper)
    {
        DirPartyToolTipExtension extension = new DirPartyToolTipExtension();
        _helper.registerToolTipListExtension(extension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getToolTipImageMethodEmpty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Event handler for the getToolTipImageMethodEmpty delegate on DirPartyExtensibilityHelper class.
    /// </summary>
    /// <param name="common">
    ///    The common instance to check whether a special msg needs to be displayed on the tooltip
    /// </param>
    [SubscribesTo(classstr(DirPartyExtensibilityHelper), delegatestr(DirPartyExtensibilityHelper, getToolTipImageMethodEmpty))]
    static void getToolTipImageMethodEmpty(Common common, EventHandlerResult evtResult)
    {
        if (common.TableId == tableNum(smmOpportunityTable) || common.TableId == tableNum(smmLeadTable))
        {
            // Saving the record will create a new entry in the Global Address Book.
            evtResult.result("@SYS115523");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getToolTipImageWarning</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Event handler for the getToolTipImageWarning delegate on DirPartyExtensibilityHelper class.
    /// </summary>
    /// <param name="common">
    ///    The common instance to check whether a special msg needs to be displayed on the tooltip
    /// </param>
    [SubscribesTo(classstr(DirPartyExtensibilityHelper), delegatestr(DirPartyExtensibilityHelper, getToolTipImageWarning))]
    static void getToolTipImageWarning(Common common, EventHandlerResult evtResult)
    {
        if (common.TableId == tableNum(smmOpportunityTable) && !smmBusRelTable::findByParty(common.(fieldNum(smmOpportunityTable,Party))))
        {
            // The Business Relation is not available for use in the current company. Saving the record will allow the use of this Business Relation in this company
            evtResult.result("@SYS115524");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>