<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocReceivedXmlSetHelper_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class responsible to create a map of received XMLs per Fiscal Establishment, given a set of received XMLs
/// </summary>
class EFDocReceivedXmlSetHelper_BR
{
    Set selectedReceivedXmls;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addToMapAsSet</Name>
				<Source><![CDATA[
        private static void addToMapAsSet(Map _map, anytype _key, EFDocumentReceivedXml_BR _value)
    {
        Set localSet;

        if (!_map)
        {
            return;
        }

        if (!_map.exists(_key))
        {
            localSet = new Set(Types::Record);

            localSet.add(_value);

            _map.insert(_key, localSet);
        }
        else
        {
            localSet = _map.lookup(_key);

            localSet.add(_value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReceivedXmlsPerFiscalEstablishment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a map of received XMLs per fiscal establishment based on a set of received XMLs record
    /// </summary>
    /// <param name="_receivedXmls">
    /// The received XMl set that will generate the map
    /// </param>
    /// <returns>
    /// A Map of received XMLs per fiscal establishment
    /// </returns>
    public static Map getReceivedXmlsPerFiscalEstablishment(Set _receivedXmls)
    {
        Map                         selectedRecordsPerFiscalEstablishment = new Map(Types::Int64, Types::Class);
        SetEnumerator               selectedReceivedXmlsEnum = _receivedXmls.getEnumerator();
        EFDocumentReceivedXML_BR    curReceivedXml;

        while (selectedReceivedXmlsEnum.moveNext())
        {
            curReceivedXml = selectedReceivedXmlsEnum.current();

            EFDocReceivedXmlSetHelper_BR::addToMapAsSet(selectedRecordsPerFiscalEstablishment, curReceivedXml.FiscalEstablishment_BR, curReceivedXml);
        }

        return selectedRecordsPerFiscalEstablishment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReceivedXmlsPerIbge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a map of received XMLs per IBGE code based on a set of received XMLs record
    /// </summary>
    /// <param name="_receivedXmls">
    /// The received XMl set that will generate the map
    /// </param>
    /// <returns>
    /// A Map of received XMLs per IBGE code
    /// </returns>
    public static Map getReceivedXmlsPerIbge(Set _receivedXmls)
    {
        SetEnumerator               receivedXmlsEnumerator  = _receivedXmls.getEnumerator();
        EFDocumentReceivedXML_BR    receivedXml;
        StateIBGECode_BR            receivedXmlIbgeCode;
        Map                         receivedXmlsPerIbgeCodeMap = new Map(Types::String, Types::Class);

        while (receivedXmlsEnumerator.moveNext())
        {
            receivedXml = receivedXmlsEnumerator.current();

            receivedXmlIbgeCode = EFDocAccessKeyBase_BR::getIbgeCode(receivedXml.AccessKey);

            EFDocReceivedXmlSetHelper_BR::addToMapAsSet(receivedXmlsPerIbgeCodeMap, receivedXmlIbgeCode, receivedXml);
        }

        return receivedXmlsPerIbgeCodeMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>