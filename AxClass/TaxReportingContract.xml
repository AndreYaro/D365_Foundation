<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportingContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract <c>TaxReportingContract</c> class for <c>TaxReporting</c> SSRS report.
/// </summary>
/// <remarks>
/// <c>TaxReportingContract</c> class is the Data Contract for the <c>TaxReporting</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute
]
public class TaxReportingContract
{
    boolean includeDetails;
    TaxRepVersion taxRepVersion;
    TaxPeriod taxPeriod;
    TransDate fromDate;
    TransDate toDate;
    TaxVersion taxRepCounter;
    TransDate transDate;
    Voucher voucher;
    NoYes taxReported;

    // <GIN>
    TaxType_IN                taxType;
    RefRecId                  taxRegNumberRecId;
    TaxRegistrationNumber_IN  taxRegistrationNumber;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the data contract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter FromDate.
    /// </returns>
    [DataMemberAttribute('FromDate')]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter IncludeDetails.
    /// </summary>
    /// <param name="_includeDetails">
    /// The new value of the datacontract parameter IncludeDetails; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter IncludeDetails
    /// </returns>
    [
        DataMemberAttribute('IncludeDetails'),
        SysOperationLabelAttribute(literalstr("@SYS316360"))
    ]
    public boolean parmIncludeDetails(boolean _includeDetails = includeDetails)
    {
        includeDetails = _includeDetails;
        return includeDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxPeriod.
    /// </summary>
    /// <param name="_taxPeriod">
    /// The new value of the datacontract parameter TaxPeriod; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxPeriod
    /// </returns>
    [DataMemberAttribute('TaxPeriod')]
    public TaxPeriod parmTaxPeriod(TaxPeriod _taxPeriod = taxPeriod)
    {
        taxPeriod = _taxPeriod;
        return taxPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRegistrationNumber_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter TaxRegistrationNumber.
    /// </summary>
    /// <param name="_taxRegistrationNumber">
    /// The new value of the data contract parameter TaxRegistrationNumber; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter TaxRegistrationNumber.
    /// </returns>
    [DataMemberAttribute('TaxRegistrationNumber')]
    public TaxRegistrationNumber_IN parmTaxRegistrationNumber_IN(TaxRegistrationNumber_IN _taxRegistrationNumber = taxRegistrationNumber)
    {
        taxRegistrationNumber = _taxRegistrationNumber;
        return taxRegistrationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRegNumberRecId_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter TaxRegNumberRecId.
    /// </summary>
    /// <param name="_taxRegNumberRecId">
    /// The new value of the data contract parameter TaxRegNumberRecId; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter TaxRegNumberRecId.
    /// </returns>
    [DataMemberAttribute('TaxRegNumberRecId')]
    public RefRecId parmTaxRegNumberRecId_IN(RefRecId _taxRegNumberRecId = taxRegNumberRecId)
    {
        taxRegNumberRecId = _taxRegNumberRecId;
        return taxRegNumberRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRepCounter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxRepCounter.
    /// </summary>
    /// <param name="_taxRepCounter">
    /// The new value of the datacontract parameter TaxRepCounter; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxRepCounter
    /// </returns>
    [DataMemberAttribute('TaxRepCounter')]
    public TaxVersion parmTaxRepCounter(TaxVersion _taxRepCounter = taxRepCounter)
    {
        taxRepCounter = _taxRepCounter;
        return taxRepCounter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxReported</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxReported.
    /// </summary>
    /// <param name="_taxReported">
    /// The new value of the datacontract parameter TaxReported; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxReported
    /// </returns>
    [DataMemberAttribute('TaxReported')]
    public NoYes parmTaxReported(NoYes _taxReported = taxReported)
    {
        taxReported = _taxReported;
        return taxReported;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRepVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxRepVersion.
    /// </summary>
    /// <param name="_taxRepVersion">
    /// The new value of the datacontract parameter TaxRepVersion; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxRepVersion
    /// </returns>
    [DataMemberAttribute('TaxRepVersion')]
    public TaxRepVersion parmTaxRepVersion(TaxRepVersion _taxRepVersion = taxRepVersion)
    {
        taxRepVersion = _taxRepVersion;
        return taxRepVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxType_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter TaxType_IN.
    /// </summary>
    /// <param name="_taxType">
    /// The new value of the data contract parameter TaxType_IN; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter TaxType_IN.
    /// </returns>
    [DataMemberAttribute('TaxType_IN')]
    public TaxType_IN parmTaxType_IN(TaxType_IN _taxType = taxType)
    {
        taxType = _taxType;
        return taxType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate
    /// </returns>
    [DataMemberAttribute('ToDate')]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TransDate.
    /// </summary>
    /// <param name="_transDate">
    /// The new value of the datacontract parameter TransDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TransDate
    /// </returns>
    [DataMemberAttribute('TransDate')]
    public TransDate parmTransDate(TransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Voucher.
    /// </summary>
    /// <param name="_voucher">
    /// The new value of the datacontract parameter Voucher; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Voucher
    /// </returns>
    [DataMemberAttribute('Voucher')]
    public Voucher parmVoucher(Voucher _voucher = voucher)
    {
        voucher = _voucher;
        return voucher;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>