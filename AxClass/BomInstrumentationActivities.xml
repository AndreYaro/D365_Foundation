<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BomInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Bom instrumentation activities.
/// </summary>
internal final class BomInstrumentationActivities
{
    public const str BomPrefix = 'BOM.';

    private const str   ApproveVersion      = 'ApproveVersion';
    private const str   ActivateVersion     = 'ActivateVersion';
    private const str   circularityCheck    = 'CircularityCheck';
    public const str    BOMLevelCalc        = 'LevelCalc';
    public const str    ReqBOMLevelCalc     = 'ReqLevelCalc';
    private const str   bomJournalCircularityCheck = 'BOMReportFinishCircularityCheck';

    private BomInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(BomInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static BomInstrumentationActivities newFromLogger(BomInstrumentationLogger _logger)
    {
        return new BomInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>approveVersion</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext approveVersion ()
    {
        SysInstrumentationActivity activity = logger.activity(BomPrefix + ApproveVersion);
               
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activateVersion</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext activateVersion ()
    {
        SysInstrumentationActivity activity = logger.activity(BomPrefix + ActivateVersion);
               
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>circularityCheck</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext circularityCheck()
    {
        SysInstrumentationActivity activity = logger.activity(BomPrefix + circularityCheck);
               
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>levelCalc</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext levelCalc()
    {
        SysInstrumentationActivity activity = logger.activity(BomPrefix + BOMLevelCalc);
               
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reqLevelCalc</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext reqLevelCalc()
    {
        SysInstrumentationActivity activity = logger.activity(BomPrefix + ReqBOMLevelCalc);
               
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomReportFinishCircularityDetector</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext bomReportFinishCircularityDetector()
    {
        SysInstrumentationActivity activity = logger.activity(BomPrefix + bomJournalCircularityCheck);

        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>