<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventLookupItemIdByDefaultOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventLookupItemIdByDefaultOrder extends InventLookup
{
    ItemGroupId          itemGroupId;
    QueryBuildDataSource inventItemIdLookupSimpleViewQueryBuildDataSource;
    boolean              showRoute;
    boolean              selectOnlyItems;
    Set                  allowedPmfProductTypes;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQueryByDefaultOrderSetting</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a query on the <c>InventTable</c> table that is filtered by the default order type.
    /// </summary>
    /// <param name="_filterDefaultOrderSetting">
    ///    The parameter on which to filter the query.
    /// </param>
    /// <returns>
    ///    The filtered query.
    /// </returns>
    public Query getQueryByDefaultOrderSetting(ReqPOType _filterDefaultOrderSetting)
    {
        this.initializeQuery();

        this.filterOnlyInventoried();
        this.filterDefaultOrderType(_filterDefaultOrderSetting);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterDefaultOrderType</Name>
				<Source><![CDATA[
    private void filterDefaultOrderType(ReqPOType _defaultOrderSetting)
    {
        inventItemIdLookupSimpleViewQueryBuildDataSource.addRange(fieldNum(InventItemIdLookupSimpleView, DefaultOrderType))
                                                        .value(queryValue(_defaultOrderSetting));
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterOnlyInventoried</Name>
				<Source><![CDATA[
    private void filterOnlyInventoried()
    {
        InventInventoriedPolicy::addInventoriedRangeToInventTable(inventItemIdLookupSimpleViewQueryBuildDataSource);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryByItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a query on the <c>InventTable</c> table that is filtered by the item group id.
    /// </summary>
    /// <returns>
    ///    The filtered query.
    /// </returns>
    public Query getQueryByItemGroup()
    {
        this.initializeQuery();

        if (this.parmShowRoute())
        {
            this.filterBomRouteItemTypes();
            this.filterOnlyInventoried();
        }

        ItemGroupId itemGroupIdParameter = this.parmItemGroupId() ? this.parmItemGroupId() : guid2Str(newGuid());
        this.filterItemGroupId(itemGroupIdParameter);
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterBomRouteItemTypes</Name>
				<Source><![CDATA[
    private void filterBomRouteItemTypes()
    {
        ListEnumerator enumerator = InventItemType::getBomRouteItemTypes(false, this.parmShowRoute()).getEnumerator();

        while (enumerator.moveNext())
        {
            ItemType itemType = enumerator.current();
            this.filterItemType(itemType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterItemGroupId</Name>
				<Source><![CDATA[
    private void filterItemGroupId(ItemGroupId _itemGroupId)
    {
        inventItemIdLookupSimpleViewQueryBuildDataSource.addRange(fieldNum(InventItemIdLookupSimpleView, ItemGroupId))
                                                        .value(queryValue(_itemGroupId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventLookupItemIdByDefaultOrder</c> class.
    /// </summary>
    /// <param name="_lookupCtrl">
    ///    The currently selected form control.
    /// </param>
    /// <param name="_selectOnlyItems">
    ///    A Boolean value that indicates whether the lookup will only return records of type items from the
    ///    <c>InventTable</c> table.
    /// </param>
    /// <param name="_activeTab">
    ///    The tab that should be active by default.
    /// </param>
    /// <param name="_allowedPmfProductTypes">
    ///    A set containing the allowed PmfProductType enum values; optional.
    /// </param>
    protected void new(
        Object _lookupCtrl,
        boolean _selectOnlyItems,
        InventItemLookupDefaultTab _activeTab = InventItemLookupDefaultTab::TabProduction,
        Set _allowedPmfProductTypes = null)
    {
        selectOnlyItems = _selectOnlyItems;
        allowedPmfProductTypes = _allowedPmfProductTypes;

        this.initializeQuery();

        super(_lookupCtrl, query, formStr(InventItemIdLookupByDefaultOrderSetting));
        args.parmEnumeration(_activeTab);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a query on the <c>InventItemIdLookupSimpleView</c> table that is filtered by the item id.
    /// </summary>
    protected void initializeQuery()
    {
        query = new Query();
        inventItemIdLookupSimpleViewQueryBuildDataSource = query.addDataSource(tableNum(InventItemIdLookupSimpleView));
        inventItemIdLookupSimpleViewQueryBuildDataSource.addSortField(fieldNum(InventItemIdLookupSimpleView, ItemId));
        inventItemIdLookupSimpleViewQueryBuildDataSource.firstFast(true);

        if (selectOnlyItems)
        {
            this.filterItemType(ItemType::Item);
        }

        this.filterProductTypes(allowedPmfProductTypes);

        if (FeatureStateProvider::isFeatureEnabled(EcoResProductTranslationFallbackFeature::instance()) && EcoResProductParameters::find().UseFallbackTranslation)
        {
            inventItemIdLookupSimpleViewQueryBuildDataSource.addRange(fieldNum(InventItemIdLookupSimpleView, LanguageId)).value(EcoResProductParametersFallbackLanguage::getSelectedFallbackLanguage());
            inventItemIdLookupSimpleViewQueryBuildDataSource.addRange(fieldNum(InventItemIdLookupSimpleView, LanguageId)).value(SysQuery::valueEmptyString());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterItemType</Name>
				<Source><![CDATA[
    private void filterItemType(ItemType _itemType)
    {
        inventItemIdLookupSimpleViewQueryBuildDataSource.addRange(fieldNum(InventItemIdLookupSimpleView, ItemType))
                                                        .value(queryValue(_itemType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterProductTypes</Name>
				<Source><![CDATA[
    private void filterProductTypes(Set _allowedPmfProductTypes)
    {
        if (#PMFEnabled && _allowedPmfProductTypes && _allowedPmfProductTypes.elements() > 0)
        {
            SetEnumerator setEnumerator = _allowedPmfProductTypes.getEnumerator();
            while (setEnumerator.moveNext())
            {
                PmfProductType productType = setEnumerator.current();
                inventItemIdLookupSimpleViewQueryBuildDataSource.addRange(fieldNum(InventItemIdLookupSimpleView, PmfProductType))
                                                                .value(queryValue(productType));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemGroupId</Name>
				<Source><![CDATA[
    ItemGroupId parmItemGroupId(ItemGroupId _itemGroupId = itemGroupId)
    {
        if (!prmisDefault(_itemGroupId))
        {
            itemGroupId = _itemGroupId;
        }

        return itemGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowRoute</Name>
				<Source><![CDATA[
    boolean parmShowRoute(boolean _showRoute = false)
    {
        if (!prmisDefault(_showRoute))
        {
            showRoute = _showRoute;
        }

        return showRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLookupCtrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>InventLookupItemIdByDefaultOrder</c> class.
    /// </summary>
    /// <param name="_lookupCtrl">
    /// The currently selected form control.
    /// </param>
    /// <param name="_selectOnlyItems">
    /// If true the lookup will only select items of type item from <c>InventTable</c>.
    /// </param>
    /// <param name="_activeTab">
    /// The tab that should be active by default.
    /// </param>
    /// <param name="_allowedPmfProductTypes">
    ///    A set containing the allowed PmfProductType enum values; optional.
    /// </param>
    /// <returns>
    /// A new instance of the <c>InventLookupItemIdByDefaultOrder</c> class.
    /// </returns>
    static public InventLookupItemIdByDefaultOrder newLookupCtrl(
        Object _lookupCtrl,
        boolean _selectOnlyItems,
        InventItemLookupDefaultTab _activeTab = InventItemLookupDefaultTab::TabProduction,
        Set _allowedPmfProductTypes = null)
    {
        return new InventLookupItemIdByDefaultOrder(_lookupCtrl, _selectOnlyItems, _activeTab, _allowedPmfProductTypes);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>