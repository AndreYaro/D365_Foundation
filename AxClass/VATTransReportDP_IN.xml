<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VATTransReportDP_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Report Data Provider <c>VATTransReportDP_IN</c> class for <c>VATTransReport_IN</c> report.
/// </summary>
[
    SRSReportParameterAttribute(classstr(SrsTmpTblMarshallerContract))
]
class VATTransReportDP_IN extends SRSReportDataProviderBase
{
    TmpVATInquiryTable_IN tmpVATInquiryTable_IN;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTmpVATInquiryTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes temporary table.
    /// </summary>
    /// <returns>
    /// Returns temporary table <c>TmpVATInquiryTable_IN</c>.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(TmpVATInquiryTable_IN))
    ]
    public TmpVATInquiryTable_IN getTmpVATInquiryTable_IN()
    {
        return tmpVATInquiryTable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    public void processReport()
    {
         SrsReportRunPermission  permission;
         RecId                   tmpTableDataRecId;

         SrsTmpTblMarshallerContract contract = this.parmDataContract() as SrsTmpTblMarshallerContract;

         tmpTableDataRecId = contract.parmTmpTableDataRecId();
         permission        = new SrsReportRunPermission();
         permission.assert();

         //Temp Table Object that was returned from SRSTmpTblMarshaller
         tmpVATInquiryTable_IN = SRSTmpTblMarshaller::GetTmpTbl(tmpTableDataRecId);
         SRSTmpTblMarshaller::deleteTmpTblData(tmpTableDataRecId);
         CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
