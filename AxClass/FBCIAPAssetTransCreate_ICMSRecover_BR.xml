<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBCIAPAssetTransCreate_ICMSRecover_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Creates the ICMS recover transaction
/// </summary>
class FBCIAPAssetTransCreate_ICMSRecover_BR extends FBCIAPAssetTransCreate_BR
{
    FBCIAPAssetTable_BR fbCIAPAssetTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
        public void create()
    {
        FBCIAPCreditCalc_BR ciapCreditCalc;

        if (this.existsNonBookedFiscalDocuments())
            return;

        if (this.existsTransactionsOnALaterPeriod())
            return;

        ciapCreditCalc = FBCIAPCreditCalc_BR::construct(this.parmCIAPAssetTable());

        fbCIAPAssetTrans.FBCIAPAssessment_BR    = ciapAssessment.RecId;
        fbCIAPAssetTrans.FBCIAPAssetTable_BR    = this.parmCIAPAssetTable().RecId;
        fbCIAPAssetTrans.TransType              = FBCIAPAssetTransType_BR::SIICMSCredit;
        fbCIAPAssetTrans.TransDate              = ciapAssessment.FromDate();
        fbCIAPAssetTrans.ICMSAmount             = fbCIAPAssetTable.ICMSAmount;
        fbCIAPAssetTrans.ICMSSTAmount           = fbCIAPAssetTable.ICMSSTAmount;
        fbCIAPAssetTrans.ICMSDiffAmount         = fbCIAPAssetTable.ICMSDiffAmount;
        fbCIAPAssetTrans.ICMSFreightAmount      = fbCIAPAssetTable.ICMSFreightAmount;
        fbCIAPAssetTrans.InstallmentAmount      = ciapCreditCalc.calc();
        fbCIAPAssetTrans.InstallmentNum         = ciapCreditCalc.installmentNum();

        if (!fbCIAPAssetTrans.InstallmentAmount)
        {
            throw error("@SYS4001798");
        }

        fbCIAPAssetTrans.insert();

        if (fbCIAPAssetTrans.InstallmentNum == this.parmCIAPAssetTable().Installments)
        {
            this.createEndOfCreditTransaction();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createEndOfCreditTransaction</Name>
				<Source><![CDATA[
        private void createEndOfCreditTransaction()
    {
        fbCIAPAssetTrans.clear();
        fbCIAPAssetTrans.FBCIAPAssessment_BR    = ciapAssessment.RecId;
        fbCIAPAssetTrans.FBCIAPAssetTable_BR    = this.parmCIAPAssetTable().RecId;
        fbCIAPAssetTrans.TransType              = FBCIAPAssetTransType_BR::BA;
        fbCIAPAssetTrans.TransDate              = ciapAssessment.FromDate();
        fbCIAPAssetTrans.insert();

        this.updateCIAPTable(FBCIAPAssetStatus_BR::Closed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsNonBookedFiscalDocuments</Name>
				<Source><![CDATA[
        private boolean existsNonBookedFiscalDocuments()
    {
        boolean ok = true;
        FiscalDocument_BR fiscalDocument;
        FiscalDocumentLine_BR fiscalDocumentLine;
        FBBookingPeriodFiscalDocument_BR bookingPeriodFiscalDocument;

        select RecId from fiscalDocument
            where fiscalDocument.AccountingDate >= ciapAssessment.FromDate && fiscalDocument.AccountingDate <= ciapAssessment.ToDate
            exists join fiscalDocumentLine
                where fiscalDocumentLine.FiscalDocument == fiscalDocument.RecId
                    && fiscalDocumentLine.AssetId == fbCIAPAssetTable.AssetTable
            notExists join bookingPeriodFiscalDocument
                where bookingPeriodFiscalDocument.FiscalDocument_BR == fiscalDocument.RecId
                    && bookingPeriodFiscalDocument.FBBookingPeriod_BR == bookingPeriod.RecId;

        return fiscalDocument.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsTransactionsOnALaterPeriod</Name>
				<Source><![CDATA[
        private boolean existsTransactionsOnALaterPeriod()
    {
        boolean ok = true;

        FBCIAPAssessment_BR laterCiapAssessment;
        FBCIAPAssetTrans_BR ciapAssetTrans;

        select firstOnly RecId from ciapAssetTrans
            where ciapAssetTrans.FBCIAPAssetTable_BR == this.parmCIAPAssetTable().RecId
            exists join laterCiapAssessment
                where laterCiapAssessment.RecId == ciapAssetTrans.FBCIAPAssessment_BR
                    && laterCiapAssessment.FromDate > ciapAssessment.FromDate;

        return ciapAssetTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCIAPAssetTable</Name>
				<Source><![CDATA[
        public FBCIAPAssetTable_BR parmCIAPAssetTable(FBCIAPAssetTable_BR _fbCIAPAssetTable = fbCIAPAssetTable)
    {
        fbCIAPAssetTable = _fbCIAPAssetTable;

        return fbCIAPAssetTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCIAPTable</Name>
				<Source><![CDATA[
        private void updateCIAPTable(FBCIAPAssetStatus_BR _status)
    {
        fbciapAssetTable.Status = _status;

        if (fbciapAssetTable.RecId)
        {
            fbciapAssetTable.selectForUpdate(true);
            fbciapAssetTable.update();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>