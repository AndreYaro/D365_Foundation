<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPurchSummaryFields</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesPurchSummaryFields
{
    container               selectedFieldIdList;
    container               notSelectedFieldIdList;
    int                     selectedNumber;
    int                     notSelectedNumber;
    boolean                 selectedFieldsInitialized;
    boolean                 notSelectedFieldsInitialized;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addFieldAllowed</Name>
				<Source><![CDATA[
    boolean addFieldAllowed(FieldId _fieldId)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>autoSummary</Name>
				<Source><![CDATA[
    AutoSummary autoSummary(SalesPurchTable _salesPurchTable, int _moduleType = ModuleInventCustVend::Invent)
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>autoSummaryFieldId</Name>
				<Source><![CDATA[
    FieldId autoSummaryFieldId()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    DocumentStatus documentStatus()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmTable_OrderId</Name>
				<Source><![CDATA[
    FieldId fieldNumParmTable_OrderId()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmTable_ParmId</Name>
				<Source><![CDATA[
    FieldId fieldNumParmTable_ParmId()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmTable_TableRefId</Name>
				<Source><![CDATA[
    FieldId fieldNumParmTable_TableRefId()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumSalesPurchParmTable_InvProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ID of the RU country specific field Inventory profile for sorting.
    /// </summary>
    /// <returns>
    /// The ID of the RU country specific field Inventory profile for sorting.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method was not overridden.
    /// </exception>
    public FieldId fieldNumSalesPurchParmTable_InvProfileId()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumSalesPurchParmTable_InvProfiType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ID of the RU country specific field Kind of activity for sorting.
    /// </summary>
    /// <returns>
    /// The ID of the RU country specific field for sorting.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method was not overridden.
    /// </exception>
    public FieldId fieldNumSalesPurchParmTable_InvProfiType()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumSalesPurchParmTable_JobStatus</Name>
				<Source><![CDATA[
    FieldId fieldNumSalesPurchParmTable_JobStatus()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initNotSelected</Name>
				<Source><![CDATA[
    void initNotSelected()
    {
        notSelectedNumber = 0;

        if (!notSelectedFieldsInitialized)
        {
            notSelectedFieldIdList = this.notSelectedFieldIdList();
            notSelectedFieldsInitialized = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSelected</Name>
				<Source><![CDATA[
    void initSelected()
    {
        selectedNumber = 0;

        if (!selectedFieldsInitialized)
        {
            selectedFieldIdList = this.selectedFieldIdList();
            selectedFieldsInitialized = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>invalidateItemCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Invalidates the selected and not selected item caches.
    /// </summary>
    /// <remarks>
    /// This method should be utilized when items have been added or removed from the selected and not selected lists.
    /// </remarks>
    public void invalidateItemCache()
    {
        selectedFieldsInitialized = false;
        notSelectedFieldsInitialized = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextNotSelected</Name>
				<Source><![CDATA[
    FieldId nextNotSelected()
    {
        FieldId fieldId = 0;

        notSelectedNumber ++;

        if (notSelectedNumber <= conlen(notSelectedFieldIdList))
        {
            fieldId = conpeek(notSelectedFieldIdList, notSelectedNumber);
        }

        return fieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextSelected</Name>
				<Source><![CDATA[
    FieldId nextSelected()
    {
        FieldId fieldId = 0;

        selectedNumber ++;

        if (selectedNumber <= conlen(selectedFieldIdList))
        {
            fieldId = conpeek(selectedFieldIdList, selectedNumber);
        }

        return fieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>notSelectedFieldIdList</Name>
				<Source><![CDATA[
    public container notSelectedFieldIdList()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeFieldAllowed</Name>
				<Source><![CDATA[
    boolean removeFieldAllowed(fieldId _fieldId)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedFieldIdList</Name>
				<Source><![CDATA[
    public container selectedFieldIdList()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>sortingParmTabeleFieldIdList_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ID's of the RU country specific fields for sorting.
    /// </summary>
    /// <returns>
    /// The ID's of the RU country specific fields for sorting.
    /// </returns>
    public container sortingParmTabeleFieldIdList_RU()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumParentForSalesPurchParmTable_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ID of the parent table to that the RU country specific table should be linked.
    /// </summary>
    /// <returns>
    /// The ID of the parent table to that the RU country specific table should be linked.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method was not overridden.
    /// </exception>
    public TableId tableNumParentForSalesPurchParmTable_RU()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumParmLine</Name>
				<Source><![CDATA[
    TableId tableNumParmLine()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumParmTable</Name>
				<Source><![CDATA[
    TableId tableNumParmTable()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumSalesPurchParmTable</Name>
				<Source><![CDATA[
    TableId tableNumSalesPurchParmTable()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumSalesPurchParmTable_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ID of the table that stores the RU country specific field.
    /// </summary>
    /// <returns>
    /// The ID of the table that stores the RU country specific field.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method was not overridden.
    /// </exception>
    public TableId tableNumSalesPurchParmTable_RU()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>