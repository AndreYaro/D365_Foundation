<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTaskDataContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used as a contract class to pass project and quotation task server side values to client side scripts.
/// </summary>
[DataContractAttribute]
class ProjTaskDataContract
{
    str                     id;
    str                     parentId;
    smmActivityNumber       activityNumber;
    ProjTaskName            name;
    smmActivityTaskTimeType tasktype;
    smmActivityClosed       closed;
    Hours                   effort;
    str                     category;
    SchedFromDate           startdate;
    SchedToDate             enddate;
    Hours                   duration;
    Hours                   effortAtComplete;
    RecId                   recId;
    Hours                   actualEffort;
    ProjTotalCostAmount     costAtComplete;
    ProjTotalCostAmount     actualCost;
    ProjTotalCostAmount     cost;
    ProjTotalCostAmount     costPrice;
    int                     numResource;
    ResourceCategoryRecId   resourceCategoryRecId;
    str                     assignedResourcesStr;
    str                     assignedResourcesRecId;
    str                     assignedResourcesOriginalRecId;
    str                     schedulingStatus;
    Hours                   remainingHours;
    int                     totalAssignedActivityResources;
    int                     totalAssignedPlannedResources;
    boolean                 hasDraftAssignment;
    boolean                 hasDraftCancelAssignment;
    List                    predecessorsData;
    Hours                   assignedHours;
    HierarchyIdBase         hierarchyId;
    int                     siblingNumber;
    ProjTaskDiffType        differenceType;
    smmActivityUserMemo     userMemo;
    str                     billingMilestoneExists;
    str                     canBillingMilestoneComplete;
    str                     billingMilestoneComplete;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("id")]
    public str parmId(str _id = id)
    {
        if (!prmIsDefault(_id))
        {
            id = _id;
        }
        return id;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActivityNumber</Name>
				<Source><![CDATA[
    [DataMemberAttribute("activityNumber")]
    public str parmActivityNumber(str _activityNumber = activityNumber)
    {
        if (!prmIsDefault(_activityNumber))
        {
            activityNumber = _activityNumber;
        }
        return activityNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHierarchyId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("hierarchyId")]
    public HierarchyIdBase parmHierarchyId(HierarchyIdBase _hierarchyId = hierarchyId)
    {
        if (!prmIsDefault(_hierarchyId))
        {
            hierarchyId = _hierarchyId;
        }
        return hierarchyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostPrice</Name>
				<Source><![CDATA[
    [DataMemberAttribute("costPrice")]
    public ProjTotalCostAmount parmCostPrice(ProjTotalCostAmount _costPrice = costPrice)
    {
        if (!prmIsDefault(_costPrice))
        {
            costPrice = _costPrice;
        }
        return costPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaskType</Name>
				<Source><![CDATA[
    [DataMemberAttribute("taskType")]
    public smmActivityTaskTimeType parmTaskType(smmActivityTaskTimeType _taskType = taskType)
    {
        if (!prmIsDefault(_taskType))
        {
            taskType = _taskType;
        }
        return taskType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClosed</Name>
				<Source><![CDATA[
    [DataMemberAttribute("closed")]
    public smmActivityClosed parmClosed(smmActivityClosed _closed = closed)
    {
        if (!prmIsDefault(_closed))
        {
            closed = _closed;
        }
        return closed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParentId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("parentId")]
    public str parmParentId(str _parentId = parentId)
    {
        if (!prmIsDefault(_parentId))
        {
            parentId = _parentId;
        }
        return parentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    [DataMemberAttribute("name")]
    public ProjTaskName parmName(ProjTaskName _name = name)
    {
        if (!prmIsDefault(_name))
        {
            name = _name;
        }
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategory</Name>
				<Source><![CDATA[
    [DataMemberAttribute("category")]
    public str parmCategory(str _category = category)
    {
        if (!prmIsDefault(_category))
        {
            category = _category;
        }
        return category;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEffort</Name>
				<Source><![CDATA[
    [DataMemberAttribute("effort")]
    public Hours parmEffort(Hours _effort = effort)
    {
        if (!prmIsDefault(_effort))
        {
            effort = _effort;
        }
        return effort;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActualEffort</Name>
				<Source><![CDATA[
    [DataMemberAttribute("actualEffort")]
    public Hours parmActualEffort(Hours _actualEffort = actualEffort)
    {
        if (!prmIsDefault(_actualEffort))
        {
            actualEffort = _actualEffort;
        }
        return actualEffort;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEffortAtComplete</Name>
				<Source><![CDATA[
    [DataMemberAttribute("effortAtComplete")]
    public Hours parmEffortAtComplete(Hours _effortAtComplete = effortAtComplete)
    {
        if (!prmIsDefault(_effortAtComplete))
        {
            effortAtComplete = _effortAtComplete;
        }
        return effortAtComplete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActualCost</Name>
				<Source><![CDATA[
    [DataMemberAttribute("actualCost")]
    public ProjTotalCostAmount parmActualCost(ProjTotalCostAmount _actualCost = actualCost)
    {
        if (!prmIsDefault(_actualCost))
        {
            actualCost = _actualCost;
        }
        return actualCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCost</Name>
				<Source><![CDATA[
    [DataMemberAttribute("cost")]
    public ProjTotalCostAmount parmCost(ProjTotalCostAmount _cost = cost)
    {
        if (!prmIsDefault(_cost))
        {
            cost = _cost;
        }
        return cost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostAtComplete</Name>
				<Source><![CDATA[
    [DataMemberAttribute("costAtComplete")]
    public ProjTotalCostAmount parmCostAtComplete(ProjTotalCostAmount _costAtComplete = costAtComplete)
    {
        if (!prmIsDefault(_costAtComplete))
        {
            costAtComplete = _costAtComplete;
        }
        return costAtComplete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute("startDate")]
    public SchedFromDate parmStartDate(SchedFromDate _startDate = startDate)
    {
        if (!prmIsDefault(_startDate))
        {
            startDate = _startDate;
        }
        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute("endDate")]
    public SchedFromDate parmEndDate(SchedToDate _endDate = endDate)
    {
        if (!prmIsDefault(_endDate))
        {
            endDate = _endDate;
        }
        return endDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDuration</Name>
				<Source><![CDATA[
    [DataMemberAttribute("duration")]
    public Hours parmDuration(Hours _duration = duration)
    {
        if (!prmIsDefault(_duration))
        {
            duration = _duration;
        }
        return duration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("recId")]
    public RecId parmRecId(RecId _recId = recId)
    {
        if (!prmIsDefault(_recId))
        {
            recId = _recId;
        }
        return recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumResources</Name>
				<Source><![CDATA[
    [DataMemberAttribute("numResources")]
    public int parmNumResources(int _numResource = numResource)
    {
        if (!prmIsDefault(_numResource))
        {
            numResource = _numResource;
        }
        return numResource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceCategoryRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("resourceCategoryRecId")]
    public int64 parmResourceCategoryRecId(ResourceCategoryRecId _resourceCategoryRecId = resourceCategoryRecId)
    {
        if (!prmIsDefault(_resourceCategoryRecId))
        {
            resourceCategoryRecId = _resourceCategoryRecId;
        }

        return resourceCategoryRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssignedResourcesStr</Name>
				<Source><![CDATA[
    [DataMemberAttribute("assignedResourcesStr")]
    public str parmAssignedResourcesStr(str _assignedResourcesStr = assignedResourcesStr)
    {
        if (!prmIsDefault(_assignedResourcesStr))
        {
            assignedResourcesStr = _assignedResourcesStr;
        }
        return assignedResourcesStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssignedResourcesRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("assignedResourcesRecId")]
    public str parmAssignedResourcesRecId(str _assignedResourcesRecId = assignedResourcesRecId)
    {
        if (!prmIsDefault(_assignedResourcesRecId))
        {
            assignedResourcesRecId = _assignedResourcesRecId;
        }
        return assignedResourcesRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssignedResourcesOriginalRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("assignedResourcesOriginalRecId")]
    public str parmAssignedResourcesOriginalRecId(str _assignedResourcesOriginalRecId = assignedResourcesOriginalRecId)
    {
        if (!prmIsDefault(_assignedResourcesOriginalRecId))
        {
            assignedResourcesOriginalRecId = _assignedResourcesOriginalRecId;
        }
        return assignedResourcesOriginalRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSchedulingStatus</Name>
				<Source><![CDATA[
    [DataMemberAttribute("schedulingStatus")]
    public str parmSchedulingStatus(str _schedulingStatus = schedulingStatus)
    {
        if (!prmIsDefault(_schedulingStatus))
        {
            schedulingStatus = _schedulingStatus;
        }
        return schedulingStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainingHours</Name>
				<Source><![CDATA[
    [DataMemberAttribute("remainingHours")]
    public Hours parmRemainingHours(Hours _remainingHours = remainingHours)
    {
        if (!prmIsDefault(_remainingHours))
        {
            remainingHours = _remainingHours;
        }
        return remainingHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHasDraftAssignment</Name>
				<Source><![CDATA[
    [DataMemberAttribute("hasDraftAssignment")]
    public boolean parmHasDraftAssignment(boolean _hasDraftAssignment = hasDraftAssignment)
    {
        if (!prmIsDefault(_hasDraftAssignment))
        {
            hasDraftAssignment = _hasDraftAssignment;
        }
        return hasDraftAssignment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalAssignedActivityResources</Name>
				<Source><![CDATA[
    [DataMemberAttribute("totalAssignedActivityResources")]
    public int parmTotalAssignedActivityResources(int _totalAssignedActivityResources = totalAssignedActivityResources)
    {
        if (!prmIsDefault(_totalAssignedActivityResources))
        {
            totalAssignedActivityResources = _totalAssignedActivityResources;
        }
        return totalAssignedActivityResources;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalAssignedPlannedResources</Name>
				<Source><![CDATA[
    [DataMemberAttribute("totalAssignedPlannedResources")]
    public int parmTotalAssignedPlannedResources(int _totalAssignedPlannedResources = totalAssignedPlannedResources)
    {
        if (!prmIsDefault(_totalAssignedPlannedResources))
        {
            totalAssignedPlannedResources = _totalAssignedPlannedResources;
        }
        return totalAssignedPlannedResources;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPredecessorsData</Name>
				<Source><![CDATA[
    [DataMemberAttribute("predecessors")]
    public List parmPredecessorsData(List _predecessorsData = predecessorsData)
    {
        if (!prmIsDefault(_predecessorsData))
        {
            predecessorsData = _predecessorsData;
        }
        return predecessorsData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssignedHours</Name>
				<Source><![CDATA[
    [DataMemberAttribute("assignedHours")]
    public Hours parmAssignedHours(Hours _assignedHours = assignedHours)
    {
        if (!prmIsDefault(_assignedHours))
        {
            assignedHours = _assignedHours;
        }
        return assignedHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSiblingNumber</Name>
				<Source><![CDATA[
    [DataMemberAttribute("siblingNumber")]
    public int parmSiblingNumber(int _siblingNumber = siblingNumber)
    {
        if (!prmIsDefault(_siblingNumber))
        {
            siblingNumber = _siblingNumber;
        }
        return siblingNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDifferenceType</Name>
				<Source><![CDATA[
    [DataMemberAttribute("differenceType")]
    public int parmDifferenceType(int _differenceType = differenceType)
    {
        if (!prmIsDefault(_differenceType))
        {
            differenceType = _differenceType;
        }
        return differenceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserMemo</Name>
				<Source><![CDATA[
    [DataMemberAttribute("userMemo")]
    public str parmUserMemo(str _userMemo = userMemo)
    {
        if (!prmIsDefault(_userMemo))
        {
            userMemo = _userMemo;
        }
        return userMemo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingMilestoneExists</Name>
				<Source><![CDATA[
    [DataMemberAttribute("billingMilestoneExists")]
    public str parmBillingMilestoneExists(str _billingMilestoneExists = billingMilestoneExists)
    {
        if (!prmIsDefault(_billingMilestoneExists))
        {
            billingMilestoneExists = _billingMilestoneExists;
        }
        return billingMilestoneExists;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingMilestoneComplete</Name>
				<Source><![CDATA[
    [DataMemberAttribute("billingMilestoneComplete")]
    public str parmBillingMilestoneComplete(str _billingMilestoneComplete = billingMilestoneComplete)
    {
        if (!prmIsDefault(_billingMilestoneComplete))
        {
            billingMilestoneComplete = _billingMilestoneComplete;
        }
        return billingMilestoneComplete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanBillingMilestoneComplete</Name>
				<Source><![CDATA[
    [DataMemberAttribute("canBillingMilestoneComplete")]
    public str parmCanBillingMilestoneComplete(str _canBillingMilestoneComplete = canBillingMilestoneComplete)
    {
        if (!prmIsDefault(_canBillingMilestoneComplete))
        {
            canBillingMilestoneComplete = _canBillingMilestoneComplete;
        }
        return canBillingMilestoneComplete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor of class <c>ProjTaskDataContract</c>.
    /// </summary>
    /// <returns>An instance of <c>ProjTaskDataContract</c> object.</returns>
    public static ProjTaskDataContract construct()
    {
        ProjTaskDataContract taskData = new ProjTaskDataContract();
        return taskData;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>