<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscAdmTransProductCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Base class that holds the common data sources and filters for the price and discount search on items.
/// </summary>
abstract class PriceDiscAdmTransProductCopy extends PriceDiscAdmTransCopy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDataSources</Name>
				<Source><![CDATA[
    protected void addDataSources()
    {
        this.applyPriceTypeCriteria();
        this.addPriceDiscTableRefTmpDataSource();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addExistsJoins</Name>
				<Source><![CDATA[
    protected void addExistsJoins()
    {
        super();
        this.addPriceDiscAdmTransDataSource();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPriceDiscTableRefTmpDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Joins the <c>PriceDiscTableRefTmp</c> to the <c>PriceDiscTable</c> data source.
    /// </summary>
    private void addPriceDiscTableRefTmpDataSource()
    {
        QueryBuildDataSource qbdsPriceDiscTableRefTmp = qbdsPriceDiscTable.addDataSource(tableNum(PriceDiscTableRefTmp));
        qbdsPriceDiscTableRefTmp.cursor(priceDiscAdmSearch.parmPriceDiscTableRefTmp());
        qbdsPriceDiscTableRefTmp.relations(false);
        qbdsPriceDiscTableRefTmp.fetchMode(QueryFetchMode::One2One);
        qbdsPriceDiscTableRefTmp.addRange(fieldNum(PriceDiscTableRefTmp, PriceDiscJournalNum)).value(queryValue(priceDiscAdmSearch.parmJournalNum()));
        qbdsPriceDiscTableRefTmp.addLink(fieldNum(PriceDiscTable, RecId), fieldNum(PriceDiscTableRefTmp, PriceDiscTableRefRecId), qbdsPriceDiscTable.name());
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPriceDiscAdmTransDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Joins the <c>PriceDiscAdmTrans</c> to the <c>PriceDiscTable</c> data source.
    /// </summary>
    private void addPriceDiscAdmTransDataSource()
    {
        QueryBuildDataSource qbdsPriceDiscAdmTrans = qbdsPriceDiscTable.addDataSource(tableNum(PriceDiscAdmTrans));
        qbdsPriceDiscAdmTrans.relations(false);
        qbdsPriceDiscAdmTrans.fetchMode(QueryFetchMode::One2One);
        qbdsPriceDiscAdmTrans.joinMode(JoinMode::NoExistsJoin);
        qbdsPriceDiscAdmTrans.addRange(fieldNum(PriceDiscAdmTrans, JournalNum)).value(queryValue(priceDiscAdmSearch.parmJournalNum()));
        qbdsPriceDiscAdmTrans.addLink(fieldNum(PriceDiscTable, RecId), fieldNum(PriceDiscAdmTrans, PriceDiscTableRef), qbdsPriceDiscTable.name());
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateData</Name>
				<Source><![CDATA[
    protected void populateData()
    {
        PriceDiscAdmSearchPriceDiscAdmTransPopulator populator = PriceDiscAdmSearchPriceDiscAdmTransPopulator::newPopulator(priceDiscAdmSearch.parmPriceDiscAdmTrans(), query);
        populator.execute();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPriceDiscAdmTransProductCopy</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static PriceDiscAdmTransProductCopy newPriceDiscAdmTransProductCopy(PriceDiscProductCodeType _partyCodeType, PriceDiscAdmSearch _priceDiscAdmSearch)
    {
        PriceDiscProductCodeTypeFactoryAttribute attr = new PriceDiscProductCodeTypeFactoryAttribute(_partyCodeType);
        PriceDiscAdmTransProductCopy instance = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(PriceDiscAdmTransProductCopy), attr);

        if (!instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance.partyRoleModule = ModuleInventCustVend::Invent;
        instance.priceDiscAdmSearch = _priceDiscAdmSearch;

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>