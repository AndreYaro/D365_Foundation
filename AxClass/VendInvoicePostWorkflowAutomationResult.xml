<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoicePostWorkflowAutomationResult</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendInvoicePostWorkflowAutomationResult</c> contains methods that log the result of a vendor invoice that was posted using a workflow.
/// </summary>
internal final class VendInvoicePostWorkflowAutomationResult
{
    private VendInvoiceInfoTable vendInvoiceInfoTable;
    private ProcessExecutionSourceLinkItem processExecutionSourceLinkItem;
    private VendInvoiceWorkflowPostStatus vendInvoiceWorkflowPostStatus;
    private RefRecId batchJobId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static VendInvoicePostWorkflowAutomationResult construct()
    {
        return new VendInvoicePostWorkflowAutomationResult();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceInfoTable</Name>
				<Source><![CDATA[
    internal VendInvoiceInfoTable parmVendInvoiceInfoTable(
        VendInvoiceInfoTable _vendInvoiceInfoTable = this.vendInvoiceInfoTable)
    {
        this.vendInvoiceInfoTable = _vendInvoiceInfoTable;

        return this.vendInvoiceInfoTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcessExecutionSourceLinkItem</Name>
				<Source><![CDATA[
    internal ProcessExecutionSourceLinkItem parmProcessExecutionSourceLinkItem(
        ProcessExecutionSourceLinkItem _processExecutionSourceLinkItem = this.processExecutionSourceLinkItem)
    {
        this.processExecutionSourceLinkItem = _processExecutionSourceLinkItem;

        return this.processExecutionSourceLinkItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceWorkflowPostStatus</Name>
				<Source><![CDATA[
    internal VendInvoiceWorkflowPostStatus parmVendInvoiceWorkflowPostStatus(
        VendInvoiceWorkflowPostStatus _vendInvoiceWorkflowPostStatus = this.vendInvoiceWorkflowPostStatus)
    {
        this.vendInvoiceWorkflowPostStatus = _vendInvoiceWorkflowPostStatus;

        return this.vendInvoiceWorkflowPostStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBatchJobId</Name>
				<Source><![CDATA[
    internal RefRecId parmBatchJobId(RefRecId _batchJobId = this.batchJobId)
    {
        this.batchJobId = _batchJobId;

        return this.batchJobId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertProcessAutomationResult</Name>
				<Source><![CDATA[
    internal void insertProcessAutomationResult()
    {
        // Initialize the source link and message log entries for this invoice posting as if
        // the invoice was successfully posted
        processExecutionSourceLinkItem.parmHeader(strFmt("%1", vendInvoiceInfoTable.Num));
        processExecutionSourceLinkItem.parmSourceRecId(vendInvoiceInfoTable.RecId);
        processExecutionSourceLinkItem.parmSourceTableId(tableNum(VendInvoiceInfoTable));
        processExecutionSourceLinkItem.parmExecutionSourceStatus(ProcessExecutionSourceStatus::Success);
        processExecutionSourceLinkItem.parmMessage(strFmt("@AccountsPayable:VendInvoicePostController_Success", vendInvoiceInfoTable.Num, this.batchJobId));

        // For successful invoice postings, the messages displayed in the source link and message log tables
        // will be the same
        ProcessExecutionMessage messageLogMessage = processExecutionSourceLinkItem.parmMessage();
        Exception messageLogMessageType = Exception::Info;

        if (vendInvoiceWorkflowPostStatus == VendInvoiceWorkflowPostStatus::Failed)
        {
            // If the invoice posting has failed, update the source link and message log entries to reflect that failure
            processExecutionSourceLinkItem.parmMessage(strFmt("@AccountsPayable:VendInvoicePostController_Failure", vendInvoiceInfoTable.Num, this.batchJobId));
            processExecutionSourceLinkItem.parmExecutionSourceStatus(ProcessExecutionSourceStatus::Error);

            messageLogMessage = vendInvoiceInfoTable.Log;
            messageLogMessageType = Exception::Error;
        }

        ProcessExecutionId executionId = processExecutionSourceLinkItem.parmExecutionId();

        // Search for an existing source link record tied to this invoice and posting process
        ProcessExecutionSourceLink processExecutionSourceLink;

        select firstonly processExecutionSourceLink
            order by processExecutionSourceLink.RecId desc
            where processExecutionSourceLink.ExecutionId == executionId
                && processExecutionSourceLink.RefRecId == vendInvoiceInfoTable.RecId
                && processExecutionSourceLink.RefTableId == tableNum(VendInvoiceInfoTable);

        // If a source link record already exists for this invoice in this posting process,
        // update the existing source link
        if (processExecutionSourceLink)
        {
            processExecutionSourceLink = 
                ProcessExecutionSourceLink::updateSourceLink(processExecutionSourceLink.RecId, processExecutionSourceLinkItem);
        }
        else
        {
            // If no source link record exists for this invoice in this posting process, create a new one
            processExecutionSourceLink = ProcessExecutionSourceLink::insertSourceLink(processExecutionSourceLinkItem);
        }

        // Insert a new message log entry for the source link record
        ProcessExecutionMessageLog::insertMessage(
            ProcessExecutionMessageLogItem::newFromProcessExecutionSourceLinkAndMessage(
                processExecutionSourceLink.RecId,
                messageLogMessageType,
                messageLogMessage));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>