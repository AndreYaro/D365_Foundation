<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransactionTextContextFixedAssets</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TransactionTextContextCust</c> class enables additional parameter value functionality for
/// the documents of the <c>FixedAssetsPostingLedger</c> enumeration value.
/// </summary>
[SourceDocumentEnumLiteralExtension(enumStr(LedgerTransTxt), enumLiteralStr(LedgerTransTxt, FixedAssetsPostingLedger))]
class TransactionTextContextFixedAssets extends TransactionTextContext
{
    AssetTable      assetTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSupportedTables</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a list of tables that are supported for use with a specified transaction type.
    /// </summary>
    /// <returns>
    /// A container that contains the table IDs of the tables that are supported by a specified transaction
    /// type.
    /// </returns>
    public container getSupportedTables()
    {
        container   tableList;

        tableList += tableNum(AssetTable);

        return tableList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the parameter variable of an object to contain the records that are used with a specified
    /// transaction type.
    /// </summary>
    /// <remarks>
    /// This method must be called before the table fields and values are mapped for the transaction text
    /// setup parameters.
    /// </remarks>
    public void setParameters()
    {
        parameters = [assetTable];
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableBuffer</Name>
				<Source><![CDATA[
    // </GFM

    /// <summary>
    /// Set a table buffer for a specified transaction type.
    /// </summary>
    /// <param name="_common">
    /// The specified <c>Common</c> record that is set based on the table ID of the buffer.
    /// </param>
    /// <returns>
    /// true if the table is supported and the buffer is saved; otherwise false.
    /// </returns>
    /// <remarks>
    /// The specified record is cast to the appropriate table through switch logic. This method can be
    /// called repeatedly to assign multiple buffers.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// The table is not supported by this transaction type.
    /// </exception>
    public boolean setTableBuffer(Common _common)
    {
        boolean tableBufferSet;

        switch (_common.TableId)
        {
            case tableNum(AssetTable):
                assetTable = _common as AssetTable;
                tableBufferSet = true;
                break;
        }

        return tableBufferSet;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>