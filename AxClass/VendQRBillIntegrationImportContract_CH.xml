<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendQRBillIntegrationImportContract_CH</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The contract class of import QR-Bill procedure.
/// </summary>
[DataContract]
[SysOperationContractProcessing(classStr(VendQRBillIntegrationImportUIBuilder_CH))]
public class VendQRBillIntegrationImportContract_CH extends SysOperationDataContractBase 
    implements SysOperationInitializable, SysPackable, SysOperationValidatable
{
    private FreeTxt qrBillPlainText;
    private LedgerJournalId invoiceJourNum;
    private RefRecId vendInvoiceInfoTableRecId;
    private ERModelMappingId importFormatMappingId;
    private ERModelMappingId modelMappingId;
    private boolean isFromPendingInvoice;
    private boolean isFromInvoiceJournal;
    private FormDataSource formDataSource;

    private const Version CurrentVersion = 1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmImportFormatMappingId</Name>
				<Source><![CDATA[
    [DataMember('ImportFormatMappingId'),
        SysOperationLabel("@CustVendQRBill:QRBill"),
        SysOperationHelpText("@CustVendQRBill:QRBillInterimModelMappingHelp"),
        SysOperationDisplayOrder('1')]
    public ERModelMappingId parmImportFormatMappingId(ERModelMappingId _importFormatMappingId = importFormatMappingId)
    {
        importFormatMappingId = _importFormatMappingId;
        return importFormatMappingId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModelMappingId</Name>
				<Source><![CDATA[
    [DataMember('ModelMappingId'),
        SysOperationLabel("@ElectronicReporting:ModelMapping"),
        SysOperationHelpText("@CustVendQRBill:QRBillFinalModelMappingHelp"),
        SysOperationDisplayOrder('2')]
    public ERModelMappingId parmModelMappingId(ERModelMappingId _modelMappingId = modelMappingId)
    {
        modelMappingId = _modelMappingId;
        return modelMappingId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceJourNum</Name>
				<Source><![CDATA[
    [DataMember('InvoiceJourNum'),
        SysOperationLabel("@CustVendQRBill:InvoiceJournalNumber"),
        SysOperationHelpText("@CustVendQRBill:InvoiceJournalNumberWhereQRBillWillBeImported"),
        SysOperationDisplayOrder('3')]
    public LedgerJournalId parmInvoiceJourNum(LedgerJournalId _invoiceJourNum = invoiceJourNum)
    {
        invoiceJourNum = _invoiceJourNum;
        return invoiceJourNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQRBillPlainText</Name>
				<Source><![CDATA[
    [DataMember('QRBillPlainText'),
        SysOperationLabel("@CustVendQRBill:PlainTextOfTheQRBill"),
        SysOperationDisplayOrder('4')]
    public FreeTxt parmQRBillPlainText(FreeTxt _qrBillPlainText = qrBillPlainText)
    {
        qrBillPlainText = _qrBillPlainText;
        return qrBillPlainText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsFromPendingInvoice</Name>
				<Source><![CDATA[
    [SysOperationControlVisibility(false)]
    public boolean parmIsFromPendingInvoice(boolean _isFromPendingInvoice = isFromPendingInvoice)
    {
        isFromPendingInvoice = _isFromPendingInvoice;
        return isFromPendingInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsFromInvoiceJournal</Name>
				<Source><![CDATA[
    [SysOperationControlVisibility(false)]
    public boolean parmIsFromInvoiceJournal(boolean _isFromInvoiceJournal = isFromInvoiceJournal)
    {
        isFromInvoiceJournal = _isFromInvoiceJournal;
        return isFromInvoiceJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceInfoTableRecId</Name>
				<Source><![CDATA[
    [SysOperationControlVisibility(false)]
    public RefRecId parmVendInvoiceInfoTableRecId(RefRecId _vendInvoiceInfoTableRecId = vendInvoiceInfoTableRecId)
    {
        vendInvoiceInfoTableRecId = _vendInvoiceInfoTableRecId;
        return vendInvoiceInfoTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormDataSource</Name>
				<Source><![CDATA[
    [SysOperationControlVisibility(false)]
    public FormDataSource parmFormDataSource(FormDataSource _formDataSource = formDataSource)
    {
        formDataSource = _formDataSource;
        return formDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    public void initialize()
    {
        this.parmImportFormatMappingId(PurchParameters::find().ERModelMappingQRBill_CH);
        this.parmModelMappingId(VendQRBillIntegrationImportService_CH::getQRModelMappingRecIdgByImportFormatMappingAndIntegrationPoint(
            this.parmImportFormatMappingId(),
            VendQRBillIntegrationImportService_CH::VendInvoiceJournalHeaderEntityIntegrationPoint));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [CurrentVersion, modelMappingId, importFormatMappingId];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean ret;
        Version version = SysOperationHelper::getVersion(_packedClass);

        switch (version)
        {
            case CurrentVersion:
                [version, modelMappingId, importFormatMappingId] = _packedClass;
                ret = true;
                break;
            default:
                ret = false;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean ret = true;

        if (importFormatMappingId == 0)
        {
            ret = checkFailed("@CustVendQRBill:ModelMappingToInterimDestinationShouldBeSpecified");
        }

        if (modelMappingId == 0)
        {
            ret = ret && checkFailed("@CustVendQRBill:ModelMappingToFinalDestinationShouldBeSpecified");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>