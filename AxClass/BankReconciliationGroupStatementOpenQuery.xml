<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankReconciliationGroupStatementOpenQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BankReconciliationGroupStatementOpenQuery extends BankReconciliationQuery
{
    private const TableId GroupStatementOpenTableId = tableNum(BankReconciliationGroupStatementOpenTmp);
    private QueryBuildDataSource groupStatmentQbds;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(BankReconciliationMatchRule _rule)
    {
        super(_rule, GroupStatementOpenTableId);
        this.buildStatementMatchRuleCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    public void buildQuery()
    {
        this.initQuery();
        this.addFieldRanges(groupStatmentQbds, fieldNum(BankReconciliationGroupStatementOpenTmp, IsMatched), GroupStatementOpenTableId);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateFieldId</Name>
				<Source><![CDATA[
    internal protected FieldId generateFieldId(FieldId _origFieldId)
    {
        return BankReconciliationGroupStatementOpenTmp::getFieldIdFromStatementOpen(_origFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    private void initQuery()
    {
        groupStatmentQbds = query.addDataSource(GroupStatementOpenTableId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildStatementMatchRuleCache</Name>
				<Source><![CDATA[
    private void buildStatementMatchRuleCache()
    {
        matchRuleCache = new List(Types::Record);

        BankReconciliationMatchRuleLine matchRuleLine;
        BankReconciliationGroupRuleLine groupRuleLine;
        while select matchRuleLine
            exists join groupRuleLine
            where matchRuleLine.BankReconciliationMatchRule == rule.RecId
                && matchRuleLine.LineType == BankReconciliationMatchRuleLineType::Statement
                && groupRuleLine.BankReconciliationGroupRule == rule.BankStatementGroupRule
                && groupRuleLine.FieldId == matchRuleLine.FieldId
        {
            matchRuleCache.addEnd(matchRuleLine.data());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>