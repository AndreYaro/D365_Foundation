<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailGrandTotalJournalUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The base class for grand total gournal update operations.
/// </summary>
public abstract class RetailGrandTotalJournalUpdate
{
    protected RetailGrandTotalJournalTable journalTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the status of journal after update operation completed.
    /// </summary>
    /// <returns>
    /// New status of journal.
    /// </returns>
    abstract protected RetailGrandTotalJournalStatus getStatus()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// The entry point to runs update operation.
    /// </summary>
    /// <param name="_journalTable">
    /// The journal Table.
    /// </param>
    /// <exception cref="Exception::Error">
    /// The error exception thrown if validation of journal failed.
    /// </exception>
    public void update(RetailGrandTotalJournalTable _journalTable)
    {
        journalTable = _journalTable;

        if (journalTable.RecId && this.validateJournal())
        {
            this.updateJournal();

            journalTable.Status = this.getStatus();
            journalTable.update();
        }
        else
        {
            throw error("@RetailGrandTotalJournal:OperationCanceled");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// The abstract method to be mlemented in successors to handle journal update logic.
    /// </summary>
    abstract protected void updateJournal()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// The abstract method to be implemented in successors to handle journal validation logic.
    /// </summary>
    /// <returns>
    /// True if validation success; otherwise false.
    /// </returns>
    abstract protected boolean validateJournal()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// The fabric method to create concrete instance of successors of <c>RetailGrandTotalJournalUpdate</c> class based on <c>RetailGrandTotalJourUpdAction</c> enumeration.
    /// </summary>
    /// <param name="_journalAction">
    /// Enumeration<c>RetailGrandTotalJourUpdAction</c> represented the required operation on journal.
    /// </param>
    /// <returns>
    /// The instance one of <c>RetailGrandTotalJournalUpdate</c> class successor.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Exception thrown if handling of required operation is not implemented.
    /// </exception>
    public static RetailGrandTotalJournalUpdate construct(RetailGrandTotalJourUpdAction _journalAction)
    {
        RetailGrandTotalJournalUpdate journalPost;

        journalPost = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(RetailGrandTotalJournalUpdate),
            new RetailGrandTotalJournalActionAttribute(_journalAction));

        if (journalPost == null)
        {
            throw error(strFmt("@RetailGrandTotalJournal:OperationNotSupported", _journalAction));
        }

        return journalPost;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>