<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityChangeTrackingHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductEntityChangeTrackingHelper</c> class contains helper methods for enabling change tracking
/// for EcoResProduct and EcoResReleasedProduct data entities.
/// </summary>
public static class EcoResProductEntityChangeTrackingHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addProductTranslationBasedOnProductRecIdAndPartitionLink</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResProductTranslation</c> table based on product RecId and Partition.
    /// </summary>
    /// <param name = "_parentDS">Parent data source to which the tables should be added.</param>
    /// <param name = "_parentProductFieldNum">FieldId of the field to which RecId of <c>EcoResProductTranslation</c> table should be linked.</param>
    /// <param name = "_parentPartitionFieldNum">FieldId of the field to which Partition of <c>EcoResProductTranslation</c> table should be linked.</param>
    public static void addProductTranslationBasedOnProductRecIdAndPartitionLink(QueryBuildDataSource _parentDS, FieldId _parentProductFieldNum, FieldId _parentPartitionFieldNum)
    {
        if (_parentDS && _parentProductFieldNum && _parentPartitionFieldNum)
        {
            var ecoResProductTranslationToSystemLanguageDS = _parentDS.addDataSource(tableNum(EcoResProductTranslation));
            ecoResProductTranslationToSystemLanguageDS.joinMode(JoinMode::OuterJoin);
            ecoResProductTranslationToSystemLanguageDS.fetchMode(QueryFetchMode::One2One);
            ecoResProductTranslationToSystemLanguageDS.relations(false);
            ecoResProductTranslationToSystemLanguageDS.addLink(_parentProductFieldNum, fieldNum(EcoResProductTranslation, Product), _parentDS.name());
            ecoResProductTranslationToSystemLanguageDS.addLink(_parentPartitionFieldNum, fieldNum(EcoResProductTranslation, Partition), _parentDS.name());
        
            var ecoResProductSystemLanguageSystemParametersDS = ecoResProductTranslationToSystemLanguageDS.addDataSource(tableNum(SystemParameters));
            ecoResProductSystemLanguageSystemParametersDS.joinMode(JoinMode::OuterJoin);
            ecoResProductSystemLanguageSystemParametersDS.fetchMode(QueryFetchMode::One2One);
            ecoResProductSystemLanguageSystemParametersDS.relations(false);
            ecoResProductSystemLanguageSystemParametersDS.addLink(fieldNum(EcoResProductTranslation, Partition), fieldNum(SystemParameters, Partition), ecoResProductTranslationToSystemLanguageDS.name());
            ecoResProductSystemLanguageSystemParametersDS.addLink(fieldNum(EcoResProductTranslation, LanguageId), fieldNum(SystemParameters, SystemLanguageId), ecoResProductTranslationToSystemLanguageDS.name());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLinkEcoResProductLinkBasedOnProductRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResProduct</c> table based on product RecId.
    /// </summary>
    /// <param name = "_parentDS">Parent data source to which the tables should be added.</param>
    /// <param name = "_parentProductFieldNum">FieldId of the field to which RecId of <c>EcoResProduct</c> table should be linked.</param>    
    /// <returns>The linked <c>EcoResProduct</c> data source</returns>
    public static QueryBuildDataSource addLinkEcoResProductLinkBasedOnProductRecId(QueryBuildDataSource _parentDS, FieldId _parentProductFieldNum)
    {
        QueryBuildDataSource productDS;
        if (_parentDS && _parentProductFieldNum)
        {
            productDS = _parentDS.addDataSource(tableNum(EcoResProduct));
            productDS.addLink(_parentProductFieldNum, fieldNum(EcoResProduct, RecId));
        }

        return productDS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLinkEcoResDistinctProductLinkBasedOnProductRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResDistinctProduct</c> table based on product RecId and Partition.
    /// </summary>
    /// <param name = "_parentDS">Parent data source to which the tables should be added.</param>
    /// <param name = "_parentProductFieldNum">FieldId of the field to which RecId of <c>EcoResDistinctProduct</c> table should be linked.</param>
    /// <returns>The linked <c>EcoResProduct</c> data source</returns>
    public static QueryBuildDataSource addLinkEcoResDistinctProductLinkBasedOnProductRecId(QueryBuildDataSource _parentDS, FieldId _parentProductFieldNum)
    {
        QueryBuildDataSource distinctProductDS;
        if (_parentDS && _parentProductFieldNum)
        {
            distinctProductDS = _parentDS.addDataSource(tableNum(EcoResDistinctProduct));
            distinctProductDS.addLink(_parentProductFieldNum, fieldNum(EcoResDistinctProduct, RecId));
        }

        return distinctProductDS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLinkEcoResProductVariantDimensionValueLinkBasedOnVariantProductRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResDistinctProduct</c> table based on product RecId and Partition.
    /// </summary>
    /// <param name = "_parentDS">Parent datasource to which the tables should be added.</param>
    /// <param name = "_parentProductFieldNum">FieldId of the field to which RecId of <c>EcoResDistinctProduct</c> table should be linked.</param>
    /// <returns>The linked <c>EcoResProduct</c> data source</returns>
    public static QueryBuildDataSource addLinkEcoResProductVariantDimensionValueLinkBasedOnVariantProductRecId(QueryBuildDataSource _parentDS, FieldId _parentVariantProductFieldNum)
    {
        QueryBuildDataSource productVariantDimensionValueDS;
        if (_parentDS && _parentVariantProductFieldNum)
        {
            productVariantDimensionValueDS = _parentDS.addDataSource(tableNum(EcoResProductVariantDimensionValue));
            productVariantDimensionValueDS.addLink(_parentVariantProductFieldNum, fieldNum(EcoResProductVariantDimensionValue, DistinctProductVariant));
        }

        return productVariantDimensionValueDS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEcoResProductVariantConfigurationAndConfiguration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResProductVariantConfiguration</c> and <c>EcoResConfiguration</c> tables.
    /// </summary>
    /// <param name = "_parentDS">Parent data source to which the tables should be added.</param>
    public static void addEcoResProductVariantConfigurationAndConfiguration(QueryBuildDataSource _parentDS)
    {
        if (_parentDS)
        {
            var ecoResProductVariantConfigurationDS = _parentDS.addDataSource(tableNum(EcoResProductVariantConfiguration));
            ecoResProductVariantConfigurationDS.joinMode(JoinMode::OuterJoin);
            ecoResProductVariantConfigurationDS.fetchMode(QueryFetchMode::One2One);
            ecoResProductVariantConfigurationDS.relations(true);

            var ecoResConfigurationDS = ecoResProductVariantConfigurationDS.addDataSource(tableNum(EcoResConfiguration));
            ecoResConfigurationDS.joinMode(JoinMode::OuterJoin);
            ecoResConfigurationDS.fetchMode(QueryFetchMode::One2One);
            ecoResConfigurationDS.relations(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEcoResProductVariantSizeAndSize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResProductVariantSize</c> and <c>EcoResSize</c> tables.
    /// </summary>
    /// <param name = "_parentDS">Parent data source to which the tables should be added.</param>
    public static void addEcoResProductVariantSizeAndSize(QueryBuildDataSource _parentDS)
    {
        if (_parentDS)
        {
            var ecoResProductVariantSizeDS = _parentDS.addDataSource(tableNum(EcoResProductVariantSize));
            ecoResProductVariantSizeDS.joinMode(JoinMode::OuterJoin);
            ecoResProductVariantSizeDS.fetchMode(QueryFetchMode::One2One);
            ecoResProductVariantSizeDS.relations(true);

            var ecoResSizeDS = ecoResProductVariantSizeDS.addDataSource(tableNum(EcoResSize));
            ecoResSizeDS.joinMode(JoinMode::OuterJoin);
            ecoResSizeDS.fetchMode(QueryFetchMode::One2One);
            ecoResSizeDS.relations(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEcoResProductVariantColorAndColor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResProductVariantColor</c> and <c>EcoResColor</c> tables.
    /// </summary>
    /// <param name = "_parentDS">Parent data source to which the tables should be added.</param>
    public static void addEcoResProductVariantColorAndColor(QueryBuildDataSource _parentDS)
    {
        if (_parentDS)
        {
            var ecoResProductVariantColorDS = _parentDS.addDataSource(tableNum(EcoResProductVariantColor));
            ecoResProductVariantColorDS.joinMode(JoinMode::OuterJoin);
            ecoResProductVariantColorDS.fetchMode(QueryFetchMode::One2One);
            ecoResProductVariantColorDS.relations(true);

            var ecoResColorDS = ecoResProductVariantColorDS.addDataSource(tableNum(EcoResColor));
            ecoResColorDS.joinMode(JoinMode::OuterJoin);
            ecoResColorDS.fetchMode(QueryFetchMode::One2One);
            ecoResColorDS.relations(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEcoResProductVariantStyleAndStyle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResProductVariantStyle</c> and <c>EcoResStyle</c> tables.
    /// </summary>
    /// <param name = "_parentDS">Parent data source to which the tables should be added.</param>
    public static void addEcoResProductVariantStyleAndStyle(QueryBuildDataSource _parentDS)
    {   
        if (_parentDS)
        {
            var ecoResProductVariantStyleDS = _parentDS.addDataSource(tableNum(EcoResProductVariantStyle));
            ecoResProductVariantStyleDS.joinMode(JoinMode::OuterJoin);
            ecoResProductVariantStyleDS.fetchMode(QueryFetchMode::One2One);
            ecoResProductVariantStyleDS.relations(true);

            var ecoResStyleDS = ecoResProductVariantStyleDS.addDataSource(tableNum(EcoResStyle));
            ecoResStyleDS.joinMode(JoinMode::OuterJoin);
            ecoResStyleDS.fetchMode(QueryFetchMode::One2One);
            ecoResStyleDS.relations(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEcoResProductVariantVersionAndEcoResVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to parent queries that link to <c>EcoResProductVariantVersion</c> and <c>EcoResVersion</c> tables.
    /// </summary>
    /// <param name = "_parentDS">Parent data source to which the tables should be added.</param>
    public static void addEcoResProductVariantVersionAndEcoResVersion(QueryBuildDataSource _parentDS)
    {   
        if (_parentDS)
        {
            var ecoResProductVariantVersionDS = _parentDS.addDataSource(tableNum(EcoResProductVariantVersion));
            ecoResProductVariantVersionDS.joinMode(JoinMode::OuterJoin);
            ecoResProductVariantVersionDS.fetchMode(QueryFetchMode::One2One);
            ecoResProductVariantVersionDS.relations(true);

            var ecoResVersionDS = ecoResProductVariantVersionDS.addDataSource(tableNum(EcoResVersion));
            ecoResVersionDS.joinMode(JoinMode::OuterJoin);
            ecoResVersionDS.fetchMode(QueryFetchMode::One2One);
            ecoResVersionDS.relations(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDocuRefAndRelationLinks</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking for <c>DocuRef</c>, <c>DocuType</c>, <c>DocuValue</c> and <c>EcoResProductImage</c> tables.
    /// </summary>
    /// <param name = "_changeTrackingQuery">The change tracking query object.</param>
    /// <returns>The <c>DocuRef</c> data source with related data source links.</returns>
    public static QueryBuildDataSource addDocuRefAndRelationLinks(Query _changeTrackingQuery)
    {
        QueryBuildDataSource docuRefDS;

        if (_changeTrackingQuery)
        {
            docuRefDS = _changeTrackingQuery.addDataSource(tableNum(DocuRef));

            var docuTypeDS = docuRefDS.addDataSource(tableNum(DocuType));
            docuTypeDS.joinMode(JoinMode::InnerJoin);
            docuTypeDS.fetchMode(QueryFetchMode::One2One);
            docuTypeDS.relations(false);
            docuTypeDS.addLink(fieldNum(DocuRef, ActualCompanyId), fieldNum(DocuType, DataAreaId), docuRefDS.name());
            docuTypeDS.addLink(fieldNum(DocuRef, TypeId), fieldNum(DocuType, TypeId), docuRefDS.name());

            var docuValueDS = docuRefDS.addDataSource(tableNum(DocuValue));
            docuValueDS.joinMode(JoinMode::OuterJoin);
            docuValueDS.fetchMode(QueryFetchMode::One2One);
            docuValueDS.relations(true);

            var ecoResProductImageDS = docuRefDS.addDataSource(tableNum(EcoResProductImage));
            ecoResProductImageDS.joinMode(JoinMode::OuterJoin);
            ecoResProductImageDS.fetchMode(QueryFetchMode::One2One);
            ecoResProductImageDS.relations(true);
        }

        return docuRefDS;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>