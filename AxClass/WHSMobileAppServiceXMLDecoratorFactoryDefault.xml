<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppServiceXMLDecoratorFactoryDefault</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppServiceXMLDecoratorFactoryDefault</c> class is responsible for instantiating a
/// decorator depending on the type of page.
/// </summary>
public class WHSMobileAppServiceXMLDecoratorFactoryDefault implements WHSIMobileAppServiceXMLDecoratorFactory
{
    #WHSWorkExecuteControlElements
    #WHSRF
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDecorator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates the <c>WHSMobileAppServiceXMLDecorator</c> class.
    /// </summary>
    /// <param name = "_con">
    /// Contains information about the context that may be required for instantiating the <c>WHSMobileAppServiceXMLDecorator</c>.
    /// </param>
    /// <returns>
    /// The <c>WHSMobileAppServiceXMLDecorator</c> class.
    /// </returns>
    public WHSMobileAppServiceXMLDecorator getDecorator(container _con)
    {
        if (this.isVendorBatchPage(_con))
        {
            return new WHSMobileAppServiceXMLDecoratorDefaultVendorBatchPage();
        }

        if (this.isFastValidationPage(_con))
        {
            return new WHSMobileAppServiceXMLDecoratorFastValidation();
        }

        if (this.isWorkLineListScreen(_con))
        {
            return new WHSMobileAppServiceXMLDecoratorWorkLineList();
        }

        return new WHSMobileAppServiceXMLDecoratorDefault();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWorkLineListScreen</Name>
				<Source><![CDATA[
    private boolean isWorkLineListScreen(container _con)
    {
        #WHSWorkExecuteDisplayCases

        int currStep = conPeek(conPeek(_con, #StateInfo), #StateInfoStep);

        return currStep == #WorkLineListStep;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFastValidationPage</Name>
				<Source><![CDATA[
    private boolean isFastValidationPage(container _con)
    {
        int length = conLen(_con);
        for (int i = 1; i <= length; i++)
        {
            str controlType = conPeek(conPeek(_con, i), #controlType);
            if (controlType == #RFFastValidationIds)
            {
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVendorBatchPage</Name>
				<Source><![CDATA[
    private boolean isVendorBatchPage(container _con)
    {
        int length = conLen(_con);
        for (int i = 1; i <= length; i++)
        {
            container control = conPeek(_con, i);
            if (conPeek(control, #controlType) == #RFLabel
                && conPeek(control, #name) == #VendBatchInfo)
            {
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>