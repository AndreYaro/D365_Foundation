<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjOpsBudgetingInstrumentationActivites</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class ProjOpsBudgetingInstrumentationActivites extends ProjOpsInstrumentationBaseActitivies
{
    private const str ProjOpsBudgetingPrefix = 'ProjOpsBudgeting.';
    internal static const str PropertyFormat = '%1.%2';

    // Unique feature names being instrumented
    internal static const str DeleteProjCommitments = 'DeleteProjectCommitments';
    internal static const str PerformDeleteProjCommitments = 'PerformDeleteProjectCommitments';
    internal static const str PostTS = 'PostTimesheet';
    internal static const str PostSourceDoc = 'PostSourceDocument';
    internal static const str SourceDocHeaderJournalized = 'SourceDocumentHeaderJournalized';
    internal static const str ReverseCommittedCost = 'ReverseCommittedCost';

    internal static const str ApprovalStatusProperty = 'ApprovalStatus';
    internal static const str TSNbrProperty = 'TimesheetNbr';
    internal static const str SourceDocumentHeaderProperty = 'SourceDocumentHeader';
    internal static const str TypeProperty = 'Type';
    internal static const str CostControlTransCommittedCost = 'CostControlTransCommittedCost';
    internal static const str ProjTransIdProp = 'ProjTransId';
    internal static const str ProjIdProp = 'ProjId';
    internal static const str CommittedCostOrig = 'CommittedCostOrig';
    internal static const str SourceDocumentPostedProperty = 'IsSourceDocumentPosted';
    internal static const str DataAreaIdProperty = 'DataAreaId';
    internal static const str IsInvoicedProperty = 'IsInvoiced';
    internal static const str CarryForwardProperty = '_carryForward';
    internal static const str OpeningDateProperty = '_openingDate';
    internal static const str HasProjectProperty = "hasProject";
    internal static const str ProjBudgetManagementBatchIntegration = "ProjBudgetManagementBatchIntegration";
    internal static const str ProjId = "Project-ID";
    internal static const str ForecastTypeInCE = "ProjForecastTypeInCE";
    internal static const str ForecastClassificationInFNO = "ForecastClassificationInFNO";

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor for <c>ProjOpsBudgetingInstrumentationActivites</c> object.
    /// </summary>
    /// <param name = "_logger"><c>ProjOpsInstrumentationLogger</c> object.</param>
    /// <returns><c>ProjOpsBudgetingInstrumentationActivites</c> instance.</returns>    
    internal static ProjOpsBudgetingInstrumentationActivites construct(ProjOpsInstrumentationLogger  _logger)
    {
        ProjOpsBudgetingInstrumentationActivites activities = new ProjOpsBudgetingInstrumentationActivites();
        activities.logger = _logger;
        activities.Prefix = ProjOpsBudgetingPrefix;
        return activities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instrumentTimesheet</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext instrumentTimesheet(str _activityName, TSTimesheetTable _tsTimesheetTable)
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(_activityName);
        activityContext.addCustomProperty(ProjOpsBudgetingInstrumentationActivites::RecIdProperty, any2Str(_tsTimesheetTable.RecId));
        activityContext.addCustomProperty(ProjOpsBudgetingInstrumentationActivites::ApprovalStatusProperty, any2Str(_tsTimesheetTable.ApprovalStatus));
        activityContext.addCustomProperty(ProjOpsBudgetingInstrumentationActivites::TSNbrProperty, any2Str(_tsTimesheetTable.TimesheetNbr));
        activityContext.addCustomProperty(ProjOpsBudgetingInstrumentationActivites::SourceDocumentHeaderProperty, any2Str(_tsTimesheetTable.SourceDocumentHeader));
            
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instrumentSourceDocumentHeader</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext instrumentSourceDocumentHeader(str _activityName, RefRecId _sourceDocumentHeaderId)
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(_activityName);
        activityContext.addCustomProperty(strfmt(PropertyFormat, SourceDocumentHeaderProperty, RecIdProperty), any2Str(_sourceDocumentHeaderId));
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instrumentSourceDocumentLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext instrumentSourceDocumentLine(str _activityName, RefRecId _sourceDocumentLineId)
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(_activityName);
        activityContext.addCustomProperty(strfmt(PropertyFormat, SourceDocumentLineProperty, RecIdProperty), any2Str(_sourceDocumentLineId));
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instrumentCostControlTransCommittedCostForContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext instrumentCostControlTransCommittedCostForContext(SysInstrumentationActivityContext _activityContext, CostControlTransCommittedCost _committedCost)
    {
        _activityContext.addCustomProperty(strfmt(PropertyFormat, CostControlTransCommittedCost, RecIdProperty), any2Str(_committedCost.RecId));
        _activityContext.addCustomProperty(strfmt(PropertyFormat, CostControlTransCommittedCost, IsOpenProperty), any2Str(_committedCost.Open));
        _activityContext.addCustomProperty(strfmt(PropertyFormat, CostControlTransCommittedCost, ProjIdProp), any2Str(_committedCost.ProjId));
        _activityContext.addCustomProperty(strfmt(PropertyFormat, CostControlTransCommittedCost, ProjTransIdProp), any2Str(_committedCost.ProjTransId));
        _activityContext.addCustomProperty(strfmt(PropertyFormat, CostControlTransCommittedCost, DataAreaIdProperty), any2Str(_committedCost.DataAreaId));
        _activityContext.addCustomProperty(strfmt(PropertyFormat, CostControlTransCommittedCost, SourceDocumentLineProperty), any2Str(_committedCost.SourceDocumentLine));
        _activityContext.addCustomProperty(strfmt(PropertyFormat, CostControlTransCommittedCost, CommittedCostOrig), enum2Symbol(enumNum(CommittedCostOrig), _committedCost.CommittedCostOrig));
        return _activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>