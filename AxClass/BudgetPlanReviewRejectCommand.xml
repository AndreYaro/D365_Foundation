<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanReviewRejectCommand</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanReviewRejectCommand</c> class manages the rejecting of a budget plan workflows.
/// </summary>
public class BudgetPlanReviewRejectCommand extends WorkflowWorkItemActionManager
{
    BudgetPlanHeader budgetPlanHeader;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmArgs</Name>
				<Source><![CDATA[
    public Args parmArgs(Args _args = args)
    {
        Args returnedArgs;

        returnedArgs = super(_args);

        if (_args)
        {
            this.parmCaller(_args.caller());

            if (_args.record() &&
                _args.record().TableId == tablenum(BudgetPlanHeader))
            {
                budgetPlanHeader = _args.record() as BudgetPlanHeader;
            }
        }

        return returnedArgs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptWorkflowWorkItemAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the budget plan the rejection check then prompts for the action dialog for workflow work item actions.
    /// </summary>
    protected void promptWorkflowWorkItemAction()
    {
        boolean cancelReject;

        if (BudgetPlan::doesBudgetPlanHaveChild(budgetPlanHeader.RecId))
        {
            if (Box::yesNo(strFmt("@GLS70391", budgetPlanHeader.DocumentNumber), DialogButton::No) == DialogButton::No)
            {
                cancelReject = true;
            }
        }

        if (!cancelReject)
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the workflow action.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    /// The <c>Args</c> object is null.
    /// </exception>
    public void run()
    {
        if (!this.parmArgs())
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        super();

        if (this.parmIsActionDialogClosedOK())
        {
            this.updateDocument();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the budget plan workflow stage for a reject action.
    /// </summary>
    public void updateDocument()
    {
        FormDataSource budgetPlanHeader_ds;

        budgetPlanHeader = this.parmArgs().record() as BudgetPlanHeader;

        if (FormDataUtil::getFormDataSource(budgetPlanHeader))
        {
            budgetPlanHeader_ds = FormDataUtil::getFormDataSource(budgetPlanHeader);
            budgetPlanHeader_ds.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is main method to be invoked via the selection of a menu item.
    /// </summary>
    /// <param name="_args">
    /// Menu item arguments.
    /// </param>
    public static void main(Args _args)
    {
        BudgetPlanReviewRejectCommand budgetPlanReviewRejectCommand = new BudgetPlanReviewRejectCommand();

        budgetPlanReviewRejectCommand.parmArgs(_args);

        budgetPlanReviewRejectCommand.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>