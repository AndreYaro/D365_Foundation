<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetTransactionListingGERContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetTransactionListingContract</c> class contains all the parameters needed for the
/// <c>AssetTransactionListingGER</c> report.
/// </summary>
[DataContractAttribute]
internal final class AssetTransactionListingGERContract extends ERFormatMappingRunBaseContract implements SysOperationValidatable
{
    private boolean showReportingCurrency = false;
    private ERFormatMappingId formatMapping;
    private str query;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmShowReportingCurrency</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ShowReportingCurrency'),
        SysOperationControlVisibilityAttribute(false)
    ]
    internal boolean parmShowReportingCurrency(boolean _showReportingCurrency = showReportingCurrency)
    {
        showReportingCurrency = _showReportingCurrency;
        return showReportingCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormatMapping</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FormatMapping'),
        SysOperationLabelAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationHelpTextAttribute(literalstr("@ElectronicReporting:FormatMapping"))
    ]
    internal ERFormatMappingId parmFormatMapping(ERFormatMappingId _formatMapping = formatMapping)
    {
        formatMapping = _formatMapping;
        return formatMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        AifQueryTypeAttribute('_query', querystr(AssetTransactionListing))
    ]
    internal str parmQuery(str _query = query)
    {
        query = _query;
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the report parameters.
    /// </summary>
    /// <returns>
    ///    true if no errors; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean validate()
    {
        boolean isValid = true;

        if (!formatMapping)
        {
            isValid = checkFailed(strFmt("@SYS26332", new SysDictType(extendedTypeNum(ERFormatMappingId)).label()));
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>