<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductValidatonService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductValidationService</c> class provides stateless service operations for product
/// validation.
/// </summary>
class EcoResProductValidatonService
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateProducts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the essential field values being set for the products.
    /// </summary>
    /// <param name="_dataContract">
    /// An instance of the <c>EcoResProductValidatonDataContract</c> class.
    /// </param>
    public void validateProducts(EcoResProductValidatonDataContract _dataContract)
    {
        container                           productInfo = SysOperationHelper::base64Decode(_dataContract.packedProductsPerCompanyData());

        int                                 counter;

        int                                 infoMessagesCounter;
        str                                 infoMessages;
        List                                warningMessagesList = new List(Types::Container);
        List                                infoMessagesList = new List(Types::Container);

        SysInfoAction_TableField            sysInfoAction;
        str                                 message;
        container                           sysInfoActionContainer;

        void showMessagesInInfolog(List _list, Exception _type)
        {
            ListIterator listIterator = new ListIterator(_list);

            while (listIterator.more())
            {
                [message, sysInfoActionContainer] = listIterator.value();

                sysInfoAction = SysInfoAction_TableField::construct();
                sysInfoAction.unpack(sysInfoActionContainer);

                switch (_type)
                {
                    case Exception::Warning:
                        warning(message, "", sysInfoAction);
                        break;
                    case Exception::Info:
                        info(message, "", sysInfoAction);
                        break;
                }

                listIterator.next();
            }
        }

        for (counter = conlen(productInfo); counter > 0; --counter)
        {
            container productPerCompanyData = conpeek(productInfo, counter);
            ItemId itemId = conpeek(productPerCompanyData, 1);

            InventTable inventTable = inventTable::find(itemId);
            EcoResProductValidator productValidator = EcoResProductValidator::construct(inventTable);

            if (!productValidator.hasValidationIssues())
            {
                infoMessages = strfmt("@SYS338495", itemId);
                infoMessagesCounter++;
            }
            else
            {
                warningMessagesList.appendList(productValidator.validationWarnings());
                infoMessagesList.appendList(productValidator.validationInformation());
            }
        }

        if (warningMessagesList.elements() != 0 || infoMessagesList.elements() != 0)
        {
            showMessagesInInfolog(warningMessagesList, Exception::Warning);
            showMessagesInInfolog(infoMessagesList, Exception::Info);
        }
        else if (infoMessagesCounter > 1)
        {
            info("@SYS338494");
        }
        else
        {
            info(infoMessages);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
