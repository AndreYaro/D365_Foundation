<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchLineType_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchLineType_ApplicationSuite_Extension</c> class is used for extension of the <c>PurchLineType</c> class functionality.
/// </summary>
[ExtensionOf(classStr(PurchLineType))]
public final class PurchLineType_ApplicationSuite_Extension
{
    private boolean isDeliveryInformationStockPurchLineChanged;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inserted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles logic after a purchase order line record has been inserted.
    /// </summary>
    public void inserted()
    {
        next inserted();

        PurchLine purchLine = this.parmPurchLine();
        FreeNotesTable_IT::insertDocumentRef(purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles logic after a purchase order line record has been updated.
    /// </summary>
    /// <param name = "_purchLineOrig">The original line state.</param>
    public void updated(PurchLine _purchLineOrig)
    {
        next updated(_purchLineOrig);

        PurchLine purchLine = this.parmPurchLine();
        FreeNotesTable_IT::updateDocumentRef(purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchTable</Name>
				<Source><![CDATA[
    public void initFromPurchTable(PurchTable _purchTable, boolean _ignoreInventDim)
    {
        next initFromPurchTable(_purchTable, _ignoreInventDim);

        if (TaxParameters::isCustomsEnable_IN())
        {
            this.parmPurchLine().EXIMPorts_IN = _purchTable.EXIMPorts_IN;
        }

        
        PurchLine.DlvMode = _purchTable.DlvMode;
        purchLine.DlvTerm = _purchTable.DlvTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    public void initFromInventTable(
        InventTable     _inventTable,
        boolean         _searchPrice,
        boolean         _setAddressFromInventDim,
        boolean         _initDateFields,
        boolean         _executeOnlyIfProductIsFullySpecified)
    {
        next initFromInventTable(
            _inventTable,
            _searchPrice,
            _setAddressFromInventDim,
            _initDateFields,
            _executeOnlyIfProductIsFullySpecified);

        if (TaxParameters::isCustomsEnable_IN())
        {
            this.parmPurchLine().EximProductGroup_IN = _inventTable.EximProductGroupTable_IN;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTmpPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the PurchLine record from the <c>TmpPurchLine</c> record.
    /// </summary>
    /// <param name="_tmpPurchLine">
    /// The <c>TmpPurchLine</c> record from which to initialize the <c>PurchLine</c> record.
    /// </param>
    public void initFromTmpPurchLine(TmpPurchLine _tmpPurchLine)
    {
        next initFromTmpPurchLine(_tmpPurchLine);
        
        purchLine.DlvTerm = _tmpPurchLine.DlvTerm;
        purchLine.DlvMode = _tmpPurchLine.DlvMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncSalesLine</Name>
				<Source><![CDATA[
    AxSalesLine syncSalesLine(PurchLine _purchLine, SalesLine _salesLine, boolean _create)
    {
        AxSalesLine axSalesLine;
        boolean create = _create;
        
        axSalesLine = next syncSalesLine(_purchLine, _salesLine, _create);

        if (axSalesLine.salesLine().RecId == 0)
            create = true;

        if (SalesPurchSyncDeliveryInfoFeature::instance().isEnabled())
        {
            PurchParameters purchParameters = PurchParameters::find();
            if ((_purchLine.DeliveryType == TradeLineDlvType::DropShip
                    && PurchParameters.isDirectDeliveryInformationCreateOrUpdateAllowed(_purchLine, fieldNum(PurchLine, DlvTerm), create))
                || (_purchLine.DeliveryType == TradeLineDlvType::None
                    && PurchParameters.isStockDeliveryInformationCreateOrUpdateAllowed(_purchLine, fieldNum(PurchLine, DlvTerm), create)))
            {
                axSalesLine.parmDlvTerm(_purchLine.DlvTerm);
            }

            if ((_purchLine.DeliveryType == TradeLineDlvType::DropShip
                    && PurchParameters.isDirectDeliveryInformationCreateOrUpdateAllowed(_purchLine, fieldNum(PurchLine, DlvMode), create))
                || (_purchLine.DeliveryType == TradeLineDlvType::None
                    && PurchParameters.isStockDeliveryInformationCreateOrUpdateAllowed(_purchLine, fieldNum(PurchLine, DlvMode), create)))
            {
                axSalesLine.parmDlvMode(_purchLine.DlvMode);
            }
        }
        else
        {
            if (create || _purchLine.fieldChanged(fieldNum(PurchLine, DlvTerm)))
            {
                axSalesLine.parmDlvTerm(_purchLine.DlvTerm);
            }

            if (create || _purchLine.fieldChanged(fieldNum(PurchLine, DlvMode)))
            {
                axSalesLine.parmDlvMode(_purchLine.DlvMode);
            }
        }

        if (purchTable.mustTransferItemNameForIntercompany())
        {
            if (_create || _purchLine.fieldChanged(fieldNum(PurchLine, ExternalItemId)))
            {
                axSalesLine.parmExternalItemId(_purchLine.ExternalItemId);
            }

            if (_create || _purchLine.fieldChanged(fieldNum(PurchLine, Name)))
            {
                axSalesLine.parmName(_purchLine.Name);
            }

        }
        
        return axSalesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inserting</Name>
				<Source><![CDATA[
    public void inserting()
    {
        next inserting();

        if (purchTable.TradeEndCustomerAccount)
        {
            purchLine.updateExternalItemDescriptionIntercompany(purchTable.TradeEndCustomerAccount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultingFields</Name>
				<Source><![CDATA[
    public List defaultingFields()
    {
        List result = next defaultingFields();

        result.addEnd(fieldNum(PurchLine, DlvTerm));
        result.addEnd(fieldNum(PurchLine, DlvMode));

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveStockSalesLine</Name>
				<Source><![CDATA[
    protected void saveStockSalesLine(boolean _create)
    {
        next saveStockSalesLine(_create);

        if (this.isStockSalesLineUpdateAllowed())
        {
            AxSalesLine axSalesLine = this.syncStockSalesLine(purchLine, null, _create);

            if (this.isDeliveryInformationStockPurchLineChanged())
            {
                axSalesLine.parmSkipUpdate(InterCompanySkipUpdate::Internal);
                axSalesLine.save();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStockSalesLineUpdateAllowed</Name>
				<Source><![CDATA[
    protected boolean isStockSalesLineUpdateAllowed()
    {
        return PurchParameters::find().DeliveryInfoSyncOnUpdateStock;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeliveryInformationStockPurchLineChanged</Name>
				<Source><![CDATA[
    protected boolean isDeliveryInformationStockPurchLineChanged()
    {
        return isDeliveryInformationStockPurchLineChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncStockSalesLine</Name>
				<Source><![CDATA[
    protected AxSalesLine syncStockSalesLine(PurchLine _purchLine, SalesLine _salesLine, boolean _create)
    {
        AxSalesLine axSalesLine = this.constructAxSalesLine(_purchLine,_salesLine);

        isDeliveryInformationStockPurchLineChanged = false;

        if (axSalesLine.salesLine().RecId && !_create)
        {
            PurchParameters purchParameters = PurchParameters::find();
            if ((_purchLine.DeliveryType == TradeLineDlvType::DropShip
                    && purchParameters.isDirectDeliveryInformationCreateOrUpdateAllowed(_purchLine, fieldNum(PurchLine, DlvTerm), _create))
                || (_purchLine.DeliveryType == TradeLineDlvType::None
                    && purchParameters.isStockDeliveryInformationCreateOrUpdateAllowed(_purchLine, fieldNum(PurchLine, DlvTerm), _create)))
            {
                axSalesLine.parmDlvTerm(_purchLine.DlvTerm);
                isDeliveryInformationStockPurchLineChanged = true;
            }

            if ((_purchLine.DeliveryType == TradeLineDlvType::DropShip
                    && purchParameters.isDirectDeliveryInformationCreateOrUpdateAllowed(_purchLine, fieldNum(PurchLine, DlvMode), _create))
                || (_purchLine.DeliveryType == TradeLineDlvType::None
                    && purchParameters.isStockDeliveryInformationCreateOrUpdateAllowed(_purchLine, fieldNum(PurchLine, DlvMode), _create)))
            {
                axSalesLine.parmDlvMode(_purchLine.DlvMode);
                isDeliveryInformationStockPurchLineChanged = true;
            }
        }

        return axSalesLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>