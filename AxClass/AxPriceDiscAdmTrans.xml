<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxPriceDiscAdmTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxPriceDiscAdmTrans extends AxApplicationBase
{
    PriceDiscAdmTrans                       priceDiscAdmTrans;
    AxInventDim_PriceDiscAdmTrans           axInventDim;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axInventDim</Name>
				<Source><![CDATA[
    public AxInventDim_PriceDiscAdmTrans axInventDim(AxInventDim_PriceDiscAdmTrans _axInventDim = axInventDim)
    {
        axInventDim = _axInventDim;

        return axInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    protected void checkPriceDiscAdmTrans()
    {
        boolean ok = true;

        //As AccountCode,ItemCode and Relation fields are of type Enum,
        // isFieldSet method is checked instead of parm methods
        if (!this.isFieldSet(fieldNum(PriceDiscAdmTrans,AccountCode)))
        {
            ok = false;
            error("@SYS97736");
        }
        if (!this.isFieldSet(fieldNum(PriceDiscAdmTrans,ItemCode)))
        {
            ok = false;
            error("@SYS97737");
        }
        if (!this.isFieldSet(fieldNum(PriceDiscAdmTrans,Relation)))
        {
            ok = false;
            error("@SYS97738");
        }

        if (!ok)
        throw error("@SYS97693");
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _priceDiscAdmTrans = priceDiscAdmTrans)
    {
        if (!prmisDefault(_priceDiscAdmTrans))
        {
            super(_priceDiscAdmTrans);
            priceDiscAdmTrans = _priceDiscAdmTrans as PriceDiscAdmTrans;
        }
        else
        {
            super();
        }

        return priceDiscAdmTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>AxPriceDiscAdmTrans</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>AxPriceDiscAdmTrans</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        PriceDiscAdmTrans localPriceDiscAdmTrans;
        return localPriceDiscAdmTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        axInventDim = AxInventDim_PriceDiscAdmTrans::newAxPriceDiscAdmTrans(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountCode</Name>
				<Source><![CDATA[
    public PriceDiscPartyCodeType parmAccountCode(PriceDiscPartyCodeType _accountCode = PriceDiscPartyCodeType::Table)
    {
        if (!prmisDefault(_accountCode))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, AccountCode), _accountCode);
        }

        return priceDiscAdmTrans.AccountCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDiscProductCodeTypeRule</Name>
				<Source><![CDATA[
    public final PriceDiscProductCodeTypeRule parmPriceDiscProductCodeTypeRule()
    {
        return PriceDiscProductCodeTypeRule::construct(this.parmItemCode());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDiscPartyCodeTypeRule</Name>
				<Source><![CDATA[
    public final PriceDiscPartyCodeTypeRule parmPriceDiscPartyCodeTypeRule()
    {
        return PriceDiscPartyCodeTypeRule::construct(this.parmAccountCode());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountRelation</Name>
				<Source><![CDATA[
    public str parmAccountRelation(str _accountRelation = '')
    {
        DictField dictField;

        if (!prmisDefault(_accountRelation))
        {
            dictField = new DictField(tableNum(PriceDiscAdmTrans), fieldNum(PriceDiscAdmTrans, AccountRelation));

            if (this.valueMappingInbound() && this.parmPriceDiscPartyCodeTypeRule().isPartyRoleRelationEnabled())
            {
                if (this.parmModule() == ModuleInventCustVend::Vend)
                {
                    this.validateInboundString(_accountRelation, dictField, this.mapPolicy().xMLMapVendAccount());
                    _accountRelation = this.axVendAccount(_accountRelation);
                }
                else
                {
                    this.validateInboundString(_accountRelation, dictField, this.mapPolicy().xMLMapCustAccount());
                    _accountRelation = this.axCustAccount(_accountRelation);
                }
            }
            else
            {
                this.validateInboundString(_accountRelation, dictField);
            }

            this.setField(fieldNum(PriceDiscAdmTrans, AccountRelation), _accountRelation);
        }

        if (this.valueMappingOutbound() && this.parmPriceDiscPartyCodeTypeRule().isPartyRoleRelationEnabled())
        {
            if (this.parmModule() == ModuleInventCustVend::Vend)
            {
                return this.axVendAccount(priceDiscAdmTrans.AccountRelation);
            }
            return this.axCustAccount(priceDiscAdmTrans.AccountRelation);
        }
        return priceDiscAdmTrans.AccountRelation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreement</Name>
				<Source><![CDATA[
    public PriceAgreement parmAgreement(PriceAgreement _agreement = '')
    {
        if (!prmisDefault(_agreement))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, Agreement), _agreement);
        }

        return priceDiscAdmTrans.Agreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementHeaderExt_RU</Name>
				<Source><![CDATA[
    public AgreementHeaderExtRecId_RU parmAgreementHeaderExt_RU(AgreementHeaderExtRecId_RU _agreementHeaderExtRecId = 0)
    {
        if (!prmisDefault(_agreementHeaderExtRecId))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, AgreementHeaderExt_RU), _agreementHeaderExtRecId);
        }

        return priceDiscAdmTrans.AgreementHeaderExt_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllocateMarkup</Name>
				<Source><![CDATA[
    public NoYes parmAllocateMarkup(NoYes _allocateMarkup = NoYes::No)
    {
        if (!prmisDefault(_allocateMarkup))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, AllocateMarkup), _allocateMarkup);
        }

        return priceDiscAdmTrans.AllocateMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmount</Name>
				<Source><![CDATA[
    public AmountCur parmAmount(AmountCur _amount = 0)
    {
        if (!prmisDefault(_amount))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, Amount), _amount);
        }

        return priceDiscAdmTrans.Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalendarDays</Name>
				<Source><![CDATA[
    public CalendarDays parmCalendarDays( CalendarDays _calendarDays = 0)
    {
        if (!prmisDefault(_calendarDays))
        {
            this.setField(fieldNum(PriceDiscAdmTrans,CalendarDays), _calendarDays);
        }

        return priceDiscAdmTrans.CalendarDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrency</Name>
				<Source><![CDATA[
    public str parmCurrency(str _currency = '')
    {
        DictField   dictField;

        if (!prmisDefault(_currency))
        {
            dictField = new DictField(tableNum(PriceDiscAdmTrans), fieldNum(PriceDiscAdmTrans, Currency));
            this.validateInboundCurrencyString(_currency, dictField);

            if (this.valueMappingInbound())
            {
                _currency = this.axCurrencyCode(_currency);
            }

            this.setField(fieldNum(PriceDiscAdmTrans, Currency), _currency);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(priceDiscAdmTrans.Currency);
        }
        return priceDiscAdmTrans.Currency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryTime</Name>
				<Source><![CDATA[
    public Days parmDeliveryTime(Days _deliveryTime = 0)
    {
        if (!prmisDefault(_deliveryTime))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, DeliveryTime), _deliveryTime);
        }

        return priceDiscAdmTrans.DeliveryTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDifferentFromPosted</Name>
				<Source><![CDATA[
    public NoYes parmDifferentFromPosted(NoYes _differentFromPosted = NoYes::No)
    {
        if (!prmisDefault(_differentFromPosted))
        {
            this.setField(fieldNum(PriceDiscAdmTrans,DifferentFromPosted), _differentFromPosted);
        }

        return priceDiscAdmTrans.DifferentFromPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisregardLeadTime</Name>
				<Source><![CDATA[
    public DisregardLeadTime parmDisregardLeadTime(DisregardLeadTime _disregardLeadTime = 1)
    {
        if (!prmisDefault(_disregardLeadTime))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, DisregardLeadTime), _disregardLeadTime);
        }

        return priceDiscAdmTrans.DisregardLeadTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    public FromDate parmFromDate(FromDate _fromDate = dateNull())
    {
        if (!prmisDefault(_fromDate))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, FromDate), _fromDate);
        }

        return priceDiscAdmTrans.FromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGenericCurrency</Name>
				<Source><![CDATA[
    public SalesGenericCurrency parmGenericCurrency(SalesGenericCurrency _genericCurrency = NoYes::No)
    {
        if (!prmisDefault(_genericCurrency))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, GenericCurrency), _genericCurrency);
        }

        return priceDiscAdmTrans.GenericCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventBaileeFreeDays_RU</Name>
				<Source><![CDATA[
    public InventBaileeFreeDays_RU parmInventBaileeFreeDays_RU(InventBaileeFreeDays_RU _inventBaileeFreeDays_RU = 0)
    {
        if (!prmisDefault(_inventBaileeFreeDays_RU))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, InventBaileeFreeDays_RU), _inventBaileeFreeDays_RU);
        }

        return priceDiscAdmTrans.InventBaileeFreeDays_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
        if (!prmisDefault(_inventDimId))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, InventDimId), _inventDimId);
        }

        return priceDiscAdmTrans.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemCode</Name>
				<Source><![CDATA[
    public PriceDiscProductCodeType parmItemCode(PriceDiscProductCodeType _itemCode = PriceDiscProductCodeType::Table)
    {
        if (!prmisDefault(_itemCode))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, ItemCode), _itemCode);
        }

        return priceDiscAdmTrans.ItemCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemRelation</Name>
				<Source><![CDATA[
    public str parmItemRelation(str _itemRelation = '')
    {
        DictField dictField;

        if (!prmisDefault(_itemRelation))
        {
            dictField = new DictField(tableNum(PriceDiscAdmTrans), fieldNum(PriceDiscAdmTrans, ItemRelation));

            if (this.valueMappingInbound() && this.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                if (this.parmModule() == ModuleInventCustVend::Vend)
                {
                    this.validateInboundItemIdString(_itemRelation, dictField);
                    _itemRelation = conPeek(this.axPurchItemId('', _itemRelation),1);
                }
                else
                {
                    this.validateInboundItemIdString(_itemRelation, dictField);
                    _itemRelation = conPeek(this.axSalesItemId('', _itemRelation),1);
                }
            }
            else
            {
                this.validateInboundItemIdString(_itemRelation, dictField);
            }

            this.setField(fieldNum(PriceDiscAdmTrans, ItemRelation), _itemRelation);
        }

        if (this.valueMappingOutbound() && this.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
        {
            if (this.parmModule() == ModuleInventCustVend::Vend)
            {
                return conPeek(this.axPurchItemId('', priceDiscAdmTrans.ItemRelation), 1);
            }
            else
            {
                return conPeek(this.axSalesItemId('', priceDiscAdmTrans.ItemRelation), 1);
            }
        }
        else
        {
            return priceDiscAdmTrans.ItemRelation;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalNum</Name>
				<Source><![CDATA[
    public PriceDiscJournalNum parmJournalNum(PriceDiscJournalNum _journalNum = '')
    {
        if (!prmisDefault(_journalNum))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, JournalNum), _journalNum);
        }

        return priceDiscAdmTrans.JournalNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisDefault(_lineNum))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, LineNum), _lineNum);
        }

        return priceDiscAdmTrans.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLog</Name>
				<Source><![CDATA[
    public PriceJournalLogTrans parmLog(PriceJournalLogTrans _log = '')
    {
        if (!prmisDefault(_log))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, Log), _log);
        }

        return priceDiscAdmTrans.Log;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkup</Name>
				<Source><![CDATA[
    public PriceMarkup parmMarkup(PriceMarkup _markup = 0)
    {
        if (!prmisDefault(_markup))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, Markup), _markup);
        }

        return priceDiscAdmTrans.Markup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    public MaximumRetailPrice_IN parmMaximumRetailPrice_IN(MaximumRetailPrice_IN _maximumRetailPrice_IN = 0)
    {
        if (!prmisDefault(_maximumRetailPrice_IN))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, MaximumRetailPrice_IN), _maximumRetailPrice_IN);
        }

        return priceDiscAdmTrans.MaximumRetailPrice_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModule</Name>
				<Source><![CDATA[
    public PriceDiscModule parmModule(PriceDiscModule _module = ModuleInventCustVend::Invent)
    {
        if (!prmisDefault(_module))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, Module), _module);
        }

        return priceDiscAdmTrans.Module;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPDSCalculationId</Name>
				<Source><![CDATA[
    public PDSCalculationId parmPDSCalculationId(PDSCalculationId _calculationId = '')
    {
        if (!prmisdefault(_calculationId))
        {
            this.setField(fieldnum(PriceDiscAdmTrans, PDSCalculationId), _calculationId);
        }

        return priceDiscAdmTrans.PDSCalculationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPercent1</Name>
				<Source><![CDATA[
    public DiscPct parmPercent1(DiscPct _percent1 = 0)
    {
        if (!prmisDefault(_percent1))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, Percent1), _percent1);
        }

        return priceDiscAdmTrans.Percent1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPercent2</Name>
				<Source><![CDATA[
    public DiscPct parmPercent2(DiscPct _percent2 = 0)
    {
        if (!prmisDefault(_percent2))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, Percent2), _percent2);
        }

        return priceDiscAdmTrans.Percent2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDiscTableRef</Name>
				<Source><![CDATA[
    public RecId parmPriceDiscTableRef(RecId _priceDiscTableRef = 0)
    {
        if (!prmisDefault(_priceDiscTableRef))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, PriceDiscTableRef), _priceDiscTableRef);
        }

        return priceDiscAdmTrans.PriceDiscTableRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    public PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
        if (!prmisDefault(_priceUnit))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, PriceUnit), _priceUnit);
        }

        return priceDiscAdmTrans.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantityAmountFrom</Name>
				<Source><![CDATA[
    public AmountQty parmQuantityAmountFrom(AmountQty _quantityAmountFrom = 0)
    {
        if (!prmisDefault(_quantityAmountFrom))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, QuantityAmountFrom), _quantityAmountFrom);
        }

        return priceDiscAdmTrans.QuantityAmountFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantityAmountTo</Name>
				<Source><![CDATA[
    public AmountQuantityTo parmQuantityAmountTo(AmountQuantityTo _quantityAmountTo = 0)
    {
        if (!prmisDefault(_quantityAmountTo))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, QuantityAmountTo), _quantityAmountTo);
        }

        return priceDiscAdmTrans.QuantityAmountTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmrelation</Name>
				<Source><![CDATA[
    public PriceType parmrelation(PriceType _relation = PriceType::PricePurch)
    {
        if (!prmisDefault(_relation))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, Relation), _relation);
        }

        return priceDiscAdmTrans.Relation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSearchAgain</Name>
				<Source><![CDATA[
    public NoYes parmSearchAgain(NoYes _searchAgain = NoYes::No)
    {
        if (!prmisDefault(_searchAgain))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, SearchAgain), _searchAgain);
        }

        return priceDiscAdmTrans.SearchAgain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    public ToDate parmToDate(ToDate _toDate = dateNull())
    {
        if (!prmisDefault(_toDate))
        {
            this.setField(fieldNum(PriceDiscAdmTrans, ToDate), _toDate);
        }

        return priceDiscAdmTrans.ToDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitId</Name>
				<Source><![CDATA[
    public str parmUnitId(str _unitID = '')
    {
        DictField   dictField;

        if (!prmisDefault(_unitID))
        {
            dictField = new DictField(tableNum(PriceDiscAdmTrans), fieldNum(PriceDiscAdmTrans, UnitId));

            if (this.valueMappingInbound() && this.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.validateInboundString(_unitID, dictField, this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                _unitID = this.axUnitOfMeasureSymbol(_unitID);
            }
            else
            {
                this.validateInboundString(_unitID, dictField);
            }

            this.setField(fieldNum(PriceDiscAdmTrans, UnitId), _unitID);
        }

        if (this.valueMappingOutbound() && this.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
        {
            return this.axUnitOfMeasureSymbol(priceDiscAdmTrans.UnitId);
        }
        else
        {
            return priceDiscAdmTrans.UnitId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDiscAdmTrans</Name>
				<Source><![CDATA[
    public PriceDiscAdmTrans priceDiscAdmTrans(PriceDiscAdmTrans _priceDiscAdmTrans = priceDiscAdmTrans)
    {
        if (!prmisDefault(_priceDiscAdmTrans))
        {
            this.setCurrentRecordFromExternal(_priceDiscAdmTrans);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetInternalValues</Name>
				<Source><![CDATA[
    public void resetInternalValues()
    {
        super();

        axInventDim.inventDim(this.priceDiscAdmTrans().inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountCode</Name>
				<Source><![CDATA[
    protected void setAccountCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, AccountCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountRelation</Name>
				<Source><![CDATA[
    protected void setAccountRelation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscTable, AccountRelation)))
        {
            return;
        }

        this.setAccountCode();

        if (this.isFieldSet(fieldNum(PriceDiscTable, AccountCode)))
        {
            if (!this.parmPriceDiscPartyCodeTypeRule().arePartyRelationsEnabled())
            {
                this.parmAccountRelation('');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAgreement</Name>
				<Source><![CDATA[
    protected void setAgreement()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Agreement)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllocateMarkup</Name>
				<Source><![CDATA[
    protected void setAllocateMarkup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, AllocateMarkup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAmount</Name>
				<Source><![CDATA[
    protected void setAmount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Amount)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCalendarDays</Name>
				<Source><![CDATA[
    protected void setCalendarDays()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, CalendarDays)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrency</Name>
				<Source><![CDATA[
    protected void setCurrency()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Currency)))
        {
            return;
        }

        this.setrelation();
        this.setAccountCode();
        this.setAccountRelation();

        if (this.isFieldSet(fieldNum(PriceDiscAdmTrans, Relation))         ||
            this.isFieldSet(fieldNum(PriceDiscAdmTrans, AccountCode))      ||
            this.isFieldSet(fieldNum(PriceDiscAdmTrans, AccountRelation)))
        {
            if (this.parmModule() == ModuleInventCustVend::Vend)
            {
                if (this.parmPriceDiscPartyCodeTypeRule().isPartyRoleRelationEnabled())
                {
                    this.parmCurrency(VendTable::find(this.parmAccountRelation()).Currency);
                }
            }
            else
            {
                if (this.parmPriceDiscPartyCodeTypeRule().isPartyRoleRelationEnabled())
                {
                    this.parmCurrency(CustTable::find(this.parmAccountRelation()).Currency);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryTime</Name>
				<Source><![CDATA[
    protected void setDeliveryTime()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, DeliveryTime)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDifferentFromPosted</Name>
				<Source><![CDATA[
    protected void setDifferentFromPosted()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, DifferentFromPosted)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromDate</Name>
				<Source><![CDATA[
    protected void setFromDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, FromDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setGenericCurrency</Name>
				<Source><![CDATA[
    protected void setGenericCurrency()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, GenericCurrency)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    public void setInventDimId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, InventDimId)))
        {
            return;
        }

        this.axInventDim().setInventDimId();

        if (this.axInventDim().isFieldSet(fieldNum(InventDim, InventDimId)))
        {
            this.parmInventDimId(this.axInventDim().parmInventDimId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemCode</Name>
				<Source><![CDATA[
    public void setItemCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemRelation</Name>
				<Source><![CDATA[
    protected void setItemRelation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, ItemRelation)))
        {
            return;
        }

        this.setItemCode();

        if (this.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (this.parmItemCode() == PriceDiscProductCodeType::All)
            {
                this.parmItemRelation('');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJournalNum</Name>
				<Source><![CDATA[
    protected void setJournalNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, JournalNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, LineNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLog</Name>
				<Source><![CDATA[
    protected void setLog()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Log)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMarkup</Name>
				<Source><![CDATA[
    protected void setMarkup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Markup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setModule</Name>
				<Source><![CDATA[
    protected void setModule()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Module)))
        {
            return;
        }

        this.setrelation();

        if (this.isFieldSet(fieldNum(PriceDiscAdmTrans, Relation)))
        {
            this.parmModule(PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(this.parmRelation()).partyRoleModule());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPercent1</Name>
				<Source><![CDATA[
    protected void setPercent1()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Percent1)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPercent2</Name>
				<Source><![CDATA[
    protected void setPercent2()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Percent2)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDiscTableRef</Name>
				<Source><![CDATA[
    protected void setPriceDiscTableRef()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, PriceDiscTableRef)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceUnit</Name>
				<Source><![CDATA[
    protected void setPriceUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, PriceUnit)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantityAmountFrom</Name>
				<Source><![CDATA[
    protected void setQuantityAmountFrom()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, QuantityAmountFrom)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantityAmountTo</Name>
				<Source><![CDATA[
    protected void setQuantityAmountTo()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, QuantityAmountTo)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setrelation</Name>
				<Source><![CDATA[
    protected void setrelation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, Relation)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSearchAgain</Name>
				<Source><![CDATA[
    protected void setSearchAgain()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, SearchAgain)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setAgreement();
        this.setItemCode();
        this.setAccountCode();
        this.setItemRelation();
        this.setAccountRelation();
        this.setQuantityAmountFrom();
        this.setQuantityAmountTo();
        this.setCalendarDays();
        this.setDifferentFromPosted();
        this.setFromDate();
        this.setToDate();
        this.setAmount();
        this.setCurrency();
        this.setGenericCurrency();
        this.setPercent1();
        this.setPercent2();
        this.setDeliveryTime();
        this.setSearchAgain();
        this.setPriceUnit();
        this.setrelation();
        this.setUnitId();
        this.setMarkup();
        this.setAllocateMarkup();
        this.setModule();
        this.setLineNum();
        this.setJournalNum();
        this.setPriceDiscTableRef();
        this.setLog();
        this.setInventDimId();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToDate</Name>
				<Source><![CDATA[
    protected void setToDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, ToDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUnitId</Name>
				<Source><![CDATA[
    protected void setUnitId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PriceDiscAdmTrans, UnitId)))
        {
            return;
        }

        this.setItemCode();

        if (this.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode)))
        {
            if (!this.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
            {
                this.parmUnitId('');
                return;
            }
        }

        this.setrelation();
        this.setItemRelation();

        if (this.isFieldSet(fieldNum(PriceDiscAdmTrans, Relation))     ||
            this.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemCode))     ||
            this.isFieldSet(fieldNum(PriceDiscAdmTrans, ItemRelation)))
        {
            if (this.parmModule() == ModuleInventCustVend::Vend)
            {
                if (this.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
                {
                    this.parmUnitId(InventTable::find(this.parmItemRelation()).purchUnitId());
                }
            }
            else
            {
                if (this.parmPriceDiscProductCodeTypeRule().isReleasedProductRelationEnabled())
                {
                    this.parmUnitId(InventTable::find(this.parmItemRelation()).salesUnitId());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventDim</Name>
				<Source><![CDATA[
    public void updateFromInventDim()
    {
        //When updating axPriceDiscAdmTrans through an instance of axInventDim_PriceDiscAdmTrans only
        //this.setInventDimId() is allowed to be called, not the entire setTableFields()
        //as is done through the save-method.

        ttsbegin;

        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        this.setInventDimId();

        this.validateFields();

        //this.validateWrite(); //Commented as calling of validateWrite method from here results in error as this calls checkPriceDiscAdmTrans

        this.write();

        priceDiscAdmTrans.InventDimId = InventDim::inventDimIdBlank();

        this.resetInternalValues();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public void validateWrite()
    {
        this.checkPriceDiscAdmTrans();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxPriceDiscAdmTrans construct()
    {
        return new AxPriceDiscAdmTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    public static AxPriceDiscAdmTrans newPriceDiscAdmTrans(PriceDiscAdmTrans _priceDiscAdmTrans)
    {
        AxPriceDiscAdmTrans axPriceDiscAdmTrans = AxPriceDiscAdmTrans::construct();
        axPriceDiscAdmTrans.priceDiscAdmTrans(_priceDiscAdmTrans);

        return axPriceDiscAdmTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>