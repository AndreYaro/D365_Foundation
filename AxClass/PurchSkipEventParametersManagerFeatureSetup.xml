<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchSkipEventParametersManagerFeatureSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchSkipEventParametersManagerFeatureSetup</c> class sets the PurchLine enabled parameter based
/// on PurchUpdateSkipPurchLineEventsEnabled.
/// </summary>
[SysSetupTable(tableStr(PurchParameters))]
[SysSetupConfig(true, 300)]
internal final class PurchSkipEventParametersManagerFeatureSetup extends SysSetupAsync implements SysSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    public void loadData()
    {
        PurchSkipEventParametersManagerFeatureSetup::setPurchSkipEventParameterEnabledField();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchSkipEventParameterEnabledField</Name>
				<Source><![CDATA[
    private static void setPurchSkipEventParameterEnabledField()
    {
        boolean isPurchUpdateSkipPurchLineEventsEnabled = Global::isFlightEnabled('PurchUpdateSkipPurchLineEventsEnabled');

        ttsbegin;

        PurchParameters purchParameters;
        while select forupdate crosscompany purchParameters
        {
            changecompany (purchParameters.DataAreaId)
            {
                purchParameters.IsPurchUpdateSkipPurchLineEventsEnabled = isPurchUpdateSkipPurchLineEventsEnabled;
                purchParameters.doUpdate();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>