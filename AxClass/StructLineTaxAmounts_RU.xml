<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>StructLineTaxAmounts_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class StructLineTaxAmounts_RU
{
    Amount  amountInclTax;
    Amount  amountLiableToTax;
    Amount  taxAmount;
    Qty     qty;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        amountInclTax,
        amountLiableToTax,
        taxAmount,
        qty
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addAmounts</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void addAmounts(StructLineTaxAmounts_RU _amounts)
    {
        amountInclTax     += _amounts.amountInclTax();
        amountLiableToTax += _amounts.amountLiableToTax();
        taxAmount         += _amounts.taxAmount();
        qty               += _amounts.qty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountInclTax</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Amount amountInclTax(Amount _amountInclTax = amountInclTax)
    {
        amountInclTax = _amountInclTax;
        return amountInclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountLiableToTax</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Amount amountLiableToTax(Amount _amountLiableToTax = amountLiableToTax)
    {
        amountLiableToTax = _amountLiableToTax;
        return amountLiableToTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clear</Name>
				<Source><![CDATA[
    private void clear()
    {
        amountInclTax     = 0;
        amountLiableToTax = 0;
        taxAmount         = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public container pack()
    {
        return [ #CurrentVersion, #CurrentList ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>price</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Price price(Qty _qty = qty)
    {
        ;
        qty = _qty ? _qty : 1;
        return amountLiableToTax / qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Qty qty(Qty _qty = qty)
    {
        ;
        qty = _qty;
        return qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subAmounts</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void subAmounts(StructLineTaxAmounts_RU _amounts)
    {
        amountInclTax     -= _amounts.amountInclTax();
        amountLiableToTax -= _amounts.amountLiableToTax();
        taxAmount         -= _amounts.taxAmount();
        qty               -= _amounts.qty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAmount</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Amount taxAmount(Amount _taxAmount = taxAmount)
    {
        ;
        taxAmount = _taxAmount;
        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean unpack(container _packedClass)
    {
        int version = conpeek(_packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [ version, #CurrentList ] = _packedClass;
                return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static StructLineTaxAmounts_RU create(container _packedClass)
    {
        StructLineTaxAmounts_RU cls = new StructLineTaxAmounts_RU();

        cls.unpack(_packedClass);

        return cls;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>