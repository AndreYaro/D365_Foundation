<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjectConfigurationProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Provides project configuration information.
/// </summary>
[ExportMetadataAttribute("SourceDocumentIProjectConfigurationProvider", "DefaultProjectConfigurationProvider"),ExportAttribute("Dynamics.AX.Application.SourceDocumentIProjectConfigurationProvider")]
public class ProjectConfigurationProvider implements SourceDocumentIProjectConfigurationProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks is a <c>SourceDocumentLineItem</c> has a project associated with it.
    /// </summary>
    /// <param name = "_sourceDocumentLineItem">The source document line item to check.</param>
    /// <returns>true if the source document line item has a project associated with it; otherwise false.</returns>
    public boolean hasProject(SourceDocumentLineItem _sourceDocumentLineItem)
    {
        SourceDocumentLineItemIProject  sourceDocumentLineItemIProject;
        boolean                         hasProject;

        if (!Project::Enabled())
        {
            return false;
        }

        sourceDocumentLineItemIProject = _sourceDocumentLineItem as SourceDocumentLineItemIProject;
        if (sourceDocumentLineItemIProject != null &&
            sourceDocumentLineItemIProject.parmProjectId() &&
            ProjectSourceDocumentLineItemHelper::isIntercompany(_sourceDocumentLineItem) == false)
        {
            hasProject = true;
        }

        return hasProject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjectRevenueLineItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks is a <c>SourceDocumentLineItem</c> is a project revenue line item.
    /// </summary>
    /// <param name = "_sourceDocumentLineItem">The source document line item to check.</param>
    /// <returns>true if the source document line itemis a project revenue line item; otherwise false.</returns>
    public boolean isProjectRevenueLineItem(SourceDocumentLineItem _sourceDocumentLineItem)
    {
        return (_sourceDocumentLineItem is ProjectRevenueSourceDocLineItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjectBudgetControlEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether project budget control is enabled for the source document line item.
    /// </summary>
    /// <param name="_sourceDocumentLineItem">
    /// The source document line item.
    /// </param>
    /// <param name="_isOnDemandBudgetCheck">
    /// A Boolean value that indicates whether to perform an on-demand project budget check.
    /// </param>
    /// <returns>
    /// true if project budget control is enabled for the source document line item; otherwise, false.
    /// </returns>
    public boolean isProjectBudgetControlEnabled(SourceDocumentLineItem  _sourceDocumentLineItem, boolean _isOnDemandBudgetCheck)
    {
        return ProjectCommitmentFacade::isProjectBudgetControlEnabled(_sourceDocumentLineItem, _isOnDemandBudgetCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDocumentHasProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified source document line item is part of a source document that has project information.
    /// </summary>
    /// <param name="_sourceDocumentLineItem">
    /// The source document line item.
    /// </param>
    /// <param name="_sourceDocument">
    /// The source document to check for the existence of project; optional.
    /// </param>
    /// <returns>
    /// True if the specified source document line item is part of a source document that has project information.
    /// </returns>
    public boolean sourceDocumentHasProject(SourceDocumentLineItem _sourceDocumentLineItem, SourceDocument _sourceDocument = null)
    {
        return ProjectSourceDocumentLineItemHelper::sourceDocumentHasProject(_sourceDocumentLineItem, _sourceDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDocumentLineStateRevenueTrack</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Handle source document state change for revenue tracking.
    /// </summary>
    /// <param name="_targetAccountingStatus">
    ///     The new accounting status.
    /// </param>
    /// <param name="_sourceDocumentLine">
    ///     The source document line.
    /// </param>
    public void sourceDocumentLineStateRevenueTrack(SourceDocumentLineAccountingStatus _targetAccountingStatus, SourceDocumentLine _sourceDocumentLine)
    {
        ProjFundingLimitTrackingManager::sourceDocumentLineStateRevenueTrack(_targetAccountingStatus, _sourceDocumentLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLedgerPostingTypeProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a ledger posting type is for a project.
    /// </summary>
    /// <param name="_ledgerPostingType">
    /// The ledger posting type.
    /// </param>
    /// <returns>
    /// true if a ledger posting type is for a project; otherwise, false.
    /// </returns>
    public boolean isLedgerPostingTypeProject(LedgerPostingType _ledgerPostingType)
    {
        return ProjectSourceDocumentLineItemHelper::isLedgerPostingTypeProject(_ledgerPostingType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjectConfigurationKeyEnabled</Name>
				<Source><![CDATA[
    public boolean isProjectConfigurationKeyEnabled()
    {
        return Project::Enabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>