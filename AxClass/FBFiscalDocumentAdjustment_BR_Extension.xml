<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBFiscalDocumentAdjustment_BR_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Initializes the tax adjustment record
/// </summary>
public static class FBFiscalDocumentAdjustment_BR_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromLedgerJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the tax adjustment record from <c>LedgerJournalTrans</c>.
    /// </summary>
    /// <param name="_record">
    ///     The <c>FBFiscalDocumentAdjustment_BR</c> tax adjustment record.
    /// </param>
    /// <param name="_ledgerJournalTrans">
    ///     The <c>LedgerJournalTrans</c> to initialize the adjustment.
    /// </param>
    public static void initFromLedgerJournalTrans(FBFiscalDocumentAdjustment_BR _record, LedgerJournalTrans _ledgerJournalTrans)
    {
        FiscalEstablishment_BR fiscalEstablishment;
        FBLedgerJournalTrans_FiscalBooks_BR ledgerJournalTransFiscalBooks = _ledgerJournalTrans.SysExtensionSerializerMap::getExtensionTable(tableNum(FBLedgerJournalTrans_FiscalBooks_BR));

        select firstonly crossCompany FiscalEstablishmentId from fiscalEstablishment
            where fiscalEstablishment.RecId == ledgerJournalTransFiscalBooks.FiscalEstablishment_BR;

        boolean createPayment;
        boolean isPovertyFund;

        if (ledgerJournalTransFiscalBooks.TaxType == TaxType_BR::IPI)
        {
            FBGeneralAdjustmentCode_BR fiscalDocumentAdjustmentCodeIPI = FBGeneralAdjustmentCode_BR::find(ledgerJournalTransFiscalBooks.GeneralAdjustmentCode);

            createPayment = fiscalDocumentAdjustmentCodeIPI.CreatePayment;
            isPovertyFund = fiscalDocumentAdjustmentCodeIPI.IsPovertyFund;
        }
        else
        {
            FBFiscalDocumentAdjustmentCodeICMS_BR fiscalDocumentAdjustmentCode = FBFiscalDocumentAdjustmentCodeICMS_BR::find(ledgerJournalTransFiscalBooks.FiscalDocumentAdjustmentCodeICMS);

            createPayment = fiscalDocumentAdjustmentCode.CreatePayment;
            isPovertyFund = fiscalDocumentAdjustmentCode.IsPovertyFund;
        }

        _record.FiscalDocumentTaxTrans_BR = ledgerJournalTransFiscalBooks.FiscalDocumentTaxTrans_BR;
        _record.FBFiscalDocumentAdjustmentCodeICMS_BR = ledgerJournalTransFiscalBooks.FiscalDocumentAdjustmentCodeICMS;
        _record.FBGeneralAdjustmentCode_BR             = ledgerJournalTransFiscalBooks.GeneralAdjustmentCode;
        _record.State  = ledgerJournalTransFiscalBooks.State;
        _record.CreatePayment                          = createPayment;
        _record.IsPovertyFund                          = isPovertyFund;
        _record.TaxType_BR = ledgerJournalTransFiscalBooks.TaxType;
        _record.FBObservationCodeTable_BR = ledgerJournalTransFiscalBooks.ObservationCodeTable;
        _record.ComplementaryDescription = _ledgerJournalTrans.txt;
        _record.TaxAmount = ledgerJournalTransFiscalBooks.TaxAmount;
        _record.TaxBaseAmount = ledgerJournalTransFiscalBooks.TaxBaseAmount;
        _record.TaxAmountOther = ledgerJournalTransFiscalBooks.TaxAmountOther;
        _record.TaxValue = ledgerJournalTransFiscalBooks.TaxValue;
        _record.VoucherDataArea = _ledgerJournalTrans.dataAreaId;
        _record.Voucher = _ledgerJournalTrans.Voucher;
        _record.TransDate = _ledgerJournalTrans.TransDate;
        _record.IsCancelled = _ledgerJournalTrans.RevRecId != 0;
        _record.FiscalEstablishmentId = fiscalEstablishment.FiscalEstablishmentId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>