<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashReceiptsUsageReportContractLV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The data contract class for the <c>CashReceiptsUsageReportContractLV</c> XML and Excel reports.
/// </summary>
[
    DataContract,
    SysOperationGroup('ReportDate', "@GLS100733", '1'),
    SysOperationGroup('TaxAuthority', "@GLS113185", '2'),
    SysOperationGroup('Responsible', "@SYS131514", '3'),
    SysOperationGroup('QuarterOfTheYear', "@GLS113404", '4'),
    SysOperationGroup('ReportOutput', "@GLS104187", '5'),
    SysOperationGroup('Format', "@ElectronicReporting:Format", '6'),
    SysOperationContractProcessing(classStr(CashReceiptsUsageReportUIBuilder_LV))
]
public class CashReceiptsUsageReportContractLV implements SysOperationValidatable
{
    private static str ERModelName = 'Cash Receipts';
    private static str ERContainer = 'CashReceipts';

    private TransDate               reportDate;
    private TaxAuthority            taxAuthority;
    private CompanyName             taxAuthorityName;
    private QuarterOfYear           quarterOfYear;
    private HcmWorkerRecId          hcmWorker;
    private Yr                      reportYear;
    private DirPartyName            workerName;
    private DirNameProfessionalTitle workerTitle;
    private Phone                   phone;
    private NoYes                   generateXML;
    private NoYes                   generateExcel;
    private TransDate               startDate;
    private TransDate               endDate;
    private ERFormatMappingId       formatMapping;
    private str                     query;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFormatMapping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter formatMapping.
    /// </summary>
    /// <param name = "_formatMapping">
    /// The new value of the datacontract parameter formatMapping.
    /// </param>
    /// <returns>
    /// The current value of the datacontract parameter formatMapping.
    /// </returns>
    [
        DataMember('FormatMapping'),
        SysOperationGroupMember('Format'),
        SysOperationLabel(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationDisplayOrder('1')
    ]
    public ERFormatMappingId parmFormatMapping(ERFormatMappingId _formatMapping = formatMapping)
    {
        formatMapping = _formatMapping;
        return formatMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGenerateXML</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter generateXML.
    /// </summary>
    /// <param name = "_generateXML">
    /// The new value of the datacontract parameter generateXML.
    /// </param>
    /// <returns>
    /// The current value of the datacontract parameter generateXML.
    /// </returns>
    [
        DataMember('generateXML'),
        SysOperationGroupMember('Format'),
        SysOperationLabel(literalstr("@CashManagement_Localization:GenerateFile")),
        SysOperationDisplayOrder('2')
    ]
    public NoYes parmGenerateXML(NoYes _generateXML = generateXML)
    {
        generateXML = _generateXML;
        return generateXML;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGenerateExcel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter generateExcel.
    /// </summary>
    /// <param name = "_generateExcel">
    /// The new value of the datacontract parameter generateExcel.
    /// </param>
    /// <returns>
    /// The current value of the datacontract parameter generateExcel.
    /// </returns>
    [
        DataMember('generateExcel'),
        SysOperationGroupMember('Format'),
        SysOperationLabel(literalstr("@CashManagement_Localization:GenerateReport")),
        SysOperationDisplayOrder('3')
    ]
    public NoYes parmGenerateExcel(NoYes _generateExcel = generateExcel)
    {
        generateExcel = _generateExcel;
        return generateExcel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter query.
    /// </summary>
    /// <param name = "_query">
    /// The new value of the datacontract parameter query.
    /// </param>
    /// <returns>
    /// The current value of the datacontract parameter query.
    /// </returns>
    [DataMember, AifQueryTypeAttribute('_query', querystr(CashReceiptsUsageReportLV))]
    public str parmQuery(str _query = query)
    {
        query = _query;
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter startDate.
    /// </summary>
    /// <param name = "_startDate">
    /// The new value of the datacontract parameter startDate.
    /// </param>
    /// <returns>
    /// The current value of the datacontract parameter startDate.
    /// </returns>
    [DataMember, SysOperationControlVisibility(false)]
    public TransDate parmStartDate(TransDate _startDate = startDate)
    {
        startDate = _startDate;
        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter endDate.
    /// </summary>
    /// <param name = "_endDate">
    /// The new value of the datacontract parameter endDate.
    /// </param>
    /// <returns>
    /// The current value of the datacontract parameter endDate.
    /// </returns>
    [DataMember, SysOperationControlVisibility(false)]
    public TransDate parmEndDate(TransDate _endDate = endDate)
    {
        endDate = _endDate;
        return endDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmERModelName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the datacontract parameter ERModelName.
    /// </summary>
    /// <returns>
    /// The current value of the datacontract parameter ERModelName.
    /// </returns>
    public static str parmERModelName()
    {
        return ERModelName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmERContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the datacontract parameter ERContainer.
    /// </summary>
    /// <returns>
    /// The current value of the datacontract parameter ERContainer.
    /// </returns>
    public static str parmERContainer()
    {
        return ERContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHcmWorker</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter hcmWorker.
    /// </summary>
    /// <param name="_hcmWorker">
    /// The new value of the datacontract parameter hcmWorker; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter hcmWorker.
    /// </returns>
    [
        DataMember('hcmWorker'),
        SysOperationGroupMember('Responsible'),
        SysOperationLabel(literalstr("@GLS113381")),
        SysOperationDisplayOrder('1')
    ]
    public HcmWorkerRecId parmHcmWorker(HcmWorkerRecId _hcmWorker = hcmWorker)
    {
        hcmWorker = _hcmWorker;
        return hcmWorker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter phone.
    /// </summary>
    /// <param name="_phone">
    /// The new value of the datacontract parameter phone; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter phone.
    /// </returns>
    [DataMember, SysOperationControlVisibility(false)]
    public Phone parmPhone(Phone _phone = hcmWorker::find(hcmWorker).phone())
    {
        phone = _phone;
        return phone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuarterOfYear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter quarterOfYear.
    /// </summary>
    /// <param name="_quarterOfYear">
    /// The new value of the datacontract parameter quarterOfYear; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter quarterOfYear.
    /// </returns>
    [
        DataMember('QuarterOfYear'),
        SysOperationGroupMember('QuarterOfTheYear'),
        SysOperationDisplayOrder('1')
    ]
    public QuarterOfYear parmQuarterOfYear(QuarterOfYear _quarterOfYear = quarterOfYear)
    {
        quarterOfYear = _quarterOfYear;
        return quarterOfYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter reportDate.
    /// </summary>
    /// <param name="_reportDate">
    /// The new value of the datacontract parameter reportDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter reportDate.
    /// </returns>
    [
        DataMember('ReportDate'),
        SysOperationGroupMember('ReportDate'),
        SysOperationDisplayOrder('1')
    ]
    public TransDate parmReportDate(TransDate _reportDate = reportDate)
    {
        reportDate = _reportDate;
        return reportDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportYear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter reportYear.
    /// </summary>
    /// <param name="_reportYear">
    /// The new value of the datacontract parameter reportYear; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter reportYear.
    /// </returns>
    [
        DataMember('ReportYear'),
        SysOperationGroupMember('QuarterOfTheYear'),
        SysOperationLabel(literalstr("@SYS107162")),
        SysOperationDisplayOrder('2')
    ]
    public Yr parmReportYear(Yr _reportYear = reportYear)
    {
        reportYear = _reportYear;
        return reportYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxAuthority</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter taxAuthority.
    /// </summary>
    /// <param name="_taxAuthority">
    /// The new value of the datacontract parameter taxAuthority; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter taxAuthority.
    /// </returns>
    [
        DataMember('TaxAuthority'),
        SysOperationGroupMember('TaxAuthority'),
        SysOperationDisplayOrder('1')
    ]
    public TaxAuthority parmTaxAuthority(TaxAuthority _taxAuthority = taxAuthority)
    {
        taxAuthority = _taxAuthority;
        return taxAuthority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxAuthorityName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter taxAuthorityName.
    /// </summary>
    /// <param name="_taxAuthorityName">
    /// The new value of the datacontract parameter taxAuthorityName; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter taxAuthorityName.
    /// </returns>
    [DataMember, SysOperationControlVisibility(false)]
    public TaxAuthority parmTaxAuthorityName(CompanyName _taxAuthorityName =  TaxAuthorityAddress::find(taxAuthority).Name)
    {
        taxAuthorityName = _taxAuthorityName;
        return taxAuthorityName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter workerName.
    /// </summary>
    /// <param name="_name">
    /// The new value of the datacontract parameter workerName; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter workerName.
    /// </returns>
    [DataMember, SysOperationControlVisibility(false)]
    public DirPartyName parmWorkerName(DirPartyName _name = hcmWorker::worker2Name(hcmWorker))
    {
        workerName = _name;
        return workerName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerTitle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter workerTitle.
    /// </summary>
    /// <param name = "_workerTitle">
    /// The new value of the datacontract parameter workerTitle; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter workerTitle.
    /// </returns>
    [DataMember, SysOperationControlVisibility(false)]
    public DirPartyName parmWorkerTitle(DirNameProfessionalTitle _workerTitle = DirPerson::find(HcmWorker::find(hcmWorker).Person).ProfessionalTitle)
    {
        workerTitle = _workerTitle;
        return workerTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the report input parameters.
    /// </summary>
    /// <returns>
    /// true if no errors; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (!formatMapping)
        {
            ret = checkFailed("@CashManagement_Localization:FormatNotSpecified");
        }

        if (!generateXML && !generateExcel)
        {
            ret = checkFailed("@CashManagement_Localization:GenerateOptionNotSpecified");
        }

        if (reportYear < 1900 || reportYear > 9999)
        {
            ret = checkFailed(strFmt("@GLS60369", reportYear));
        }

        if (!reportDate)
        {
            ret = checkFailed("@SYS4082063");
        }

        if (!taxAuthority)
        {
            ret = checkFailed("@SYS4082062");
        }

        if (!hcmWorker)
        {
            ret = checkFailed("@SYS4082061");
        }

        if (!quarterOfYear)
        {
            ret = checkFailed("@SYS4082060");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>