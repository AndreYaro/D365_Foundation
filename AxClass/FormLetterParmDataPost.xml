<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormLetterParmDataPost</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FormLetterParmDataPost</c> class is the parameter data creation versioning strategy
/// for the post.
/// </summary>
/// <remarks>
/// This class requires the associated <c>FormLetterParmData</c> object to implement the
/// <c>FormLetterICorrectionParmData</c> interface.
/// </remarks>
internal class FormLetterParmDataPost extends FormLetterParmDataVersioning
{
    FormLetterParmDataPostable formLetterParmDataPostable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>shouldCreateParmLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a parameter line should be created.
    /// </summary>
    /// <param name="_parmLine">
    ///    The parameter line to be checked.
    /// </param>
    /// <returns>
    ///    true if the line should be created; otherwise, false.
    /// </returns>
    public boolean shouldCreateParmLine(FormletterParmLine _parmLine)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the data selection query depending on whether it is an initial version or a post.
    /// </summary>
    public void initQuery()
    {
        formLetterParmDataPostable.updateQueryBuildOnPost();

    }

]]></Source>
			</Method>
			<Method>
				<Name>getLineQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets quantities from the source line that will be used for the parameter line generation.
    /// </summary>
    /// <param name="_sourceLine">
    /// The source line for which to retrieve the quantities.
    /// </param>
    /// <returns>
    /// A container that contains the new document unit of measure quantity, the new inventory unit
    /// quantity, the previous document unit quantity, and the previous inventory unit quantity
    /// </returns>
    public container getLineQuantities(Common _sourceLine)
    {
        return formLetterParmDataPostable.getPostingLineQuantities(_sourceLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWGetLineQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves catch weight quantities from the source line to the used for the parameter line
    /// generation.
    /// </summary>
    /// <param name="_sourceLine">
    /// The source line for which to retrieve the quantities.
    /// </param>
    /// <returns>
    ///  A container that contains 2 elements
    ///  <list type="number">
    ///   <item>
    ///   <description>The new catch weight unit quantity</description>
    ///   </item>
    ///   <item>
    ///   <description>The previous catch weight unit quantity,</description>
    ///   </item>
    ///  </list>
    /// </returns>
    public container pdsCWGetLineQuantities(Common _sourceLine)
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static FormLetterParmDataPost construct()
    {
        return new FormLetterParmDataPost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormLetterParmData</Name>
				<Source><![CDATA[
    protected FormletterParmData parmFormLetterParmData(formletterParmData _formLetterParmData = formletterParmData)
    {
        formLetterParmDataPostable = _formLetterParmData as FormLetterParmDataPostable;

        if (!formLetterParmDataPostable )
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        return super(_formLetterParmData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>