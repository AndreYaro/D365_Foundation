<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleProjAdvancedJournalTaxWithhold_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class defines the accounting distribution rules for Indian withholding tax lines during project advanced journal posting.
/// </summary>
[
    SourceDocumentEnumExtensionAttribute(
        enumStr(BusinessEvent_ProjAdvancedJournal),
        BusinessEvent_ProjAdvancedJournal::RecordProjectActivity,
        MonetaryAmount::WithholdTax_IN)
]
internal final class AccDistRuleProjAdvancedJournalTaxWithhold_IN extends AccountingDistributionRule
{
    private TaxWithholdDirection_IN taxWithholdDirection;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the accounting distribution rule.
    /// </summary>
    protected void initialize()
    {
        super();

        if (sourceDocumentLineItem is SourceDocumentLineItemITaxWithhold_IN)
        {
            SourceDocumentLineItemITaxWithhold_IN iTaxWithhold = sourceDocumentLineItem as SourceDocumentLineItemITaxWithhold_IN;
            taxWithholdDirection = iTaxWithhold.parmTaxWithholdDirection();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>LedgerPostingType</c> parameter during project advanced journal posting for withholding tax.
    /// </summary>
    /// <returns>
    /// The value of the <c>LedgerPostingType</c> parameter.
    /// </returns>
    public LedgerPostingType parmLedgerPostingType()
    {
        LedgerPostingType ledgerPostingType = LedgerPostingType::TDS_IN;

        if (sourceDocumentLineItem is TaxWithholdSourceDocSubLineItem_IN)
        {
            TaxWithholdSourceDocSubLineItem_IN taxWithholdSourceDocSubLineItem = sourceDocumentLineItem;

            switch (taxWithholdSourceDocSubLineItem.getTaxWithholdMap().TaxWithholdType)
            {
                case TaxWithholdCodeType_IN::TDS :
                    ledgerPostingType = LedgerPostingType::TDS_IN;
                    break;

                case TaxWithholdCodeType_IN::TCS :
                    ledgerPostingType = LedgerPostingType::TCS_IN;
                    break;

                default :
                    break;
            }
        }
        return ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>Side</c> parameter during project advanced journal posting for withholding tax.
    /// </summary>
    /// <returns>
    /// The value of the <c>Side</c> parameter.
    /// </returns>
    public DebitCredit parmSide()
    {
        DebitCredit side = DebitCredit::Credit;

        switch (taxWithholdDirection)
        {
            case TaxWithholdDirection_IN::IncomingTax :
                if (this.parmAmount() >= 0)
                {
                    side = DebitCredit::Debit;
                }
                break;

            case TaxWithholdDirection_IN::OutgoingTax :
                if (this.parmAmount() < 0)
                {
                    side = DebitCredit::Debit;
                }
                break;

            default :
                break;
        }
        return side;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>