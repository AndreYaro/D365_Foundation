<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalTransData</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventJournalTransData extends JournalTransData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findVoucher</Name>
				<Source><![CDATA[
    public Voucher findVoucher()
    {
        Integer                 journalVoucherChange    = journalTableData.journalTable().VoucherChange;
        InventJournalTrans      inventJournalTrans      = journalTrans;
        InventJournalTrans      tmpJournalTrans;

        switch (journalVoucherChange)
        {
            case InventJournalVoucherChange::DateItemChange :
                if (inventJournalTrans.JournalType == InventJournalType::BOM && inventJournalTrans.bomLine)
                {
                    return inventJournalTrans.assemblyBOMJournalLine().Voucher;
                }
                select firstonly Voucher from tmpJournalTrans
                        where tmpJournalTrans.JournalId    == inventJournalTrans.JournalId  &&
                              tmpJournalTrans.TransDate    == inventJournalTrans.TransDate  &&
                              tmpJournalTrans.ItemId       == inventJournalTrans.ItemId     &&
                              tmpJournalTrans.Voucher;

                return tmpJournalTrans.Voucher;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromJournalTable</Name>
				<Source><![CDATA[
    public void initFromJournalTable()
    {
        InventJournalTable  inventJournalTable = this.journalTableData().journalTable();
        InventJournalTrans  inventJournalTrans = journalTrans;

        super();

        inventJournalTrans.JournalType              = inventJournalTable.JournalType;
        // <GEERU>
        inventJournalTrans.Storno_RU                = inventJournalTable.Storno_RU;
        // </GEERU>
        if (inventJournalTrans.JournalType == InventJournalType::OwnershipChange)
        {
            inventJournalTrans.Worker               = DirPersonUserEx::findUserWorkerReference();
        }
        else
        {
            inventJournalTrans.Worker               = inventJournalTable.Worker;
        }
        inventJournalTrans.LedgerDimension          = inventJournalTable.LedgerDimension;

        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            inventJournalTrans.initSiteInventory(inventJournalTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVoucherObjectKeyValid</Name>
				<Source><![CDATA[
    protected boolean isVoucherObjectKeyValid()
    {
        Integer                 journalVoucherChange    = journalTableData.journalTable().VoucherChange;
        InventJournalTrans      inventJournalTrans      = journalTrans;

        switch (journalVoucherChange)
        {
            case InventJournalVoucherChange::DateChange         :
                return inventJournalTrans.TransDate ? true : false;

            case InventJournalVoucherChange::DateItemChange     :
                if (inventJournalTrans.JournalType == InventJournalType::BOM && inventJournalTrans.bomLine)
                {
                    return inventJournalTrans.TransDate && inventJournalTrans.assemblyBOMJournalLine().ItemId ? true : false;
                }
                return inventJournalTrans.TransDate && inventJournalTrans.ItemId ? true : false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucherObjectKey</Name>
				<Source><![CDATA[
    public container voucherObjectKey()
    {
        Integer                 journalVoucherChange    = journalTableData.journalTable().VoucherChange;
        InventJournalTrans      inventJournalTrans      = journalTrans;

        switch (journalVoucherChange)
        {
            case InventJournalVoucherChange::DateChange         :
                return [inventJournalTrans.TransDate];

            case InventJournalVoucherChange::DateItemChange     :
                if (inventJournalTrans.JournalType == InventJournalType::BOM && inventJournalTrans.bomLine)
                {
                    return [inventJournalTrans.TransDate,inventJournalTrans.assemblyBOMJournalLine().ItemId];
                }
                return [inventJournalTrans.TransDate,inventJournalTrans.ItemId];
        }

        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>