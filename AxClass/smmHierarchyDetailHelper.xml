<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmHierarchyDetailHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>smmHierarchyDetailHelper</c> class is the helper used by all plugins of CaseIHierarchyDetail that belong to CRM
/// </summary>
class smmHierarchyDetailHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInitRootParameter</Name>
				<Source><![CDATA[
    public static HierarchyName getInitRootParameter(Hierarchy _hierachyContext)
    {
        return _hierachyContext.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldUpdateControls</Name>
				<Source><![CDATA[
    public static boolean shouldUpdateControls()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCaption</Name>
				<Source><![CDATA[
    public static str getCaption()
    {
        return "@SYS40878";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeleteButtonEnabled</Name>
				<Source><![CDATA[
    public static boolean isDeleteButtonEnabled(int _idx, HierarchyTree _hierarchytree)
    {
        if (_hierarchytree.canDelete(_idx) && !_hierarchytree.isRoot())
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCreationOfNewTask</Name>
				<Source><![CDATA[
    public static boolean validateCreationOfNewTask(HierarchyTree _tree, smmActivities _smmActivities, boolean _isCallerQuotation,  boolean _absTemplate)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Project)) && _isCallerQuotation)
        {
            SalesQuotationTable salesQuotationTableLoc = HierarchyLinkTable::findAssociation(_tree.parmHierarchyId(), tableNum(SalesQuotationTable));
            if (!salesQuotationTableLoc.psaSchedCalendarId)
            {
                throw error ("@PSA11113");
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSMMActivites</Name>
				<Source><![CDATA[
    public static smmActivities getSMMActivites(Common _common, smmActivities _smmActivities, boolean _isCallerQuotation)
    {
        return _smmActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldAddMenuOptionCreateNode</Name>
				<Source><![CDATA[
    public static boolean shouldAddMenuOptionCreateNode(HierarchyTree _tree, HierarchyTreeTable _treeTable, FormTreeControl _ctrlTree, boolean _isCreatedStatus, boolean _isTemplate)
    {
        boolean isRoot = _tree.isRoot();

        if (_ctrlTree.allowEdit() && _treeTable.RecId)
        {
            boolean isNode = _tree.isNode();
            if (isNode)
            {
                boolean isTemplateUsed = _tree.parmIsTemplateUsed();
                if (!(isRoot && _isTemplate == isTemplateUsed))
                {
                    return true;
                }
            }
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canAddMenuOptionOnTree</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds if we can add a menu item button on the tree.
    /// </summary>
    /// <param name = "_tree">The <c>HierarchyTree</c> record.</param>
    /// <param name = "_treeTable">The <c>HierarchyTreeTable</c> record</param>
    /// <param name = "_ctrlTree"The form tree control></param>
    /// <returns>true if the menu option can be added; otherwise, false.</returns>
    public static boolean canAddMenuOptionOnTree(HierarchyTree _tree, HierarchyTreeTable _treeTable, FormTreeControl _ctrlTree)
    {
        boolean isRoot = _tree.isRoot();
        boolean isNode = _tree.isNode();

        if (!isNode || isRoot)
        {
            return false;
        }

        if (_ctrlTree.allowEdit() && _treeTable.RecId)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldAddMenuOptionDeleteNode</Name>
				<Source><![CDATA[
    public static boolean shouldAddMenuOptionDeleteNode(HierarchyTree _tree, HierarchyTreeTable _treeTable, FormTreeControl _ctrlTree, boolean _isCreatedStatus, boolean _isCallerQuotation, int _treeSelectedIndex)
    {
        boolean isRoot = _tree.isRoot();
        boolean canDelete = _tree.canDelete(_treeSelectedIndex);

        if (isRoot || !canDelete)
        {
            return false;
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)) && _isCallerQuotation)
        {
            if (_isCreatedStatus)
            {
                return true;
            }
        }
        else
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>