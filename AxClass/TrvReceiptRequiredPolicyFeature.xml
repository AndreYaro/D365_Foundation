<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvReceiptRequiredPolicyFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;

/// <summary>
/// The <c>TrvReceiptRequiredPolicyFeature</c> class defines the feature, when enabled, will evaluates the expense policy false allow user to submit and approve the expense report
///     when policy condition is met and receipt is attached to the expense report.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
[Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
public final class TrvReceiptRequiredPolicyFeature implements IFeatureMetadata
{
    private static TrvReceiptRequiredPolicyFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new TrvReceiptRequiredPolicyFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>
    /// The <c>TrvReceiptRequiredPolicyFeature</c> instance.
    /// </returns>
    [Hookable(false)]
    public static TrvReceiptRequiredPolicyFeature instance()
    {
        return TrvReceiptRequiredPolicyFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>FeatureLabelId</c> for the Receipt Required Policy feature.
    /// </summary>
    /// <returns>
    /// The summary for the Receipt Required Policy  feature.
    /// </returns>
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Expense:TrvExpenseReceiptRequiredPolicyFeature");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>FeatureModuleV0</c> for the Receipt Required Policy feature.
    /// </summary>
    /// <returns>
    /// The module for the Receipt Required Policy  feature.
    /// </returns>
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::TravelAndExpense;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>FeatureLabelId</c> for the Receipt Required Policy  feature.
    /// </summary>
    /// <returns>
    /// The summary the Receipt Required Policy feature.
    /// </returns>
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Expense:TrvExpenseReceiptRequiredPolicySummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>WebSiteURL</c> for the Receipt Required Policy feature.
    /// </summary>
    /// <returns>
    /// The URL for the Receipt Required Policy feature.
    /// </returns>
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return "https://aka.ms/ExpensePolicyRule";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the Receipt Required Policy feature is enabled by default.
    /// </summary>
    /// <returns>
    /// True, if the Receipt Required Policy feature is enabled by default; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the Receipt Required Policy feature can be disabled.
    /// </summary>
    /// <returns>
    /// Returns true if the Receipt Required Policy feature can be disabled; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the Receipt Required Policy feature is enabled.
    /// </summary>
    /// <returns>
    /// Returns true if the feature in Feature Management is enabled; otherwise, false.
    /// </returns>
    internal static boolean isEnabled()
    {
        return Dynamics.AX.Application.FeatureStateProvider::isFeatureEnabled(TrvReceiptRequiredPolicyFeature::instance());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>