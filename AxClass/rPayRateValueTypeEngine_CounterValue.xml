<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayRateValueTypeEngine_CounterValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rPayRateValueTypeEngine_CounterValue extends RpayRateValueTypeEngine
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>extendedTypeId</Name>
				<Source><![CDATA[
        protected ExtendedTypeId extendedTypeId()
    {
        return extendedTypeNum(RPayCounterUnit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPayRateValue</Name>
				<Source><![CDATA[
        public RPayRateValue getPayRateValue(Range                  _value,
                                         RPayRateCallContext    _callContext)

    {
        RPayRateValue    amount;
        RPayModuleTable  payModuleTbl;
        RPayCalculate    payCalc;

        RpayCounterTable rpayCounterTable = RpayCounterTable::find(_value);

        payModuleTbl = rpayCounterTable.paySeqTable().payModuleTable();

        switch (rpayCounterTable.CounterType)
        {
            case RPayCounterType::Calculate:
                payCalc = payModuleTbl.payCalculate();
                payCalc.setInitValue(_callContext.parmCriterion());
                payCalc.setSourceTable(RHRMEmplTable::find(_callContext.parmEmployeeId()));
                payCalc.setSeqTable(rpayCounterTable.paySeqTable());
                payCalc.setCounterTable(rpayCounterTable);
                payCalc.needUpdatePayTrans(false);
                payCalc.payPeriod(_callContext.parmRateDate());
                payCalc.calcCounter();
                amount = payCalc.getCurrentValue();
                break;

            case RPayCounterType::Fund:
                amount = RPayTrans::calculateFund(rpayCounterTable.CounterUnit, _callContext.parmRateDate(), _callContext.parmEmployeeId());
                break;
        }

        return amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
        public void lookup(Object _p1)
    {
        RPayCounterTable::lookupCounterModuleCode(_p1);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>