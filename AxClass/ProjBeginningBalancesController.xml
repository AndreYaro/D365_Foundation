<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>ProjBeginningBalancesController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>ProjBeginningBalancesController</c> class is the controller class for <c>ProjBeginningBalances</c> report.
/// </summary>
public class ProjBeginningBalancesController extends SrsReportRunController implements BatchRetryable
{
    SrsReportRdlDataContract rdlContract;

    #define.ReportName('ProjBeginningBalances.Report')
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>prePromptModifyContract</Name>
        <Source><![CDATA[
    /// <summary>
    /// Performs actions before the dialog box is prompted.
    /// </summary>
    protected void prePromptModifyContract()
    {
        Query                               query;
        QueryBuildDataSource                queryBuildDataSource;
        QueryBuildRange                     queryBuildRange;
        ProjJournalTable                    projJournalTable;

        query = this.getFirstQuery();

        queryBuildDataSource = query.dataSourceTable(tableNum(ProjBegBalJournalTrans_OnAcc));
        queryBuildRange = queryBuildDataSource.findRange(fieldNum(ProjBegBalJournalTrans_OnAcc,JournalId));

        if (this.parmArgs() && this.parmArgs().record())
        {
            projJournalTable = this.parmArgs().record();
            queryBuildRange.value(projJournalTable.JournalId);
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>preRunModifyContract</Name>
        <Source><![CDATA[
    /// <summary>
    /// Performs action before the report is run and after the dialog box is prompted.
    /// </summary>
    protected void preRunModifyContract()
    {

        Query                               query;
        QueryBuildDataSource                queryBuildDataSource;
        QueryBuildRange                     queryBuildRange;

        rdlContract = this.parmReportContract().parmRdlContract() as SrsReportRdlDataContract;
        query = this.getFirstQuery();

        queryBuildDataSource = query.dataSourceTable(tableNum(ProjBegBalJournalTrans_OnAcc));

        queryBuildRange = queryBuildDataSource.findRange(fieldNum(ProjBegBalJournalTrans_OnAcc,JournalId));

        if (queryBuildRange.value())
        {
            rdlContract.setValue('JournalId_CostSales', queryBuildRange.value());
            rdlContract.setValue('JournalId_Fee', queryBuildRange.value());
        }

        queryBuildRange = queryBuildDataSource.findRange(fieldNum(ProjBegBalJournalTrans_OnAcc,ProjId));

        if (queryBuildRange.value())
        {
            rdlContract.setValue('ProjId_CostSales', queryBuildRange.value());
            rdlContract.setValue('ProjId_Fee', queryBuildRange.value());
        }

        queryBuildRange = queryBuildDataSource.findRange(fieldNum(ProjBegBalJournalTrans_OnAcc,Voucher));

        if (queryBuildRange.value())
        {
            rdlContract.setValue('Voucher_CostSales', queryBuildRange.value());
            rdlContract.setValue('Voucher_Fee', queryBuildRange.value());
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
    public static void main(Args _args)
    {
        SrsReportRunController controller  = new ProjBeginningBalancesController();
        controller.parmArgs(_args);
        controller.parmReportName(#ReportName);
        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>