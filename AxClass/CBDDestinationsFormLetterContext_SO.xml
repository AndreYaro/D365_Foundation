<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CBDDestinationsFormLetterContext_SO</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CBDDestinationsFormLetterContext_SO</c> class is an abstraction 
/// for Sales order based documents to support
/// runtime Electronic reporting destinations.
/// </summary>
internal abstract class CBDDestinationsFormLetterContext_SO
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCountReferences</Name>
				<Source><![CDATA[
    public NumberOfRecords getCountReferences(Object _formLetter)
    {
        SalesFormLetter salesFormLetter = _formLetter as SalesFormLetter;

        if (!salesFormLetter)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        SalesParmUpdate salesParmUpdate = salesFormLetter.salesParmUpdate();
        SalesParmSubTable salesParmSubTable;
        SalesTable salesTable;

        select count(RecId) from salesTable
        exists join salesParmSubTable
            where salesParmSubTable.OrigSalesId == salesTable.SalesId
                && salesParmSubTable.ParmId == salesParmUpdate.ParmId;

        return salesTable.RecId;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getReferenceBuffer</Name>
				<Source><![CDATA[
    public Common getReferenceBuffer(Object _formLetter)
    {
        SalesFormLetter salesFormLetter = _formLetter as SalesFormLetter;

        if (!salesFormLetter)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        SalesParmUpdate salesParmUpdate = salesFormLetter.salesParmUpdate();
        SalesParmSubTable salesParmSubTable;
        SalesTable salesTable;

        select salesTable
        exists join salesParmSubTable
            where salesParmSubTable.OrigSalesId == salesTable.SalesId
                && salesParmSubTable.ParmId == salesParmUpdate.ParmId;

        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtRefTableBuffer</Name>
				<Source><![CDATA[
    public Common getPrintMgmtRefTableBuffer(Common _reference)
    {
        SalesTable salesTable = _reference as SalesTable;

        if (!salesTable)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        Common printMgmtReferencedTable;

        if (SalesParameters::find().DeleteHeading == NoYes::Yes)
        {
            printMgmtReferencedTable = salesTable.custTable_InvoiceAccount()
                ? salesTable.custTable_InvoiceAccount()
                : salesTable.custTable_CustAccount();
        }
        else
        {
            printMgmtReferencedTable = salesTable;
        }

        return printMgmtReferencedTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintContext</Name>
				<Source><![CDATA[
    public PrintMgmtPrintContext getPrintContext(Common _printMgmtReferencedTable, Common _queryTableBuffer)
    {
        FormLetterReport formLetterReport = FormLetterReport::construct(this.getPrintMgmtDocumentType());

        return formLetterReport.getDefaultPrintMgmtContext(_queryTableBuffer, _printMgmtReferencedTable.data());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets print management document type.
    /// </summary>
    /// <returns>The print management document type.</returns>
    abstract protected PrintMgmtDocumentType getPrintMgmtDocumentType()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>