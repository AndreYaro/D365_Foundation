<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqTable2LineUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchReqTable2LineUpdate
{
    PurchReqTable   purchReqTable;
    List            purchReqTable2LineUpdateFields;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axPurchReqLine</Name>
				<Source><![CDATA[
        public AxPurchReqLine axPurchReqLine(PurchReqLine _purchReqLine)
    {
        AxPurchReqLine axPurchReqLine = AxPurchReqLine::newPurchReqLine(_purchReqLine);
        return axPurchReqLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchReqTable</Name>
				<Source><![CDATA[
        public AxPurchReqTable axPurchReqTable(PurchReqTable _purchReqTable)
    {
        AxPurchReqTable axPurchReqTable = AxPurchReqTable::newPurchReqTable(_purchReqTable);
        return axPurchReqTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchReqTable2LineUpdateFields</Name>
				<Source><![CDATA[
        public List getPurchReqTable2LineUpdateFields()
    {
        return purchReqTable2LineUpdateFields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        void new(PurchReqTable2LineUpdatePrompt _purchReqTable2LineUpdatePrompt)
    {
        container   packedList = _purchReqTable2LineUpdatePrompt.packedPurchReqTable2LineUpdateFields();

        purchReqTable = _purchReqTable2LineUpdatePrompt.purchReqTable();

        if (packedList)
        {
            purchReqTable2LineUpdateFields = List::create(packedList);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRunLine</Name>
				<Source><![CDATA[
        QueryRun queryRunLine(boolean _update = false)
    {
        return new QueryRun(purchReqTable.queryPurchReqLine(_update));
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the line fields from the header.
    /// </summary>
    /// <param name="_isInteractive">
    /// A Boolean value that indicates whether this method is running interactively.
    /// </param>
    /// <remarks>
    /// When running interactively, it is expected that the user has been prompted to select which field
    /// values to update. When running silently, all field values will be updated.
    /// </remarks>
    public void update(boolean _isInteractive = true)
    {
        QueryRun                    queryRun;
        ListEnumerator              purchReqTable2LineUpdateFieldsEnumerator;
        PurchReqTable2LineField     purchReqTable2LineField;
        PurchReqLine                purchReqLine;
        AxPurchReqTable             axPurchReqTable;
        AxPurchReqLine              axPurchReqLine;
        int64                       orgArray[];
        boolean                     isRequiredDateUpdated;

        orgArray[1] = CompanyInfo::findDataArea(curext()).RecId;

        ttsbegin;
        axPurchReqTable = this.axPurchReqTable(purchReqTable);

        if (purchReqTable2LineUpdateFields)
        {
            purchReqTable2LineUpdateFieldsEnumerator = purchReqTable2LineUpdateFields.getEnumerator();

            while (purchReqTable2LineUpdateFieldsEnumerator.moveNext())
            {
                purchReqTable2LineField = purchReqTable2LineUpdateFieldsEnumerator.current();

                if (!_isInteractive || purchReqTable2LineField.updatePurchReqLines())
                {
                    axPurchReqTable.setFieldAsModified(purchReqTable2LineField.fieldId());

                    if (purchReqTable2LineField.fieldId() == fieldNum(PurchReqTable, RequiredDate))
                    {
                        isRequiredDateUpdated = true;

                        if (PurchReqControlRule::findPurchReqControlRuleParameters(orgArray).IsReqDateTransDate)
                        {
                            axPurchReqTable.setFieldAsModified(fieldNum(PurchReqTable, TransDate));
                        }
                    }
                }
            }
        }

        queryRun = this.queryRunLine(true);

        while (queryRun.next())
        {
            if (queryRun.changed(tableNum(PurchReqLine)))
            {
                purchReqLine = queryRun.get(tableNum(PurchReqLine));
                if (purchReqLine)
                {
                    changecompany(purchReqLine.buyingLegalEntity2DataArea())
                    {
                        axPurchReqLine = this.axPurchReqLine(purchReqLine);
                        axPurchReqLine.axPurchReqTable(axPurchReqTable);
                        axPurchReqLine.save();

                        if (isRequiredDateUpdated)
                        {
                            purchReqLine = PurchReqLine::find(purchReqLine.RecId, true);
                            purchReqLine.modifiedField(fieldNum(PurchReqLine, RequiredDate));
                            purchReqLine.calculateRequiredDate(purchReqTable.RequiredDate);
                            purchReqLine.update();
                        }
                    }
                }
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>