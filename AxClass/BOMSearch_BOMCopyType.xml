<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMSearch_BOMCopyType</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOMSearch_BOMCopyType extends BOMSearch
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isValid</Name>
				<Source><![CDATA[
    boolean isValid()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BOMSearch_BOMCopyType construct(
        BOMId                       _BOMId,
        TransDate                   _validDate,
        boolean                     _forUpdate  = false,
        ItemId                      _itemId     = '',
        EcoResItemConfigurationName _configId   = ''
        )
    {
        return new BOMSearch_BOMCopyType(_BOMId, _validDate, _forUpdate, _itemId, _configId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(
        BOMId                       _BOMId,
        TransDate                   _validDate,
        boolean                     _forUpdate  = false,
        ItemId                      _itemId     = '',
        EcoResItemConfigurationName _configId   = ''
        )
    {
        super(_BOMId,_validDate,_itemId,_configId,true,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    boolean next()
    {
        boolean isNext;

        do
        {
            isNext = super();
        } while (isNext && ! this.isValid());

        if (BOM)
            return true;
        else
            return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBOMCopyDelete</Name>
				<Source><![CDATA[
    static BOMSearch newBOMCopyDelete(
        BOMId           BOMId,
        BOMCopyType     BOMCopyType
        )
    {
        BOMSearch_BOMCopyType   search;
        search = BOMSearch_BOMCopyType::construct(
            bomId,
            dateNull(),
            true);
        search.parmForcedSkipHierarchy(true);
        search.init();

        return search;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBOMRouteCopy</Name>
				<Source><![CDATA[
    static BOMSearch_BOMCopyType newBOMRouteCopy(BOMRouteCopyJob copy)
    {
        BOMSearch_BOMCopyType search;
        search = BOMSearch_BOMCopyType::construct(
            copy.parmFromBOMId(),
            copy.parmFromBOMDate(),
            false,
            copy.parmFromItemId(),
            copy.parmFromConfigId());
        search.init();

        return search;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>