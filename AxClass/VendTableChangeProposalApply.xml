<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTableChangeProposalApply</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Contains functionality for applying an approved change proposal to <c>VendTable</c>.
/// </summary>
public class VendTableChangeProposalApply
{
    VendTableChangeProposal proposal;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the class.
    /// </summary>
    /// <param name = "_proposal">The record containing changes to be applied.</param>
    /// <returns>The constructed object</returns>
    public static VendTableChangeProposalApply construct(VendTableChangeProposal _proposal)
    {
        VendTableChangeProposalApply result = new VendTableChangeProposalApply();
        result.proposal = _proposal;
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {}

]]></Source>
			</Method>
			<Method>
				<Name>applyAndDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies and persists the changes contained in a change proposal, then deletes the change proposal record.
    /// </summary>
    public void applyAndDelete()
    {
        if (!proposal.RecId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
        this.apply();
        this.removeChangeProposal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVendTableToUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the vendor table record to update.
    /// </summary>
    /// <returns>The vendor table record.</returns>
    protected VendTable findVendTableToUpdate()
    {
        return VendTable::findRecId(proposal.VendTable, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDirPartyTableToUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the global address book table record to update.
    /// </summary>
    /// <param name = "_vendToUpdate">The vendor table record.</param>
    /// <returns>The global address book table record.</returns>
    protected DirPartyTable findDirPartyTableToUpdate(VendTable _vendToUpdate)
    {
        return DirPartyTable::findRec(_vendToUpdate.Party, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDirPartyTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the global address book table record fields to update.
    /// </summary>
    /// <param name = "_dirPartyTable">The global address book table record.</param>
    protected void initializeDirPartyTableFields(DirPartyTable _dirPartyTable)
    {
        if(proposal.IsChangedName)
        {
            _dirPartyTable.Name = proposal.Name;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeVendTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the vendor table record fields to update.
    /// </summary>
    /// <param name = "_vendToUpdate">The vendor table record.</param>
    protected void initializeVendTableFields(VendTable _vendToUpdate)
    {
        if(proposal.IsChangedBankAccount)
        {
            _vendToUpdate.BankAccount = proposal.BankAccount;
        }
        
        if(proposal.IsChangedCashDisc)
        {
            _vendToUpdate.CashDisc = proposal.CashDisc;
        }
        
        if(proposal.IsChangedCreditMax)
        {
            _vendToUpdate.CreditMax = proposal.CreditMax;
        }

        if(proposal.IsChangedCreditRating)
        {
            _vendToUpdate.CreditRating = proposal.CreditRating;
        }

        if(proposal.IsChangedInvoiceAccount)
        {
            _vendToUpdate.InvoiceAccount = proposal.InvoiceAccount;
        }
        
        if(proposal.IsChangedPaymMode)
        {
            _vendToUpdate.PaymMode = proposal.PaymMode;
            if (proposal.IsChangedPaymSpec == NoYes::No)
            {
                _vendToUpdate.defaultFieldWithChangeControl(fieldNum(VendTable, PaymSpec), true);
            }
        }
        
        if(proposal.IsChangedPaymSpec)
        {
            _vendToUpdate.PaymSpec = proposal.PaymSpec;
        }
        
        if(proposal.IsChangedPaymTermId)
        {
            _vendToUpdate.PaymTermId = proposal.PaymTermId;

            _vendToUpdate.defaultFieldWithChangeControl(fieldNum(VendTable, PaymSched), true);
        }
        
        if(proposal.IsChangedVATNum)
        {
            _vendToUpdate.VATNum = proposal.VATNum;
        }
        
        if(proposal.IsChangedVendGroup)
        {
            _vendToUpdate.VendGroup = proposal.VendGroup;

            if (proposal.IsChangedPaymTermId == NoYes::No)
            {
                _vendToUpdate.defaultFieldWithChangeControl(fieldNum(VendTable, PaymTermId), true);
            }

            _vendToUpdate.defaultFieldWithChangeControl(fieldNum(VendTable, TaxGroup), true);
            _vendToUpdate.defaultFieldWithChangeControl(fieldNum(VendTable, OffsetLedgerDimension), true);
            _vendToUpdate.defaultFieldWithChangeControl(fieldNum(VendTable, OffsetAccountType), true);
        }
        
        if(proposal.IsChangedVendPriceToleranceGroupId)
        {
            _vendToUpdate.VendPriceToleranceGroupId = proposal.VendPriceToleranceGroupId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the vendor table.
    /// </summary>
    /// <param name = "_vendToUpdate">The vendor table record.</param>
    protected void updateVendTable(VendTable _vendToUpdate)
    {
        if (_vendToUpdate.RecId)
        {
            _vendToUpdate.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDirPartyTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the global address book table.
    /// </summary>
    /// <param name = "_dirPartyToUpdate">The global address book table record.</param>
    protected void updateDirPartyTable(DirPartyTable _dirPartyToUpdate)
    {
        if (_dirPartyToUpdate.RecId)
        {
            _dirPartyToUpdate.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>apply</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies and persists the changes.
    /// </summary>
    protected void apply()
    {
        ttsbegin;

        VendTable vendToUpdate = this.findVendTableToUpdate();
        DirPartyTable dirPartyToUpdate = this.findDirPartyTableToUpdate(vendToUpdate);

        this.initializeDirPartyTableFields(dirPartyToUpdate);
        this.initializeVendTableFields(vendToUpdate);
        this.updateVendTable(vendToUpdate);
        this.updateDirPartyTable(dirPartyToUpdate);
        this.removeChangeProposal();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeChangeProposal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the change proposal, typically after it is successfully applied.
    /// </summary>
    private void removeChangeProposal()
    {
        VendTableChangeProposal proposalToDelete;

        delete_from proposalToDelete where proposalToDelete.RecId == proposal.RecId;
        
        proposal.RecId = 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>