<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetOverviewContractBE</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for AssetOverviewBE SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the AssetOverviewBE SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationGroupAttribute('Criteria',"@SYS1046",'1'),
    SysOperationContractProcessingAttribute(classStr(AssetOverviewBEUIBuilder))
]
public class AssetOverviewContractBE implements SysOperationValidatable, SysOperationInitializable
{
    Yr reportYear;
    FiscalCalendarID fiscalCalendarID;
    FiscalYearName fiscalYearName;
    FiscalYearName reportYearName;
    NoYes includeBooksWithoutFiscalCalendar;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the value of current year in the <c>reportYear</c> variable.
    /// </summary>
    public void initialize()
    {
        reportYear = year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        if (FeatureStateProvider::isFeatureEnabled(AssetOverviewBEUseFiscalCalendarFeature::instance()))
        {
            fiscalCalendarID = FiscalCalendar::find(Ledger::fiscalCalendar(CompanyInfo::current())).CalendarId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportYear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter reportYear.
    /// </summary>
    /// <param name="_reportYear">
    /// The new value of the datacontract parameter reportYear; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter reportYear
    /// </returns>
    [
        DataMemberAttribute('ReportYear'),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('1'),
        SysObsolete("This parameter is deprecated. Use the other parameters instead", false, 21\02\2023)
    ]
    public Yr parmReportYear(Yr _reportYear = reportYear)
    {
        reportYear = _reportYear;
        return reportYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalCalendar</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FiscalCalendar'),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FiscalCalendarID parmFiscalCalendar(FiscalCalendarID _fiscalCalendarID = fiscalCalendarID)
    {
        fiscalCalendarID = _fiscalCalendarID;
        return fiscalCalendarID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalYearName</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FiscalYearName'),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public FiscalYearName parmFiscalYearName(FiscalYearName _fiscalYearName = fiscalYearName)
    {
        fiscalYearName = _fiscalYearName;
        return fiscalYearName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportYearName</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ReportYearName'),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public FiscalYearName parmReportYearName(FiscalYearName _reportYearName = reportYearName)
    {
        if (FeatureStateProvider::isFeatureEnabled(AssetOverviewBEUseFiscalCalendarFeature::instance()))
        {
            reportYearName = fiscalYearName;
        }
        else
        {
            reportYearName = int2Str(reportYear);
        }
        return reportYearName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeBooksWithoutFiscalCalendar</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IncludeBooksWihtoutFiscalCalendar'),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('4'),
        SysOperationLabelAttribute(literalStr("@FixedAssets:IncludeBooksWithoutFiscalCalendar")),
        SysOperationHelpTextAttribute(literalStr("@FixedAssets:IncludeBooksWithoutFiscalCalendarHelper"))
    ]
    public NoYes parmIncludeBooksWithoutFiscalCalendar(NoYes _includeBooksWithoutFiscalCalendar = includeBooksWithoutFiscalCalendar)
    {
        includeBooksWithoutFiscalCalendar = _includeBooksWithoutFiscalCalendar;
        return includeBooksWithoutFiscalCalendar;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the year value that was entered by the user in the custom dialog box.
    /// </summary>
    /// <returns>
    ///    true if validation succeeds; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (FeatureStateProvider::isFeatureEnabled(AssetOverviewBEUseFiscalCalendarFeature::instance()))
        {
            FiscalCalendar fiscalCalendar = FiscalCalendar::findByCalendarId(fiscalCalendarID);

            if (!fiscalCalendar.RecId)
            {
                ret = false;
                error(strfmt("@FixedAssets:ParameterIsInvalid", "@SYS11839"));
            }

            if (ret)
            {
                if (!FiscalCalendarYear::existByCalendarYearName(fiscalCalendar.RecId, fiscalYearName))
                {
                    ret = false;
                    error(strfmt("@FixedAssets:ParameterIsInvalid", "@SYS127885"));
                }
            }
        }
        else
        {
            TransDate adate = mkdate (1,1, reportYear);
            if (! adate || (reportYear <= year(datenull()) || reportYear >= year(datemax())))
            {
                ret = false;
                error(strfmt("@FixedAssets:ParameterIsInvalid", "@SYS5563"));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>