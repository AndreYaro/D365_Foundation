<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEDatasourceVATDeclarationCo_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    Calculates values of common requisites for the VAT declaration
/// </summary>
public class LedgerRRGEDatasourceVATDeclarationCo_W extends LedgerRRGEDatasourceVATDeclarationBase_W
{
    int         pageNum;
    int         pageCount;
    CompanyInfo companyInfo;

    private const int CoTableId	        = 1;
    private const int Field1Id	        = 1;
    private const int Field2Id	        = 2;
    private const int Field3Id	        = 3;
    private const str LastPageCells1    ='GR47:GU94';
    private const str LastPageCells2    ='GL47:GO82';
    private const str LastPageCells3    ='GL91:GO114';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initTables</Name>
				<Source><![CDATA[
    public void initTables()
    {
        const str   TableName	            = 'Общие реквизиты декларации НДС';
        const str   Field1Req	            = 'ИНН';
        const str   Field1Name	            = 'ИНН';
        const str   Field1Cells	 	        = 'AK1:BT2';
        const str   Field2Req	            = 'КПП';
        const str   Field2Name	            = 'КПП';
        const str   Field2Cells	 	        = 'AK4:BK4';
        const str   Field3Req	            = 'Стр';
        const str   Field3Name	            = 'Номер страницы';
        const str   Field3Cells	 	        = 'BR4:BZ4';
        const int   PageNoFieldLengthConst  = 3;

        super();

        this.addTable(CoTableId, TableName);

        this.addField(CoTableId,  Field1Id,  Field1Req,  Field1Name,  Field1Cells, SysAlignment::AlignLeft, 12, Minus);
        this.addField(CoTableId,  Field2Id,  Field2Req,  Field2Name,  Field2Cells, SysAlignment::AlignLeft,  9, Minus);
        this.addField(CoTableId,  Field3Id,  Field3Req,  Field3Name,  Field3Cells, SysAlignment::AlignRight, PageNoFieldLengthConst, Zero);
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    public boolean next(int _tableId)
    {
        if (vatDeclaration && (!pageCount || pageNum < pageCount))
        {
            if (pageNum && !pageCount)
            {
                pageCount = vatDeclaration.pageCount();
            }

            pageNum++;
            vatDeclaration.setValue(Field1Id, CoTableId, CompanyInfoHelper::partyINN_RU(companyInfo));
            vatDeclaration.setValue(Field2Id, CoTableId, CompanyInfoHelper::partyKPP_RU(companyInfo));
            vatDeclaration.setValue(Field3Id, CoTableId, pageNum);

            this.setInitialized(_tableId);

            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    public void reset(int _tableId)
    {
        super(_tableId);

        pageNum     = 0;
        companyInfo = CompanyInfo::find();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sortOrder</Name>
				<Source><![CDATA[
    public int sortOrder()
    {
        return maxint();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCellCode</Name>
				<Source><![CDATA[
    public void updateCellCode(int _fieldId, int _tableId)
    {
        if (evaluator && evaluator.allowUpdateKeyCode())
        {
            evaluator.updateKeyCode(ComExcelDocument_RU::replaceWorksheetName(evaluator.keyCode(), int2str(pageNum)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected static LedgerRRGEDatasourceVATDeclarationCo_W construct()
    {
        return new LedgerRRGEDatasourceVATDeclarationCo_W();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromVATDeclaration</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDatasourceVATDeclarationCo_W newFromVATDeclaration(LedgerRRGEDatasourceVATDeclaration_W _vatDeclaration)
    {
        LedgerRRGEDatasourceVATDeclarationCo_W commonSection = LedgerRRGEDatasourceVATDeclarationCo_W::construct();

        commonSection.parmVATDeclaration(_vatDeclaration);

        return commonSection;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>