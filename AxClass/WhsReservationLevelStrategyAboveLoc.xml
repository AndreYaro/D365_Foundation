<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsReservationLevelStrategyAboveLoc</Name>
	<SourceCode>
		<Declaration><![CDATA[/// <summary>
/// The <c>WhsReservationLevelStrategyAboveLoc</c> class is for the reservation strategy where all dimensions above location must be determined.
/// </summary>
[WHSReserveHierarchyLvlStratAttribute(WHSReservationHierarchyLevelStrategyType::AboveLocation)]
/// <summary>
/// The <c>WhsReservationLevelStrategyAboveLoc</c> class is for the reservation strategy where all dimensions above location must be determined.
/// </summary>
public class WhsReservationLevelStrategyAboveLoc extends WHSReservationHierarchyLevelStrategy
{
    List reservationHierarchyListTopDown;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getReservableHierarchyListTopDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a list of reservable dimensions in the reservation hierarchy based on the transaction type.
    /// </summary>
    /// <returns>
    /// A <c>List</c> containing  the inventory dimensions that can be reserved for the transaction.
    /// </returns>
    public List getReservableHierarchyListTopDown()
    {
        if (!reservationHierarchyListTopDown)
        {
            reservationHierarchyListTopDown =  this.reservationHierarchyProvider().getDimListAboveLocationFromInventTable(inventTable, WHSReservationHierarchySortOrder::TopDown);
        }

        return reservationHierarchyListTopDown;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReservationHierarchyLevel</Name>
				<Source><![CDATA[
        public WHSReservationHierarchyLevel getReservationHierarchyLevel()
    {
        return this.reservationHierarchyProvider().getAboveLocationHierarchyLevel(inventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onlyReserveOrderedAvailable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if only ordered available should be included for reservations.
    /// </summary>
    /// <returns>
    /// returns false.
    /// </returns>
    public boolean onlyReserveOrderedAvailable()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onlyReservePhysicalAvailable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if only physical available should be included for reservations.
    /// </summary>
    /// <returns>
    /// returns true.
    /// </returns>
    public boolean onlyReservePhysicalAvailable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>