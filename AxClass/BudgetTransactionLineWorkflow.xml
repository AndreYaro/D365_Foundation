<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionLineWorkflow</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetTransactionLineWorkflow</c> class is the <c>ResubmitToWorkflow</c> class for the
///    budget transaction line workflow.
/// </summary>
public class BudgetTransactionLineWorkflow
{
    BudgetTransactionLine budgetTransactionLine;

    workflowTypeName workflowTypeName;
    WorkflowVersionTable workflowVersionTable;
    WorkflowComment workflowComment;
    WorkflowWorkItemTable workflowWorkItemTable;

    menuItemName menuItemName;
    userId targetUser;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialogOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens a dialog box to use for resubmitting a budget transaction line workflow.
    /// </summary>
    /// <returns>
    /// true if the dialog box was closed by pressing the Ok button; otherwise, false.
    /// </returns>
    public boolean dialogOk()
    {
        WorkflowWorkItemActionDialog workflowWorkItemActionDialog;
        boolean ok;

        if (this.parmMenuItemName() == menuitemactionstr(BudgetTransactionLineWorkflowResubmit))
        {
            workflowWorkItemActionDialog = WorkflowWorkItemActionDialog::construct(
                this.parmWorkflowWorkItemTable(),
                WorkflowWorkItemActionType::Resubmit,
                new MenuFunction(menuitemactionstr(BudgetTransactionLineWorkflowResubmit), MenuItemType::Action));

            workflowWorkItemActionDialog.preDialogRun += eventhandler(this.preWorkflowDialogRun);
            workflowWorkItemActionDialog.run();

            ok = workflowWorkItemActionDialog.parmIsClosedOK();
            this.parmWorkflowComment(workflowWorkItemActionDialog.parmWorkflowComment());
            this.parmTargetUser(workflowWorkItemActionDialog.parmTargetUser());
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preWorkflowDialogRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the workflow dialog run event.
    /// </summary>
    protected void preWorkflowDialogRun()
    {
        // Check budget prior to confirming the workflow dialog to allow users to cancel the action.
        BudgetControlBudgetTransactionProcessor::submitBudgetTransLineToCheckBudget(budgetTransactionLine.RecId, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>BudgetTransactionLineWorkflow</c> class.
    /// </summary>
    /// <param name="_budgetTransactionLine">
    /// The <c>BudgetTransactionLine</c> record to resubmit.
    /// </param>
    /// <param name="_menuItemName">
    /// The menu item name of the caller.
    /// </param>
    /// <param name="_workflowVersionTable">
    /// The <c>WorkflowVersionTable</c> record.
    /// </param>
    /// <param name="_workflowWorkItemTable">
    /// The <c>WorkflowWorkItemTable</c> record.
    /// </param>
    public void initialize(
        BudgetTransactionLine _budgetTransactionLine,
        menuItemName _menuItemName,
        WorkflowVersionTable _workflowVersionTable,
        WorkflowWorkItemTable _workflowWorkItemTable)
    {
        this.parmBudgetTransactionLine(_budgetTransactionLine);
        this.parmMenuItemName(_menuItemName);

        this.parmWorkflowVersionTable(_workflowVersionTable);
        this.parmWorkflowWorkItemTable(_workflowWorkItemTable);
        this.parmWorkflowTypeName(_workflowVersionTable.workflowTable().TemplateName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetTransactionLine</Name>
				<Source><![CDATA[
    public BudgetTransactionLine parmBudgetTransactionLine(BudgetTransactionLine _budgetTransactionLine = budgetTransactionLine)
    {
        budgetTransactionLine = _budgetTransactionLine;

        return budgetTransactionLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    public menuItemName parmMenuItemName(menuItemName _menuItemName = menuItemName)
    {
        menuItemName = _menuItemName;

        return menuItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTargetUser</Name>
				<Source><![CDATA[
    public userId parmTargetUser(userId _targetUser = targetUser)
    {
        targetUser = _targetUser;

        return targetUser;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowComment</Name>
				<Source><![CDATA[
    public WorkflowComment parmWorkflowComment(WorkflowComment _workflowComment = workflowComment)
    {
        workflowComment = _workflowComment;

        return workflowComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowTypeName</Name>
				<Source><![CDATA[
    public workflowTypeName parmWorkflowTypeName(workflowTypeName _workflowTypeName = workflowTypeName)
    {
        workflowTypeName = _workflowTypeName;

        return workflowTypeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowVersionTable</Name>
				<Source><![CDATA[
    public WorkflowVersionTable parmWorkflowVersionTable(WorkflowVersionTable _workflowVersionTable = workflowVersionTable)
    {
        workflowVersionTable = _workflowVersionTable;

        return workflowVersionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowWorkItemTable</Name>
				<Source><![CDATA[
    public WorkflowWorkItemTable parmWorkflowWorkItemTable(WorkflowWorkItemTable _workflowWorkItemTable = workflowWorkItemTable)
    {
        workflowWorkItemTable = _workflowWorkItemTable;

        return workflowWorkItemTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reSubmit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resubmits the budget transaction line workflow document.
    /// </summary>
    public void reSubmit()
    {
        if (this.parmWorkflowWorkItemTable())
        {
            WorkflowWorkItemActionManager::dispatchWorkItemAction(
                this.parmWorkflowWorkItemTable(),
                this.parmWorkflowComment(),
                this.parmTargetUser(),
                WorkflowWorkItemActionType::Resubmit,
                this.parmMenuItemName());

            this.setWorkflowStatus();

            this.updateFormDataSource();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkflowStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the workflow status for the budget transaction line.
    /// </summary>
    public void setWorkflowStatus()
    {
        BudgetTransactionLine::setWorkflowStatus(
            this.parmBudgetTransactionLine().RecId,
            BudgetTransactionWorkflowStatus::Submitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFormDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>FormDataSource</c> object that is associated with the <c>BudgetTransactionLine</c>
    /// record.
    /// </summary>
    public void updateFormDataSource()
    {
        FormDataSource budgetTransactionLine_ds;

        budgetTransactionLine_ds = FormDataUtil::getFormDataSource(this.parmBudgetTransactionLine());

        if (budgetTransactionLine_ds)
        {
            budgetTransactionLine_ds.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>BudgetTransactionLineWorkflow</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>BudgetTransactionLineWorkflow</c> class.
    /// </returns>
    /// <remarks>
    ///  Use the following procedure to customize or extend the
    ///  <c>
    ///  BudgetTransactionLineWorkflow
    ///  </c>
    ///   class.
    ///  <list type="number">
    ///   <item>
    ///    <description>
    ///    Create a new class that derives from the <c>BudgetTransactionLineWorkflow</c> class.
    ///    </description>
    ///   </item>
    ///   <item>
    ///    <description>
    ///    Overlayer the <c>construct</c> method on the <c>BudgetTransactionLineWorkflow</c> class so that it
    ///    returns an instance of the derived class.
    ///    </description>
    ///   </item>
    ///   <item>
    ///    <description>
    ///    Override the methods from the <c>BudgetTransactionLineWorkflow</c> class that you want to customize
    ///    or extend in your derived class.
    ///    </description>
    ///   </item>
    ///  </list>
    ///   This procedure helps to ensure that your customizations are maintained if the base version of the
    ///  <c>
    ///  BudgetTransactionLineWorkflow
    ///  </c>
    ///   class is changed, minimizing code conflicts during an upgrade. For more information, see <see cref="Best Practices for static construct Methods" />
    ///  .
    /// </remarks>
    public static BudgetTransactionLineWorkflow construct()
    {
        BudgetTransactionLineWorkflow budgetTransactionLineWorkflow;

        budgetTransactionLineWorkflow = new BudgetTransactionLineWorkflow();

        return budgetTransactionLineWorkflow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resubmits a budget transaction line workflow document and starts the corresponding workflow.
    /// </summary>
    /// <param name="args">
    /// An <c>Args</c> value from the caller.
    /// </param>
    public static void main(Args args)
    {
        BudgetTransactionLineWorkflow budgetTransactionLineWorkflow;
        BudgetTransactionLine budgetTransactionLine;

        if (args.record() &&
            args.record().TableId == tablenum(BudgetTransactionLine))
        {
            budgetTransactionLine = args.record() as BudgetTransactionLine;
        }

        if (budgetTransactionLine &&
            args.menuItemName() == menuitemactionstr(BudgetTransactionLineWorkflowResubmit))
        {
            // The budget transaction line workflow can only be resubmitted from the client.
            budgetTransactionLineWorkflow = BudgetTransactionLineWorkflow::construct();

            budgetTransactionLineWorkflow.initialize(
                args.record(),
                args.menuItemName(),
                args.caller().getActiveWorkflowConfiguration(),
                args.caller().getActiveWorkflowWorkItem());

            if (budgetTransactionLineWorkflow.dialogOk())
            {
                budgetTransactionLineWorkflow.reSubmit();

                args.caller().updateWorkflowControls();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>