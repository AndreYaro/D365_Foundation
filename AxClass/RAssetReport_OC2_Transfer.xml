<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetReport_OC2_Transfer</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class rAssetReport_OC2_Transfer extends RAssetReport_OC2_Base
{
    protected RAssetTransferTable rAssetTransferTable;
    protected str fileName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    protected boolean check()
    {
        boolean ret = true;

        if (!documentDate)
        {
            ret = ret && checkFailed("@SYS59325");
        }

        if (!documentNumber)
        {
            ret = ret && checkFailed("@SYS57812");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constantDateAndNumber</Name>
				<Source><![CDATA[
    public boolean constantDateAndNumber()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    protected Dialog dialog()
    {
        Dialog dlg = super();

        this.documentDate(rAssetTransferTable.TransDate);
        this.documentNumber(rAssetTransferTable.JournalNum);

        return dlg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>employee</Name>
				<Source><![CDATA[
    protected void employee(TransDate _tekdate)
    {
        oldEmployee = EmployeeTable_RU::findByEmployeeId(rAssetTransferTable.OldEmployee);
        newEmployee = EmployeeTable_RU::findByEmployeeId(rAssetTransferTable.NewEmployee);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReport</Name>
				<Source><![CDATA[
    protected boolean initReport()
    {
        this.employee(this.transDate());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDocumentPath</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void initDocumentPath()
    {
        const str fileExtension = '.extension';

        fileName = this.comment()
            + "@SYS34952"
            + this.documentNumber()
            + "@GLS116882"
            + date2str(this.documentDate(),123,2,2,2,2,4,DateFlags::None)
            + "@SYS34953";

        documentPath = fileName + fileExtension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeDocument</Name>
				<Source><![CDATA[
    protected boolean makeDocument()
    {
        this.initDocumentPath();

        excelDocument = XMLExcelDocument_RU::newFromResource(this.templateName(), false);

        if (!excelDocument)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(Args _args)
    {
        if (!_args.record())
        {
            throw error(Error::missingRecord(funcName()));
        }

        if (_args.dataset() != tableNum(RAssetTransferTable))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        rAssetTransferTable =  _args.record();

        super(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLocation</Name>
				<Source><![CDATA[
    protected RAssetLocationName newLocation()
    {
        return RAssetLocation::find(rAssetTransferTable.NewLocation).Name
            ? RAssetLocation::find(rAssetTransferTable.NewLocation).Name
            : rAssetTransferTable.NewLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>oldLocation</Name>
				<Source><![CDATA[
    protected RAssetLocationName oldLocation()
    {
        return RAssetLocation::find(rAssetTransferTable.OldLocation).Name
            ? RAssetLocation::find(rAssetTransferTable.OldLocation).Name
            : rAssetTransferTable.OldLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    protected void run()
    {
        int counter = 1;
        int tableLine = 21;
        RAssetAmount rassetSum;

        super();
        
        RAssetTransferTrans rAssetTransferTrans;
        while select AccountNum from rAssetTransferTrans
            where rAssetTransferTrans.TransferTableRecId == rAssetTransferTable.RecId
        {
            if (counter == 17)
            {
                tableLine += 7;
            }
            else if (counter >= 28)
            {
                excelDocument.insertRow(tableLine + counter - 1, curWorkSheetNum);
            }

            rAssetTable = RAssetTable::find(rAssetTransferTrans.AccountNum);
            rAssetStandards = RAssetStandards::find(rAssetTransferTrans.AccountNum, assetStandardField.value());
            rAssetSumTrans = RAssetSumCalc_Trans::newAssetPeriod(rAssetTable.AccountNum, rAssetStandards.AssetStandardId, this.transDate());
            acquisitionFirstTrans = RAssetTrans::findFirstType(rAssetTable.AccountNum, rAssetStandards.AssetStandardId, RAssetTransType::Acquisition, false);

            this.insertValueIntoDoc('A' + int2str(tableLine + counter), counter);
            this.insertValueIntoDoc('K' + int2str(tableLine + counter), rAssetTable.Name);
            if (this.dateToBusinessAccounting())
            {
                this.insertValueIntoDoc('BH' + int2str(tableLine + counter), date2str(this.dateToBusinessAccounting(),123,2,2,2,2,4,DateFlags::None));
            }
            this.insertValueIntoDoc('CC' + int2str(tableLine + counter), rAssetTable.AccountNum);
            this.insertValueIntoDoc('CX' + int2str(tableLine + counter), 1);
            this.insertValueIntoDoc('DN' + int2str(tableLine + counter), rAssetSumTrans.netBookValue());
            this.insertValueIntoDoc('EK' + int2str(tableLine + counter), rAssetSumTrans.netBookValue());

            ttsbegin;
            this.updateDocuments();
            ttscommit;

            rassetSum += rAssetSumTrans.netBookValue();
            counter++;
        }
        this.insertValueIntoDoc(ConstSum, rassetSum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    protected TransDate transDate()
    {
        return rAssetTransferTable.TransDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>