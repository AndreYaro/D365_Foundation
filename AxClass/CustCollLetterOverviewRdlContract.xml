<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollLetterOverviewRdlContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustCollLetterOverviewRdlContract</c> class is the RDL contract class for the
/// <c>CustCollLetterOverview</c> Microsoft SQL Server Reporting Services report.
/// </summary>
[
    SrsReportNameAttribute(ssrsReportStr(CustCollectionLetterOverview, Report)),
    SysOperationContractProcessingAttribute(classStr(CustColLetterOverviewUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class CustCollLetterOverviewRdlContract extends SrsReportRdlDataContract implements SysOperationValidatable
{
    public const str ParameterNameFromDate = 'FromDate';
    public const str ParameterNameToDate = 'ToDate';
    public const str ParameterNameBillingClassifications = 'BillingClassification';
    public const str ParameterNameInclTransWithNoBillingClassification = 'InclTransWithNoBillingClass';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    public FromDate parmFromDate(FromDate _fromDate = DateTimeUtil::date(this.getValue(ParameterNameFromDate)))
    {
        this.setValue(ParameterNameFromDate, DateTimeUtil::newDateTime(_fromDate, 0));
        return _fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    public ToDate parmToDate(ToDate _toDate = DateTimeUtil::date(this.getValue(ParameterNameToDate)))
    {
        this.setValue(ParameterNameToDate, DateTimeUtil::newDateTime(_toDate, 0));
        return _toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTransWithNoBillingClassification</Name>
				<Source><![CDATA[
    public NoYes parmInclTransWithNoBillingClassification(NoYes _inclTransWithNoBillingClassification = this.getValue(ParameterNameInclTransWithNoBillingClassification))
    {
        this.setValue(ParameterNameInclTransWithNoBillingClassification, _inclTransWithNoBillingClassification);
        return _inclTransWithNoBillingClassification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingClassifications</Name>
				<Source><![CDATA[
    public List parmBillingClassifications(List _billingClassifications = this.getValue(ParameterNameBillingClassifications))
    {
        this.setValue(ParameterNameBillingClassifications, _billingClassifications);
        return _billingClassifications;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the parameters.
    /// </summary>
    /// <returns>
    /// true if validation is successful; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;
        var fromDate = this.parmFromDate();
        var toDate = this.parmToDate();

        if ((fromDate && !toDate) ||
            (!fromDate && toDate))
        {
            checkFailed("@SYS24455");
            isValid = false;
        }
        else if (fromDate > toDate)
        {
            checkFailed("@SYS22806");
            isValid = false;
        }

        if (isValid)
        {
            isValid = CustBillingClassificationReportManager::validate(this.parmBillingClassifications(), this.parmInclTransWithNoBillingClassification());
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>