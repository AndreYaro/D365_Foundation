<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanProductionFlowActivityLookupParm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LeanProductionFlowActivityLookupParm</c> class contains all the parameters that are required
///    to filter the lookup grid and has a static method which is the entry point to the lookup itself.
/// </summary>
public class LeanProductionFlowActivityLookupParm
{
    LeanRuleActiveDateTime  leanRuleActiveFromDateTime;
    LeanRuleActiveDateTime  leanRuleActiveToDateTime;
    KanbanFlowElementRole   kanbanFlowElementRole;
    LeanRuleData            leanRuleData;
    LeanRuleData            replacedRuleData;

    FormStringControl       lookupControl;
    boolean                 isMultiActivityFlow;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isInReplacementMode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the lookup is to be used for replacing a kanban rule.
    /// </summary>
    /// <returns>
    ///    true if the lookup is used for replacing a rule; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isInReplacementMode()
    {
        return replacedRuleData != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsMultiActivityFlow</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmIsMultiActivityFlow(boolean _isMultiActivityFlow = isMultiActivityFlow)
    {
        isMultiActivityFlow = _isMultiActivityFlow;

        return isMultiActivityFlow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmKanbanFlowElementRole</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public KanbanFlowElementRole parmKanbanFlowElementRole(KanbanFlowElementRole _kanbanFlowElementRole = kanbanFlowElementRole)
    {
        kanbanFlowElementRole = _kanbanFlowElementRole;
        return kanbanFlowElementRole;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLeanRuleActiveFromDateTime</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public LeanRuleActiveDateTime parmLeanRuleActiveFromDateTime(LeanRuleActiveDateTime _leanRuleActiveFromDateTime = leanRuleActiveFromDateTime)
    {
        leanRuleActiveFromDateTime = _leanRuleActiveFromDateTime;
        return leanRuleActiveFromDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLeanRuleActiveToDateTime</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public LeanRuleActiveDateTime parmLeanRuleActiveToDateTime(LeanRuleActiveDateTime _leanRuleActiveToDateTime = leanRuleActiveToDateTime)
    {
        leanRuleActiveToDateTime = _leanRuleActiveToDateTime;

        return leanRuleActiveToDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLeanRuleData</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public LeanRuleData parmLeanRuleData(LeanRuleData _leanRuleData = leanRuleData)
    {
        leanRuleData = _leanRuleData;
        return leanRuleData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLookupControl</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public FormStringControl parmLookupControl(FormStringControl _lookupControl = lookupControl)
    {
        lookupControl = _lookupControl;
        return lookupControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReplacedRuleData</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public LeanRuleData parmReplacedRuleData(LeanRuleData _replacedRuleData = replacedRuleData)
    {
        replacedRuleData = _replacedRuleData;

        return replacedRuleData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected static LeanProductionFlowActivityLookupParm construct()
    {
        return new LeanProductionFlowActivityLookupParm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows the production flow activities lookup form.
    /// </summary>
    /// <param name="_lookupCtrl">
    /// The caller object.
    /// </param>
    /// <param name="_filterStr">
    /// The current value in the lookup field.
    /// </param>
    /// <param name="_elementRole">
    /// The role of the element (source/destination) that the lookup is shown for.
    /// </param>
    /// <param name="_leanRuleData">
    /// The object that contains all the rule-related data.
    /// </param>
    /// <param name="_multiActivityKanbanFlow">
    /// The flag indicating if the user is picking for a single activity <c>KanbanFlow</c> or not.
    /// </param>
    /// <param name="_replacedRuleData">
    /// The data of the rule being replaced, used for filtering out the last activities by location.
    /// </param>
    /// <remarks>
    /// The result of the lookup is hold within the _kanbanFlow parameter, because although we're
    /// allowing the user to only select a source/destination location, in reality
    /// there is more information that is needed to persist this choice later on.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void lookup(
        FormStringControl     _lookupCtrl,
        str                   _filterStr,
        KanbanFlowElementRole _elementRole,
        LeanRuleData          _leanRuleData,
        boolean               _multiActivityKanbanFlow = false,
        LeanRuleData          _replacedRuleData        = null)
    {
        Args                                    args = new Args();
        LeanProductionFlowActivityLookupParm    leanProductionFlowActivityLookupParm =
                                                    LeanProductionFlowActivityLookupParm::construct();

        // initialize the lookup parameters
        leanProductionFlowActivityLookupParm.parmKanbanFlowElementRole(_elementRole);
        leanProductionFlowActivityLookupParm.parmLeanRuleActiveFromDateTime(_leanRuleData.validFrom());
        leanProductionFlowActivityLookupParm.parmLeanRuleActiveToDateTime(_leanRuleData.validTo());
        leanProductionFlowActivityLookupParm.parmLeanRuleData(_leanRuleData);
        leanProductionFlowActivityLookupParm.parmLookupControl(_lookupCtrl);
        leanProductionFlowActivityLookupParm.parmIsMultiActivityFlow(_multiActivityKanbanFlow);
        leanProductionFlowActivityLookupParm.parmReplacedRuleData(_replacedRuleData);

        // initialize the arguments to the form
        args.name(formstr(LeanProductionFlowActivityLookup));
        args.caller(_lookupCtrl);
        args.lookupValue(_filterStr);
        args.parmObject(leanProductionFlowActivityLookupParm);

        if (_lookupCtrl)
        {
            args.lookupField(_lookupCtrl.dataField());

            // create a form run and initialize it
            FormRun formRun = classfactory.formRunClass(args);
            formRun.init();

            // trigger the showing of the form
            _lookupCtrl.performFormLookup(formRun);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the class.
    /// </summary>
    /// <returns>
    ///    A new instance of the class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LeanProductionFlowActivityLookupParm newStandard()
    {
        return LeanProductionFlowActivityLookupParm::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
