<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryOnhandReportContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute,
SysOperationGroupAttribute('IncludeGroup', "@WAX:WHSInventoryOnhandReportContractIncludeDimensions", '5')
]
internal class WHSInventoryOnhandReportContract implements SysOperationInitializable, SysOperationValidatable
{
    #InventDimDevelop
    #ISOCountryRegionCodes

    protected str packedQuery;
    private WHSInventoryOnhandReportId reportId;
    private Query query;
    private WHSInventoryOnhandReportAsOfDate asOfDate;
    private WHSIncludeRegisteredAndPickedTransactions includeRegisteredAndPickedTransactions;
    private WHSInventoryOnhandReportName reportName;

    private EcoResConfigurationFlag includeConfigId;
    private EcoResSizeFlag includeInventSizeId;
    private EcoResColorFlag includeInventColorId;
    private EcoResStyleFlag includeInventStyleId;
    private EcoResVersionFlag includeInventVersionId;

    private InventSiteIdFlag includeInventSiteId;
    private InventLocationIdFlag includeInventLocationId;
    private WMSLocationIdFlag includeLocationId;

    private WHSInventStatusFlag includeInventStatusId;
    private WHSLicensePlateFlag includeLicensePlateNumber;
    private InventBatchIdFlag includeInventBatchId;
    private InventSerialIdFlag includeInventSerialId;
    private InventGTDIdFlag_RU includeInventGTDId;
    private InventOwnerIdFlag includeInventOwnerId;
    private InventProfileIdFlag_RU includeInventProfileId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newQuery</Name>
				<Source><![CDATA[
    private Query newQuery()
    {
        return new Query(queryStr(WHSInventoryOnhandReportQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the contract.
    /// </summary>
    public void initialize()
    {
        this.parmAsOfDate(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()) - 1);
        this.parmIncludeConfigId(NoYes::Yes);
        this.parmIncludeInventSizeId(NoYes::Yes);
        this.parmIncludeInventColorId(NoYes::Yes);
        this.parmIncludeInventStyleId(NoYes::Yes);
        this.parmIncludeInventVersionId(NoYes::Yes);
        this.parmIncludeRegisteredAndPickedTransactions(NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportId</Name>
				<Source><![CDATA[
    public WHSInventoryOnhandReportId parmReportId(WHSInventoryOnhandReportId _reportId = ReportId)
    {
        if (prmisDefault(_reportId) &&	!reportId)
        {
            reportId = newGuid();
        }
        else
        {
            reportId = _reportId;
        }

        return reportId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    public Query parmQuery(Query _query = query)
    {
        if (prmisDefault(_query) &&	!query)
        {
            query = new Query(SysOperationHelper::base64Decode(packedQuery));
        }
        else
        {
            packedQuery = SysOperationHelper::base64Encode(_query.pack());
            query = _query;
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackedQuery</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        AifQueryTypeAttribute('_packedQuery', queryStr(WHSInventoryOnhandReportQuery))
    ]
    public str parmPackedQuery(str _packedQuery = packedQuery)
    {
        packedQuery = _packedQuery;

        return packedQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAsOfDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationDisplayOrderAttribute('2')
    ]
    public WHSInventoryOnhandReportAsOfDate parmAsOfDate(WHSInventoryOnhandReportAsOfDate _asOfDate = asOfDate)
    {
        asOfDate = _asOfDate;

        return asOfDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeRegisteredAndPickedTransactions</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IncludeRegisteredAndPickedTransactions'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public WHSIncludeRegisteredAndPickedTransactions parmIncludeRegisteredAndPickedTransactions(WHSIncludeRegisteredAndPickedTransactions _includeRegisteredAndPickedTransactions = includeRegisteredAndPickedTransactions)
    {
        includeRegisteredAndPickedTransactions = _includeRegisteredAndPickedTransactions;

        return includeRegisteredAndPickedTransactions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportName</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationDisplayOrderAttribute('4')
    ]
    public WHSInventoryOnhandReportName parmReportName(WHSInventoryOnhandReportName _reportName = reportName)
    {
        reportName = _reportName;

        return reportName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeConfigId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeConfigId'),
    SysOperationDisplayOrderAttribute('6'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public EcoResConfigurationFlag parmIncludeConfigId(EcoResConfigurationFlag _includeConfigId = includeConfigId)
    {
        includeConfigId = _includeConfigId;

        return includeConfigId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventBatchId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventBatchId'),
    SysOperationDisplayOrderAttribute('13'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public InventBatchIdFlag parmIncludeInventBatchId(InventBatchIdFlag _includeInventBatchId = includeInventBatchId)
    {
        includeInventBatchId = _includeInventBatchId;

        return includeInventBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventColorId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventColorId'),
    SysOperationDisplayOrderAttribute('8'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public EcoResColorFlag parmIncludeInventColorId(EcoResColorFlag _includeInventColorId = includeInventColorId)
    {
        includeInventColorId = _includeInventColorId;

        return includeInventColorId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventGTDId_RU</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventGTDId'),
    SysOperationDisplayOrderAttribute('15'),
    SysOperationGroupMemberAttribute('IncludeGroup'),
    SysOperationCountryRegionCodesAttribute([#isoRU])
    ]
    public InventGTDIdFlag_RU parmIncludeInventGTDId_RU(InventGTDIdFlag_RU _includeInventGTDId = includeInventGTDId)
    {
        includeInventGTDId = _includeInventGTDId;

        return includeInventGTDId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventLocationId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventLocationId'),
    SysOperationDisplayOrderAttribute('11'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public InventLocationIdFlag parmIncludeInventLocationId(InventLocationIdFlag _includeInventLocationId = includeInventLocationId)
    {
        includeInventLocationId = _includeInventLocationId;

        return includeInventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeLocationId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeLocationId'),
    SysOperationDisplayOrderAttribute('12'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public WMSLocationIdFlag parmIncludeLocationId(InventLocationIdFlag _includeLocationId = includeLocationId)
    {
        includeLocationId = _includeLocationId;

        return includeLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventOwnerId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventOwnerId'),
    SysOperationDisplayOrderAttribute('16'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public InventOwnerIdFlag parmIncludeInventOwnerId(InventOwnerIdFlag _includeInventOwnerId = includeInventOwnerId)
    {
        includeInventOwnerId = _includeInventOwnerId;

        return includeInventOwnerId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventProfileId_RU</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventProfileId'),
    SysOperationDisplayOrderAttribute('17'),
    SysOperationGroupMemberAttribute('IncludeGroup'),
    SysOperationCountryRegionCodesAttribute([#isoRU])
    ]
    public InventProfileIdFlag_RU parmIncludeInventProfileId_RU(InventProfileIdFlag_RU _includeInventProfileId = includeInventProfileId)
    {
        includeInventProfileId = _includeInventProfileId;

        return includeInventProfileId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventSerialId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventSerialId'),
    SysOperationDisplayOrderAttribute('15'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public InventSerialIdFlag parmIncludeInventSerialId(InventSerialIdFlag _includeInventSerialId = includeInventSerialId)
    {
        includeInventSerialId = _includeInventSerialId;

        return includeInventSerialId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventSizeId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventSizeId'),
    SysOperationDisplayOrderAttribute('7'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public EcoResSizeFlag parmIncludeInventSizeId(EcoResSizeFlag _includeInventSizeId = includeInventSizeId)
    {
        includeInventSizeId = _includeInventSizeId;

        return includeInventSizeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventStatusId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventStatusId'),
    SysOperationDisplayOrderAttribute('18'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public WHSInventStatusFlag parmIncludeInventStatusId(WHSInventStatusFlag _includeInventStatusId = includeInventStatusId)
    {
        includeInventStatusId = _includeInventStatusId;

        return includeInventStatusId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventStyleId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventStyleId'),
    SysOperationDisplayOrderAttribute('9'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public EcoResStyleFlag parmIncludeInventStyleId(EcoResStyleFlag _includeInventStyleId = includeInventStyleId)
    {
        includeInventStyleId = _includeInventStyleId;

        return includeInventStyleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeInventVersionId</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('IncludeInventVersionId'),
    SysOperationDisplayOrderAttribute('27'),
    SysOperationGroupMemberAttribute('IncludeGroup')
    ]
    public EcoResVersionFlag parmIncludeInventVersionId(EcoResVersionFlag _includeInventVersionId = includeInventVersionId)
    {
        includeInventVersionId = _includeInventVersionId;

        return includeInventVersionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!this.parmAsOfDate())
        {
            isValid = checkFailed(strFmt("@SYS50104", "@SYS4004394")) && isValid;
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>