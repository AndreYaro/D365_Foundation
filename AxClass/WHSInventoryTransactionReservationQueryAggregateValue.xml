<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryTransactionReservationQueryAggregateValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventoryTransactionReservationQueryAggregateValue</c> class serves a helper role during the calculation 
/// of the aggregated reservation information. This class represents a unit of aggregation of the reservation information.
/// </summary>
internal final class WHSInventoryTransactionReservationQueryAggregateValue
{
    private WHSInventoryTransactionOriginId             transactionOriginId;
    private WHSWorkInventoryTransactionDimensionsDescriptor  dimensionsDescriptor;
    private WHSInventoryTransactionHandlingQty          handlingQty;
    private WHSInventoryTransactionHandlingWeight       handlingWeight;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTransactionOriginId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSInventoryTransactionOriginId getTransactionOriginId()
    {
        return transactionOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionsDescriptor</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSWorkInventoryTransactionDimensionsDescriptor getDimensionsDescriptor()
    {
        return dimensionsDescriptor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHandlingQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSInventoryTransactionHandlingQty getHandlingQty()
    {
        return handlingQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHandlingWeight</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSInventoryTransactionHandlingWeight getHandlingWeight()
    {
        return handlingWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addReservationQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the given values into the current reservation aggregated value.
    /// </summary>
    /// <param name = "_handlingQty">Handling quantity.</param>
    /// <param name = "_handlingWeight">Handling weight.</param>
    [Hookable(false)]
    internal void addReservationQty(WHSInventoryTransactionHandlingQty _handlingQty, WHSInventoryTransactionHandlingWeight _handlingWeight)
    {
        this.handlingQty += _handlingQty;
        this.handlingWeight += _handlingWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a key of the aggregated reservation values.
    /// This key controls the grouping of the reservations.
    /// </summary>
    /// <param name = "_transactionOriginId">A transaction origin of the reservation transactions.</param>
    /// <param name = "_dimensionsDescriptor">A descriptor of the inventory dimensions of the reservation.</param>
    /// <returns>A container representing a grouping key for the reservations.</returns>
    [Hookable(false)]
    internal static container getKey(WHSInventoryTransactionOriginId _transactionOriginId, WHSWorkInventoryTransactionDimensionsDescriptor _dimensionsDescriptor)
    {
        return [_transactionOriginId, _dimensionsDescriptor.getKey()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromValues</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSInventoryTransactionReservationQueryAggregateValue newFromValues(
        WHSInventoryTransactionOriginId _transactionOriginId,
        WHSWorkInventoryTransactionDimensionsDescriptor _dimensionsDescriptor)
    {
        WHSInventoryTransactionReservationQueryAggregateValue aggregateValue = new WHSInventoryTransactionReservationQueryAggregateValue();

        aggregateValue.transactionOriginId  = _transactionOriginId;
        aggregateValue.dimensionsDescriptor = _dimensionsDescriptor;

        return aggregateValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>