<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPaySheetListReport</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rPaySheetListReport  extends RunBaseBatch implements BatchRetryable
{
    DialogField     dialogPayPeriod;
    ReportPeriod_RU rPayPeriod;
    QueryRun        qr;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase   dialog = super();

        dialog.addGroup("@SYS2163");
        dialogPayPeriod = dialog.addField(extendedTypeStr(ReportPeriod_RU));

        dialogPayPeriod.value(rPayPeriod ? rPayPeriod : RPayParameters::payPeriod());

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            rPayPeriod = dialogPayPeriod.value();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPayPeriod</Name>
				<Source><![CDATA[
    private RPayMonth getPayPeriod(ReportPeriod_RU _rPayPeriod = endmth(RPayParameters::payPeriod()))
    {
        rPayPeriod = _rPayPeriod;
        return rPayPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    private void initFromArgs(Args args)
    {
        RPaySheetTable      rPaySheetTable;

        if (args && args.dataset() == tableNum(RPaySheetTable))
        {
            rPaySheetTable = args.record();
        }

        this.getPayPeriod(rPaySheetTable.PayPeriod);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        super();
        qr = new QueryRun(this.initQuery());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    private Query initQuery()
    {
        QueryBuildDataSource    queryBuildDataSource;
        Query                   query;

        query = new Query(queryStr(RPayRegistryDepositAmount));

        queryBuildDataSource = query.dataSourceTable(tableNum(RPayDepositTable));

        findOrCreateRange_W(queryBuildDataSource, fieldNum(RPayDepositTable,PayPeriod), queryValue(endmth(rPayPeriod)));
        query.userUpdate( false);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyQuery</Name>
				<Source><![CDATA[
    private void modifyQuery()
    {
        QueryBuildDataSource    qbds;

        qbds = this.queryRun().query().dataSourceTable(tableNum(RPayDepositTable));
        findOrCreateRange_W(qbds, fieldNum(RPayDepositTable, PayPeriod), queryValue(rPayPeriod));
    }

]]></Source>
			</Method>
			<Method>
				<Name>prompt</Name>
				<Source><![CDATA[
    public boolean prompt()
    {
        boolean ret;
        ;
        ret = super();
        if (ret)
        {
            rPayPeriod = endmth(dialogPayPeriod.value());
            this.initQuery();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return qr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        OXMLExcelReport_RegistryDepositAmounts report = new OXMLExcelReport_RegistryDepositAmounts();

        this.modifyQuery();
        report.setQueryRun(this.queryRun());
        report.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDefaultButton</Name>
				<Source><![CDATA[
    public boolean showDefaultButton()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ClassDescription description()
    {
        return "@RUP698";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        RPaySheetListReport    rPaySheetListReport = new RPaySheetListReport();

        rPaySheetListReport.initFromArgs(args);
        if (rPaySheetListReport.prompt())
        {
            rPaySheetListReport.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>