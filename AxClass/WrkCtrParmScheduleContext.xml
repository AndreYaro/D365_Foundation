<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WrkCtrParmScheduleContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Define a context to transfer the order scheduling parameters
/// </summary>
internal final class WrkCtrParmScheduleContext implements System.IDisposable
{
    private WrkCtrParmSchedule wrkCtrParmSchedule;
    private static WrkCtrParmScheduleContext rootInstance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct a new context.
    /// </summary>
    [Hookable(false)]
    public static  WrkCtrParmScheduleContext newStandard(WrkCtrParmSchedule _wrkCtrParmSchedule)
    {
        if (rootInstance == null)
        {
            rootInstance = new WrkCtrParmScheduleContext();
            rootInstance.wrkCtrParmSchedule = _wrkCtrParmSchedule;
        }
        return rootInstance;
	}

]]></Source>
			</Method>
			<Method>
				<Name>parmWrkCtrParmSchedule</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WrkCtrParmSchedule parmWrkCtrParmSchedule()
    {
        if (rootInstance == null)
        {
            rootInstance = new WrkCtrParmScheduleContext();
            rootInstance.wrkCtrParmSchedule = null;
		}		

		return rootInstance.wrkCtrParmSchedule;
	}

]]></Source>
			</Method>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ends the context.
    /// </summary>
    public void Dispose()
    {
        rootInstance = null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>