<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqInstrumentationLogger_CalcTaskController_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqInstrumentationLogger_CalcTaskController_Extension</c> classes provides an extension to
/// instantiate a specific instrumentation logger for <c>ReqCalcTaskController</c>.
/// </summary>
[ExtensionOf(classStr(ReqInstrumentationLogger))]
internal final class ReqInstrumentationLogger_CalcTaskController_Extension
{
    private ReqCalcTaskControllerInstrumentationActivities reqActivities;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcTaskController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a ReqCalcTaskController specific logger.
    /// </summary>
    /// <returns>
    /// An instance of <c>ReqParallelFirmingInstrumentationActivities</c> instrumentation logger class.
    /// </returns>
    public ReqCalcTaskControllerInstrumentationActivities calcTaskController()
    {
        if (!reqActivities)
        {
            reqActivities = ReqCalcTaskControllerInstrumentationActivities::newFromLogger(this);
        }

        return reqActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logReqProcessThreadListInformation</Name>
				<Source><![CDATA[
    public void logReqProcessThreadListInformation(str _infoMessage, ReqProcessThreadList _reqProcessThreadList)
    {
        SysInstrumentationEventDataJsonSerializer serializer = new SysInstrumentationEventDataJsonSerializer();

        serializer.setValue(ReqCalcTaskControllerInstrumentationActivities::ParmInfoMessage, _infoMessage);
        serializer.setValue(ReqCalcTaskControllerInstrumentationActivities::ParmReqProcessThreadListRecId, int642Str(_reqProcessThreadList.RecId));
        serializer.setValue(ReqCalcTaskControllerInstrumentationActivities::ParmProcessId, _reqProcessThreadList.ProcessId);
        serializer.setValue(ReqCalcTaskControllerInstrumentationActivities::ParmThreadId, _reqProcessThreadList.ThreadId);
        serializer.setValue(ReqCalcTaskControllerInstrumentationActivities::ParmBatchTaskRecId, int642Str(_reqProcessThreadList.BatchTaskRecId));

        instrumentationLogger.logInformation(serializer.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>logWarningForProcessThread</Name>
				<Source><![CDATA[
    public void logWarningForProcessThread(str _infoMessage, ReqProcessId _processId, ReqProcessThreadId _threadId)
    {
        SysInstrumentationEventDataJsonSerializer serializer = new SysInstrumentationEventDataJsonSerializer();

        serializer.setValue(ReqCalcTaskControllerInstrumentationActivities::ParmInfoMessage, _infoMessage);
        serializer.setValue(ReqCalcTaskControllerInstrumentationActivities::ParmProcessId, _processId);
        serializer.setValue(ReqCalcTaskControllerInstrumentationActivities::ParmThreadId, _threadId);

        instrumentationLogger.logWarning(serializer.toString());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>