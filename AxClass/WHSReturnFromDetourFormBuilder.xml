<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReturnFromDetourFormBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSReturnFromDetourFormBuilder extends WHSRetryableFormBuilder
{
    private WhsWorkExecuteDisplayProcessor processor;
    private WhsWorkExecuteDisplayProcessorState state;
    private container messageControl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildForm</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSExecuteProcessEventHandlerResultValue buildForm()
    {
        WHSServiceXMLTranslator xmlTranslator = processor.parmXmlTranslator();
        boolean hasChanged;
        container originFormContainer, formContainer;
        XML originXML;
        [hasChanged, originFormContainer, formContainer, originXML] = state.returnFromDetour(xmlTranslator, messageControl);

        if (!hasChanged)
        {
            return WHSExecuteProcessEventHandlerResultValue::constructFromParameters(
                originFormContainer,
                originXML,
                true); // isFormContainerStoredInUserSession
        }

        if (xmlTranslator is WHSMobileAppServiceXMLTranslator)
        {
            var translator = xmlTranslator as WHSMobileAppServiceXMLTranslator;
            translator.parmReceivedContainer(originFormContainer);
        }

        return WHSExecuteProcessEventHandlerResultValue::constructFromParameters(
            formContainer,
            null,
            true); // isFormContainerStoredInUserSession
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new(WhsWorkExecuteDisplayProcessor _processor, WhsWorkExecuteDisplayProcessorState _state, container _messageControl)
    {
        this.processor = _processor;
        this.state = _state;
        this.messageControl = _messageControl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>