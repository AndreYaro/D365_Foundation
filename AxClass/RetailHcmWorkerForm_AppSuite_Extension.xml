<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailHcmWorkerForm_AppSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;

/// <summary>
/// Extension class of the <c>HcmWorker</c> form, which is used for retail.
/// </summary>
[ExtensionOf(formStr(HcmWorker))]
public final class RetailHcmWorkerForm_AppSuite_Extension
{
    private static CommerceHQEventSource eventSource = CommerceHQEventSource::Log;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addressBooksModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when AddressBooks control of HcmWorker form is modified.
    /// </summary>
    public void addressBooksModified()
    {
        // We need see whether worker addressBooks data really changes and alert customer to run CDX 1060 job since it is security critical.
        if (isConfigurationKeyEnabled(configurationKeyNum(Retail)))
        {
            RetailStaffTable retailstaff = RetailStaffTable::find(this.hcmWorker.PersonnelNumber);

            if (retailstaff.RecId == 0)
            {
                // This HcmWorker is not a retail staff.
                return;
            }

            container modifiedToAddressBooksIds = this.addressBooksCtrl.get();
            if (conLen(modifiedToAddressBooksIds) == 1 && !conPeek(modifiedToAddressBooksIds, 1))
            {
                // addressBooksCtrl.get() underlying used str2con which generated a container of length 1 for empty addressBooks string.
                modifiedToAddressBooksIds = conNull();
            }

            // Since address books are sorted by Name both in dirPerson.addressBooks method and multi-select control,
            // we do not need to sort them again for comparison.
            // Comparing containers results in comparing the content: http://www.axaptapedia.com/Container
            if (conPeek(this.dirPerson.addressBooks(), 1) != modifiedToAddressBooksIds)
            {
                eventSource.EventWriteCriticalEmployeeDataModified(int642Str(retailstaff.RecId), 'AddressBooks', 'update');
                info("@Retail:RetailWorkerAuthInfoChanged");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>AddressBooks_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// HcmWorker AddressBooks form control OnModified event handler for the HcmWorker form.
    /// </summary>
    /// <param name="sender">The form control raising the event.</param>
    /// <param name="e">Args for the event.</param>
    [FormControlEventHandler(formControlStr(HcmWorker, AddressBooks), FormControlEventType::Modified)]
    public static void AddressBooks_OnModified(FormControl sender, FormControlEventArgs e)
    {
        FormRun hcmWorkerForm = sender.formRun() as FormRun;
        if (hcmWorkerForm)
        {
            hcmWorkerForm.addressBooksModified();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>