<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPRViewQueryFilter_PurchTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class sets the payment request data source filters based upon the filter record PurchTable.
/// </summary>
[CFMPaymentRequestSourceAttribute(tableStr(PurchTable))]
public class CFMPRViewQueryFilter_PurchTable extends CFMPRViewQueryFilter
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>filter</Name>
				<Source><![CDATA[
    protected void filter()
    {
        Query query = new Query();
        query.queryType(QueryType::Union);

        QueryBuildDataSource paymentRequestDataSource = query.addDataSource(tableNum(CFMPaymentRequestTable));
        paymentRequestDataSource.unionType(UnionType::Union);
        paymentRequestDataSource.addSelectionField(fieldNum(CFMPaymentRequestTable, RecId));

        QueryBuildRange qbr = paymentRequestDataSource.addRange(fieldNum(CFMPaymentRequestTable, SourceType));
        qbr.value(queryValue(CFMPaymentRequestSourceType::VendInvoice));

        QueryBuildDataSource qbds = paymentRequestDataSource.addDataSource(tableNum(VendTrans));

        qbds.addLink(fieldNum(CFMPaymentRequestTable, HeaderRefRecId), fieldNum(VendTrans, RecId));

        qbds = qbds.addDataSource(tableNum(VendInvoiceJour));

        qbds.addLink(fieldNum(VendTrans, Invoice), fieldNum(VendInvoiceJour, InvoiceId));
        qbds.addLink(fieldNum(VendTrans, Voucher), fieldNum(VendInvoiceJour, LedgerVoucher));
        qbds.addLink(fieldNum(VendTrans, TransDate), fieldNum(VendInvoiceJour, InvoiceDate));
        qbds.addLink(fieldNum(VendTrans, AccountNum), fieldNum(VendInvoiceJour, InvoiceAccount));

        qbds = qbds.addDataSource(tableNum(VendInvoicePurchLink));

        qbds.addLink(fieldNum(VendInvoiceJour, PurchId), fieldNum(VendInvoicePurchLink, PurchId));
        qbds.addLink(fieldNum(VendInvoiceJour, InvoiceId), fieldNum(VendInvoicePurchLink, InvoiceId));
        qbds.addLink(fieldNum(VendInvoiceJour, InternalInvoiceId), fieldNum(VendInvoicePurchLink, InternalInvoiceId));
        qbds.addLink(fieldNum(VendInvoiceJour, InvoiceDate), fieldNum(VendInvoicePurchLink, InvoiceDate));
        qbds.joinMode(JoinMode::ExistsJoin);

        PurchTable purchTable = filterRecord;
        qbr = qbds.addRange(fieldNum(VendInvoicePurchLink, OrigPurchId));
        qbr.value(queryValue(purchTable.PurchId));

        paymentRequestDataSource = query.addDataSource(tableNum(CFMPaymentRequestTable));
        paymentRequestDataSource.unionType(UnionType::Union);
        paymentRequestDataSource.addSelectionField(fieldNum(CFMPaymentRequestTable, RecId));

        qbr = paymentRequestDataSource.addRange(fieldNum(CFMPaymentRequestTable, SourceType));
        qbr.value(queryValue(CFMPaymentRequestSourceType::PlannedPayment));

        qbr = paymentRequestDataSource.addRange(fieldNum(CFMPaymentRequestTable, HeaderRefRecId));
        qbr.value(queryValue(purchTable.RecId));

        QueryRun queryRun = new queryRun(query);

        paymentRequestDataSource = dataSourceQuery.dataSourceTable(tableNum(CFMPaymentRequestTable));
        paymentRequestDataSource.firstOnly(false);
        paymentRequestDataSource.clearDynalinks();
        paymentRequestDataSource.clearRanges();

        container conRecId;

        while (queryRun.next())
        {
            conRecId += queryValue(queryRun.get(tableNum(CFMPaymentRequestTable)).RecId);
        }

        qbr = paymentRequestDataSource.addRange(fieldNum(CFMPaymentRequestTable, RecId));
        qbr.value(con2str(conRecId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>