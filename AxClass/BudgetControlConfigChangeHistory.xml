<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlConfigChangeHistory</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetControlConfigChangeHistory</c> class manages the archiving of budget control configurations changes
/// </summary>
internal final class BudgetControlConfigChangeHistory
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertBudgetControlConfigurationChanges</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Insert budget control configuration changes by comparing the active and draft config.
    /// </summary>
    /// <param name="_activeBudgetControlConfiguration">
    ///    The record of the active <c>BudgetControlConfiguration</c> record.
    /// </param>
    /// <param name="_draftBudgetControlConfiguration">
    ///    The record of the draft <c>BudgetControlConfiguration</c> record.
    /// </param>
    internal static void insertBudgetControlConfigurationChanges(BudgetControlConfiguration _activeBudgetControlConfiguration,
                                                                 BudgetControlConfiguration _draftBudgetControlConfiguration)
    {
        utcDateTime _modifiedDateTime = DateTimeUtil::utcNow();

        BudgetControlConfigChangeHistory::insertBudgetControlFundsChanges(_activeBudgetControlConfiguration, _draftBudgetControlConfiguration, _modifiedDateTime);

        BudgetControlConfigChangeHistory::insertBudgetControlDocumentsAndJournalsChanges(_activeBudgetControlConfiguration.RecId, _draftBudgetControlConfiguration.RecId, _modifiedDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertBudgetControlFundsChanges</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Insert budget control budget funds changes by comparing the active and draft config.
    /// </summary>
    /// <param name="_activeBudgetControlConfiguration">
    ///    The record of the active <c>BudgetControlConfiguration</c> record.
    /// </param>
    /// <param name="_draftBudgetControlConfiguration">
    ///    The record of the draft <c>BudgetControlConfiguration</c> record.
    /// </param>
    /// <param name="_modifiedDateTime">
    ///    The modified date time when the config is changed.
    /// </param>
    internal static void insertBudgetControlFundsChanges(BudgetControlConfiguration _activeBudgetControlConfiguration,
                                                         BudgetControlConfiguration _draftBudgetControlConfiguration,
                                                         utcDateTime _modifiedDateTime)
    {
        VersioningCompareRecordVersions comparer = VersioningCompareRecordVersions::newTableId(tableNum(BudgetControlConfiguration));
        container changes = comparer.packChangedFields(VersioningChangeType::Updated, _activeBudgetControlConfiguration, _draftBudgetControlConfiguration);
        RecordInsertList recordInsertList = new RecordInsertList(tableNum(BudgetControlConfigurationChangeHistory));

        for (int i = 1; i <= conLen(changes); i++)
        {
            container changedField = conpeek(changes, i);
            FieldId fieldId = conpeek(changedField, VersioningCompareRecordVersions::posRelatedFieldId());

            if (fieldExt2Id(fieldId) == fieldNum(BudgetControlConfiguration, IsActive))
            {
                continue;
            }

            BudgetControlConfigurationChangeHistory budgetControlConfigurationChangeHistory;
            budgetControlConfigurationChangeHistory.field = fieldId2name(tableNum(BudgetControlConfiguration), fieldId);
            budgetControlConfigurationChangeHistory.label = fieldId2pName(tableNum(BudgetControlConfiguration), fieldId);
            budgetControlConfigurationChangeHistory.oldValue = conpeek(changedField, VersioningCompareRecordVersions::posOrigValue());
            budgetControlConfigurationChangeHistory.newValue = conpeek(changedField, VersioningCompareRecordVersions::posNewValue());
            budgetControlConfigurationChangeHistory.changeDateTime = _modifiedDateTime;

            recordInsertList.add(budgetControlConfigurationChangeHistory);
        }

        recordInsertList.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertBudgetControlDocumentsAndJournalsChanges</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Insert budget control configuration documents and journals changes by comparing the active and draft config.
    /// </summary>
    /// <param name="_activeBudgetControlConfigurationRecId">
    ///    The record ID of the active <c>BudgetControlConfiguration</c> record.
    /// </param>
    /// <param name="_draftBudgetControlConfigurationRecId">
    ///    The record ID of the draft <c>BudgetControlConfiguration</c> record.
    /// </param>
    /// <param name="_modifiedDateTime">
    ///    The modified date time when the config is changed.
    /// </param>
    internal static void insertBudgetControlDocumentsAndJournalsChanges(RecId _activeBudgetControlConfigurationRecId,
                                                                        RecId _draftBudgetControlConfigurationRecId,
                                                                        utcDateTime _modifiedDateTime)
    {
        RecordInsertList recordInsertList = new RecordInsertList(tableNum(BudgetControlConfigurationChangeHistory));
        Set integratorsAllowed = BudgetControlConfigurationManager::getSourceIntegratorsAllowed();
        Enumerator integratorsAllowedEnumerator = integratorsAllowed.getEnumerator();

        while (integratorsAllowedEnumerator.moveNext())
        {
            BudgetControlSourceIntegrator sourceIntegrator = integratorsAllowedEnumerator.current();

            BudgetControlSourceIntegratorEnabled activeBudgetControlSourceIntegratorEnabled = BudgetControlSourceIntegratorEnabled::findByConfigurationSourceIntegrator(
                _activeBudgetControlConfigurationRecId,
                sourceIntegrator);

            BudgetControlSourceIntegratorEnabled draftBudgetControlSourceIntegratorEnabled = BudgetControlSourceIntegratorEnabled::findByConfigurationSourceIntegrator(
                _draftBudgetControlConfigurationRecId,
                sourceIntegrator);

            BudgetControlConfigurationChangeHistory budgetControlConfigurationChangeHistory;

            if (activeBudgetControlSourceIntegratorEnabled && draftBudgetControlSourceIntegratorEnabled)
            {
                if (activeBudgetControlSourceIntegratorEnabled.DoBudgetCheckOnEntry != draftBudgetControlSourceIntegratorEnabled.DoBudgetCheckOnEntry)
                {
                    budgetControlConfigurationChangeHistory = BudgetControlConfigChangeHistory::initBudgetControlSourceIntegratorCheckAtLineChanges(sourceIntegrator, enum2Str(activeBudgetControlSourceIntegratorEnabled.DoBudgetCheckOnEntry), 
                                                                                                                                                    enum2Str(draftBudgetControlSourceIntegratorEnabled.DoBudgetCheckOnEntry), _modifiedDateTime);
                    recordInsertList.add(budgetControlConfigurationChangeHistory);
                }
            }
            else if(activeBudgetControlSourceIntegratorEnabled || draftBudgetControlSourceIntegratorEnabled)
            {
                budgetControlConfigurationChangeHistory.label = enum2Str(sourceIntegrator);
                budgetControlConfigurationChangeHistory.field = enum2Value(sourceIntegrator);
                budgetControlConfigurationChangeHistory.oldValue = activeBudgetControlSourceIntegratorEnabled ? "@SYS28109": "@SYS23992";
                budgetControlConfigurationChangeHistory.newValue = draftBudgetControlSourceIntegratorEnabled ? "@SYS28109": "@SYS23992";
                budgetControlConfigurationChangeHistory.changeDateTime = _modifiedDateTime;
                recordInsertList.add(budgetControlConfigurationChangeHistory);

                if (activeBudgetControlSourceIntegratorEnabled.DoBudgetCheckOnEntry || draftBudgetControlSourceIntegratorEnabled.DoBudgetCheckOnEntry)
                {
                    budgetControlConfigurationChangeHistory.clear();
                    budgetControlConfigurationChangeHistory = BudgetControlConfigChangeHistory::initBudgetControlSourceIntegratorCheckAtLineChanges(sourceIntegrator, activeBudgetControlSourceIntegratorEnabled.DoBudgetCheckOnEntry ? enum2Str(NoYes::Yes): enum2Str(NoYes::No),
                                                                                                                                                    draftBudgetControlSourceIntegratorEnabled.DoBudgetCheckOnEntry ? enum2Str(NoYes::Yes): enum2Str(NoYes::No), _modifiedDateTime);
                    recordInsertList.add(budgetControlConfigurationChangeHistory);
                }
            }
        }

        recordInsertList.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertBudgetControlConfigStatusChange</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Insert budget control configuration status changes.
    /// </summary>
    /// <param name="_isEnable">
    ///    The boolean variable denoting whether the config is enabled or disabled.
    /// </param>
    internal static void insertBudgetControlConfigStatusChange(boolean _isEnable)
    {
        BudgetControlConfigurationChangeHistory budgetControlConfigurationChangeHistory;

        budgetControlConfigurationChangeHistory.field = fieldStr(Ledger, IsBudgetControlEnabled);
        budgetControlConfigurationChangeHistory.label = fieldPName(Ledger,IsBudgetControlEnabled);
        budgetControlConfigurationChangeHistory.oldValue = _isEnable? enum2Str(NoYes::No): enum2Str(NoYes::Yes);
        budgetControlConfigurationChangeHistory.newValue = _isEnable? enum2Str(NoYes::Yes): enum2Str(NoYes::No);
        budgetControlConfigurationChangeHistory.changeDateTime = DateTimeUtil::utcNow();
        
        budgetControlConfigurationChangeHistory.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initBudgetControlSourceIntegratorCheckAtLineChanges</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Intialize budget control configuration changes record for documents and journals check at line entry.
    /// </summary>
    /// <param name="sourceIntegrator">
    ///    The sourceIntegrator enumerator denoting the documents and journals.
    /// </param>
    /// <param name="oldValue">
    ///    string denoting the old value.
    /// </param>
    /// <param name="newValue">
    ///    string denoting the new value.
    /// </param>
    /// <param name="_modifiedDateTime">
    ///    The modified date time when the config is changed.
    /// </param>
    /// <returns>
    ///    The record of the <c>BudgetControlConfigurationChangeHistory</c> record.
    /// </returns>
    private static BudgetControlConfigurationChangeHistory initBudgetControlSourceIntegratorCheckAtLineChanges(BudgetControlSourceIntegrator sourceIntegrator, str oldValue, str newValue, utcDateTime _modifiedDateTime)
    {
        BudgetControlConfigurationChangeHistory budgetControlConfigurationChangeHistory;

        budgetControlConfigurationChangeHistory.label = strFmt("@Budget:DocumentBudgetCheckAtLine", enum2Str(sourceIntegrator));
        budgetControlConfigurationChangeHistory.field = strFmt("@Budget:DocumentBudgetCheckAtLine", enum2Value(sourceIntegrator));
        budgetControlConfigurationChangeHistory.oldValue = oldValue;
        budgetControlConfigurationChangeHistory.newValue = newValue;
        budgetControlConfigurationChangeHistory.changeDateTime = _modifiedDateTime;

        return budgetControlConfigurationChangeHistory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>