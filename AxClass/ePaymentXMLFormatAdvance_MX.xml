<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ePaymentXMLFormatAdvance_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ePaymentXMLFormatAdvance_MX extends EPaymentXMLFormat_MX
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createComprobanteElement</Name>
				<Source><![CDATA[
    protected XmlElement createComprobanteElement()
    {
        XmlElement comprobanteElement = super();

        comprobanteElement.setAttribute('Moneda', currencyCode);
        if (!conFind (['MXN', 'MXP', XXXcurrency], payment.CurrencyCode))
        {
            comprobanteElement.setAttribute('TipoCambio', this.formatExchangeRateAmount(payment.ExchRate / 100));
        }
        comprobanteElement.setAttribute('FormaPago', this.getFormattedPaymentType());
        comprobanteElement.setAttribute('TipoDeComprobante', payment.AmountCur < 0 ? 'I' : 'E');
        comprobanteElement.setAttribute('MetodoPago', 'PUE');
        comprobanteElement.setAttribute('SubTotal', this.formatXmlAmount(payment.AmountCur + totalPositiveTaxAmount - totalNegativeTaxAmount, currencyCode));
        comprobanteElement.setAttribute('Total', this.formatXmlAmount(payment.AmountCur, currencyCode));

        return comprobanteElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createConceptoElement</Name>
				<Source><![CDATA[
    protected XmlElement createConceptoElement(Common _conceptoSource = null)
    {
        CustTrans custTrans = _conceptoSource;
        XmlElement conceptoElement = super(_conceptoSource);
        Amount amountWithoutTax = custTrans.AmountCur + totalPositiveTaxAmount - totalNegativeTaxAmount;

        conceptoElement.setAttribute('Descripcion', 'Anticipo bien o servicio');
        conceptoElement.setAttribute('Importe', this.formatXmlAmount(amountWithoutTax, currencyCode));
        conceptoElement.setAttribute('ValorUnitario', this.formatXmlAmount(amountWithoutTax, currencyCode));
        conceptoElement.setAttribute('Cantidad', '1');

        return conceptoElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fetchTaxes</Name>
				<Source><![CDATA[
    protected void fetchTaxes(Common _taxSource)
    {
        CustTrans custTrans = _taxSource;
        List positiveTaxesList = new List(Types::Record);
        List negativeTaxesList = new List(Types::Record);
        TaxTrans taxTrans;
        TaxTable taxTable;

        CustTable custTable;

        select firstonly CFDISkipIEPSTaxes_MX from custTable
            where custTable.AccountNum == custTrans.AccountNum;

        while select taxTrans
            where taxTrans.Voucher == custTrans.Voucher
               && taxTrans.TransDate == custTrans.TransDate
               && !(taxTrans.TaxType_MX == TaxType_MX::IEPS && custTable.CFDISkipIEPSTaxes_MX == NoYes::Yes)
            join NegativeTax from taxTable
                where taxTable.TaxCode == taxTrans.TaxCode
        {
            if (taxTable.NegativeTax)
            {
                positiveTaxesList.addEnd(taxTrans);

                if (!taxTrans.ExemptTax)
                {
                    regularPositiveTaxExists = true;
                }
            }
            else
            {
                negativeTaxesList.addEnd(taxTrans);

                if (!taxTrans.ExemptTax)
                {
                    regularNegativeTaxExists = true;
                }
            }

        }

        conceptoTaxesMap.insert([custTrans.RecId, 'positive'], positiveTaxesList);
        conceptoTaxesMap.insert([custTrans.RecId, 'negative'], negativeTaxesList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getConceptoSourceList</Name>
				<Source><![CDATA[
    protected List getConceptoSourceList()
    {
        List conceptoSourceList = new List(Types::Record);

        conceptoSourceList.addEnd(payment);
        return conceptoSourceList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>