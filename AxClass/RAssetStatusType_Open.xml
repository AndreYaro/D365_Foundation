<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetStatusType_Open</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetStatusType_Open extends RAssetStatusType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowAcquisition</Name>
				<Source><![CDATA[
        public boolean allowAcquisition(RAssetStandardId _rAssetStandardId = "")
    {
        if (! _rAssetStandardId)
            return RAssetParameters::find().MultiAcq;

        if (RAssetTrans::transTypeFirstDate(rAssetTable.AccountNum, _rAssetStandardId, RAssetTransType::Acquisition, false))
            return RAssetParameters::find().MultiAcq;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowAcquisitionAdj</Name>
				<Source><![CDATA[
        public boolean allowAcquisitionAdj(RAssetStandardId _rAssetStandardId = "")
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowChangeToType</Name>
				<Source><![CDATA[
        public boolean allowChangeToType(RAssetStatus _assetStatus,
                                     boolean      _showMessage = true)
    {
        if (_assetStatus != RAssetStatus::Open 
            &&_assetStatus != RAssetStatus::Suspended)
        {
            return _showMessage ? checkFailed("@GLS116243") : false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowCompanyIssue</Name>
				<Source><![CDATA[
        public boolean allowCompanyIssue(RAssetStandardId _rAssetStandardId = "")
    {
        RAssetMoveHist rAssetMoveHist;
        ;

        if (! _rAssetStandardId)
            return true;

        rAssetMoveHist = RAssetMoveHist::findLastOperation(rAssetTable.AccountNum, RAssetMoveType::CompanyIssue, NoYes::No);
        if (rAssetMoveHist.rAssetMoveStandard(_rAssetStandardId).Posted)
            return false;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDepreciation</Name>
				<Source><![CDATA[
        public boolean allowDepreciation(RAssetStandardId _rAssetStandardId = "",
                                     TransDate        _transDate        = dateNull())
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDepreciationAdj</Name>
				<Source><![CDATA[
        public boolean allowDepreciationAdj(RAssetStandardId _rAssetStandardId = "")
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposal</Name>
				<Source><![CDATA[
        public boolean allowDisposal(RAssetStandardId _rAssetStandardId = "")
    {
        RAssetStandards rAssetStandards;
        ;

        if (! _rAssetStandardId)
            return true;

        rAssetStandards = RAssetStandards::find(rAssetTable.AccountNum, _rAssetStandardId);
        if (rAssetStandards.DisposalDate)
            return false;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalSale</Name>
				<Source><![CDATA[
        public boolean allowDisposalSale(RAssetStandardId _rAssetStandardId = "")
    {
        RAssetStandards rAssetStandards;
        ;

        if (! _rAssetStandardId)
            return true;

        rAssetStandards = RAssetStandards::find(rAssetTable.AccountNum,_rAssetStandardId);
        if (rAssetStandards.DisposalDate)
            return false;

        return true;

    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalScrap</Name>
				<Source><![CDATA[
        public boolean allowDisposalScrap(RAssetStandardId _rAssetStandardId = "")
    {
        RAssetStandards rAssetStandards;
        ;

        if (! _rAssetStandardId)
            return true;

        rAssetStandards = RAssetStandards::find(rAssetTable.AccountNum, _rAssetStandardId);
        if (rAssetStandards.DisposalDate)
            return false;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowLending</Name>
				<Source><![CDATA[
        public boolean allowLending(RAssetStandardId _rAssetStandardId = "")
    {
        if (! _rAssetStandardId)
            return true;

        return this.canBeLended(_rAssetStandardId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowPartialTakeDown</Name>
				<Source><![CDATA[
        public boolean allowPartialTakeDown(RAssetStandardId _rAssetStandardId = "")
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowRevaluation</Name>
				<Source><![CDATA[
        public boolean allowRevaluation(RAssetStandardId _rAssetStandardId = "")
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowWriteDownAdj</Name>
				<Source><![CDATA[
        public boolean allowWriteDownAdj(RAssetStandardId _rAssetStandardId = "")
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowWriteUpAdj</Name>
				<Source><![CDATA[
        public boolean allowWriteUpAdj(RAssetStandardId _rAssetStandardId = "")
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeLended</Name>
				<Source><![CDATA[
        protected boolean canBeLended(RAssetStandardId _assetStandardId)
    {
        return super(_assetStandardId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeLendRet</Name>
				<Source><![CDATA[
        protected boolean canBeLendRet(RAssetStandardId _assetStandardId)
    {
        return super(_assetStandardId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOkToSell</Name>
				<Source><![CDATA[
        public boolean isOkToSell()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rAssetStatus</Name>
				<Source><![CDATA[
        public RAssetStatus rAssetStatus()
    {
        return RAssetStatus::Open;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>