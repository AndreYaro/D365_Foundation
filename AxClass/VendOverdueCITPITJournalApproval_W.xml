<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendOverdueCITPITJournalApproval_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>VendOverdueCITPITJournalApproval_W</c> used for approval of overdue CIT and PIT jounrals.
/// </summary>
class VendOverdueCITPITJournalApproval_W extends RunBase
{
    VendOverdueCITPITJournalTable_W overdueJournalTable;

    NoYes                           approvalStatus;

    private const Version currentVersion = 1;

    #localMacro.currentList
        approvalStatus
    #endMacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmApprovalStatus</Name>
				<Source><![CDATA[
    public NoYes parmApprovalStatus(NoYes   _approvalStatus = approvalStatus)
    {
        approvalStatus  = _approvalStatus;
        return approvalStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOverdueJournalTable</Name>
				<Source><![CDATA[
    public VendOverdueCITPITJournalTable_W parmOverdueJournalTable(VendOverdueCITPITJournalTable_W    _overdueJournalTable = overdueJournalTable)
    {
        overdueJournalTable = _overdueJournalTable;
        return overdueJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prompt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prompts the user information prior to approval
    /// </summary>
    /// <returns>
    /// True if journal should be approval or canceld; otherwise false.
    /// </returns>
    public boolean prompt()
    {
        boolean ret;

        if (approvalStatus  == NoYes::Yes)
        {
            if (Box::yesNo("@SYS4003972", DialogButton::No, "@SYS2453") == DialogButton::Yes)
            {
                ret = true;
            }
        }
        else
        {
            if (Box::yesNo("@SYS4003973", DialogButton::No, "@SYS34289") == DialogButton::Yes)
            {
                ret = true;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        #OCCRetryCount

        try
        {
            ttsbegin;

            overdueJournalTable     = VendOverdueCITPITJournalTable_W::find(overdueJournalTable.JournalId, true);
            overdueJournalTable.Approved    = approvalStatus;
            overdueJournalTable.update();

            ttscommit;
        }

        catch (Exception::Deadlock)
        {
            retry;
        }

        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }

        catch (Exception::Error)
        {
            throw error("@SYS18447");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates whether it is all right to continue.
    /// </summary>
    /// <param name="_calledFrom">
    ///    Identifies the object from which this method is called. Default value is null.
    /// </param>
    /// <returns>
    ///    true if it is all right to continue; otherwise false.
    /// </returns>
    public boolean validate(Object _calledFrom = null)
    {
        VendOverdueCITPITJournalTable_W overdueCITJournalTableLast;
        boolean                         ret;

        ret = super(_calledFrom);

        if (approvalStatus  == NoYes::No)
        {
            overdueCITJournalTableLast  = OverdueJournalTable_W::findLast(OverdueJournalType_W::VendCITPITJournal);

            if (overdueCITJournalTableLast.RecId != overdueJournalTable.RecId)
            {
                ret = checkFailed("@SYS4003970");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendOverdueCITPITJournalApproval_W construct()
    {
        return new VendOverdueCITPITJournalApproval_W();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        VendOverdueCITPITJournalApproval_W  overdueJournalApproval   = VendOverdueCITPITJournalApproval_W::construct();
        FormDataSource                      formDataSource;

        if (! _args ||
            ! _args.record() ||
             _args.dataset() != tableNum(VendOverdueCITPITJournalTable_W))
        {
            throw error(Error::missingRecord(funcName()));
        }

        overdueJournalApproval.parmOverdueJournalTable(_args.record());
        overdueJournalApproval.parmApprovalStatus(_args.parmEnum());

        if (overdueJournalApproval.validate()
            &&  overdueJournalApproval.prompt())
        {
            overdueJournalApproval.runOperation();

            if (FormDataUtil::isFormDataSource(_args.record()))
            {
                formDataSource  = FormDataUtil::getFormDataSource(_args.record());
                formDataSource.reread();
                formDataSource.refresh();
                formDataSource.active();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>