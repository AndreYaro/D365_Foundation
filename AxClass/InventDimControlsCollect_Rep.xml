<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimControlsCollect_Rep</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventDimControlsCollect_Rep extends InventDimControlsCollect
{
    InventDimReportInterface    inventDimReport;
    Set                         dimDataSources;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildDataSourceList</Name>
				<Source><![CDATA[
        protected void buildDataSourceList()
    {
        Query   q = inventDimReport.query();
        int     h;
        int     dataSourceCount = q.dataSourceCount();

        for (h = 1; h <= dataSourceCount; h++)
        {
            if (q.dataSourceNo(h).table() == this.dimTableId() && this.isDataSourceValid(q.dataSourceNo(h)))
            {
                dimDataSources.add(q.dataSourceNo(h).id());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildFromReport</Name>
				<Source><![CDATA[
        protected void buildFromReport(int _id = 0)
    {
        int             i,c;

        //work around compiler bug
        Object dummy = inventDimReport;
        InventDimAXReportAdapter adapter = dummy;

        ReportRun runReport = adapter.parmReportObject();
        ReportDesign rD = runReport.design();

        c  = rD.controlCount();
        for (i = 1; i <= c; i++)
        {
            this.insertReportFieldControl(rD.controlNumber(i));
        }

        if (!c)
        {
            c  = rD.autoSectionControlCount();
            for (i = 1; i <= c; i++)
            {
                this.insertReportFieldControl(rD.autoSectionControlNumber(i));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes this class.
    /// </summary>
    /// <remarks>
    ///    Should always be called from the constructing new method.
    /// </remarks>
    protected void init()
    {
        super();

        dimDataSources = new Set(Types::Integer);

        this.buildCompareList();

        if (inventDimReport is InventDimAXReportAdapter)
        {
            this.buildFromReport();
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustInsertInList</Name>
				<Source><![CDATA[
        protected boolean mustInsertInList(InventDimControlInterface _o)
    {
        InventDimReportControlInterface reportControl = _o;

        if (!InventDimMetaDataCache::handleListReport().in(reportControl.controlObject().handle()))
        {
            return false;
        }

        if (!reportControl.table() || !fieldExt2Id(reportControl.dataField()) || reportControl.table() != tableNum(InventDim))
        {
            return false;
        }

        if (!dimFieldIdSet.in(this.fieldId(_o)))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimReport</Name>
				<Source><![CDATA[
        public InventDimReportInterface parmInventDimReport(InventDimReportInterface _inventDimReport = inventDimReport)
    {
        inventDimReport = _inventDimReport;
        return inventDimReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventDimControlsCollect_Rep construct()
    {
        return new InventDimControlsCollect_Rep();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromReportInterfaceValidDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and initializes an instance of the <see cref="InventDimControlsCollect_Rep Class" /> for
    ///    reports.
    /// </summary>
    /// <param name="_inventDimReport">
    ///    The report where controls are maintained, encapsulated as <see cref="InventDimReportInterface
    ///    Interface" /> instance
    /// </param>
    /// <param name="_validDataSources">
    ///    A set of names (strings) for the data sources in the form to be controlled by this class.
    /// </param>
    /// <returns>
    ///    An instance of the <see cref="InventDimControlsCollect_Rep Class" />.
    /// </returns>
    public static InventDimControlsCollect_Rep newFromReportInterfaceValidDataSources(
        InventDimReportInterface    _inventDimReport,
        Set                         _validDataSources)
    {
        InventDimControlsCollect_Rep   inventDimControlsCollect_Rep = InventDimControlsCollect_Rep::construct();

        inventDimControlsCollect_Rep.parmInventDimReport(_inventDimReport);
        inventDimControlsCollect_Rep.parmValidDataSources(_validDataSources);
        inventDimControlsCollect_Rep.init();
        return inventDimControlsCollect_Rep;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
