<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleVendPrepaymentApplication</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AccDistRuleVendPrepaymentApplication</c> class controls various posting attributes that are
/// used during the distribution of a vendor invoice line.
/// </summary>
[
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPrepaymentApplication, MonetaryAmount::ExtendedPrice),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPrepaymentReverseApplication, MonetaryAmount::ExtendedPrice)
]
public class AccDistRuleVendPrepaymentApplication extends AccountingDistributionRule
{
    VendInvoiceLineMap  vendInvoiceLineMap;
    VendInvoiceMap      vendInvoiceMap;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the accounting rule.
    /// </summary>
    protected void initialize()
    {
        SourceDocumentLine  sourceDocumentLine;

        sourceDocumentLine  = this.parmSourceDocumentLineItem().parmSourceDocumentLine();

        switch (sourceDocumentLine.SourceRelationType)
        {
            case tableNum(VendInvoiceInfoLine):
            vendInvoiceLineMap = VendInvoiceInfoLine::findSourceDocumentLine(sourceDocumentLine.RecId);
            break;

            case tableNum(VendInvoiceTrans):
            vendInvoiceLineMap = VendInvoiceTrans::findSourceDocumentLine(sourceDocumentLine.RecId);
            break;

            default:
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        ProjectAccDistRule projectAccDistRule = ProjectAccDistRule::newFromAccountingDistributionRule(this);
        LedgerPostingType   ledgerPostingType;
        if (ProjParameters::find().PostPrepaymentCostToProject == NoYes::Yes && projectAccDistRule && projectAccDistRule.parmIsProject())
        {
            ledgerPostingType = projectAccDistRule.parmLedgerPostingType();
        }
        else
        {
            ledgerPostingType = LedgerPostingType::PurchAdvanceApplication;
        }
        return ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        DebitCredit side;

        if (vendInvoiceLineMap.isAdvanceApplication())
        {
            side = DebitCredit::Credit;
        }
        else //for prepayment reverse application
        {
            side = DebitCredit::Debit;
        }

        return side;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>