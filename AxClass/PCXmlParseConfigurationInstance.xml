<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcXmlParseConfigurationInstance</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Parses the xml of a configuration instance.
/// </summary>
class PcXmlParseConfigurationInstance
{
    PCXmlParseProductConfigurationModel xmlParseProductConfigurationModel;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clearParsedInstance</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the values from the specified configuration instance.
    /// </summary>
    /// <param name="_configuration">
    ///    The product configuration session in which to store the values of the configuration.
    /// </param>
    public void clearParsedInstance(PCProductConfiguration _configuration)
    {
        PCRuntimeLibrary::clearConfiguration(_configuration);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        xmlParseProductConfigurationModel = PCXmlParseProductConfigurationModel::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the post-configuration steps for a running configuration.
    /// </summary>
    /// <param name="_model">
    /// The product model that was configured.
    /// </param>
    /// <param name="_productConfiguration">
    /// The record that contains the instance of the configuration.
    /// </param>
    /// <param name="_userSelectedValues">
    /// The XML string that contains the attribute values that the user selected during configuration.
    /// </param>
    /// <param name="_boundValues">
    /// The XML string that contains all the attribute values selected by the user or solver.
    /// </param>
    /// <param name="_runtimeMode">
    /// The runtime execution mode of the configuration.
    /// </param>
    /// <param name="_adaptor">
    /// An instance of the <c>PCAdaptor</c> class.
    /// </param>
    public void parse(
        PCProductConfigurationModel         _model,
        PCProductConfiguration              _productConfiguration,
        str                                 _userSelectedValues,
        str                                 _boundValues,
        PCRuntimeMode                       _runtimeMode,
        PCAdaptor                           _adaptor)
    {
        PCContractNotNull::assertRecord(_model, funcName());
        PCContractNotNull::assertObject(_adaptor, funcName());

        if (_runtimeMode == PCRuntimeMode::Test)
        {
            return;
        }
        else if (_runtimeMode == PCRuntimeMode::EditTemplate)
        {
            xmlParseProductConfigurationModel.parse(_model, _productConfiguration, _userSelectedValues, _adaptor.parmProductConfigurationModel());

            var adaptorVisitorPersistValues = PCAdaptorVisitorPersistValues::construct();

            adaptorVisitorPersistValues.initialize(_productConfiguration);

            ttsbegin;
            _adaptor.accept(adaptorVisitorPersistValues);
            ttscommit;
        }
        else
        {
            xmlParseProductConfigurationModel.parse(_model, _productConfiguration, _boundValues, _adaptor.parmProductConfigurationModel());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PCXmlParseConfigurationInstance construct()
    {
        return new PCXmlParseConfigurationInstance();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>