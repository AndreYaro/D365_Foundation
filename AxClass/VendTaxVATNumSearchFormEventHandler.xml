<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTaxVATNumSearchFormEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This is a event handler class for vendor tax exempt number search form , <c>VendTaxVATNumSearch</c>.
/// </summary>
public static class VendTaxVATNumSearchFormEventHandler
{
    private static VendTable selectedVend;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>VendTable_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the event handler for <c>VendTable</c> activated event.
    /// Base on the selected vendor record, vendor tax exempt number search form will enable/disable the copy button.
    /// </summary>
    /// <param name = "sender"> The form where the event happened, this should be <c>VendTaxVATNumSearch</c> form. </param>
    /// <param name = "e"> Arguments with the event. </param>
    [FormDataSourceEventHandler(formDataSourceStr(VendTaxVATNumSearch, VendTable), FormDataSourceEventType::Activated)]
    public static void VendTable_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun sendingForm = _sender.formRun();
   
        selectedVend = _sender.cursor();
        
        DirPartyTable party = DirPartyTable::findRec(selectedVend.Party);

        if (party != null)
        {
            boolean isCurVendAccountGlobal = sendingForm.parmIsCurVendAccountNumGlobal();
            boolean isCurVendAccountAlreadyExistInCurCompany = DirPartyView::IsPartyRoleExistInCompany(party.RecId, DirPartyRoleType::Vendor, sendingForm.parmCurDataAreaId());
            boolean isDestinationVendAccountGlobal = CustVendCopyDataUtil::isVendAccountNumSequenceGlobal(selectedVend.dataAreaId);

            FormCommandButtonControl copyButton = _sender.formRun().design().controlName(formcontrolstr(VendTaxVATNumSearch, CopyButton));

            if (isCurVendAccountGlobal &&
                !isCurVendAccountAlreadyExistInCurCompany &&
                isDestinationVendAccountGlobal)
            {
                copyButton.visible(true);
            }
            else
            {
                copyButton.visible(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>CopyButton_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the event handler for Copy button clicked event.
    /// </summary>
    /// <param name = "sender">  The form where the event happened, this should be <c>VendTaxVATNumSearch</c> form. </param>
    /// <param name = "e">  Arguments with the event. </param>
    [FormControlEventHandler(formControlStr(VendTaxVATNumSearch, CopyButton), FormControlEventType::Clicked)]
    public static void CopyButton_OnClicked(FormControl _sender, FormControlEventArgs _e)
    {
        if (selectedVend)
        {
            FormRun vendTableForm = _sender.formRun().args().caller();

            FormRun sendingForm = _sender.formRun();
            DataAreaId curCompany = sendingForm.parmCurDataAreaId();

            // Once one vendor record is selected on the grid, curext() will return the company of the selected vendor.
            // So we need to switch back to the copy destination company before copy.
            changecompany(curCompany)
            {
                CustVendCopyDataUtil::copyVendForm(selectedVend, vendTableForm, true);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>