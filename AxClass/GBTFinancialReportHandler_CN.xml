<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GBTFinancialReportHandler_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class hands loading of finanical report data into GBT tables.
/// </summary>
class GBTFinancialReportHandler_CN
{
    GBTGLReports_CN gbtGLReports_CN;
    GBTGLReportsData_CN gbtGLReportsData_CN;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadReportDataFromMR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads report data from MR.
    /// </summary>
    /// <param name = "_reportName">MR report name.</param>
    /// <param name = "_reportCode">The report code that GBT24589 defined.</param>
    /// <param name = "_fiscalPeriodEndDate">The ending date of the report.</param>
    /// <param name = "_periodName">Finanical period of the report.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void loadReportDataFromMR(
        str _reportName,
        str _reportCode,
        FiscalPeriodEnd _fiscalPeriodEndDate,
        PeriodName _periodName)
    {
        FinancialReportingIReportExport reportExporter =
            new FinancialReportingReportExport();

        FinancialReports financialReports;
        select firstonly DesignId from financialReports
            where financialReports.ReportName == _reportName;

        const int CodePageGB18030 = 54936;
        System.Text.Encoding encodingGB18030 = System.Text.Encoding::GetEncoding(CodePageGB18030);

        if (financialReports.DesignId)
        {
            System.IO.Stream stream;

            if (FeatureStateProvider::isFeatureEnabled(GBTBatchFeature_CN::instance()))
            {
                FinancialReportVersion financialReportVersion;

                FinancialReportReportDate fromDate = clrSystemDateTime2UtcDateTime(_fiscalPeriodEndDate);
                FinancialReportReportDate toDate = clrSystemDateTime2UtcDateTime(_fiscalPeriodEndDate + 1);

                select firstonly RecId from financialReportVersion
                    order by GeneratedDate desc
                    where financialReportVersion.DesignId == financialReports.DesignId
                        && financialReportVersion.ReportDate >= fromDate
                        && financialReportVersion.ReportDate < toDate;

                DocuRef docuRef;
                select firstonly docuRef
                    order by CreatedDateTime desc
                    where docuRef.RefRecId == financialReportVersion.RecId
                        && docuRef.RefTableId == financialReportVersion.TableId
                        && docuRef.RefCompanyId == financialReportVersion.DataAreaId;

                if (docuRef)
                {
                    stream = DocumentManagement::getAttachmentStream(docuRef);
                }
                else
                {
                    throw error("@GBT:FilesNotAttachedError");
                }
            }
            else
            {
                stream = reportExporter.GenerateAndExportReport(
                    financialReports.DesignId,
                    curExt(),
                    _fiscalPeriodEndDate,
                    FinancialReportingReportExportFormat::Xml,
                    encodingGB18030);
            }

            if (stream)
            {
                XmlDocument xmlDocument = XMLDocument::newFromStream(stream);
                this.loadReportDataFromXMLDocument(_reportCode, xmlDocument, _fiscalPeriodEndDate, _periodName);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadReportDataFromXMLDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Load financial report data from given XML into GBT tables.
    /// </summary>
    /// <param name = "_reportCode">The report code that GBT24589 defined</param>
    /// <param name = "_xmlDocument">XML document containing the financial report data</param>
    /// <param name = "_fiscalPeriodEndDate">The ending date of the report</param>
    /// <param name = "_periodName">Finanical period of the report</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void loadReportDataFromXMLDocument(
        str _reportCode,
        XmlDocument _xmlDocument,
        FiscalPeriodEnd _fiscalPeriodEndDate,
        PeriodName _periodName)
    {
        XmlNode reportNode = _xmlDocument.SelectSingleNode('//Report/Unit[@Index=0]');

        if (reportNode)
        {
            XmlNode reportNameAttr = reportNode.attributes().getNamedItem('Name');

            str reportName = '';
            if (reportNameAttr)
            {
                reportName = reportNameAttr.value();
                gbtGLReports_CN.ReportName = reportName;
                gbtGLReports_CN.ReportNumber = _reportCode;
            }

            gbtGLReports_CN.ReportingDate = GBTFileGenerationHelper_CN::dateStrForGBT(_fiscalPeriodEndDate);
            gbtGLReports_CN.ReportingPeriod = _periodName;

            gbtGLReports_CN.insert();

            XmlNodeList rowList = reportNode.selectNodes('./Row');

            if (rowList)
            {
            for (int i = 0; i < rowList.length(); i ++)
                {
                    XmlNode row = rowList.item(i);
                    str rowDescription =
                        row.attributes().getNamedItem('Description').value();

                    // Skip the placeholder row in MR report.
                    if (rowDescription != '')
                    {
                        gbtGLReportsData_CN.ReportNumber = _reportCode;
                        XmlNode rowCodeAttr = row.attributes().getNamedItem('RowCode');
                        if (rowCodeAttr)
                        {
                            gbtGLReportsData_CN.ReportItemNumber = rowCodeAttr.value();
                        }

                        gbtGLReportsData_CN.ReportItemName = rowDescription;

                        XmlNode formulaAttr = row.attributes().getNamedItem('Formula');
                        if (formulaAttr)
                        {
                            gbtGLReportsData_CN.ReportItemFormula = formulaAttr.value();
                        }
                        // Take value of the 1st column marked as amount.
                        XmlNode amountValueNode = row.selectSingleNode("./Column[@Type='Amount']");
                        if (amountValueNode)
                        {
                            gbtGLReportsData_CN.ReportItemValue = str2Num(amountValueNode.innerText());
                        }
                        gbtGLReportsData_CN.insert();
                        gbtGLReportsData_CN.clear();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGBTGLReports</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public GBTGLReports_CN parmGBTGLReports(
        GBTGLReports_CN _gbtGLReports_CN = gbtGLReports_CN)
    {
        gbtGLReports_CN = _gbtGLReports_CN;
        return gbtGLReports_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGBTGLReportsData</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public GBTGLReportsData_CN parmGBTGLReportsData(
        GBTGLReportsData_CN _gbtGLReportsData_CN = gbtGLReportsData_CN)
    {
        gbtGLReportsData_CN = _gbtGLReportsData_CN;
        return gbtGLReportsData_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of financial report handler.
    /// </summary>
    /// <param name = "_gbtGLReports_CN">gbtGLReports_CN buffer where the parsed data will be inserted into</param>
    /// <param name = "_gbtGLReportsData_CN">gbtGLReportsData_CN buffer where the parsed data will be inserted into</param>
    /// <returns>new instance of financial report handler</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static GBTFinancialReportHandler_CN construct(
        GBTGLReports_CN _gbtGLReports_CN,
        GBTGLReportsData_CN _gbtGLReportsData_CN)
    {
        GBTFinancialReportHandler_CN financialReportHandler
            = new GBTFinancialReportHandler_CN();
        financialReportHandler.parmGBTGLReports(_gbtGLReports_CN);
        financialReportHandler.parmGBTGLReportsData(_gbtGLReportsData_CN);

        return financialReportHandler;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>