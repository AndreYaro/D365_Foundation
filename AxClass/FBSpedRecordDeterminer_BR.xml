<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBSpedRecordDeterminer_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>FBSpedRecordDeterminer_BR</c> class is the abstract base class for determining the type of sped record to which a given fiscal document should be assigned.
/// </summary>
public abstract class FBSpedRecordDeterminer_BR
{
    #FiscalDocumentModels_BR
    #FiscalBooks_BR
    #CFOP

    FBBookingPeriodFiscalDocument_BR fbBookingPeriodFiscalDocument;
    FiscalDocument_BR                fiscalDocument;
    private boolean hasPisCofins;
    private boolean hasIcmsIpi;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>determineRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines the type of record the fiscal document should be exported to in the Sped file.
    /// </summary>
    /// <returns>
    ///     The <c>FBSpedFileRecordIdentification_BR</c> representing the Sped record where the fiscal document should be exported to.
    /// </returns>
    /// <remarks>
    ///     This is an abstract method and must be implemented by all concrete classes.
    /// </remarks>
    public abstract FBSpedFileRecordIdentification_BR determineRecord()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates an instance of <c>FBSpedRecordDeterminer_BR</c> class.
    /// </summary>
    /// <param name="_fiscalDocument">
    ///     A <c>FiscalDocument_BR</c> table buffer representing the fiscal document for which the record will be determined.
    /// </param>
    protected void new(FiscalDocument_BR _fiscalDocument)
    {
        fiscalDocument = _fiscalDocument;

        select firstOnly fbBookingPeriodFiscalDocument
            where fbBookingPeriodFiscalDocument.FiscalDocument_BR == fiscalDocument.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructForSpedContrib</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs an instance of <c>FBSpedRecordDeterminer_Contrib_BR</c>.
    /// </summary>
    /// <param name="_fiscalDocument">
    ///     A <c>FiscalDocument_BR</c> table buffer.
    /// </param>
    /// <returns>
    ///     An instance of <c>FBSpedRecordDeterminer_Contrib_BR</c>.
    /// </returns>
    public static FBSpedRecordDeterminer_Contrib_BR constructForSpedContrib(FiscalDocument_BR _fiscalDocument)
    {
        return new FBSpedRecordDeterminer_Contrib_BR(_fiscalDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructForSpedFiscal</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs an instance of <c>FBSpedRecordDeterminer_Fiscal_BR</c>.
    /// </summary>
    /// <param name="_fiscalDocument">
    ///     A <c>FiscalDocument_BR</c> table buffer.
    /// </param>
    /// <returns>
    ///     An instance of <c>FBSpedRecordDeterminer_Fiscal_BR</c>.
    /// </returns>
    public static FBSpedRecordDeterminer_Fiscal_BR constructForSpedFiscal(FiscalDocument_BR _fiscalDocument)
    {
        return new FBSpedRecordDeterminer_Fiscal_BR(_fiscalDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHasIcmsIpi</Name>
				<Source><![CDATA[
    public boolean parmHasIcmsIpi(boolean _hasIcmsIpi = hasIcmsIpi)
    {
        hasIcmsIpi = _hasIcmsIpi;
        return hasIcmsIpi;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHasPisCofins</Name>
				<Source><![CDATA[
    public boolean parmHasPisCofins(boolean _hasPisCofins = hasPisCofins)
    {
        hasPisCofins = _hasPisCofins;
        return hasPisCofins;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>