<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PaymCalendarSourceCustInvoiceJournal</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PaymCalendarSourceCustInvoiceJournal</c> class provides an interface that is used to find
/// the payment calendars when the source is the <c>CustInvoiceJour</c> table.
/// </summary>
public class PaymCalendarSourceCustInvoiceJournal implements PaymCalendarIDerivationSource, PaymCalendarIBankAddress, PaymCalendarIDocumentAddress
{
    CustInvoiceJour custInvoiceJour;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBankPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a postal address that is associated to a bank account.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record that represents the postal address.
    /// </returns>
    public LogisticsPostalAddress getBankPostalAddress()
    {
        CustBankAccount custBankAccount;
        LogisticsPostalAddress postalAddress;

        custBankAccount = CustBankAccount::findByCompany(
            custInvoiceJour.DataAreaId,
            custInvoiceJour.InvoiceAccount,
            custInvoiceJour.custInvoiceTable().CustBankAccountId);

        postalAddress = LogisticsLocationEntity::location2PostalAddress(custBankAccount.Location);

        return postalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a postal address that is associated to a document.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record that represents the postal address.
    /// </returns>
    public LogisticsPostalAddress getDocumentPostalAddress()
    {
        LogisticsPostalAddress postalAddress;

        postalAddress = LogisticsPostalAddress::findRecId(custInvoiceJour.custInvoiceTable().PostalAddress);

        return postalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrimaryPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a postal address that is associated to a third-party entity.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record that represents the postal address.
    /// </returns>
    public LogisticsPostalAddress getPrimaryPostalAddress()
    {
        CustTable custTable;
        LogisticsPostalAddress localPostalTable;

        custTable = CustTable::findByCompany(custInvoiceJour.DataAreaId, custInvoiceJour.InvoiceAccount);

        localPostalTable = custTable.postalAddress();

        return localPostalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a payment calendar derivation source instance for a specified record.
    /// </summary>
    /// <param name="_custInvoiceJour">
    /// A <c>CustInvoiceJour</c> record that specifies the initialization data.
    /// </param>
    public void initialize(CustInvoiceJour _custInvoiceJour)
    {
        custInvoiceJour = _custInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModuleType</Name>
				<Source><![CDATA[
    public PaymCalendarModuleType parmModuleType()
    {
        PaymCalendarModuleType paymCalendarModuleType;

        paymCalendarModuleType = PaymCalendarModuleType::Customer;

        return paymCalendarModuleType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public PaymMode parmPaymMode()
    {
        CustPaymMode paymMode;

        paymMode = custInvoiceJour.PaymId;

        if (!paymMode)
        {
            paymMode = custInvoiceJour.salesTable().PaymMode;
        }

        return paymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymTermDataAreaId</Name>
				<Source><![CDATA[
    public DataAreaId parmPaymTermDataAreaId()
    {
        return custInvoiceJour.DataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymTermId</Name>
				<Source><![CDATA[
    public PaymTermId parmPaymTermId()
    {
        return custInvoiceJour.Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>PaymCalendarSourceCustInvoiceJournal</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>PaymCalendarSourceCustInvoiceJournal</c> class.
    /// </returns>
    private static PaymCalendarSourceCustInvoiceJournal construct()
    {
        return new PaymCalendarSourceCustInvoiceJournal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdjustedDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an adjusted due date so that it falls on a business day that follows the calendar rules.
    /// </summary>
    /// <param name="_dueDate">
    /// The original due date.
    /// </param>
    /// <param name="_updatePolicy">
    /// A value that specifies the search direction when the next valid business day is determined.
    /// </param>
    /// <param name="_custInvoiceJour">
    /// The customer invoice journal record that specifies the calendar source.
    /// </param>
    /// <returns>
    /// An instance of the <c>PaymCalendarAdjustedDate</c> class that contains the adjusted due date and
    /// the calendar and rule that was applied when the date was adjusted.
    /// </returns>
    public static PaymCalendarAdjustedDate getAdjustedDate(DueDate _dueDate, PaymentDueDateUpdatePolicy _updatePolicy, CustInvoiceJour _custInvoiceJour)
    {
        return PaymCalendarSourceCustInvoiceJournal::getAdjustedDatePrivate(_dueDate, _updatePolicy, _custInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdjustedDatePrivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an adjusted due date so that it falls on a business day that follows the calendar rules.
    /// </summary>
    /// <param name="_dueDate">
    /// The original due date.
    /// </param>
    /// <param name="_updatePolicy">
    /// A value that specifies the search direction when the next valid business day is determined.
    /// </param>
    /// <param name="_custInvoiceJour">
    /// The customer invoice journal record that specifies the calendar source.
    /// </param>
    /// <returns>
    /// An instance of <c>PaymCalendarAdjustedDate</c> class that contains the adjusted due date and the
    /// calendar and rule that was applied when the date was adjusted.
    /// </returns>
    public static PaymCalendarAdjustedDate getAdjustedDatePrivate(DueDate _dueDate, PaymentDueDateUpdatePolicy _updatePolicy, CustInvoiceJour _custInvoiceJour)
    {
        PaymCalendarSourceCustInvoiceJournal calendarSource;
        PaymCalendarProcessor paymCalendarProcessor;
        PaymCalendarAdjustedDate paymCalendarAdjustedDate;

        paymCalendarProcessor = PaymCalendarProcessor::construct();
        calendarSource = PaymCalendarSourceCustInvoiceJournal::newCalendarSource(_custInvoiceJour);
        paymCalendarAdjustedDate = paymCalendarProcessor.getAdjustedDate(_dueDate, _updatePolicy, calendarSource);

        return paymCalendarAdjustedDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCalendarSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>PaymCalendarSourceCustInvoiceJournal</c> class.
    /// </summary>
    /// <param name="_custInvoiceJour">
    /// A <c>CustInvoiceJour</c> record to load.
    /// </param>
    /// <returns>
    /// A new instance of the <c>PaymCalendarSourceCustInvoiceJournal</c> class.
    /// </returns>
    public static PaymCalendarSourceCustInvoiceJournal newCalendarSource(CustInvoiceJour _custInvoiceJour)
    {
        PaymCalendarSourceCustInvoiceJournal paymCalendarSourceCustInvoiceJournal;

        paymCalendarSourceCustInvoiceJournal = PaymCalendarSourceCustInvoiceJournal::construct();
        paymCalendarSourceCustInvoiceJournal.initialize(_custInvoiceJour);

        return paymCalendarSourceCustInvoiceJournal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>