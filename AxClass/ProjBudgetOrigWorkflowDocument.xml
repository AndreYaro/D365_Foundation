<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetOrigWorkflowDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjBudgetOrigWorkflowDocument extends WorkflowDocument
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateCosts</Name>
				<Source><![CDATA[
        private AmountCur calculateCosts(tableId _tableId, recId _recId, ProjTransType _transType = ProjTransType::None)
    {
        ProjBudgetLine projBudgetLine;

        if (_tableId != tableNum(ProjBudget))
        {
            // Document table id reference: %1 is not valid.
            throw error(strFmt("@SYS112754", _tableId));
        }

        if (_transType == ProjTransType::None) // all trx types
        {
            select sum(OriginalBudget) from projBudgetLine where projBudgetLine.ProjBudget == _recId && projBudgetLine.ProjBudgetLineType == ProjBudgetLineType::Cost;
        }
        else
        {
            select sum(OriginalBudget) from projBudgetLine where projBudgetLine.ProjBudget == _recId &&
                                                                 projBudgetLine.ProjTransType == _transType &&
                                                                 projBudgetLine.ProjBudgetLineType == ProjBudgetLineType::Cost;
        }

        return projBudgetLine.OriginalBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query name for this workflow document.
    /// </summary>
    /// <returns>
    /// The query name from the AOT.
    /// </returns>
    queryName getQueryName()
    {
        return queryStr(ProjBudgetOrigWorkflowDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalCostBudget</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of cost budgets for all transaction types.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of the cost budgets for all transaction types.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudget</c> table.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// The record ID in the workflow context is 0.
    /// </exception>
    public ProjTotalCostBudget parmTotalCostBudget(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateCosts(_tableId, _recId, ProjTransType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalCostBudgetForExpenses</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of the cost budgets for expenses.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all cost budgets for expenses.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudget</c> table.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// The record ID in the workflow context is 0.
    /// </exception>
    public ProjTotalCostBudgetForExpenses parmTotalCostBudgetForExpenses(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateCosts(_tableId, _recId, ProjTransType::Cost);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalCostBudgetForHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all cost budgets for hours.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all cost budgets for hours.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudget</c> table.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// The record ID in the workflow context is 0.
    /// </exception>
    public ProjTotalCostBudgetForHours parmTotalCostBudgetForHours(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateCosts(_tableId, _recId, ProjTransType::Hour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalCostBudgetForItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all cost budgets for items.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all cost budgets for items.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudget</c> table.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// The record ID in the workflow context is 0.
    /// </exception>
    public ProjTotalCostBudgetForItems parmTotalCostBudgetForItems(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateCosts(_tableId, _recId, ProjTransType::Item);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>