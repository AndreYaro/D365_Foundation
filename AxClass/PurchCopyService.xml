<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCopyService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Service operation class to run a purchase coping operation in the user non-interactive session.
/// </summary>
public class PurchCopyService extends RunBase
{
    PurchCopyingContract contract;
    SalesPurchCopy       salesPurchCopy;
    Common               caller;
    container            packedContract;

    #define.CurrentVersion(1)

    #localmacro.CurrentList
        packedContract,
        salesPurchCopy,
        caller
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Run a purchase coping operation in the user non-interactive session.
    /// </summary>
    public void run()
    {
        PurchCopyingBase    purchCopying;

        purchCopying = PurchCopyingBase::construct(salesPurchCopy, contract.parmCallingTable());
        purchCopying.initParameters(contract);

        purchCopying.copy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runUserInteraction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prompts all required user interactions on the user interactive session.
    /// </summary>
    public void runUserInteraction()
    {
        PurchCopyingBase    purchCopying;

        purchCopying = PurchCopyingBase::construct(salesPurchCopy, contract.parmCallingTable());
        purchCopying.initParameters(contract);
        purchCopying.preCILUserInterAction(contract);

        contract = purchCopying.getPurchCopyingContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDialog</Name>
				<Source><![CDATA[
    public boolean showDialog()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFromContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs a purchase coping operation from specified service contract.
    /// </summary>
    /// <param name = "_contract">An instance of <c>PurchCopyingContract</c> class.</param>
    /// <param name = "_caller">A calling record.</param>
    /// <param name = "_salesPurchCopy">An enum <c>SalesPurchCopy</c>value, that describes the type of copying operation</param>
    public static void runFromContract(PurchCopyingContract _contract, Common _caller, SalesPurchCopy _salesPurchCopy)
    {
        PurchCopyService service = PurchCopyService::newFromContract(_contract, _caller, _salesPurchCopy);

        service.runUserInteraction();

        service.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the new instance of <c>PurchCopyService</c> class.
    /// </summary>
    /// <param name = "_contract">An instance of <c>PurchCopyingContract</c> class.</param>
    /// <param name = "_caller">A calling record.</param>
    /// <param name = "_salesPurchCopy">An enum <c>SalesPurchCopy</c>value, that describes the type of copying operation</param>
    /// <returns>An instance of <c>PurchCopyService</c></returns>
    public static PurchCopyService newFromContract(PurchCopyingContract _contract, Common _caller, SalesPurchCopy _salesPurchCopy)
    {
        PurchCopyService service = new PurchCopyService();
        service.initFromContract(_contract, _caller, _salesPurchCopy);

        return service;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes internal state of <c>PurchCopyService</c> class based on specified parameters.
    /// </summary>
    /// <param name = "_contract">An instance of <c>PurchCopyingContract</c> class.</param>
    /// <param name = "_caller">A calling record.</param>
    /// <param name = "_salesPurchCopy">An enum <c>SalesPurchCopy</c>value, that describes the type of copying operation</param>
    protected void initFromContract(PurchCopyingContract _contract, Common _caller, SalesPurchCopy _salesPurchCopy)
    {
        contract        = PurchCopyingContract::create(_contract.pack(), _caller);
        salesPurchCopy  = _salesPurchCopy;
        caller          = _caller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        if (contract)
        {
            packedContract = contract.pack();
        }

        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        int version     = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;

                if (packedContract)
                {
                    contract = PurchCopyingContract::create(packedContract, caller);
                }

                return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return "@SYS118357";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>