<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipmentDetailsForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSShipmentDetailsForm</c> class contains the business logic for <c>WHSShipmentDetails</c> form.
/// </summary>
public class WHSShipmentDetailsForm
{
    DialogField         weightCapacity;
    DialogField         volumeCapacity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createShipmentIdFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a range filter of shipment IDs associated to a given order.
    /// </summary>
    /// <param name="_orderNum">
    /// Order number to find load IDs for.
    /// </param>
    /// <param name="_inventTransType">
    /// Inventory transaction type of the order to find shipment IDs for.
    /// </param>
    /// <returns>
    /// Comma separated string of shipment IDs.
    /// </returns>
    public str createShipmentIdFilter(WHSOrderNum _orderNum, InventTransType _inventTransType)
    {
        WHSLoadLine loadLine;
        str         shipmentIdList;

        if (_orderNum != '')
        {
            while select ShipmentId from loadLine
                group by loadLine.ShipmentId
                    where loadLine.OrderNum             == _orderNum
                        && loadLine.InventTransType     == _inventTransType
                        && loadLine.TransportRequest    == NoYes::No
                        && loadLine.ShipmentId          != ''
            {
                shipmentIdList += (shipmentIdList != '' ? ',' : '') + loadLine.ShipmentId;
            }
        }

        return shipmentIdList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>btnRemoveLine_clicked</Name>
				<Source><![CDATA[
    /// <summary>
	/// Handles load line removal when Remove Line button is clicked.
	/// </summary>
	/// <param name="_whsLoadLine">
	/// Load line to be removed from shipment.
	/// </param>
	/// <param name="_whsShipmentTable">
	/// Shipment that has load line.
	/// </param>
    void btnRemoveLine_clicked(WHSLoadLine      _whsLoadLine,
                               WHSShipmentTable _whsShipmentTable)
    {
        this.deleteLoadLine(_whsLoadLine);

        if (_whsShipmentTable.countShipmentLines() == 0)
        {
            DialogButton shipBtn = Box::yesNo(strfmt("@WAX2177", _whsShipmentTable.ShipmentId),
                                              DialogButton::Yes,
                                              "@WAX2176");

            if (shipBtn == DialogButton::Yes)
            {
                this.deleteShipment(_whsShipmentTable);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLoadLine</Name>
				<Source><![CDATA[
    /// <summary>
	/// Removes a load line from shipment.
	/// </summary>
	/// <param name="_loadLine">
	/// Load line to be removed.
	/// </param>
	/// <remarks>
	/// If load line is not associated with any load, then load line is deleted.
	/// </remarks>
	/// <exception cref="Exception::Error">
	/// Exception is thrown when there is already work created for load line.
	/// </exception>
    public void deleteLoadLine(WHSLoadLine _loadLine)
    {
        ttsBegin;

        if (_loadLine.WorkCreatedQty > 0)
        {
            throw error("@WAX2179");
        }

        _loadLine.ShipmentId = '';
        _loadLine.update();

        if (!_loadLine.LoadId)
        {
            _loadLine.delete();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteShipment</Name>
				<Source><![CDATA[
    /// <summary>
	/// Deletes a shipment.
	/// </summary>
	/// <param name="_whsShipmentTable">
	/// Shipment to be deleted.
	/// </param>
    public void deleteShipment(WHSShipmentTable _whsShipmentTable)
    {
        WHSShipmentTable shipmentTable;

        ttsBegin;

        delete_from shipmentTable
            where shipmentTable.ShipmentId == _whsShipmentTable.ShipmentId;

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableConsolidateShipments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables consolidate shipments button.
    /// </summary>
    /// <param name = "_btnConsolidateShipments">
    /// Consolidate shipments button control.
    /// </param>
    /// <param name = "_shipmentTable">
    /// Shipment record.
    /// </param>
    public void enableConsolidateShipments(FormButtonControl _btnConsolidateShipments, WHSShipmentTable _shipmentTable)
    {
        _btnConsolidateShipments.enabled(_shipmentTable.isConsolidateShipmentsAllowed());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableTransferShipment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables transfer shipments button.
    /// </summary>
    /// <param name = "_btnTransferShipment">
    /// Transfer shipments button control.
    /// </param>
    /// <param name = "_shipmentTable">
    /// Shipment record.
    /// </param>
    public void enableTransferShipment(FormButtonControl _btnTransferShipment, WHSShipmentTable _shipmentTable)
    {
        _btnTransferShipment.enabled(_shipmentTable.isTransferShipmentAllowed());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableTransferShipmentNew</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables transfer shipments to new load button.
    /// </summary>
    /// <param name = "_btnTransferShipmentNew">
    /// Transfer shipments to new load button control.
    /// </param>
    /// <param name = "_shipmentTable">
    /// Shipment record.
    /// </param>
    public void enableTransferShipmentNew(FormButtonControl _btnTransferShipmentNew, WHSShipmentTable _shipmentTable)
    {
        _btnTransferShipmentNew.enabled(_shipmentTable.isTransferShipmentAllowed());
    }

]]></Source>
			</Method>
			<Method>
				<Name>launchShipmentConsolidationForm</Name>
				<Source><![CDATA[
    /// <summary>
	/// Launches <c>WHSShipmentConsolidation</c> form.
	/// </summary>
	/// <param name="_whsShipmentTable">
	/// Base shipment record.
	/// </param>
    public void launchShipmentConsolidationForm(WHSShipmentTable _whsShipmentTable)
    {
        Args    args = new Args();

        args.name(formStr(WHSShipmentConsolidation));
        args.record(_whsShipmentTable);

        FormRun formRun = classFactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.wait();

        FormDataUtil::getFormDataSource(_whsShipmentTable).research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadIdDialogControl_Lookup</Name>
				<Source><![CDATA[
    /// <summary>
	/// Performs lookup for load id.
	/// </summary>
	/// <param name="_ctrl">
	/// Form control.
	/// </param>
    protected void loadIdDialogControl_Lookup(FormStringControl _ctrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(WHSLoadTable), _ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(WHSLoadTable));

        //exclude Shipped and Received loads
        queryBuildDataSource.addRange(fieldNum(WHSLoadTable, LoadStatus)).value(strFmt("..%1", queryValue(WHSLoadStatus::Loaded)));

        sysTableLookup.addLookupfield(fieldNum(WHSLoadTable, LoadId));
        sysTableLookup.addLookupfield(fieldNum(WHSLoadTable, LoadStatus));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>Transfer_clicked</Name>
				<Source><![CDATA[
    /// <summary>
	/// Transfers shipment to a load when button is clicked.
	/// </summary>
	/// <param name="_whsShipmentTable">
	/// Shipment to be transferred.
	/// </param>
    void Transfer_clicked(WHSShipmentTable  _whsShipmentTable)
    {
        Dialog dialog = new dialog("@WAX2969");
        dialog.formBuildDesign().dialogSize(DialogSize::Small);
        DialogField loadId = dialog.addField(extendedTypeStr(WHSLoadId));

        loadId.registerOverrideMethod(identifierStr(lookup), methodStr(WHSShipmentDetailsForm, loadIdDialogControl_Lookup), this);

        if (dialog.run())
        {
            _whsShipmentTable.transferShipment(loadId.value());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadTemplateModified</Name>
				<Source><![CDATA[
    public boolean loadTemplateModified(FormStringControl _loadTemplate)
    {
        WHSLoadTemplate loadTemplate = WHSLoadTemplate::find(_loadTemplate.valueStr());

        weightCapacity.value(loadTemplate.LoadMaxWeight);
        volumeCapacity.value(loadTemplate.LoadMaxVolume);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDialogField</Name>
				<Source><![CDATA[
    private DialogField addDialogField(
                            Dialog          _dialog,
                            IdentifierName  _typeName,
                            FieldLabel      _fieldLabel,
                            anytype         _fieldValue = '')
    {
        var dialogField = _dialog.addField(_typeName, _fieldLabel);
        dialogField.value(_fieldValue);
        dialogField.enabled(false);

        return dialogField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferToNewLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a dialog with all the load template information needed for transfering a shipment to a new load.
    /// </summary>
    /// <param name = "_whsShipmentTable">The current shipment</param>
    /// <returns>true if the dialog could be successfully created; otherwise false.</returns>
    public boolean transferToNewLoad(WHSShipmentTable _whsShipmentTable)
    {
        boolean ret = false;

        Dialog dialog = new Dialog("@WAX309");

        var dialogLoadTemplate = dialog.addField(extendedTypeStr(WHSLoadTemplateId));
        var dialogLoadTemplateId = WHSLoadTable::find(_whsShipmentTable.LoadId).LoadTemplateId;
        dialogLoadTemplate.value(dialogLoadTemplateId);
        var loadTemplate = WHSLoadTemplate::find(dialogLoadTemplateId);

        var groupWeight = dialog.addGroup("@SYS11575");

        //Consolidated load weight will be always 0 since we transfer the shipment to a new load
        this.addDialogField(dialog, extendedTypeStr(Weight), "@WAX5415");

        var totalWeight = _whsShipmentTable.displayTotalWeight();

        this.addDialogField(dialog, extendedTypeStr(Weight), "@SYS2055", totalWeight);

        //Total weight = Consolidated load weight + current shipment total weight = current shipment total weight
        this.addDialogField(dialog, extendedTypeStr(Weight), "@SYS58659", totalWeight);

        weightCapacity = this.addDialogField(dialog, extendedTypeStr(Weight), "@SYS8345", loadTemplate.LoadMaxWeight);

        groupWeight.columns(2);

        var groupVolume = dialog.addGroup("@SYS50537");

        //Consolidated load volume will be always 0 since we transfer the shipment to a new load
        this.addDialogField(dialog, extendedTypeStr(Volume), "@WAX5416");

        var totalVolume = _whsShipmentTable.displayTotalVolume();

        this.addDialogField(dialog, extendedTypeStr(Volume), "@SYS2055", totalVolume);

        //Total volume = Consolidated load volume + current shipment total volume = current shipment total volume
        this.addDialogField(dialog, extendedTypeStr(Volume), "@SYS58659", totalVolume);

        volumeCapacity = this.addDialogField(dialog, extendedTypeStr(Volume), "@SYS8345", loadTemplate.LoadMaxVolume);

        groupVolume.columns(2);

        var stringControl = dialogLoadTemplate.fieldControl();
        stringControl.registerOverrideMethod(methodStr(FormStringControl, modified), methodstr(WHSShipmentDetailsForm, loadTemplateModified), this);

        dialog.run();

        if (dialog.closedOk())
        {
            var currentDialogLoadTemplateId = dialogLoadTemplate.value();

            if (!currentDialogLoadTemplateId)
            {
                throw error("@WAX2008");
            }

            ttsBegin;

            var loadTable = WHSLoadTable::find(_whsShipmentTable.createNewLoad(), true);
            loadTable.initFromLoadTemplateId(currentDialogLoadTemplateId);
            loadTable.update();

            _whsShipmentTable.transferShipment(loadTable.LoadId);

            ttsCommit;

            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>