<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPostingSalesTaxOnPrepayment_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailPostingSalesTaxOnPrepayment_W</c> contains the logic specific for posting sales tax on prepayment in retail.
/// </summary>
internal final static class RetailPostingSalesTaxOnPrepayment_W
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillTaxGroups</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills tax group and country-region specific VAT fields for a prepayment journal line.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">Ledger Journal Trans record for a prepayment journal line associated with a retail sales order.</param>
    /// <param name = "_isRCash">Is this a RCash payment journal? (Y/N)</param>
    public static void fillTaxGroups(LedgerJournalTrans _ledgerJournalTrans, boolean _isRCash)
    {
        if (_ledgerJournalTrans.AccountType == LedgerJournalACType::Cust ||
            _ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust)
        {
            _ledgerJournalTrans.TaxGroup = CustParameters::find().TaxGroup_RU;
            _ledgerJournalTrans.TaxItemGroup = CustParameters::find().TaxItemGroup_RU;

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
            {
                if (!_ledgerJournalTrans.DocumentDate)
                {
                    _ledgerJournalTrans.DocumentDate = _ledgerJournalTrans.TransDate;
                }
                if (_isRCash)
                {
                    CustTable custTableLocal =  CustTable::find(_ledgerJournalTrans.parmOffsetAccount());
                    RetailPostingSalesTaxOnPrepayment_W::initVatRegData_PL(_ledgerJournalTrans, custTableLocal);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initVatRegData_PL</Name>
				<Source><![CDATA[
    private static void initVatRegData_PL(LedgerJournalTrans _ledgerJournalTrans, CustVendTable _custVendTable)
    {
        _ledgerJournalTrans.TaxPeriodPaymentCode_PL = _custVendTable.TaxPeriodPaymentCode_PL;
        _ledgerJournalTrans.vatNumJournal           = _custVendTable.CustVendTable::getPrimaryRegistrationNumber(TaxRegistrationTypesList::TAXID, _ledgerJournalTrans.TransDate);
        _ledgerJournalTrans.Addressing_PL           = DirParty::getAddress(_custVendTable.Party);
        _ledgerJournalTrans.CustVendName_PL         = _custVendTable.name();
        _ledgerJournalTrans.CustVendAccount_PL      = '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>