<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSConsolidatedWorkLineVisitorPackingCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class WHSConsolidatedWorkLineVisitorPackingCreator extends WHSConsolidatedWorkLineVisitor
{
    private WHSWorkTable initialWorkTable;
    private WHSWorkId newWorkId;
    private WMSLocationId locationId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSConsolidatedWorkLineVisitorPackingCreator construct()
    {
        return new WHSConsolidatedWorkLineVisitorPackingCreator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForWork</Name>
				<Source><![CDATA[
    internal static WHSConsolidatedWorkLineVisitorPackingCreator newForWork(WHSWorkTable _initialWorkTable, WHSWorkId _newWorkId, WMSLocationId _locationId)
    {
        WHSConsolidatedWorkLineVisitorPackingCreator returnObj = WHSConsolidatedWorkLineVisitorPackingCreator::construct();
        returnObj.initialWorkTable =  _initialWorkTable;
        returnObj.newWorkId = _newWorkId;
        returnObj.locationId = _locationId;

        return returnObj;
    }

]]></Source>
			</Method>
			<Method>
				<Name>visitInitialPickLine</Name>
				<Source><![CDATA[
    internal void visitInitialPickLine(WHSWorkLine _workLineInitialPick)
    {
        WHSPackingWorkHelper::createPackingWorkLineFromWorkLine(_workLineInitialPick, initialWorkTable, newWorkId, locationId);

        _workLineInitialPick.LoadLineRefRecId = 0;
        _workLineInitialPick.update();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>