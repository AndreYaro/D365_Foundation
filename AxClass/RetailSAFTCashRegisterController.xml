<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSAFTCashRegisterController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailSAFTCashRegisterController</c> class is the controller class for SAF-T Cash register report.
/// </summary>
class RetailSAFTCashRegisterController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(IdentifierName _className='', IdentifierName _methodName='', SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Asynchronous)
    {
        super(_className, _methodName, _executionMode);
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceNORET00002, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RetailSAFTCashRegisterController controller = new RetailSAFTCashRegisterController(
                                                        classStr(RetailSAFTCashRegisterService),
                                                        methodStr(RetailSAFTCashRegisterService, start),
                                                        SysOperationExecutionMode::Synchronous);
        controller.parmDialogCaption("@SaftCashRegister:SaftCashRegisterReportTitle");
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>