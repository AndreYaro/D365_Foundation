<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PersonSearchProcessor_Prospect</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PersonSearchProcessor_Prospect</c> class searches for prospects.
/// </summary>
[PersonSearchProcessorFactoryAttribute(PersonSearchModule::Prospect)]
public class PersonSearchProcessor_Prospect extends PersonSearchProcessor
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addResult</Name>
				<Source><![CDATA[
    private void addResult(smmBusRelTable _prospectResult, DirPartyTable _prospectParty)
    {
        PersonSearchResult::findOrCreateResult(
            taskId,
            PersonSearchResultCategory::Prospect,
            _prospectResult.RecId,
            tableNum(smmBusRelTable),
            _prospectResult.DataAreaId,
            _prospectParty.PartyNumber);

        if (_prospectParty.PartyNumber)
        {
            PersonSearchPartyNumberTmp::findOrCreate(taskId, _prospectParty.PartyNumber);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProspectResultsFromKnownId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create prospect results from known artifacts such as parties, customers, and vendors.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void createProspectResultsFromKnownId()
    {
        smmBusRelTable smmBusRelTable;
        DirPartyTable dirPartyTable;
        PersonSearchCriteriaKnownId personSearchCriteriaKnownId;

        // By prospect
        while select crossCompany smmBusRelTable
        join personSearchCriteriaKnownId
            where personSearchCriteriaKnownId.TaskId == taskId
                && personSearchCriteriaKnownId.ProspectId == smmBusRelTable.BusRelAccount
        outer join dirPartyTable
            where smmBusRelTable.Party == dirPartyTable.RecId
        {
            this.addResult(smmBusRelTable, dirPartyTable);
        }

        // By party
        while select crossCompany smmBusRelTable
        join dirPartyTable
            where smmBusRelTable.Party == dirPartyTable.RecId
        join personSearchCriteriaKnownId
            where personSearchCriteriaKnownId.TaskId == taskId
                && personSearchCriteriaKnownId.PartyNumber == dirPartyTable.PartyNumber
        {
            this.addResult(smmBusRelTable, dirPartyTable);
        }

        // By worker
        HcmWorker hcmWorker;

        while select crossCompany smmBusRelTable
        join hcmWorker
            where smmBusRelTable.MainContactWorker == hcmWorker.RecId
        join personSearchCriteriaKnownId
            where personSearchCriteriaKnownId.TaskId == taskId
                && personSearchCriteriaKnownId.PersonnelNumber == hcmWorker.PersonnelNumber
        join dirPartyTable
            where hcmWorker.Person == dirPartyTable.RecId
        {
            this.addResult(smmBusRelTable, dirPartyTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doSearch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Search for prospects.
    /// </summary>
    public void doSearch()
    {
        if (PersonSearchCriteriaKnownId::existAny(taskId))
        {
            this.createProspectResultsFromKnownId();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>