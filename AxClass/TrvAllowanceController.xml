<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>TrvAllowanceController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>TrvAllowanceController</c> class is the controller class for <c>TrvAllowance</c>Microsoft
/// SQL Server Reporting Services report.
/// </summary>
public class TrvAllowanceController extends SrsReportRunController implements BatchRetryable
{
    TrvExpTable             trvExpTable;
    Query                   query;

    #define.ReportName('TrvAllowance.Report')
    #define.FromDateParam('FromDate')
    #define.ToDateParam('ToDate')
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>prePromptModifyContract</Name>
        <Source><![CDATA[
    /// <summary>
    /// Modifies the report query and parameters by using the caller settings.
    /// </summary>
    protected void prePromptModifyContract()
    {
        if (this.parmArgs().record())
        {
            this.setRecord();

            if (this.getFirstQuery())
            {
                SysQuery::findOrCreateRange(this.getFirstQuery().dataSourceTable(tablenum(TrvExpTable)),
                            fieldnum(TrvExpTable, ExpNumber)).value(trvExpTable.ExpNumber);
            }
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>preRunModifyContract</Name>
        <Source><![CDATA[
    protected void preRunModifyContract()
    {
        FromDate                fromDate;
        ToDate                  toDate;
        TrvAllowanceContract    contract;

        contract    = this.parmReportContract().parmRdlContract() as TrvAllowanceContract;
        toDate      = DateTimeUtil::date(contract.getValue(#ToDateParam));
        fromDate    = DateTimeUtil::date(contract.getValue(#FromDateParam));

        if (toDate == dateNull())
        {
            toDate = dateMax();
        }

        SRSReportHelper::addFromAndToDateRangeToQuery(this.getFirstQuery(), fromDate, toDate, tablenum(TrvExpTrans), fieldnum(TrvExpTrans, TransDate));
    }

]]></Source>
      </Method>
      <Method>
        <Name>setRecord</Name>
        <Source><![CDATA[
    private void setRecord()
    {
        trvExpTable = this.parmArgs().record();
    }

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
    public static void main(Args _args)
    {
        TrvAllowanceController controller  = new TrvAllowanceController();
        controller.parmArgs(_args);
        controller.parmReportName(#ReportName);
        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>