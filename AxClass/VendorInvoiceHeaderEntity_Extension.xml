<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoiceHeaderEntity_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(dataentityviewstr(VendorInvoiceHeaderEntity))]
public final class VendorInvoiceHeaderEntity_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Helper method to insert a record in the entity.
    /// </summary>
    /// <param name = "_entityCtx">The context for the data entity.</param>
    /// <param name = "_dataSourceCtx">The context for the data source.</param>
    /// <returns>True, if the records gets inserted; otherwise, false.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable_W))
        {
            VendInvoiceInfoTable vendInvoiceInfoTable = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable)).getBuffer();

            VendInvoiceInfoTable_W vendInvoiceInfoTable_W;

            select firstonly RecId from vendInvoiceInfoTable_W
                where vendInvoiceInfoTable_W.VendInvoiceInfoTable == vendInvoiceInfoTable.RecId;

            if (vendInvoiceInfoTable_W.RecId)
            {
                _dataSourceCtx.setBuffer(_entityCtx.getEntityRecord().findEntityDataSource(_entityCtx, _dataSourceCtx));
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
            }
        }

        return next insertEntityDataSource(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// This override allows to locate the <c>VendInvoiceInfoTable_W</c> datasource that the entity may not find.
    /// </summary>
    /// <param name = "_entityCtx">The context for the data entity.</param>
    /// <param name = "_dataSourceCtx">The context for the data source.</param>
    /// <returns>The resolved record.</returns>
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret = next findEntityDataSource(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable_W))
        {
            #ISOCountryRegionCodes

            VendInvoiceInfoTable vendInvoiceInfoTable = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable)).getBuffer();
            VendorInvoiceHeaderEntity vendorInvoiceHeaderEntity = _entityCtx.getEntityRecord();
            VendInvoiceInfoTable_W vendInvoiceInfoTable_W = vendInvoiceInfoTable.vendInvoiceInfoTable_W();

            // Manaually update VendInvoiceInfoTable_W record
            if (BrazilParameters::isEnabled())
            {
                if (vendorInvoiceHeaderEntity.FiscalDocumentModel)
                {
                    vendInvoiceInfoTable_W.FiscalDocumentModel_BR = vendorInvoiceHeaderEntity.FiscalDocumentModel;
                }
                if (vendorInvoiceHeaderEntity.FiscalDocumentSeries)
                {
                    vendInvoiceInfoTable_W.FiscalDocumentSeries_BR = vendorInvoiceHeaderEntity.FiscalDocumentSeries;
                }
                if (vendorInvoiceHeaderEntity.FiscalDocumentSpecie)
                {
                    vendInvoiceInfoTable_W.FiscalDocumentSpecie_BR = vendorInvoiceHeaderEntity.FiscalDocumentSpecie;
                }
            }
            else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]) && VendorInvoiceSupportUUIDinPLFlight::instance().isEnabled())
            {
                if (vendorInvoiceHeaderEntity.InvoiceUUID)
                {
                    vendInvoiceInfoTable_W.SubmissionUUID_W = vendorInvoiceHeaderEntity.InvoiceUUID;
                }
            }
            
            ret = vendInvoiceInfoTable_W;
            
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>