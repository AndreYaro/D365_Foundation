<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailUpdateReturnOriginalTransactionIdContract_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailUpdateReturnOriginalTransactionIdContract_IN</c> class is the data contract class for update return invoices with original transaction ids.
/// </summary>
[
    DataContract,
    SysOperationAlwaysInitialize,
    SysOperationContractProcessing(classstr(RetailUpdateReturnOriginalTransactionId_MenuUIBuilder))
]
public class RetailUpdateReturnOriginalTransactionIdContract_IN extends SysOperationDataContractBase implements SysOperationInitializable, SysPackable
{
    private Set selectedOMInternalOrgRecIds;
    private container packedOMUnits;
    private RecId oMHierarchyRecId;
    private FromDate fromDate;
    private ToDate toDate;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        packedOMUnits,
        oMHierarchyRecId,
        fromDate,
        toDate
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes the current instance of the <c>RetailUpdateReturnOriginalTransactionIdContract_IN</c> class.
    /// </summary>
    /// <returns>A container that contains the current instance of the <c>SysOperationDataContractBase</c> class.</returns>
    public container pack()
    {
        if (selectedOMInternalOrgRecIds)
        {
            packedOMUnits = selectedOMInternalOrgRecIds.pack();
        }

        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deserializes the <paramref name="packedClass" /> parameter value to the current instance of the <c>RetailUpdateReturnOriginalTransactionIdContract_IN</c> class.
    /// </summary>
    /// <param name = "_packedClass">The container from which to deserialize the instance.</param>
    /// <returns>true if deserialization was successful; otherwise, false.</returns>
    public boolean unpack(container _packedClass)
    {
        Integer version = conpeek(_packedClass, 1);

        switch (version)
        {
            case #CurrentVersion :
                [version, #CurrentList] = _packedClass;

                if (packedOMUnits)
                {
                    selectedOMInternalOrgRecIds = Set::create(packedOMUnits);
                }
                break;

            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes fromDate and toDate fields with default values.
    /// </summary>
    public void initialize()
    {
        toDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the fromDate.
    /// </summary>
    /// <param name = "_fromDate">The new date</param>
    /// <returns>The current value for the from date.</returns>
    [DataMember]
    public FromDate fromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the toDate.
    /// </summary>
    /// <param name = "_toDate">The new date</param>
    /// <returns>The current value for the to date.</returns>
    [DataMember]
    public ToDate toDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOMHierarchyRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the Hierarchy Rec Id.
    /// </summary>
    /// <param name = "_hierarchyRecId">The new value for Hierarchy RecId.</param>
    /// <returns>The current value for Hierarchy RecId.</returns>
    [DataMember]
    public RecId parmOMHierarchyRecId(RecId _oMHierarchyRecId = oMHierarchyRecId)
    {
        oMHierarchyRecId = _oMHierarchyRecId;
        return oMHierarchyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSelectedOMInternalOrgRecIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets a Set of Internal Organization RecIds
    /// </summary>
    /// <param name = "_selectedOMInternalOrgRecIds">The new Set of Org Unit RecIds.</param>
    /// <returns>The current Set of Org Ids.</returns>
    public Set parmSelectedOMInternalOrgRecIds(Set _selectedOMInternalOrgRecIds = selectedOMInternalOrgRecIds)
    {
        selectedOMInternalOrgRecIds = _selectedOMInternalOrgRecIds;

        return selectedOMInternalOrgRecIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>