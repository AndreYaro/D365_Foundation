<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalDocumentNotSkipBenefitValidationIncomingThirdPartyFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When the <c>FiscalDocumentNotSkipBenefitValidationIncomingThirdPartyFlight</c> is enabled,
/// system does not skip validation pf benefit code for Third party and Incoming document.
/// </summary>
internal final class FiscalDocumentNotSkipBenefitValidationIncomingThirdPartyFlight
{
    static private FiscalDocumentNotSkipBenefitValidationIncomingThirdPartyFlight singleton;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFlightingEnabled</Name>
				<Source><![CDATA[
    private boolean isFlightingEnabled()
    {
        return isFlightEnabled(classId2Name(classIdGet(this)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the feature is enabled.
    /// </summary>
    /// <returns>
    /// True if the feature is enabled; otherwise, false.
    /// </returns>
    [Hookable(false)]
    internal boolean isEnabled()
    {
        return this.isFlightingEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>FiscalDocumentNotSkipBenefitValidationIncomingThirdPartyFlight</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    static internal FiscalDocumentNotSkipBenefitValidationIncomingThirdPartyFlight instance()
    {
        if (!singleton)
        {
            singleton = new FiscalDocumentNotSkipBenefitValidationIncomingThirdPartyFlight();
        }

        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the state of the feature.
    /// </summary>
    [Hookable(false)]
    static internal void clearInstance()
    {
        singleton = null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>