<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjVendInvoiceVendorInfo</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class ProjVendInvoiceVendorInfo
{
    private VendAccount vendAccount;
    private VendName vendName;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static ProjVendInvoiceVendorInfo construct()
    {
        return new ProjVendInvoiceVendorInfo();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromVendorInvoiceTransRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static ProjVendInvoiceVendorInfo newFromVendorInvoiceTransRecId(VendInvoiceTransRecId _vendInvoiceTransRecId)
    {
        VendInvoiceTrans vendInvoiceTrans;
        VendInvoiceJour vendInvoiceJour;
        VendTable vendTable;

        if (_vendInvoiceTransRecId)
        {
            select firstonly vendTable
                exists join vendInvoiceJour
                    where vendInvoiceJour.InvoiceAccount == vendTable.AccountNum
                exists join vendInvoiceTrans
                    where vendInvoiceTrans.InvoiceId == vendInvoiceJour.InvoiceId
                        && vendInvoiceTrans.PurchID == vendInvoiceJour.PurchId
                        && vendInvoiceTrans.InternalInvoiceId == vendInvoiceJour.InternalInvoiceId
                        && vendInvoiceTrans.numberSequenceGroup == vendInvoiceJour.numberSequenceGroup
                        && vendInvoiceTrans.InvoiceDate == vendInvoiceJour.InvoiceDate
                        && vendInvoiceTrans.RecId == _vendInvoiceTransRecId;
        }

        ProjVendInvoiceVendorInfo newVendInvoiceTransVendorInfo = ProjVendInvoiceVendorInfo::construct();
        newVendInvoiceTransVendorInfo.vendAccount = vendTable.AccountNum;
        newVendInvoiceTransVendorInfo.vendName = vendTable.name();

        return newVendInvoiceTransVendorInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromProductReceipt</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static ProjVendInvoiceVendorInfo newFromProductReceipt(InventTransId _inventTransId)
    {
        PurchLine purchLine;
        PurchTable purchTable;
        VendTable vendTable;

        if (_inventTransId)
        {
                select firstonly vendTable 
                    exists join purchTable 
                        where vendTable.AccountNum == purchTable.invoiceAccount
                    exists join purchLine 
                        where purchLine.InventRefTransId == _inventTransId
                           && purchLine.PurchId == purchTable.PurchId;
        }

        ProjVendInvoiceVendorInfo newVendInvoiceTransVendorInfo = ProjVendInvoiceVendorInfo::construct();
        newVendInvoiceTransVendorInfo.vendAccount = vendTable.AccountNum;
        newVendInvoiceTransVendorInfo.vendName = vendTable.name();

        return newVendInvoiceTransVendorInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromVendInvoiceInfoLineRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static ProjVendInvoiceVendorInfo newFromVendInvoiceInfoLineRecId(RecId _vendInvoiceInfoLineRecId)
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;
        VendInvoiceInfoLine vendInvoiceInfoLine;
        VendTable vendTable;

        if (_vendInvoiceInfoLineRecId)
        {
            select firstonly vendTable
                exists join vendInvoiceInfoTable
                    where vendInvoiceInfoTable.InvoiceAccount == vendTable.AccountNum
                exists join vendInvoiceInfoLine
                    where vendInvoiceInfoLine.ParmId == vendInvoiceInfoTable.ParmId
                        && vendInvoiceInfoLine.TableRefId == vendInvoiceInfoTable.TableRefId
                        && vendInvoiceInfoLine.RecId == _vendInvoiceInfoLineRecId;
        }

        ProjVendInvoiceVendorInfo newVendInvoiceVendorInfo = ProjVendInvoiceVendorInfo::construct();
        newVendInvoiceVendorInfo.vendAccount = vendTable.AccountNum;
        newVendInvoiceVendorInfo.vendName = vendTable.name();

        return newVendInvoiceVendorInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendorAccount</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public VendAccount getVendorAccount()
    {
        return this.VendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendorName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public VendName getVendorName()
    {
        return this.VendName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>