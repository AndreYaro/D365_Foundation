<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSFwkErrorDtoBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Ax.Tms.Base.Data;
using System;
using System.Globalization;

/// <summary>
/// The class <c>TMSFwkErrorDtoBuilder</c> exposes functionality to create <c>ErrorDto</c> objects.
/// </summary>
public class TMSFwkErrorDtoBuilder
{
    const int errorCodeTechnical = 3;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildErrorMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds error message.
    /// </summary>
    /// <param name="_errorType">The type of error.</param>
    /// <param name="_errorCode">The code identifying the error.</param>
    /// <param name="_errorLabel">The error message.</param>
    /// <param name="_errorParam">The error message optional parameter.</param>
    /// <returns>An <c>ErrorDto</c> instance encapsulating the information.</returns>
    protected static Microsoft.Dynamics.Ax.Tms.Base.Data.ErrorDto buildErrorMessage(TMSFwkErrorType _errorType, int _errorCode, str _errorLabel, str _errorParam = "")
    {
        String description = _errorParam == '' ? TmsLabelProvider::construct().GetLabel(_errorLabel) : TmsLabelProvider::construct().GetLabel(_errorLabel, _errorParam);

        ErrorDto ret = new Microsoft.Dynamics.Ax.Tms.Base.Data.ErrorDto();
        ret.Code = strFmt('%1%2', _errorType, strRFix(strFmt('%1', _errorCode), 4, '0'));
        ret.Description = description;
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>technicalError</Name>
				<Source><![CDATA[
    public static Microsoft.Dynamics.Ax.Tms.Base.Data.ErrorDto technicalError()
    {
        return TMSFwkErrorDtoBuilder::buildErrorMessage(TMSFwkErrorType::General, errorCodeTechnical, "@TRX2621");
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>