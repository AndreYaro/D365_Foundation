<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventUpdateDimReserveChangeSysDaBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class WHSInventUpdateDimReserveChangeSysDaBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQueryObjectForMarkedIssueTrans</Name>
				<Source><![CDATA[
    internal static SysDaQueryObject buildQueryObjectForMarkedIssueTrans(
        InventTrans         _inventTransIssueEmptyBuffer,        
        ItemId              _itemId,
        InventTransOriginId _inventTransOriginRecId,
        InventTransOriginId _markingRefInventTransOrigin,
        InventDim           _inventDimCriteria)
    {
        WHSInventUpdateDimReserveChangeSysDaBuilder builder = new WHSInventUpdateDimReserveChangeSysDaBuilder();
        InventDim inventDimEmptyBuffer;

        return builder.buildInventTransQueryObject(_inventTransIssueEmptyBuffer, inventDimEmptyBuffer, _itemId, _inventTransOriginRecId, _markingRefInventTransOrigin, _inventDimCriteria);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInventTransQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject buildInventTransQueryObject(
            InventTrans         _inventTrans,
            InventDim           _inventDimEmptyBuffer,
            ItemId              _itemId,
            InventTransOriginId _inventTransOriginRecId,
            InventTransOriginId _markingRefInventTransOrigin,
            InventDim           _inventDimCriteria)
    {
        SysDaQueryObject inventTransQueryObject = new SysDaQueryObject(_inventTrans);
        inventTransQueryObject.forUpdateHint = true;
        inventTransQueryObject.whereClause(this.buildWhereClauseForInventTrans(_inventTrans, _itemId, _inventTransOriginRecId, _markingRefInventTransOrigin));

        SysDaQueryObject inventDimQueryObject = WHSInventDimQueryBuilder::buildWHSInventDimJoin(_inventDimEmptyBuffer, _inventDimCriteria, new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, InventDimId)));
         
        inventDimQueryObject.joinClauseKind(SysDaJoinKind::ExistsJoin);
        inventTransQueryObject.joinClause(SysDaJoinKind::ExistsJoin, inventDimQueryObject);

        inventTransQueryObject.orderByClause(this.buildOrderByClause());

        return inventTransQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildOrderByClause</Name>
				<Source><![CDATA[
    protected SysDaOrderBys buildOrderByClause()
    {
        //allow extenders to change the ordering    
        return new SysDaOrderBys()
                .add(fieldstr(InventTrans, DateExpected));
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildWhereClauseForInventTrans</Name>
				<Source><![CDATA[
    private SysDaQueryExpression buildWhereClauseForInventTrans(
            InventTrans         _inventTrans,            
            ItemId              _itemId,
            InventTransOriginId _inventTransOriginRecId,
            InventTransOriginId _markingRefInventTransOrigin)
    {
        SysDaQueryExpression inventTransQueryWhereClause =
            new SysDaEqualsExpression(
                new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, ItemId)),
                new SysDaValueExpression(_itemId))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, ValueOpen)),
                    new SysDaValueExpression(InventTransOpen::Yes)))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, StatusReceipt)),
                    new SysDaValueExpression(StatusReceipt::None)))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, StatusIssue)),
                    new SysDaValueExpression(StatusIssue::ReservOrdered)))
            .and(new SysDaNotEqualsExpression(
                    new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, InventTransOrigin)),
                    new SysDaValueExpression(_inventTransOriginRecId)))
            .and(this.buildInventTransMarkingRange(_inventTrans, _inventTransOriginRecId, _markingRefInventTransOrigin));

        return inventTransQueryWhereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInventTransMarkingRange</Name>
				<Source><![CDATA[
    private SysDaQueryExpression buildInventTransMarkingRange(
            InventTrans         _inventTrans,
            InventTransOriginId _inventTransOriginRecId,
            InventTransOriginId _markingRefInventTransOrigin)
    {
        SysDaQueryExpression daExpr;

        if (_markingRefInventTransOrigin)
        {
            daExpr = new SysDaEqualsExpression(
                        new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, InventTransOrigin)),
                        new SysDaValueExpression(_markingRefInventTransOrigin))
                    .and(new SysDaEqualsExpression(
                            new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, MarkingRefInventTransOrigin)),
                            new SysDaValueExpression(_inventTransOriginRecId)));
        }
        else
        {
            daExpr = new SysDaEqualsExpression(
                    new SysDaFieldExpression(_inventTrans, fieldStr(InventTrans, MarkingRefInventTransOrigin)),
                    new SysDaValueExpression(0));
        }
   
        return daExpr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>