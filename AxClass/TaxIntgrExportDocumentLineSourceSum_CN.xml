<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntgrExportDocumentLineSourceSum_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntgExportDocumentLineSourceSum_CN</c> is the line source for export document with invoice description, which is a summed version.
/// </summary>
class TaxIntgrExportDocumentLineSourceSum_CN extends TaxIntgrExportDocumentLineSource_CN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTaxTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets summed tax transaction.
    /// </summary>
    /// <returns>
    /// The summed tax transaction.
    /// </returns>
    protected TaxTrans getTaxTrans()
    {
        TaxTrans    taxTrans;

        select sum(SourceRegulateAmountCur), sum(SourceBaseAmountCur), TaxDirection, avg(TaxValue) from taxTrans
            group by Voucher, TransDate, TaxCode, HeadingTableId, TaxDirection
            where   taxTrans.TaxCode        == exportDocumentSource.parmTaxCode()
                &&  taxTrans.Voucher        == exportDocumentSource.parmExportDocumentSourceMap().TaxIntgrExportDocumentSourceMap_CN::getVoucher()
                &&  taxTrans.TransDate      == exportDocumentSource.parmExportDocumentSourceMap().TaxIntgrExportDocumentSourceMap_CN::getInvoiceDate();

        return taxTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveTaxAmount</Name>
				<Source><![CDATA[
    protected void retrieveTaxAmount()
    {
        TaxTrans    taxTrans;
        int         displaySign;

        taxTrans = this.getTaxTrans();

        displaySign = Tax::changeDisplaySign(taxTrans.TaxDirection);
        transactionCurrencyNetAmount = taxTrans.SourceBaseAmountCur * displaySign;
        transactionCurrencyTaxAmount = taxTrans.SourceRegulateAmountCur * displaySign;
        taxValue = TaxIntgrUtility_CN::roundAmount(taxTrans.TaxValue);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>