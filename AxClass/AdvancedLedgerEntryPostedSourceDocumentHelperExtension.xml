<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AdvancedLedgerEntryPostedSourceDocumentHelperExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AdvancedLedgerEntryPostedSourceDocumentHelperExtension</c> class provides helper methods for advanced ledger entry extension events.
/// </summary>
[
    SourceDocumentEnumClassExtAttribute(
        enumStr(SourceDocument_AdvancedLedgerEntry),
        SourceDocument_AdvancedLedgerEntry::AdvancedLedgerEntry)
]
public class AdvancedLedgerEntryPostedSourceDocumentHelperExtension extends SourceDocPostedHelperExt
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupForDocumentNumberEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for lookupForDocumentNumber event in the <c>SourceDocumentPostedTransHelperUI</c> class.
    /// Performs the lookup for the document number in the <c>AdvancedLedgerEntryHeader</c> table.
    /// </summary>
    /// <param name="_formStringControl">
    /// The value for the <c>FormStringControl</c> control in the report parameter form.
    /// </param>
    public void lookupForDocumentNumberEventHandler(FormStringControl _formStringControl)
    {
        SourceDocumentHeader sourceDocumentHeader;
        FormStringControl    documentNumber;
        SysTableLookup       tableLookup;
        Query                query;
        TableId              advancedLedgerEntryTableId = tableNum(AdvancedLedgerEntryHeader);

        sourceDocumentHeader =  this.parmSourceDocumentPostedTransHelper().getSourceDocument().parmSourceDocumentHeader();

        if (sourceDocumentHeader.SourceRelationType == advancedLedgerEntryTableId)
        {
            query = new query();

            query.addDataSource(advancedLedgerEntryTableId);

            documentNumber = _formStringControl;
            tableLookup    = SysTableLookup::newParameters(advancedLedgerEntryTableId, documentNumber);

            tableLookup.addLookupfield(fieldNum(AdvancedLedgerEntryHeader, TransactionNumber), true);
            tableLookup.addLookupfield(fieldNum(AdvancedLedgerEntryHeader, TransactionText));
            tableLookup.parmQuery(query);
            tableLookup.performFormLookup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocumentSpecificDataEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for setDocumentSpecificData event in the <c>SourceDocumentPostedTransHelperDP</c> class.
    /// </summary>
    /// <param name="_queryRun">
    /// An instance of the <c>QueryRun</c> object.
    /// </param>
    public void setDocumentSpecificDataEventHandler(QueryRun _queryRun)
    {
        SourceDocumentHeader      sourceDocumentHeader;
        AdvancedLedgerEntryHeader advancedLedgerEntryHeader;
        TableId                   advancedLedgerEntryTableId = tableNum(AdvancedLedgerEntryHeader);

        sourceDocumentHeader = this.parmSourceDocumentPostedTransHelper().getSourceDocument().parmSourceDocumentHeader();

        if (sourceDocumentHeader.SourceRelationType == advancedLedgerEntryTableId)
        {
            advancedLedgerEntryHeader = _queryRun.get(advancedLedgerEntryTableId) as AdvancedLedgerEntryHeader;

            sourceDocumentPostedTransHelperDP.parmDocumentNumber(advancedLedgerEntryHeader.TransactionNumber);
            sourceDocumentPostedTransHelperDP.parmDocumentText(advancedLedgerEntryHeader.TransactionText);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldForRangeEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for getFieldForRange event in the <c>SourceDocumentPostedTransHelperCtrl</c> class.
    /// </summary>
    public void setFieldForRangeEventHandler()
    {
        SourceDocumentHeader sourceDocumentHeader;

        sourceDocumentHeader = sourceDocumentPostedTransHelper.getSourceDocument().parmSourceDocumentHeader();

        if (sourceDocumentHeader.SourceRelationType == tableNum(AdvancedLedgerEntryHeader))
        {
            sourceDocumentPostedTransHelperCtrl.parmRangeField(fieldNum(AdvancedLedgerEntryHeader, TransactionNumber));
            sourceDocumentPostedTransHelperCtrl.parmDocumentTextField(fieldNum(AdvancedLedgerEntryHeader, TransactionText));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the source document posted trans extension events.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    /// The element of the <c>ProjTransType</c> enum that passed into the method was not expected.
    /// </exception>
    protected void subscribe()
    {
        switch ((classIdGet(sourceDocumentPostedTransHelper)))
        {
            case classNum(SourceDocumentPostedTransHelperDP):
                sourceDocumentPostedTransHelperDP = sourceDocumentPostedTransHelper;
                sourceDocumentPostedTransHelperDP.setDocumentSpecificData += eventHandler(this.setDocumentSpecificDataEventHandler);
                break;

            case classNum(SourceDocumentPostedTransHelperUI):
                sourceDocumentPostedTransHelperUI = sourceDocumentPostedTransHelper;
                sourceDocumentPostedTransHelperUI.LookupForDocumentNumber   += eventHandler(this.lookupForDocumentNumberEventHandler);
                sourceDocumentPostedTransHelperUI.validateForDocumentNumber += eventHandler(this.validateForDocumentNumberEventHandler);
                break;

            case classNum(SourceDocumentPostedTransHelperCtrl):
                sourceDocumentPostedTransHelperCtrl = sourceDocumentPostedTransHelper;
                sourceDocumentPostedTransHelperCtrl.setFieldForRange += eventHandler(this.setFieldForRangeEventHandler);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateForDocumentNumberEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for validateForDocumentNumber event in the <c>SourceDocumentPostedTransHelperUI</c> class.
    /// </summary>
    /// <param name="_formStringControl">
    /// The value for the <c>_formStringControl</c> in the report parameter form.
    /// </param>
    /// <param name="_documentNumber">
    /// The value for the document number control in the report parameter form.
    /// </param>
    public void validateForDocumentNumberEventHandler(FormStringControl _formStringControl, Num _documentNumber)
    {
        SourceDocumentHeader sourceDocumentHeader;
        boolean              isValid = true;

        sourceDocumentHeader =  this.parmSourceDocumentPostedTransHelper().getSourceDocument().parmSourceDocumentHeader();

        if (sourceDocumentHeader.SourceRelationType == tableNum(AdvancedLedgerEntryHeader))
        {
            if (_documentNumber)
            {
                isValid = AdvancedLedgerEntryHeader::findByTransactionNumber(_documentNumber).RecId != 0;

                if (!isValid)
                {
                    checkFailed("@SYP4882099");
                }
            }

            sourceDocumentPostedTransHelperUI.parmIsDocumentNumberValid(isValid);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AdvancedLedgerEntryPostedSourceDocumentHelperExtension construct()
    {
        return new AdvancedLedgerEntryPostedSourceDocumentHelperExtension();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>