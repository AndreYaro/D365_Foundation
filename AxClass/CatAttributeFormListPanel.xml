<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatAttributeFormListPanel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Custom ListPanel which provides most of the functionality for the CateAttributeForm form,
/// </summary>
public class CatAttributeFormListPanel extends SysListPanel
{
    RecId       catDisplayCategoryRecId;
    container   selectedAttribute;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds and returns a new <c>CatAttributeFormListPanel</c>.
    /// </summary>
    /// <param name = "formRun">Form instance in which a ListPanel will be created.</param>
    /// <param name = "parentId">Control ID of the group which will host the ListPanel.</param>
    /// <param name = "hasAddAllButton">true if there should be an Add All button; otherwise, false.</param>
    /// <param name = "hasRemoveAllButon">true if there should be a Remove All button; otherwise, false.</param>
    /// <returns>A new <c>CatAttributeFormListPanel</c>.</returns>
    public static SysListPanel newForm(FormRun  formRun,
                                    int         parentId,
                                    boolean     hasAddAllButton = false,
                                    boolean     hasRemoveAllButon = false)
    {
        CatAttributeFormListPanel sysListPanel = new CatAttributeFormListPanel();

        sysListPanel.parmFormRun(formRun);
        sysListPanel.parmParentId(parentId);
        sysListPanel.parmHasAddAllButton(hasAddAllButton);
        sysListPanel.parmHasRemoveAllButton(hasRemoveAllButon);

        sysListPanel.build();
        return sysListPanel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the text for the add and remove buttons.
    /// </summary>
    public void build()
    {
        super();

        viewBuildSelected.columnHeader(true);
        viewBuildAvailable.columnHeader(true);

        addBuildButton.text("@SYS332353");
        removeBuildButton.text("@SYS135012");

        // Place remove button above add button.
        separatorBuildGroupControl.moveControl(addBuildButton.id(), removeBuildButton.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfColumnsLeft</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of columns of the left ListView.
    /// </summary>
    /// <returns>
    /// The number of columns of the left ListView.
    /// </returns>
    public int numOfColumnsLeft()
    {
        return 3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfColumnsRight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of columns of the right ListView.
    /// </summary>
    /// <returns>
    /// The number of columns of the right ListView.
    /// </returns>
    public int numOfColumnsRight()
    {
        return 3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves data which will be used to populate the last panel.
    ///
    /// Data must be retrieved in the format [[Id, column1, column2], [Id, column1, column2], ...]
    /// where Ids are the Ids used when adding/removing items
    /// </summary>
    /// <returns>A container holding the sets of available attribute.</returns>
    public container getData()
    {
        container   availableData;
        container   selectedData;

        CatDisplayCategoryFilterableAttribute   filterableAttribute;
        EcoResAttribute                         ecoResAttribute;
        EcoResAttributeType                     attributeType;
        EcoResCategoryAttribute                 ecoResCategoryAttribute;
        EcoResCategoryAttributeLookup           categoryAttributeLookupLocal;
        CatDisplayCategoryTable                 catDisplayCategoryTableLocal;
        CatDisplayCategorySharedInfo            catDisplayCategorySharedData;
        EcoResCatalogControl                    ecoResCatalogControl;

        // find all the available attributes
        while select RecId from catDisplayCategoryTableLocal
            where catDisplayCategoryTableLocal.RecId == this.catDisplayCategoryRecId
            join RecId from catDisplayCategorySharedData
                where catDisplayCategoryTableLocal.SharedData == catDisplayCategorySharedData.RecId
            join RecId from categoryAttributeLookupLocal
                where categoryAttributeLookupLocal.Category == catDisplayCategorySharedData.Category
            join RecId, Name from ecoResAttribute
                where ecoResAttribute.RecId == categoryAttributeLookupLocal.Attribute
            // This code blocks assumes caller is formstr(CatProcureCatalogEdit),
            // to associate Attribute with DisplayCategory of a Catalog.
            // In that context, only Attribute of certain types are allowed
            join DataType, Name from  attributeType
                where attributeType.RecId == ecoResAttribute.AttributeType
                    // filterable iff one of: numeric type; datetype type; text type *and* enum
                    && (
                            ((attributeType.DataType == AttributeDataType::Text) && (attributeType.IsEnumeration == NoYes::Yes))
                        ||   (attributeType.DataType == AttributeDataType::Currency)
                        ||   (attributeType.DataType == AttributeDataType::Decimal)
                        ||   (attributeType.DataType == AttributeDataType::Integer)
                        ||   (attributeType.DataType == AttributeDataType::DateTime)
                    )
            join RecId from ecoResCategoryAttribute
                where  ecoResCategoryAttribute.RecId == categoryAttributeLookupLocal.CategoryAttribute
                    && ecoResCategoryAttribute.Modifier ==  EcoResCategoryAttributeModifier::Product
            join RecId from ecoResCatalogControl
                where  ecoResCatalogControl.CategoryAttribute == ecoResCategoryAttribute.RecId
                    && ecoResCatalogControl.IsInternal        == NoYes::No
            notexists join RecId from filterableAttribute
                where  filterableAttribute.CategoryAttributeLookup == categoryAttributeLookupLocal.RecId
                    && filterableAttribute.SharedData == catDisplayCategoryTableLocal.SharedData
        {
            selectedData += [[ecoResAttribute.RecId, ecoResAttribute.Name, enum2str(attributeType.DataType), attributeType.Name]];
        }

        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add selected attributes to left view.
    /// </summary>
    /// <param name = "data">The set of attribute.</param>
    public void addData(container data)
    {
        EcoResCategoryAttributeLookup ecoResCategoryAttributeLookup;
        int                           idx;

        for (int i = 1; i <= conlen(data); i++)
        {
            //---find the item
            idx = confind(selectedAttribute, conpeek(data, i));
            if (idx >0)
            {
                selectedAttribute = condel(selectedAttribute,idx,1);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Remove from left listview.
    /// </summary>
    /// <param name = "data">The set of attributes to be removed.</param>
    public void removeData(container data)
    {
        for (int i = 1; i <= conlen(data); i++)
        {
            selectedAttribute += [conpeek(data, i)];
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCatDisplayCategoryRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// This parm set the record if of display category.
    /// </summary>
    /// <param name = "_recId">The record ID of CatDisplayCategoryTable.</param>
    public void parmCatDisplayCategoryRecId(RecId _recId)
    {
        this.catDisplayCategoryRecId = _recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// For selected attribute and category, get the list of corresponding EcoResCategoryAttributeLookup recIds.
    /// </summary>
    /// <returns>arrary of EcoResCategoryAttributeLookup recIds.</returns>
    public Array getSelectedItems()
    {
        Array    selectedRecIds = new Array(Types::Int64);
        RecId    attributeRecId;

        EcoResCategoryAttributeLookup   ecoResCategoryAttributeLookup;

        for (int i = 1; i <= conlen(selectedAttribute); i++)
        {
            attributeRecId = conpeek(selectedAttribute, i);
            ecoResCategoryAttributeLookup = EcoResCategoryAttributeLookup::find(this.catDisplayCategoryRecId, attributeRecId);

            // insert selected attribute into EcoResCategoryAttributeLookup
            if (!ecoResCategoryAttributeLookup)
            {
                ttsbegin;
                ecoResCategoryAttributeLookup.Attribute = attributeRecId;
                ecoResCategoryAttributeLookup.Category = this.catDisplayCategoryRecId;
                ecoResCategoryAttributeLookup.insert();
                ttscommit;
            }

            selectedRecIds.value(i,ecoResCategoryAttributeLookup.RecId);
        }

        return selectedRecIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fill</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the label for list view columns.
    /// </summary>
    public void fill()
    {
        FormListColumn listColumn;

        super();

        // set the column header text
        listColumn = new FormListColumn('@SYS300707');
        viewSelected.setColumn(0, listColumn);
        viewAvailable.setColumn(0, listColumn);

        listColumn.text('@SYS40150');
        viewSelected.setColumn(1, listColumn);
        viewAvailable.setColumn(1, listColumn);

        listColumn.text('@SYS333319');
        viewSelected.setColumn(2, listColumn);
        viewAvailable.setColumn(2, listColumn);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>