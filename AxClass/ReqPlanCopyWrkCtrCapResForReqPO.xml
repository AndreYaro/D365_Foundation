<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPlanCopyWrkCtrCapResForReqPO</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqPlanCopyWrkCtrCapResForReqPO</c> class copies capacity reservations from the source master plan version
/// related to planned production orders in the target master plan version.
/// </summary>
class ReqPlanCopyWrkCtrCapResForReqPO extends SysQueryInsertRecordSet
{
    int wrkCtrCapResDatasourceId;
    int reqPODataSourceId;

    ReqPlanVersion reqPlanVersionFrom;
    ReqPlanVersion reqPlanVersionTo;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    protected void initFieldMapping()
    {
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, LoadType), fieldStr(WrkCtrCapRes, LoadType));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, TransDate), fieldStr(WrkCtrCapRes, TransDate));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, PropertyId), fieldStr(WrkCtrCapRes, PropertyId));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, JobId), fieldStr(WrkCtrCapRes, JobId));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, JobType), fieldStr(WrkCtrCapRes, JobType));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, Locked), fieldStr(WrkCtrCapRes, Locked));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, OprNum), fieldStr(WrkCtrCapRes, OprNum));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, RefId), fieldStr(WrkCtrCapRes, RefId));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, RefType), fieldStr(WrkCtrCapRes, RefType));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, WrkCtrLoadPct), fieldStr(WrkCtrCapRes, WrkCtrLoadPct));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, WrkCtrId), fieldStr(WrkCtrCapRes, WrkCtrId));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, WrkCtrSec), fieldStr(WrkCtrCapRes, WrkCtrSec));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, OprPriority), fieldStr(WrkCtrCapRes, OprPriority));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, EndTime), fieldStr(WrkCtrCapRes, EndTime));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, StartTime), fieldStr(WrkCtrCapRes, StartTime));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, IntvQr), fieldStr(WrkCtrCapRes, IntvQr));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, IntvMth), fieldStr(WrkCtrCapRes, IntvMth));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, IntvWk), fieldStr(WrkCtrCapRes, IntvWk));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, OrigJobRecId), fieldStr(WrkCtrCapRes, OrigJobRecId));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, TimeStamp), fieldStr(WrkCtrCapRes, TimeStamp));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, RecordState), fieldStr(WrkCtrCapRes, RecordState));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, RecordStateSessionId), fieldStr(WrkCtrCapRes, RecordStateSessionId));
        this.mapField(wrkCtrCapResDatasourceId, fieldStr(WrkCtrCapRes, RecordStateSessionLoginDateTime), fieldStr(WrkCtrCapRes, RecordStateSessionLoginDateTime));

        this.mapField(reqPODataSourceId, fieldStr(ReqPO, PlanVersion), fieldStr(WrkCtrCapRes, PlanVersion));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected Query initQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdswrkCtrCapResSelectVersion = query.addDataSource(tableNum(WrkCtrCapRes));
        qbdswrkCtrCapResSelectVersion.addRange(fieldNum(WrkCtrCapRes, RefType)).value(queryValue(WrkCtrCapRefType::PlannedOrder));
        qbdswrkCtrCapResSelectVersion.addRange(fieldNum(WrkCtrCapRes, PlanVersion)).value(queryValue(reqPlanVersionFrom.RecId));
        wrkCtrCapResDatasourceId = qbdswrkCtrCapResSelectVersion.uniqueId();

        QueryBuildDataSource qbdsReqPO = qbdswrkCtrCapResSelectVersion.addDataSource(tableNum(ReqPO));
        qbdsReqPO.addLink(fieldNum(WrkCtrCapRes, RefId), fieldNum(ReqPO, RefId));
        qbdsReqPO.addRange(fieldNum(ReqPO, PlanVersion)).value(queryValue(reqPlanVersionTo.RecId));
        reqPODataSourceId = qbdsReqPO.uniqueId();
        
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    protected Common initTargetCursor()
    {
        WrkCtrCapRes wrkCtrCapResInsert;

        wrkCtrCapResInsert.skipDataMethods(true);
        wrkCtrCapResInsert.skipAosValidation(true);

        return wrkCtrCapResInsert;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromReqPlanVersions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a new instance of the <c>ReqPlanCopyWrkCtrCapResForReqPO</c> class.
    /// </summary>
    /// <param name="_reqPlanVersionFrom">
    ///     The version of the source master plan.
    /// </param>
    /// <param name="_reqPlanVersionTo">
    ///     The version of the target master plan.
    /// </param>
    /// <returns>A new instance.</returns>
    public static ReqPlanCopyWrkCtrCapResForReqPO newFromReqPlanVersions(ReqPlanVersion _reqPlanVersionFrom, ReqPlanVersion _reqPlanVersionTo)
    {
        ReqPlanCopyWrkCtrCapResForReqPO instance = new ReqPlanCopyWrkCtrCapResForReqPO();
        instance.reqPlanVersionFrom = _reqPlanVersionFrom;
        instance.reqPlanVersionTo = _reqPlanVersionTo;

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>