<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PDSAdvancedPricingCalculator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The advanced pricing calculator.
/// </summary>
class PDSAdvancedPricingCalculator extends PDSAdvancedPricing
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculationId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the calulation ID used by the current advanced pricing calculator.
    /// </summary>
    /// <returns>
    ///     The calculation ID to use.
    /// </returns>
    /// <remarks>
    ///     Obsolescent. This method would not be needed in the new design. Provided to override the required method.
    /// </remarks>
    protected PDSCalculationId calculationId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>calEquation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Computes the adjusted unit price using the stored calculation equation.
    /// </summary>
    /// <returns>
    ///     The calculated adjusted unit price.
    /// </returns>
    public Price calEquation()
    {
        ProdMathEvaluator   mathEvaluator;
        Price               price;
        str                 numericFormula;

        calcError = false;

        numericFormula = this.applyElementMapToFormula(pdsCalculationTable.CalculationText);
        if (!calcError)
        {
            mathEvaluator = ProdMathEvaluator::construct();
            mathEvaluator.parmCalculationExpression(numericFormula);
            mathEvaluator.parmHandleException(!hideMessage);
            mathEvaluator.parmThrowOnError(throwException);
            price = mathEvaluator.evaluateExpression();
        }

        return price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTableModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the <c>InventTableModule</c> record appropriate for the current item and module.
    /// </summary>
    /// <returns>
    ///     Always returns null as it is not applicable.
    /// </returns>
    protected InventTableModule inventTableModule()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the inventory transaction ID for the main table record.
    /// </summary>
    /// <returns>
    ///     The inventory transaction ID for the main record that this will be computing a advanced price for.
    /// </returns>
    /// <remarks>
    ///     Obsolescent. This method would not be needed in the new design. Provided to override the required method.
    /// </remarks>
    protected InventTransId inventTransId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the item ID on the line.
    /// </summary>
    /// <returns>
    ///     The item ID on the line.
    /// </returns>
    /// <remarks>
    ///     Obsolescent. This method would not be needed in the new design. Provided to override the required method.
    /// </remarks>
    protected ItemId itemId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the quantity to use for the equation processing.
    /// </summary>
    /// <returns>
    ///     The quantity to use for advancing calculation equation processing.
    /// </returns>
    /// <remarks>
    ///     Obsolescent. This method would not be needed in the new design. Provided to override the required method.
    /// </remarks>
    protected Qty qty()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the unit price on the line.
    /// </summary>
    /// <returns>
    ///     The unit price on the line.
    /// </returns>
    /// <remarks>
    ///     Obsolescent. This method would not be needed in the new design. Provided to override the required method.
    /// </remarks>
    protected PriceCur unitPrice()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PDSAdvancedPricingCalculator construct()
    {
        return new PDSAdvancedPricingCalculator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAdvancedPricingCalculator</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs an <c>PDSAdvancedPricingCalculator</c> object.
    /// </summary>
    /// <param name="_calculationTable">
    ///     The <c>PDSCalculationTable</c> buffer the advanced pricing calculator is to work on.
    /// </param>
    /// <returns>
    ///     The <c>PDSAdvancedPricingCalculator</c> object.
    /// </returns>
    public static PDSAdvancedPricing newAdvancedPricingCalculator(pdsCalculationTable _calculationTable)
    {
        PDSAdvancedPricing calculator = PDSAdvancedPricingCalculator::construct();
        calculator.parmPDSCalculationTable(_calculationTable);

        return calculator;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>