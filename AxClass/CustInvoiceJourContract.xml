<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceJourContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustInvoiceJourContract</c> class is the Data Contract class for the <c>CustInvoiceJour</c>
/// SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>CustInvoiceJour</c> SSRS Report.
/// </remarks>
[
DataContractAttribute,
SysOperationContractProcessingAttribute(classStr(CustInvoiceJourUIBuilder ), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly),
SysOperationGroupAttribute('Criteria',"@SYS8815",'1')
]
public class CustInvoiceJourContract
    implements SysOperationValidatable, SysOperationInitializable
{
    PurchMarkupCode miscChargesCode;
    TaxCode salesTaxCode;
    boolean showCurrency;

    List billingClassification;
    NoYes inclTransWithNoBillingClass;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes data contract values.
    /// </summary>
    public void initialize()
    {
        billingClassification = new List(Types::String);

        if (!CustParameters::isBillingClassificationEnabled())
        {
            billingClassification.addEnd(SysLabel::labelId2String(literalStr("@GLS223107")));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingClassification</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('BillingClassification'),
        SysOperationLabelAttribute(literalStr("@SPS371")),
        SysOperationHelpTextAttribute(literalStr("@SPS677")),
        SysOperationDisplayOrderAttribute('0'),
        AifCollectionTypeAttribute('return', Types::String)
    ]
    public List parmBillingClassification(List _billingClassification = billingClassification)
    {
        billingClassification = _billingClassification;
        return billingClassification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTransWithNoBillingClass</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('InclTransWithNoBillingClass'),
        SysOperationLabelAttribute(literalStr("@SPS691")),
        SysOperationHelpTextAttribute(literalStr("@SPS1009")),
        SysOperationDisplayOrderAttribute('0')
    ]
    public NoYes parmInclTransWithNoBillingClass(NoYes _inclTransWithNoBillingClass = inclTransWithNoBillingClass)
    {
        inclTransWithNoBillingClass = _inclTransWithNoBillingClass;
        return inclTransWithNoBillingClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMiscChargesCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter MiscChargesCode.
    /// </summary>
    /// <param name="_miscChargesCode">
    /// The new value of the datacontract parameter MiscChargesCode; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter MiscChargesCode
    /// </returns>
    [
        DataMemberAttribute('MiscChargesCode'),
        SysOperationLabelAttribute(literalstr("@SYS177551")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public SalesMarkupCode parmMiscChargesCode(SalesMarkupCode _miscChargesCode = miscChargesCode)
    {
        miscChargesCode = _miscChargesCode;
        return miscChargesCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesTaxCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter SalesTaxCode.
    /// </summary>
    /// <param name="_salesTaxCode">
    /// The new value of the datacontract parameter SalesTaxCode; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter SalesTaxCode
    /// </returns>
    [
        DataMemberAttribute('SalesTaxCode'),
        SysOperationLabelAttribute(literalstr("@SYS177552")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public TaxCode parmSalesTaxCode(TaxCode _salesTaxCode = salesTaxCode)
    {
        salesTaxCode = _salesTaxCode;
        return salesTaxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ShowCurrency.
    /// </summary>
    /// <param name="_showCurrency">
    /// The new value of the datacontract parameter ShowCurrency; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ShowCurrency
    /// </returns>
    [
        DataMemberAttribute('ShowCurrency'),
        SysOperationLabelAttribute(literalstr("@SYS53020")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public boolean parmShowCurrency(boolean _showCurrency = showCurrency)
    {
        showCurrency = _showCurrency;
        return showCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the dialog values for errors.
    /// </summary>
    /// <returns>
    /// false if an error has occurred in the dialog values; otherwise, true .
    /// </returns>
    /// <remarks>
    /// The dialog values are handled through the contract.
    /// </remarks>
    public boolean validate()
    {
        boolean isValid = true;

        if (!BrazilParameters::isEnabled())
        {
            isValid = CustBillingClassificationReportManager::validate(billingClassification, inclTransWithNoBillingClass);
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>