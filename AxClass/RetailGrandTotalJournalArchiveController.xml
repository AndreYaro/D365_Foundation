<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailGrandTotalJournalArchiveController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Retail archive report.
/// </summary>
public class RetailGrandTotalJournalArchiveController extends ERFormatMappingRunBaseController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (!_args || _args.record().TableId != tableNum(RetailGrandTotalJournalTable))
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        RetailGrandTotalJournalArchiveController controller = RetailGrandTotalJournalArchiveController::constructFromGrandTotalJournal(_args.record());

        controller.parmDialogCaption("@RetailGrandTotalJournal:RetailDataArchive");
        controller.parmShowDialog(true);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromGrandTotalJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the class instance from the journal table record.
    /// </summary>
    /// <param name="_grandTotalJournalTable">
    /// The journal table record.
    /// </param>
    /// <returns>
    /// The class instance.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Throws exception if journal not in the closed status.
    /// </exception>
    public static RetailGrandTotalJournalArchiveController constructFromGrandTotalJournal(RetailGrandTotalJournalTable _grandTotalJournalTable)
    {
        if (_grandTotalJournalTable.Status != RetailGrandTotalJournalStatus::Closed)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        RetailGrandTotalJournalArchiveController controller = new RetailGrandTotalJournalArchiveController(
            classStr(RetailGrandTotalJournalArchiveService),
            methodStr(RetailGrandTotalJournalArchiveService, run),
            SysOperationExecutionMode::Synchronous);

        RetailGrandTotalJournalArchiveContract contract = controller.getDataContractObject() as RetailGrandTotalJournalArchiveContract;
        contract.initFromGrandTotalJournalTable(_grandTotalJournalTable);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>