<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransOpenPerDateController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustVendTransOpenPerDateController</c> class is the controller class for the
///    <c>CustVendTransOpenPerDate</c> report.
/// </summary>
public class CustVendTransOpenPerDateController extends CustVendTransOpenStmtController implements BatchRetryable
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides ability to modify the report contract before dialog is shown to user.
    /// </summary>
    /// <remarks>
    /// Use this method to change the report contract, common use case is to add/change a Query Important
    /// note: This method is called only during interactive scenario, before rendering the UI to user.For
    /// batch scenario, we do not invoke this method, since there is no user interaction and contract
    /// values are already saved in batch.DO NOT instantiate any instance varibles in this code if they are
    /// used during the lifetime of controller, since these will fail in batch cases.
    /// </remarks>
    protected void prePromptModifyContract()
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL, #isoEE, #isoLT, #isoLV, #isoHU, #isoCZ]))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunValidate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the opportunity for validation prior to running the report.
    /// </summary>
    /// <returns>
    /// A container that contains two items.
    /// </returns>
    protected container preRunValidate()
    {
        container ret;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL, #isoEE, #isoLT, #isoLV, #isoHU, #isoCZ]))
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and initializes a <c>CustVendTransOpenPerDateController</c> class instance.
    /// </summary>
    /// <param name="_args">
    ///    The collection of arguments in an instance of the <c>Args</c> class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>CustVendTransOpenPerDateController</c> class.
    /// </returns>
    public static CustVendTransOpenPerDateController construct(Args _args)
    {
        CustVendTransOpenPerDateController controller = new CustVendTransOpenPerDateController();
        controller.parmReportName(CustVendTransOpenPerDateController::getReportName());
        controller.parmArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Obtains the report name and design name based on the country context.
    /// </summary>
    /// <returns>
    ///    The report and design name.
    /// </returns>
    public static SRSCatalogItemName getReportName()
    {
        SRSCatalogItemName reportName;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL, #isoEE, #isoLT, #isoLV, #isoHU, #isoCZ]))
        {
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceEEU00051, funcName());
            reportName = ssrsReportStr(CustVendTransOpenPerDate, Report);
        }
        else if (BrazilParameters::isEnabled())
        {
            reportName = ssrsReportStr(CustTransOpenPerDate, ReportBR);
        }
        else
        {
            reportName = ssrsReportStr(CustTransOpenPerDate, Report);
        }

        return reportName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceEEU00010, funcName());

        CustVendTransOpenPerDateController::construct(args).startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>