<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLoadBuildInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for load build instrumentation logging.
/// </summary>
internal final class WHSLoadBuildInstrumentationActivities
{
    private const str ActivityNamePrefix = 'LoadBuild.';

    private WHSInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static WHSLoadBuildInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSLoadBuildInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLoads</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext buildLoads()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'BuildLoads'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>builtLoads</Name>
				<Source><![CDATA[
    public void builtLoads(
        SysInstrumentationActivityContext   _activityContext,
        int                                 _loadBuildTemplateCount)
    {
        _activityContext.addCustomProperty('BuildLoads.LoadBuildTemplateCount', any2Str(_loadBuildTemplateCount));
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLoadsFromTemplate</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext buildLoadsFromTemplate(
        WHSCreateLoads          _createLoads,
        WHSUseOpenLoads         _useOpenLoads,
        WHSValidateVolumetrics  _validateVolumetrics,
        WHSAllowLoadLineSplit   _allowLoadLineSplit)
    {
        var activity = logger.activity(ActivityNamePrefix + 'BuildLoadsFromTemplate');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty('LoadBuildTemplate.CreateLoads', any2Str(_createLoads))
            .addCustomProperty('LoadBuildTemplate.UseOpenLoads', any2Str(_useOpenLoads))
            .addCustomProperty('LoadBuildTemplate.ValidateVolumetrics', any2Str(_validateVolumetrics))
            .addCustomProperty('LoadBuildTemplate.AllowLoadLineSplit', any2Str(_allowLoadLineSplit));

        return activityContext;

    }

]]></Source>
			</Method>
			<Method>
				<Name>builtLoadsFromTemplate</Name>
				<Source><![CDATA[
    public void builtLoadsFromTemplate(
        SysInstrumentationActivityContext   _activityContext,
        int                                 _shipmentLineCount,
        int                                 _createdLoadCount,
        int                                 _addShipmentLineCount,   
        int                                 _maxOpenLoadCount)
    {
        _activityContext.addCustomProperty('BuildLoads.ShipmentLineCount', any2Str(_shipmentLineCount));
        _activityContext.addCustomProperty('BuildLoads.CreatedLoadCount', any2Str(_createdLoadCount));
        _activityContext.addCustomProperty('BuildLoads.AddShipmentLineCount', any2Str(_addShipmentLineCount));
        _activityContext.addCustomProperty('BuildLoads.MaxOpenLoadCount', any2Str(_maxOpenLoadCount));
    }

]]></Source>
			</Method>
			<Method>
				<Name>evaluateLoadBuildTemplate</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext evaluateLoadBuildTemplate()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'EvaluateLoadBuildTemplate'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>evaluatedLoadBuildTemplate</Name>
				<Source><![CDATA[
    public void evaluatedLoadBuildTemplate(
        SysInstrumentationActivityContext   _activityContext,
        boolean                             _validShipmentFound,
        int                                 _evaluatedShipmentCount)
    {
        _activityContext.addCustomProperty('EvaluateLoadBuildTemplate.ValidShipmentFound', any2Str(_validShipmentFound));
        _activityContext.addCustomProperty('EvaluateLoadBuildTemplate.EvaluatedShipmentCount', any2Str(_evaluatedShipmentCount));
    }

]]></Source>
			</Method>
			<Method>
				<Name>evaluateBreakBy</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext evaluateBreakBy()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'EvaluateBreakBy'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>evaluatedBreakBy</Name>
				<Source><![CDATA[
    public void evaluatedBreakBy(
        SysInstrumentationActivityContext   _activityContext,
        boolean                             _matchingLoadFound,
        int                                 _breakByCount,
        TableId                             _breakByTableId,
        FieldId                             _breakByFieldId)
    {
        _activityContext.addCustomProperty('EvaluateBreakBy.MatchingLoadFound', any2Str(_matchingLoadFound));
        _activityContext.addCustomProperty('EvaluateBreakBy.BreakByCount', any2Str(_breakByCount));
        _activityContext.addCustomProperty('LoadBuildTemplateLine.BreakByTableId', any2Str(_breakByTableId));
        _activityContext.addCustomProperty('LoadBuildTemplateLine.BreakByFieldId', any2Str(_breakByFieldId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>