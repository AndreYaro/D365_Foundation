<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustGenerateQRCode_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>CustGenerateQRCode_W</c> is responsible for QR code creation.
/// </summary>
internal final class CustGenerateQRCode_W
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateQRCodeFromBase64</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate a QR code from base 64.
    /// </summary>
    /// <param name = "_qrCodeBase64">QR code in base 64</param>
    /// <returns>The QR code.</returns>
    internal static Bitmap generateQRCodeFromBase64(str _qrCodeBase64)
    {
        Bitmap qrCode;

        EFDocQRCode_BR generateQR = new EFDocQRCode_BR();
        generateQR.parmErrorCorrectionLevel(QRCodeErrorCorrectionLevel::Medium);

        try
        {
            qrCode = generateQR.generateQRCode(_qrCodeBase64);
        }
        catch (Exception::CLRError)
        {
            warning("@ApplicationSuite_Localization:QRCodeIsDamaged");
        }

        return qrCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>decodeBase64String</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Decode the Base64 encoded string
    /// </summary>
    /// <param name = "base64EncodedString">Base64 encoded string</param>
    /// <returns>decoded string</returns>
    internal static str decodeBase64String(str base64EncodedString)
    {
        // Convert the Base64 encoded string to a byte array
        System.Byte[] byteArray = System.Convert::FromBase64String(base64EncodedString);
    
        // Decode the byte array to a string
        return System.Text.Encoding::Default.GetString(byteArray);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>