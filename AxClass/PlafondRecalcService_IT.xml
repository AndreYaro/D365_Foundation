<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlafondRecalcService_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PlafondRecalcService</c> class gets actions
/// for plafond balances recalculating.
/// </summary>
public class PlafondRecalcService_IT extends SysOperationServiceBase
{
    Plafond_IT plafond;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>runRecalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs plafond balances recalculating opertaions.
    /// </summary>
    /// <param name = "_dataContract">The data contract to be used for plafond balances recalculation.</param>
    public void runRecalc(PlafondRecalcDataContract_IT _dataContract)
    {
        ttsbegin;

        plafond = _dataContract.parmPlafond();
        plafond.selectForUpdate(true);
        plafond.CurrentAmount = 0;

        PlafondUpdate_IT plafondUpdate = new plafondUpdate_IT(plafond, false);

        PlafondPeriodTrans_IT plafondPeriodTrans;

        delete_from plafondPeriodTrans
            where plafondPeriodTrans.PlafondId == plafond.PlafondId;

        TaxTrans taxTrans;
        TaxTrans_IT taxTrans_IT;

        while select taxTrans
            exists join taxTrans_IT
            order by taxTrans_IT.PlafondDate
            where taxTrans_IT.TaxTrans == taxTrans.RecId
                && taxTrans_IT.PlafondId == plafond.PlafondId
                && taxTrans_IT.PlafondDate >= plafond.FromDate
                && taxTrans_IT.PlafondDate <= plafond.ToDate
        {
            plafondUpdate.addTaxTrans(taxTrans);
        }

        plafondUpdate.post();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>