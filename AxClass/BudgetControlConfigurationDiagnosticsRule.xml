<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlConfigurationDiagnosticsRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetControlConfigurationDiagnosticsRule</c> class is used to determine whether any ledger has an active budget control configuration.
/// </summary>
[DiagnosticsRuleAttribute]
public class BudgetControlConfigurationDiagnosticsRule implements IDiagnosticsRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether a budget control configuration is active when the budget control configuration key is enabled.
    /// </summary>
    /// <returns>
    /// An instance of <c>DiagnosticsRuleValidationResult</c> which contains the validation result.
    /// </returns>
    [DiagnosticsRuleSubscription(
        DiagnosticsArea::Financial,
        "@Budget:DiagnosticsRuleBudgetControlConfigurationEnabled",
        DiagnosticsRunFrequency::Monthly,
        "@Budget:DiagnosticsRuleBudgetControlConfigurationEnabledDescription")]
    public DiagnosticsRuleValidationResult validate()
    {
        DiagnosticsRuleValidationResult validationResult = DiagnosticsRuleValidationResult::newWithAreaName("@Budget:BudgetControlConfiguration");

        if (isConfigurationkeyEnabled(configurationKeyNum(LedgerAdv2BudgetCtrl)))
        {
            BudgetControlConfiguration budgetControlConfiguration;

            // Determine whether any ledger has an active budget control configuration.
            select firstonly RecId from budgetControlConfiguration
                where budgetControlConfiguration.IsActive == NoYes::Yes;

            if (!budgetControlConfiguration)
            {
                validationResult.addValidationResult(
                    "@Budget:DiagnosticsRuleBudgetControlConfigurationEnabledMessage",
                    DiagnosticsValidationSeverity::Low,
                    "@Budget:DiagnosticsRuleBudgetControlConfigurationEnabledRecommendation");
            }
        }

        return validationResult;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>