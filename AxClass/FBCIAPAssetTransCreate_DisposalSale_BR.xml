<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBCIAPAssetTransCreate_DisposalSale_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Creates the disposal sales transaction
/// </summary>
class FBCIAPAssetTransCreate_DisposalSale_BR extends FBCIAPAssetTransCreate_BR
{
    FBCIAPAssetTable_BR     fbCIAPAssetTable;
    AssetTrans              assetTrans;

    FiscalDocument_BR       fiscalDocument;
    FiscalDocumentLine_BR   fiscalDocumentLine;

    boolean                 soldByJournal;
    NoYesId                 calculateInstallmentForOutgoing;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcInstallment</Name>
				<Source><![CDATA[
        private void calcInstallment()
    {
        FBCIAPCreditCalc_BR ciapCreditCalc;

        ciapCreditCalc = FBCIAPCreditCalc_BR::construct(this.parmCIAPAssetTable());

        fbCIAPAssetTrans.InstallmentAmount      = ciapCreditCalc.calc();
        fbCIAPAssetTrans.InstallmentNum         = ciapCreditCalc.installmentNum();
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
        public void create()
    {
        this.findFiscalDocument();

        if (soldByJournal || fiscalDocument.RecId)
        {
            if (!fbCIAPAssetTrans)
            {
                fbCIAPAssetTrans.FBCIAPAssessment_BR     = ciapAssessment.RecId;
                fbCIAPAssetTrans.FBCIAPAssetTable_BR    = fbCIAPAssetTable .RecId;
                fbCIAPAssetTrans.TransType              = FBCIAPAssetTransType_BR::ATSale;
                fbCIAPAssetTrans.TransDate              = assetTrans.TransDate;

                fbCIAPAssetTrans.ICMSAmount             = fbCIAPAssetTable.ICMSAmount;
                fbCIAPAssetTrans.ICMSSTAmount           = fbCIAPAssetTable.ICMSSTAmount;
                fbCIAPAssetTrans.ICMSDiffAmount         = fbCIAPAssetTable.ICMSDiffAmount;
                fbCIAPAssetTrans.ICMSFreightAmount      = fbCIAPAssetTable.ICMSFreightAmount;

                if (calculateInstallmentForOutgoing)
                {
                    this.calcInstallment();
                }

                fbCIAPAssetTrans.OrigAssetTrans         = assetTrans.RecId;
                fbCIAPAssetTrans.write();
            }
            else
            {
                select firstOnly forUpdate fbCIAPAssetTrans
                    where fbCIAPAssetTrans.OrigAssetTrans == assetTrans.RecId;
            }

            if (fiscalDocument.RecId)
            {
                this.initFromFiscalDocument();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFiscalDocument</Name>
				<Source><![CDATA[
        private void findFiscalDocument()
    {
        FBBookingPeriodFiscalDocument_BR bookingPeriodFiscalDocument;

        if (!fiscalDocument)
        {
            select firstOnly fiscalDocument
                where fiscalDocument.RefTableId == tableNum(CustInvoiceJour)
                    && fiscalDocument.Voucher          == assetTrans.Voucher
                    && fiscalDocument.AccountingDate   == assetTrans.TransDate
                join fiscalDocumentLine
                where fiscalDocumentLine.FiscalDocument == fiscalDocument.RecId
                    && fiscalDocumentLine.AssetId       == assetTrans.AssetId;

            if (!fiscalDocument)
            {
                soldByJournal = true;

                warning("@SYS4006817");
            }
            else
            {
                select RecId from bookingPeriodFiscalDocument
                    where bookingPeriodFiscalDocument.FBBookingPeriod_BR == bookingPeriod.RecId
                        && bookingPeriodFiscalDocument.FiscalDocument_BR == fiscalDocument.RecId;

                if (!bookingPeriodFiscalDocument)
                {
                    fiscalDocument.clear();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxAmounts</Name>
				<Source><![CDATA[
        private container getTaxAmounts()
    {
        FBCIAPAssetTrans_BR             ciapAssetTrans;

        select sum(icmsAmount), sum(icmsSTAmount), sum(icmsDiffAmount) from ciapAssetTrans
            where ciapAssetTrans.FBCIAPAssetTable_BR == fbCIAPAssetTable.RecId
                && ciapAssetTrans.TransType == FBCIAPAssetTransType_BR::IM;

        return [ciapAssetTrans.icmsAmount, ciapAssetTrans.icmsSTAmount, ciapAssetTrans.icmsDiffAmount];
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromFiscalDocument</Name>
				<Source><![CDATA[
        private void initFromFiscalDocument()
    {
        FBCIAPAssetTrans_FiscalDoc_BR fbCIAPAssetTrans_FiscalDoc;

        fbCIAPAssetTrans_FiscalDoc.FBCIAPAssetTable_BR      = fbCIAPAssetTable.RecId;
        fbCIAPAssetTrans_FiscalDoc.FBCIAPAssetTrans_BR      = fbCIAPAssetTrans.RecId;
        fbCIAPAssetTrans_FiscalDoc.FiscalDocument_BR        = fiscalDocument.RecId;
        fbCIAPAssetTrans_FiscalDoc.FiscalDocumentLine_BR    = fiscalDocumentLine.RecId;
        fbCIAPAssetTrans_FiscalDoc.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetTrans</Name>
				<Source><![CDATA[
        public AssetTrans parmAssetTrans(AssetTrans _assetTrans = assetTrans)
    {
        assetTrans = _assetTrans;

        return assetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalculateInstallmentForOutgoing</Name>
				<Source><![CDATA[
        public NoYesId parmCalculateInstallmentForOutgoing(NoYesId _calculateInstallmentForOutgoing = calculateInstallmentForOutgoing)
    {
        calculateInstallmentForOutgoing = _calculateInstallmentForOutgoing;

        return calculateInstallmentForOutgoing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCIAPAssetTable</Name>
				<Source><![CDATA[
        public FBCIAPAssetTable_BR parmCIAPAssetTable(FBCIAPAssetTable_BR _fbCIAPAssetTable = fbCIAPAssetTable)
    {
        fbCIAPAssetTable = _fbCIAPAssetTable;

        _fbCIAPAssetTable.selectForUpdate(true);

        return fbCIAPAssetTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>