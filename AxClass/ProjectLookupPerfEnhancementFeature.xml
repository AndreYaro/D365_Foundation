<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjectLookupPerfEnhancementFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation;
/// <summary>
/// The <c>ProjectLookupPerfEnhancementFeature</c> class defines the enable performance improvement in project lookup.
/// The change is behind feature flag to reduce impact on customizations.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
[Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
[FeatureMetadataConfigurationKey(configurationKeyStr(Project))]
[SysObsolete('ProjectLookupPerfEnhancementFeature class is Obsolete and cannot not be used', false, 31\05\2023)]
public final class ProjectLookupPerfEnhancementFeature implements IFeatureMetadata
{
    private static ProjectLookupPerfEnhancementFeature instance;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements constructor for <c>ProjectLookupPerfEnhancementFeature</c> class.
    /// </summary>
    private void new()
    {

    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    /// <summary>
    /// The static constructor for <c>ProjectLookupPerfEnhancementFeature</c> class.
    /// </summary>
    private static void typeNew()
    {
        instance = new ProjectLookupPerfEnhancementFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>ProjectLookupPerfEnhancementFeature</c> instance.</returns>
    [Hookable(false)]
    public static ProjectLookupPerfEnhancementFeature instance()
    {
        return ProjectLookupPerfEnhancementFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the label Id of the feature that is shown on the feature management workspace
    /// </summary>
    /// <returns>Label for the feature.</returns>
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Proj:ProjectLookupPerfEnhancementFeature");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the application module of the feature that is displayed on the feature management workspace.
    /// </summary>
    /// <returns>
    /// The application module value of the feature that is displayed on the feature management workspace.
    /// </returns>
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::ProjectManagementAndAccounting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the label Id that is displayed as summary of the feature.
    /// </summary>
    /// <returns>Summary for the feature.</returns>
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Proj:ProjectLookupPerfEnhancementFeatureDesc");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// A forward link to the Microsoft documentation of the feature.
    /// </summary>
    /// <returns> URL to the Microsoft documentation of the feature.</returns>
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return "https://aka.ms/ProjectPerfLookup";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the feature is enabled by default.
    /// </summary>
    /// <returns>true when feature is enabled by default; otherwise false.</returns>
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Determines whether the user can disable the feature.
    /// </summary>
    /// <returns>true when user have capability to disable feature; otherwise false.</returns>
    [Hookable(false)]
    public boolean canDisable()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the feature can be enabled.
    /// </summary>
    /// <returns>True, if receipt url is updated by LCS add-in and expense re-imagined feature is enabled; otherwise false.</returns>
    public boolean canEnable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>