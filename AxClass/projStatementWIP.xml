<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjStatementWIP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class   ProjStatementWIP
extends projStatement
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a zero cost amount.
    /// </summary>
    /// <returns>
    /// A zero cost amount.
    /// </returns>
    AmountMST costAmount()
    {
        return this.B200_TotalCostPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerAccruedCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether <c>ProjAccruedCost</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    boolean ledgerAccruedCost()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerSalesvalueOffset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjSalesvalueOffset</c> and <c>ProjWIPSubscription</c> ledger postings are
    /// included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerSalesvalueOffset()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerStatusAccountItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjStatusAccountItem</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerStatusAccountItem()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerWIPCostvalue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjWIPCostvalue</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerWIPCostvalue()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerWIPInvoicedOnAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjWIPInvoicedOnAccount</c> ledger postings are included in the
    /// calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerWIPInvoicedOnAccount()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerWIPProduction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjWIPProduction</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerWIPProduction()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerWIPProfit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjWIPProfit</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerWIPProfit()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerWIPSubscription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that subscription ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerWIPSubscription()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a zero sales amount.
    /// </summary>
    /// <returns>
    /// A zero sales amount.
    /// </returns>
    AmountMST salesAmount()
    {
        return this.B100_Salesvalue()- this.B400_WIP_Invoiced_OnAccount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transListQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a zero quantity.
    /// </summary>
    /// <returns>
    /// A zero quantity.
    /// </returns>
    ProjQty transListQty()
    {
        return this.B300_Gross_qty();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>