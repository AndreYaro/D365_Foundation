<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EePermissionChangesLogUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Builds the UI for the <c>EePermissionChangesLog</c> reports.
/// </summary>
/// <remarks>
/// This class is used by both the User Role and Security Rights change log reports.
/// </remarks>
[
    SrsReportNameAttribute('EePermissionChangesLog.UserRole'),
    SrsReportNameAttribute('EePermissionChangesLog.SecurityRights'),
    SysOperationContractProcessingAttribute(classstr(EePermissionChangesLogUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class EePermissionChangesLogUIBuilder extends SrsReportDataContractUIBuilder
{
    SrsReportRdlDataContract rdlContract;

    DialogField dialogUserId;
    DialogField dialogFromDate;
    DialogField dialogToDate;
    DialogField dialogReportView;

    private const str parameterReportView = 'ReportView';
    private const str parameterUserId = 'UserId';
    private const str parameterFromDate = 'FromDate';
    private const str parameterToDate = 'ToDate';
    private const str parameterQueriedByUserName = 'QueriedByUserName';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add fields to the dialog which align with the visible report parameters.
    /// </summary>
    public void build()
    {
        Dialog parameterDialog = this.dialog();

        rdlContract = this.getRdlContract();

        dialogReportView = parameterDialog.addFieldValue(enumStr(PermissionChangesLogReportView), rdlContract.getValue(parameterReportView));
        dialogUserId = parameterDialog.addFieldValue(extendedTypeStr(UserId), rdlContract.getValue(parameterUserId));
        dialogFromDate = parameterDialog.addFieldValue(extendedTypeStr(FromDate), rdlContract.getValue(parameterFromDate));
        dialogToDate = parameterDialog.addFieldValue(extendedTypeStr(ToDate), rdlContract.getValue(parameterToDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Transfers data from the dialog into the data contract object.
    /// </summary>
    public void getFromDialog()
    {
        rdlContract.setValue(parameterReportView, dialogReportView.value());
        rdlContract.setValue(parameterUserId, dialogUserId.value());
        rdlContract.setValue(parameterFromDate, dialogFromDate.value());
        rdlContract.setValue(parameterToDate, dialogToDate.value());
        rdlContract.setValue(parameterQueriedByUserName, curuserid());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRdlContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>EePermissionChangesRdlContract</c> class instance associated with the report.
    /// </summary>
    /// <returns>
    /// The <c>EePermissionChangesRdlContract</c> instance associated with the report.
    /// </returns>
    public EePermissionChangesRdlContract getRdlContract()
    {
        return this.getRdlContractInfo().dataContractObject() as EePermissionChangesRdlContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defaults contract variables.
    /// </summary>
    public void preBuild()
    {
        date defaultFromDate;
        date defaultToDate;

        super();

        rdlContract = this.getRdlContract();

        defaultFromDate = rdlContract.getValue(parameterFromDate);
        defaultToDate = rdlContract.getValue(parameterToDate);

        if (!defaultFromDate || !defaultToDate)
        {
            rdlContract.setValue(parameterFromDate, DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()) - 7);
            rdlContract.setValue(parameterToDate, DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>