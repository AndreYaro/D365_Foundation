<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdJournalTransDataBOM</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProdJournalTransDataBOM extends ProdJournalTransData
{
    ProdJournalBOM  prodJournalBOM;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    void create(boolean _doInsert = false, boolean _initVoucherList = true)
    {
        if (prodJournalBOM.isProjMethodConsumed())
        {
            if (!prodJournalBOM.validateWrite())
                throw error("@SYS21628");

            ProjInventJournalTransMapForm::construct(prodJournalBOM).insertPost();
        }

        super(_doInsert, _initVoucherList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVoucher</Name>
				<Source><![CDATA[
    Voucher findVoucher()
    {
        ProdJournalBOM          tmpJournalTrans;
        Integer                 journalVoucherChange = journalTableData.journalTable().VoucherChange;

        switch (journalVoucherChange)
        {
            case ProdJournalVoucherChange::DateProdChange    :
                select firstonly Voucher from tmpJournalTrans
                    index hint ProdIdx
                    where tmpJournalTrans.JournalId    == prodJournalBOM.JournalId  &&
                          tmpJournalTrans.TransDate    == prodJournalBOM.TransDate  &&
                          tmpJournalTrans.ProdId       == prodJournalBOM.ProdId     &&
                          tmpJournalTrans.Voucher;

                return tmpJournalTrans.Voucher;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromJournalTable</Name>
				<Source><![CDATA[
    void initFromJournalTable()
    {
        ProdJournalTable prodJournalTable = journalTableData.journalTable();

        super();

        prodJournalBOM.ProdId                 = prodJournalTable.ProdId;
        prodJournalBOM.InventControlProposal  = prodJournalTable.InventControlProposal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVoucherObjectKeyValid</Name>
				<Source><![CDATA[
    boolean isVoucherObjectKeyValid()
    {
        Integer journalVoucherChange = journalTableData.journalTable().VoucherChange;

        switch (journalVoucherChange)
        {
            case ProdJournalVoucherChange::DateProdChange    :
                if (prodJournalBOM.isProjMethodConsumed())
                    return prodJournalBOM.TransDate && prodJournalBOM.ProjId && prodJournalBOM.ProjCategoryId ? true : false;
                else
                    return prodJournalBOM.TransDate && prodJournalBOM.ProdId ? true : false;
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(
        JournalTransMap     _journalTrans,
        JournalTableData    _journalTableData)
    {
        prodJournalBOM = _journalTrans;

        super(_journalTrans,_journalTableData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodId</Name>
				<Source><![CDATA[
    ProdId prodId()
    {
        return prodJournalBOM.ProdId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodJourType</Name>
				<Source><![CDATA[
    ProdJourType prodJourType()
    {
        return ProdJourType::Release;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucherObjectKey</Name>
				<Source><![CDATA[
    container voucherObjectKey()
    {
        Integer journalVoucherChange = journalTableData.journalTable().VoucherChange;

        switch (journalVoucherChange)
        {
            case ProdJournalVoucherChange::DateProdChange         :
                if (prodJournalBOM.isProjMethodConsumed())
                    return [prodJournalBOM.TransDate,prodJournalBOM.ProjId,prodJournalBOM.ProjCategoryId];
                else
                    return [prodJournalBOM.TransDate,prodJournalBOM.ProdId];
        }
        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>