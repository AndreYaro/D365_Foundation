<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchLineType_ProjectReturnItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
class       PurchLineType_ProjectReturnItem
extends     PurchLineType_Project
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canAgreementBeLinked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the purchase line can be linked to an agreement line.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    public boolean canAgreementBeLinked()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUpdatePhysical</Name>
				<Source><![CDATA[
    boolean checkUpdatePhysical()
    {
        boolean ret;

        ret = super();

        if (!purchLine.ReturnActionId)
        {
            setPrefix(#PreFixField(purchLine, itemId));
            ret = checkFailed("@SYS24906");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>creditNoteLine</Name>
				<Source><![CDATA[
    boolean creditNoteLine()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    void  initFromInventTable(
        InventTable  inventTable,
        boolean      _searchPrice = true,
        boolean      _setAddressFromInventDim = true,
        boolean      _initDateFields = true,
        boolean		 _executeOnlyIfProductIsFullySpecified = false)
    {
        super(inventTable, _searchPrice, _setAddressFromInventDim, _initDateFields, _executeOnlyIfProductIsFullySpecified);

        if (purchLine.PurchQty > 0)
        {
            purchLine.PurchQty      = 0;
            purchLine.QtyOrdered    = 0;
        }

        purchLine.ReturnActionId = PurchParameters::find().ReturnActionDefault;
        purchLine.returnActionChanged();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPurchQty</Name>
				<Source><![CDATA[
    void  initPurchQty()
    {
         purchLine.QtyOrdered = purchLine.calcQtyOrdered();
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyCreateReturnMarkupTrans</Name>
				<Source><![CDATA[
    protected void interCompanyCreateReturnMarkupTrans(AxSalesLine _axSalesLine)
    {
        _axSalesLine.salesLine().createReturnMarkupTrans(_axSalesLine.salesLine().salesTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanySyncEngine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the line-level synchronization engine for intercompany trade.
    /// </summary>
    /// <returns>A new instance of <c>InterCompanySyncPurchLineType</c> or one of its subclasses.</returns>
    public InterCompanySyncPurchLineType interCompanySyncEngine()
    {
        return InterCompanySyncPurchLineType_ProjectReturnItem::newFromPurchLineType(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyValidateDeleteQty</Name>
				<Source><![CDATA[
    protected boolean interCompanyValidateDeleteQty(SalesLine _salesLine)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventDirection</Name>
				<Source><![CDATA[
    public InventDirection defaultInventDirection()
    {
        return InventDirection::Issue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnExpectedRetQty</Name>
				<Source><![CDATA[
    protected ReturnExpectedRetQty returnExpectedRetQty(SalesQty _salesQty)
    {
        return _salesQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean  validateWrite()
    {
        boolean  ok = true;

        ok = super();

        if (purchLine.PurchQty > 0
        &&  purchLine.SkipUpdate == InterCompanySkipUpdate::No)
        {
            ok = checkFailed("@SYS53512");
        }

        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>