<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgFlexCheckDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgFlexCheckDP</c> class retrieves records for the <c>JmgPayAgreement</c> report.
/// </summary>
[
    SRSReportQueryAttribute(querystr(JmgFlexCheck))
]
class JmgFlexCheckDP extends SRSReportDataProviderBase
{
    JmgTmpFlexCheck         tmpFlexCheck;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getJmgTmpFlexCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the report data from the temporary table.
    /// </summary>
    /// <returns>
    /// The required report data from the temporary table.
    /// </returns>
    [SRSReportDataSetAttribute(tablestr(JmgTmpFlexCheck))]
    public JmgTmpFlexCheck getJmgTmpFlexCheck()
    {
        select tmpFlexCheck;
        return tmpFlexCheck;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    public void processReport()
    {
        QueryRun                queryRun         = new SysQueryRun(this.parmQuery());
        JmgEmployee             jmgEmployeeLocal;
        JmgFlexGroup            jmgFlexGroup;
        HcmWorker               hcmWorker;
        JmgStampJournalTable    jmgStampJournalTable;

        while (queryRun.next())
        {
            jmgStampJournalTable = queryRun.get(tablenum(JmgStampJournalTable));
            hcmWorker = queryRun.get(tablenum(HcmWorker));
            jmgFlexGroup = queryRun.get(tablenum(JmgFlexGroup));
            jmgEmployeeLocal = queryRun.get(tablenum(JmgEmployee));

            if (jmgFlexGroup && jmgFlexGroup.MinimumFlexBalanceSeconds > jmgStampJournalTable.PayFlexBalanceSeconds || jmgFlexGroup.MaximumFlexBalanceSeconds < jmgStampJournalTable.PayFlexBalanceSeconds)
            {
                //Make lines
                tmpFlexCheck.PersonnelNumber    = hcmWorker.PersonnelNumber;
                tmpFlexCheck.Name               = hcmWorker.name();
                tmpFlexCheck.FlexMinimum        = JmgProfileSeconds::formattedSeconds(jmgFlexGroup.MinimumFlexBalanceSeconds,JmgSecondPresentationEnum::Centitime);
                tmpFlexCheck.FlexMaximum        = JmgProfileSeconds::formattedSeconds(jmgFlexGroup.MaximumFlexBalanceSeconds,JmgSecondPresentationEnum::Centitime);
                tmpFlexCheck.FlexBalance        = JmgProfileSeconds::formattedSeconds(jmgStampJournalTable.PayFlexBalanceSeconds,JmgSecondPresentationEnum::Centitime);
                tmpFlexCheck.insert();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
