<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalPostingInstrumentation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerJournalCheckPostInstrumentation</c> holds static methods to emit telemetry based on journal posting.
/// </summary>
internal final static class LedgerJournalPostingInstrumentation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getActivityContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// It creates the SysInstrumentation activity context for the logging class.
    /// </summary>
    /// <param name = "_instrumentationNameSpace">The namespace for which the activity context will be created.</param>
    /// <param name = "_className">The class name for which the activity context will be created.</param>
    /// <param name = "_uniqueActivityName">The activity name for which we need to create the activity context.</param>
    /// <returns>Activity context that will be used by the telemetry.</returns>
    internal static SysInstrumentationActivityContext getActivityContext(str _instrumentationNameSpace, ClassName _className, str _uniqueActivityName)
    {
        SysInstrumentationLogger sysInstrumentationLogger = SysInstrumentationLoggerFactory::CreateLogger(_className);
        SysInstrumentationActivity sysInstrumentationActivity = SysInstrumentationActivity::construct(_uniqueActivityName,_instrumentationNameSpace);

        return sysInstrumentationLogger.activityContextWithCustomProperties(sysInstrumentationActivity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>