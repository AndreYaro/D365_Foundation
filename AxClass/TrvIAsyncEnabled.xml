<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvIAsyncEnabled</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// An interface for any expense form that exposes async writes.
/// </summary>
interface TrvIAsyncEnabled
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAsyncEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Holds whether async functionality is enabled or not.
    /// </summary>
    /// <param name = "asyncEnabled">If called for set, holds whether async is enabled or not.</param>
    /// <returns>Whether or not the form hsa async functionality enabled.</returns>
    boolean parmAsyncEnabled(boolean asyncEnabled = true)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>doAsyncAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Peform an asynchronous action.
    /// </summary>
    /// <param name = "recId">The recId of the record for which to perform the async action.</param>
    void doAsyncAction(RefRecId recId)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>asyncActionCallback</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method that gets invoked when the async action is complete.
    /// </summary>
    /// <param name = "taskResult">Result information of the asynchronous task.</param>
    void asyncActionCallback(AsyncTaskResult taskResult)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>waitForAllAsyncTasks</Name>
				<Source><![CDATA[
    /// <summary>
    /// Will wait for all asynchronous tasks in the form to complete.
    /// </summary>
    void waitForAllAsyncTasks()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>