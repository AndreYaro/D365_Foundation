<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkQuarantineExecutor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWorkQuarantineExecutor</c> class executes work related status change with additional options.
/// </summary>
internal class WHSWorkQuarantineExecutor
{
    private WHSWorkQuarantine                   workQuarantine;

    private InventHandlingQty                   inventHandlingQty;
    private boolean                             skipAllowMixedStatusCheck;
    private WHSCatchWeightTagDimensionUpdater   catchWeightTagDimensionUpdater;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSkipAllowMixedStatusCheck</Name>
				<Source><![CDATA[
    public boolean parmSkipAllowMixedStatusCheck(boolean _skipAllowMixedStatusCheck = skipAllowMixedStatusCheck)
    {
        skipAllowMixedStatusCheck = _skipAllowMixedStatusCheck;

        return skipAllowMixedStatusCheck;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventHandlingQty</Name>
				<Source><![CDATA[
    public InventHandlingQty parmInventHandlingQty(InventHandlingQty _inventHandlingQty = inventHandlingQty)
    {
        inventHandlingQty = _inventHandlingQty;

        return inventHandlingQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCatchWeightTagDimensionUpdater</Name>
				<Source><![CDATA[
    public WHSCatchWeightTagDimensionUpdater parmCatchWeightTagDimensionUpdater(WHSCatchWeightTagDimensionUpdater _catchWeightTagDimensionUpdater =catchWeightTagDimensionUpdater)
    {
        catchWeightTagDimensionUpdater = _catchWeightTagDimensionUpdater;

        return catchWeightTagDimensionUpdater;
    }

]]></Source>
			</Method>
			<Method>
				<Name>catchWeightTagDimensionUpdater</Name>
				<Source><![CDATA[
    private WHSCatchWeightTagDimensionUpdater catchWeightTagDimensionUpdater()
    {
        if (catchWeightTagDimensionUpdater)
        {
            return catchWeightTagDimensionUpdater;
        }

        return WHSCatchWeightTagDimensionUpdater::newWorkQuarantine(workQuarantine, inventHandlingQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        // empty
    }

]]></Source>
			</Method>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the status change update.
    /// </summary>
    [Hookable(false)]
    internal void execute()
    {
        ttsbegin;

        workQuarantine.executeHandlingQty(inventHandlingQty, skipAllowMixedStatusCheck);

        if (WHSInventTable::isCatchWeightTagTracked(workQuarantine.ItemId) 
            && WHSInventTable::catchWeightTagDimensionTrackingMethod(workQuarantine.ItemId) == WHSCatchWeightTagDimensionTrackingMethod::ProductTrackingAndAllStorageDimensions)
        {
            this.catchWeightTagDimensionUpdater().updateCatchWeightTags();
        }
        
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWorkQuarantine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>WHSWorkQuarantineExecutor</c> class with parameters set.
    /// </summary>
    /// <param name = "_workQuarantine">
    /// The record in the <c>WHSWorkQuarantine</c> table for the status change.
    /// </param>
    /// Handling quantity of the items to be quarantined.
    /// </param>
    /// <param name="_skipAllowMixedStatusCheck">
    /// Determines if the mixed status check must be skipped.
    /// <returns>A new instance of the <c>WHSWorkQuarantineExecutor</c> class with parameters set.</returns>
    [Hookable(false)]
    internal static WHSWorkQuarantineExecutor newWorkQuarantine(WHSWorkQuarantine _workQuarantine, InventHandlingQty _inventHandlingQty, boolean _skipAllowMixedStatusCheck)
    {
        WHSWorkQuarantineExecutor workQuarantineExecutor = new WHSWorkQuarantineExecutor();

        workQuarantineExecutor.workQuarantine = _workQuarantine;
        workQuarantineExecutor.skipAllowMixedStatusCheck = _skipAllowMixedStatusCheck;
        workQuarantineExecutor.inventHandlingQty = _inventHandlingQty;

        return workQuarantineExecutor;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>