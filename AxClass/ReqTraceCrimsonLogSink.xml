<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqTraceCrimsonLogSink</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class for writing log messages to Crimson logger. ReqTraceCrimsonLogger forwards messages to this class and this class forwards it further to managed code which does actual logging.
/// </summary>
class ReqTraceCrimsonLogSink implements ReqTraceLogSinkProviderInterface
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeToLog</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sends message further to managed code that does actual logging.
    /// </summary>
    /// <param name="_message">
    /// Message to be logged
    /// </param>
    /// <param name="_logEventType">
    /// Type of event
    /// </param>
    /// <param name="_parameterValues">
    /// Collection that contains all values used to create message
    /// </param>
    public void writeToLog(str _message, Microsoft.Dynamics.AX.Planning.JobScheduling.LoggingEventType _logEventType, System.Collections.ArrayList _parameterValues)
    {
        Microsoft.Dynamics.AX.Planning.JobScheduling.Logger::Log(_message, _logEventType, _parameterValues.ToArray());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ReqTraceCrimsonLogSink construct()
    {
        return new ReqTraceCrimsonLogSink();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>