<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailConnSeedDataGenerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;
/// <summary>
/// The <c>RetailConnSeedDataGenerator</c> class generates all the retail seed data.
/// </summary>
class RetailConnSeedDataGenerator extends RunBase
{
    private static CommerceHQEventSource eventSource = CommerceHQEventSource::Log;
    private const str BaseUrl = 'https://retail.rsu.powerapps.com';
    private const str ExtensionServiceAppName = 'CommerceExtensionApp';
    private const str ExtensionServiceName = 'Dynamics365CommerceExtensionService';
    int progressCounter;

    RecordInsertList listPosIsButtonGrid;
    RecordInsertList listPosIsButtonGridButtons;
    RecordInsertList listPosIsFormLayout;
    RecordInsertList listPosIsImages;
    RecordInsertList listPosIsOperations;
    RecordInsertList listPosIsPermissions;
    RecordInsertList listPosIsPermissionsEx;
    RecordInsertList listPermissionGroup;
    RecordInsertList listPosIsThemes;
    RecordInsertList listSupportedCountryRegion;
    RecordInsertList listRetailHour;
    RecordInsertList listRetailChannelReport;
    RecordInsertList listRetailChannelReportString;

    #DEFINE.CurrentVersion(1)

    #DEFINE.NumberOfRecords(43)

    #define.Facebook_MediaTypeId("@RET4160154")
    #define.Facebook_MediaDescription("@RET4160155")
    #define.Twitter_MediaTypeId("@RET4160156")
    #define.Twitter_MediaDescription("@RET4160157")
    #define.Windows8ScreenLayoutId('2')
    #define.AttributeSearchKeywords("@REX4520310")
    #define.ProvisionedChannelAttributeText("@REX4520311")
    #define.ProvisionedChannelAttributeBoolean("@REX4520312")
    #define.ProvisionedChannelAttributeDecimal("@REX4520314")
    #define.ProvisionedChannelAttributeReference("@REX4520313")
    #define.SharePointProvisionedProductAttributeGroup("@REX4520315")
    #define.StoreProvisionedProductAttributeGroup("@REX4520316")
    #define.defaultLayoutSizeName('PC1366x768')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addRetailDeviceType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds device type to RecordInsertList, if it doesn't exist in RetailDeviceTypes table.
    /// </summary>
    /// <param name="_deviceType">
    /// Id of the device type.
    /// </param>
    /// <param name="_recordInsertList">
    /// Target record insert list.
    /// </param>
    /// <param name="_designerForm">
    /// Target designer form enum.
    /// </param>
    private void addRetailDeviceType(RetailDeviceTypeBase _deviceType, RecordInsertList _recordInsertList, RetailDesignerFormEnum _designerForm = RetailDesignerFormEnum::None)
    {
        RetailDeviceTypes retailDeviceTypes;
        str key;

        select firstonly retailDeviceTypes
            where retailDeviceTypes.Type == _deviceType;

        if (!retailDeviceTypes)
        {
            retailDeviceTypes.Type = _deviceType;
            retailDeviceTypes.Description = enum2str(_deviceType);
            retailDeviceTypes.DesignerForm = _designerForm;
            _recordInsertList.add(retailDeviceTypes);
        }
        else
        {
            key = "[" + enum2str(_deviceType) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailDeviceTypes), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailProvisionedChannelProdAttr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts <c>RetailProvisionedChannelProductAttribute</c> record
    /// </summary>
    /// <param name="_channelProductAttributeId">
    /// The channel product attribute Id (enum)
    /// </param>
    /// <param name="_attributeType">
    /// The RecId of the attribute type
    /// </param>
    private void addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeId _channelProductAttributeId, RefRecId _attributeType)
    {
        RetailProvisionedChannelProductAttribute provisionedChannelProductAttribute;
        EcoResAttribute ecoResAttribute;
        EcoResAttributeDefaultValue attributeReference;
        EcoResReferenceValue ecoResReferenceValue;
        RetailAttributeMetadata retailAttributeMetadata;
        RetailAttributeMetadataHandler retailAttributeMetadataHandler;
        RetailStandardAttributeID retailStandardAttibuteID = this.getStandardIdForChannelAttributeID(_channelProductAttributeId);

        select firstOnly provisionedChannelProductAttribute
            where provisionedChannelProductAttribute.ChannelProductAttributeID == _channelProductAttributeId;

        if (!provisionedChannelProductAttribute)
        {
            RefRecId attributeRecId = EcoResAttribute::findOrCreateAttribute(enum2Value(_channelProductAttributeId), _attributeType);
            ecoResAttribute = EcoResAttribute::find(attributeRecId);

            provisionedChannelProductAttribute.ChannelProductAttributeId = _channelProductAttributeId;
            provisionedChannelProductAttribute.Attribute = ecoResAttribute.RecId;
            provisionedChannelProductAttribute.insert();

            //update RetailAttributeMetadata
            retailAttributeMetadataHandler = RetailAttributeMetadataHandler::construct();

            ttsBegin;
            retailAttributeMetadata = RetailAttributeMetadata::findByAttribute(provisionedChannelProductAttribute.Attribute, true);
            // set as empty so that it can set channel provisioned default metadata instead of default metadata.
            retailAttributeMetadata.Metadata = '';
            retailAttributeMetadata.MetadataVersion = 0;
            retailAttributeMetadataHandler.parmRetailAttributeMetadata(retailAttributeMetadata);
            [retailAttributeMetadata.Metadata, retailAttributeMetadata.MetadataVersion] = retailAttributeMetadataHandler.getMetadata();
            retailAttributeMetadata.update();
            ttsCommit;

            if (retailStandardAttibuteID)
            {
                ecoResReferenceValue.RefRecId = (select Attribute from RetailStandardAttribute
                    where RetailStandardAttribute.StandardAttributeID == retailStandardAttibuteID).Attribute;
            }
            else
            {
                ecoResReferenceValue.RefRecId = this.getEcoResAttributeForChannelProductAttribute(_channelProductAttributeId);
            }

            if (ecoResReferenceValue.RefRecId)
            {
                ecoResReferenceValue.RefTableId = ecoResAttribute.TableId;
                ecoResReferenceValue.insert();

                attributeReference.Attribute = ecoResAttribute.RecId;
                attributeReference.Value = ecoResReferenceValue.RecId;
                attributeReference.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEcoResAttributeForChannelProductAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the EcoResAttribute record Id for the specified channel product attribute Id.
    /// </summary>
    /// <param name="_channelProductAttributeId">
    /// The channel product attribute id type.
    /// </param>
    /// <returns>The reference record Id.</returns>
    private RefRecId getEcoResAttributeForChannelProductAttribute(RetailChannelProductAttributeID _channelProductAttributeId)
    {
        RefRecId ecoResAttributeRecId;
        switch (_channelProductAttributeId)
        {
            case RetailChannelProductAttributeID::Image:
                ecoResAttributeRecId = EcoResAttribute::findOrCreateAttribute("@RET490121", RetailSharedParameters::find().ImagesAttributeType);
                break;
            case RetailChannelProductAttributeID::SearchKeywords:
                ecoResAttributeRecId = EcoResAttribute::findOrCreateAttribute(#AttributeSearchKeywords, EcoResAttributeType::findByName(#ProvisionedChannelAttributeText).RecId);
                break;
            default:
                // retrieve the corresponding EcoresAttribute record for the RetailChannelProductAttributeID.
                EventHandlerResult result = new EventHandlerResult();
                this.getEcoResAttributeForChannelProductAttributeDelegate(_channelProductAttributeId, result);

                if (result.hasResult())
                {
                    ecoResAttributeRecId = result.result();
                }
        }

        return ecoResAttributeRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEcoResAttributeForChannelProductAttributeDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate to retrieve the EcoResAttribute record for the specified channel product attribute Id.
    /// </summary>
    /// <param name="_channelProductAttributeId">
    /// The channel product attribute id type.
    /// </param>
    /// <param name="result">
    /// Subscribers should use this object to return RecId of the corresponding EcoResAttribute record for the specified channel product attribute Id.
    /// </param>
    delegate void  getEcoResAttributeForChannelProductAttributeDelegate(RetailChannelProductAttributeID _channelProductAttributeId, EventHandlerResult result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailProvisionedChannelProdAttrGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts <c>RetailProvisionedChannelProdAttrGroup</c> record
    /// </summary>
    /// <param name="_channelType">
    /// The Retail channel type
    /// </param>
    /// <param name="_groupName">
    /// The attribute group name
    /// </param>
    /// <returns>
    /// The added provisioned channel product attribute group
    /// </returns>
    private RetailProvisionedChannelProdAttrGroup addRetailProvisionedChannelProdAttrGroup(RetailChannelType _channelType, Name _groupName)
    {
        EcoResAttributeGroup attributeGroup;
        RetailProvisionedChannelProdAttrGroup provisionedChannelProdAttrGroup;

        select firstOnly provisionedChannelProdAttrGroup
            where provisionedChannelProdAttrGroup.ChannelType == _channelType;

        if (provisionedChannelProdAttrGroup.RecId == 0)
        {
            select firstOnly attributeGroup where attributeGroup.Name == _groupName;

            if (attributeGroup.RecId == 0)
            {
                // Create the attribute group
                attributeGroup.Name = _groupName;
                attributeGroup.insert();
            }

            // Create the provisioned channel product attribute group
            provisionedChannelProdAttrGroup.AttributeGroup = attributeGroup.RecId;
            provisionedChannelProdAttrGroup.ChannelType = _channelType;
            provisionedChannelProdAttrGroup.insert();
        }

        return provisionedChannelProdAttrGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailProvisionedChannelProdAttrToGrp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the provisioned channel product attribute to the attribute group
    /// </summary>
    /// <param name="_channelProductAttributeId">
    /// The provisioned channel product attribute Id (enum)
    /// </param>
    /// <param name="_attributeGroup">
    /// The RecId of the attribute group
    /// </param>
    private void addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeId _channelProductAttributeId, RecId _attributeGroup)
    {
        RetailProvisionedChannelProductAttribute provisionedChannelProductAttribute;
        EcoResAttributeGroupAttribute attributeGroupAttribute;

        select firstOnly RecId, Attribute, ChannelProductAttributeID from provisionedChannelProductAttribute
            where provisionedChannelProductAttribute.ChannelProductAttributeID == _channelProductAttributeId;

        if (provisionedChannelProductAttribute.RecId > 0 && _attributeGroup > 0)
        {
            attributeGroupAttribute = EcoResAttributeGroupAttribute::findByGroupAndAttribute(_attributeGroup, provisionedChannelProductAttribute.Attribute);

            if (attributeGroupAttribute.RecId == 0)
            {
                attributeGroupAttribute.Attribute = provisionedChannelProductAttribute.Attribute;
                attributeGroupAttribute.AttributeGroup = _attributeGroup;
                attributeGroupAttribute.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerRetailIdentityProvider</Name>
				<Source><![CDATA[
    private int64 registerRetailIdentityProvider(str _identityProviderName, str _issuer)
    {
        RetailIdentityProvider identityProvider;

        select firstonly identityProvider
            where identityProvider.Issuer == _issuer;

        if (!identityProvider)
        {
            ttsBegin;

            identityProvider.Name = _identityProviderName;
            identityProvider.Issuer = _issuer;
            identityProvider.insert();

            ttsCommit;
        }

        return identityProvider.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerRetailRelyingParty</Name>
				<Source><![CDATA[
    private void registerRetailRelyingParty(int64 _identityProviderRecId, str _clientId, RetailRelyingPartyType _relyingPartyType)
    {
        RetailRelyingParty relyingParty;

        select firstonly relyingParty
            where relyingParty.ProviderId == _identityProviderRecId && relyingParty.ClientId == _clientId;

        if (!relyingParty)
        {
            ttsBegin;

            relyingParty.ClientId = _clientId;
            relyingParty.ProviderId = _identityProviderRecId;
            relyingParty.Type = _relyingPartyType;
            relyingParty.insert();

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerCommerceIdentityProvider</Name>
				<Source><![CDATA[
    private void registerCommerceIdentityProvider()
    {
        int64 identityProviderRecId = this.registerRetailIdentityProvider('Commerce Identity Provider', 'https://commerce.dynamics.com/auth');
        this.registerRetailRelyingParty(identityProviderRecId, 'Cloud POS', RetailRelyingPartyType::Public);
        this.registerRetailRelyingParty(identityProviderRecId, 'Modern POS', RetailRelyingPartyType::Public);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailThemeAccent</Name>
				<Source><![CDATA[
    private void addRetailThemeAccent(RetailAccentId _accentId, RetailAccentName _name, RecordInsertList _recordInsertList)
    {
        RetailThemeAccent retailThemeAccent;
        str key;

        select firstonly retailThemeAccent
            where retailThemeAccent.AccentId == _accentId;

        if (!retailThemeAccent)
        {
            retailThemeAccent.AccentId = _accentId;
            retailThemeAccent.Name = _name;
            _recordInsertList.add(retailThemeAccent);
        }
        else
        {
            key = "[" + _accentId + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailThemeAccent), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailThemeAccentColor</Name>
				<Source><![CDATA[
    private void addRetailThemeAccentColor(RetailColorValueARGB _color, RetailPalletName _palletName, RetailAccentName _accentId, RecordInsertList _recordInsertList)
    {
        RetailThemePallet       retailThemePallet;
        RetailThemeAccent       retailThemeAccent;
        RetailThemeAccentColor  retailThemeAccentColor;
        str key;

        select AccentId, RecId from retailThemeAccent
            where retailThemeAccent.AccentId == _accentId;

        select Name, RecId from retailThemePallet
            where retailThemePallet.Name == _palletName;

        select retailThemeAccentColor
            where retailThemeAccentColor.Pallet == retailThemePallet.RecId &&
                retailThemeAccentColor.Accent == retailThemeAccent.RecId ;

        if (!retailThemeAccentColor && retailThemePallet && retailThemeAccent)
        {
            retailThemeAccentColor.Color = _color;
            retailThemeAccentColor.Accent = retailThemeAccent.RecId;
            retailThemeAccentColor.Pallet = retailThemePallet.RecId;
            _recordInsertList.add(retailThemeAccentColor);
        }
        else
        {
            key = "[" + int2str(_color) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailThemeAccentColor), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailThemePallet</Name>
				<Source><![CDATA[
    private void addRetailThemePallet(RetailPalletName _name, RecordInsertList _recordInsertList)
    {
        RetailThemePallet retailThemePallet;
        str key;

        select firstonly retailThemePallet
            where retailThemePallet.Name == _name;

        if (!retailThemePallet)
        {
            retailThemePallet.Name = _name;
            _recordInsertList.add(retailThemePallet);
        }
        else
        {
            key = "[" + _name + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailThemePallet), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailTillLayoutSize</Name>
				<Source><![CDATA[
    private void setRetailTillLayoutSize()
    {
        RetailTillLayoutSize layoutSize;

        select firstonly layoutSize
            where layoutSize.LayoutSizeId == #defaultLayoutSizeName;

        if (!layoutSize)
        {
            layoutSize.LayoutSizeId = #defaultLayoutSizeName;
            layoutSize.LayoutType = RetailLayoutType::MPOSFull;
            layoutSize.Width = 1366;
            layoutSize.Height = 768;

            layoutSize.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailTillLayoutConfiguration</Name>
				<Source><![CDATA[
    private void setRetailTillLayoutConfiguration(RetailTillLayout _tillLayout)
    {
        RetailTillLayoutSize            layoutSize;
        RetailTillLayoutConfiguration   layoutConfiguration;
        str                             layoutXMLLandscape, layoutXMLPortrait;
        ResourceNode                    layoutXMLResourceNode;

        this.setRetailTillLayoutSize();

        select firstonly layoutSize
            where layoutSize.LayoutSizeId == #defaultLayoutSizeName;

        select firstonly RecId from layoutConfiguration
            where   layoutConfiguration.LayoutId == _tillLayout.LayoutId &&
                    layoutConfiguration.SizeId == layoutSize.LayoutSizeId;

        if (!layoutConfiguration.RecId)
        {
            layoutConfiguration.LayoutId = _tillLayout.LayoutId;
            layoutConfiguration.SizeId = layoutSize.LayoutSizeId;

            layoutXMLResourceNode = SysResource::getResourceNode(resourceStr(RetailTillLayoutLandscape));
            [layoutXMLLandscape] = layoutXMLResourceNode.getResourceContent();
            layoutConfiguration.LayoutLandscape = layoutXMLLandscape;

            layoutXMLResourceNode = SysResource::getResourceNode(resourceStr(RetailTillLayoutPortrait));
            [layoutXMLPortrait] = layoutXMLResourceNode.getResourceContent();
            layoutConfiguration.LayoutPortrait = layoutXMLPortrait;

            layoutConfiguration.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailTillLayoutButtonGrid</Name>
				<Source><![CDATA[
    private void addRetailTillLayoutButtonGrid(RetailTillLayout _tillLayout, RetailLayoutSizeId _sizeId, RetailZoneId _zoneId, RetailButtonGridId _buttonGridId, RetailLayoutType _layoutType)
    {
        RetailTillLayoutZone            retailTillLayoutZone;
        RetailTillLayoutButtonGridZone  retailTillLayoutButtonGridZone;

        str key;

        select retailTillLayoutZone
            where   retailTillLayoutZone.ZoneId     == _zoneId
                &&  retailTillLayoutZone.LayoutType == _layoutType
                &&  retailTillLayoutZone.ZoneType   == RetailZoneType::ButtonGrid;

        select forUpdate retailTillLayoutButtonGridZone
            where   retailTillLayoutButtonGridZone.LayoutId == _tillLayout.layoutId
                &&  retailTillLayoutButtonGridZone.LayoutSizeId == _sizeId
                &&  retailTillLayoutButtonGridZone.Zone == retailTillLayoutZone.RecId;

        if (retailTillLayoutButtonGridZone)
        {
            ttsBegin;
            retailTillLayoutButtonGridZone.delete();
            ttsCommit;
        }

        select retailTillLayoutButtonGridZone
            where   retailTillLayoutButtonGridZone.LayoutId == _tillLayout.layoutId
                &&  retailTillLayoutButtonGridZone.LayoutSizeId == _sizeId
                &&  retailTillLayoutButtonGridZone.Zone == retailTillLayoutZone.RecId;

        if (!retailTillLayoutButtonGridZone)
        {
            ttsBegin;
            retailTillLayoutButtonGridZone.ButtonGridId = _buttonGridId;
            retailTillLayoutButtonGridZone.LayoutId = _tillLayout.layoutId;
            retailTillLayoutButtonGridZone.LayoutSizeId = _sizeId;
            retailTillLayoutButtonGridZone.Zone = retailTillLayoutZone.RecId;
            retailTillLayoutButtonGridZone.insert();
            ttsCommit;
        }
        else
        {
            key = "[" + _buttonGridId + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailTillLayoutButtonGridZone), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailTillLayoutImage</Name>
				<Source><![CDATA[
    private void addRetailTillLayoutImage(RetailTillLayout _tillLayout, RetailLayoutSizeId _sizeId, RetailZoneId _zoneId, RetailPictureId _pictureId, RetailLayoutType _layoutType)
    {
        RetailTillLayoutZone        retailTillLayoutZone;
        RetailTillLayoutImageZone   retailTillLayoutImageZone;

        str key;

        select retailTillLayoutZone
            where   retailTillLayoutZone.ZoneId     == _zoneId
                &&  retailTillLayoutZone.LayoutType == _layoutType
                &&  retailTillLayoutZone.ZoneType   == RetailZoneType::Image;

        select retailTillLayoutImageZone
            where   retailTillLayoutImageZone.PictureId == _pictureId
                &&  retailTillLayoutImageZone.LayoutId == _tillLayout.layoutId
                &&  retailTillLayoutImageZone.LayoutSizeId == _sizeId
                &&  retailTillLayoutImageZone.Zone == retailTillLayoutZone.RecId;

        if (!retailTillLayoutImageZone)
        {
            ttsBegin;
            retailTillLayoutImageZone.PictureId = _pictureId;
            retailTillLayoutImageZone.LayoutId = _tillLayout.layoutId;
            retailTillLayoutImageZone.LayoutSizeId = _sizeId;
            retailTillLayoutImageZone.Zone = retailTillLayoutZone.RecId;
            retailTillLayoutImageZone.insert();
            ttsCommit;
        }
        else
        {
            key = "[" + int2str(_pictureId) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailTillLayoutImageZone), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailTillLayoutReport</Name>
				<Source><![CDATA[
    private void addRetailTillLayoutReport(RetailTillLayout _tillLayout, RetailLayoutSizeId _sizeId, RetailZoneId _zoneId, RefRecId _report, RetailLayoutType _layoutType)
    {
        RetailTillLayoutZone        retailTillLayoutZone;
        RetailTillLayoutReportZone  retailTillLayoutReportZone;

        str key;

        select retailTillLayoutZone
            where   retailTillLayoutZone.ZoneId     == _zoneId
                &&  retailTillLayoutZone.LayoutType == _layoutType
                &&  retailTillLayoutZone.ZoneType   == RetailZoneType::Reports;

        select retailTillLayoutReportZone
            where   retailTillLayoutReportZone.Report == _report
                &&  retailTillLayoutReportZone.LayoutId == _tillLayout.layoutId
                &&  retailTillLayoutReportZone.LayoutSizeId == _sizeId
                &&  retailTillLayoutReportZone.Zone == retailTillLayoutZone.RecId;

        if (!retailTillLayoutReportZone)
        {
            ttsBegin;
            retailTillLayoutReportZone.Report = _report;
            retailTillLayoutReportZone.LayoutId = _tillLayout.layoutId;
            retailTillLayoutReportZone.LayoutSizeId = _sizeId;
            retailTillLayoutReportZone.Zone = retailTillLayoutZone.RecId;
            retailTillLayoutReportZone.insert();
            ttsCommit;
        }
        else
        {
            key = "[" + int642str(_report) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailTillLayoutReportZone), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToEcoResAttribute</Name>
				<Source><![CDATA[
    private void addToEcoResAttribute(RefRecId _attributeGroupRecId, EcoResAttributeModifier _modifier, Name _attributeTypeName, Name _name)
    {
        EcoResAttributeType attributeType = EcoResAttributeType::findByName(_attributeTypeName);
        RefRecId attributeRecId;

        if (attributeType)
        {
            attributeRecId = EcoResAttribute::findOrCreateAttribute(_name, attributeType.RecId, _modifier);
            this.addToEcoResAttributeGroupAttribute(_attributeGroupRecId, attributeRecId, 0);
        }
        else
        {
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET490124", _attributeTypeName));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToEcoResAttributeGroup</Name>
				<Source><![CDATA[
    private EcoResAttributeGroup addToEcoResAttributeGroup(str attributeGroupName, boolean doProgressCount = true)
    {
        EcoResAttributeGroup ecoResAttributeGroup;
        EcoResAttributeGroupTranslation ecoResAttributeGroupTranslation;
        boolean hasAttributeGroupBeenCreated;
        str tableName;
        str key;

        tableName = tableStr(EcoResAttributeGroup);

        ecoResAttributeGroup = EcoResAttributeGroup::findByName(attributeGroupName, false);
        if (!ecoResAttributeGroup)
        {
            ecoResAttributeGroup.Name = attributeGroupName;
            ecoResAttributeGroup.insert();

            ecoResAttributeGroupTranslation.AttributeGroup = ecoResAttributeGroup.RecId;
            ecoResAttributeGroupTranslation.FriendlyName = attributeGroupName;
            ecoResAttributeGroupTranslation.Language = RetailUtilities::getCompanyLanguage();

            ecoResAttributeGroupTranslation.insert();

            hasAttributeGroupBeenCreated = true;
        }
        else
        {
            key = "[" + attributeGroupName + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableName, key));
        }

        if (doProgressCount)
        {
            progressCounter++;
            progress.setCount(progressCounter);
            progress.setText(strFmt("%1", tableName));
        }

        if (hasAttributeGroupBeenCreated)
        {
            this.setEcoResAttributes(ecoResAttributeGroup.RecId, doProgressCount);
        }

        return ecoResAttributeGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToEcoResAttributeGroupAttribute</Name>
				<Source><![CDATA[
    private void addToEcoResAttributeGroupAttribute(RefRecId _attributeGroupRecId, RefRecId _attributeRecId, RefRecId _defaultValue)
    {
        EcoResAttributeGroupAttribute attributeGroupAttribute;
        RetailSharedParameters retailSharedParameters = RetailSharedParameters::find();
        EcoResAttributeGroup    ecoResAttributeGroup;
        EcoResAttributeType     ecoResAttributeType;

        void setDefaultAttributeValue(str url)
        {
            RetailRichMediaTmp  retailRichMediaTmp;
            EcoResTextValue ecoResTextValue;

            retailRichMediaTmp.Url = url;
            retailRichMediaTmp.insert();

            ecoResTextValue.TextValue = RetailRichMediaEncoder::Encode(retailRichMediaTmp, retailRichMediaTmp.RecId);
            ecoResTextValue.insert();

            _defaultValue = ecoResTextValue.RecId;
        }

        if (_attributeGroupRecId && _attributeRecId
            && !EcoResAttributeGroupAttribute::findByGroupAndAttribute(_attributeGroupRecId, _attributeRecId))
        {
            attributeGroupAttribute.AttributeGroup = _attributeGroupRecId;
            attributeGroupAttribute.Attribute = _attributeRecId;

            ecoResAttributeGroup = EcoResAttributeGroup::find(_attributeGroupRecId);
            ecoResAttributeType = EcoResAttributeType::findByAttribute(_attributeRecId);

            // Default product image attribute group.
            if (!_defaultValue
                && ecoResAttributeGroup.Name == "@RET490123"
                && EcoResAttributeType::findByAttribute(_attributeRecId).Name == "@RET490101")
            {
                setDefaultAttributeValue('Images/Products/{LanguageId}/{ProductNumber}.jpg');
            }

            // Default category image attribute group.
            if (!_defaultValue
                && ecoResAttributeGroup.Name == "@RET490160"
                && EcoResAttributeType::findByAttribute(_attributeRecId).Name == "@RET490101")
            {
                setDefaultAttributeValue('Images/Categories/{LanguageId}/{CategoryHierarchyName}/{CategoryPath}.jpg');
            }

            // Default product video attribute group.
            if (!_defaultValue
                && ecoResAttributeGroup.Name == "@RET490123"
                && EcoResAttributeType::findByAttribute(_attributeRecId).Name == "@RET490112")
            {
                setDefaultAttributeValue('Videos/Products/{LanguageId}/{ProductNumber}.wmv');
            }

            // Default product video attribute group.
            if (!_defaultValue
                && ecoResAttributeGroup.Name == "@RET490160"
                && EcoResAttributeType::findByAttribute(_attributeRecId).Name == "@RET490112")
            {
                setDefaultAttributeValue('Videos/Categories/{LanguageId}/{CategoryHierarchyName}/{CategoryPath}.wmv');
            }

            // Default customer image attribute group.
            if (!_defaultValue
                && ecoResAttributeGroup.Name == "@REX4520174"
                && EcoResAttributeType::findByAttribute(_attributeRecId).Name == "@RET490101")
            {
                setDefaultAttributeValue('Images/Customers/{CustomerNumber}.jpg');
            }

            // Default worker image attribute group.
            if (!_defaultValue
                && ecoResAttributeGroup.Name == "@REX4520175"
                && EcoResAttributeType::findByAttribute(_attributeRecId).Name == "@RET490101")
            {
                setDefaultAttributeValue('Images/Workers/{WorkerNumber}.jpg');
            }

            // Default catalog image attribute group.
            if (!_defaultValue
                && ecoResAttributeGroup.Name == "@REX4520176"
                && EcoResAttributeType::findByAttribute(_attributeRecId).Name == "@RET490101")
            {
                setDefaultAttributeValue('Images/Catalogs/{LanguageId}/{CatalogName}.jpg');
            }

            attributeGroupAttribute.DefaultValue = _defaultValue;
            attributeGroupAttribute.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToEcoResAttributeType</Name>
				<Source><![CDATA[
    private EcoResAttributeType addToEcoResAttributeType(AttributeDataType _dataType, NoYes _isEnumeration, NoYes _isHidden, Name _name)
    {
        EcoResAttributeType attributeType;
        str key;

        attributeType = EcoResAttributeType::findByName(_name);
        if (!attributeType)
        {
            attributeType.DataType = _dataType;
            attributeType.IsEnumeration = _isEnumeration;
            attributeType.IsHidden = _isHidden;
            attributeType.Name = _name;
            attributeType.insert();
        }
        else
        {
            key = "[" + _name + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(EcoResAttributeType), _name));
        }

        return attributeType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPOSIsButtonGrid</Name>
				<Source><![CDATA[
    private void addToPOSIsButtonGrid(str _buttonGridId, str _name, int _spaceBetweenButtons, int _defaultFontSize, int _defaultFontStyle, int _defaultColor)
    {
        RetailButtonGrid posIsButtonGrid;
        str key;
        ;

        posIsButtonGrid = RetailButtonGrid::find(_buttonGridId, false);
        if (!posIsButtonGrid)
        {
            posIsButtonGrid.clear();
            posIsButtonGrid.ButtonGridId = _buttonGridId;
            posIsButtonGrid.Name = _name;
            posIsButtonGrid.SpaceBetweenButtons = _spaceBetweenButtons;
            posIsButtonGrid.DefaultFontSize = _defaultFontSize;
            posIsButtonGrid.DefaultFontStyle = _defaultFontStyle;
            posIsButtonGrid.DefaultColor = _defaultColor;
            listPosIsButtonGrid.add(posIsButtonGrid);
        }
        else
        {
            key = "[" + _buttonGridId + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailButtonGrid), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPOSIsButtonGridButtons</Name>
				<Source><![CDATA[
    private void addToPOSIsButtonGridButtons(int _id, int _col, int _colSpan, int _rowNumber, int _rowSpan, int _action, str _actionProperty, int _pictureId,
                                             str _displayText, int _fontSize, str _buttonGridId, int _colour, int _fontStyle, int _imageAlignment, int _backColor, int _backColor2,
                                             int _borderColor, int _fontColor, int _gradientMode, int _newImageAlignment, int _newTextAlignment, int _useCustomLookAndFeel)
    {
        RetailButtonGridButtons posIsButtonGridButtons;
        str key;
        ;

        posIsButtonGridButtons = RetailButtonGridButtons::find(_id, _buttonGridId, false);
        if (!posIsButtonGridButtons)
        {
            posIsButtonGridButtons.clear();
            posIsButtonGridButtons.id = _id;
            posIsButtonGridButtons.Col = _col;
            posIsButtonGridButtons.ColSpan = _colSpan;
            posIsButtonGridButtons.RowNum = _rowNumber;
            posIsButtonGridButtons.RowSpan = _rowSpan;
            posIsButtonGridButtons.Action = _action;
            posIsButtonGridButtons.ActionProperty = _actionProperty;
            posIsButtonGridButtons.PictureId = _pictureId;
            posIsButtonGridButtons.DisplayText = _displayText;
            posIsButtonGridButtons.FontSize = _fontSize;
            posIsButtonGridButtons.ButtonGridId = _buttonGridId;
            posIsButtonGridButtons.Colour = _colour;
            posIsButtonGridButtons.FontStyle = _fontStyle;
            posIsButtonGridButtons.ImageAlignment = _imageAlignment;
            posIsButtonGridButtons.BackColor = _backColor;
            posIsButtonGridButtons.BackColor2 = _backColor2;
            posIsButtonGridButtons.BorderColor = _borderColor;
            posIsButtonGridButtons.FontColor = _fontColor;
            posIsButtonGridButtons.GradientMode = _gradientMode;
            posIsButtonGridButtons.NewImageAlignment = _newImageAlignment;
            posIsButtonGridButtons.NewTextAlignment = _newTextAlignment;
            posIsButtonGridButtons.UseCustomLookAndFeel = _useCustomLookAndFeel;
            listPosIsButtonGridButtons.add(posIsButtonGridButtons);
        }
        else
        {
            key = "[" + int2str(_id) + "," + _buttonGridId + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailButtonGridButtons), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPOSIsFormLayout</Name>
				<Source><![CDATA[
    private void addToPOSIsFormLayout(RetailFormLayoutId _id, str _title, str _description, int _upperCase, str _headerNode, str _linesNode,
                                str _footerNode, int _printAsSlip, int _useWindowsPrinter, int _promptQuestion, int _printBehaviour, RetailReceipt _layoutType)
    {
        RetailFormLayout posIsFormLayout;
        str key;
        ;

        posIsFormLayout = RetailFormLayout::find(_id, false);
        if (!posIsFormLayout)
        {
            posIsFormLayout.clear();
            posIsFormLayout.FormLayoutId = _id;
            posIsFormLayout.Title = _title;
            posIsFormLayout.Description = _description;
            posIsFormLayout.UpperCase = _upperCase;
            posIsFormLayout.HeaderXML = this.loadStrResource(_headerNode);
            posIsFormLayout.LinesXML = this.loadStrResource(_linesNode);
            posIsFormLayout.FooterXML = this.loadStrResource(_footerNode);
            posIsFormLayout.PrintAsSlip = _printAsSlip;
            posIsFormLayout.PromptQuestion = _promptQuestion;
            posIsFormLayout.PrintBehaviour = _printBehaviour;
            posIsFormLayout.LayoutType = _layoutType;
            listPosIsFormLayout.add(posIsFormLayout);
        }
        else
        {
            key = "[" + _id + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailFormLayout), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPOSIsImages</Name>
				<Source><![CDATA[
    private void addToPOSIsImages(RetailPictureId _pictureId, str _imageNode)
    {
        RetailImages posIsImages;
        str key;
        ;

        posIsImages = RetailImages::find(_pictureId, false);
        if (!posIsImages)
        {
            posIsImages.clear();
            posIsImages.PictureId = _pictureId;
            posIsImages.Picture = this.loadImageResource(_imageNode);
            listPosIsImages.add(posIsImages);
        }
        else
        {
            key = "[" + int2str(_pictureId) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailImages), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPOSIsOperations</Name>
				<Source><![CDATA[
    private void addToPOSIsOperations(int _operationId, str _operationName, int _permissionId, int _permissionId2, int _checkUserAccess, int _userOperation, int _actionPropertyLookupType, int _allowAnonymousAccess, int _allowCustomerAccess, int _permissionIdEx = 0, NoYes _allowTaskLink = NoYes::No)
    {
        RetailOperations posIsOperations;
        str key;
        ;

        posIsOperations = RetailOperations::find(_operationId, false);
        if (!posIsOperations)
        {
            posIsOperations.clear();
            posIsOperations.OperationId = _operationId;
            posIsOperations.OperationName = _operationName;
            posIsOperations.PermissionId = _permissionId;
            posIsOperations.PermissionId2 = _permissionId2;
            posIsOperations.CheckUserAccess = _checkUserAccess;
            posIsOperations.UserOperation = _userOperation;
            posIsOperations.ActionPropertyLookupType = _actionPropertyLookupType;
            posIsOperations.AllowAnonymousAccess = _allowAnonymousAccess;
            posIsOperations.AllowCustomerAccess = _allowCustomerAccess;
            posIsOperations.PermissionIdEx = _permissionIdEx;
            posIsOperations.AllowTaskLink = _allowTaskLink;
            listPosIsOperations.add(posIsOperations);
        }
        else
        {
            key = "[" + int2str(_operationId) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailOperations), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPOSIsPermissions</Name>
				<Source><![CDATA[
    private void addToPOSIsPermissions(int _permissionId, str _permissionName)
    {
        RetailPermissions posIsPermissions;
        str key;
        ;

        posIsPermissions = RetailPermissions::find(_permissionId, false);
        if (!posIsPermissions)
        {
            posIsPermissions.clear();
            posIsPermissions.PermissionId = _permissionId;
            posIsPermissions.PermissionName = _permissionName;
            listPosIsPermissions.add(posIsPermissions);
        }
        else
        {
            key = "[" + int2str(_permissionId) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailPermissions), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPOSIsPermissionsEx</Name>
				<Source><![CDATA[
    private void addToPOSIsPermissionsEx(int _permissionId, str _permissionName)
    {
        RetailPermissionsEx posIsPermissionsEx;
        str key;
        ;

        posIsPermissionsEx = RetailPermissionsEx::find(_permissionId, false);
        if (!posIsPermissionsEx)
        {
            posIsPermissionsEx.clear();
            posIsPermissionsEx.PermissionId = _permissionId;
            posIsPermissionsEx.PermissionName = _permissionName;
            listPosIsPermissionsEx.add(posIsPermissionsEx);
        }
        else
        {
            key = "[" + int2str(_permissionId) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailPermissionsEx), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPermissionsGroup</Name>
				<Source><![CDATA[
    private void addToPermissionsGroup(int _permissionGroupId, str _permissionGroupName, int _permissionId)
    {
        RetailPermissionsGroup posPermissionsGroup;
        str key;

        posPermissionsGroup = RetailPermissionsGroup::find(_permissionGroupId, _permissionId, false);
        if (!posPermissionsGroup)
        {
            posPermissionsGroup.clear();
            posPermissionsGroup.PermissionId = _permissionId;
            posPermissionsGroup.PermissionGroupId = _permissionGroupId;
            posPermissionsGroup.PermissionGroupName = _permissionGroupName;
            listPermissionGroup.add(posPermissionsGroup);
        }
        else
        {
            key = "[" + int2str(_permissionId) + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailPermissionsEx), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToPOSIsThemes</Name>
				<Source><![CDATA[
    private void addToPOSIsThemes(RetailPOSSkinName _themeName, RefRecId _deviceType)
    {
        RetailPOSTheme posIsThemes;
        str key;

        select firstonly posIsThemes
            where posIsThemes.Name == _themeName && posIsThemes.DeviceType == _deviceType;

        if (!posIsThemes)
        {
            posIsThemes.clear();
            posIsThemes.Name = _themeName;
            posIsThemes.DeviceType = _deviceType;
            listPosIsThemes.add(posIsThemes);
        }
        else
        {
            key = "[" + _themeName + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailPOSTheme), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToProductDimGrpConfigurationOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts Default product Dimension Group record in <c>EcoResProductDimensionGroup</c> to use as default configuration for Retail Kit
    /// </summary>
    /// <param name="_dimensionGroupName">
    /// The dimension group name
    /// </param>
    /// <param name="_dimensionGroupDescription">
    /// The Dimension group description name
    /// </param>
    private void addToProductDimGrpConfigurationOnly(str _dimensionGroupName, str _dimensionGroupDescription)
    {
        EcoResProductDimensionGroup  ecoResProductDimensionGroup;
        str tableName;
        str key;

        tableName = tableStr(EcoResProductDimensionGroup);
        ecoResProductDimensionGroup=EcoResProductDimensionGroup::findByDimensionGroupName(_dimensionGroupName,false);

        if (!ecoResProductDimensionGroup)
        {
            ecoResProductDimensionGroup.Name = _dimensionGroupName;
            ecoResProductDimensionGroup.Description = _dimensionGroupDescription;
            ecoResProductDimensionGroup.insert();
        }
        else
        {
            key = "[" + _dimensionGroupName + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableName, key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToRBOSupportedCountryRegion</Name>
				<Source><![CDATA[
    private void addToRBOSupportedCountryRegion(str isoCode, str countryRegionName)
    {
        RetailSupportedCountryRegion countryRegion;
        str key;
        ;

        countryRegion = RetailSupportedCountryRegion::find(isoCode, false);

        if (!countryRegion)
        {
            countryRegion.clear();
            countryRegion.SupportedCountryRegionISOCode = isoCode;
            countryRegion.CountryRegionName = countryRegionName;

            listSupportedCountryRegion.add(countryRegion);
        }
        else
        {
            key = "[" + isoCode + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailSupportedCountryRegion), key));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToRetailChannelReport</Name>
				<Source><![CDATA[
    private void addToRetailChannelReport(str 100 _reportId, str _reportName, str _reportXml, RetailChannelReportVersion version = RetailChannelReportVersion::Current)
    {
        RetailChannelReport      retailChannelReport;
        str key;

        select forupdate retailChannelReport
        where retailChannelReport.ReportID == _reportId;

        retailChannelReport.ReportID = _reportId;
        retailChannelReport.ReportName = _reportName;
        retailChannelReport.ReportDefinitionXml = _reportXml;
        retailChannelReport.Version = version;

        if (!retailChannelReport)
        {
            listRetailChannelReport.Add(retailChannelReport);
        }
        else
        {
            ttsbegin;

            retailChannelReport.update();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToRetailHour</Name>
				<Source><![CDATA[
    private void addToRetailHour(int _retailHourOfDay, str _name)
    {
        RetailHour      retailHour;
        str key;

        select retailHour
        where retailHour.RetailHourOfDay == _retailHourOfDay;

        if (!retailHour)
        {
            retailHour.RetailHourOfDay = _retailHourOfDay;
            retailHour.Name = _name;
            listRetailHour.add(retailHour);
        }
        else
        {
            key = "[" + _name + "]";
            eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailHour), _name));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToRetailReportLocalizedString</Name>
				<Source><![CDATA[
    private void addToRetailReportLocalizedString(str 100 _stringId, str _stringValue, str _locale)
    {
        RetailReportLocalizedString      retailReportLocalizedString;
        str key;

        select forupdate retailReportLocalizedString
            where retailReportLocalizedString.StringId == _stringId
            && retailReportLocalizedString.LocaleCode == _locale;

        retailReportLocalizedString.StringId = _stringId;
        retailReportLocalizedString.StringValue = _stringValue;
        retailReportLocalizedString.LocaleCode = _locale;

        if (!retailReportLocalizedString)
        {
            listRetailChannelReportString.Add(retailReportLocalizedString);
        }
        else
        {
            ttsbegin;
            retailReportLocalizedString.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRetailAttributeMetadta</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create record into <c>RetailAttributeMetadata</c> table.
    /// </summary>
    private void createRetailAttributeMetadta()
    {
        RetailAttributeMetadata attributeMetadata;
        EcoResAttribute ecoResAttribute;

        while select RecId from ecoResAttribute
            notexists join attributeMetadata
            where attributeMetadata.Attribute == ecoResAttribute.RecId
        {
            attributeMetadata.Attribute = ecoResAttribute.RecId;
            [attributeMetadata.Metadata, attributeMetadata.MetadataVersion] = RetailAttributeMetadataHandler::construct().getMetadata();
            attributeMetadata.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRetailItems</Name>
				<Source><![CDATA[
    private void createRetailItems()
    {
        DataArea            dataAreaTable;

        while select dataAreaTable where dataAreaTable.isVirtual == NoYes::No
        {
            try
            {
                ttsbegin;
           
                // Adding missing records from InventTable to RetailInventTable
                changeCompany(dataAreaTable.Id)
                {
                    InventTable         inventTable;
                    RetailInventTable   retailInventTable;
                    RetailInventTable   retailInventNotExistsTable;
                                      
                    insert_recordset retailInventTable (ItemId)
                        select ItemId from inventTable
                            notexists join retailInventNotExistsTable
                                where inventTable.ItemId == retailInventNotExistsTable.ItemId;
                }

                ttscommit;
            }
            catch
            {
                ttsabort;
                throw Global::error('@Retail:ErrorOnRetailInventTableInsert');
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>getStandardIdForChannelAttributeID</Name>
				<Source><![CDATA[
    private RetailStandardAttributeID getStandardIdForChannelAttributeID(
        RetailChannelProductAttributeId _channelProductAttributeId)
    {
        switch (_channelProductAttributeId)
        {
            case RetailChannelProductAttributeID::ProductName: return RetailStandardAttributeID::ProductName;
            case RetailChannelProductAttributeID::Description: return RetailStandardAttributeID::Description;
            case RetailChannelProductAttributeID::ItemNumber: return RetailStandardAttributeID::ProductNumber;
            case RetailChannelProductAttributeID::Color: return RetailStandardAttributeID::Color;
            case RetailChannelProductAttributeID::Size: return RetailStandardAttributeID::Size;
            case RetailChannelProductAttributeID::Style: return RetailStandardAttributeID::Style;
            case RetailChannelProductAttributeID::Configuration: return RetailStandardAttributeID::Config;
            case RetailChannelProductAttributeID::SalesTaxGroup: return RetailStandardAttributeID::SalesTaxGroup;
            case RetailChannelProductAttributeID::NavigationCategory: return RetailStandardAttributeID::NavigationCategory;
            default:
                // retrieve the corresponding RetailStandardAttributeId of the specified channel attribute id.
                EventHandlerResult result = new EventHandlerResult();
                this.getStandardIdForChannelAttributeIdDelegate(_channelProductAttributeId, result);

                if (result.hasResult()) // if the method is available and has a result return the result.
                {
                    return result.result();
                }
        }
        return RetailStandardAttributeID::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStandardIdForChannelAttributeIdDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate to get the RetailStandardAttributeID that corresponds to the specified RetailChannelProductAttributeID.
    /// </summary>
    /// <param name="_channelProductAttributeId">
    /// The channel product attribute Id.
    /// </param>
    /// <param name="result">
    /// Subscribers should use this object to return the corresponding RetailStandardAttributeID type for the specified channel product attribute Id.
    /// </param>
    delegate void  getStandardIdForChannelAttributeIdDelegate(RetailChannelProductAttributeID _channelProductAttributeId, EventHandlerResult result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadImageResource</Name>
				<Source><![CDATA[
    private container loadImageResource(str _nodeName)
    {
        BinData binData;
        container image;

        binData = new BinData();
        binData.setData(this.loadResourceData(_nodeName));
        image = binData.getData();

        return image;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadResourceData</Name>
				<Source><![CDATA[
    private container loadResourceData(str _nodeName)
    {
        #AOT
        TreeNode resourcesNode;
        resourceNode resNode;
        container data;

        resNode = new resourceNode(_nodeName);
        if (resNode.isFound())
        {
            data = resNode.getResourceContent();
        }

        return data;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadStrResource</Name>
				<Source><![CDATA[
    private str loadStrResource(str _nodeName)
    {
        str xml;
        ;

        xml = conPeek(this.loadResourceData(_nodeName),1);

        return xml;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion];
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerSocialMedia</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create record set in <c>RetailMediaSupportedFileType</c>.
    /// </summary>
    private void registerSocialMedia()
    {
        // Set the media type for facebook.
        RetailMediaChannelConnectorSettings::registerMediaType(RetailMediaChannelType::Facebook, #Facebook_MediaTypeId, #Facebook_MediaDescription);

        // Set the media type for Twitter.
        RetailMediaChannelConnectorSettings::registerMediaType(RetailMediaChannelType::Twitter, #Twitter_MediaTypeId, #Twitter_MediaDescription);

        ttsBegin;

        RetailMediaSupportedFileType retailMediaSupportedFileType;

        delete_from retailMediaSupportedFileType;

        RetailMediaSupportedFileType::populate();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rsdLabelToString</Name>
				<Source><![CDATA[
    private str rsdLabelToString(str _labelId, LanguageId _langId = CompanyInfo::languageId())
    {
        return SysLabel::labelId2String(_labelId, _langId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does actual job by setting the data into the scheduler tables, distribution tables and location tables.
    /// </summary>
    /// <exception cref="Exception::UpdateConflictNotRecovered">
    /// Standard error message.
    /// </exception>
    /// <exception cref="Exception::UpdateConflict">
    /// Standard error message.
    /// </exception>
    public void run()
    {
        RetailTimeZoneInfoJob retailTimeZoneInfoJob;

        #OCCRetryCount
        RetailCategoryContainmentLookup::synchronizeCategoriesLookup(true);

        this.progressInit("@RET584", #NumberOfRecords, #AVITransfer);

        try
        {
            ttsbegin;

            // Always initialize RetailConnParameters first so that RetailConnParameters::find() is called with _createDefault = false
            this.setDRMParameters();
            this.setPOSIsButtonGrid();
            this.setPOSIsButtonGridButtons();
            this.setPOSIsFormLayout();
            this.setPOSIsImages();
            this.setPOSIsLanguageText();
            this.setPOSIsOperations();
            this.setPOSIsPermissions();
            this.setPOSIsPermissionsEx();
            this.setPOSIsPermissionGroups();

            this.setRetailDeviceTypes();
            this.setPOSIsTheme();
            this.setRetailThemePallet();
            this.setRetailTillLayoutZone();

            this.setPOSIsTillLayout();
            this.setRBOSupportedCountryRegion();
            this.setRetailHours();

            this.setRetailChannelReports();
            this.setRetailChannelReportStrings();

            // must come after setting up the profiles, locations and jobs

            // Populate the store database offline configuration tables
            this.setRetailOfflineConfiguration();

            // Populate catalog enriching attributes
            this.setRetailSharedParameters();
            this.setRetailStandardAttribute();
            this.setRetailProvisionedChannelProdAttr();

            this.setRetailParameters();

            this.setMassUpdateProductProperty();

            this.createRetailItems();

            this.updateItemRetailVariant(); // Update RetailVariantId

            this.registerSocialMedia();

            this.createRetailAttributeMetadta();

            //create Retail Kit Product Configuration
            this.addToProductDimGrpConfigurationOnly('Retail Kit', "@SYS14011");

            this.enableAuditLogging();

            this.registerCommerceIdentityProvider();

            retailTimeZoneInfoJob = new RetailTimeZoneInfoJob();
            retailTimeZoneInfoJob.runOperation();

            this.createCdxPurgeHistoryBatch();
            this.upsertMediaTemplateRecords();
            this.upsertAttachedServiceRecords();

            this.loadExtensibleEnumMetadata();
            this.setDeliveryModes();

            this.loadTableFieldMetadata();
            this.createRetailInventAvailabilityParameters();

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDRMDistributionGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialises a new instance for <c>RecordInsertList</c>and sets the DRM distribution group.
    /// </summary>
    /// <param name="doProgressCount">
    /// A Boolean value.
    /// </param>
    public void setDRMDistributionGroup(boolean doProgressCount = true)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDRMDistributionSubgroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialises a new instance for <c>RecordInsertList</c>and sets the DRM distribution subgroup.
    /// </summary>
    /// <param name="doProgressCount">
    /// A boolean value.
    /// </param>
    public void setDRMDistributionSubgroup(boolean doProgressCount = true)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRetailInventAvailabilityParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts row with key 0 into <c>RetailInventAvaialbilityParameters</c> table.This method is meant to mimic the behavior of the Product Availability Job.
    /// </summary>
    private void createRetailInventAvailabilityParameters()
    {
        RetailInventAvailabilityParameters retailInventAvailabilityParameters;

        select firstonly retailInventAvailabilityParameters;
        if (!retailInventAvailabilityParameters)
        {
            InventTrans lastInventTrans;

            select crosscompany maxof(RecId) from lastInventTrans;
            retailInventAvailabilityParameters.Key = 0;
            retailInventAvailabilityParameters.LastInventTrans = lastInventTrans.RecId;
            retailInventAvailabilityParameters.insert();
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>setDRMParameters</Name>
				<Source><![CDATA[
    private void setDRMParameters()
    {
        RecordInsertList recordInsertList;
        RetailConnParameters drmParameters;
        RetailParameters retailParameters;
        str tableName;
        ;

        recordInsertList = new RecordInsertList(tableNum(RetailConnParameters), true, false, true);
        tableName = tableStr(RetailConnParameters);

        drmParameters = RetailConnParameters::find(true, false);
        if (!drmParameters)
        {
            drmParameters.MonitoringRetentionDays = 30;  // keep message history for 30 days by default
            drmParameters.SqlCommandTimeout = 7200; // default SQL command timeout: 2 hours. Configurable on Retail scheduler parameters form
            drmParameters.SharedAccessSignatureTimeout = 4; // default blob URL timeout: 4 minutes.
            recordInsertList.add(drmParameters);
            recordInsertList.insertDatabase();
        }

        retailParameters = RetailParameters::find(true);
        retailParameters.systemInUse = 1;
        retailParameters.update();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEcoResAttributes</Name>
				<Source><![CDATA[
    private void setEcoResAttributes(RefRecId _attributeGroupRecId, boolean doProgressCount = true)
    {
        this.addToEcoResAttribute(_attributeGroupRecId, EcoResAttributeModifier::Catalog, "@RET490090", "@RET490120");
        this.addToEcoResAttribute(_attributeGroupRecId, EcoResAttributeModifier::Catalog, "@RET490101", "@RET490121");
        this.addToEcoResAttribute(_attributeGroupRecId, EcoResAttributeModifier::Catalog, "@RET490112", "@RET490122");

        if (doProgressCount)
        {
            progressCounter++;
            progress.setCount(progressCounter);
            progress.setText(strFmt("%1", tableStr(EcoResAttribute)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMassUpdateProductProperty</Name>
				<Source><![CDATA[
    public void setMassUpdateProductProperty()
    {
        RetailMassUpdateUploadDBManager massUpdateManager;

        massUpdateManager = new RetailMassUpdateUploadDBManager();

        massUpdateManager.iterateFastTabPage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsButtonGrid</Name>
				<Source><![CDATA[
    public void setPOSIsButtonGrid()
    {
        listPosIsButtonGrid = new RecordInsertList(tableNum(RetailButtonGrid), true, false, true);

        this.addToPOSIsButtonGrid("20", this.rsdLabelToString(literalStr("@RET5429")), 0, 0, 0, 0); // "Default"
        this.addToPOSIsButtonGrid("40", this.rsdLabelToString(literalStr("@RET5430")), 0, 0, 0, 0); // "Transaction"
        this.addToPOSIsButtonGrid("5", this.rsdLabelToString(literalStr("@RET5433")), 0, 0, 0, 0); // "Payments"
        this.addToPOSIsButtonGrid("50", this.rsdLabelToString(literalStr("@RET5432")), 0, 0, 0, 0); // "Tasks"
        this.addToPOSIsButtonGrid("60", this.rsdLabelToString(literalStr("@RET5431")), 0, 0, 0, 0); // "Discounts"
        this.addToPOSIsButtonGrid("70", this.rsdLabelToString(literalStr("@RET5434")), 0, 0, 0, 0); // "Line Item"

        // <Retail>
        // POS
        // Welcome Screen 1
        this.addToPOSIsButtonGrid("80", this.rsdLabelToString(literalStr("@REX4161163")), 0, 0, 0, 0); // "Get Started"
        // Welcome Screen 2
        this.addToPOSIsButtonGrid("90", this.rsdLabelToString(literalStr("@REX4161164")), 0, 0, 0, 0); // "Tasks"
        // Transaction Page 1 (Transaction Payments)
        this.addToPOSIsButtonGrid("100", this.rsdLabelToString(literalStr("@REX4161165")), 0, 0, 0, 0); // "Transaction Payments"
        // Transaction Page 2 (Main POS)
        this.addToPOSIsButtonGrid("110", this.rsdLabelToString(literalStr("@REX4161166")), 0, 0, 0, 0); // "Main POS"
        // Transaction Page 3 (Transaction)
        this.addToPOSIsButtonGrid("120", this.rsdLabelToString(literalStr("@REX4161161")), 0, 0, 0, 0); // "Transaction"
        // Transaction Page 4 (Price and Discount)
        this.addToPOSIsButtonGrid("130", this.rsdLabelToString(literalStr("@REX4161167")), 0, 0, 0, 0); // "Price and Discount"
        // Transaction Page 5 (Customer Order Transactions)
        this.addToPOSIsButtonGrid("140", this.rsdLabelToString(literalStr("@SYP4861351")), 0, 0, 0, 0); // "Customer Order Transactions"
        // </Retail>

        listPosIsButtonGrid.insertDatabase();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailButtonGrid)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsButtonGridButtons</Name>
				<Source><![CDATA[
    void setPOSIsButtonGridButtons()
    {
        listPosIsButtonGridButtons = new RecordInsertList(tableNum(RetailButtonGridButtons), true, false, true);

        this.addToPOSIsButtonGridButtons(94, 1, 1, 1, 1, 200, '1', 106, this.rsdLabelToString(literalStr("@RET5482")), 12, '5', 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay cash"
        this.addToPOSIsButtonGridButtons(95, 2, 1, 1, 1, 206, '1', 107, this.rsdLabelToString(literalStr("@RET5487")), 12, '5', 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay cash quick"
        this.addToPOSIsButtonGridButtons(96, 3, 1, 1, 1, 201, '', 108, this.rsdLabelToString(literalStr("@RET5483")), 12, '5', 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay card"
        this.addToPOSIsButtonGridButtons(97, 4, 1, 1, 1, 202, '4', 109, this.rsdLabelToString(literalStr("@RET5484")), 0, '5', 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay customer account"
        this.addToPOSIsButtonGridButtons(98, 5, 1, 1, 1, 203, "6", 110, this.rsdLabelToString(literalStr("@RET5435")), 12, "5", 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay Currency"
        this.addToPOSIsButtonGridButtons(207, 1, 1, 0, 1, 108, "", 103, this.rsdLabelToString(literalStr("@RET5442")), 16, "20", 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Item Search"
        this.addToPOSIsButtonGridButtons(208, 1, 1, 1, 1, 401, "40", 104, this.rsdLabelToString(literalStr("@RET5437")), 16, "20", 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Edit Transaction"
        this.addToPOSIsButtonGridButtons(209, 1, 1, 3, 1, 401, "50", 101, this.rsdLabelToString(literalStr("@RET5432")), 16, "20", 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Tasks"
        this.addToPOSIsButtonGridButtons(210, 1, 1, 4, 1, 401, "60", 100, this.rsdLabelToString(literalStr("@RET5431")), 16, "20", 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Discounts"
        this.addToPOSIsButtonGridButtons(214, 1, 1, 1, 1, 501, "", 0, this.rsdLabelToString(literalStr("@RET5502")), 12, "40", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Transaction Comment"
        this.addToPOSIsButtonGridButtons(217, 2, 1, 1, 1, 114, "", 0, this.rsdLabelToString(literalStr("@RET5476")), 12, "40", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); //"Return Transaction"
        this.addToPOSIsButtonGridButtons(218, 2, 1, 3, 1, 0, "", 0, "", 12, "40", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);
        this.addToPOSIsButtonGridButtons(224, 1, 1, 2, 1, 504, "", 0, this.rsdLabelToString(literalStr("@RET5505")), 12, "40", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Recall Transaction"
        this.addToPOSIsButtonGridButtons(225, 2, 1, 2, 1, 503, "", 0, this.rsdLabelToString(literalStr("@RET5504")), 12, "40", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Suspend Transaction"
        this.addToPOSIsButtonGridButtons(226, 1, 1, 3, 1, 500, "", 0, this.rsdLabelToString(literalStr("@RET5448")), 12, "40", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Void Transaction"
        this.addToPOSIsButtonGridButtons(227, 2, 1, 1, 1, 1212, "", 0, this.rsdLabelToString(literalStr("@RET5555")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Bank Drop"
        this.addToPOSIsButtonGridButtons(228, 1, 1, 2, 1, 801, "", 0, this.rsdLabelToString(literalStr("@RET5530")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Inventory Lookup"
        this.addToPOSIsButtonGridButtons(229, 4, 1, 3, 1, 803, "", 0, this.rsdLabelToString(literalStr("@RET5532")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Picking and Receiving"
        this.addToPOSIsButtonGridButtons(231, 2, 1, 3, 1, 1100, "", 0, this.rsdLabelToString(literalStr("@RET5550")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Customer Account Deposit"
        this.addToPOSIsButtonGridButtons(232, 3, 1, 3, 1, 512, "", 0, this.rsdLabelToString(literalStr("@RET5436")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);  // "Issue Gift Certificate"
        this.addToPOSIsButtonGridButtons(233, 3, 1, 2, 1, 115, "", 0, this.rsdLabelToString(literalStr("@RET5449")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Show Journal"
        this.addToPOSIsButtonGridButtons(235, 1, 1, 3, 1, 612, "", 0, this.rsdLabelToString(literalStr("@RET5523")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Customer Add"
        this.addToPOSIsButtonGridButtons(236, 4, 1, 1, 1, 1000, "", 0, this.rsdLabelToString(literalStr("@RET5546")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Open Drawer"
        this.addToPOSIsButtonGridButtons(237, 1, 1, 4, 1, 802, "", 0, this.rsdLabelToString(literalStr("@RET5531")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Stock Count"
        this.addToPOSIsButtonGridButtons(239, 1, 1, 1, 1, 1200, "", 0, this.rsdLabelToString(literalStr("@RET5551")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Declare Start Amount"
        this.addToPOSIsButtonGridButtons(240, 2, 1, 2, 1, 101, "", 0, this.rsdLabelToString(literalStr("@RET5465")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Price Check"
        this.addToPOSIsButtonGridButtons(241, 3, 1, 1, 1, 1052, "", 0, this.rsdLabelToString(literalStr("@RET5440")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Tender Declaration"
        this.addToPOSIsButtonGridButtons(243, 1, 1, 2, 1, 303, "", 0, this.rsdLabelToString(literalStr("@RET5438")), 12, "60", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Total Discount Percent"
        this.addToPOSIsButtonGridButtons(246, 1, 1, 1, 1, 301, "", 0, this.rsdLabelToString(literalStr("@RET5496")), 12, "60", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Line Discount Percent"
        this.addToPOSIsButtonGridButtons(248, 2, 1, 1, 1, 300, "", 0, this.rsdLabelToString(literalStr("@RET5495")), 12, "60", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Line Discount Amount"
        this.addToPOSIsButtonGridButtons(250, 1, 1, 3, 1, 104, "", 0, this.rsdLabelToString(literalStr("@RET5468")), 12, "60", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Price Override"
        this.addToPOSIsButtonGridButtons(251, 2, 1, 2, 1, 302, "", 0, this.rsdLabelToString(literalStr("@RET5497")), 12, "60", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Total Discount Amount"
        this.addToPOSIsButtonGridButtons(252, 2, 1, 3, 1, 303, "30", 0, this.rsdLabelToString(literalStr("@RET5439")), 0, "60", 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Employee Discount 30%"
        this.addToPOSIsButtonGridButtons(257, 4, 1, 2, 1, 117, "", 0, this.rsdLabelToString(literalStr("@RET5478")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Loyalty Request"
        this.addToPOSIsButtonGridButtons(258, 2, 1, 4, 1, 515, "", 0,  this.rsdLabelToString(literalStr("@RET5513")), 12, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Sales Order"
        this.addToPOSIsButtonGridButtons(259, 3, 1, 4, 1, 0, "", 0, "", 0, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);
        this.addToPOSIsButtonGridButtons(260, 4, 1, 4, 1, 0, "", 0, "", 0, "50", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);
        this.addToPOSIsButtonGridButtons(261, 1, 1, 2, 1, 123, "", 0, this.rsdLabelToString(literalStr("@RET5481")), 12, "70", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Change Unit of Measure"
        this.addToPOSIsButtonGridButtons(262, 1, 1, 1, 1, 105, "", 0, this.rsdLabelToString(literalStr("@RET5443")), 12, "70", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Set Qty"
        this.addToPOSIsButtonGridButtons(264, 1, 1, 4, 1, 0, "", 0, "", 0, "70", 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);
        this.addToPOSIsButtonGridButtons(265, 2, 1, 1, 1, 106, "", 0, this.rsdLabelToString(literalStr("@RET5441")), 12, "70", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Clear Qty"
        this.addToPOSIsButtonGridButtons(266, 2, 1, 3, 1, 102, "", 0, this.rsdLabelToString(literalStr("@RET5446")), 12, "70", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Void Item"
        this.addToPOSIsButtonGridButtons(268, 2, 1, 4, 1, 0, "", 0, "", 0, "70", 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);
        this.addToPOSIsButtonGridButtons(269, 2, 1, 2, 1, 103, "", 0, this.rsdLabelToString(literalStr("@RET5467")), 12, "70", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Item Comment"
        this.addToPOSIsButtonGridButtons(273, 1, 1, 3, 1, 109, "", 0, this.rsdLabelToString(literalStr("@RET5447")), 12, "70", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); // "Return Item"
        this.addToPOSIsButtonGridButtons(274, 1, 1, 5, 1, 108, "", 103, this.rsdLabelToString(literalStr("@RET5442")), 16, "20", 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Item Search"
        this.addToPOSIsButtonGridButtons(275, 1, 1, 2, 1, 401, "70", 102, this.rsdLabelToString(literalStr("@RET5444")), 16, "20", 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Edit Line Item"
        this.addToPOSIsButtonGridButtons(276, 1, 1, 4, 1, 0, "", 0, "", 0, "60", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);
        this.addToPOSIsButtonGridButtons(277, 2, 1, 4, 1, 0, "", 0, "", 0, "60", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);
        this.addToPOSIsButtonGridButtons(282, 1, 1, 6, 1, 701, "", 105, this.rsdLabelToString(literalStr("@RET5450")), 12, "20", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Log Off"

        // Welcome Screen 1 "Get Started"
        this.addToPOSIsButtonGridButtons(300, 1, 4, 1, 2, 100, "", 105, this.rsdLabelToString(literalStr("@REX4161162")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Sale"
        this.addToPOSIsButtonGridButtons(301, 1, 2, 3, 2, 101, "", 105, this.rsdLabelToString(literalStr("@RET5465")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Price Check"
        this.addToPOSIsButtonGridButtons(302, 3, 2, 3, 2, 801, "", 105, this.rsdLabelToString(literalStr("@RET5530")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Inventory Lookup"
        this.addToPOSIsButtonGridButtons(303, 1, 1, 5, 1, 802, "", 105, this.rsdLabelToString(literalStr("@RET5531")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Stock Count"
        this.addToPOSIsButtonGridButtons(304, 2, 1, 5, 1, 803, "", 105, this.rsdLabelToString(literalStr("@RET5532")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Picking and Receiving"
        this.addToPOSIsButtonGridButtons(305, 3, 1, 5, 1, 115, "", 105, this.rsdLabelToString(literalStr("@RET5449")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Show Journal"
        this.addToPOSIsButtonGridButtons(306, 4, 1, 5, 1, 1003, "", 105, this.rsdLabelToString(literalStr("@RET3133")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Reports"
        this.addToPOSIsButtonGridButtons(307, 1, 2, 6, 1, 920, "", 105, this.rsdLabelToString(literalStr("@RET4040120")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Time Clock"
        this.addToPOSIsButtonGridButtons(308, 3, 2, 6, 1, 114, "", 105, this.rsdLabelToString(literalStr("@RET5476")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Return Transaction"
        this.addToPOSIsButtonGridButtons(309, 1, 2, 7, 1, 921, "", 105, this.rsdLabelToString(literalStr("@RET4160437")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "View Time Clock Entries"
        this.addToPOSIsButtonGridButtons(310, 3, 2, 7, 1, 515, "", 105, this.rsdLabelToString(literalStr("@RET260930")), 12, "80", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Recall Order"

        // Welcome Screen 2 "Tasks"
        this.addToPOSIsButtonGridButtons(311, 1, 2, 1, 1, 1000, "", 105, this.rsdLabelToString(literalStr("@RET5546")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Open Drawer"
        this.addToPOSIsButtonGridButtons(312, 3, 2, 1, 1, 517, "", 105, this.rsdLabelToString(literalStr("@RET5515")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Income Accounts"
        this.addToPOSIsButtonGridButtons(313, 1, 2, 2, 1, 518, "", 105, this.rsdLabelToString(literalStr("@RET5516")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Expense Accounts"
        this.addToPOSIsButtonGridButtons(314, 3, 2, 2, 1, 918, "", 105, this.rsdLabelToString(literalStr("@Retail:RetailEODManageShifts")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Show Blind Closed Shifts"
        this.addToPOSIsButtonGridButtons(315, 1, 2, 3, 1, 1052, "", 105, this.rsdLabelToString(literalStr("@RET5440")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Tender Declaration"
        this.addToPOSIsButtonGridButtons(316, 3, 2, 3, 1, 1053, "", 105, this.rsdLabelToString(literalStr("@RET260041")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Blind Close Shift"
        this.addToPOSIsButtonGridButtons(317, 1, 2, 4, 1, 1054, "", 105, this.rsdLabelToString(literalStr("@RET260039")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Suspend Shift"
        this.addToPOSIsButtonGridButtons(318, 3, 2, 4, 1, 1055, "", 105, this.rsdLabelToString(literalStr("@RET260042")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Close Shift"
        this.addToPOSIsButtonGridButtons(319, 1, 2, 5, 1, 1056, "", 105, this.rsdLabelToString(literalStr("@RET5534")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Print X"
        this.addToPOSIsButtonGridButtons(320, 3, 2, 5, 1, 1057, "", 105, this.rsdLabelToString(literalStr("@REX4161153")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Print Z"
        this.addToPOSIsButtonGridButtons(321, 1, 2, 6, 1, 1200, "", 105, this.rsdLabelToString(literalStr("@REX4161154")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Declare Start"
        this.addToPOSIsButtonGridButtons(322, 3, 2, 6, 1, 1201, "", 105, this.rsdLabelToString(literalStr("@RET5552")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Float Entry"
        this.addToPOSIsButtonGridButtons(323, 1, 2, 7, 1, 1210, "", 105, this.rsdLabelToString(literalStr("@RET5553")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Tender Removal"
        this.addToPOSIsButtonGridButtons(324, 3, 2, 7, 1, 1212, "", 105, this.rsdLabelToString(literalStr("@RET5555")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Bank Drop"
        this.addToPOSIsButtonGridButtons(325, 1, 2, 8, 1, 1211, "", 105, this.rsdLabelToString(literalStr("@RET5554")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Safe Drop"
        this.addToPOSIsButtonGridButtons(361, 3, 2, 8, 1, 1215, "", 105, this.rsdLabelToString(literalStr("@REX4520191")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Change Password"
        this.addToPOSIsButtonGridButtons(362, 1, 2, 9, 1, 1216, "", 105, this.rsdLabelToString(literalStr("@REX4520190")), 12, "90", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Reset Password"

        // Transaction Page "Transaction Payments"
        this.addToPOSIsButtonGridButtons(326, 1, 1, 1, 1, 206, "", 105, this.rsdLabelToString(literalStr("@RET5487")), 12, "100", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay Cash Quick"
        this.addToPOSIsButtonGridButtons(327, 2, 1, 1, 1, 201, "", 105, this.rsdLabelToString(literalStr("@RET5483")), 12, "100", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay Card"
        this.addToPOSIsButtonGridButtons(328, 3, 1, 1, 1, 214, "", 105, this.rsdLabelToString(literalStr("@RET5494")), 12, "100", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay Gift Card"
        this.addToPOSIsButtonGridButtons(329, 4, 1, 1, 1, 203, "", 105, this.rsdLabelToString(literalStr("@RET5435")), 12, "100", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pay Currency"

        // Transaction Page "Main POS"
        this.addToPOSIsButtonGridButtons(330, 1, 2, 1, 1, 105, "", 105, this.rsdLabelToString(literalStr("@RET5443")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Set Quantity"
        this.addToPOSIsButtonGridButtons(331, 3, 2, 1, 1, 123, "", 105, this.rsdLabelToString(literalStr("@REX4161155")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Change UoM"
        this.addToPOSIsButtonGridButtons(332, 1, 2, 2, 1, 102, "", 105, this.rsdLabelToString(literalStr("@RET5446")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Void Product"
        this.addToPOSIsButtonGridButtons(333, 3, 2, 2, 1, 211, "", 105, this.rsdLabelToString(literalStr("@RET5491")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Void Payment"
        this.addToPOSIsButtonGridButtons(334, 1, 2, 3, 1, 109, "", 105, this.rsdLabelToString(literalStr("@RET5447")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Return Product"
        this.addToPOSIsButtonGridButtons(335, 3, 2, 3, 1, 103, "", 105, this.rsdLabelToString(literalStr("@RET5467")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Product Comment"
        this.addToPOSIsButtonGridButtons(336, 1, 2, 4, 1, 1217, "", 105, this.rsdLabelToString(literalStr("@REX4040003")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Kit Disassembly"
        this.addToPOSIsButtonGridButtons(337, 3, 2, 4, 1, 117, "", 105, this.rsdLabelToString(literalStr("@RET5478")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Add Loyalty Card"
        this.addToPOSIsButtonGridButtons(338, 1, 2, 5, 1, 511, "", 105, this.rsdLabelToString(literalStr("@RET5510")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Issue Credit Memo"
        this.addToPOSIsButtonGridButtons(339, 3, 2, 5, 1, 512, "", 105, this.rsdLabelToString(literalStr("@RET5511")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Issue Gift Card"
        this.addToPOSIsButtonGridButtons(340, 1, 2, 6, 1, 519, "", 105, this.rsdLabelToString(literalStr("@RET5595")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Add to Gift Card"
        this.addToPOSIsButtonGridButtons(341, 3, 2, 6, 1, 520, "", 105, this.rsdLabelToString(literalStr("@RET5596")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Gift Card Balance"
        this.addToPOSIsButtonGridButtons(381, 1, 2, 7, 1, 215, "", 105, this.rsdLabelToString(literalStr("@Retail:CashOutGiftCardLabel")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Cash out gift card"

        // links to transaction button grid
        this.addToPOSIsButtonGridButtons(342, 1, 2, 7, 1, 401, "120", 105, this.rsdLabelToString(literalStr("@REX4161161")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Transaction*"

        // links to price and discount button grid
        this.addToPOSIsButtonGridButtons(343, 3, 2, 7, 1, 401, "130", 105, this.rsdLabelToString(literalStr("@REX4161159")), 12, "110", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Price and Discount*"

        // Transaction Page "Transaction"
        this.addToPOSIsButtonGridButtons(344, 1, 2, 1, 1, 500, "", 105, this.rsdLabelToString(literalStr("@RET5448")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Void Transaction"
        this.addToPOSIsButtonGridButtons(345, 3, 2, 1, 1, 122, "", 105, this.rsdLabelToString(literalStr("@RET5480")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Invoice Comment"
        this.addToPOSIsButtonGridButtons(346, 1, 2, 2, 1, 127, "", 105, this.rsdLabelToString(literalStr("@REX4161156")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Override Trans Tax"
        this.addToPOSIsButtonGridButtons(347, 3, 2, 2, 1, 128, "", 105, this.rsdLabelToString(literalStr("@REX4161157")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Override Trans Tax From List"
        this.addToPOSIsButtonGridButtons(348, 1, 2, 3, 1, 503, "", 105, this.rsdLabelToString(literalStr("@RET5504")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Suspend Transaction"
        this.addToPOSIsButtonGridButtons(349, 3, 2, 3, 1, 504, "", 105, this.rsdLabelToString(literalStr("@RET5505")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Recall Transaction"
        this.addToPOSIsButtonGridButtons(350, 1, 2, 4, 1, 516, "", 105, this.rsdLabelToString(literalStr("@RET5514")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Sales Invoice"
        this.addToPOSIsButtonGridButtons(351, 3, 2, 4, 1, 621, "", 105, this.rsdLabelToString(literalStr("@SYS105996")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Create Quotation"
        this.addToPOSIsButtonGridButtons(352, 1, 2, 5, 1, 620, "", 105, this.rsdLabelToString(literalStr("@RET4040159")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Create Customer Order"
        this.addToPOSIsButtonGridButtons(353, 3, 2, 5, 1, 614, "", 105, this.rsdLabelToString(literalStr("@RET260542")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Edit Customer Order"
        this.addToPOSIsButtonGridButtons(376, 1, 2, 5, 1, 636, "", 105, this.rsdLabelToString(literalStr("@Retail:RetailOperation_CreateRetailTransaction")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Create Retail Transaction"

        // Links to transaction Page "More Operations"
        this.addToPOSIsButtonGridButtons(354, 1, 2, 6, 1, 401, "140", 105, this.rsdLabelToString(literalStr("@SYP4861352")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "More Operations"

        // Links to navigate back to "Main POS" page
        this.addToPOSIsButtonGridButtons(355, 3, 2, 6, 1, 401, "110", 105, this.rsdLabelToString(literalStr("@SYP4861353")), 12, "120", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Previous Operations"

        // Transaction Page "Price and Discount"
        this.addToPOSIsButtonGridButtons(356, 1, 2, 1, 2, 303, "", 105, this.rsdLabelToString(literalStr("@RET5438")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Total Discount Percent"
        this.addToPOSIsButtonGridButtons(357, 3, 2, 1, 2, 302, "", 105, this.rsdLabelToString(literalStr("@RET5497")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Total Discount Amount"
        this.addToPOSIsButtonGridButtons(358, 1, 2, 3, 2, 301, "", 105, this.rsdLabelToString(literalStr("@RET5496")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Line Discount Percent"
        this.addToPOSIsButtonGridButtons(359, 3, 2, 3, 2, 300, "", 105, this.rsdLabelToString(literalStr("@RET5495")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Line Discount Amount"
        this.addToPOSIsButtonGridButtons(360, 1, 2, 5, 2, 104, "", 105, this.rsdLabelToString(literalStr("@RET5468")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Price Override"
        this.addToPOSIsButtonGridButtons(377, 1, 2, 9, 2, 401, "110", 105, this.rsdLabelToString(literalStr("@SYP4861353")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Previous Operations"
        this.addToPOSIsButtonGridButtons(378, 3, 2, 5, 2, 135, "", 105, this.rsdLabelToString(literalStr("@REX4161260")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Add affiliation from list"
        this.addToPOSIsButtonGridButtons(379, 1, 2, 7, 2, 643, "", 105, this.rsdLabelToString(literalStr("@Retail:AddCouponCode")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Add coupon code"
        this.addToPOSIsButtonGridButtons(380, 3, 2, 7, 2, 644, "", 105, this.rsdLabelToString(literalStr("@Retail:RemoveCouponCode")), 12, "130", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Remove coupon code"

        // Transaction Page "More Customer Order"
        this.addToPOSIsButtonGridButtons(363, 1, 2, 1, 1, 132, "", 105, this.rsdLabelToString(literalStr("@RET261008")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Deposit Override"
        this.addToPOSIsButtonGridButtons(364, 3, 2, 1, 1, 1100, "", 105, this.rsdLabelToString(literalStr("@RET5550")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Customer Account Deposit"
        this.addToPOSIsButtonGridButtons(365, 1, 2, 2, 1, 502, "", 105, this.rsdLabelToString(literalStr("@RET5503")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Change sales person"
        this.addToPOSIsButtonGridButtons(366, 3, 2, 2, 1, 627, "", 105, this.rsdLabelToString(literalStr("@SYP4861354")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Recalculate"
        this.addToPOSIsButtonGridButtons(367, 1, 2, 3, 1, 629, "", 105, this.rsdLabelToString(literalStr("@SYP4861355")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Ship Selected Products"
        this.addToPOSIsButtonGridButtons(368, 3, 2, 3, 1, 630, "", 105, this.rsdLabelToString(literalStr("@SYP4861356")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Ship All Products"
        this.addToPOSIsButtonGridButtons(369, 1, 2, 4, 1, 631, "", 105, this.rsdLabelToString(literalStr("@SYP4861357")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pick Up Selected Products"
        this.addToPOSIsButtonGridButtons(370, 3, 2, 4, 1, 632, "", 105, this.rsdLabelToString(literalStr("@SYP4861358")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Pick Up All Products"
        this.addToPOSIsButtonGridButtons(371, 1, 2, 5, 1, 641, "", 105, this.rsdLabelToString(literalStr("@Retail:CarryoutAllProducts")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Carry Out Selected Products"
        this.addToPOSIsButtonGridButtons(372, 3, 2, 5, 1, 642, "", 105, this.rsdLabelToString(literalStr("@@Retail:CarryoutSelectedProducts")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Carry Out All Products"
        this.addToPOSIsButtonGridButtons(373, 1, 2, 6, 1, 129, "", 105, this.rsdLabelToString(literalStr("@RET5611")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Override line product tax"
        this.addToPOSIsButtonGridButtons(374, 3, 2, 6, 1, 130, "", 105, this.rsdLabelToString(literalStr("@RET5612")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Override line product tax from list"
        this.addToPOSIsButtonGridButtons(375, 1, 2, 7, 1, 131, "", 105, this.rsdLabelToString(literalStr("@RET260156")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Packing slip"

        // Link to navigate back to "Transaction" page
        this.addToPOSIsButtonGridButtons(376, 3, 2, 6, 1, 401, "120", 105, this.rsdLabelToString(literalStr("@SYP4861353")), 12, "140", 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1); // "Previous Operations"

        listPosIsButtonGridButtons.insertDatabase();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailButtonGridButtons)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsFormLayout</Name>
				<Source><![CDATA[
    private void setPOSIsFormLayout()
    {
        listPosIsFormLayout = new RecordInsertList(tablenum(RetailFormLayout), true, false, true);

        // NOTE: These values must align with POS.  See IPrinting.FormType.
        this.addToPOSIsFormLayout('1', this.rsdLabelToString(literalstr("@RET5453")), this.rsdLabelToString(literalstr("@RET5451")), 0, "Retail_Header_1_txt", "Retail_Lines_1_txt", "Retail_Footer_1_txt", 0, 0, 0, 0, RetailReceipt::Receipt); // "Customers Receipt"
        this.addToPOSIsFormLayout('2', this.rsdLabelToString(literalstr("@RET5454")), this.rsdLabelToString(literalstr("@RET5452")), 0, "Retail_Header_2_txt", "Retail_Lines_2_txt", "Retail_Footer_2_txt", 0, 0, 0, 0, RetailReceipt::CardReceiptForShop); // "Store's Credit Card Receipt"
        this.addToPOSIsFormLayout('3', this.rsdLabelToString(literalstr("@RET5455")), this.rsdLabelToString(literalstr("@RET5597")), 0, "Retail_Header_3_txt", "Retail_Lines_3_txt", "Retail_Footer_3_txt", 0, 0, 0, 0, RetailReceipt::CardReceiptForCust); // "Card holders receipt"
        this.addToPOSIsFormLayout('4', this.rsdLabelToString(literalstr("@RET5456")), this.rsdLabelToString(literalstr("@RET5598")), 0, "Retail_Header_4_txt", "Retail_Lines_4_txt", "Retail_Footer_4_txt", 0, 0, 0, 0, RetailReceipt::CardReceiptForShopReturn); // "Stores Return Credit Card Receipt"
        this.addToPOSIsFormLayout('5', this.rsdLabelToString(literalstr("@RET5457")), this.rsdLabelToString(literalstr("@RET5599")), 0, "Retail_Header_5_txt", "Retail_Lines_5_txt", "Retail_Footer_5_txt", 0, 0, 0, 0, RetailReceipt::CardReceiptForCustReturn); // "Card holders Return Receipt"
        this.addToPOSIsFormLayout('6', this.rsdLabelToString(literalstr("@RET5458")), this.rsdLabelToString(literalstr("@RET5600")), 0, "Retail_Header_6_txt", "Retail_Lines_6_txt", "Retail_Footer_6_txt", 0, 0, 0, 0, RetailReceipt::EFTMessage); // "Card Info"
        this.addToPOSIsFormLayout('7', this.rsdLabelToString(literalstr("@RET5459")), this.rsdLabelToString(literalstr("@RET5601")), 0, "Retail_Header_7_txt", "Retail_Lines_7_txt", "Retail_Footer_7_txt", 0, 0, 0, 0, RetailReceipt::CustAcntReceiptForShop); // "Stores Customer Acc Receipt"
        this.addToPOSIsFormLayout('8', this.rsdLabelToString(literalstr("@RET5460")), this.rsdLabelToString(literalstr("@RET5602")), 0, "Retail_Header_8_txt", "Retail_Lines_8_txt", "Retail_Footer_8_txt", 0, 0, 0, 0, RetailReceipt::CustAcntReceiptForCust); // "Customer Account Receipt"
        this.addToPOSIsFormLayout('9', this.rsdLabelToString(literalstr("@RET5461")), this.rsdLabelToString(literalstr("@RET5603")), 0, "Retail_Header_9_txt", "Retail_Lines_9_txt", "Retail_Footer_9_txt", 0, 0, 0, 0, RetailReceipt::CustAcntReceiptForShopReturn); // "Stores Return Customer Acc Receipt"
        this.addToPOSIsFormLayout('10', this.rsdLabelToString(literalstr("@RET5462")), this.rsdLabelToString(literalstr("@RET5604")), 0, "Retail_Header_10_txt", "Retail_Lines_10_txt", "Retail_Footer_10_txt", 0, 0, 0, 0, RetailReceipt::CustAcntReceiptForCustReturn); // "Customer's Account return receipt"
        // 11: TenderDeclaration
        this.addToPOSIsFormLayout('12', this.rsdLabelToString(literalstr("@RET5463")), this.rsdLabelToString(literalstr("@RET5463")), 0, "Retail_Header_12_txt", "Retail_Lines_12_txt", "Retail_Footer_12_txt", 1, 0, 0, 0, RetailReceipt::Invoice); // "Invoice"
        // 13: RemoveTender
        this.addToPOSIsFormLayout('14', this.rsdLabelToString(literalstr("@RET5464")), this.rsdLabelToString(literalstr("@RET5605")), 0, "Retail_Header_14_txt", "Retail_Lines_14_txt", "Retail_Footer_14_txt", 0, 0, 0, 0, RetailReceipt::CustomerAccountDeposit); // "Customer account payment"
        this.addToPOSIsFormLayout('15', this.rsdLabelToString(literalstr("@RET260624")), this.rsdLabelToString(literalstr("@RET260624")), 0, "Retail_Header_15_txt", "Retail_Lines_15_txt", "Retail_Footer_15_txt", 0, 0, 0, 0, RetailReceipt::CreditMemo); // "Credit memo receipt"
        // 16: CreditMemoBalance
        // 17: FloatEntry
        this.addToPOSIsFormLayout('18', this.rsdLabelToString(literalstr("@RET260806")), this.rsdLabelToString(literalstr("@RET260806")), 0, "Retail_Header_16_txt", "Retail_Lines_16_txt", "Retail_Footer_16_txt", 0, 0, 0, 0, RetailReceipt::SalesOrderReceipt); // "Sales order receipt"
        this.addToPOSIsFormLayout('19', this.rsdLabelToString(literalstr("@RET260810")), this.rsdLabelToString(literalstr("@RET260810")), 0, "Retail_Header_20_txt", "Retail_Lines_20_txt", "Retail_Footer_20_txt", 0, 0, 0, 0, RetailReceipt::SalesInvoiceReceipt); // "Sales invoice receipt"
        // 20: GiftCertificate
        this.addToPOSIsFormLayout('21', this.rsdLabelToString(literalstr("@RET260807")), this.rsdLabelToString(literalstr("@RET260807")), 0, "Retail_Header_17_txt", "Retail_Lines_17_txt", "Retail_Footer_17_txt", 0, 0, 0, 0, RetailReceipt::QuotationReceipt); // "Quotation receipt"
        this.addToPOSIsFormLayout('22', this.rsdLabelToString(literalstr("@RET260808")), this.rsdLabelToString(literalstr("@RET260808")), 0, "Retail_Header_18_txt", "Retail_Lines_18_txt", "Retail_Footer_18_txt", 0, 0, 0, 0, RetailReceipt::PackingSlip); // "Packing slip"
        this.addToPOSIsFormLayout('23', this.rsdLabelToString(literalstr("@RET260809")), this.rsdLabelToString(literalstr("@RET260809")), 0, "Retail_Header_19_txt", "Retail_Lines_19_txt", "Retail_Footer_19_txt", 0, 0, 0, 0, RetailReceipt::PickupReceipt); // "Pickup receipt"
        // 30: BankDrop
        // 31: SafeDrop
        this.addToPOSIsFormLayout('32', this.rsdLabelToString(literalstr("@RET4160359")), this.rsdLabelToString(literalstr("@RET4160359")), 0, "Retail_Header_32_txt", "Retail_Lines_32_txt", "Retail_Footer_32_txt", 0, 0, 0, 0, RetailReceipt::OrderSummaryReceipt); // "Sales order summary"
        this.addToPOSIsFormLayout('33', this.rsdLabelToString(literalstr("@SYS4010138")), this.rsdLabelToString(literalstr("@SYS4010138")), 0, "Retail_Header_33_txt", "Retail_Lines_33_txt", "Retail_Footer_33_txt", 0, 0, 0, 0, RetailReceipt::GiftReceipt); // "Gift receipt"
        this.addToPOSIsFormLayout('34', this.rsdLabelToString(literalstr("@REX4160706")), this.rsdLabelToString(literalstr("@REX4160706")), 0, "Retail_Header_34_txt", "Retail_Lines_34_txt", "Retail_Footer_34_txt", 0, 0, 0, 0, RetailReceipt::ReturnLabel); // "Return label"
        this.addToPOSIsFormLayout('35', this.rsdLabelToString(literalstr("@SYP4930054")), this.rsdLabelToString(literalstr("@SYP4930054")), 0, "Retail_Header_35_txt", "Retail_Lines_35_txt", "Retail_Footer_35_txt", 0, 0, 0, 0, RetailReceipt::EFDocDANFESimplified); // "DANFE Simplified"
        this.addToPOSIsFormLayout('36', this.rsdLabelToString(literalstr("@SYP4930055")), this.rsdLabelToString(literalstr("@SYP4930055")), 0, "Retail_Header_36_txt", "Retail_Lines_36_txt", "Retail_Footer_36_txt", 0, 0, 0, 0, RetailReceipt::EFDocDANFEDetailed); // "DANFE Detailed"

        // 37: PickingList
        this.addToPOSIsFormLayout('38', this.rsdLabelToString(literalstr("@Retail:ReceiptOpenDrawer")), this.rsdLabelToString(literalstr("@Retail:ReceiptOpenDrawer")), 0, "Retail_Header_38_txt", "Retail_Lines_38_txt", "Retail_Footer_38_txt", 0, 0, 0, 1 /* RetailPrintBehavior:DO_NOT_PRINT */, RetailReceipt::OpenDrawer); // "OpenDrawer"
        this.addToPOSIsFormLayout('39', this.rsdLabelToString(literalstr("@Retail:ReceiptSuspendedTransaction")), this.rsdLabelToString(literalstr("@Retail:ReceiptSuspendedTransaction")), 0, "Retail_Header_39_txt", "Retail_Lines_39_txt", "Retail_Footer_39_txt", 0, 0, 0, 0, RetailReceipt::SuspendedTransaction); // "SuspendTransaction"
        this.addToPOSIsFormLayout('40', this.rsdLabelToString(literalstr("@Retail:ReceiptGiftCardInquiry")), this.rsdLabelToString(literalstr("@Retail:ReceiptGiftCardInquiry")), 0, "Retail_Header_40_txt", "Retail_Lines_40_txt", "Retail_Footer_40_txt", 0, 0, 0, 1 /* RetailPrintBehavior:DO_NOT_PRINT */, RetailReceipt::GiftCardInquiry); // "GiftCardInquiry"
     
        // 43: TransferPackingSlip
        this.addToPOSIsFormLayout('43', this.rsdLabelToString(literalstr("@Retail:TransferPackingSlip")), this.rsdLabelToString(literalstr("@Retail:TransferPackingSlip")), 0, "Retail_Header_43_txt", "Retail_Lines_43_txt", "Retail_Footer_43_txt", 0, 0, 0, 1 /* RetailPrintBehavior:DO_NOT_PRINT */, RetailReceipt::TransferPackingSlip); // "TransferPackingSlip"
        this.addToPOSIsFormLayout('44', this.rsdLabelToString(literalstr("@Brazil_Retail:EFDocDanfeModel55")), this.rsdLabelToString(literalstr("@Brazil_Retail:EFDocDanfeModel55")), 0, "Retail_Header_44_txt", "Retail_Lines_44_txt", "Retail_Footer_44_txt", 0, 0, 0, 0, RetailReceipt::EFDocDanfeModel55); // "EFDocDanfeModel55"

        // 45: InventoryAdjustment
        this.addToPOSIsFormLayout('45', this.rsdLabelToString(literalstr("@RetailInventory:InventoryAdjustment")), this.rsdLabelToString(literalstr("@RetailInventory:InventoryAdjustment")), 0, "Retail_Header_45_txt", "Retail_Lines_45_txt", "Retail_Footer_45_txt", 0, 0, 0, 0, RetailReceipt::InventoryAdjustment); // "InventoryAdjustment"

        // 46: InventoryTransfer
        this.addToPOSIsFormLayout('46', this.rsdLabelToString(literalstr("@RetailInventory:InventoryTransfer")), this.rsdLabelToString(literalstr("@RetailInventory:InventoryTransfer")), 0, "Retail_Header_46_txt", "Retail_Lines_46_txt", "Retail_Footer_46_txt", 0, 0, 0, 0, RetailReceipt::InventoryTransfer); // "InventoryTransfer"

        listPosIsFormLayout.insertDatabase();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strfmt("%1", tablestr(RetailFormLayout)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsImages</Name>
				<Source><![CDATA[
    private void setPOSIsImages()
    {
        listPosIsImages = new RecordInsertList(tableNum(RetailImages), true, false, true);

        this.addToPOSIsImages(1, "Retail_Image_1_png");
        this.addToPOSIsImages(2, "Retail_Image_2_png");
        this.addToPOSIsImages(3, "Retail_Image_3_png");
        this.addToPOSIsImages(4, "Retail_Image_4_png");
        this.addToPOSIsImages(5, "Retail_Image_5_png");
        this.addToPOSIsImages(6, "Retail_Image_6_png");
        this.addToPOSIsImages(7, "Retail_Image_7_png");
        this.addToPOSIsImages(8, "Retail_Image_8_png");
        this.addToPOSIsImages(9, "Retail_Image_9_png");
        this.addToPOSIsImages(10, "Retail_Image_10_png");
        this.addToPOSIsImages(11, "Retail_Image_11_png");
        this.addToPOSIsImages(12, "Retail_Image_12_png");
        this.addToPOSIsImages(13, "Retail_Image_13_png");
        this.addToPOSIsImages(14, "Retail_Image_14_png");
        this.addToPOSIsImages(15, "Retail_Image_15_png");
        this.addToPOSIsImages(16, "Retail_Image_16_png");
        this.addToPOSIsImages(17, "Retail_Image_17_png");
        this.addToPOSIsImages(18, "Retail_Image_18_png");
        this.addToPOSIsImages(19, "Retail_Image_19_png");
        this.addToPOSIsImages(20, "Retail_Image_20_png");
        this.addToPOSIsImages(21, "Retail_Image_21_png");
        this.addToPOSIsImages(22, "Retail_Image_22_png");
        this.addToPOSIsImages(23, "Retail_Image_23_png");

        listPosIsImages.insertDatabase();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailImages)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsLanguageText</Name>
				<Source><![CDATA[
    private void setPOSIsLanguageText()
    {
        // no records

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailLanguageText)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSOperations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set retail operations
    /// </summary>
    internal void setPOSOperations()
    {
        RetailCheckUserAccess checkUserAccessYes = NoYes::Yes;
        RetailCheckUserAccess checkUserAccessNo = NoYes::No;
        RetailUserOperation userOperationYes = NoYes::Yes;
        RetailUserOperation userOperationNo = NoYes::No;

        listPosIsOperations = new RecordInsertList(tableNum(RetailOperations), true, false, true);

        this.addToPOSIsOperations(100, this.rsdLabelToString(literalStr("@RET5464")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::RetailItem, 1, 1, 1002);
        this.addToPOSIsOperations(101, this.rsdLabelToString(literalStr("@RET5465")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1000);
        this.addToPOSIsOperations(102, this.rsdLabelToString(literalStr("@RET5466")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(103, this.rsdLabelToString(literalStr("@RET5467")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(104, this.rsdLabelToString(literalStr("@RET5468")), 0, 0, checkUserAccessNo, userOperationYes,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(105, this.rsdLabelToString(literalStr("@RET5469")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(106, this.rsdLabelToString(literalStr("@RET5470")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(108, this.rsdLabelToString(literalStr("@RET5471")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1000, NoYes::Yes);
        this.addToPOSIsOperations(109, this.rsdLabelToString(literalStr("@RET5472")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(110, this.rsdLabelToString(literalStr("@RET5473")), 0, 0, checkUserAccessNo, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(112, this.rsdLabelToString(literalStr("@RET5474")), 0, 0, checkUserAccessNo, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(113, this.rsdLabelToString(literalStr("@RET5475")), 0, 0, checkUserAccessNo, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(114, this.rsdLabelToString(literalStr("@RET5476")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(115, this.rsdLabelToString(literalStr("@RET5477")), 1002, 1002, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0, 0, NoYes::Yes);
        this.addToPOSIsOperations(117, this.rsdLabelToString(literalStr("@RET5478")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(121, this.rsdLabelToString(literalStr("@RET5479")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(122, this.rsdLabelToString(literalStr("@RET5480")), 0, 0, checkUserAccessNo, userOperationYes,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(123, this.rsdLabelToString(literalStr("@RET5481")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(127, this.rsdLabelToString(literalStr("@RET5609")), 1018, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(128, this.rsdLabelToString(literalStr("@RET5610")), 1018, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(129, this.rsdLabelToString(literalStr("@RET5611")), 1018, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(130, this.rsdLabelToString(literalStr("@RET5612")), 1018, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(131, this.rsdLabelToString(literalStr("@RET260156")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(132, this.rsdLabelToString(literalStr("@RET261008")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(133, this.rsdLabelToString(literalStr("@Retail:AddWarrantyOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(134, this.rsdLabelToString(literalStr("@REX4161127")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1002);
        this.addToPOSIsOperations(135, this.rsdLabelToString(literalStr("@REX4161260")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1002);
        this.addToPOSIsOperations(136, this.rsdLabelToString(literalStr("@Retail:AddSerialNumberOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1002);
        this.addToPOSIsOperations(137, this.rsdLabelToString(literalStr("@Retail:AddAffiliationToCustomerOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(138, this.rsdLabelToString(literalStr("@Retail:RemoveAffiliationFromCustomerOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(139, this.rsdLabelToString(literalStr("@Retail:RetailPOSOperationConclude")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(140, this.rsdLabelToString(literalStr("@RetailAutoCharge:AddLineChargesOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(141, this.rsdLabelToString(literalStr("@RetailAutoCharge:AddHeaderChargesOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(142, this.rsdLabelToString(literalStr("@RetailAutoCharge:ManageChargesOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(143, this.rsdLabelToString(literalStr("@RetailAutoCharge:RecalculateChargesOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(144, this.rsdLabelToString(literalStr("@Retail:AddWarrantyToTransactionOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(200, this.rsdLabelToString(literalStr("@RET5482")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);
        this.addToPOSIsOperations(201, this.rsdLabelToString(literalStr("@RET5483")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(202, this.rsdLabelToString(literalStr("@RET5484")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 1, 1007);
        this.addToPOSIsOperations(203, this.rsdLabelToString(literalStr("@RET5485")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);
        this.addToPOSIsOperations(204, this.rsdLabelToString(literalStr("@RET5486")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);
        this.addToPOSIsOperations(206, this.rsdLabelToString(literalStr("@RET5487")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0); // Pay cash quick
        this.addToPOSIsOperations(207, this.rsdLabelToString(literalStr("@RET5488")), 0, 0, checkUserAccessYes, userOperationYes,RetailActionPropertyLookupTypeBase::TenderType, 1, 1, 1009);
        // Pay Corporate card operation was removed.
        // Do not user id 208.
        //this.addToPOSIsOperations(208, this.rsdLabelToString(literalStr("@RET5489")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType);
        this.addToPOSIsOperations(210, this.rsdLabelToString(literalStr("@RET5490")), 0, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(211, this.rsdLabelToString(literalStr("@RET5491")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(212, this.rsdLabelToString(literalStr("@RET5492")), 0, 0, checkUserAccessNo, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(213, this.rsdLabelToString(literalStr("@RET5493")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);
        this.addToPOSIsOperations(214, this.rsdLabelToString(literalStr("@RET5494")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 1, 1008);
        this.addToPOSIsOperations(215, this.rsdLabelToString(literalStr("@Retail:CashOutGiftCardLabel")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 1, 1014);

        // Unified Payment Experience in POS pay exact operations
        boolean isRetailUnifiedPaymentsExperienceInPOSFeatureEnabled = FeatureStateProvider::isFeatureEnabled(RetailEnableUnifiedPaymentsExperienceInPOSFeature::instance());
        if (isRetailUnifiedPaymentsExperienceInPOSFeatureEnabled)
        {
            this.addToPOSIsOperations(216, this.rsdLabelToString(literalStr("@RetailUnifiedPaymentsInPOS:PayCardExact")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);  // Pay card exact
            this.addToPOSIsOperations(217, this.rsdLabelToString(literalStr("@RetailUnifiedPaymentsInPOS:PayCheckExact")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);  // Pay check exact
            this.addToPOSIsOperations(218, this.rsdLabelToString(literalStr("@RetailUnifiedPaymentsInPOS:PayCustomerAccountExact")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);  // Pay customer account exact
            this.addToPOSIsOperations(219, this.rsdLabelToString(literalStr("@RetailUnifiedPaymentsInPOS:PayGiftCardExact")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);  // Pay gift card exact
            this.addToPOSIsOperations(220, this.rsdLabelToString(literalStr("@RetailUnifiedPaymentsInPOS:PayLoyaltyCardExact")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::TenderType, 0, 0);  // Pay loyalty card exact
        }

        this.addToPOSIsOperations(300, this.rsdLabelToString(literalStr("@RET5495")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(301, this.rsdLabelToString(literalStr("@RET5496")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(302, this.rsdLabelToString(literalStr("@RET5497")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(303, this.rsdLabelToString(literalStr("@RET5498")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(304, this.rsdLabelToString(literalStr("@REX4520719")), 0, 0, checkUserAccessYes, userOperationNo, RetailActionPropertyLookupTypeBase::None, 1, 1);

        //<GEERU>
        this.addToPOSIsOperations(305, this.rsdLabelToString(literalStr("@SYS4004430")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1009);
        //</GEERU>
        this.addToPOSIsOperations(310, this.rsdLabelToString(literalStr("@REX4520421")), 0, 0, checkUserAccessNo, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(311, this.rsdLabelToString(literalStr("@Retail:RemoveSystemDiscountsFromTransaction")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(312, this.rsdLabelToString(literalStr("@Retail:ReapplySystemDiscounts")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(400, this.rsdLabelToString(literalStr("@RET5622")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::Menu, 0, 0);
        this.addToPOSIsOperations(401, this.rsdLabelToString(literalStr("@RET5623")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::Menu, 0, 0);
        this.addToPOSIsOperations(500, this.rsdLabelToString(literalStr("@RET5501")), 1001, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(501, this.rsdLabelToString(literalStr("@RET5502")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(502, this.rsdLabelToString(literalStr("@RET5503")), 1002, 0, checkUserAccessYes, userOperationYes,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(503, this.rsdLabelToString(literalStr("@RET5504")), 1011, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(504, this.rsdLabelToString(literalStr("@RET5505")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(505, this.rsdLabelToString(literalStr("@RET5506")), 0, 0, checkUserAccessNo, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(506, this.rsdLabelToString(literalStr("@RET5507")), 0, 0, checkUserAccessNo, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);

        // Operation IDs 508 ("Pharmacy prescription cancel") and 510 ("Pharmacy prescriptions") removed. Do not use.

        this.addToPOSIsOperations(511, this.rsdLabelToString(literalStr("@RET5510")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(512, this.rsdLabelToString(literalStr("@RET5511")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1005);
        this.addToPOSIsOperations(513, this.rsdLabelToString(literalStr("@RET5512")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1);
        this.addToPOSIsOperations(515, this.rsdLabelToString(literalStr("@RET260930")), 1022, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1002);
        this.addToPOSIsOperations(516, this.rsdLabelToString(literalStr("@RET5514")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0, 0, NoYes::Yes);
        this.addToPOSIsOperations(519, this.rsdLabelToString(literalStr("@RET5595")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1014);
        this.addToPOSIsOperations(520, this.rsdLabelToString(literalStr("@RET5596")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1012);
        //<GEERU>
        this.addToPOSIsOperations(521, this.rsdLabelToString(literalStr("@SYS4007487")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1013);
        //</GEERU>
        this.addToPOSIsOperations(517, this.rsdLabelToString(literalStr("@RET5515")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(518, this.rsdLabelToString(literalStr("@RET5516")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(522, this.rsdLabelToString(literalStr("@Retail:RetailOperationForceCompleteTransaction")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1);
        this.addToPOSIsOperations(600, this.rsdLabelToString(literalStr("@RET5517")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 0, NoYes::Yes);
        this.addToPOSIsOperations(602, this.rsdLabelToString(literalStr("@RET5518")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(603, this.rsdLabelToString(literalStr("@RET5519")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(609, this.rsdLabelToString(literalStr("@RET5520")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1011);
        this.addToPOSIsOperations(611, this.rsdLabelToString(literalStr("@RET5522")), 0, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(612, this.rsdLabelToString(literalStr("@RET5523")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 0);
        this.addToPOSIsOperations(614, this.rsdLabelToString(literalStr("@RET260542")),1021, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(615, this.rsdLabelToString(literalStr("@SYP4910001")),1021, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(620, this.rsdLabelToString(literalStr("@RET4040159")),1020, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(621, this.rsdLabelToString(literalStr("@SYS105996")),1020, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1004);
        this.addToPOSIsOperations(622, this.rsdLabelToString(literalStr("@RET4040090")),0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1000);
        this.addToPOSIsOperations(623, this.rsdLabelToString(literalStr("@RET4230006")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1003);
        // <GEERU>
        this.addToPOSIsOperations(624, this.rsdLabelToString(literalStr("@SYS4007546")), 1017, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        // </GEERU>
        this.addToPOSIsOperations(625, this.rsdLabelToString(literalStr("@REX4160767")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 1, 1005);
        this.addToPOSIsOperations(627, this.rsdLabelToString(literalStr("@SYP4861354")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(629, this.rsdLabelToString(literalStr("@SYP4861355")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(630, this.rsdLabelToString(literalStr("@SYP4861356")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(631, this.rsdLabelToString(literalStr("@SYP4861357")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(632, this.rsdLabelToString(literalStr("@SYP4861358")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(633, this.rsdLabelToString(literalStr("@Retail:QuotationExpirationDate")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(634, this.rsdLabelToString(literalStr("@Retail:PaymentsHistory")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(635, this.rsdLabelToString(literalStr("@Retail:RefundShippingCharges")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(636, this.rsdLabelToString(literalStr("@Retail:RetailOperation_CreateRetailTransaction")),1020, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(637, this.rsdLabelToString(literalStr("@Retail:RetailOperationSetCommissionSalesGroupOnTransaction")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(638, this.rsdLabelToString(literalStr("@Retail:RetailOperationSetCommissionSalesGroupOnLine")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(639, this.rsdLabelToString(literalStr("@Retail:RetailOperationClearCommissionSalesGroupOnTransaction")), 1030, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(640, this.rsdLabelToString(literalStr("@Retail:RetailOperationClearCommissionSalesGroupOnLine")), 1030, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(641, this.rsdLabelToString(literalStr("@Retail:CarryoutSelectedProducts")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(642, this.rsdLabelToString(literalStr("@Retail:CarryoutAllProducts")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(643, this.rsdLabelToString(literalStr("@Retail:AddCouponCode")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1);
        this.addToPOSIsOperations(644, this.rsdLabelToString(literalStr("@Retail:RemoveCouponCode")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1);
        this.addToPOSIsOperations(645, this.rsdLabelToString(literalStr("@Retail:ViewAllDiscounts")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1);
        this.addToPOSIsOperations(646, this.rsdLabelToString(literalStr("@Retail:ViewAvailableDiscounts")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1);
        this.addToPOSIsOperations(647, this.rsdLabelToString(literalStr("@Retail:ChangeModeOfDelivery")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1);
        this.addToPOSIsOperations(658, this.rsdLabelToString(literalStr("@Retail:ChangePickupLines")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1);
        this.addToPOSIsOperations(700, this.rsdLabelToString(literalStr("@RET5524")), 0, 0, checkUserAccessNo, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(701, this.rsdLabelToString(literalStr("@RET5525")), 0, 0, checkUserAccessNo, userOperationYes,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(702, this.rsdLabelToString(literalStr("@RET5526")), 0, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(703, this.rsdLabelToString(literalStr("@RET5527")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(704, this.rsdLabelToString(literalStr("@RET5528")), 0, 0, checkUserAccessNo, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(707, this.rsdLabelToString(literalStr("@REX4160768")), 1026, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(708, this.rsdLabelToString(literalStr("@REX4160817")), 1026, 0, checkUserAccessYes, userOperationYes,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(709, this.rsdLabelToString(literalStr("@REX4520124")), 1027, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(710, this.rsdLabelToString(literalStr("@REX4520125")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(711, this.rsdLabelToString(literalStr("@Retail:RetailOperationMassActivateDevice")), 1032, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(712, this.rsdLabelToString(literalStr("@Retail:RetailOperationViewClientBookCustomers")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(713, this.rsdLabelToString(literalStr("@Retail:RetailOperationViewStoreClientBookCustomers")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(714, this.rsdLabelToString(literalStr("@Retail:RetailOperationAddCustomerToClientBook")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(715, this.rsdLabelToString(literalStr("@Retail:RetailOperationRemoveCustomersFromClientBook")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(716, this.rsdLabelToString(literalStr("@Retail:RetailOperationReassignClientBookCustomers")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(717, this.rsdLabelToString(literalStr("@Retail:RetailOperationHealthCheckLabel")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(718, this.rsdLabelToString(literalStr("@Retail:RetailOperationRequestForAssistance")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(800, this.rsdLabelToString(literalStr("@RET5529")), 1002, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(801, this.rsdLabelToString(literalStr("@RET5530")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1015);
        this.addToPOSIsOperations(802, this.rsdLabelToString(literalStr("@RET5531")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(803, this.rsdLabelToString(literalStr("@RET5532")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(804, this.rsdLabelToString(literalStr("@Retail:RetailInboundOperations")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(805, this.rsdLabelToString(literalStr("@Retail:RetailOutboundOperations")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(806, this.rsdLabelToString(literalStr("@RetailInventory:RetailInventoryAdjustment")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(807, this.rsdLabelToString(literalStr("@RetailInventory:RetailInventoryMovement")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(808, this.rsdLabelToString(literalStr("@RetailInventory:RetailPostStockCounting")), 1037, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(809, this.rsdLabelToString(literalStr("@RetailInventory:RetailCreatePurchaseOrder")), 1039, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(810, this.rsdLabelToString(literalStr("@RetailInventory:RetailConfirmPurchaseOrder")), 1040, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(811, this.rsdLabelToString(literalStr("@RetailInventory:RetailCreateTransferOrder")), 1041, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(900, this.rsdLabelToString(literalStr("@RET5533")), 1002, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(906, this.rsdLabelToString(literalStr("@RET5536")), 0, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(907, this.rsdLabelToString(literalStr("@RET5537")), 0, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(908, this.rsdLabelToString(literalStr("@RET5538")), 0, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(909, this.rsdLabelToString(literalStr("@RET5539")), 0, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(910, this.rsdLabelToString(literalStr("@RET5540")), 1002, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(911, this.rsdLabelToString(literalStr("@RET5541")), 1002, 0, checkUserAccessYes, userOperationNo,RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(912, this.rsdLabelToString(literalStr("@RET5542")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(913, this.rsdLabelToString(literalStr("@RET5543")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(914, this.rsdLabelToString(literalStr("@RET5544")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(915, this.rsdLabelToString(literalStr("@RET5545")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(916, this.rsdLabelToString(literalstr("@RET260937")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(917, this.rsdLabelToString(literalStr("@RET5774")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(918, this.rsdLabelToString(literalstr("@Retail:RetailEODManageShifts")), 1023, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(919, this.rsdLabelToString(literalstr("@RET4160286")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(920, this.rsdLabelToString(literalstr("@RET4040120")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(921, this.rsdLabelToString(literalstr("@RET4160437")), 1025, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(922, this.rsdLabelToString(literalstr("@SYS4000808")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1000);
        this.addToPOSIsOperations(923, this.rsdLabelToString(literalStr("@SYS4007494")), 1005, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(924, this.rsdLabelToString(literalStr("@SYS4007484")), 1003, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(925, this.rsdLabelToString(literalStr("@SYS4007485")), 1003, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        // <GEERU>
        this.addToPOSIsOperations(926, this.rsdLabelToString(literalStr("@SYP4880818")), 0, 0, checkUserAccessNo, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(927, this.rsdLabelToString(literalStr("@SYP4880819")), 0, 0, checkUserAccessNo, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        // </GEERU>
        this.addToPOSIsOperations(928, this.rsdLabelToString(literalStr("@Retail:OrderFulfillment")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::DeliveryMode, 0, 0);

        this.addToPOSIsOperations(1000, this.rsdLabelToString(literalStr("@RET5546")), 1012, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1003, this.rsdLabelToString(literalStr("@REX1139")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0, 0, NoYes::Yes);
        this.addToPOSIsOperations(1004, this.rsdLabelToString(literalStr("@SYS107713")), 0, 0, checkUserAccessNo, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1052, this.rsdLabelToString(literalStr("@RET5549")), 1004, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1053, this.rsdLabelToString(literalstr("@RET6344")), 1023, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1054, this.rsdLabelToString(literalStr("@RET6077")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1055, this.rsdLabelToString(literalStr("@RET5621")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1056, this.rsdLabelToString(literalStr("@RET5534")), 1003, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0, 0, NoYes::Yes);
        this.addToPOSIsOperations(1057, this.rsdLabelToString(literalStr("@RET5535")), 1005, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0, 0, NoYes::Yes);
        this.addToPOSIsOperations(1058, this.rsdLabelToString(literalStr("@SYP4860086")), 1003, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0, 0, NoYes::Yes);
        this.addToPOSIsOperations(1059, this.rsdLabelToString(literalStr("@SYP4860087")), 1005, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0, 0, NoYes::Yes);
        this.addToPOSIsOperations(1100, this.rsdLabelToString(literalStr("@RET5550")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1200, this.rsdLabelToString(literalStr("@RET5551")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1201, this.rsdLabelToString(literalStr("@RET5552")), 1007, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1210, this.rsdLabelToString(literalStr("@RET5553")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1211, this.rsdLabelToString(literalStr("@RET5554")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1212, this.rsdLabelToString(literalStr("@RET5555")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1213, this.rsdLabelToString(literalStr("@RET5499")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1001);
        this.addToPOSIsOperations(1214, this.rsdLabelToString(literalStr("@RET5500")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1002);
        this.addToPOSIsOperations(1215, this.rsdLabelToString(literalStr("@REX4520191")), 1029, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1216, this.rsdLabelToString(literalStr("@REX4520190")), 1028, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1217, this.rsdLabelToString(literalStr("@REX1127")), 1024, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 1, 1, 1010);
        this.addToPOSIsOperations(1218, this.rsdLabelToString(literalStr("@Retail:RetailOperation_ForceUnlockPeripheral")), 1002, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1219, this.rsdLabelToString(literalStr("@Retail:OpenURL")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1220, this.rsdLabelToString(literalStr("@Retail:ManageSafe")), 1023, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1221, this.rsdLabelToString(literalStr("@Retail:VoidSuspendedTransactions")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1300, this.rsdLabelToString(literalStr("@RetailFiscalIntegration:OperationSkipFiscalRegistration")), 1033, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1301, this.rsdLabelToString(literalStr("@RetailFiscalIntegration:OperationMarkFiscalEventRegistered")), 1033, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1302, this.rsdLabelToString(literalStr("@RetailFiscalIntegration:OperationCompleteFiscalRegistrationProcess")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1303, this.rsdLabelToString(literalStr("@RetailFiscalIntegration:OperationSkipHealthCheckError")), 1034, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1304, this.rsdLabelToString(literalStr("@RetailFiscalIntegration:OperationPostponeFiscalRegistration")), 1036, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(1400, this.rsdLabelToString(literalStr("@RetailTaskManagement:RetailPOSOperationTaskManagementView")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);

        // Operations with ids from 2000 to 2999 are reserved for attached services by Microsoft.
        // Workforce management retail operation ids: 2000 and 2001.
        this.addToPOSIsOperations(2000, this.rsdLabelToString(literalStr("@Retail:AttachService_RetailOperation_ScheduleManagement")), 0, 0, checkUserAccessNo, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0, 0, NoYes::Yes);
        this.addToPOSIsOperations(2001, this.rsdLabelToString(literalStr("@Retail:AttachService_RetailOperation_ScheduleRequests")), 0, 0, checkUserAccessNo, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);

        // Operations with ids from 3500 to 3999 are reserved for POS sealed extensions by Microsoft.
        this.addToPOSIsOperations(3500, this.rsdLabelToString(literalStr("@RetailTransactionFiscalCustomer:AddFiscalCustomer")), 0, 0, checkUserAccessNo, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);
        this.addToPOSIsOperations(3510, this.rsdLabelToString(literalStr("@Retail:CancelTransactionOperation")), 0, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);

        // Legacy operation with id 6000.
        this.addToPOSIsOperations(6000, this.rsdLabelToString(literalStr("@Retail:RetailOperationAllowSkipFiscalRegistration")), 1031, 0, checkUserAccessYes, userOperationYes, RetailActionPropertyLookupTypeBase::None, 0, 0);

        listPosIsOperations.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsOperations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set retail operations
    /// </summary>
    private void setPOSIsOperations()
    {
        this.setPOSOperations();
        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailOperations)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSPermissions</Name>
				<Source><![CDATA[
    internal void setPOSPermissions()
    {
        listPosIsPermissions = new RecordInsertList(tableNum(RetailPermissions), true, false, true);
        this.addToPOSIsPermissions(1001, 'allowTransactionVoiding');
        this.addToPOSIsPermissions(1002, 'managerPrivileges');
        this.addToPOSIsPermissions(1003, 'allowXReportPrinting');
        this.addToPOSIsPermissions(1004, 'allowTenderDeclaration');
        this.addToPOSIsPermissions(1005, 'allowZReportPrinting');
        this.addToPOSIsPermissions(1007, 'allowFloatingTenderDeclaration');
        this.addToPOSIsPermissions(1008, 'maxDiscountPct');
        this.addToPOSIsPermissions(1010, 'allowChangeNoVoid');
        this.addToPOSIsPermissions(1011, 'allowTransactionSuspension');
        this.addToPOSIsPermissions(1012, 'allowOpenDrawerOnly');
        this.addToPOSIsPermissions(1013, 'continueOnTSErrors');
        this.addToPOSIsPermissions(1014, 'maxTotalDiscountPct');
        this.addToPOSIsPermissions(1017, 'allowViewRefundAmounts');
        this.addToPOSIsPermissions(1018, 'allowSalesTaxChange');
        this.addToPOSIsPermissions(1019, 'AllowMultipleShiftLogon');
        this.addToPOSIsPermissions(1020, 'allowCreateOrder');
        this.addToPOSIsPermissions(1021, 'allowEditOrder');
        this.addToPOSIsPermissions(1022, 'allowRetrieveOrder');
        this.addToPOSIsPermissions(1023, 'AllowBlindClose');
        this.addToPOSIsPermissions(1024, 'allowKitDisassembly');
        this.addToPOSIsPermissions(1025, 'viewTimeclockEntries');
        this.addToPOSIsPermissions(1026, 'manageDevice');
        this.addToPOSIsPermissions(1027, 'allowChangePeripheralStation');
        this.addToPOSIsPermissions(1028, 'AllowResetPassword');
        this.addToPOSIsPermissions(1029, 'AllowPasswordChange');
        this.addToPOSIsPermissions(1030, 'AllowClearSalesRep');
        this.addToPOSIsPermissions(1031, 'AllowSkipFiscalRegistration');
        this.addToPOSIsPermissions(1032, 'AllowMassActivation');
        this.addToPOSIsPermissions(1033, 'AllowSkipRegistrationOrMarkAsRegistered');
        this.addToPOSIsPermissions(1034, 'AllowSkipHealthCheckError');
        this.addToPOSIsPermissions(1035, 'AllowTaskManagement');
        this.addToPOSIsPermissions(1036, 'AllowPostponeRegistration');
        this.addToPOSIsPermissions(1037, 'AllowPostStockCounting');
        this.addToPOSIsPermissions(1038, 'AllowCloseShift');
        this.addToPOSIsPermissions(1039, 'AllowCreatePurchaseOrder');
        this.addToPOSIsPermissions(1040, 'AllowConfirmPurchaseOrder');
        this.addToPOSIsPermissions(1041, 'AllowCreateTransferOrder');
        listPosIsPermissions.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsPermissions</Name>
				<Source><![CDATA[
    private void setPOSIsPermissions()
    {
        this.setPOSPermissions();
        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailPermissions)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPosPermissionsEx</Name>
				<Source><![CDATA[
    internal void setPosPermissionsEx()
    {
        listPosIsPermissionsEx = new RecordInsertList(tableNum(RetailPermissionsEx), true, false, true);

        this.addToPOSIsPermissionsEx(1000, 'BrowseProducts');
        this.addToPOSIsPermissionsEx(1001, 'MaintainCustomerAddress');
        this.addToPOSIsPermissionsEx(1002, 'MaintainCart');
        this.addToPOSIsPermissionsEx(1003, 'EditCustomer');
        this.addToPOSIsPermissionsEx(1004, 'MaintainQuote');
        this.addToPOSIsPermissionsEx(1005, 'IssueGiftCard');
        this.addToPOSIsPermissionsEx(1006, 'IssueLoyaltyCard');
        this.addToPOSIsPermissionsEx(1007, 'CustomerAccountPayment');
        this.addToPOSIsPermissionsEx(1008, 'GiftCardPayment');
        this.addToPOSIsPermissionsEx(1009, 'LoyaltyPayment');
        this.addToPOSIsPermissionsEx(1010, 'DisassembleKits');
        this.addToPOSIsPermissionsEx(1011, 'ViewCustomerTransactions');
        this.addToPOSIsPermissionsEx(1012, 'ViewGiftCardDetails');
        this.addToPOSIsPermissionsEx(1013, 'ViewLoyaltyCardDetails');
        this.addToPOSIsPermissionsEx(1014, 'AddToGiftCard');
        this.addToPOSIsPermissionsEx(1015, 'ViewInventoryDetails');

        listPosIsPermissionsEx.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsPermissionsEx</Name>
				<Source><![CDATA[
    private void setPOSIsPermissionsEx()
    {
        this.setPosPermissionsEx();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailPermissionsEx)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsPermissionGroups</Name>
				<Source><![CDATA[
    private void setPOSIsPermissionGroups()
    {
        listPermissionGroup = new RecordInsertList(tableNum(RetailPermissionsGroup), true, false, true);

        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1000);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1001);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1002);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1003);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1004);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1005);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1006);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1007);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1008);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1009);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1010);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1011);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1012);
        this.addToPermissionsGroup(1, 'Default Customer Permission Group', 1013);
        listPermissionGroup.insertDatabase();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailPermissionsGroup)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsTheme</Name>
				<Source><![CDATA[
    private void setPOSIsTheme()
    {
        RetailDeviceTypes retailDeviceTypes;
        listPosIsThemes = new RecordInsertList(tableNum(RetailPOSTheme), true, false, true);

        select * from retailDeviceTypes
        where retailDeviceTypes.Type == RetailDeviceTypeBase::ModernPOS;

        this.addToPOSIsThemes('dark', retailDeviceTypes.RecId);
        this.addToPOSIsThemes('light', retailDeviceTypes.RecId);

        select * from retailDeviceTypes
            where retailDeviceTypes.Type == RetailDeviceTypeBase::CloudPOS;

        this.addToPOSIsThemes('dark', retailDeviceTypes.RecId);
        this.addToPOSIsThemes('light', retailDeviceTypes.RecId);

        select * from retailDeviceTypes
            where retailDeviceTypes.Type == RetailDeviceTypeBase::StoreCommerce;

        this.addToPOSIsThemes('dark', retailDeviceTypes.RecId);
        this.addToPOSIsThemes('light', retailDeviceTypes.RecId);

        listPosIsThemes.insertDatabase();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailPOSTheme)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPOSIsTillLayout</Name>
				<Source><![CDATA[
    public void setPOSIsTillLayout()
    {
        RecordInsertList recordInsertList;
        RetailTillLayout posIsTillLayout;
        RetailTillLayoutSize layoutSize;
        RetailDeviceTypes retailDeviceTypes;
        str layoutXMLLandscape, layoutXMLPortrait;
        ResourceNode layoutXMLResourceNode;
        str tableName;

        recordInsertList = new RecordInsertList(tableNum(RetailTillLayout), true, false, true);
        tableName = tableStr(RetailTillLayout);

        posIsTillLayout = RetailTillLayout::find(#Windows8ScreenLayoutId, false);

        if (posIsTillLayout)
        {
            ttsBegin;

            delete_from posIsTillLayout
                where  posIsTillLayout.layoutId == #Windows8ScreenLayoutId;

            ttsCommit;
        }

        posIsTillLayout = RetailTillLayout::find(#Windows8ScreenLayoutId, false);

        if (!posIsTillLayout)
        {
            select * from retailDeviceTypes
            where retailDeviceTypes.Type == RetailDeviceTypeBase::ModernPOS;

            posIsTillLayout.Name = this.rsdLabelToString(literalStr("@RET5556"));
            posIsTillLayout.DeviceType = retailDeviceTypes.RecId;
            posIsTillLayout.LayoutId = #Windows8ScreenLayoutId;

            recordInsertList.add(posIsTillLayout);
            recordInsertList.insertDatabase();

            // Insert layout sizes and layout configuration
            this.setRetailTillLayoutConfiguration(posIsTillLayout);

            this.addRetailTillLayoutButtonGrid(posIsTillLayout, #defaultLayoutSizeName, 'WelcomeScreen1', '80', RetailLayoutType::MPOSFull);
            this.addRetailTillLayoutButtonGrid(posIsTillLayout, #defaultLayoutSizeName, 'WelcomeScreen2', '90', RetailLayoutType::MPOSFull);

            this.addRetailTillLayoutButtonGrid(posIsTillLayout, #defaultLayoutSizeName, 'TransactionScreen1', '110', RetailLayoutType::MPOSFull);
            this.addRetailTillLayoutButtonGrid(posIsTillLayout, #defaultLayoutSizeName, 'TransactionScreen2', '100', RetailLayoutType::MPOSFull);

            this.addRetailTillLayoutImage(posIsTillLayout, #defaultLayoutSizeName, 'WelcomeScreen1', 9, RetailLayoutType::MPOSFull);
        }
        else
        {
            info(strFmt("@RET585", tableName, "[1]"));
        }

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRBOSupportedCountryRegion</Name>
				<Source><![CDATA[
    private void setRBOSupportedCountryRegion()
    {
        listSupportedCountryRegion = new RecordInsertList(tableNum(RetailSupportedCountryRegion), true, false, true);

        this.addToRBOSupportedCountryRegion('AU', this.rsdLabelToString(literalStr("@SYS57299"))); //'Australia'
        this.addToRBOSupportedCountryRegion('AT', this.rsdLabelToString(literalStr("@SYS4483"))); //'Austria'
        this.addToRBOSupportedCountryRegion('BE', this.rsdLabelToString(literalStr("@SYS60548"))); //'Belgium'
        this.addToRBOSupportedCountryRegion('BR', this.rsdLabelToString(literalStr("@RET5151"))); //'Brazil'
        this.addToRBOSupportedCountryRegion('CA', this.rsdLabelToString(literalStr("@SYS55936"))); //'Canada'
        this.addToRBOSupportedCountryRegion('CN', this.rsdLabelToString(literalStr("@RET5152"))); //'China'
        this.addToRBOSupportedCountryRegion('CZ', this.rsdLabelToString(literalStr("@RET5153"))); //'Czech Republic'
        this.addToRBOSupportedCountryRegion('DK', this.rsdLabelToString(literalStr("@SYS62"))); //'Denmark'
        this.addToRBOSupportedCountryRegion('EE', this.rsdLabelToString(literalStr("@RET5154"))); //'Estonia'
        this.addToRBOSupportedCountryRegion('FI', this.rsdLabelToString(literalStr("@SYS70503"))); //'Finland'
        this.addToRBOSupportedCountryRegion('FR', this.rsdLabelToString(literalStr("@SYS71734"))); //'France'
        this.addToRBOSupportedCountryRegion('DE', this.rsdLabelToString(literalStr("@SYS56202"))); //'Germany'
        this.addToRBOSupportedCountryRegion('HU', this.rsdLabelToString(literalStr("@RET5155"))); //'Hungary'
        this.addToRBOSupportedCountryRegion('IS', this.rsdLabelToString(literalStr("@SYS83474"))); //'Iceland'
        this.addToRBOSupportedCountryRegion('IN', this.rsdLabelToString(literalStr("@RET5156"))); //'India'
        this.addToRBOSupportedCountryRegion('IE', this.rsdLabelToString(literalStr("@SYS306050"))); //'Ireland'
        this.addToRBOSupportedCountryRegion('IL', this.rsdLabelToString(literalStr("@RET5157"))); //'Israel'
        this.addToRBOSupportedCountryRegion('IT', this.rsdLabelToString(literalStr("@SYS71735"))); //'Italy'
        this.addToRBOSupportedCountryRegion('JP', this.rsdLabelToString(literalStr("@SYS83475"))); //'Japan'
        this.addToRBOSupportedCountryRegion('LV', this.rsdLabelToString(literalStr("@RET5158"))); //'Latvia'
        this.addToRBOSupportedCountryRegion('LT', this.rsdLabelToString(literalStr("@RET5159"))); //'Lithuania'
        this.addToRBOSupportedCountryRegion('MY', this.rsdLabelToString(literalStr("@SYS99266"))); //'Malaysia'
        this.addToRBOSupportedCountryRegion('MX', this.rsdLabelToString(literalStr("@RET5160"))); //'Mexico'
        this.addToRBOSupportedCountryRegion('NL', this.rsdLabelToString(literalStr("@SYS16474"))); //'Netherlands'
        this.addToRBOSupportedCountryRegion('NZ', this.rsdLabelToString(literalStr("@RET5161"))); //'New Zealand'
        this.addToRBOSupportedCountryRegion('NO', this.rsdLabelToString(literalStr("@SYS14451"))); //'Norway'
        this.addToRBOSupportedCountryRegion('PL', this.rsdLabelToString(literalStr("@RET5162"))); //'Poland'
        this.addToRBOSupportedCountryRegion('RU', this.rsdLabelToString(literalStr("@RET5163"))); //'Russia'
        this.addToRBOSupportedCountryRegion('SA', this.rsdLabelToString(literalStr("@RET5164"))); //'Saudi Arabia'
        this.addToRBOSupportedCountryRegion('SG', this.rsdLabelToString(literalStr("@SYS92338"))); //'Singapore'
        this.addToRBOSupportedCountryRegion('ZA', this.rsdLabelToString(literalStr("@SYS306275"))); //'South Africa'
        this.addToRBOSupportedCountryRegion('ES', this.rsdLabelToString(literalStr("@SYS13913"))); //'Spain'
        this.addToRBOSupportedCountryRegion('SE', this.rsdLabelToString(literalStr("@SYS13333"))); //'Sweden'
        this.addToRBOSupportedCountryRegion('CH', this.rsdLabelToString(literalStr("@SYS57794"))); //'Switzerland'
        this.addToRBOSupportedCountryRegion('TH', this.rsdLabelToString(literalStr("@SYS93712"))); //'Thailand'
        this.addToRBOSupportedCountryRegion('TR', this.rsdLabelToString(literalStr("@RET5165"))); //'Turkey'
        this.addToRBOSupportedCountryRegion('GB', this.rsdLabelToString(literalStr("@SYS118796"))); //'UK'
        this.addToRBOSupportedCountryRegion('US', this.rsdLabelToString(literalStr("@SYS55135"))); //'United States'

        listSupportedCountryRegion.insertDatabase();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailSupportedCountryRegion)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportXml</Name>
				<Source><![CDATA[
    private str getReportXml(str resourceName)
    {
        resourceNode node = SysResource::getResourceNode(resourceName);
        container content = SysResource::getResourceNodeData(node);
        str reportXml = conPeek(content, 1);
        return reportXml;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailChannelReports</Name>
				<Source><![CDATA[
    private void setRetailChannelReports()
    {
        listRetailChannelReport = new RecordInsertList(TableNum(RetailChannelReport), true, false, true);

        this.addToRetailChannelReport(
            '101',
            this.rsdLabelToString(literalStr("@REX4160163")),
            this.getReportXml(resourceStr(RetailChannelReportSalesByStaff))
        );
        this.addToRetailChannelReport(
            '102',
            this.rsdLabelToString(literalStr("@REX4160164")),
            this.getReportXml(resourceStr(RetailChannelReportSalesByHour))
        );
        this.addToRetailChannelReport(
            '103',
            this.rsdLabelToString(literalStr("@REX4160167")),
            this.getReportXml(resourceStr(RetailChannelReportSalesByTerminal))
        );
        this.addToRetailChannelReport(
            '104',
            this.rsdLabelToString(literalStr("@REX4160168")),
            this.getReportXml(resourceStr(RetailChannelReportTop10Products))
        );
        this.addToRetailChannelReport(
            '105',
            this.rsdLabelToString(literalStr("@Retail:ChannelReportReturnTransactions")),
            this.getReportXml(resourceStr(RetailChannelReportReturnTransactions))
        );
        this.addToRetailChannelReport(
            '106',
            this.rsdLabelToString(literalStr("@Retail:ChannelReportSalesByDiscount")),
            this.getReportXml(resourceStr(RetailChannelReportSalesByDiscount))
        );
        this.addToRetailChannelReport(
            '107',
            this.rsdLabelToString(literalStr("@Retail:ChannelReportSalesByTenderType")),
            this.getReportXml(resourceStr(RetailChannelReportSalesByTenderType))
        );
        this.addToRetailChannelReport(
            '108',
            this.rsdLabelToString(literalStr("@Retail:ChannelReportPriceOverrides")),
            this.getReportXml(resourceStr(RetailChannelReportPriceOverrides))
        );
        this.addToRetailChannelReport(
            '109',
            this.rsdLabelToString(literalStr("@Retail:ChannelReportVoidedTransactions")),
            this.getReportXml(resourceStr(RetailChannelReportVoidedTransactions))
        );
        this.addToRetailChannelReport(
            '110',
            this.rsdLabelToString(literalStr("@Retail:StoreReturnSalesByStaff")),
            this.getReportXml(resourceStr(RetailChannelReportReturnByStaff))
        );
        this.addToRetailChannelReport(
            '111',
            this.rsdLabelToString(literalStr("@Retail:StoreDaySummary")),
            this.getReportXml(resourceStr(RetailChannelReportDaySummary))
        );
        this.addToRetailChannelReport(
            '112',
            this.rsdLabelToString(literalStr("@Retail:StoreProductSalesByVariant")),
            this.getReportXml(resourceStr(RetailChannelReportProductVariantSales))
        );
        this.addToRetailChannelReport(
            '113',
            this.rsdLabelToString(literalStr("@Retail:BankDropReport")),
            this.getReportXml(resourceStr(RetailChannelReportBankDrop))
        );
        this.addToRetailChannelReport(
            '114',
            this.rsdLabelToString(literalStr("@Retail:IncomeTransReport")),
            this.getReportXml(resourceStr(RetailChannelReportIncomeTrans))
        );
        this.addToRetailChannelReport(
            '115',
            this.rsdLabelToString(literalStr("@Retail:ExpenseTransReport")),
            this.getReportXml(resourceStr(RetailChannelReportExpenseTrans))
        );

        this.addToRetailChannelReport(
            '117',
            this.rsdLabelToString(literalStr("@Retail:SafeDropReport")),
            this.getReportXml(resourceStr(RetailChannelReportSafeDrop))
        );

        this.addToRetailChannelReport(
            '118',
            this.rsdLabelToString(literalStr("@Retail:DataSyncDownloadStatusReport")),
            this.getReportXml(resourceStr(RetailChannelReportDataSyncDownloadStatus))
        );

        this.addToRetailChannelReport(
            '119',
            this.rsdLabelToString(literalStr("@Retail:DataSyncUploadStatusReport")),
            this.getReportXml(resourceStr(RetailChannelReportDataSyncUploadStatus))
        );

        this.addToRetailChannelReport(
            '120',
            this.rsdLabelToString(literalStr("@Retail:ElectronicJournalSEReport")),
            this.getReportXml(resourceStr(RetailChannelReportElectronicJournalSE))
        );

        this.addToRetailChannelReport(
            '121',
            this.rsdLabelToString(literalStr("@Retail:ChannelReportSalesRep")),
            this.getReportXml(resourceStr(RetailChannelReportSalesBySalesRep))
        );

        listRetailChannelReport.insertDatabase();

        RetailChannelReportSeedData_AX63 reportsData_AX63 = new RetailChannelReportSeedData_AX63();
        reportsData_AX63.setRetailChannelReports();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailChannelReport)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailChannelReportStrings</Name>
				<Source><![CDATA[
    private void setRetailChannelReportStrings()
    {
        listRetailChannelReportString = new RecordInsertList(TableNum(RetailReportLocalizedString), true, false, true);

        LanguageTable lt;
        while select LanguageId from lt where lt.LabelFile == 1
        {
            // title labels
            this.addToRetailReportLocalizedString('SALESBYSTAFF', this.rsdLabelToString(literalStr("@REX4160163"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STORESALESBYTERMINAL', this.rsdLabelToString(literalStr("@REX4160167"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STORESALESBYHOUR', this.rsdLabelToString(literalStr("@REX4160164"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TOP10PRODUCTS', this.rsdLabelToString(literalStr("@REX4160168"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('RETURNTRANSACTIONS', this.rsdLabelToString(literalStr("@Retail:ChannelReportReturnTransactions"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESBYTENDERTYPE', this.rsdLabelToString(literalStr("@Retail:ChannelReportSalesByTenderType"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESBYDISCOUNT', this.rsdLabelToString(literalStr("@Retail:ChannelReportSalesByDiscount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STOREPRICEOVERRIDES', this.rsdLabelToString(literalStr("@Retail:ChannelReportPriceOverrides"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STOREVOIDEDTRANSACTIONS', this.rsdLabelToString(literalStr("@Retail:ChannelReportVoidedTransactions"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STORERETURNSALESBYSTAFF', this.rsdLabelToString(literalStr("@Retail:StoreReturnSalesByStaff"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STOREPRODUCTSALESBYVARIANT', this.rsdLabelToString(literalStr("@Retail:StoreProductSalesByVariant"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STOREDAYSUMMARY', this.rsdLabelToString(literalStr("@Retail:StoreDaySummary"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STOREBANKDROP', this.rsdLabelToString(literalStr("@Retail:BankDropReport"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('INCOMETRANSREPORT', this.rsdLabelToString(literalStr("@Retail:IncomeTransReport"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('EXPENSETRANSREPORT', this.rsdLabelToString(literalStr("@Retail:ExpenseTransReport"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STORESAFEDROP', this.rsdLabelToString(literalStr("@Retail:SafeDropReport"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('OVERSHORTREPORT', this.rsdLabelToString(literalStr("@Retail:OverShortReport"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DATASYNCDOWNLOADSTATUS', this.rsdLabelToString(literalStr("@Retail:DataSyncDownloadStatusReport"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DATASYNCUPLOADSTATUS', this.rsdLabelToString(literalStr("@Retail:DataSyncUploadStatusReport"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('ELECTRONICJOURNAL_SE', this.rsdLabelToString(literalStr("@Retail:ElectronicJournalSEReport"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESBYSALESREP', this.rsdLabelToString(literalStr("@Retail:ChannelReportSalesRep"), lt.LanguageId), lt.LanguageId);

            // parameter labels
            this.addToRetailReportLocalizedString('STARTDATE', this.rsdLabelToString(literalStr("@REX4160169"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('ENDDATE', this.rsdLabelToString(literalStr("@REX4160170"), lt.LanguageId), lt.LanguageId);

            // sales by staff
            this.addToRetailReportLocalizedString('STAFFID', this.rsdLabelToString(literalStr("@SYS81251"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STAFFNAME', this.rsdLabelToString(literalStr("@Retail:TempDbEmployee"), lt.LanguageId), lt.LanguageId);

            // sales by terminal
            this.addToRetailReportLocalizedString('TERMINALID', this.rsdLabelToString(literalStr("@Retail:RegisterNumber"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TERMINALNAME', this.rsdLabelToString(literalStr("@Retail:Register"), lt.LanguageId), lt.LanguageId);

            // sales by hour
            this.addToRetailReportLocalizedString('SALESHOUR', this.rsdLabelToString(literalStr("@REX4160159"), lt.LanguageId), lt.LanguageId);

            // shared across sales by staff, hour, terminal
            this.addToRetailReportLocalizedString('SALESNOOFUNIQUEITEMS', this.rsdLabelToString(literalStr("@Retail:NumOfUniqueItemsSold"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESNOOFTRANSACTIONS', this.rsdLabelToString(literalStr("@Retail:SalesTransactions"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESQTY', this.rsdLabelToString(literalStr("@Retail:SalesQty"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESAMOUNT', this.rsdLabelToString(literalStr("@REX4160155"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESAVGQTY', this.rsdLabelToString(literalStr("@Retail:AvgItemsPerTransaction"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESAVGAMOUNT', this.rsdLabelToString(literalStr("@Retail:SalesAvgAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('RETURNNOOFTRANSACTIONS', this.rsdLabelToString(literalStr("@Retail:ReturnedTransactions"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('RETURNQTY', this.rsdLabelToString(literalStr("@Retail:ReturnedQty"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('RETURNAMOUNT', this.rsdLabelToString(literalStr("@Retail:ReturnedAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('NETAMOUNT', this.rsdLabelToString(literalStr("@Retail:NetAmount"), lt.LanguageId), lt.LanguageId);

            // top 10 products
            this.addToRetailReportLocalizedString('ITEMID', this.rsdLabelToString(literalStr("@Retail:RetailReportProductNumberColumn"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('PRODUCTNAME', this.rsdLabelToString(literalStr("@Retail:Product"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('NOOFTRANSACTIONS', this.rsdLabelToString(literalStr("@Retail:Transactions"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('NETQUANTITY', this.rsdLabelToString(literalStr("@Retail:NetSalesQty"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('NETSALESAMOUNT', this.rsdLabelToString(literalStr("@Retail:NetAmount"), lt.LanguageId), lt.LanguageId);

            // return transactions
            this.addToRetailReportLocalizedString('TRANSACTIONDATE', this.rsdLabelToString(literalStr("@Retail:RetailReportDateColumn"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TRANSACTIONID', this.rsdLabelToString(literalStr("@RET3008"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('QUANTITY', this.rsdLabelToString(literalStr("@REX4160156"), lt.LanguageId), lt.LanguageId);

            // store sales by payment type
            this.addToRetailReportLocalizedString('PAYMENTTYPE', this.rsdLabelToString(literalStr("@Retail:RetailReportPaymentMethod"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TENDEREDTRANS', this.rsdLabelToString(literalStr("@Retail:TenderedTrans"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TENDEREDAVGAMOUNT', this.rsdLabelToString(literalStr("@Retail:TenderedAvgAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TENDEREDAMOUNT', this.rsdLabelToString(literalStr("@Retail:TenderedAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('CHANGETENDEREDTRANS', this.rsdLabelToString(literalStr("@Retail:ChangeTenderTrans"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('CHANGETENDERED', this.rsdLabelToString(literalStr("@Retail:ChangeTendered"), lt.LanguageId), lt.LanguageId);

            // sales by discount
            this.addToRetailReportLocalizedString('DISCOUNTID', this.rsdLabelToString(literalStr("@Retail:DiscountNumber"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTNAME', this.rsdLabelToString(literalStr("@Retail:ChannelDiscountName"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTPERCENTAGE', this.rsdLabelToString(literalStr("@Retail:ChannelDiscountPercentage"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTAMOUNT', this.rsdLabelToString(literalStr("@Retail:ChannelDiscountAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTTYPE0', this.rsdLabelToString(literalStr("@Retail:ChannelReportDiscountNone"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTTYPE1', this.rsdLabelToString(literalStr("@Retail:ChannelReportLineAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTTYPE2', this.rsdLabelToString(literalStr("@Retail:ChannelReportLinePercent"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTTYPE3', this.rsdLabelToString(literalStr("@Retail:ChannelReportTotalAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTTYPE4', this.rsdLabelToString(literalStr("@Retail:ChannelReportTotalPercent"), lt.LanguageId), lt.LanguageId);

            // store price overrides
            this.addToRetailReportLocalizedString('ORIGINALPRICE', this.rsdLabelToString(literalStr("@Retail:ChannelReportOriginalPrice"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('ACTUALPRICE', this.rsdLabelToString(literalStr("@Retail:ChannelReportActualPrice"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('OVERRIDEAMOUNT', this.rsdLabelToString(literalStr("@Retail:ChannelReportOverrideAmount"), lt.LanguageId), lt.LanguageId);

            // store voided lines details
            this.addToRetailReportLocalizedString('NOOFITEMS', this.rsdLabelToString(literalStr("@Retail:RetailReportQuantity"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('VOIDAMOUNT', this.rsdLabelToString(literalStr("@Retail:VoidAmount"), lt.LanguageId), lt.LanguageId);

            // return by staff
            this.addToRetailReportLocalizedString('PRODUCTNUMBER', this.rsdLabelToString(literalStr("@Retail:RetailReportProductNumberColumn"), lt.LanguageId), lt.LanguageId);

            // data sync download/upload status
            this.addToRetailReportLocalizedString('JOBID', this.rsdLabelToString(literalStr("@Retail:DataSyncReportJobId"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STATUS', this.rsdLabelToString(literalStr("@Retail:DataSyncReportStatus"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('LASTSYNCTIME', this.rsdLabelToString(literalStr("@Retail:DataSyncReportLastSyncTime"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('FILESIZE', this.rsdLabelToString(literalStr("@Retail:DataSyncReportFileSize"), lt.LanguageId), lt.LanguageId);

            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE0', this.rsdLabelToString(literalStr("@Retail:ChannelReportDownloadStatusStarted"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE1', this.rsdLabelToString(literalStr("@Retail:ChannelReportDownloadStatusAvailable"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE2', this.rsdLabelToString(literalStr("@Retail:ChannelReportDownloadStatusRequested"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE3', this.rsdLabelToString(literalStr("@Retail:ChannelReportDownloadStatusDownloaded"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE4', this.rsdLabelToString(literalStr("@Retail:ChannelReportSyncStatusApplied"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE5', this.rsdLabelToString(literalStr("@Retail:ChannelReportSyncStatusCanceled"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE6', this.rsdLabelToString(literalStr("@Retail:ChannelReportDownloadStatusCreateFailed"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE7', this.rsdLabelToString(literalStr("@Retail:ChannelReportDownloadStatusDownloadFailed"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DOWNLOADSYNCSTATUSENUMTYPE8', this.rsdLabelToString(literalStr("@Retail:ChannelReportSyncStatusApplyFailed"), lt.LanguageId), lt.LanguageId);

            this.addToRetailReportLocalizedString('UPLOADSYNCSTATUSENUMTYPE1', this.rsdLabelToString(literalStr("@Retail:ChannelReportUpoadStatusCreated"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('UPLOADSYNCSTATUSENUMTYPE2', this.rsdLabelToString(literalStr("@Retail:ChannelReportUpoadStatusUploaded"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('UPLOADSYNCSTATUSENUMTYPE3', this.rsdLabelToString(literalStr("@Retail:ChannelReportSyncStatusApplied"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('UPLOADSYNCSTATUSENUMTYPE4', this.rsdLabelToString(literalStr("@Retail:ChannelReportSyncStatusCanceled"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('UPLOADSYNCSTATUSENUMTYPE5', this.rsdLabelToString(literalStr("@Retail:ChannelReportUpoadStatusUploadFailed"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('UPLOADSYNCSTATUSENUMTYPE6', this.rsdLabelToString(literalStr("@Retail:ChannelReportSyncStatusApplyFailed"), lt.LanguageId), lt.LanguageId);

            // day summary
            this.addToRetailReportLocalizedString('DAY', this.rsdLabelToString(literalStr("@Retail:RetailReportDateColumn"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('ATTR', this.rsdLabelToString(literalStr("@Retail:Metrics"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('VALUE', this.rsdLabelToString(literalStr("@Retail:Value"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('UNIQUEITEMS', this.rsdLabelToString(literalStr("@Retail:NumOfUniqueItemsSold"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('ITEMAVGPRICE', this.rsdLabelToString(literalStr("@Retail:AvgItemPrice"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('VOIDLINES', this.rsdLabelToString(literalStr("@Retail:NumOfVoidLines"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCOUNTLINES', this.rsdLabelToString(literalStr("@Retail:NumOfDiscLines"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('PRICEOVERRIDES', this.rsdLabelToString(literalStr("@Retail:NumOfPriceOverrides"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('PRICEOVERRIDESAMOUNT', this.rsdLabelToString(literalStr("@Retail:PriceOverridesAmount"), lt.LanguageId), lt.LanguageId);

            // product variant sales
            this.addToRetailReportLocalizedString('VARIANTNAME', this.rsdLabelToString(literalStr("@Retail:VariantName"), lt.LanguageId), lt.LanguageId);

            // safe drop, bank drop
            this.addToRetailReportLocalizedString('CURRENCY', this.rsdLabelToString(literalStr("@Retail:Currency"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('BANKBAG', this.rsdLabelToString(literalStr("@Retail:BankBag"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('CURRENCYAMOUNT', this.rsdLabelToString(literalStr("@Retail:CurrencyAmount"), lt.LanguageId), lt.LanguageId);

            // income/expense transaction
            this.addToRetailReportLocalizedString('ACCOUNTNUMBER', this.rsdLabelToString(literalStr("@Retail:AccountNumber"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('ACCOUNTNAME', this.rsdLabelToString(literalStr("@Retail:AccountName"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TRANSAMOUNT', this.rsdLabelToString(literalStr("@Retail:RetaiReportAmountColumn"), lt.LanguageId), lt.LanguageId);

            // over/short
            this.addToRetailReportLocalizedString('SHIFTID', this.rsdLabelToString(literalStr("@Retail:ShiftNumber"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('CASHAMOUNT', this.rsdLabelToString(literalStr("@Retail:CashAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('CREDITCARDAMOUNT', this.rsdLabelToString(literalStr("@Retail:CreditCardAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('GIFTCARDAMOUNT', this.rsdLabelToString(literalStr("@Retail:GiftCardAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('OVERSHORTAMOUNT', this.rsdLabelToString(literalStr("@Retail:OverShortAmount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('OVER', this.rsdLabelToString(literalStr("@Retail:Over"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SHORT', this.rsdLabelToString(literalStr("@Retail:Short"), lt.LanguageId), lt.LanguageId);

            // rest labels
            this.addToRetailReportLocalizedString('ITEMSPERTRANSACTION', this.rsdLabelToString(literalStr("@Retail:AvgItemsPerTransaction"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('RECEIPTID', this.rsdLabelToString(literalStr("@RET3556"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('PRICE', this.rsdLabelToString(literalStr("@SYS11865"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TAXAMOUNT', this.rsdLabelToString(literalStr("@SYS22646"), lt.LanguageId), lt.LanguageId);

            // electronic journal SE
            this.addToRetailReportLocalizedString('SALES', this.rsdLabelToString(literalStr("@Retail:RetailReportElectronicJournalSalesLineType"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('PAYMENT', this.rsdLabelToString(literalStr("@Retail:RetailReportElectronicJournalPaymentLineType"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('INCOMEEXPENSE', this.rsdLabelToString(literalStr("@Retail:RetailReportElectronicJournalIncomeExpenseLineType"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TRANSACTIONTYPE', this.rsdLabelToString(literalStr("@Retail:RetailReportTransType"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TRANSACTIONSTATUS', this.rsdLabelToString(literalStr("@Retail:RetailReportTransStatus"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('LINETYPE', this.rsdLabelToString(literalStr("@RET6069"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('LINEVOIDED', this.rsdLabelToString(literalStr("@Retail:RetailReportLineVoided"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('LINENUM', this.rsdLabelToString(literalStr("@Retail:RetailReportLineNumber"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('ITEMNUMBER', this.rsdLabelToString(literalStr("@Retail:RetailReportItemNumber"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('ITEMNAME', this.rsdLabelToString(literalStr("@Retail:ReportProductName"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('PRICEOVERRIDE', this.rsdLabelToString(literalStr("@Retail:RetailReportPriceOverride"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TAXITEMGROUP', this.rsdLabelToString(literalStr("@Retail:RetailReportItemSalesTaxGroup"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('DISCAMOUNT', this.rsdLabelToString(literalStr("@Retail:RetailReportDiscount"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('OPERATORID', this.rsdLabelToString(literalStr("@Retail:RetailReportOperatorID"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TOTALWITHTAX', this.rsdLabelToString(literalStr("@Retail:RetailReportTotalWithTax"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TENDERED', this.rsdLabelToString(literalStr("@Retail:RetailReportTendered"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('RECEIPTCOPY', this.rsdLabelToString(literalStr("@Retail:RetailReportReceiptCopy"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('CONTROLUNITSERIALNUMBER', this.rsdLabelToString(literalStr("@Retail:RetailReportControlUnitSerialNumber"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('CONTROLCODE', this.rsdLabelToString(literalStr("@Retail:RetailReportControlCode"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STORENUMBER', this.rsdLabelToString(literalStr("@RET3600"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STORENAME', this.rsdLabelToString(literalStr("@RET3602"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('TAXIDENTIFICATIONNUMBER', this.rsdLabelToString(literalStr("@Retail:RetailReportTaxIdentificationNumberTIN"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('OPENDRAWER', this.rsdLabelToString(literalStr("@Retail:RetailReportOpenDrawer"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SHIFTIDENTIFIER', this.rsdLabelToString(literalStr("@Retail:RetailReportShiftID"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STOREADDRESS', this.rsdLabelToString(literalStr("@Retail:RetailReportStoreAddress"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('STOREPHONE', this.rsdLabelToString(literalStr("@Retail:RetailReportStorePhone"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('YES', this.rsdLabelToString(literalStr("@Retail:RetailReportYes"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('NO', this.rsdLabelToString(literalStr("@Retail:RetailReportNo"), lt.LanguageId), lt.LanguageId);

            // Sales rep report.
            this.addToRetailReportLocalizedString('SALESGROUP', this.rsdLabelToString(literalStr("@Retail:ReportCommissionSalesGroup"), lt.LanguageId), lt.LanguageId);
            this.addToRetailReportLocalizedString('SALESREPNAME', this.rsdLabelToString(literalStr("@Retail:SalesRepReportNameColumn"), lt.LanguageId), lt.LanguageId);
        }

        this.setEnumerationReportStrings(enumNum(RetailTransactionType));
        this.setEnumerationReportStrings(enumNum(RetailEntryStatus));
        listRetailChannelReportString.insertDatabase();

        RetailChannelReportSeedData_AX63 reportsData_AX63 = new RetailChannelReportSeedData_AX63();
        reportsData_AX63.setRetailChannelReportStrings();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailReportLocalizedString)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailDeviceTypes</Name>
				<Source><![CDATA[
    private void setRetailDeviceTypes()
    {
        RetailDeviceTypes retailDeviceType;

        RecordInsertList recordInsertList = new RecordInsertList(TableNum(RetailDeviceTypes), true, false, true);

        this.addRetailDeviceType(RetailDeviceTypeBase::ModernPOS, recordInsertList);
        this.addRetailDeviceType(RetailDeviceTypeBase::CloudPOS, recordInsertList);
        this.addRetailDeviceType(RetailDeviceTypeBase::ModernPOSWindowsPhone, recordInsertList);
        this.addRetailDeviceType(RetailDeviceTypeBase::ModernPOSAndroid, recordInsertList);
        this.addRetailDeviceType(RetailDeviceTypeBase::ModernPOSiOS, recordInsertList);
        this.addRetailDeviceType(RetailDeviceTypeBase::StoreCommerce, recordInsertList, RetailDesignerFormEnum::RetailTillLayoutDesignerModern);

        // Add EPOS to Retail Device Types
        if (RetailUtilities::isRetailCDXBackwardCompatibilityEnabled())
        {
            this.addRetailDeviceType(RetailDeviceTypeBase::EnterprisePOS, recordInsertList);
        }

        recordInsertList.insertDatabase();

        RetailDeviceTypes::updateDowngradeData();
        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailDeviceTypes)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailHours</Name>
				<Source><![CDATA[
    private void setRetailHours()
    {
        listRetailHour = new RecordInsertList(TableNum(RetailHour), true, false, true);

        this.addToRetailHour(1, "@RET260382");
        this.addToRetailHour(2, "@RET260383");
        this.addToRetailHour(3, "@RET260384");
        this.addToRetailHour(4, "@RET260385");
        this.addToRetailHour(5, "@RET260386");
        this.addToRetailHour(6, "@RET260363");
        this.addToRetailHour(7, "@RET260364");
        this.addToRetailHour(8, "@RET260365");
        this.addToRetailHour(9, "@RET260366");
        this.addToRetailHour(10, "@RET260367");
        this.addToRetailHour(11, "@RET260368");
        this.addToRetailHour(12, "@RET260369");
        this.addToRetailHour(13, "@RET260370");
        this.addToRetailHour(14, "@RET260371");
        this.addToRetailHour(15, "@RET260372");
        this.addToRetailHour(16, "@RET260373");
        this.addToRetailHour(17, "@RET260374");
        this.addToRetailHour(18, "@RET260375");
        this.addToRetailHour(19, "@RET260376");
        this.addToRetailHour(20, "@RET260377");
        this.addToRetailHour(21, "@RET260378");
        this.addToRetailHour(22, "@RET260379");
        this.addToRetailHour(23, "@RET260380");
        this.addToRetailHour(24, "@RET260381");

        listRetailHour.insertDatabase();

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailHour)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailOfflineConfiguration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets retail offline configuration.
    /// </summary>
    protected void setRetailOfflineConfiguration()
    {
        RetailOfflineDefaultProfileCreator creator = new RetailOfflineDefaultProfileCreator();
        creator.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets retail parameters.
    /// </summary>
    public void setRetailParameters()
    {
        RetailParameters::find(false);

        ttsbegin;
        RetailParameters retailParameters = RetailParameters::find(true);
        if (!retailParameters.HoldTogetherForDiscountRounding)
        {
            retailParameters.HoldTogetherForDiscountRounding = true;
            retailParameters.update();
            info("@Retail:HoldTogetherForDiscountRoundingSeed");
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailProvisionedChannelProdAttr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the provisioned channel product attributes
    /// </summary>
    /// <param name="doProgressCount">
    /// A flag to enable progress count
    /// </param>
    public void setRetailProvisionedChannelProdAttr(boolean doProgressCount = true)
    {
        RecId textAttributeType, boolAttributeType, decimalAttributeType, referenceAttributeType;
        RecId spChannelProductAttributeGroup, storeProductAttributeGroup;
        DictEnum dictEnum = new DictEnum(enumNum(RetailChannelProductAttributeId));

        // Create the attribute types for the provisioned channel product attributes
        textAttributeType = this.addToEcoResAttributeType(AttributeDataType::Text, NoYes::No, NoYes::No, #ProvisionedChannelAttributeText).RecId;
        boolAttributeType = this.addToEcoResAttributeType(AttributeDataType::TrueFalse, NoYes::No, NoYes::No, #ProvisionedChannelAttributeBoolean).RecId;
        decimalAttributeType = this.addToEcoResAttributeType(AttributeDataType::Decimal, NoYes::No, NoYes::No, #ProvisionedChannelAttributeDecimal).RecId;
        referenceAttributeType = this.addToEcoResAttributeType(AttributeDataType::Reference, NoYes::No, NoYes::No, #ProvisionedChannelAttributeReference).RecId;

        // Add 'Search Keywords' attribute to Default product attribute group.
        this.addToEcoResAttribute(EcoResAttributeGroup::findByName("@RET490123").RecId, EcoResAttributeModifier::Catalog, #ProvisionedChannelAttributeText, #AttributeSearchKeywords);

        // Create the provisioned channel product attributes
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::ProductName, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::Description, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::ItemNumber, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::Features, textAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::Image, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::Color, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::Size, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::Style, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::Configuration, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::ReviewRating, decimalAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::New, boolAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::CustomerFavorites, boolAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::StaffFavorites, boolAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::Brand, textAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::SearchKeywords, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::SalesTaxGroup, referenceAttributeType);
        this.addRetailProvisionedChannelProdAttr(RetailChannelProductAttributeID::NavigationCategory, referenceAttributeType);

        // Create the attribute groups of the provisioned channel product attributes
        spChannelProductAttributeGroup = this.addRetailProvisionedChannelProdAttrGroup(RetailChannelType::SharePointOnlineStore, #SharePointProvisionedProductAttributeGroup).AttributeGroup;
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::ProductName, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Description, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::ItemNumber, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Features, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Image, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Color, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Size, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Style, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Configuration, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::ReviewRating, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::New, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::CustomerFavorites, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::StaffFavorites, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Brand, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::SearchKeywords, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::SalesTaxGroup, spChannelProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::NavigationCategory, spChannelProductAttributeGroup);

        storeProductAttributeGroup = this.addRetailProvisionedChannelProdAttrGroup(RetailChannelType::RetailStore, #StoreProvisionedProductAttributeGroup).AttributeGroup;
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::ProductName, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Description, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::ItemNumber, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Features, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Specification, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Image, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Color, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Size, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Style, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Configuration, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::ReviewRating, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::New, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::CustomerFavorites, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::StaffFavorites, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::Brand, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::SearchKeywords, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::SalesTaxGroup, storeProductAttributeGroup);
        this.addRetailProvisionedChannelProdAttrToGrp(RetailChannelProductAttributeID::NavigationCategory, storeProductAttributeGroup);

        if (doProgressCount)
        {
            progressCounter++;
            progress.setCount(progressCounter);
            progress.setText(strFmt("%1", tableStr(RetailProvisionedChannelProductAttribute)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailSharedParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in <c>RetailSharedParameters</c> table and sets the values for table fields update function.
    /// </summary>
    /// <param name="doProgressCount">
    /// A boolean value.
    /// </param>
    public void setRetailSharedParameters(boolean doProgressCount = true)
    {
        RetailSharedParameters retailSharedParameters = RetailSharedParameters::find(true);

        if (!retailSharedParameters.HtmlAttributeType)
        {
            retailSharedParameters.HtmlAttributeType =
                this.addToEcoResAttributeType(AttributeDataType::Text, NoYes::No, NoYes::No, "@RET490090").RecId;
        }

        if (!retailSharedParameters.ImagesAttributeType)
        {
            retailSharedParameters.ImagesAttributeType =
                this.addToEcoResAttributeType(AttributeDataType::Text, NoYes::No, NoYes::No, "@RET490101").RecId;
        }

        if (!retailSharedParameters.VideosAttributeType)
        {
            retailSharedParameters.VideosAttributeType =
                this.addToEcoResAttributeType(AttributeDataType::Text, NoYes::No, NoYes::No, "@RET490112").RecId;
        }

        if (!retailSharedParameters.CategoryDefaultAttributeGroup)
        {
            retailSharedParameters.CategoryDefaultAttributeGroup =
                this.addToEcoResAttributeGroup("@RET490160", doProgressCount).RecId;
        }

        if (!retailSharedParameters.ProductDefaultAttributeGroup)
        {
            retailSharedParameters.ProductDefaultAttributeGroup =
                this.addToEcoResAttributeGroup("@RET490123", doProgressCount).RecId;
        }

        // Default catalog attribute group
        if (!retailSharedParameters.CatalogDefaultAttributeGroup)
        {
            retailSharedParameters.CatalogDefaultAttributeGroup =
                this.addToEcoResAttributeGroup("@REX4520176", doProgressCount).RecId;
        }

        // Default customer attribute group
        if (!retailSharedParameters.CustomerDefaultAttributeGroup)
        {
            retailSharedParameters.CustomerDefaultAttributeGroup =
                this.addToEcoResAttributeGroup("@REX4520174", doProgressCount).RecId;
        }

        // Default worker attribute group
        if (!retailSharedParameters.WorkerDefaultAttributeGroup)
        {
            retailSharedParameters.WorkerDefaultAttributeGroup =
                this.addToEcoResAttributeGroup("@REX4520175", doProgressCount).RecId;
        }

        retailSharedParameters.update();

        if (doProgressCount)
        {
            progressCounter++;
            progress.setCount(progressCounter);
            progress.setText(strFmt("%1", tableStr(RetailSharedParameters)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailStandardAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects a record in <c>RetailStandardAttribute</c> table and sets the values for the table fields using insert function.
    /// </summary>
    /// <param name="doProgressCount">
    /// A boolean value.
    /// </param>
    public void setRetailStandardAttribute(boolean doProgressCount = true)
    {
        #DEFINE.StandardAttributeTypeName('StandardAttributeType')

        RetailStandardAttribute retailStandardAttribute;
        EcoResAttribute ecoResAttribute;
        EcoResAttributeType attributeType;
        DictEnum dictEnum = new DictEnum(enumNum(RetailStandardAttributeID));
        int idx;

        for (idx=0; idx<dictEnum.values(); idx++)
        {
            select firstOnly retailStandardAttribute
                where retailStandardAttribute.StandardAttributeID == any2Enum(dictEnum.index2Value(idx));

            if (!retailStandardAttribute && any2Enum(dictEnum.index2Value(idx)) != RetailStandardAttributeID::None)
            {
                ecoResAttribute.AttributeModifier = EcoResAttributeModifier::Catalog;
                attributeType = EcoResAttributeType::findByName(#StandardAttributeTypeName);
                if (!attributeType)
                {
                    ecoResAttribute.AttributeType = this.addToEcoResAttributeType(AttributeDataType::Text, NoYes::No, NoYes::Yes, #StandardAttributeTypeName).RecId;
                }
                else
                {
                    ecoResAttribute.AttributeType = attributeType.RecId;
                }
                ecoResAttribute.Name = dictEnum.index2Name(idx);
                ecoResAttribute.insert();

                retailStandardAttribute.StandardAttributeID = any2Enum(dictEnum.index2Value(idx));
                retailStandardAttribute.Attribute = ecoResAttribute.RecId;
                retailStandardAttribute.insert();
            }
        }

        if (doProgressCount)
        {
            progressCounter++;
            progress.setCount(progressCounter);
            progress.setText(strFmt("%1", tableStr(RetailStandardAttribute)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailThemePallet</Name>
				<Source><![CDATA[
    private void setRetailThemePallet()
    {
        container palletContainer = [
            ['Default', ['Accent1', 3347456]],
            ['Digital Blue', ['Accent1', 14902818]],
            ['Blue', ['Accent1', 13004559]],
            ['Green', ['Accent1', 3776084]],
            ['Purple', ['Accent1', 13850523]],
            ['Red', ['Accent1', 2376177]]
        ];

        int i,j, palletContainerLength;
        container pallet;
        container accent;
        str palletName, accentId;
        boolean runOnceDone;

        RecordInsertList retailThemePalletList = new RecordInsertList(TableNum(RetailThemePallet), true, false, true);
        RecordInsertList retailThemeAccentList = new RecordInsertList(TableNum(RetailThemeAccent), true, false, true);
        RecordInsertList retailThemeAccentColorList = new RecordInsertList(TableNum(RetailThemeAccentColor), true, false, true);

        palletContainerLength = conLen(palletContainer);

        for (i = 1; i <= palletContainerLength; i++)
        {
            pallet = conPeek(palletContainer,i);

            palletName = conPeek(pallet, 1); //get pallet name

            this.addRetailThemePallet(palletName, retailThemePalletList);

            if (!runOnceDone)
            {
                //
                // Insert accents only using first pallet, other pallets should have same set.
                //

                // add accents
                for (j = 2; j <= conLen(pallet); j++)
                {
                    accent = conPeek(pallet,j); //get accent
                    accentId = conPeek(accent, 1); //get accent name
                    this.addRetailThemeAccent(accentId, accentId, retailThemeAccentList);
                }
                runOnceDone = true;
            }
        }

        retailThemePalletList.insertDatabase(); // insert pallets
        retailThemeAccentList.insertDatabase(); // insert accents

        for (i = 1; i <= palletContainerLength; i++)
        {
            pallet = conPeek(palletContainer,i);
            palletName = conPeek(pallet, 1); //get pallet name

            // add accent color
            for (j = 2; j <= conLen(pallet); j++)
            {
                accent = conPeek(pallet,j); //get accent
                accentId = conPeek(accent, 1); //get accent name

                this.addRetailThemeAccentColor(conPeek(accent, 2), palletName, accentId, retailThemeAccentColorList);
            }
        }        
        
        retailThemeAccentColorList.insertDatabase();        

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailThemeAccentColor)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailTillLayoutZone</Name>
				<Source><![CDATA[
    private void setRetailTillLayoutZone()
    {
        RetailDeviceTypes   retailDeviceTypes;
        RecordInsertList    retailTillLayoutZoneList = new RecordInsertList(TableNum(RetailTillLayoutZone), true, false, true);

        select retailDeviceTypes
            where retailDeviceTypes.Type == RetailDeviceTypeBase::ModernPOS;

        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen1', this.rsdLabelToString(literalStr("@REX4160761")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen2', this.rsdLabelToString(literalStr("@REX4160762")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen3', this.rsdLabelToString(literalStr("@REX4160763")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen4', this.rsdLabelToString(literalStr("@REX4160764")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen5', this.rsdLabelToString(literalStr("@REX4160750")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);

        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen1', this.rsdLabelToString(literalStr("@REX4160751")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen2', this.rsdLabelToString(literalStr("@REX4160752")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen3', this.rsdLabelToString(literalStr("@REX4160753")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen4', this.rsdLabelToString(literalStr("@REX4160754")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen5', this.rsdLabelToString(literalStr("@REX4160755")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen6', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen6")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen7', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen7")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen8', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen8")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen9', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen9")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'TransactionScreen10', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen10")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);

        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen1', this.rsdLabelToString(literalStr("@REX4160761")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'PictureId1', this.rsdLabelToString(literalStr("@REX4160756")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'PictureId2', this.rsdLabelToString(literalStr("@REX4160757")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'PictureId3', this.rsdLabelToString(literalStr("@REX4160758")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'PictureId4', this.rsdLabelToString(literalStr("@REX4160759")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'PictureId5', this.rsdLabelToString(literalStr("@REX4160760")), RetailZoneType::Image, retailTillLayoutZoneList);

        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen1', this.rsdLabelToString(literalStr("@REX4160761")), RetailZoneType::Reports, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen2', this.rsdLabelToString(literalStr("@REX4160762")), RetailZoneType::Reports, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen3', this.rsdLabelToString(literalStr("@REX4160763")), RetailZoneType::Reports, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen4', this.rsdLabelToString(literalStr("@REX4160764")), RetailZoneType::Reports, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSFull, 'WelcomeScreen5', this.rsdLabelToString(literalStr("@REX4160750")), RetailZoneType::Reports, retailTillLayoutZoneList);

        select retailDeviceTypes
            where retailDeviceTypes.Type == RetailDeviceTypeBase::ModernPOSWindowsPhone;

        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen1', this.rsdLabelToString(literalStr("@REX4160761")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen2', this.rsdLabelToString(literalStr("@REX4160762")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen3', this.rsdLabelToString(literalStr("@REX4160763")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen4', this.rsdLabelToString(literalStr("@REX4160764")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen5', this.rsdLabelToString(literalStr("@REX4160750")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);

        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen1', this.rsdLabelToString(literalStr("@REX4160751")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen2', this.rsdLabelToString(literalStr("@REX4160752")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen3', this.rsdLabelToString(literalStr("@REX4160753")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen4', this.rsdLabelToString(literalStr("@REX4160754")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen5', this.rsdLabelToString(literalStr("@REX4160755")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen6', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen6")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen7', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen7")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen8', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen8")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen9', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen9")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'TransactionScreen10', this.rsdLabelToString(literalStr("@Retail:ButtonGridTransactionScreen10")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);

        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen1', this.rsdLabelToString(literalStr("@REX4160761")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'PictureId1', this.rsdLabelToString(literalStr("@REX4160756")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'PictureId2', this.rsdLabelToString(literalStr("@REX4160757")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'PictureId3', this.rsdLabelToString(literalStr("@REX4160758")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'PictureId4', this.rsdLabelToString(literalStr("@REX4160759")), RetailZoneType::Image, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'PictureId5', this.rsdLabelToString(literalStr("@REX4160760")), RetailZoneType::Image, retailTillLayoutZoneList);

        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen1', this.rsdLabelToString(literalStr("@REX4160761")), RetailZoneType::Reports, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen2', this.rsdLabelToString(literalStr("@REX4160762")), RetailZoneType::Reports, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen3', this.rsdLabelToString(literalStr("@REX4160763")), RetailZoneType::Reports, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen4', this.rsdLabelToString(literalStr("@REX4160764")), RetailZoneType::Reports, retailTillLayoutZoneList);
        RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::MPOSCompact, 'WelcomeScreen5', this.rsdLabelToString(literalStr("@REX4160750")), RetailZoneType::Reports, retailTillLayoutZoneList);
        
        // Add button grid and image layout zones for EPOS
        if (RetailUtilities::isRetailCDXBackwardCompatibilityEnabled())
        {
            select retailDeviceTypes
                where retailDeviceTypes.Type == RetailDeviceTypeBase::EnterprisePOS;

            // Add button grid zone
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'BUTTONGRID1', this.rsdLabelToString(literalStr("@RET2334")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'BUTTONGRID2', this.rsdLabelToString(literalStr("@RET2333")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'BUTTONGRID3', this.rsdLabelToString(literalStr("@RET2332")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'BUTTONGRID4', this.rsdLabelToString(literalStr("@RET2331")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'BUTTONGRID5', this.rsdLabelToString(literalStr("@RET2330")), RetailZoneType::ButtonGrid, retailTillLayoutZoneList);
            
            // Add image zone
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'LOGOPICTUREID', this.rsdLabelToString(literalStr("@RET4170054")), RetailZoneType::Image, retailTillLayoutZoneList);
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'LOGOPICTUREID2', this.rsdLabelToString(literalStr("@RET4170054")), RetailZoneType::Image, retailTillLayoutZoneList);
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'LOGOPICTUREID3', this.rsdLabelToString(literalStr("@RET4170054")), RetailZoneType::Image, retailTillLayoutZoneList);
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'LOGOPICTUREID4', this.rsdLabelToString(literalStr("@RET4170054")), RetailZoneType::Image, retailTillLayoutZoneList);
            RetailConnSeedDataGenerator::addRetailTillLayoutZone(retailDeviceTypes.RecId, RetailLayoutType::EPOS, 'LOGOPICTUREID5', this.rsdLabelToString(literalStr("@RET4170054")), RetailZoneType::Image, retailTillLayoutZoneList);
        }

        retailTillLayoutZoneList.insertDatabase();
        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("%1", tableStr(RetailTillLayoutZone)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>test</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does actual job by setting the data into the scheduler tables, distribution tables and location tables.
    /// </summary>
    /// <exception cref="Exception::UpdateConflictNotRecovered">
    /// Standard error message.
    /// </exception>
    /// <exception cref="Exception::UpdateConflict">
    /// Standard error message.
    /// </exception>
    public void test()
    {
        #OCCRetryCount

        ttsbegin;

        this.progressInit("@RET584", #NumberOfRecords, #AVITransfer);

        try
        {
            // Populate catalog enriching attributes
            this.setRetailSharedParameters();

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
        catch (Exception::Error)
        {
            ttsabort;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer     version     = conPeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion :
                [version] = packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateItemRetailVariant</Name>
				<Source><![CDATA[
    private void updateItemRetailVariant()
    {
        NumberSequenceCode      numberSequenceCode;
        InventDimCombination    inventDimCombination;
        NumberSeq   numberSeq;

        ttsBegin;

        numberSequenceCode = InventDimCombination::numberSequenceCode();
        if (!numberSequenceCode)
        {
            error ("@RET260884");
        }

        while select forUpdate inventDimCombination
            where !inventDimCombination.RetailVariantId
        {
            if (!numberSeq)
            {
                numberSeq = NumberSeq::newGetNumFromCode(numberSequenceCode);
            }

            inventDimCombination.RetailVariantId = numberSeq.num();
            inventDimCombination.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRetailTillLayoutZone</Name>
				<Source><![CDATA[
    private static void addRetailTillLayoutZone(RefRecId _deviceType, RetailLayoutType _layoutType, RetailZoneId _zoneId, str _zoneName, RetailZoneType _zoneType, RecordInsertList _recordInsertList, boolean _silent = false)
    {
        RetailTillLayoutZone    retailTillLayoutZone;
        str key;

        select retailTillLayoutZone
            where   retailTillLayoutZone.ZoneId == _zoneId
                &&  retailTillLayoutZone.ZoneType == _zoneType
                &&  retailTillLayoutZone.LayoutType == _layoutType;

        if (!retailTillLayoutZone)
        {
            retailTillLayoutZone.DeviceType = _deviceType;
            retailTillLayoutZone.ZoneId = _zoneId;
            retailTillLayoutZone.ZoneName = _zoneName;
            retailTillLayoutZone.ZoneType = _zoneType;
            retailTillLayoutZone.LayoutType = _layoutType;

            _recordInsertList.add(retailTillLayoutZone);
        }
        else
        {
            if (!_silent)
            {
                key = "[" + _zoneId + "]";
                eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailTillLayoutZone), key));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args = null)
    {
        RetailConnSeedDataGenerator defaultSeedDataGenerator = new RetailConnSeedDataGenerator();
        defaultSeedDataGenerator.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnumerationReportStrings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills the <c>RetailReportLocalizedString</c> with the enumeration entries from the given base enum.
    /// </summary>
    /// <param name="_enumId">
    /// A valid base enum ID.
    /// </param>
    private void setEnumerationReportStrings(EnumId _enumId)
    {
        SysDictEnum sde = new SysDictEnum(_enumId);
        int i;
        str stringId, stringValue;
        for (i = 0; i < sde.values(); i++)
        {
            stringId = sde.name() + '_' + int2str(i);
            stringValue = sde.index2Label(i);
            this.addToRetailReportLocalizedString(stringId, stringValue, CompanyInfo::languageId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableAuditLogging</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable database logging (audit log) for selected tables/fields.
    /// </summary>
    private void enableAuditLogging()
    {
        // Log POS audit settings
        this.enableDatbaseLoggingCUD(tableNum(RetailFunctionalityProfile), FieldNum(RetailFunctionalityProfile, AuditEnabled));

        // Log payment services settings
        this.enableDatbaseLoggingCUD(tableNum(CreditCardAccountSetup), FieldNum(CreditCardAccountSetup, ConnectorName));
        this.enableDatbaseLoggingCUD(tableNum(CreditCardAccountSetup), FieldNum(CreditCardAccountSetup, ConnectorProperties));
        this.enableDatbaseLoggingCUD(tableNum(CreditCardAccountSetup), FieldNum(CreditCardAccountSetup, IsTest));

        // Log EFT for POS harware profile
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFT));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTCompanyId));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTMerchantId));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTUserId));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTPassword));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTConfiguration));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTServerName));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTDescription));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTServerPort));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTConnectorName));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, captureExtraData));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, profileVersion));
        this.enableDatbaseLoggingCUD(tableNum(RetailHardwareProfile), FieldNum(RetailHardwareProfile, EFTMaximumCardPayments));

        // Log payment accounts for online stores
        this.enableDatbaseLoggingCUD(tableNum(RetailChannelPaymentConnectorLine), FieldNum(RetailChannelPaymentConnectorLine, PaymentConnectorProperties));
        this.enableDatbaseLoggingCUD(tableNum(RetailChannelPaymentConnectorLine), FieldNum(RetailChannelPaymentConnectorLine,OnlineChannel));
        this.enableDatbaseLoggingCUD(tableNum(RetailChannelPaymentConnectorLine), FieldNum(RetailChannelPaymentConnectorLine, PaymentConnectorName));

        // Log POS register settings
        this.enableDatbaseLoggingCUD(tableNum(RetailTerminalTable), FieldNum(RetailTerminalTable, hardwareProfile));
        this.enableDatbaseLoggingCUD(tableNum(RetailTerminalTable), FieldNum(RetailTerminalTable, EFTStoreRecId));
        this.enableDatbaseLoggingCUD(tableNum(RetailTerminalTable), FieldNum(RetailTerminalTable, EFTTerminalId));
        this.enableDatbaseLoggingCUD(tableNum(RetailTerminalTable), FieldNum(RetailTerminalTable, EFTTenderTypeIdDefault));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDatbaseLoggingCUD</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable database logging for specific table/field for create/update/delete operations.
    /// </summary>
    /// <param name="tableId">
    /// A valid table ID.
    /// </param>
    /// <param name="fieldId">
    /// A valid field ID.
    /// </param>
    private void enableDatbaseLoggingCUD(int tableId, int fieldId)
    {
        this.enableDatbaseLogging(tableId, fieldId, DatabaseLogType::Insert);
        this.enableDatbaseLogging(tableId, fieldId, DatabaseLogType::Update);
        this.enableDatbaseLogging(tableId, fieldId, DatabaseLogType::Delete);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDatbaseLogging</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable database logging for specific table/field.
    /// </summary>
    /// <param name="tableId">
    /// A valid table ID.
    /// </param>
    /// <param name="fieldId">
    /// A valid field ID.
    /// </param>
    /// <param name="logType">
    /// Log type.
    /// </param>
    private void enableDatbaseLogging(int tableId, int fieldId, DatabaseLogType logType)
    {
        DataBaseLog  dbLog;

        select dbLog where
                dbLog.logType   == logType &&
                dbLog.logTable  == tableId &&
                dbLog.logField  == fieldId;

        if (!dbLog)
        {
            dbLog.initValue();
            dbLog.logTable = tableId;
            dbLog.logField = fieldId;
            dbLog.logType = logType;
            dbLog.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCdxPurgeHistoryBatch</Name>
				<Source><![CDATA[
    private void createCdxPurgeHistoryBatch()
    {
        RetailCdxPurgeHistory purgeHistory;
        RetailConnParameters schedulerParameters;
        boolean shouldCreate = false;
        BatchJob batchJob;

        schedulerParameters = RetailConnParameters::find();

        if (schedulerParameters.BatchJobId)
        {
            select firstonly RecId from batchJob where batchJob.RecId == schedulerParameters.BatchJobId;

            if (!batchJob)
            {
                shouldCreate = true;
            }
        }
        else
        {
            shouldCreate = true;
        }

        if (shouldCreate)
        {
            purgeHistory = new RetailCdxPurgeHistory();

            BatchHeader batchHeader = BatchHeader::construct();
            batchHeader.addTask(purgeHistory);

            SysRecurrenceData recur = SysRecurrence::defaultRecurrence();
            recur = SysRecurrence::setRecurrenceNoEnd(recur);
            recur = SysRecurrence::setRecurrenceUnit(recur, SysRecurrenceUnit::Day, 1);
            batchHeader.parmRecurrenceData(recur);
            batchHeader.save();

            ttsbegin;

            schedulerParameters = RetailConnParameters::find(true);

            if (schedulerParameters)
            {
                schedulerParameters.BatchJobId = batchHeader.parmBatchHeaderId();
                schedulerParameters.update();
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertMediaTemplateRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert/update media template records.
    /// </summary>
    private void upsertMediaTemplateRecords()
    {
        this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Catalog, 'Catalogs/{LanguageId}/{CatalogName}.jpg', 1, NoYes::Yes, true);
        this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Category, 'Categories/{CategoryName}.png', 1, NoYes::Yes, true);
        this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Customer, 'Customers/{CustomerNumber}.jpg', 1, NoYes::Yes, true);
        this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Worker, 'Workers/{WorkerNumber}.jpg', 1, NoYes::Yes, true);

        this.upsertProductMediaTemplateRecords();
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertMediaTemplateRecordByEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert/update media template records.
    /// </summary>
    /// <param name = "entityType">The entity type.</param>
    /// <param name = "imageUri">The image uri of the template.</param>
    /// <param name = "imageIndex">The image index.</param>
    /// <param name = "isDefault">If the image is the default image.</param>
    /// <param name = "updateIsDefault">Dtermines if the isDefault field to update; optional.</param>
    private void upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity entityType, str imageUri, int imageIndex, NoYes isDefault, boolean updateIsDefault = false)
    {
        RetailMediaTemplate retailMediaTemplate = RetailMediaTemplate::findByEntityTypeAndImageIndex(entityType, imageIndex, true);

        if (!retailMediaTemplate)
        {
            retailMediaTemplate.clear();
            retailMediaTemplate.initValue();

            retailMediaTemplate.MasterEntityType = entityType;
            retailMediaTemplate.ImageIndex = imageIndex;
            retailMediaTemplate.ImageUrl = imageUri;
            retailMediaTemplate.IsDefault = isDefault;

            retailMediaTemplate.insert();
        }
        else
        {
            if (updateIsDefault)
            {
                retailMediaTemplate.IsDefault = isDefault;
                retailMediaTemplate.update();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertProductMediaTemplateRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert/update product media template records.
    /// </summary>
    private void upsertProductMediaTemplateRecords()
    {
        RetailMediaTemplate retailMediaTemplate;

        select firstonly retailMediaTemplate
            where retailMediaTemplate.MasterEntityType == RetailMediaMasterEntity::Product;

        if (!retailMediaTemplate)
        {
            // Since no product media template record exists insert 5 product template records.
            this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Product, 'Products/{ProductNumber}_000_001.png', 1, NoYes::Yes);
            this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Product, 'Products/{ProductNumber}_000_002.png', 2, NoYes::No);
            this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Product, 'Products/{ProductNumber}_000_003.png', 3, NoYes::No);
            this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Product, 'Products/{ProductNumber}_000_004.png', 4, NoYes::No);
            this.upsertMediaTemplateRecordByEntityType(RetailMediaMasterEntity::Product, 'Products/{ProductNumber}_000_005.png', 5, NoYes::No);
        }
        else
        {
            // If no default record set then set the first record as the default record.
            if (RetailMediaTemplate::getDefaultIndex(RetailMediaMasterEntity::Product) == 0)
            {
                RetailMediaTemplate mediaTemplate = RetailMediaTemplate::findByEntityTypeAndImageIndex(RetailMediaMasterEntity::Product, 1, true);

                mediaTemplate.IsDefault = NoYes::Yes;
                mediaTemplate.update();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertAttachedServiceRecord</Name>
				<Source><![CDATA[
    private void upsertAttachedServiceRecord(RetailAttachedServiceId _attachedServiceId)
    {
        DataArea dataArea;

        while select dataArea where dataArea.IsVirtual == false
        {
            changecompany(dataArea.Id)
            {
                RetailAttachedService attachedService = RetailAttachedService::find(_attachedServiceId);
        
                if (!attachedService.RecId)
                {
                    attachedService.ServiceId = _attachedServiceId;
                    attachedService.Status = RetailAttachedServiceStatusBase::Disabled;
                    attachedService.insert();
                }
                else
                {
                    str key = '[' + _attachedServiceId + ']';
                    eventSource.EventWriteRetailConnSeedDataGeneratorInfo(funcName(), strFmt("@RET585", tableStr(RetailAttachedService), key));
                }
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertAttachedServiceMasterRecord</Name>
				<Source><![CDATA[
    private void upsertAttachedServiceMasterRecord(RetailAttachedServiceId _attachedServiceId, RetailAttachedServiceDisplayName _name)
    {
        RetailAttachedServiceMaster attachedService = RetailAttachedServiceMaster::find(_attachedServiceId);
        
        if (!attachedService.RecId)
        {
            attachedService.ServiceId = _attachedServiceId;
            attachedService.DisplayName = _name;
            attachedService.BaseUrl = BaseUrl;
            attachedService.insert();
        }
        else
        {
            select forUpdate attachedService
            where attachedService.ServiceId == _attachedServiceId;
            
            str key = '[' + _attachedServiceId + ']';
            str messageUpdating = strFmt("@Retail:AttachedServiceMasterRecordUpdating", tableStr(RetailAttachedServiceMaster), key, BaseUrl, _name, attachedService.BaseUrl, attachedService.DisplayName);
            info(messageUpdating);

            attachedService.BaseUrl = BaseUrl;
            attachedService.DisplayName = _name;
            attachedService.update();

            str messageUpdated = strFmt("@Retail:AttachedServiceMasterRecordUpdated", tableStr(RetailAttachedServiceMaster), key, BaseUrl, _name, attachedService.BaseUrl, attachedService.DisplayName);
            info(messageUpdated);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadExtensibleEnumMetadata</Name>
				<Source><![CDATA[
    private void loadExtensibleEnumMetadata()
    {
        RetailEnumValueTable::populateExtensibleEnumMetadata();
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadTableFieldMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    /// Load definition of Table and Field Ids needed by Channel DB.
    /// </summary>
    private void loadTableFieldMetadata()
    {
        RetailTableFieldIdHelper::loadTableFieldMetadata();
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertAttachedServiceRecords</Name>
				<Source><![CDATA[
    private void upsertAttachedServiceRecords()
    {
        RetailSharedParameters sharedParameters = RetailSharedParameters::find(true);
        str workforceManagementServiceId = RetailAttachedServiceHelper::WorkforceManagementServiceId;
        str botFrameworkManagementServiceId = RetailAttachedServiceHelper::BotFrameworkManagementServiceId;
        
        if (!sharedParameters.RecId)
        {
            warning("@Retail:ConnSeedDataGeneratorDefaultRecordMissingRSP");
        }
        else
        {
            // Due to AX schema freeze, we could not rename ProvisioningUrl column in RETAILSHAREDPARAMETERS.
            // Ideally, the column name should be BaseUrl instead of ProvisioningUrl.
            sharedParameters.ProvisioningUrl = BaseUrl;

            sharedParameters.ExtensionServiceUrl = strFmt('%1/%2/%3', BaseUrl, ExtensionServiceAppName, ExtensionServiceName);

            sharedParameters.update();
        }

        this.upsertAttachedServiceMasterRecord(workforceManagementServiceId, "Workforce management");
        this.upsertAttachedServiceMasterRecord(botFrameworkManagementServiceId, "Bot framework");

        this.upsertAttachedServiceRecord(workforceManagementServiceId);
        this.upsertAttachedServiceRecord(botFrameworkManagementServiceId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryModes</Name>
				<Source><![CDATA[
    private void setDeliveryModes()
    {
        RetailDeliveryMode retailDeliveryMode;
        delete_from retailDeliveryMode;

        retailDeliveryMode.DeliveryModeName = '@Retail:DeliveryModeAll';
        retailDeliveryMode.DeliveryModeId = '1';
        retailDeliveryMode.Insert();

        retailDeliveryMode.DeliveryModeName = '@Retail:DeliveryModeStorePickup';
        retailDeliveryMode.DeliveryModeId = '2';
        retailDeliveryMode.Insert();

        retailDeliveryMode.DeliveryModeName = '@Retail:DeliveryModeShipFromStore';
        retailDeliveryMode.DeliveryModeId = '3';
        retailDeliveryMode.Insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>