<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatVendorCatalogPostBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Base controller class for post vendor catalog file upload operations.
/// </summary>
abstract class CatVendorCatalogPostBase
{
    #CatImpSchema
    #CatConstants

    protected str fullFileName;
    protected System.IO.Stream fileStream;
    protected RecId catVendorCatalogMaintenanceRecId;
    protected RefRecId vendorParty;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override new method to setup minmimum info required.
    /// </summary>
    /// <param name = "_fullFileName">File name</param>
    /// <param name = "_catVendorCatalogMaintenanceRecId">Catalog maintenance request id</param>
    /// <param name = "_vendorParty">Vendor party</param>
    /// <param name = "_fileStream">File stream</param>
    public void new(str _fullFileName, RecId _catVendorCatalogMaintenanceRecId, RefRecId _vendorParty,
        System.IO.Stream _fileStream)
    {
        fileStream = _fileStream;
        fullFileName = _fullFileName;
        catVendorCatalogMaintenanceRecId = _catVendorCatalogMaintenanceRecId;
        vendorParty = _vendorParty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates file schema and runs additional post operations.
    /// </summary>
    public void run()
    {
        try
        {
            this.preProcessCatalogMaintenanceRequestXML();
            this.postProcess();

            CatVendorCatalogImportEventLog::logEvent(catVendorCatalogMaintenanceRecId,
                                                    CatImportProcessingMessageType::Info,
                                                    CatVendorCatalogProcessingState::CatalogUploadComplete,
                                                    "@SYS309128");
        }
        catch
        {
            CatVendorCatalogImportEventLog::logEvent(catVendorCatalogMaintenanceRecId,
                                                    CatImportProcessingMessageType::Error,
                                                    CatVendorCatalogProcessingState::CatalogUploadFailed,
                                                    strfmt("@SYS309129", "@SYS191571"));

            this.updateCMRStatus(catVendorCatalogMaintenanceRecId, CatVendorImportStatus::Failed);
            CodeAccessPermission::revertAssert();
            warning("@SYS191571");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the additional post operations: like persisting file to a specific location.
    /// This needs to be implemented in specialized types.
    /// </summary>
    protected abstract void postProcess(){}

]]></Source>
			</Method>
			<Method>
				<Name>preProcessCatalogMaintenanceRequestXML</Name>
				<Source><![CDATA[
    /// <summary>
    /// Decorates the CMR XML with additional attributes as CMR id and vendor party.
    /// </summary>
    protected abstract void preProcessCatalogMaintenanceRequestXML(){}

]]></Source>
			</Method>
			<Method>
				<Name>updateCMRStatus</Name>
				<Source><![CDATA[
    private void updateCMRStatus(RefRecId _cmrRecId, CatVendorImportStatus _catVendorImportStatus)
    {
        ttsBegin;
        CatVendorCatalogMaintenanceRequest catVendorCatalogMaintenanceRequest = CatVendorCatalogMaintenanceRequest::findRecId(_cmrRecId,true);
        catVendorCatalogMaintenanceRequest.LastImportStatus = _catVendorImportStatus;
        catVendorCatalogMaintenanceRequest.update();
        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>