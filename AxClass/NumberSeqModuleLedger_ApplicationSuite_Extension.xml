<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleLedger_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(NumberSeqModuleLedger))]
public final class NumberSeqModuleLedger_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    protected void loadModule()
    {
        next loadModule();

        NumberSeqDatatype datatype;

        if (FeatureStateProvider::isFeatureEnabled(UniqueCertificationFeature::instance()))
        {
            datatype = NumberSeqDatatype::construct();
            datatype.parmDatatypeId(extendedTypeNum(UniqueCertificationId_IT));
            datatype.parmReferenceLabel(literalStr("@ExtendedItallianLocalization:UniqueCertificationId"));
            datatype.parmReferenceHelp(literalStr("@ExtendedItallianLocalization:UniqueCertificationIdentifier"));
            datatype.parmWizardIsContinuous(false);
            datatype.parmWizardIsManual(NoYes::No);
            datatype.parmWizardIsChangeDownAllowed(NoYes::No);
            datatype.parmWizardIsChangeUpAllowed(NoYes::No);
            datatype.parmWizardHighest(999999);
            datatype.parmSortField(1);
            datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
            this.create(datatype);
        }

        if (FeatureStateProvider::isFeatureEnabled(GeneralLedgerSimulationsFeature::instance()))
        {
            datatype = NumberSeqDatatype::construct();
            datatype.parmDatatypeId(extendedTypeNum(GeneralJournalEntrySimJournalNumber_IT));
            datatype.parmReferenceLabel(literalStr("@ExtendedItallianLocalization:SimulationGeneralJournalTransfer"));
            datatype.parmReferenceHelp(literalStr("@ExtendedItallianLocalization:UniqueKeyGLSimulationEntries"));
            datatype.parmWizardIsContinuous(true);
            datatype.parmWizardIsManual(NoYes::No);
            datatype.parmWizardIsChangeDownAllowed(NoYes::No);
            datatype.parmWizardIsChangeUpAllowed(NoYes::No);
            datatype.parmWizardHighest(999999);
            datatype.parmSortField(1);
            datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
            this.create(datatype);
        }

        if (FeatureStateProvider::isFeatureEnabled(PlafondFeature::instance()))
        {
            datatype = NumberSeqDatatype::construct();
            datatype.parmDatatypeId(extendedTypeNum(IntentLetterReportId_IT));
            datatype.parmReferenceLabel(literalStr("@ExtendedItallianLocalization:LetterModelHelpText"));
            datatype.parmReferenceHelp(literalStr("@ExtendedItallianLocalization:LetterModelIdDescription"));
            datatype.parmWizardIsContinuous(true);
            datatype.parmWizardIsManual(NoYes::No);
            datatype.parmWizardIsChangeDownAllowed(NoYes::No);
            datatype.parmWizardIsChangeUpAllowed(NoYes::No);
            datatype.parmWizardHighest(999999);
            datatype.parmSortField(1);
            datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
            this.create(datatype);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>