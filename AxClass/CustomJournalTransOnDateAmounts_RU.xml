<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomJournalTransOnDateAmounts_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CustomJournalTransOnDateAmounts_RU
{
    CustomJournalTrans_RU   customJournalTrans;
    MapAmountIteration_RU   mapAmounts;

    TransDate               onDate;
    boolean                 includeCurrentJournal;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amount</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        CustomAmount_RU amount(CustomTotalType_RU _customTotalType)
    {
        if (mapAmounts)
        {
            return mapAmounts.value(_customTotalType);
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountsMap</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        MapAmountIteration_RU amountsMap()
    {
        return mapAmounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeCurrentJournal</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        boolean includeCurrentJournal(boolean _includeCurrentJournal = includeCurrentJournal)
    {
        includeCurrentJournal = _includeCurrentJournal;
        return includeCurrentJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomJournalTrans</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public CustomJournalTrans_RU parmCustomJournalTrans(CustomJournalTrans_RU _customJournalTrans = customJournalTrans)
    {
        customJournalTrans = _customJournalTrans;
        return customJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnDate</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public TransDate parmOnDate(TransDate _onDate = onDate)
    {
        onDate = _onDate;
        return onDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recalc</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void recalc()
    {
        CustomCorrectionTable_RU    customCorrectionTable;
        CustomCorrectionTrans_RU    customCorrectionTrans;

        mapAmounts    = new MapAmountIteration_RU(Types::Enum);

        if (customJournalTrans && onDate)
        {
            select sum(CorrectionCost), sum(CorrectionDuty), sum(CorrectionExcise), sum(CorrectionVAT)
                from customCorrectionTrans
                where customCorrectionTrans.JournalTransRecId       == customJournalTrans.RecId
                join * from customCorrectionTable
                where customCorrectionTable.CorrectionJournalId     == customCorrectionTrans.CorrectionJournalId    &&
                      (customCorrectionTable.CorrectionDate <  onDate || (includeCurrentJournal && customCorrectionTable.CorrectionDate == onDate));
        }

        mapAmounts.add(CustomTotalType_RU::Cost,   customJournalTrans.estimativeAmount(CustomTotalType_RU::Cost)      + customCorrectionTrans.CorrectionCost);
        mapAmounts.add(CustomTotalType_RU::Duty,   customJournalTrans.estimativeAmount(CustomTotalType_RU::Duty)      + customCorrectionTrans.CorrectionDuty);
        mapAmounts.add(CustomTotalType_RU::Excise, customJournalTrans.estimativeAmount(CustomTotalType_RU::Excise)    + customCorrectionTrans.CorrectionExcise);
        mapAmounts.add(CustomTotalType_RU::VAT,    customJournalTrans.estimativeAmount(CustomTotalType_RU::VAT)       + customCorrectionTrans.CorrectionVAT);

        mapAmounts.add(CustomTotalType_RU::Total,  customJournalTrans.estimativeAmount(CustomTotalType_RU::Total)     + customCorrectionTrans.CorrectionDuty
                                                                                                                      + customCorrectionTrans.CorrectionExcise
                                                                                                                      + customCorrectionTrans.CorrectionVAT);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static CustomJournalTransOnDateAmounts_RU construct()
    {
        return new CustomJournalTransOnDateAmounts_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromTransOnDate</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static CustomJournalTransOnDateAmounts_RU createFromTransOnDate(CustomJournalTrans_RU    _customJournalTrans,
                                                                           TransDate                _onDate,
                                                                           boolean                  _includeCurrentJournal = false)
    {
        CustomJournalTransOnDateAmounts_RU customJournalTransOnDateAmounts = CustomJournalTransOnDateAmounts_RU::construct();

        customJournalTransOnDateAmounts.parmCustomJournalTrans(_customJournalTrans);
        customJournalTransOnDateAmounts.parmOnDate(_onDate);
        customJournalTransOnDateAmounts.includeCurrentJournal(_includeCurrentJournal);
        customJournalTransOnDateAmounts.recalc();

        return customJournalTransOnDateAmounts;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>