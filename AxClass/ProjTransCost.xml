<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTransCost</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>ProjTransCost</c> class is the base class for all project cost transaction classes.
/// </summary>
class ProjTransCost extends ProjTrans
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the category ID for this transaction.
    /// </summary>
    /// <returns>
    ///    The category ID for this transaction.
    /// </returns>
    /// <remarks>
    ///    This method returns an uninitialized value and must be overridden by classes that extend this class to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    ProjCategoryId categoryId()
    {
        ProjCategoryId ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the cost price for this transaction.
    /// </summary>
    /// <returns>
    ///    The cost price for this transaction.
    /// </returns>
    /// <remarks>
    ///    This method returns an uninitialized value and must be overridden by classes that extend this class to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    CostPrice costPrice()
    {
        CostPrice ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyIdSales</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the currency code for sales amounts reported by this transaction.
    /// </summary>
    /// <returns>
    ///    The currency code for sales amounts reported by this transaction.
    /// </returns>
    /// <remarks>
    ///    This method returns an uninitialized value and must be overridden by classes that extend this class to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    ProjSalesCurrencyCode currencyIdSales()
    {
        CurrencyCode ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the default dimensions for this transaction.
    /// </summary>
    /// <returns>
    ///    The default dimension for this transaction.
    /// </returns>
    /// <remarks>
    ///    This method returns an uninitialized value and must be overridden to provide the necessary
    ///    functionality for the specific cost transaction.
    /// </remarks>
    DimensionDefault defaultDimension()
    {
        DimensionDefault ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a transaction is invoiceable.
    /// </summary>
    /// <returns>
    /// true if the line property for this transaction indicates that it is chargeable; otherwise, false.
    /// </returns>
    public boolean invoiceable()
    {
        return ProjLineProperty::find(this.linePropertyId()).ToBeInvoiced;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linePropertyId</Name>
				<Source><![CDATA[
    ProjLinePropertyId linePropertyId()
    {
        ProjLinePropertyId ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projEmplItemId</Name>
				<Source><![CDATA[
    ProjEmplItemId projEmplItemId()
    {
        return this.itemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ID of the project associated with this transaction.
    /// </summary>
    /// <returns>
    /// The ID of the project associated with this transaction.
    /// </returns>
    /// <remarks>
    /// This method returns an uninitialized value and must be overridden by classes that extend this class
    /// to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    ProjId projId()
    {
        ProjId ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the quantity for this transaction.
    /// </summary>
    /// <returns>
    /// The quantity for this transaction.
    /// </returns>
    /// <remarks>
    /// This method returns an uninitialized value and must be overridden by classes that extend this class
    /// to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    Qty qty()
    {
        Qty ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>RecId</c> value for the resource that is associated with this transaction.
    /// </summary>
    /// <returns>
    /// A resource record ID.
    /// </returns>
    /// <remarks>
    /// This method must be overridden by classes that extend this class to provide the necessary
    /// functionality for the specific transaction.
    /// </remarks>
    public ResourceRecId resource()
    {
        ResourceRecId resourceRecId;
        return resourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>RecId</c> value for the resource category that is associated with this transaction.
    /// </summary>
    /// <returns>
    /// A resource category record ID.
    /// </returns>
    /// <remarks>
    /// This method must be overridden by classes that extend this class to provide the necessary
    /// functionality for the specific transaction.
    /// </remarks>
    public ResourceCategoryRecId resourceCategory()
    {
        ResourceCategoryRecId resourceCategoryRecId;
        return resourceCategoryRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sales price for this transaction.
    /// </summary>
    /// <returns>
    /// The sales price for this transaction.
    /// </returns>
    /// <remarks>
    /// This method returns an uninitialized value and must be overridden by classes that extend this class
    /// to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    SalesPrice salesPrice()
    {
        SalesPrice ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscriptionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>subscriptionId</c> value that is associated with this transaction if it exists.
    /// </summary>
    /// <returns>
    /// Returns the <c>subscriptionId</c> value that is associated with this transaction if it exists.
    /// </returns>
    public SMASubscriptionId subscriptionId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction date.
    /// </summary>
    /// <returns>
    /// The transaction date.
    /// </returns>
    /// <remarks>
    /// This method returns an uninitialized value and must be overridden by classes that extend this class
    /// to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    TransDate transDate()
    {
        TransDate ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction type.
    /// </summary>
    /// <returns>
    /// The transaction type cost.
    /// </returns>
    public ProjTransType transType()
    {
        return ProjTransType::Cost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction text (description).
    /// </summary>
    /// <returns>
    /// The transaction text (description).
    /// </returns>
    /// <remarks>
    /// This method returns an uninitialized value and must be overridden by classes that extend this class
    /// to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    TransTxt txt()
    {
        TransTxt ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucherInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the voucher number associated with this transaction.
    /// </summary>
    /// <returns>
    /// The voucher number associated with this transaction.
    /// </returns>
    /// <remarks>
    /// This method returns an uninitialized value and must be overridden by classes that extend this class
    /// to provide the necessary functionality for the specific cost transaction.
    /// </remarks>
    Voucher voucherInvoice()
    {
        Voucher ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lendingLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the lending legal entity.
    /// </summary>
    DataAreaId lendingLegalEntity()
    {
        DataAreaId ret;

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>