<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsCheckABCZonesDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>WMSCheckABCZonesDP</c> class provides data for the <c>WMSCheckABCZones</c> report.
/// </summary>
/// <remarks>
///    This class provides the methods that are used by the <c>WMSCheckABCZones</c> report that lists the
///    items and calculates the ABC values for each item in a specified period.
/// </remarks>
[
    SRSReportQueryAttribute(queryStr(WMSCheckABCZones)),
    SRSReportParameterAttribute(classStr(WMSCheckABCZonesContract))
]
public class WmsCheckABCZonesDP extends SRSReportDataProviderPreProcessTempDB
{
    WMSCheckABCZonesTmp     wmsCheckABCZonesTmp;
    WMSPickingAreaId        pickingAreaA;
    WMSPickingAreaId        pickingAreaB;
    WMSPickingAreaId        pickingAreaC;
    WMSStoreZoneId          zoneA;
    WMSStoreZoneId          zoneB;
    WMSStoreZoneId          zoneC;
    ABCModel                abcModel;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>abcCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the category value for a specified <c>ABCModel</c> record.
    /// </summary>
    /// <param name="_inventItemLocation">
    ///    The <c>InventItemLocation</c> record to use to retrieve the category.
    /// </param>
    /// <returns>
    ///    The category for a specific item.
    /// </returns>
    private ABC abcCode(InventItemLocation _inventItemLocation)
    {
        InventTable inventTable = _inventItemLocation.inventTable();
        return this.abcCodeForInventTable(inventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>abcCodeForInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the category value for a specified <c>InventTable</c> record.
    /// </summary>
    /// <param name="_inventTable">
    ///    The <c>InventTable</c> record to use to retrieve the category.
    /// </param>
    /// <returns>
    ///    The category for a specific item.
    /// </returns>
    protected ABC abcCodeForInventTable(InventTable _inventTable)
    {
        ABC abc;
        switch (abcModel)
        {
            case ABCModel::Revenue:
                abc = _inventTable.abcRevenue;
                break;
            case ABCModel::ContributionMargin:
                abc = _inventTable.abcContributionMargin;
                break;
            case ABCModel::Value:
                abc = _inventTable.abcValue;
                break;
            case ABCModel::Link:
                abc = _inventTable.abcTieUp;
                break;
        }

        return abc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWMSCheckABCZonesTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Queries the <c>WMSCheckABCZonesTmp</c> table and retrieves the data table.
    /// </summary>
    /// <returns>
    ///    The required report data table.
    /// </returns>
    [SRSReportDataSetAttribute('WMSCheckABCZonesTmp')]
    public WMSCheckABCZonesTmp getWMSCheckABCZonesTmp()
    {
        select * from wmsCheckABCZonesTmp;
        return wmsCheckABCZonesTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTempTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts the filtered data into the <c>WMSCheckABCZonesTmp</c> table.
    /// </summary>
    /// <param name="_wmsCheckABCZonesTmp">
    ///    A <c>WMSCheckABCZonesTmp</c> buffer with source data.
    /// </param>
    /// <param name="_inventItemLocation">
    ///    The record of the <c>InventItemLocation</c> table that is used by the report.
    /// </param>
    /// <param name="_inventDim">
    ///    The record of the <c>InventDim</c> table that is used by the report.
    /// </param>
    private void insertIntoTempTable(
        WMSCheckABCZonesTmp         _wmsCheckABCZonesTmp,
        InventItemLocation          _inventItemLocation,
        InventDim                   _inventDim
        )
    {
        _wmsCheckABCZonesTmp.abcModel                    = abcModel;
        _wmsCheckABCZonesTmp.ItemId                      = _inventItemLocation.ItemId;
        _wmsCheckABCZonesTmp.wmsLocationId               = _inventItemLocation.wmsPickingLocation;
        _wmsCheckABCZonesTmp.wmsStoreZoneId              = _inventItemLocation.wmsStoreZoneId;
        _wmsCheckABCZonesTmp.abcCode                     = this.abcCode(_inventItemLocation);
        _wmsCheckABCZonesTmp.InventDimFieldsMap::initAllDimensionsFrom(_inventDim);
      
        _wmsCheckABCZonesTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the report business logic.
    /// </summary>
    /// <remarks>
    ///    This method is used to process the report business logic that is used by the
    ///    <c>WMSCheckABCZones</c> report.
    /// </remarks>
    public void processReport()
    {
        QueryRun                    queryRun;
        InventDim                   inventDim;
        InventItemLocation          inventItemLocation;
        WMSCheckABCZonesContract    wmsCheckABCZonesContract;

        queryRun                    = new QueryRun(this.parmQuery());
        wmsCheckABCZonesContract    = this.parmDataContract() as WMSCheckABCZonesContract;

        this.setParametersFromContract(wmsCheckABCZonesContract);

        queryRun = new QueryRun(this.parmQuery());

        while (queryRun.next())
        {
            inventDim                   = queryRun.get(tableNum(InventDim));
            inventItemLocation          = queryRun.get(tableNum(InventItemLocation));
            this.insertIntoTempTable(wmsCheckABCZonesTmp,inventItemLocation,inventDim);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParametersFromContract</Name>
				<Source><![CDATA[
    private void setParametersFromContract(WMSCheckABCZonesContract _wmsCheckABCZonesContract)
    {
        abcModel        = _wmsCheckABCZonesContract.parmABCModel();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>