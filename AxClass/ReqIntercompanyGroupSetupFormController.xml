<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqIntercompanyGroupSetupFormController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>ReqIntercompanyGroupSetupFormController</c> implements logic used in the intercompany planning group setup form.
/// </summary>
class ReqIntercompanyGroupSetupFormController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCopyToDynamicPlanEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computes whether the copy to dynamic plan option is enabled or not.
    /// </summary>
    /// <param name="_intercompanyGroupMember">
    /// A <c>ReqIntercompanyPlanningGroupMember</c> record with the group member for which to compute whether the copy to dynamic plan option is enabled.
    /// </param>
    /// <returns>
    /// A boolean that indicates whether the copy to dynamic plan option is enabled.
    /// </returns>
    public boolean isCopyToDynamicPlanEnabled(ReqIntercompanyPlanningGroupMember _intercompanyGroupMember)
    {
        CompanyInfo companyInfo = CompanyInfo::findRecId(_intercompanyGroupMember.LegalEntity);
        ReqParameters reqParameters;
        boolean result = false;

        if (companyInfo.DataArea)
        {
            changeCompany(companyInfo.DataArea)
            {
                reqParameters = ReqParameters::find();

                result = reqParameters.CurrentReqPlanIdSchedDynamic != _intercompanyGroupMember.IntercompanyPlanId;
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCopyToStaticPlanEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computes whether the copy to static plan option is enabled or not.
    /// </summary>
    /// <param name="_intercompanyGroupMember">
    /// A <c>ReqIntercompanyPlanningGroupMember</c> record with the group member for which to compute whether the copy to static plan option is enabled.
    /// </param>
    /// <returns>
    /// A boolean that indicates whether the copy to static plan option is enabled.
    /// </returns>
    public boolean isCopyToStaticPlanEnabled(ReqIntercompanyPlanningGroupMember _intercompanyGroupMember)
    {
        CompanyInfo companyInfo = CompanyInfo::findRecId(_intercompanyGroupMember.LegalEntity);
        ReqParameters reqParameters;
        boolean result = false;

        if (companyInfo.DataArea)
        {
            changeCompany(companyInfo.DataArea)
            {
                reqParameters = ReqParameters::find();

                result = reqParameters.CurrentReqPlanIdSchedStatic != _intercompanyGroupMember.IntercompanyPlanId;
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static ReqIntercompanyGroupSetupFormController construct()
    {
        return new ReqIntercompanyGroupSetupFormController();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>