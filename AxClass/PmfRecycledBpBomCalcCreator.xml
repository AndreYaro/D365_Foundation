<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfRecycledBpBomCalcCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>PmfRecycledBpBomCalcCreator</c> is responsible for creating <c>BomCalcBase</c> instances used for calculation of the recycled byproduct.
/// </summary>
class PmfRecycledBpBomCalcCreator implements IPmfRecycledBpBomCalcBaseCreator
{
    BOMCalcItem     parentBomCalc;
    PmfFormulaCoBy  pmfFormulaCoBy;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getResult</Name>
				<Source><![CDATA[
    public BOMCalcBase getResult()
    {
        BomCalcItem_RecycledByProduct           bomCalcItem = BomCalcItem_RecycledByProduct::construct();
        Qty                                     formulaSize = parentBomCalc.parmPmfParentCalcId() ? parentBomCalc.parmPmfFormulaSeriesSize() : parentBomCalc.parmSeriesSize();
        PmfRecycledBpConsumptionCalcParameters  recycledParameters = PmfRecycledBpConsumptionCalcParameters::construct();

        bomCalcItem.parmPmfFormulaCoBy(pmfFormulaCoBy);
        bomCalcItem.parmInventDim(parentBomCalc.parmInventDim());
        bomCalcItem.parmSiteId(parentBomCalc.parmSiteId());
        bomCalcItem.parmPmfParentCalcId(parentBomCalc.parmPmfParentCalcId() ? parentBomCalc.parmPmfParentCalcId() : parentBomCalc.parmPriceCalcId());
        bomCalcItem.parmItemId(parentBomCalc.parmItemId());
        bomCalcItem.parmCoProductItemId(pmfFormulaCoBy.ItemId);
        bomCalcItem.parmCoProductInventDimId(pmfFormulaCoBy.InventDimId);
        bomCalcItem.parmPmfYieldPct(parentBomCalc.parmPmfYieldPct());
        bomCalcItem.parmPmfCostAllocationPct(100);
        bomCalcItem.parmSeriesSize(pmfFormulaCoBy.coByQty(formulaSize));
        bomCalcItem.parmPmfFormulaSeriesSize(pmfFormulaCoBy.coByQty(formulaSize));
        bomCalcItem.parmCalcConsumptionInventQty(pmfFormulaCoBy.coByQty(formulaSize));
        bomCalcItem.parmActualConsumptionInventQty(pmfFormulaCoBy.coByQty(formulaSize));
        bomCalcItem.parmBOMCalcType(parentBomCalc.parmBOMCalcType());
        bomCalcItem.parmBOMId(parentBomCalc.parmPmfBomVersion().bomId);
        bomCalcItem.parmPmfBomVersion(parentBomCalc.parmPmfBomVersion());
        bomCalcItem.parmRouteId(parentBomCalc.parmRouteId());

        bomCalcItem.parmCostingVersionId(parentBomCalc.parmCostingVersionId());
        bomCalcItem.parmFallBackVersionId(parentBomCalc.parmFallBackVersionId());
        bomCalcItem.parmBOMCalcFallBack(parentBomCalc.parmBOMCalcFallBack());

        bomCalcItem.parmBOMCalcTable(BOMCalcTable::findByItemParentPriceCalcId(pmfFormulaCoBy.ItemId,
                                                                               pmfFormulaCoBy.InventDimId,
                                                                               bomCalcItem.parmPmfParentCalcId(),
                                                                               true));

        recycledParameters.parmQtyToAllocateFromFormulaCoBy(pmfFormulaCoBy.coByQty(formulaSize));
        recycledParameters.parmParentCostAllocation(parentBomCalc.parmPmfCostAllocationPct());

        bomCalcItem.parmPmfRecycledBpConsumptionCalcParam(recycledParameters);

        return bomCalcItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParentBomCalc</Name>
				<Source><![CDATA[
    public BOMCalcItem parmParentBomCalc(BOMCalcItem _parentBomCalc = parentBomCalc)
    {
        parentBomCalc = _parentBomCalc;

        return parentBomCalc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPmfFormulaCoBy</Name>
				<Source><![CDATA[
    public PmfFormulaCoBy parmPmfFormulaCoBy(PmfFormulaCoBy _pmfFormulaCoBy = pmfFormulaCoBy)
    {
        pmfFormulaCoBy = _pmfFormulaCoBy;

        return pmfFormulaCoBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PmfRecycledBpBomCalcCreator construct()
    {
        return new PmfRecycledBpBomCalcCreator();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>