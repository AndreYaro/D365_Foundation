<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerEncumbranceReconciliationUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerEncumbranceReconciliationUIBuilder</c> class is responsible for building an input dialog for the <c>LedgerEncumbranceReconciliation</c> report.
/// </summary>
/// <remarks>
/// It adds custom lookups for fiscal calendar year and dimension attribute dialog fields.
/// </remarks>
public class LedgerEncumbranceReconciliationUIBuilder extends SrsReportDataContractUIBuilder
{
    DialogGroup fiscalYearGroup;
    DialogGroup dateRangeGroup;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Builds the UI of the report input dialog.
    /// </summary>
    /// <remarks>
    ///    This method has been overridden to build two nested groups with a radio button style.
    /// </remarks>
    public void build()
    {
        Dialog      dialogLocal = this.dialog();
        DialogGroup datesToInclude;
        LedgerEncumbranceReconciliationContract contract = this.dataContractObject();

        // This method is intentionally not callig super() because it is building the UI itself.

        // Build the dates to include group
        datesToInclude = dialogLocal.addGroup("@SYS329081");

        // Build the fiscal year group within the dates to include group
        fiscalYearGroup = dialogLocal.addGroup("@SYS13292", datesToInclude);
        fiscalYearGroup.frameOptionButton(FormFrameOptionButton::Radio);
        this.addDialogField(methodStr(LedgerEncumbranceReconciliationContract, parmFiscalYearName), contract);

        // Build a date range group within the dates to include group
        dateRangeGroup = dialogLocal.addGroup("@SYS329083", datesToInclude);
        dateRangeGroup.frameOptionButton(FormFrameOptionButton::Radio);
        this.addDialogField(methodStr(LedgerEncumbranceReconciliationContract, parmFromDate), contract);
        this.addDialogField(methodStr(LedgerEncumbranceReconciliationContract, parmToDate), contract);

        // Build a dimension group
        dialogLocal.addGroup("@SYS138491");
        this.addDialogField(methodStr(LedgerEncumbranceReconciliationContract, parmDimensionAttributeName), contract);

        // Build a printout group
        dialogLocal.addGroup("@SYS12608");
        this.addDialogField(methodStr(LedgerEncumbranceReconciliationContract, parmIncludeDetails), contract);
        this.addDialogField(methodStr(LedgerEncumbranceReconciliationContract, parmDifferencesOnly), contract);
        this.addDialogField(methodStr(LedgerEncumbranceReconciliationContract, parmIncludeEncumbranceBalance), contract);
        this.addDialogField(methodStr(LedgerEncumbranceReconciliationContract, parmIncludePreEncumbranceBalance), contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>LedgerEncumbranceReconciliationContract</c> parameter values before running the report.
    /// </summary>
    public void getFromDialog()
    {
        ReconciliationPeriodType reconciliationPeriodType;
        FormGroupControl fiscalYearGroupControl;
        LedgerEncumbranceReconciliationContract contract = this.dataContractObject();

        super();

        fiscalYearGroupControl = fiscalYearGroup.control();

        if (fiscalYearGroupControl.optionValue())
        {
            reconciliationPeriodType = ReconciliationPeriodType::FiscalYear;
        }
        else
        {
            reconciliationPeriodType = ReconciliationPeriodType::DateRange;
        }

        // Since the reconciliation period type is a hidden parameter, set it explicitly.
        contract.parmReconciliationPeriodType(reconciliationPeriodType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form with the values from the previous report run.
    /// </summary>
    public void initializeFields()
    {
        LedgerEncumbranceReconciliationContract contract = this.dataContractObject();

        if (contract.parmReconciliationPeriodType() == ReconciliationPeriodType::FiscalYear)
        {
            fiscalYearGroup.optionValue(1);
            dateRangeGroup.optionValue(0);
        }
        else
        {
            fiscalYearGroup.optionValue(0);
            dateRangeGroup.optionValue(1);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDimensionAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the lookup list for dimensions.
    /// </summary>
    /// <param name="_control">
    ///    A <c>FormStringControl</c> that will be used for the lookup.
    /// </param>
    public void lookupDimensionAttribute(FormStringControl _control)
    {
        DimensionHierarchy::lookupDimensionAttributeByLocalizedName(_control);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupFiscalCalendarYear</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Implements a custom lookup for fiscal calendar year.
    /// </summary>
    /// <param name="_control">
    ///    A <c>FormStringControl</c> that will be used for the lookup.
    /// </param>
    /// <remarks>
    ///    It uses the <c>FiscalCalendarYear</c> table and restricts the records to the fiscal calendar of the
    ///    current ledger.
    /// </remarks>
    public void lookupFiscalCalendarYear(FormStringControl _control)
    {
        FiscalCalendarYear::lookupFiscalCalendarYear(_control, Ledger::fiscalCalendar());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the input dialog caption and changes the fiscal calendar year and dimension attribute dialog fields to appear as lookups.
    /// </summary>
    public void postBuild()
    {
        DialogField fiscalCalendarYear;
        DialogField dimensionAttribute;

        super();

        this.initializeFields();

        this.controller().parmDialogCaption("@SYS316357");

        // From binding info, get the dialog field for fiscal calendar year and add button
        fiscalCalendarYear = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(LedgerEncumbranceReconciliationContract, parmFiscalYearName));

        // From binding info, get the dialog field for dimension attribute and add button
        dimensionAttribute = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(LedgerEncumbranceReconciliationContract, parmDimensionAttributeName));

        if (fiscalCalendarYear)
        {
            fiscalCalendarYear.lookupButton(2);
        }

        if (dimensionAttribute)
        {
            dimensionAttribute.lookupButton(2);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the defaults in order to handle events on dialogs.
    /// </summary>
    public void postRun()
    {
        Dialog      dialogLocal = this.dialog();
        DialogField dialogField;

        super();

        // This method should be called in order to handle events on dialogs.
        dialogLocal.dialogForm().formRun().controlMethodOverload(false);

        // Override the lookup for parmFiscalCalendarYear contract parameter with fiscalCalendarYearLookup of this class.
        dialogField = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(LedgerEncumbranceReconciliationContract, parmFiscalYearName));

        dialogField.registerOverrideMethod(
            methodStr(FormStringControl, lookup),
            methodStr(LedgerEncumbranceReconciliationUIBuilder, lookupFiscalCalendarYear),
            this);

        // Override the lookup for parmDimensionAttribute contract parameter with dimensionAttributeLookup of this class.
        dialogField = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(LedgerEncumbranceReconciliationContract, parmDimensionAttributeName));

        dialogField.registerOverrideMethod(
            methodStr(FormStringControl, lookup),
            methodStr(LedgerEncumbranceReconciliationUIBuilder, lookupDimensionAttribute),
            this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>