<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLocationDirectiveFindLocationApplicationInsightsActivity</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSLocationDirectiveFindLocationApplicationInsightsActivity extends WHSApplicationInsightsActivity
{
    private int locationsEvaluated = 0;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    internal static WHSLocationDirectiveFindLocationApplicationInsightsActivity newFromParameters(
        WHSWorkTransType    _workTransType,
        WHSWorkType         _workType,
        InventTable         _item,
        WHSWorkBuildId      _workCreationNumber,
        WHSOrderNum         _orderNumber,
        WHSLoadId           _loadId,
        WHSShipmentId       _shipmentId,
        WHSInventQty        _requestedInventoryQuantity)
    {
        Map sharedProperties = WHSLocationDirectiveFindLocationApplicationInsightsActivity::initSharedProperties(
            _workTransType,
            _workType,
            _item,
            _workCreationNumber,
            _orderNumber,
            _loadId,
            _shipmentId,
            _requestedInventoryQuantity);

        return new WHSLocationDirectiveFindLocationApplicationInsightsActivity(null, sharedProperties);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSharedProperties</Name>
				<Source><![CDATA[
    private static Map initSharedProperties(
        WHSWorkTransType    _workTransType,
        WHSWorkType         _workType,
        InventTable         _item,
        WHSWorkBuildId      _workCreationNumber,
        WHSOrderNum         _orderNumber,
        WHSLoadId           _loadId,
        WHSShipmentId       _shipmentId,
        WHSInventQty        _requestedInventoryQuantity)
    {
        var workTransTypeProperty = WHSApplicationInsightsWorkOrderTypeEventProperty::newFromValue(_workTransType);
        var workTypeProperty = WHSApplicationInsightsWorkTypeEventProperty::newFromValue(_workType);
        var itemIdProperty = WHSApplicationInsightsItemIdEventProperty::newFromValue(_item.ItemId);
        var itemRecIdProperty = WHSApplicationInsightsItemRecordIdEventProperty::newFromValue(_item.RecId);
        var workCreationNumberProperty = WHSApplicationInsightsWorkCreationNumberEventProperty::newFromValue(_workCreationNumber);
        var orderNumberProperty = WHSApplicationInsightsOrderNumberEventProperty::newFromValue(_orderNumber);
        var loadIdProperty = WHSApplicationInsightsLoadIdEventProperty::newFromValue(_loadId);
        var shipmentIdProperty = WHSApplicationInsightsShipmentIdEventProperty::newFromValue(_shipmentId);
        var requestedInventoryQuantityProperty = WHSApplicationInsightsRequestedInventoryQuantityEventProperty::newFromValue(_requestedInventoryQuantity);
        
        Map sharedProperties = new Map(Types::String, Types::Class);
        sharedProperties.add(workTransTypeProperty.key(), workTransTypeProperty);
        sharedProperties.add(workTypeProperty.key(), workTypeProperty);
        sharedProperties.add(itemIdProperty.key(), itemIdProperty);
        sharedProperties.add(itemRecIdProperty.key(), itemRecIdProperty);
        sharedProperties.add(workCreationNumberProperty.key(), workCreationNumberProperty);
        sharedProperties.add(orderNumberProperty.key(), orderNumberProperty);
        sharedProperties.add(loadIdProperty.key(), loadIdProperty);
        sharedProperties.add(shipmentIdProperty.key(), shipmentIdProperty);
        sharedProperties.add(requestedInventoryQuantityProperty.key(), requestedInventoryQuantityProperty);

        return  sharedProperties;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eventId</Name>
				<Source><![CDATA[
    protected str eventId()
    {
        return WHSApplicationInsightsEventIds::LocationDirectiveFindLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    protected str name()
    {
        return 'Warehouse.LocationDirective.FindLocation';
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentActivityGraphLevelName</Name>
				<Source><![CDATA[
    protected str currentActivityGraphLevelName()
    {
        return 'LocationDirective.FindLocation';
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFoundLocationIdProperty</Name>
				<Source><![CDATA[
    internal final void addFoundLocationIdProperty(WMSLocationId _foundLocationId)
    {
        this.addProperty(WHSApplicationInsightsFoundLocationIdEventProperty::newFromValue(_foundLocationId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFoundInventoryQuantityProperty</Name>
				<Source><![CDATA[
    internal final void addFoundInventoryQuantityProperty(Qty _foundInventoryQuantity)
    {
        this.addProperty(WHSApplicationInsightsFoundInventoryQuantityEventProperty::newFromValue(_foundInventoryQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFoundQuantityProperty</Name>
				<Source><![CDATA[
    internal final void addFoundQuantityProperty(Qty _foundQuantity)
    {
        this.addProperty(WHSApplicationInsightsFoundQuantityEventProperty::newFromValue(_foundQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFoundUnitOfMeasureProperty</Name>
				<Source><![CDATA[
    internal final void addFoundUnitOfMeasureProperty(UnitOfMeasureSymbol _foundUnitOfMeasure)
    {
        this.addProperty(WHSApplicationInsightsFoundUnitOfMeasureEventProperty::newFromValue(_foundUnitOfMeasure));
    }

]]></Source>
			</Method>
			<Method>
				<Name>locationEvaluated</Name>
				<Source><![CDATA[
    internal final void locationEvaluated()
    {
        ++locationsEvaluated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEndEventProperties</Name>
				<Source><![CDATA[
    protected void addEndEventProperties()
    {
        this.addProperty(WHSApplicationInsightsLocationsEvaluatedEventProperty::newFromValue(locationsEvaluated));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>