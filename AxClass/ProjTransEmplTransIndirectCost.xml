<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTransEmplTransIndirectCost</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>ProjTrans</c> class for an indirect cost buffer.
/// </summary>
class ProjTransEmplTransIndirectCost extends ProjTransEmplTransCost
{
    PSAIndirectComponentTrans m_tIndirectComponentTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activityId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns activity ID of indirect cost buffer.
    /// </summary>
    /// <returns>
    /// Activity ID of indirect cost buffer.
    /// </returns>
    public ProjActivityId activityId()
    {
        return m_tIndirectComponentTrans.ActivityId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns category ID of indirect cost buffer.
    /// </summary>
    /// <returns>
    /// Category ID of indirect cost buffer.
    /// </returns>
    public ProjCategoryId categoryId()
    {
        return m_tIndirectComponentTrans.CategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes <c>ProjTrans</c> object for an indirect cost buffer.
    /// </summary>
    /// <param name="_projEmplTrans">
    /// The hour transaction buffer.
    /// </param>
    /// <param name="_projEmplTransCost">
    /// The hour transaction detail buffer.
    /// </param>
    /// <param name="_tIndirectComponentTrans">
    /// The indirect cost buffer.
    /// </param>
    public void new(ProjEmplTrans _projEmplTrans, ProjEmplTransCost _projEmplTransCost, PSAIndirectComponentTrans _tIndirectComponentTrans)
    {
        m_tIndirectComponentTrans    = _tIndirectComponentTrans;

        super(_projEmplTrans, _projEmplTransCost);
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns project ID of indirect cost buffer.
    /// </summary>
    /// <returns>
    /// Project ID of indirect cost buffer.
    /// </returns>
    public ProjId projId()
    {
        return m_tIndirectComponentTrans.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns quantity of indirect cost buffer.
    /// </summary>
    /// <returns>
    /// Returns zero as quantity of indirect cost buffer.
    /// </returns>
    public Qty qty()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns record ID of indirect cost buffer.
    /// </summary>
    /// <returns>
    /// Record ID of indirect cost buffer.
    /// </returns>
    public RecId recId()
    {
        return m_tIndirectComponentTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns table ID of indirect cost buffer.
    /// </summary>
    /// <returns>
    /// Table ID of indirect cost buffer.
    /// </returns>
    public TableId tableId()
    {
        return tableName2id(tableStr(PSAIndirectComponentTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns cost amount of indirect cost buffer.
    /// </summary>
    /// <returns>
    /// Cost amount of indirect cost buffer.
    /// </returns>
    public AmountCur transCost()
    {
        return CurrencyExchangeHelper::amount(m_tIndirectComponentTrans.Amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns date of indirect cost buffer.
    /// </summary>
    /// <returns>
    /// Date of indirect cost buffer.
    /// </returns>
    public TransDate transDate()
    {
        return m_tIndirectComponentTrans.TransDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
