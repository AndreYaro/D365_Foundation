<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetReductionEntryReserveDepCalc_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// It is used to do depreciation calculation for a reduction entry reserve document of asset.
/// </summary>
[AssetDocumentTypeAttribute_JP(AssetDocumentType_JP::AssetReductionEntry_Reserve)]
class AssetReductionEntryReserveDepCalc_JP extends AssetDocumentDepCalculation_JP
{
    AssetDocumentReductionEntry_JP   reductionEntryDocument;
    AssetDepTableMethodInterface_JP  reductionEntryAssetTableMethod;

    AssetBudgetModelId              assetBudgetModelId;
    AssetTransDate                  runDate;
    Map                             reductionEntryBeginBalanceMap;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcForNormalPeriod</Name>
				<Source><![CDATA[
        public AssetAmount calcForNormalPeriod()
    {
        AssetAmount     ret = 0;

        if (amountToDepreciate > accumulatedDepAmount)
        {
            ret = reductionEntryAssetTableMethod.calc();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssetDocumentType</Name>
				<Source><![CDATA[
        public AssetDocumentType_JP getAssetDocumentType()
    {
        return AssetDocumentType_JP::AssetReductionEntry_Reserve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init()
    {
        reductionEntryDocument = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(assetDocumentEntry_JP.AssetId, assetDocumentEntry_JP.BookId);

        super();

        reductionEntryAssetTableMethod = AssetTableMethod::construct(assetDepBookMap_JP, runDate, assetBudgetModelId) as Object;

        if (reductionEntryAssetTableMethod)
        {
            reductionEntryAssetTableMethod.setMainDepBeginBalanceMap(reductionEntryBeginBalanceMap);
            reductionEntryAssetTableMethod.parmAssetDocumentEntry_JP(assetDocumentEntry_JP);

            accumulatedDepAmount    = AssetReductionEntryManager_JP::calcAccumulatedAllocationAmountMst(assetDepBookMap_JP, dateNull(), dateMax());
            amountToDepreciate      = AssetDepTransMap_JP::calcAmountToReserveAllocation(assetDepBookMap_JP, dateMax(), null);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCalculationNeeded</Name>
				<Source><![CDATA[
        public boolean isCalculationNeeded()
    {
        boolean ret;

        ret = super();
        if (ret)
        {
            if (!assetDepBookMap_JP.AllocationStartDate)
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
        public boolean next(AssetTransDate _upperDate = dateMax())
    {
        boolean ret = true;

        ret = super(_upperDate);

        if (ret)
        {
            ret = reductionEntryAssetTableMethod.next();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetBudgetModelId</Name>
				<Source><![CDATA[
        public AssetBudgetModelId parmAssetBudgetModelId(AssetBudgetModelId _assetBudgetModelId = assetBudgetModelId)
    {
        assetBudgetModelId = _assetBudgetModelId;
        return assetBudgetModelId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReductionEntryBeginBalanceMap</Name>
				<Source><![CDATA[
        public Map parmReductionEntryBeginBalanceMap(Map _reductionEntryBeginBalanceMap = reductionEntryBeginBalanceMap)
    {
        reductionEntryBeginBalanceMap = _reductionEntryBeginBalanceMap;
        return reductionEntryBeginBalanceMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRunDate</Name>
				<Source><![CDATA[
        public AssetTransDate parmRunDate(AssetTransDate _runDate = runDate)
    {
        runDate = _runDate;
        return runDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>