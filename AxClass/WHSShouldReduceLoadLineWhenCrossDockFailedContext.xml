<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShouldReduceLoadLineWhenCrossDockFailedContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSShouldReduceLoadLineWhenCrossDockFailedContext implements System.IDisposable
{
    private static WHSShouldReduceLoadLineWhenCrossDockFailedContext instance;
    private boolean shouldReduceLoadLineWhenCrossDockFailed;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    public void Dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParms</Name>
				<Source><![CDATA[
    internal static WHSShouldReduceLoadLineWhenCrossDockFailedContext newFromParms(boolean _shouldReduceLoadLineWhenCrossDockFailed)
    {
        var context = new WHSShouldReduceLoadLineWhenCrossDockFailedContext();

        context.shouldReduceLoadLineWhenCrossDockFailed = _shouldReduceLoadLineWhenCrossDockFailed;

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldReduceLoadLineWhenCrossDockFailed</Name>
				<Source><![CDATA[
    internal static boolean shouldReduceLoadLineWhenCrossDockFailed()
    {
        if (!instance)
        {
            return true;
        }

        return instance.shouldReduceLoadLineWhenCrossDockFailed;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>