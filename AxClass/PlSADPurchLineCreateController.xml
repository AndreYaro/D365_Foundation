<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlSADPurchLineCreateController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PlSADPurchLineCreateController</c> class calls Copy from all forms initialized for using with SAD.
/// </summary>
internal class PlSADPurchLineCreateController extends RunBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static PlSADPurchLineCreateController construct()
    {
        return new PlSADPurchLineCreateController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (!_args || !_args.record() || _args.dataset() != tableNum(PlSADInvoice))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        PlSADInvoice sadInvoice = _args.record();

        Args args = new Args();
        args.record(sadInvoice);
        
        FormRun formRun = new MenuFunction(menuitemDisplayStr(PurchCopyAllLines), MenuItemType::Display).create(args);
        FormDataSource formDataSource = formRun.dataSource();

        QueryBuildDataSource qbds = formDataSource.query().dataSourceTable(tablenum(PurchTable));
        findOrCreateRange_W(qbds, fieldnum(PurchTable, PurchId), sadInvoice.PurchId);

        formRun.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>