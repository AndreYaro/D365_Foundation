<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryDataServiceCommerceIntegrationHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class InventInventoryDataServiceCommerceIntegrationHelper
{
    public static str Datasource = "Commerce";
    public static str OnOrderOffset = "OnOrder";
    public static str ReservPhysicalOffset = "Reservphysical";
    public static str SoldOffset = "PostedQty";

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeCommerceIntegration</Name>
				<Source><![CDATA[
    public static boolean initializeCommerceIntegration()
    {
        if (!FeatureStateProvider::IsFeatureEnabled(InventInventoryDataServiceFeature::instance()))
        {
            return checkFailed(strFmt("@SCM:ValidationError_FeatureNotEnabledWithEnableHint", "@SCM:InventoryServiceFeature"));
        }

        var parameter = InventInventoryDataServiceParameters::find();
        var serviceHealthChecker = new InventoryServiceServiceHealthChecker();
        if (parameter.InventoryServiceEndpoint == '' || !serviceHealthChecker.checkHealth(parameter.InventoryServiceEndpoint))
        {
            return checkFailed("@SCM:InventoryServiceEndpointIsNotSetProperly");
        }

        if (!parameter.isInventoryServiceStatusEnable())
        {
            return checkFailed("@SCM:InventoryServiceStatusNotEnabledErrorMessage");
        }

        if (!FeatureStateProvider::IsFeatureEnabled(InventInventoryDataServiceAdjustmentOffsetFeature::instance()))
        {
            return checkFailed(strFmt("@SCM:ValidationError_FeatureNotEnabledWithEnableHint", "@SCM:InventoryServiceAdjustmentOffsetFeature"));
        }

        if (!FeatureStateProvider::IsFeatureEnabled(InventInventoryDataServiceAdjustmentFeature::instance()))
        {
            return checkFailed(strFmt("@SCM:ValidationError_FeatureNotEnabledWithEnableHint", "@SCM:InventoryServiceAdjustmentFeature"));
        }

        Batch batchTask;
        select firstonly forupdate batchTask
            where batchTask.ClassNumber == classNum(InventInventoryDataServiceAdjustmentBatchJob);

        if (!batchTask.RecId)
        {
            return checkFailed("@SCM:InventoryServiceAdjustmentBatchJobNotEnabledErrorMessage");
        }

        var inventoryServiceClient = new InventoryServiceClient();
        inventoryServiceClient.initializeCommerceIntegration();
        InventInventoryDataServiceAdjustmentOffsetMappingV2::upsertCommerceConfigurations();

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>