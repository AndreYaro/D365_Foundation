<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>ProjListLedgerReconController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>ProjListLedgerReconController</c> class is the controller class for the
/// <c>ProjListLedgerRecon</c> report.
/// </summary>
public class ProjListLedgerReconController extends SrsReportRunController implements BatchRetryable
{
    int     menuitemNumber;

    #define.ReportName('ProjListLedgerRecon.Report')
    #ProjReports
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>prePromptModifyContract</Name>
        <Source><![CDATA[
    protected void prePromptModifyContract()
    {
        ProjListLedgerReconContract contract = this.parmReportContract().parmRdpContract() as ProjListLedgerReconContract;
        this.setMenuItemType();
        contract.parmMenuItemType(menuitemNumber);
    }

]]></Source>
      </Method>
      <Method>
        <Name>preRunValidate</Name>
        <Source><![CDATA[
    protected container preRunValidate()
    {
        MainAccount::updateBalances();

        return super();
    }

]]></Source>
      </Method>
      <Method>
        <Name>setMenuItemType</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the command number based on the caller command.
    /// </summary>
    private void setMenuItemType()
    {
        //Based on the caller menuitem, menuitemnumber is assigned.
        switch (this.parmArgs().menuItemName())
        {
            case menuitemOutputStr(ProjListLedgerReconPayroll):
                this.parmDialogCaption("@SYS74579");
                menuitemNumber=0;
                break;

            case menuitemOutputStr(ProjListLedgerReconProfitLoss):
                this.parmDialogCaption("@SYS60101");
                menuitemNumber=1;
                break;

            case menuitemOutputStr(ProjListLedgerReconWIP):
                this.parmDialogCaption("@SYS59358");
                menuitemNumber=2;
                break;
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
    public static void main(Args _args)
    {
        ProjListLedgerReconController controller  = new ProjListLedgerReconController();
        controller.parmReportName(#ReportName);
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>