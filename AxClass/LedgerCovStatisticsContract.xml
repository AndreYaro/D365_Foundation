<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCovStatisticsContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class LedgerCovStatisticsContract
{
    internal container companies;
    internal boolean useSystemCurrency;

    internal boolean shouldCalculateCustAverageDaysFromDeliveryToInvoice;
    internal boolean shouldCalculateVendAverageDaysFromDeliveryToInvoice;
    internal boolean shouldCalculateCustAverageDaysFromInvoiceToPayment;
    internal boolean shouldCalculateVendAverageDaysFromInvoiceToPayment;

    internal boolean shouldCalculateCustOpenBalance;
    internal boolean shouldCalculateCustOverDueBalance;
    internal boolean shouldCalculateCustOverDueCount;
    internal boolean shouldCalculateCustNotDueBalance;
    internal boolean shouldCalculateCustAmountOverDuePercent;
    internal boolean shouldCalculateVendOpenBalance;
    internal boolean shouldCalculateVendOverDueBalance;
    internal boolean shouldCalculateVendOverDueCount;
    internal boolean shouldCalculateVendNotDueBalance;
    internal boolean shouldCalculateVendAmountOverDuePercent;
    internal boolean shouldCalculateCustDaysSalesOutstanding30Days;
    internal boolean shouldCalculateVendDaysPurchasesOutstanding30Days;

    #DEFINE.CurrentVersion(1)

    #LOCALMACRO.CurrentList
        companies,
        useSystemCurrency,
        shouldCalculateCustAverageDaysFromDeliveryToInvoice, 
        shouldCalculateVendAverageDaysFromDeliveryToInvoice,
        shouldCalculateCustAverageDaysFromInvoiceToPayment,
        shouldCalculateVendAverageDaysFromInvoiceToPayment,
        shouldCalculateCustOpenBalance,
        shouldCalculateCustOverDueBalance,
        shouldCalculateCustOverDueCount,
        shouldCalculateCustNotDueBalance,
        shouldCalculateCustAmountOverDuePercent,
        shouldCalculateVendOpenBalance,
        shouldCalculateVendOverDueBalance,
        shouldCalculateVendOverDueCount,
        shouldCalculateVendNotDueBalance,
        shouldCalculateVendAmountOverDuePercent,
        shouldCalculateCustDaysSalesOutstanding30Days,
        shouldCalculateVendDaysPurchasesOutstanding30Days
    ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
       return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packed)
    {
        Version version = RunBase::getVersion(_packed);
    
        switch(version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packed;
                break;
    
            default:
                return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForCompaniesAndAllStatistics</Name>
				<Source><![CDATA[
    internal static LedgerCovStatisticsContract newForCompaniesAndAllStatistics(container _companies, boolean _useSystemCurrency)
    {
        LedgerCovStatisticsContract contract = LedgerCovStatisticsContract::construct();

        contract.init(_companies, _useSystemCurrency);
        contract.enableAllStatistics();

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    private void init(container _companies,  boolean _useSystemCurrency)
    {
        companies = _companies;
        useSystemCurrency = _useSystemCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableAllStatistics</Name>
				<Source><![CDATA[
    private void enableAllStatistics()
    {
        shouldCalculateCustAverageDaysFromDeliveryToInvoice = true;
        shouldCalculateCustAverageDaysFromInvoiceToPayment = true;
        shouldCalculateVendAverageDaysFromDeliveryToInvoice = true;
        shouldCalculateVendAverageDaysFromInvoiceToPayment = true;

        shouldCalculateCustOpenBalance = true;
        shouldCalculateCustOverDueBalance = true;
        shouldCalculateCustOverDueCount = true;
        shouldCalculateCustNotDueBalance = true;
        shouldCalculateCustAmountOverDuePercent = true;
        shouldCalculateVendOpenBalance = true;
        shouldCalculateVendOverDueBalance = true;
        shouldCalculateVendOverDueCount = true;
        shouldCalculateVendNotDueBalance = true;
        shouldCalculateVendAmountOverDuePercent = true;
        shouldCalculateCustDaysSalesOutstanding30Days = true;
        shouldCalculateVendDaysPurchasesOutstanding30Days = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static LedgerCovStatisticsContract construct()
    {
        return new LedgerCovStatisticsContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>