<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendRequestProfileCompany_SysListPanel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>VendRequestProfileCompany_SysListPanel</c> class represents a list panel control.
/// </summary>
/// <remarks>
///    A list panel is a combination of selected list and an available list where both lists are list box
///    controls and has add and remove buttons to move items between lists. This class follows the pattern
///    of extending the <c>SysListPanel</c> or <c>SysListPanelRelationTableCallback</c> subclass in this
///    case to provide the configuration of a list panel.
/// </remarks>
public class VendRequestProfileCompany_SysListPanel extends SysListPanelRelationTable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAvailableCompanies</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Get the available companies for a configuration profile.
    /// </summary>
    /// <returns>
    ///    A container that contains available companies in the following format; [company ID, company name].
    /// </returns>
    private container getAvailableCompanies()
    {
        container data;
        Set availableCompanies;
        SetEnumerator availableCompaniesEnumerator;
        VirtualDataArea company;
        VendRequestProfile vendorConfiguration;
        DataArea dataArea;

        if (this.parmRelationRangeValue() != '')
        {
            vendorConfiguration = VendRequestProfile::find(str2int64(this.parmRelationRangeValue()));
            if (vendorConfiguration.RecId)
            {
                // Only get the companies if we have a valid configuration profile
                availableCompanies = VendRequestProfileCompany::availableCompanies(vendorConfiguration);
                if (availableCompanies != null)
                {
                    availableCompaniesEnumerator = availableCompanies.getEnumerator();
                    while (availableCompaniesEnumerator.moveNext())
                    {
                        company = availableCompaniesEnumerator.current();

                        select Name from dataArea where dataArea.Id == company;

                        data += [[company, company, dataArea.Name]];
                    }
                }
            }
        }
        return data;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets both available and selected companies for the companies list panel.
    /// </summary>
    /// <returns>
    /// A container that contains the companies for the companies list panel.
    /// </returns>
    /// <remarks>
    /// The container has the following format: The available companies are in the left data and the
    /// selected companies in the right data. Both available companies and selected companies are in the
    /// following format: company ID, company name.This is an overridden method.
    /// </remarks>
    public container getData()
    {
        container selectedData = SysListPanelRelationTable::getSelectedData(
                                        relationTable,
                                        relationField,
                                        relationRangeField,
                                        relationRangeValue,
                                        dataTable,
                                        dataField,
                                        dataContainerFieldIds,
                                        dataRangeField,
                                        ''
                                       );
        container availableData = this.getAvailableCompanies();

        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendRequestProfileCompany_SysListPanel construct()
    {
        VendRequestProfileCompany_SysListPanel sysListPanel = new VendRequestProfileCompany_SysListPanel();
        sysListPanel.parmHasRemoveAllButton(true);
        sysListPanel.parmHasAddAllButton(true);
        // Selected legal entities
        sysListPanel.parmCaptionSelected("@SYS191359");
        // Available legal entities
        sysListPanel.parmCaptionAvailable("@SYS191360");
        sysListPanel.parmRelationTable(tableNum(VendRequestProfileCompany));
        sysListPanel.parmRelationField(fieldNum(VendRequestProfileCompany, Company));
        sysListPanel.parmRelationRangeField(fieldNum(VendRequestProfileCompany, VendRequestProfile));
        sysListPanel.parmDataTable(tableNum(DataArea));
        sysListPanel.parmDataField(fieldNum(DataArea, Id));
        sysListPanel.parmDataContainerFieldIds([fieldNum(DataArea, Id), fieldNum(DataArea, Name)]);
        sysListPanel.parmDataRangeField(fieldNum(VendRequestProfileCompany, VendRequestProfile));
        return sysListPanel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the user interface for the selection of companies for a configuration profile.
    /// </summary>
    /// <param name="_formRun">
    /// The form that contains the list panel controls for the selected companies.
    /// </param>
    /// <param name="_parentControlId">
    /// The parent form control ID that contains the list panel controls for the selected companies.
    /// </param>
    /// <returns>
    /// An instance of the <c>SysListPanelRelationTable</c> class that is configured for selection of
    /// companies.
    /// </returns>
    public static VendRequestProfileCompany_SysListPanel newForm(FormRun _formRun, int _parentControlId)
    {
        VendRequestProfileCompany_SysListPanel sysListPanel = VendRequestProfileCompany_SysListPanel::construct();

        sysListPanel.parmFormRun(_formRun);
        sysListPanel.parmParentId(_parentControlId);

        sysListPanel.build();
        return sysListPanel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>