<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGSTRReportRunService_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

/// <summary>
/// Service class for Tax GSTR report.
/// </summary>
public class TaxGSTRReportRunService_IN extends SysOperationServiceBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the report.
    /// </summary>
    /// <param name = "_dataContract">
    /// Data contract.
    /// </param>
    public void run(TaxGSTRReportRunContract_IN _dataContract)
    {
        ERSolutionTable solution = ERSolutionTable::find(_dataContract.parmErConfiguration());
        ERFormatMappingTable formatMapping = solution.getFormatMappingTable();
        TaxGSTRReportControllerBase_IN reportController = this.getReportDP(solution);
        
        reportController.fillReportContractData(_dataContract);
        reportController.fillData(_dataContract.parmFromDate(), _dataContract.parmToDate(), _dataContract.parmRegNum());
        this.runER(
            reportController.parmDataProvider().parmTaxGSTRReportContractHeader(), 
            formatMapping.RecId, 
            _dataContract,
            this.getDataModelGUIDBySolution(solution));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportDP</Name>
				<Source><![CDATA[
    /// <summary>
    /// The <c>TaxGSTRReportingDP_IN</c> is responsible for getting GST reporting data provider.
    /// </summary>
    /// <param name="_solution">
    /// The record of <c>ERSolutionTable</c>.
    /// </param>
    /// <returns>
    /// The GST reporting data provider.
    /// </returns>
    private TaxGSTRReportControllerBase_IN getReportDP(ERSolutionTable _solution)
    {
        TaxSolutionReportConfigurations reportConfiguration = TaxSolutionReportConfigurations::find(
            TaxSolutionScopeSetup::findByLedger(Ledger::current()).TaxSolutionScope, _solution.RecId);

        DictClass dictClass = new DictClass(
            TaxGSTRReportingControllers_IN::find(reportConfiguration.ReportController).ReportControllerClassID);

        return dictClass.makeObject();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runER</Name>
				<Source><![CDATA[
    private void runER(
        TaxGSTRReportContractHeader_IN  _reportContract, 
        ERFormatMappingId               _formatMappingId, 
        TaxGSTRReportRunContract_IN     _dataContract,
        guid                            _modelGUID)
    {
        const str reportContractDatasourceName = 'HeaderModel';

        try
        {
            ERIFormatMappingRunByGUID erRun = ERObjectsFactory::createFormatMappingRunByFormatMappingId(_formatMappingId, _dataContract.parmReportName());

            erRun.withFileDestination(_dataContract.getFileDestination());
            erRun.withCreatingObjectParameterByGUID(_modelGUID, reportContractDatasourceName, _reportContract);
            erRun.run();
        }
        catch
        {
            info("@SYS88909");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataModelGUIDBySolution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets data model GUID by solution
    /// </summary>
    /// <param name = "_formatSolution">Format solution record</param>
    /// <returns>Data model GUID</returns>
    private guid getDataModelGUIDBySolution(ERSolutionTable _formatSolution)
    {
        ERDataModelTable        dataModel;
        ERFormatMappingTable    formatMapping;
        ERSingleModelBinding    binding;

        select @GUID from dataModel
            join RecId, SpecificModel from binding
                where binding.SpecificModel == dataModel.RecId
            join RecId, Solution from formatMapping
                where formatMapping.Solution == _formatSolution.RecId
                    && formatMapping.RecId == binding.FormatBinding;
        
        return dataModel.GUID;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>