<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustDefaultLocationViewSQLBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final static class CustDefaultLocationViewSQLBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateLocationSQLText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a SQL string used on views joining to various CustCustomer entities to determine the default address location for a given customer and type.
    /// </summary>
    /// <param name = "_roleTypeFilter">A <c>LogisticsLocationRoleType</c> to use when creating the SQL.</param>
    /// <returns>A SQL string.</returns>
    /// <remarks>
    ///  The SQL string returned will be in the form of 
    ///  COALESCE(
    ///      (SELECT TOP 1 DPL.LOCATION FROM CUSTDEFAULTPARTYLOCATION CDPL INNER JOIN DIRPARTYLOCATION DPL ON CDPL.PARTYLOCATION = DPL.RECID WHERE T1.PARTITION = CDPL.PARTITION AND T1.DATAAREAID = CDPL.DATAAREAID AND T1.RECID = CDPL.CUSTTABLERECID AND CDPL.DEFAULTLOCATIONTYPE = 2),
    ///      (SELECT TOP 1 LOGISTICSLOCATION FROM CUSTDEFAULTROLELOCATION CDRL WHERE T1.PARTITION = CDRL.PARTITION AND T1.DATAAREAID = CDRL.DATAAREAID AND T1.ACCOUNTNUM = CDRL.ACCOUNTNUM AND CDRL.TYPE = 2)
    ///  )
    /// </remarks>
    internal static str generateLocationSQLText(LogisticsLocationRoleType _roleTypeFilter)
    {
        SysDictTable dtDirPartyLocation = new SysDictTable(tableNum(DirPartyLocation));
        SysDictTable dtCustDefaultPartyLocation = new SysDictTable(tableNum(CustDefaultPartyLocation));
        SysDictTable dtCustDefaultRoleLocation = new SysDictTable(tableNum(CustDefaultRoleLocation));

        FieldName dplLocation = dtDirPartyLocation.fieldName(fieldNum(DirPartyLocation, Location), DbBackend::Sql);
        FieldName dplRecId = dtDirPartyLocation.fieldName(fieldNum(DirPartyLocation, RecId), DbBackend::Sql);

        FieldName cdplPartyLocation = dtCustDefaultPartyLocation.fieldName(fieldNum(CustDefaultPartyLocation, PartyLocation), DbBackend::Sql);
        FieldName cdplCustRecId = dtCustDefaultPartyLocation.fieldName(fieldNum(CustDefaultPartyLocation, CustTableRecId), DbBackend::Sql);
        FieldName cdplRoleType = dtCustDefaultPartyLocation.fieldName(fieldNum(CustDefaultPartyLocation, DefaultLocationType), DbBackend::Sql);
        FieldName cdplPartition = dtCustDefaultPartyLocation.fieldName(fieldNum(CustDefaultPartyLocation, Partition), DbBackend::Sql);
        FieldName cdplDataAreaId = dtCustDefaultPartyLocation.fieldName(fieldNum(CustDefaultPartyLocation, DataAreaId), DbBackend::Sql);
        
        FieldName cdrlLocation = dtCustDefaultRoleLocation.fieldName(fieldNum(CustDefaultRoleLocation, LogisticsLocation), DbBackend::Sql);
        FieldName cdrlCustAccount = dtCustDefaultRoleLocation.fieldName(fieldNum(CustDefaultRoleLocation, AccountNum), DbBackend::Sql);
        FieldName cdrlPartition = dtCustDefaultRoleLocation.fieldName(fieldNum(CustDefaultRoleLocation, Partition), DbBackend::Sql);
        FieldName cdrlDataAreaId = dtCustDefaultRoleLocation.fieldName(fieldNum(CustDefaultRoleLocation, DataAreaId), DbBackend::Sql);
        FieldName cdrlRoleType = dtCustDefaultRoleLocation.fieldName(fieldNum(CustDefaultRoleLocation, Type), DbBackend::Sql);

        // Using SysComputedColumn to get the field names off the view, the T1 alias will be included. Don't prefix them when building the SQL string later
        FieldName ctCustAccount = SysComputedColumn::returnField(tableStr(CustCustomerV3Entity), dataEntityDataSourceStr(CustCustomerV3Entity, CustTable), fieldStr(CustTable, AccountNum));
        FieldName ctRecId = SysComputedColumn::returnField(tableStr(CustCustomerV3Entity), dataEntityDataSourceStr(CustCustomerV3Entity, CustTable), fieldStr(CustTable, RecId));
        FieldName ctPartition = SysComputedColumn::returnField(tableStr(CustCustomerV3Entity), dataEntityDataSourceStr(CustCustomerV3Entity, CustTable), fieldStr(CustTable, Partition));
        FieldName ctDataAreaId = SysComputedColumn::returnField(tableStr(CustCustomerV3Entity), dataEntityDataSourceStr(CustCustomerV3Entity, CustTable), fieldStr(CustTable, DataAreaId));

        System.Text.StringBuilder firstSelectSB = new System.Text.StringBuilder();

        // SELECT TOP 1 DPL.LOCATION
        firstSelectSB.AppendFormat('SELECT TOP 1 DPL.{0} ', dplLocation);
        
        // FROM CUSTDEFAULTPARTYLOCATION CDPL INNER JOIN DIRPARTYLOCATION DPL
        firstSelectSB.AppendFormat('FROM {0} CDPL INNER JOIN {1} DPL ', dtCustDefaultPartyLocation.name(DbBackend::Sql), dtDirPartyLocation.name(DbBackend::Sql));

        // ON CDPL.PARTYLOCATION = DPL.RECID
        firstSelectSB.AppendFormat('ON CDPL.{0} = DPL.{1} ', cdplPartyLocation, dplRecId);

        // WHERE T1.PARTITION = CDPL.PARTITION 
        firstSelectSB.AppendFormat('WHERE {0} = CDPL.{1} ', ctPartition, cdplPartition);

        // AND T1.DATAAREAID = CDPL.DATAAREAID
        firstSelectSB.AppendFormat('AND {0} = CDPL.{1} ', ctDataAreaId, cdplDataAreaId);

        // AND T1.RECID = CDPL.CUSTTABLERECID 
        firstSelectSB.AppendFormat('AND {0} = CDPL.{1} ', ctRecId, cdplCustRecId);

        // AND CDPL.DEFAULTLOCATIONTYPE = 2
        firstSelectSB.AppendFormat('AND CDPL.{0} = {1}', cdplRoleType, any2Str(enum2int(_roleTypeFilter)));

        System.Text.StringBuilder secondSelectSB = new System.Text.StringBuilder();

        // SELECT TOP 1 LOCATION FROM CUSTDEFAULTROLELOCATION CDRL
        secondSelectSB.AppendFormat('SELECT TOP 1 CDRL.{0} FROM {1} CDRL ', cdrlLocation, dtCustDefaultRoleLocation.name(DbBackend::Sql));

        // WHERE T1.PARTITION = CDRL.PARTITION
        secondSelectSB.AppendFormat('WHERE {0} = CDRL.{1} ', ctPartition, cdrlPartition);

        // AND T1.DATAAREAID = CDRL.DATAAREAID
        secondSelectSB.AppendFormat('AND {0} = CDRL.{1} ', ctDataAreaId, cdrlDataAreaId);

        // AND T1.CUSTACCOUNT = CDRL.CUSTACCOUNT
        secondSelectSB.AppendFormat('AND {0} = CDRL.{1} ', ctCustAccount, cdrlCustAccount);

        // AND CDRL.TYPE = 2
        secondSelectSB.AppendFormat('AND CDRL.{0} = {1} ', cdrlRoleType, any2Str(enum2int(_roleTypeFilter)));

        return strFmt('COALESCE( (%1), (%2) )', firstSelectSB.ToString(), secondSelectSB.ToString());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>