<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCImportChargeFeatureChecker_SA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCImportChargeFeatureChecker_SA</c> class is the feature checker implementation for the
///    line of credit processing charge feature.
/// </summary>
class BankLCImportChargeFeatureChecker_SA extends BankLCImportFeatureChecker
{
    #isoCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCheckFailedMessage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the failed message definition.
    /// </summary>
    /// <returns>
    ///    The failed message definition.
    /// </returns>
    public str getCheckFailedMessage()
    {
        // The parameter "Enable Import Letter of Credit"
        // and "Enable LC Misc. charges posting" should be marked to access this form.
        return "@SYS332262";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFeatureName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the feature name.
    /// </summary>
    /// <returns>
    ///    The feature name.
    /// </returns>
    public str getFeatureName()
    {
        // Letter of Credit Misc. charge
        return "@SYS332272";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFeatureRelatedCountryRegionCodes</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the Saudi Arabia localization feature
    /// </summary>
    /// <returns>
    ///    The Saudi Arabia ISO code.
    /// </returns>
    protected container getFeatureRelatedCountryRegionCodes()
    {
        return [#isoSA];
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether the letter of credit miscellaneous charge feature is enabled.
    /// </summary>
    /// <returns>
    ///    true if the feature is enabled; otherwise, false.
    /// </returns>
    protected boolean isFeatureEnabled()
    {
        return super() && BankParameters::find().BankLCImportChargeEnable_SA == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes and instance of the <c>BankLCImportProcChargeFeatureChecker_SA</c> class.
    /// </summary>
    /// <param name="_isAllowCaching">
    ///    A Boolean value that indicates whether the result is cached; optional.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>BankLCImportProcChargeFeatureChecker_SA</c> class.
    /// </returns>
    /// <remarks>
    ///    The default parameter value is true.
    /// </remarks>
    public static BankLCImportChargeFeatureChecker_SA construct(boolean _isAllowCaching = true)
    {
        return new BankLCImportChargeFeatureChecker_SA(_isAllowCaching);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>