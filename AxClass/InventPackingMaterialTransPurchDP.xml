<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPackingMaterialTransPurchDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Data provider for Packing material weight - purchase report.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(InventPackingMaterialTransPurch)),
    SRSReportParameterAttribute(classStr(InventPackingMaterialTransPurchContract))
]
class InventPackingMaterialTransPurchDP extends SRSReportDataProviderBase
{
    InventPackingMaterialTransPurchTmp      inventPackingMaterialTransPurchTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addInvoiceDateRange</Name>
				<Source><![CDATA[
    private Query addInvoiceDateRange(Query _query)
    {
        InventPackingMaterialTransPurchContract contract = this.parmDataContract() as InventPackingMaterialTransPurchContract;
        InvoiceDate fromDate = contract.parmFromDate();
        InvoiceDate toDate = contract.parmToDate();

        Query                queryWithInvoiceDateRange     = new Query(_query.pack());
        QueryBuildDataSource dsPackagingMaterialTransPurch = queryWithInvoiceDateRange.dataSourceTable(tableNum(InventPackagingMaterialTransPurch));
        QueryBuildRange      invoiceDateRange              = SysQuery::findOrCreateRange(dsPackagingMaterialTransPurch, fieldNum(InventPackagingMaterialTransPurch, InvoiceDate));

        invoiceDateRange.value(queryRange(fromDate, toDate));

        return queryWithInvoiceDateRange;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventPackingMaterialTransPurchTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches data from the temporary <c>InventPackingMaterialTransPurchTmp</c> table.
    /// </summary>
    /// <returns>
    ///    The data from the <c>InventPackingMaterialTransPurchTmp</c> table.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(InventPackingMaterialTransPurchTmp))]
    public InventPackingMaterialTransPurchTmp getInventPackingMaterialTransPurchTmp()
    {
        select inventPackingMaterialTransPurchTmp;
        return inventPackingMaterialTransPurchTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        Query query = this.parmQuery();
        QueryRun queryRun = new QueryRun(this.addInvoiceDateRange(query));

        while (queryRun.next())
        {
            InventPackagingMaterialTransPurch inventPackagingMaterialTransPurch = queryRun.get(tableNum(InventPackagingMaterialTransPurch));
            InventPackagingMaterialCode inventPackagingMaterialCode = queryRun.get(tableNum(InventPackagingMaterialCode));

            inventPackingMaterialTransPurchTmp.clear();
            inventPackingMaterialTransPurchTmp.InvoiceAccount     = inventPackagingMaterialTransPurch.InvoiceAccount;
            inventPackingMaterialTransPurchTmp.InvoiceDate        = inventPackagingMaterialTransPurch.InvoiceDate;
            inventPackingMaterialTransPurchTmp.InvoiceId          = inventPackagingMaterialTransPurch.InvoiceId;
            inventPackingMaterialTransPurchTmp.PackagingWeight    = inventPackagingMaterialTransPurch.PackagingWeight;
            inventPackingMaterialTransPurchTmp.PurchId            = inventPackagingMaterialTransPurch.PurchId;
            inventPackingMaterialTransPurchTmp.Name               = inventPackagingMaterialCode.Name;
            inventPackingMaterialTransPurchTmp.PackMaterialCode   = inventPackagingMaterialCode.PackMaterialCode;
            inventPackingMaterialTransPurchTmp.Unit               = inventPackagingMaterialCode.Unit;
            inventPackingMaterialTransPurchTmp.PackagingClassId_W = inventPackagingMaterialTransPurch.PackagingClassId_W;
            inventPackingMaterialTransPurchTmp.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
