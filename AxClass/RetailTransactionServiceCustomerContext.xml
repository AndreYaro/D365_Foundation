<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionServiceCustomerContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailTransactionServiceCustomerContext</c> class stores the additional parameters used by <c>RetailTransactionServiceCustomer</c> class.
/// </summary>
internal final class RetailTransactionServiceCustomerContext implements System.IDisposable
{
    private static RetailTransactionServiceCustomerContext instance;
    private RetailOptOutPersonalization optOutPersonalization;
    private RetailOptOutWebActivityTracking optOutWebActivityTracking;
    private DirNamePersonalTitleRecId customerTitleRecId;
    private MCRAllowOnAccount allowOnAccountPayment;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disposes this instance.
    /// </summary>
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <returns>A new instance of the class.</returns>
    internal static RetailTransactionServiceCustomerContext construct()
    {
        return new RetailTransactionServiceCustomerContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of the class.
    /// </summary>
    /// <returns>The instance of the class. If no instance is created null is returned.</returns>
    internal static RetailTransactionServiceCustomerContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOptOutPersonalization</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a value indicating whether personalization has been opted-out.
    /// </summary>
    /// <param name = "_optOutPersonalization">A value indicating whether personalization has been disabled.</param>
    /// <returns>The value indicating whether personalization has been disabled.</returns>
    internal RetailOptOutPersonalization parmOptOutPersonalization(RetailOptOutPersonalization _optOutPersonalization = optOutPersonalization)
    {
        if (!prmIsDefault(_optOutPersonalization))
        {
            optOutPersonalization = _optOutPersonalization;
        }

        return optOutPersonalization;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOptOutWebActivityTracking</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a value indicating whether web activity tracking has been opted-out.
    /// </summary>
    /// <param name = "_optOutWebActivityTracking">A value indicating whether web activity tracking has been disabled.</param>
    /// <returns>The value indicating whether web activity tracking has been disabled.</returns>
    internal RetailOptOutWebActivityTracking parmOptOutWebActivityTracking(RetailOptOutWebActivityTracking _optOutWebActivityTracking = optOutWebActivityTracking)
    {
        if (!prmIsDefault(_optOutWebActivityTracking))
        {
            optOutWebActivityTracking = _optOutWebActivityTracking;
        }

        return optOutWebActivityTracking;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerTitleRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the record identifier of customer title.
    /// </summary>
    /// <param name = "_customerTitleRecId">The record identifier of customer title.</param>
    /// <returns>The record identifier of customer title</returns>
    internal DirNamePersonalTitleRecId parmCustomerTitleRecId(DirNamePersonalTitleRecId _customerTitleRecId = customerTitleRecId)
    {
        if (!prmIsDefault(_customerTitleRecId))
        {
            customerTitleRecId = _customerTitleRecId;
        }

        return customerTitleRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllowOnAccountPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the allow on account payment configuration value.
    /// </summary>
    /// <param name = "_allowOnAccountPayment">The allow on account payment configuration value.</param>
    /// <returns>The allow on account payment configuration value.</returns>
    internal MCRAllowOnAccount parmAllowOnAccountPayment(MCRAllowOnAccount _allowOnAccountPayment = allowOnAccountPayment)
    {
        if (!prmIsDefault(_allowOnAccountPayment))
        {
            allowOnAccountPayment = _allowOnAccountPayment;
        }

        return allowOnAccountPayment;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>