<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransSelectorMarkedForReceipt</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>InventTransSelectorMarkedForReceipt</c> provides the select statement for the inventory transactions that are marked against specified receipt.
/// </summary>
public class InventTransSelectorMarkedForReceipt implements InventTransSelector
{
    InventTransOriginId inventTransOriginIdReceipt;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventTransOriginIdReceipt</Name>
				<Source><![CDATA[
        public InventTransOriginId parmInventTransOriginIdReceipt(InventTransOriginId _inventTransOriginIdReceipt = inventTransOriginIdReceipt)
    {
        inventTransOriginIdReceipt = _inventTransOriginIdReceipt;

        return inventTransOriginIdReceipt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>select</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Selects inventory transactions which are marked for the specified receipt.
    /// </summary>
    /// <param name="_inventTrans">
    ///     An <c>InventTrans</c> record buffer.
    /// </param>
    public void select(InventTrans _inventTrans)
    {
        select nofetch forupdate  MarkingRefInventTransOrigin, InventDimId, Qty, StatusReceipt, StatusIssue, PdsCWQty, ItemId
            from _inventTrans
            where _inventTrans.ValueOpen                      == InventTransOpen::Yes
               && _inventTrans.InventTransOrigin              == inventTransOriginIdReceipt
               && _inventTrans.TransChildType                 == InventTransChildType::None
               && _inventTrans.StatusIssue                    == StatusIssue::None
               && _inventTrans.MarkingRefInventTransOrigin    != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventTransSelectorMarkedForReceipt construct()
    {
        return new InventTransSelectorMarkedForReceipt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates and initializes a new instance of <c>InventTransSelectorMarkedForReceipt</c> class.
    /// </summary>
    /// <param name="_inventTransOriginIdReceipt">
    ///     The ID of transaction originator.
    /// </param>
    /// <returns>
    ///     A new instance of <c>InventTransSelectorMarkedForReceipt</c> class.
    /// </returns>
    public static InventTransSelectorMarkedForReceipt newFromInventTransOriginId(InventTransOriginId _inventTransOriginIdReceipt)
    {
        InventTransSelectorMarkedForReceipt selectorMarkedForReceipt = InventTransSelectorMarkedForReceipt::construct();

        selectorMarkedForReceipt.parmInventTransOriginIdReceipt(_inventTransOriginIdReceipt);

        return selectorMarkedForReceipt;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>