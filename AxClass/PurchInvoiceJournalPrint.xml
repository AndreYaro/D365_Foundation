<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchInvoiceJournalPrint</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchInvoiceJournalPrint</c> class handles the printing of a purchase order invoice.
/// </summary>
class PurchInvoiceJournalPrint
extends FormletterJournalPrint
{
    boolean printEUVatInvoice;
    container printerSettingsEUVatInvoice;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>afterPrint</Name>
				<Source><![CDATA[
        private void afterPrint()
    {
        VendInvoiceJour vendInvoiceJour;

        if (journalList)
        {
            journalList.first(vendInvoiceJour);

            while (vendInvoiceJour)
            {
                if (vendInvoiceJour.Proforma == NoYes::Yes)
                {
                    vendInvoiceJour.selectForUpdate(true);
                    vendInvoiceJour.delete();
                }

                if (!journalList.next(vendInvoiceJour))
                {
                    break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doPrint</Name>
				<Source><![CDATA[
/// <summary>
    /// Prints the document.
    /// </summary>
    protected void doPrint()
    {
        VendInvoiceJour vendInvoiceJour;
        // <GEERU>
        vendInvoiceJour.printJournal(this, journalList, printFormletter, printAcceptanceReport, printInventBaileeReport
        // <GIN>
        ,printExciseFormLetter);
        // </GIN>
        // </GEERU>
    }
]]></Source>
			</Method>
			<Method>
				<Name>newJournalList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a record sorted list.
    /// </summary>
    /// <returns>
    /// A new record sorted list.
    /// </returns>
    /// <remarks>
    /// The record sorted list is used by reports, where the report prints the invoice posted purchase orders that are in the record sorted list.
    /// </remarks>
    public RecordSortedList newJournalList()
    {
        RecordSortedList recordSortedList;

        recordSortedList = new RecordSortedList(tableNum(VendInvoiceJour));
        recordSortedList.sortOrderFromContainer(this.formLetterSorting(tableNum(VendInvoiceJour), fieldNum(VendInvoiceJour, RecId)));

        return recordSortedList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrinterSettingsEuVatInvoice</Name>
				<Source><![CDATA[
        public container parmPrinterSettingsEuVatInvoice(container _printerSettingsEUVatInvoice = printerSettingsEUVatInvoice)
    {
        printerSettingsEUVatInvoice = _printerSettingsEUVatInvoice;
        return printerSettingsEUVatInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintEUVatInvoice</Name>
				<Source><![CDATA[
        public boolean parmPrintEUVatInvoice(boolean _printEUVatInvoice = printEUVatInvoice)
    {
        printEUVatInvoice = _printEUVatInvoice;
        return printEUVatInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PurchInvoiceJournalPrint construct()
    {
        return new PurchInvoiceJournalPrint();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromFormletterContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Initializes an instance of the <c>PurchInvoiceJournalPrint</c> class.
    /// </summary>
    /// <param name="_purchFormLetterInvoiceContract">
    ///   An instance of the <c>PurchFormLetterInvoiceContract</c> class.
    /// </param>
    /// <returns>
    ///   An instance of the <c>PurchInvoiceJournalPrint</c> class.
    /// </returns>
    public static PurchInvoiceJournalPrint newFromFormletterContract(PurchFormLetterInvoiceContract _purchFormLetterInvoiceContract)
    {
        PurchInvoiceJournalPrint purchInvoiceJournalPrint = PurchInvoiceJournalPrint::construct();

        purchInvoiceJournalPrint.parmPrinterSettingsEuVatInvoice(SysOperationHelper::base64Decode(_purchFormLetterInvoiceContract.parmPrinterSettingsEuVatInvoice()));
        purchInvoiceJournalPrint.parmPrintEUVatInvoice(_purchFormLetterInvoiceContract.parmPrintEuVatInvoice());

        return purchInvoiceJournalPrint;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renderingCompleted</Name>
				<Source><![CDATA[
        public static void renderingCompleted(SrsReportRunController _sender, SrsRenderingCompletedEventArgs _eventArgs)
    {
        // from the sender get the underyling PurchInvoiceJournalPrint instance
        PurchInvoiceJournalPrint caller = _sender.parmArgs().caller();
        caller.afterPrint();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>