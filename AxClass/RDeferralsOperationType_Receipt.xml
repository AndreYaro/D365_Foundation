<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rDeferralsOperationType_Receipt</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class rDeferralsOperationType_Receipt extends RDeferralsOperationType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBePosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if deferral book can be posted.
    /// </summary>
    /// <returns>true if deferral status is "Scheduled", othervise false</returns>
    public boolean canBePosted()
    {
        return rDeferralsBook.Status == RDeferralsStatus::Scheduled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAcquisitionDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates aquisition date.
    /// </summary>
    /// <returns>True if deferral aquisition date is less then transDate, othervice false and rises error message.</returns>
    protected boolean checkAcquisitionDate()
    {
        if (RDeferralsTable::find(rDeferralsBook.DeferralsId).AcquisitionDate > transDate)
            return checkFailed(strfmt("@GLS115955", rDeferralsBook.DeferralsId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPostTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// This function returns always true for some reasons.
    /// </summary>
    /// <returns>True</returns>
    public boolean checkPostTrans()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rDeferralsTransType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns single deferrals trans type.
    /// </summary>
    /// <returns>RDeferralsTransType::Receipt</returns>
    public RDeferralsTransType rDeferralsTransType()
    {
        return RDeferralsTransType::Receipt;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>