<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfBatchOrderQuantityValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PmfBatchOrderQuantityValidator</c> class is responsible for validating
/// whether the batch order quantity specified by the user
/// satisfies the constraints defined by the default order settings and the formula.
/// In the case when the quantity specified by the user does not satisfy the constraints the class will
/// resolve this conflict by applying one of the error correction methods, such as: ask the user to make the decision,
/// use the user-specified quantity despite the conflict, use the corrected quantity, e.t.c.
/// </summary>
class PmfBatchOrderQuantityValidator extends InventMovementQuantityValidator
{
    BOMVersion bomVersion;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromErrorCorrectionMethods</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the conflict resolver.
    /// </summary>
    /// <param name = "_inventItemOrderSetupMap">A record with the order settings that define the quantity constraints.</param>
    /// <param name = "_errorCorrectionMethods">The error correction methods.</param>
    /// <returns>A new instance of the conflict resolver.</returns>
    public static PmfBatchOrderQuantityValidator newFromErrorCorrectionMethods(
        InventItemOrderSetupMap                         _inventItemOrderSetupMap,
        BOMVersion                                      _bomVersion,
        InventMovementQuantityErrorCorrectionMethods    _errorCorrectionMethods)
    {
        var resolver = PmfBatchOrderQuantityValidator::construct();

        resolver.initFromOrderSettings(_inventItemOrderSetupMap);
        resolver.initFromErrorCorrectionMethods(_errorCorrectionMethods);
        resolver.initFromBOMVersion(_bomVersion);

        return resolver;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static PmfBatchOrderQuantityValidator construct()
    {
        return new PmfBatchOrderQuantityValidator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBOMVersion</Name>
				<Source><![CDATA[
    protected void initFromBOMVersion(BOMVersion _bomVersion)
    {
        bomVersion = _bomVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveMultiplicityConflict</Name>
				<Source><![CDATA[
    protected Qty resolveMultiplicityConflict(Qty _requestedQuantity, UnitOfMeasureSymbol _requestedUnitId)
    {
        Qty correctedQuantity = _requestedQuantity;

        if (bomVersion && this.isCheckNeeded(multiplicityErrorCorrectionMethod))
        {
            correctedQuantity = bomVersion.batchOrderQuantityWithAcceptableMultiplicity(_requestedQuantity, multiplicityErrorCorrectionMethod);
        }

        return correctedQuantity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>