<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocuViewExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DocuViewExtension
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DocuView_ShowDefaultAttachmentField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate subscription method to verify DefaultAttachment field of <c>DocuRef</c> table to be shown or not
    /// </summary>
    /// <param name="_testCursor">The table buffer to verify</param>
    /// <param name="_eventHandlerResult">Event handler result through which result value is returned to delegate call</param>
    [SubscribesTo(formStr(DocuView), delegatestr(DocuView, ShowDefaultAttachmentField))]
    public static void DocuView_ShowDefaultAttachmentField(Common _testCursor, EventHandlerResult _eventHandlerResult)
    {
        switch (_testCursor.TableId)
        {
            case tableNum(VendInvoiceInfoTable):
            case tableNum(VendInvoiceJour):
                _eventHandlerResult.booleanResult(true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>OnAllowEditBasedOnActualForm</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(DocuView), delegatestr(DocuView,OnAllowEditBasedOnActualForm))]
    static void OnAllowEditBasedOnActualForm(Common _testCursor, EventHandlerResult _eventHandlerResult)
    {
        CustTable custTable;
        boolean allowEditBasedOnActualForm = _eventHandlerResult.booleanResult();

        if (!allowEditBasedOnActualForm &&
            SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]) &&
           (_testCursor.TableId == tablenum(CustInvoiceJour) || _testCursor.TableId == tablenum(ProjInvoiceJour)))
        {
            switch (_testCursor.TableId)
            {
                case tablenum(CustInvoiceJour):
                    custTable = CustTable::find(CustInvoiceJour::findRecId(_testCursor.RecId).InvoiceAccount, false);
                    break;
                case tablenum(ProjInvoiceJour):
                    custTable = CustTable::find(ProjInvoiceJour::findRecId(_testCursor.RecId).InvoiceAccount, false);
                    break;
            }

            if (custTable.EInvoice)
            {
                allowEditBasedOnActualForm = true;
            }
        }

        if (!allowEditBasedOnActualForm && _testCursor.TableId == tableNum(PurchReqTable))
        {
            allowEditBasedOnActualForm = true;
        }

        if (!allowEditBasedOnActualForm
            && CustFormletterParameters::find().AttachFreeNotesDirectly_IT
            && conFind(FreeNotesOnDocumentsConstants::DocumentsToUnlockAttachments, _testCursor.TableId))
        {
            allowEditBasedOnActualForm = true;
        }

        _eventHandlerResult.booleanResult(allowEditBasedOnActualForm);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>