<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventClassFactory</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventClassFactory
{
    // cache for last inventory closing date
    TransDate               inventLastClosingDate;
    Integer                 inventClosingTTSVersion;

    //Cache for last inventory closing date in secondary currency -->
    TransDate               inventLastClosingDateSecCur;
    Integer                 inventClosingTTSVersionSecCur;
    //Cache for last inventory closing date in secondary currency <--

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    public static InventClassFactory instance()
    {
    	SysGlobalCache cache = appl.globalCache();
    	InventClassFactory thisClass;

    	if (cache.isSet(classstr(InventClassFactory), classstr(InventClassFactory)))
    	{
    		thisClass = cache.get(classstr(InventClassFactory), classstr(InventClassFactory));
    	}
    	else
    	{
    		thisClass = new InventClassFactory();
    		cache.set(classstr(InventClassFactory), classstr(InventClassFactory), thisClass);
    	}

    	return thisClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventLastClosingDate</Name>
				<Source><![CDATA[
    TransDate inventLastClosingDate(boolean  reSelect = false)
    {
        if (inventClosingTtsVersion != appl.ttsVersion() || reSelect || (!inventClosingTtsVersion && !inventLastClosingDate))
        {
            inventLastClosingDate = (select maxof(TransDate) from inventClosing
                                        where inventClosing.Active          == NoYes::Yes &&
                                              // <GEERU>
                                              inventClosing.InventTransCurrency_RU  == InventTransCurrency_RU::PrimaryCur   &&
                                              // </GEERU>
                                              inventClosing.AdjustmentType  == InventAdjustmentType::Closing).TransDate;

            inventClosingTtsVersion  = appl.ttsVersion();
        }

        return inventLastClosingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventLastClosingDateSecCur_RU</Name>
				<Source><![CDATA[
    //Cache for last inventory closing date in secondary currency
    public TransDate inventLastClosingDateSecCur_RU(boolean  reSelect = false)
    {
        if (inventClosingTtsVersionSecCur != appl.ttsVersion() || reSelect || (!inventClosingTtsVersionSecCur && !inventLastClosingDateSecCur))
        {
            inventLastClosingDateSecCur = (select maxof(TransDate) from inventClosing
                                                where inventClosing.Active                 == NoYes::Yes &&
                                                      inventClosing.InventTransCurrency_RU == InventTransCurrency_RU::SecondaryCur &&
                                                      inventClosing.AdjustmentType         == InventAdjustmentType::Closing).TransDate;
            inventClosingTtsVersionSecCur  = appl.ttsVersion();
        }
        return inventLastClosingDateSecCur;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>