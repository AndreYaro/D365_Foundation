<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BomCalcTransSearch</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BomCalcTransSearch extends SysSearchBase
{
    BOMCalcTable    bomCalcTable;
    boolean         groupLevel;
    boolean         groupCostGroupId;
    boolean         groupResource;      // Item/Workcenter
    boolean         groupUnitId;
    boolean         groupOprId;
    boolean         groupInventDimStr;
    boolean         groupType;
    boolean         groupOprNum;

    Query           query;
    QueryRun        qr;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bomCalcTrans</Name>
				<Source><![CDATA[
    BOMCalcTrans bomCalcTrans()
    {
        return qr.getNo(1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        super();

        qr = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(
        BOMCalcTable    _bomCalcTable,
        boolean         _costGroupId,
        boolean         _level,
        boolean         _groupResource,
        boolean         _groupUnitId,
        boolean         _groupOprId,
        boolean         _groupInventDimStr,
        boolean         _groupType,
        boolean         _groupOprNum
        )
    {
        bomCalcTable        = _bomCalcTable;
        groupCostGroupId    = _costGroupId;
        groupLevel          = _level;
        groupResource       = _groupResource;
        groupUnitId         = _groupUnitId;
        groupOprId          = _groupOprId;
        groupInventDimStr   = _groupInventDimStr;
        groupType           = _groupType;
        groupOprNum         = _groupOprNum;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    boolean next()
    {
        return qr.next();
    }

]]></Source>
			</Method>
			<Method>
				<Name>query</Name>
				<Source><![CDATA[
    Query query()
    {
        return qr.query();
    }

]]></Source>
			</Method>
			<Method>
				<Name>search</Name>
				<Source><![CDATA[
    void search()
    {
        QueryBuildDataSource    qbds;

        query = new Query();
        qbds = query.addDataSource(tablenum(BOMCalcTrans));

        // Sum
        qbds.addSelectionField(fieldnum(BOMCalcTrans,CostPrice),SelectionField::Sum);
        qbds.addSelectionField(fieldnum(BOMCalcTrans,CostMarkup),SelectionField::Sum);
        qbds.addSelectionField(fieldnum(BOMCalcTrans,CostPriceQty),SelectionField::Sum);
        qbds.addSelectionField(fieldnum(BOMCalcTrans,CostMarkupQty),SelectionField::Sum);
        qbds.addSelectionField(fieldnum(BOMCalcTrans,SalesPrice),SelectionField::Sum);
        qbds.addSelectionField(fieldnum(BOMCalcTrans,SalesMarkup),SelectionField::Sum);
        qbds.addSelectionField(fieldnum(BOMCalcTrans,SalesPriceQty),SelectionField::Sum);
        qbds.addSelectionField(fieldnum(BOMCalcTrans,SalesMarkupQty),SelectionField::Sum);

        // Group by
        qbds.orderMode(OrderMode::GroupBy);
        qbds.addSortField(fieldnum(BOMCalcTrans,Qty));
        if (groupCostGroupId)
            qbds.addSortField(fieldnum(BOMCalcTrans,CostGroupId));
        if (groupLevel)
            qbds.addSortField(fieldnum(BOMCalcTrans,Level));
        if (groupResource)
            qbds.addSortField(fieldnum(BOMCalcTrans,Resource));
        if (groupUnitId)
            qbds.addSortField(fieldnum(BOMCalcTrans,UnitId));
        if (groupOprId)
            qbds.addSortField(fieldnum(BOMCalcTrans,OprId));
        if (groupInventDimStr)
            qbds.addSortField(fieldnum(BOMCalcTrans,InventDimStr));
        if (groupType)
            qbds.addSortField(fieldnum(BOMCalcTrans,CalcType));
        if (groupOprNum)
            qbds.addSortField(fieldnum(BOMCalcTrans,OprNum));

        // Criteria
        qbds.addRange(fieldnum(BOMCalcTrans,PriceCalcId)).value(queryValue(bomCalcTable.PriceCalcId));
        qbds.addRange(fieldnum(BOMCalcTrans, CalcType)).value(SysQuery::valueNot(ItemCalcType::Production));
        qbds.addRange(fieldnum(BOMCalcTrans, CalcType)).value(SysQuery::valueNot(ItemCalcType::Purchase));
        qbds.addRange(fieldnum(BOMCalcTrans, bom)).value(queryValue(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSumForm</Name>
				<Source><![CDATA[
    static BOMCalcTransSearch newSumForm(
        BOMCalcTable    _bomCalcTable,
        boolean         _level,
        boolean         _costGroupId,
        boolean         _groupResource,
        boolean         _groupUnitId,
        boolean         _groupOprId,
        boolean         _groupInventDimStr,
        boolean         _groupType,
        boolean         _groupOprNum
    )
    {
        BOMCalcTransSearch  bomCalcTransSearch;
        bomCalcTransSearch = new BOMCalcTransSearch(
            _bomCalcTable,
            _level,
            _costGroupId,
            _groupResource,
            _groupUnitId,
            _groupOprId,
            _groupInventDimStr,
            _groupType,
            _groupOprNum);

        bomCalcTransSearch.init();
        return bomCalcTransSearch;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>