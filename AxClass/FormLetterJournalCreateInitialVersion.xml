<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormLetterJournalCreateInitialVersion</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>FormLetterJournalCreateInitialVersion</c> class is the journal creation versioning strategy
///    for the initial version.
/// </summary>
public class FormLetterJournalCreateInitialVersion extends FormLetterJournalCreateVersioning
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if journal can be created.
    /// </summary>
    /// <returns>
    ///    true if journal can be created; otherwise, false.
    /// </returns>
    public boolean check()
    {
        return formLetterVersionableJournalCreate.checkJournal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDiscardLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether a line should be discarded.
    /// </summary>
    /// <param name="_parmLine">
    ///    The line to be checked.
    /// </param>
    /// <returns>
    ///    true if the line should be discarded; otherwise, false.
    /// </returns>
    public boolean checkDiscardLine(FormletterParmLine _parmLine)
    {
        return _parmLine.Qty == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournalChain</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates journal chain.
    /// </summary>
    public void createJournalChain()
    {
        formLetterVersionableJournalCreate.createJournalChain();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournalHistory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether journal history must be created.
    /// </summary>
    /// <returns>
    /// true if journal history must be created; otherwise, false.
    /// </returns>
    public boolean createJournalHistory()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournalLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates or updates a journal line based on a parameter line.
    /// </summary>
    /// <param name="_parmLine">
    ///    The parameter line based on which to create or update the journal line.
    /// </param>
    public void createJournalLine(Common _parmLine)
    {
        Common journalLine = formLetterVersionableJournalCreate.initJournalLine(_parmLine);

        formLetterVersionableJournalCreate.updateJournalLine(journalLine, _parmLine);
        formLetterVersionableJournalCreate.insertJournalLine(journalLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournalLink</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a link between the journal and the order.
    /// </summary>
    /// <param name="_parmLine">
    ///    A parameter line indicating a journal line and an order line.
    /// </param>
    public void createJournalLink(Common _parmLine)
    {
        Common journalLink = formLetterVersionableJournalCreate.initJournalLink(_parmLine);
        formLetterVersionableJournalCreate.insertJournalLink(journalLink);
        super(_parmLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initJournalHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the journal header.
    /// </summary>
    public void initJournalHeader()
    {
        formLetterVersionableJournalCreate.initHeader();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static FormLetterJournalCreateInitialVersion construct()
    {
        return new FormLetterJournalCreateInitialVersion();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>