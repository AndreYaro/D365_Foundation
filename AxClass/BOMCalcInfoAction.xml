<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMCalcInfoAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
class BOMCalcInfoAction extends SysInfoAction_Formrun
{
    Common  recordBuffer;

    #define.currentVersion(1)
    #localmacro.currentList
        recordBuffer
    #endMacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList] + [super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecordBuffer</Name>
				<Source><![CDATA[
    Common parmRecordBuffer(Common _recordBuffer = recordBuffer)
    {
        recordBuffer = _recordBuffer;
        return recordBuffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        Args            args = new Args();
        FormRun         formRun;
        FormControl     formControl;
        FormDesign      formDesign;
        FormDataSource  formDataSource;

        args.name(formName);

        if (callerBuffer.RecId)
            args.record(callerBuffer);

        formRun     = classfactory.formRunClass(args);
        formRun.init();
        formRun.run();

        formDataSource = formRun.objectSet();

        if (formDataSource)
        {
            formRun.args().lookupRecord(recordBuffer);
            formDataSource.research(false);
        }

        if (controlName)
        {
            formDesign  = formRun.design();
            formControl = formDesign.controlName(controlName);
            if (formControl)
                formControl.setFocus();
        }

        formRun.wait();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass, Object object = null)
    {
        container       base;
        boolean         ret;
        Integer         version     = conpeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList, base] = packedClass;
                ret = super(base);
                break;

            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BOMCalcInfoAction construct()
    {
        return new BOMCalcInfoAction();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFormnameRecord</Name>
				<Source><![CDATA[
    public static BOMCalcInfoAction newFormnameRecord(FormName _formName, Common _recordBuffer)
    {
        BOMCalcInfoAction BOMCalcInfoAction;
        BOMCalcInfoAction = BOMCalcInfoAction::construct();
        BOMCalcInfoAction.parmFormname(_formName);
        BOMCalcInfoAction.parmRecordBuffer(_recordBuffer);

        return BOMCalcInfoAction;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>