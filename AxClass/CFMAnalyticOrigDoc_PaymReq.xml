<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMAnalyticOrigDoc_PaymReq</Name>
	<SourceCode>
		<Declaration><![CDATA[
[CFMJournalSourceAttribute(CFMJournalTransSourceType::PaymentRequest)]
public class CFMAnalyticOrigDoc_PaymReq extends CFMAnalyticOrigDoc
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addFilterToQuery</Name>
				<Source><![CDATA[
    public void addFilterToQuery(Query _query, QueryBuildDataSource _qbds)
    {
        if (!_query || !_qbds || _qbds.table() != tableNum(CFMPaymentRequestTable))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        QueryBuildDataSource qbdsTransLog = _qbds.addDataSource(tableNum(CFMJournalTransLog));
        qbdsTransLog.relations(true);
        qbdsTransLog.joinMode(JoinMode::ExistsJoin);
        qbdsTransLog.addRange(fieldNum(CFMJournalTransLog, Outdated)).value(queryValue(NoYes::No));

        QueryBuildDataSource qbdsJournalTrans = qbdsTransLog.addDataSource(tableNum(CFMJournalTrans));
        qbdsJournalTrans.relations(true);
        qbdsJournalTrans.joinMode(JoinMode::ExistsJoin);

        qbdsJournalTrans.addRange(fieldNum(CFMJournalTrans, TransDate)).value(queryValue(transDate));
        qbdsJournalTrans.addRange(fieldNum(CFMJournalTrans, JournalId)).value(queryValue(journalId));

        for (int i = 1; i<= analyticalTable.Level; i++)
        {
            if (!fieldSourceTargetMap.exists(i))
            {
                throw error(strFmt("@SYS19378", funcName()));
            }

            FieldId sourceFieldId, targetFieldId, targetFieldStrId, targetDisplayFieldId;
            Name attributeName;

            [sourceFieldId, attributeName, targetFieldId, targetFieldStrId, targetDisplayFieldId] = fieldSourceTargetMap.lookup(i);

            if (!attributeName)
            {
                qbdsJournalTrans.addRange(sourceFieldId).value(queryValue(analyticalTable.(targetFieldId)));
            }
            else
            {
                this.addDimAttributeRange(_query,
                    qbdsJournalTrans.name(),
                    fieldStr(CFMJournalTrans, LedgerDimension),
                    targetFieldStrId,
                    attributeName);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeFormQuery</Name>
				<Source><![CDATA[
    protected boolean changeFormQuery()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemName</Name>
				<Source><![CDATA[
    public MenuItemName menuItemName()
    {
        return menuitemDisplayStr(CFMPaymentRequest);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>