<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReleaseToWarehouseRetrieveRTWId</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSReleaseToWarehouseRetrieveRTWId</c> is responsible for retrieving the correct ID when releasing an order to the warehouse.
/// </summary>
public class WHSReleaseToWarehouseRetrieveRTWId
{
    Map                                     consolidationRTWIds;
    List                                    validReleaseToWarehouseIds;
    WHSReleaseToWarehouseId                 orderReleaseToWarehouseId;
    WHSShipConsolidationCriteriaProvider    consolidationCriteriaProvider;
    private boolean                         useConsolidationPolicies;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmUseConsolidationPolicies</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean parmUseConsolidationPolicies(boolean _useConsolidationPolicies = useConsolidationPolicies)
    {
        useConsolidationPolicies = _useConsolidationPolicies;
        return useConsolidationPolicies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearOrderReleaseToWarehouseId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clear the order release to warehouse Id variable.
    /// </summary>
    public void clearOrderReleaseToWarehouseId()
    {
        orderReleaseToWarehouseId = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getConsolidationRTWId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the release to warehouse Ids for consolidation lines based on consolidation criteria.
    /// </summary>
    /// <returns>
    /// The release to warehouse Id value based on consolidation criteria.
    /// </returns>
    private WHSReleaseToWarehouseId getConsolidationRTWId()
    {
        WHSReleaseToWarehouseId  releaseToWarehouseId;

        // Build up consolidation criteria string.
        container consolidateCriteria = consolidationCriteriaProvider.consolidationCriteria();

        // Find or create a release to warehouse Id based on consolidation criteria.
        if (consolidationRTWIds.exists(consolidateCriteria))
        {
            releaseToWarehouseId = consolidationRTWIds.lookup(consolidateCriteria);
        }
        else
        {
            releaseToWarehouseId = WHSTmpReleaseToWarehouse::getNextReleaseToWarehouseId();
            consolidationRTWIds.insert(consolidateCriteria, releaseToWarehouseId);
            validReleaseToWarehouseIds.addEnd(releaseToWarehouseId);
        }

        return releaseToWarehouseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReleaseToWarehouseId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the correct release to warehouse Id.
    /// </summary>
    /// <param name="_sourceRecord">
    /// The record to find a release to warehouse Id for.
    /// </param>
    /// <returns>
    /// The release to warehouse Id to be used by the source order.
    /// </returns>
    public WHSReleaseToWarehouseId getReleaseToWarehouseId(Common _sourceRecord)
    {
        WHSReleaseToWarehouseId releaseToWarehouseId;

        consolidationCriteriaProvider = WHSShipConsolidationCriteriaProvider::construct(_sourceRecord);
        consolidationCriteriaProvider.parmUseConsolidationPolicies(useConsolidationPolicies);

        // Create release to warehouse record with consolidation release to warehouse Id if warehouse allows it.
        if (consolidationCriteriaProvider.allowConsolidation())
        {
            releaseToWarehouseId = this.getConsolidationRTWId();
        }
        else
        {
            if (!orderReleaseToWarehouseId)
            {
                orderReleaseToWarehouseId = WHSTmpReleaseToWarehouse::getNextReleaseToWarehouseId();
                validReleaseToWarehouseIds.addEnd(orderReleaseToWarehouseId);
            }

            releaseToWarehouseId = orderReleasetoWarehouseId;
        }

        return releaseToWarehouseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidReleaseToWarehouseIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the release to warehouse Ids that have been created.
    /// </summary>
    /// <returns>
    /// A list of release to warehouse Ids.
    /// </returns>
    public List getValidReleaseToWarehouseIds()
    {
        return validReleaseToWarehouseIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRTWIdCollections</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the variables that store release to warehouse numbers.
    /// </summary>
    private void initRTWIdCollections()
    {
        consolidationRTWIds = new Map(Types::Container, Types::String);
        validReleaseToWarehouseIds = new List(Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>WHSReleaseToWarehouseRetrieveRTWId</c> object.
    /// </summary>
    /// <returns>
    /// The created <c>WHSReleaseToWarehouseRetrieveRTWId</c> object.
    /// </returns>
    public static WHSReleaseToWarehouseRetrieveRTWId construct()
    {
        WHSReleaseToWarehouseRetrieveRTWId retrieveRTWId = new WHSReleaseToWarehouseRetrieveRTWId();

        retrieveRTWId.initRTWIdCollections();

        return retrieveRTWId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>