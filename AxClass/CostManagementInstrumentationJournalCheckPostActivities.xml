<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostManagementInstrumentationJournalCheckPostActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostManagementInstrumentationJournalCheckPostActivities</c> class provides activities for journal check and posting for cost management instrumentation logging.
/// </summary>
internal final class CostManagementInstrumentationJournalCheckPostActivities
{
    private const str ActivityNamePrefix = 'JournalCheckPost.';

    private CostManagementInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(CostManagementInstrumentationLogger _instrumentationLogger)
    {
        instrumentationLogger = _instrumentationLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static CostManagementInstrumentationJournalCheckPostActivities newFromLogger(CostManagementInstrumentationLogger _instrumentationLogger)
    {
        return new CostManagementInstrumentationJournalCheckPostActivities(_instrumentationLogger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext run()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + methodStr(JournalCheckPost, run)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runInit</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runInit()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + methodStr(JournalCheckPost, runInit)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runLoad</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runLoad()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + methodStr(JournalCheckPost, runLoad)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runCheck</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runCheck()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + methodStr(JournalCheckPost, runCheck)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPost</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runPost()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + methodStr(JournalCheckPost, runPost)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPostInit</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runPostInit()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + methodStr(JournalCheckPost, runPostInit)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPostEnd</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runPostEnd()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + methodStr(JournalCheckPost, runPostEnd)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runEnd</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runEnd()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + methodStr(JournalCheckPost, runEnd)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalRecId</Name>
				<Source><![CDATA[
    internal static void journalRecId(
        SysInstrumentationActivityContext   _activityContext,
        RecId					            _recId)
    {
        _activityContext.addCustomProperty('journalRecId', any2Str(_recId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>batchJobId</Name>
				<Source><![CDATA[
    internal static void batchJobId(
        SysInstrumentationActivityContext   _activityContext,
        int64								_batchJobId)
    {
        _activityContext.addCustomProperty('batchJobId', any2Str(_batchJobId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>