<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceJournal_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustInvoiceJournal_ApplicationSuite_Extension</c> class is an extension class which extends the <c>CustInvoiceJournal</c> form initialization functionality.
/// </summary>
[ExtensionOf(formStr(CustInvoiceJournal))]
public final class CustInvoiceJournal_ApplicationSuite_Extension
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        next init();

        this.visibleSendButtons();
        this.visibleInvoiceType_IT();

        CustInvoiceJour_TaxID.visible(FeatureStateProvider::isFeatureEnabled(CompanyTaxRegistrationFeature::instance()));
        CustInvoiceJour_TaxRegistrationNumber.visible(FeatureStateProvider::isFeatureEnabled(CompanyTaxRegistrationFeature::instance()));

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoEG, #isoPL]))
        {
            FormButtonControl invocieUUIDButton = this.design().controlName(formControlStr(CustInvoiceJournal, EnterInvoiceUUIDButton)) as FormButtonControl;
            invocieUUIDButton.registerOverrideMethod(methodStr(FormButtonControl, clicked), methodStr(CustInvoiceJournal_ApplicationSuite_Extension, EnterInvoiceUUIDButton_OnClicked), this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>EnterInvoiceUUIDButton_OnClicked</Name>
				<Source><![CDATA[
    private void EnterInvoiceUUIDButton_OnClicked(FormButtonControl _sender)
    {
        if (custInvoiceJour)
        {
            Dialog dialog = new Dialog("@BusinessDocumentSubmissionService:EnterSubmissionUUIDDialogCaption");
            DialogField field = dialog.addField(extendedTypeStr(UUID), "@BusinessDocumentSubmissionService:SubmissionUUID");
            field.value(custInvoiceJour_W.SubmissionUUID_EG);
            dialog.run();
            if (dialog.closedOk())
            {
                if (!custInvoiceJour_W.custInvoiceJour)
                {
                    custInvoiceJour_W.custInvoiceJour = custInvoiceJour.RecId;
                }
                custInvoiceJour_W.SubmissionUUID_EG = field.value();
                CustInvoiceJour_W_ds.write();
                CustInvoiceJour_W_ds.refresh();
            }
        }
        else
        {
            error(Error::missingFormActiveBuffer(formStr(CustInvoiceJournal)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>visibleSendButtons</Name>
				<Source><![CDATA[
    private void visibleSendButtons()
    {
        if (BusinessDocumentParameters::isAnyFeatureForCountryEnabled())
        {
            FormMenuButtonControl sendMenuButton = this.design().controlName(formControlStr(CustInvoiceJournal, Send)) as FormMenuButtonControl;

            if (sendMenuButton)
            {
                sendMenuButton.visible(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>visibleInvoiceType_IT</Name>
				<Source><![CDATA[
    private void visibleInvoiceType_IT()
    {
        FormComboBoxControl invoiceType_ITControl = this.design().controlName(formControlStr(CustInvoiceJournal, CustInvoiceJour_InvoiceType_IT)) as FormComboBoxControl;

        if (invoiceType_ITControl)
        {
            invoiceType_ITControl.visible(EXILFeatures_IT::isFeatureEnabled(EXILFeature::Exil2131));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>