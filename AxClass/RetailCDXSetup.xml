<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCDXSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Retail CDX setup.
/// </summary>
public class RetailCDXSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cleanUpJobSeedData</Name>
				<Source><![CDATA[
    private static void cleanUpJobSeedData()
    {
        RetailConnSchedulerJobLine t5;
        RetailConnSchedulerJobTable t6;
        RetailconnSchedulerSubjobFieldList t7;
        RetailConnSchedulerSubjobTable t9;
        RetailConnSchedule t12;
        RetailConnScheduleJobMapping t13;
        RetailConnLocationDesignTable t15;
        RetailConnLocationDesignTableField t16;

        delete_from t5;
        delete_from t6;
        delete_from t7;
        delete_from t9;
        delete_from t12;
        delete_from t13;
        delete_from t15;
        delete_from t16;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        LanguageId languageId;
        RetailConnProfileName aosProfileName;
        RefRecId aosProfileRecId;
        RetailConnSchedule schedule;
        RetailConnScheduleJobMapping scheduleJob;
        RetailConnSchedulerJobTable job;
        RetailConnChannelSchema channelSchema;
        RetailCDXScheduleDataGroup scheduleDataGroup;
        RetailCDXDataGroup dataGroup;

        RetailCDXSetup::cleanUpJobSeedData();

        select firstOnly RecId from channelSchema
        where channelSchema.SchemaType == RetailConnChannelSchemaTypeEnum::AX63;

        languageId = CompanyInfo::languageId();
        aosProfileName = SysLabel::labelId2String(literalStr("@RET5613"), languageId);
        aosProfileRecId = RetailConnAOSProfile::find(aosProfileName).RecId;
        select firstOnly RecId from dataGroup;

        // AX 7 seed data
        RetailCDXSeedDataAX7::main();

        ttsBegin;

        // link DataGroup and AOS profile to each Schedule
        while select forUpdate schedule
            exists join scheduleJob
                where schedule.RecId == scheduleJob.ScheduleRecId
            exists join job
                where scheduleJob.SchedulerJobId == job.jobId
                   && job.RetailConnChannelSchema == channelSchema.RecId
        {
            select firstOnly Recid from scheduleDataGroup
                where scheduleDataGroup.Schedule == schedule.RecId
                   && scheduleDataGroup.DataGroup == dataGroup.RecId;

            if (!scheduleDataGroup)
            {
                scheduleDataGroup.initValue();
                scheduleDataGroup.Schedule = schedule.RecId;
                scheduleDataGroup.DataGroup = dataGroup.RecId;
                scheduleDataGroup.insert();
            }

            schedule.RetailConnAOSProfile = aosProfileRecId;
            schedule.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>