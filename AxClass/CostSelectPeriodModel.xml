<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostSelectPeriodModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostSelectPeriodModel</c> class models the input of a period using ledger period codes.
/// </summary>
public class CostSelectPeriodModel
{
    CostSelectPeriodState periodState;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the state of the model.
    /// </summary>
    /// <param name = "_costSelectPeriodState">
    /// The <c>CostSelectPeriodState</c> class instance.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setState(CostSelectPeriodState _costSelectPeriodState)
    {
        periodState = _costSelectPeriodState;
        this.notifyDateCodeChange(_costSelectPeriodState.parmDateCode());
        this.notifyFromDateChange(_costSelectPeriodState.parmFromDate());
        this.notifyToDateChange(_costSelectPeriodState.parmToDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the state of the model.
    /// </summary>
    /// <returns>
    /// The <c>CostSelectPeriodState</c> class instance.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CostSelectPeriodState getState()
    {
        return periodState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public DateCode parmDateCode(DateCode _dateCode = periodState.parmDateCode())
    {
        if (!prmisDefault(_dateCode))
        {
            periodState.parmDateCode(_dateCode);

            this.notifyDateCodeChange(this.parmDateCode());
            this.notifyFromDateChange(this.parmFromDate());
            this.notifyToDateChange(this.parmToDate());
        }

        return periodState.parmDateCode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FromDate parmFromDate(FromDate _fromDate = periodState.parmFromDate())
    {
        if (!prmisDefault(_fromDate))
        {
            periodState.parmFromDate(_fromDate);

            this.notifyDateCodeChange(this.parmDateCode());
            this.notifyFromDateChange(this.parmFromDate());
        }

        return periodState.parmFromDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ToDate parmToDate(ToDate _toDate = periodState.parmToDate())
    {
        if (!prmisDefault(_toDate))
        {
            periodState.parmToDate(_toDate);

            this.notifyDateCodeChange(this.parmDateCode());
            this.notifyToDateChange(this.parmToDate());
        }

        return periodState.parmToDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the period is valid.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void validate()
    {
        if (!this.parmToDate())
        {
            this.parmToDate(dateMax());
        }

        if (this.parmFromDate() > this.parmToDate())
        {
            throw error("@SYS91020");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>notifyDateCodeChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Notifies that the <c>DateCode</c> in the model is changed.
    /// </summary>
    /// <param name = "_dateCode">
    /// The new value of the <c>DateCode</c>.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    delegate void notifyDateCodeChange(DateCode _dateCode)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>notifyFromDateChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Notifies that the <c>FromDate</c> in the model is changed.
    /// </summary>
    /// <param name = "_fromDate">
    /// The new value of the <c>FromDate</c>.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    delegate void notifyFromDateChange(FromDate _fromDate)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>notifyToDateChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Notifies that the <c>ToDate</c> in the model is changed.
    /// </summary>
    /// <param name = "_toDate">
    /// The new value of the <c>ToDate</c>.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    delegate void notifyToDateChange(ToDate _toDate)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static CostSelectPeriodModel construct()
    {
        return new CostSelectPeriodModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
        periodState = CostSelectPeriodState::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>