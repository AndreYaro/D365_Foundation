<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCatalogRequestCaseActivitiesProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Plug in for case activities
/// </summary>
[ExportMetadataAttribute('CaseIActivities', tableStr(MCRCatalogRequest)), ExportAttribute('Dynamics.AX.Application.CaseIActivities')]
class MCRCatalogRequestCaseActivitiesProvider implements CaseIActivities
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCommon</Name>
				<Source><![CDATA[
    public smmActivityParentType initFromCommon(smmActivities _activities, Common _table)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        {
            MCRCatalogRequest mcrCatalogRequest = _table;
            this.mcrInitFromCatalogRequest(_activities, mcrCatalogRequest);

            // This will cause the Activity to show up on the Business Relation Details form
            return smmActivityParentType::BusRel;
        }

        return smmActivityParentType::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parentRecId</Name>
				<Source><![CDATA[
    public RefRecId parentRecId(Common _table)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        {
            MCRCatalogRequest mcrCatalogRequest = _table;
            return smmBusRelTable::find(mcrCatalogRequest.SmmBusRelAccount).RecId;
        }

        return _table.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCommonUsingTemplate</Name>
				<Source><![CDATA[
    public smmActivityParentType initFromCommonUsingTemplate(smmActivities _activities, Common _table, smmActivities _templateActivity)
    {
        return smmActivityParentType::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateExternalMemo</Name>
				<Source><![CDATA[
    public smmOutlookMemo updateExternalMemo(RefRecId _parentLink)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldActivityBeCreated</Name>
				<Source><![CDATA[
    public CaseYesNoPrompt shouldActivityBeCreated(Common _table, boolean _isBatch)
    {
        if (_isBatch)
        {
            return (smmParametersTable::find().RunBaseBatchCreateActivity == smmRunBaseBatchCreateActivity::Yes) ? (CaseYesNoPrompt::Yes) : (CaseYesNoPrompt::No);
        }
        else
        {
            return this.shouldActivityBeCreatedMcrCatalogRequest(_table);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrInitFromCatalogRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the <c>MCRCatalogRequest</c> table record.
    /// </summary>
    /// <param name="_mcrCatalogRequest">
    /// A record in the <c>MCRCatalogRequest</c> table.
    /// </param>
    private void mcrInitFromCatalogRequest(smmActivities _activities, MCRCatalogRequest _mcrCatalogRequest)
    {
        smmParametersTable smmParametersTable = smmParametersTable::find();
        _activities.initValue();

        // Get default values from CRM parameters
        if (_mcrCatalogRequest.mcrStatus == MCRCatalogStatus::Open)
        {
            // Catalog request
            _activities.Category = smmParametersTable.mcrCatalogReqActivityCategory;
            _activities.PhaseId  = smmParametersTable.mcrCatalogReqActivityPhase;
            _activities.TypeId   = smmParametersTable.mcrCatalogReqActivityType;
            _activities.Purpose  = smmParametersTable.mcrCatalogReqActivityPurpose;
            _activities.UserMemo = strFmt("@MCR25486", _mcrCatalogRequest.mcrCatalogDescription);
        }
        else
        {
            // Catalog sent
            _activities.Category = smmParametersTable.mcrCatalogSentActivityCategory;
            _activities.PhaseId  = smmParametersTable.mcrCatalogSentActivityPhase;
            _activities.TypeId   = smmParametersTable.mcrCatalogSentActivityType;
            _activities.Purpose  = smmParametersTable.mcrCatalogSentActivityPurpose;
            _activities.UserMemo = strFmt("@MCR25487", _mcrCatalogRequest.mcrCatalogDescription);
        }

        if (_activities.ReminderMinutes > 0)
        {
            _activities.ReminderActive = NoYes::Yes;
        }
        else
        {
            _activities.ReminderActive = NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldActivityBeCreatedMcrCatalogRequest</Name>
				<Source><![CDATA[
    private CaseYesNoPrompt shouldActivityBeCreatedMcrCatalogRequest(MCRCatalogRequest _mcrCatalogRequest)
    {
        CaseYesNoPrompt localRetVal = CaseYesNoPrompt::No;

        if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        {
            switch (_mcrCatalogRequest.mcrStatus)
            {
                case MCRCatalogStatus::Open: // Catalog was requested
                    localRetVal = smmActivities::shouldActivityBeCreatedGeneric(smmParametersTable::find().MCRCatalogReqActivityCreate);
                    break;
                case MCRCatalogStatus::Closed: // Catalog was sent
                    localRetVal = smmActivities::shouldActivityBeCreatedGeneric(smmParametersTable::find().mcrCatalogSentActivityCreate);
                    break;
            }
        }

        return localRetVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParentReferenceFieldNum</Name>
				<Source><![CDATA[
    public FieldId getParentReferenceFieldNum(TableId _tableId, smmActivityParentRefTableId _parentTableId)
    {
        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>