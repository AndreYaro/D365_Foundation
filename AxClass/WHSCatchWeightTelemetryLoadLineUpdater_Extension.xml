<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCatchWeightTelemetryLoadLineUpdater_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Performs specific warehouse management catch weight telemetry logging.
/// </summary>
[ExtensionOf(classStr(WHSLoadLineUpdater))]
public final class WHSCatchWeightTelemetryLoadLineUpdater_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createLoadLine</Name>
				<Source><![CDATA[
    protected void createLoadLine(
        WHSLoadLine _newLoadLine,
        WHSLoadLine _currentLoadLine,
        InventDimId _inventDimId,
        Qty         _inventQty,
        WHSUOM      _inventUnitId,
        WHSLoadId   _loadId)
    {
        WHSCatchWeightTelemetryLogger::logExpectedHandlingUnit(funcName(), _newLoadLine.ItemId, _inventUnitId);

        next createLoadLine(_newLoadLine, _currentLoadLine, _inventDimId, _inventQty, _inventUnitId, _loadId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeLoadLine</Name>
				<Source><![CDATA[
    protected WHSLoadLine initializeLoadLine(
        WHSLoadLine   _newLoadLine,
        WHSLoadLine   _currentLoadLine,
        InventDimId   _inventDimId,
        Qty           _inventQty,
        WHSUOM        _inventUnitId)
    {
        WHSCatchWeightTelemetryLogger::logExpectedCatchWeightUnit(funcName(), _newLoadLine.ItemId, _inventUnitId);

        return next initializeLoadLine(_newLoadLine, _currentLoadLine, _inventDimId, _inventQty, _inventUnitId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>