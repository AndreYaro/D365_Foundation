<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostObjectWithLowestKPIFilterLastValueContainer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>CostObjectWithLowestKPIFilterLastValueContainer</c> is responsible for saving the inventory KPI filter
/// values in the <c>SysLastValue</c> storage.
/// </summary>
public class CostObjectWithLowestKPIFilterLastValueContainer implements SysSaveable
{
    const CostObjectBalanceEnding   DefaultMinimumBalanceAmount = 10000;
    const int                       CurrentVersion              = 1;

    CostObjectBalanceEnding         minimumBalanceAmount;
    str                             elementName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmMinimumBalanceAmount</Name>
				<Source><![CDATA[
    public CostObjectBalanceEnding parmMinimumBalanceAmount(CostObjectBalanceEnding _minimumBalanceAmount = minimumBalanceAmount)
    {
        minimumBalanceAmount = _minimumBalanceAmount;
        return minimumBalanceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmElementName</Name>
				<Source><![CDATA[
    public str parmElementName(str _elementName = elementName)
    {
        elementName = _elementName;
        return elementName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [currentVersion, minimumBalanceAmount];
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the filter values with default value.
    /// </summary>
    public void initParmDefault()
    {
        minimumBalanceAmount = DefaultMinimumBalanceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer     version    = conPeek(_packedClass, 1);

        if (version == CurrentVersion)
        {
            minimumBalanceAmount = conPeek(_packedClass, 2);

            return true;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the data area ID.
    /// </summary>
    /// <returns>The last value for the data area ID.</returns>
    public DataAreaId lastValueDataAreaId()
    {
        return curExt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the user ID.
    /// </summary>
    /// <returns>The last value for the user ID.</returns>
    public UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the element type.
    /// </summary>
    /// <returns>The last value for the element type.</returns>
    public UtilElementType lastValueType()
    {
        return UtilElementType::Class;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the element name.
    /// </summary>
    /// <returns>The last value for the element name.</returns>
    public str lastValueElementName()
    {
        return elementName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the class name.
    /// </summary>
    /// <returns>The last value for the class name.</returns>
    public str lastValueDesignName()
    {
        return classStr(CostObjectWithLowestKPIFilterLastValueContainer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveInLastValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the balance filter values owned by the given form in the <c>SysLastValue</c> table.
    /// </summary>
    /// <param name="_minimumBalanceAmount">
    /// The minimum balance amount.
    /// </param>
    /// <param name="_menuItemElementName">
    /// The name of the menu item pointing to the owning form.
    /// </param>
    public static void saveInLastValue(
        CostObjectBalanceEnding _minimumBalanceAmount,
        MenuItemName            _menuItemElementName)
    {
        var costObjectWithLowestKPIFilterLastValueContainer = new CostObjectWithLowestKPIFilterLastValueContainer();
        costObjectWithLowestKPIFilterLastValueContainer.parmMinimumBalanceAmount(_minimumBalanceAmount);
        costObjectWithLowestKPIFilterLastValueContainer.parmElementName(_menuItemElementName);

        xSysLastValue::saveLast(costObjectWithLowestKPIFilterLastValueContainer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>readFromLastValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the balance filter value saved in the <c>SysLastValue</c>
    /// </summary>
    /// <param name="_menuItemElementName">
    /// The name of the menu item pointing to the owning form.
    /// </param>
    /// <returns>
    /// The minimum balance filter value.
    /// </returns>
    public static CostObjectBalanceEnding readFromLastValue(MenuItemName _menuItemElementName)
    {
        var costObjectWithLowestKPIFilterLastValueContainer = new CostObjectWithLowestKPIFilterLastValueContainer();
        costObjectWithLowestKPIFilterLastValueContainer.parmElementName(_menuItemElementName);
        xSysLastValue::getLast(costObjectWithLowestKPIFilterLastValueContainer);

        return costObjectWithLowestKPIFilterLastValueContainer.parmMinimumBalanceAmount();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>