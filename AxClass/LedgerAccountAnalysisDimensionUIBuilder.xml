<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAccountAnalysisDimensionUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerAccountAnalysisDimensionUIBuilder</c> is the base UI builder class for the
/// <c>LedgerAccountAnalysisByDimension</c> report.
/// </summary>
class LedgerAccountAnalysisDimensionUIBuilder extends LedgerAccountReportUIBuilder
{
    DialogField dialogFieldAccountName;

    Name        dimensionAttribute;

    #define.Columns(2)
    #define.DialogFieldLength(30)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the column number of dialog fields.
    /// </summary>
    public void build()
    {
        FormBuildGroupControl   formBuildGroupControl;

        super();

        formBuildGroupControl = this.dialog().curFormGroup();
        formBUildGroupControl.columns(#Columns);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttributeLookup</Name>
				<Source><![CDATA[

    /// <summary>
    /// Performs a dimension attribute lookup.
    /// </summary>
    /// <param name="_dimensionAttributeDialogControl">
    /// The dimension attribute control.
    /// </param>
    public void dimensionAttributeLookup(FormStringControl _dimensionAttributeDialogControl)
    {
        super(_dimensionAttributeDialogControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttributeModify</Name>
				<Source><![CDATA[

    /// <summary>
    /// Performs a dimension attribute modified
    /// </summary>
    /// <param name="_dimensionAttributeDialogControl">
    /// The dimension attribute control.
    /// </param>
    /// <returns>
    /// The result of dimension attribute modification.
    /// </returns>
    public boolean dimensionAttributeModify(FormStringControl _dimensionAttributeDialogControl)
    {
        if (dimensionAttribute != dialogFieldAttribute.value())
        {
            //If modified "Dimension Attribute" is different with previous,
            //set the "From Dimension" and "To Dimension" as null
            dialogFieldFromDimension.value('');
            dialogFieldToDimension.value('');
            dimensionAttribute = dialogFieldAttribute.value();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttributeValidate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Validates a dimension attribute.
    /// </summary>
    /// <param name="_dimensionAttribute">
    /// The dimension attribute control.
    /// </param>
    /// <returns>
    /// The result of the dimension attribute validation.
    /// </returns>
    public boolean dimensionAttributeValidate(FormStringControl _dimensionAttribute)
    {
        boolean ret;

        ret = super(_dimensionAttribute);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionValueLookup</Name>
				<Source><![CDATA[

    /// <summary>
    /// Provides the lookup interaction for the individual dimension attribute lookup controls.
    /// </summary>
    /// <param name="_dimensionValueControl">
    /// The dimension value control.
    /// </param>
    public void dimensionValueLookup(FormStringControl _dimensionValueControl)
    {
        super(_dimensionValueControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionValueValidate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Provides the validate interaction for the individual dimension value controls.
    /// </summary>
    /// <param name="_dimensionValue">
    /// The dimension value control.
    /// </param>
    /// <returns>
    /// The result of validation.
    /// </returns>
    public boolean dimensionValueValidate(FormStringControl _dimensionValue)
    {
        boolean ret;

        ret = super(_dimensionValue);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mainAccountModify</Name>
				<Source><![CDATA[

    /// <summary>
    /// Performs an account modification
    /// </summary>
    /// <param name="_mainAccountDialogControl">
    /// The account control.
    /// </param>
    /// <returns>
    /// The result of the account modification.
    /// </returns>
    public boolean mainAccountModify(FormStringControl _mainAccountDialogControl)
    {
        //Change the "Account Name" value base on the "Account" value
        this.dataContractObject().parmAccountName(MainAccount::findByMainAccountId(dialogFieldAccount.value()).localizedName());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyOverrideMethod</Name>
				<Source><![CDATA[

    /// <summary>
    /// Modifies lookup field attributes to allow them to pass the validation and overrides dialog field
    /// lookup.
    /// </summary>
    protected void modifyOverrideMethod()
    {
        this.overrideDialogFieldLookup(dialogFieldAttribute, methodStr(LedgerAccountAnalysisDimensionUIBuilder, dimensionAttributeLookup));
        this.overrideDialogFieldLookup(dialogFieldFromDimension, methodStr(LedgerAccountAnalysisDimensionUIBuilder, dimensionValuelookup));
        this.overrideDialogFieldLookup(dialogFieldToDimension, methodStr(LedgerAccountAnalysisDimensionUIBuilder, dimensionValuelookup));
        this.overrideDialogFieldMethod(
            dialogFieldAccount,
            methodStr(FormStringControl, Modified),
            methodStr(LedgerAccountAnalysisDimensionUIBuilder, mainAccountModify));
        this.overrideDialogFieldMethod(
            dialogFieldAttribute,
            methodStr(FormStringControl, Modified),
            methodStr(LedgerAccountAnalysisDimensionUIBuilder, dimensionAttributeModify));
        this.overrideDialogFieldMethod(
            dialogFieldAttribute,
            methodStr(FormStringControl, Validate),
            methodStr(LedgerAccountAnalysisDimensionUIBuilder, dimensionAttributeValidate));
        this.overrideDialogFieldMethod(
            dialogFieldFromDimension,
            methodStr(FormStringControl, Validate),
            methodStr(LedgerAccountAnalysisDimensionUIBuilder, dimensionValueValidate));
        this.overrideDialogFieldMethod(
            dialogFieldToDimension,
            methodStr(FormStringControl, Validate),
            methodStr(LedgerAccountAnalysisDimensionUIBuilder, dimensionValueValidate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[

    /// <summary>
    /// Override this method in order to initialize the dialog fields after the fields have been built.
    /// </summary>
    public void postBuild()
    {
        dialogFieldAttribute        = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerAccountAnalysisByDimensionContract, parmDimensionAttribute));
        dialogFieldFromDimension    = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerAccountAnalysisByDimensionContract, parmFromDimensionValue));
        dialogFieldToDimension      = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerAccountAnalysisByDimensionContract, parmToDimensionValue));
        dialogFieldAccount          = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerAccountAnalysisByDimensionContract, parmAccount));

        super();

        dialogFieldAccount.displayLength(#DialogFieldLength);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>