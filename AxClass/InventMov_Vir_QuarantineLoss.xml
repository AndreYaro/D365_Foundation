<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_Vir_QuarantineLoss</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventMov_Vir_QuarantineLoss extends InventMov_Virtuel
{
    boolean    countryRegion_RU;
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountBalanceSheet</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount accountBalanceSheet()
    {
        if (! cacheAccountBalanceSheet)
        {
            if (InventPostingExtendParm_CN::checkExtendParmEnabled())
            {
                if (this.transQty() >= 0)
                {
                    cacheAccountBalanceSheet = InventPosting::itemExtendParm_CN(
                        InventAccountType::InventReceipt,
                        InventPostingExtendParm_CN::constructInventDim(this.inventdim()),
                        this.itemId(),
                        this.inventTable().ItemGroupId());
                }
                else
                {
                    cacheAccountBalanceSheet = InventPosting::itemExtendParm_CN(
                        InventAccountType::InventIssue,
                        InventPostingExtendParm_CN::constructInventDim(this.inventdim()),
                        this.itemId(),
                        this.inventTable().ItemGroupId());
                }
            }
            else
            {
                if (this.transQty() >= 0)
                {
                    cacheAccountBalanceSheet = InventPosting::itemLedgerDimensionFromParameter(this.createInventPostingItemLedgerDimensionParameters(InventAccountType::InventReceipt));
                }
                else
                {
                    cacheAccountBalanceSheet = InventPosting::itemLedgerDimensionFromParameter(this.createInventPostingItemLedgerDimensionParameters(InventAccountType::InventIssue));
                }
            }
        }

        return cacheAccountBalanceSheet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountOperations</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount accountOperations()
    {
        if (! cacheAccountOperations)
        {
            if (this.projId())
            {
                cacheAccountOperations = ProjPosting::getInventLedgerDimension(ProjAccountType::CostAccount,
                                                                      this.projId(),
                                                                      this.projCategoryId());
            }
            else
            {
                if (this.transQty() >= 0)
                {
                    cacheAccountOperations = InventPosting::itemLedgerDimensionFromParameter(this.createInventPostingItemLedgerDimensionParameters(InventAccountType::InventProfit));
                }
                else
                {
                    cacheAccountOperations = InventPosting::itemLedgerDimensionFromParameter(this.createInventPostingItemLedgerDimensionParameters(InventAccountType::InventLoss));
                }
            }
        }

        return cacheAccountOperations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeOnAllInventLocations</Name>
				<Source><![CDATA[
    public boolean  canBeOnAllInventLocations()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimAllowBlankIssue</Name>
				<Source><![CDATA[
    protected boolean dimAllowBlankIssue(InventDimGroupFieldSetup _inventDimGroupFieldSetup)
    {
        return _inventDimGroupFieldSetup.isAllowBlankIssueEnabled() || _inventDimGroupFieldSetup.isAllowBlankReceiptEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(Common _common)
    {
        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>
        super(_common);

        transType = InventTransType::QuarantineOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_Orig</Name>
				<Source><![CDATA[
    public InventMovement newMovement_Orig()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
    public static InventMovement newParameters(
        InventTransId           _inventTransId,
        ItemId                  _itemId,
        InventDimId             _inventDimId,
        DimensionDefault        _dimension,
        TransDate               _transDate,
        InventQty               _qty,
        InventTransRefId        _transRefId = ''
        , PdsCWInventQty          _cwQty = 0
        )
    {
        InventMov_Vir_QuarantineLoss movement_Virtuel = new InventMov_Vir_QuarantineLoss(null);

        movement_Virtuel.parmTransQty(_qty);
        movement_Virtuel.pdsCWParmTransQty(_cwQty);
        movement_Virtuel.parmTransDate(_transDate);
        movement_Virtuel.parmInventTransId(_inventTransId);
        movement_Virtuel.parmItemId(_itemId);
        movement_Virtuel.parmInventDimId(_inventDimId);
        movement_Virtuel.parmDefaultDimension(_dimension);
        movement_Virtuel.parmDefaultDimension(_dimension);
        movement_Virtuel.parmMustBeQuarantineControlled(false);
        movement_Virtuel.parmTransRefId(_transRefId);

        return movement_Virtuel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>