<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlCorrectiveNoteDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PlCorrectiveNoteDP</c> class is the Report Data Provider class for the <c>PlCorrectiveNote</c>
///    report
/// </summary>
[
    SRSReportQueryAttribute(querystr(PlVendCorrectJour))
]
class PlCorrectiveNoteDP extends SRSReportDataProviderBase
{
    private PlVendCorrectJour vendCorrectJour;
    private PlCorrectiveNoteTmp correctiveNoteTmp;
    private CompanyInfo companyInfo;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCorrectiveNoteTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the data from the <c>PlCorrectiveNoteTmp</c> temporary table.
    /// </summary>
    /// <returns>
    ///    Data from the <c>PlCorrectiveNoteTmp</c> temporary table.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(PlCorrectiveNoteTmp)), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PlCorrectiveNoteTmp getCorrectiveNoteTmp()
    {
        select correctiveNoteTmp;
        return correctiveNoteTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCorrectiveNoteTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts data into the <c>PlCorrectiveNoteTmp</c> temporary table.
    /// </summary>
    private void insertCorrectiveNoteTmp()
    {
        VendTable vendTable = VendTable::find(vendCorrectJour.InvoiceAccount);

        // Set corrective note fields
        correctiveNoteTmp.CorrectedText = vendCorrectJour.CorrectedText;
        correctiveNoteTmp.CorrNoteId = vendCorrectJour.CorrNoteId;
        correctiveNoteTmp.DocumentDate = vendCorrectJour.DocumentDate;
        correctiveNoteTmp.InvoiceAccount = vendCorrectJour.InvoiceAccount;
        correctiveNoteTmp.InvoiceId = vendCorrectJour.InvoiceId;
        correctiveNoteTmp.OriginalText = vendCorrectJour.OriginalText;
        correctiveNoteTmp.InvoiceDate = vendCorrectJour.InvoiceDate;

        // Set company fields
        correctiveNoteTmp.CompanyName = companyInfo.name();
        correctiveNoteTmp.CompanyAddress = companyInfo.invoiceAddress().Address;
        correctiveNoteTmp.CompanyVATNum = companyInfo.getPrimaryRegistrationNumber(TaxRegistrationTypesList::TAXID, vendCorrectJour.DocumentDate);
        correctiveNoteTmp.CompanyPhone = companyInfo.phone();

        // Set vendor fields
        correctiveNoteTmp.VendName = vendTable.name();
        correctiveNoteTmp.VendAddress = vendTable.invoiceAddress().Address;

        correctiveNoteTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the SSRS report business logic.
    /// </summary>
    /// <remarks>
    ///    Provides the ability to write the report business logic. This method will be called by SSRS at
    ///    runtime. The method computes data and populates the data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        QueryRun qr  = new QueryRun(this.parmQuery());
        companyInfo = companyInfo::find();

        while (qr.next())
        {
            vendCorrectJour = qr.get(tablenum(PlVendCorrectJour));

            this.insertCorrectiveNoteTmp();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>