<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPeggingTreeNodeCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqPeggingTreeNodeCache</c> provides caching functionalities
/// for the <c>ReqPeggingTreeNode</c> and derived classes.
/// </summary>
public class ReqPeggingTreeNodeCache
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>makeKey</Name>
				<Source><![CDATA[
    private container makeKey(ClassName _className, container _key)
    {
        return [_className, _key];
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves cached value.
    /// </summary>
    /// <param name="_className">
    /// Name of the class for which item
    /// should be retrieved.
    /// </param>
    /// <param name="_key">
    /// Key of the cached ited.
    /// </param>
    /// <returns>
    /// Cached container or conNull() if value is
    /// not present.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public container find(ClassName _className, container _key)
    {
        return SysTransactionScopeCache::get(classStr(ReqPeggingTreeNodeCache), this.makeKey(_className, _key), conNull());
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Stores given value for specified class name and
    /// key combination.
    /// </summary>
    /// <param name="_className">
    /// Name of the class.
    /// </param>
    /// <param name="_key">
    /// Key for the data.
    /// </param>
    /// <param name="_value">
    /// Value to be stored
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void insert(ClassName _className, container _key, container _value)
    {
        SysTransactionScopeCache::set(classStr(ReqPeggingTreeNodeCache), this.makeKey(_className, _key), _value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes cached item if present.
    /// </summary>
    /// <param name="_className">
    /// Class name identifying cached value.
    /// </param>
    /// <param name="_key">
    /// Key the value has been cached with.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void remove(ClassName _className, container _key)
    {
        SysTransactionScopeCache::remove(classStr(ReqPeggingTreeNodeCache), this.makeKey(_className, _key));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>