<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SigbomVersionActivateProcedure</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SIGBOMVersionActivateProcedure</c> class that handles the bill of materials version
/// activation process.
/// </summary>
class SigbomVersionActivateProcedure extends SIGBOMRouteVersionActivateProcedure
{
    BOMVersion  version;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAuditFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Gets the list of signature controlled fields for this procedure.
    /// </summary>
    /// <returns>
    ///   The list of fields required for this bill of materials approve procedure.
    /// </returns>
    public container getAuditFieldList()
    {
        return [
                 [DatabaseLogType::Update,tablenum(BOMVersion),fieldnum(BOMVersion,Active)]
               ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBOMVersion</Name>
				<Source><![CDATA[
    public BOMVersion parmBOMVersion(BOMVersion _version = null)
    {
        if (!prmisdefault(_version))
        {
            version = BOMVersion::findRecId(_version.RecId);
            docList = new List(Types::Class);
            version.Active = version.Active ? false : true;
            SIGBaseDocument doc = SIGBaseDocument::newDatabaseLog(DatabaseLogType::Update,version);
            docList.addEnd(doc);
        }

        return version;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Runs the actual signing of the documents.
    /// </summary>
    public void run()
    {
        super();

        if (signed)
        {
            BOMVersionActivate   activate = new BOMVersionActivate();
            activate.parmRecId(version.RecId);

            try
            {
                activate.runOperation();
            }
            catch
            {
                SIGBaseDocument::clearAllFromCache();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SIGBOMVersionActivateProcedure construct()
    {
        return new SIGBOMVersionActivateProcedure();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@SYS103384";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBOMVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Creates a new instance of the <c>SIGBOMVersionActivateProcedure</c> class from a <c>BOMVersion</c> record.
    /// </summary>
    /// <param name="_version">
    ///   The record from which to create the instance.
    /// </param>
    /// <returns>
    ///   The new instance of the <c>SIGBOMVersionActivateProcedure</c> class.
    /// </returns>
    public static SIGBOMVersionActivateProcedure newBOMVersion(BOMVersion _version)
    {
        SIGBOMVersionActivateProcedure  procedure = SIGBOMVersionActivateProcedure::construct();
        procedure.parmBOMVersion(_version);
        return procedure;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>