<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUpdateMarkingParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventUpdateMarkingParameters</c> class contains the parameters for the <c>InventUpdateMarking</c> class.
/// </summary>
public class InventUpdateMarkingParameters
{
    private InventTransOriginId inventTransOriginRecId;
    private InventDim           inventDimCriteria;
    private InventQty           qty;
    private Map                 tmpInventTransMarkMap;
    private boolean             preReserveAccordingToMarking;
    private ReqMarkUpdate       reqMarkUpdate;

    protected boolean           isInitialized;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        reqMarkUpdate = ReqMarkUpdate::Standard;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransOriginRecId</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public InventTransOriginId parmInventTransOriginRecId(InventTransOriginId _InventTransOriginRecId = inventTransOriginRecId)
    {
        if (!prmIsDefault(_InventTransOriginRecId))
        {
            if (isInitialized)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            inventTransOriginRecId = _inventTransOriginRecId;
        }

        return inventTransOriginRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimCriteria</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public InventDim parmInventDimCriteria(InventDim _inventDimCriteria = inventDimCriteria)
    {
        if (!prmIsDefault(_inventDimCriteria))
        {
            if (isInitialized)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }
        
            inventDimCriteria = _inventDimCriteria;
        }

        return inventDimCriteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQty</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public InventQty parmQty(InventQty _qty = qty)
    {
        if (!prmIsDefault(_qty))
        {
            if (isInitialized)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }
        
            qty = _qty;
        }

        return qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpInventTransMarkMap</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public Map parmTmpInventTransMarkMap(Map _tmpInventTransMarkMap = tmpInventTransMarkMap)
    {
        if (!prmIsDefault(_tmpInventTransMarkMap))
        {
            if (isInitialized)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            tmpInventTransMarkMap = _tmpInventTransMarkMap;
        }

        return tmpInventTransMarkMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreReserveAccordingToMarking</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public boolean parmPreReserveAccordingToMarking(boolean _preReserveAccordingToMarking = preReserveAccordingToMarking)
    {
        if (!prmIsDefault(_preReserveAccordingToMarking))
        {
            if (isInitialized)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            preReserveAccordingToMarking = _preReserveAccordingToMarking;
        }

        return preReserveAccordingToMarking;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqMarkUpdateMethod</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public ReqMarkUpdate parmReqMarkUpdateMethod(ReqMarkUpdate _reqMarkUpdate = reqMarkUpdate)
    {
        if (!prmIsDefault(_reqMarkUpdate))
        {
            if (isInitialized)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            reqMarkUpdate = _reqMarkUpdate;
        }

        return reqMarkUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>completeInitialization</Name>
				<Source><![CDATA[
    /// <summary>
    /// Completes the initialization of the <c>InventUpdateMarkingParameters</c> object.
    /// </summary>
    [Hookable(false)]
    public void completeInitialization()
    {
        isInitialized = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>InventUpdateMarkingParameters</c> class.
    /// </summary>
    /// <returns>
    /// The <c>InventUpdateMarkingParameters</c> instance.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    static public InventUpdateMarkingParameters createInstance()
    {
        return new InventUpdateMarkingParameters();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>