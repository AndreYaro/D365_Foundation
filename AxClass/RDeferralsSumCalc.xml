<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RDeferralsSumCalc</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RDeferralsSumCalc
{
    boolean             calculated;

    Range               rangeDeferralsId;
    Range               rangeDeferralsBookId;

    RDeferralsTransDate dateFrom;
    RDeferralsTransDate dateTo;

    RDeferralsAmount    netBookValue;
    RDeferralsAmount    deferralsAmount;
    RDeferralsAmount    writingOffValue;
    RDeferralsAmount    retirementValue;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds query for calculating deferrals.
    /// </summary>
    /// <returns><c>Query</c> object.</returns>
    protected Query buildQuery()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deferrals ammount.
    /// </summary>
    public void calc()
    {
        netBookValue         = deferralsAmount +
                               writingOffValue +
                               retirementValue;

        calculated           = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deferralsAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets deferrals ammount.
    /// </summary>
    /// <returns><c>RDeferralsAmount</c> object.</returns>
    public RDeferralsAmount deferralsAmount()
    {
        this.calc();

        return deferralsAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    protected void initValue()
    {
        deferralsAmount  = 0;
        writingOffValue  = 0;
        retirementValue  = 0;

        calculated       = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>netBookValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets net book value.
    /// </summary>
    /// <returns><c>RDeferralsAmount</c> object.</returns>
    public RDeferralsAmount netBookValue()
    {
        this.calc();

        return netBookValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateFrom</Name>
				<Source><![CDATA[
    public RDeferralsTransDate parmDateFrom(RDeferralsTransDate _dateFrom = dateNull())
    {
        dateFrom   = _dateFrom;
        this.initValue();

        return dateFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateTo</Name>
				<Source><![CDATA[
    public RDeferralsTransDate parmDateTo(RDeferralsTransDate _dateTo = dateNull())
    {
        dateTo     = _dateTo;
        this.initValue();

        return dateTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRangeDeferralsBookId</Name>
				<Source><![CDATA[
    public Range parmRangeDeferralsBookId(Range _rangeDeferralsBookId = rangeDeferralsBookId)
    {
        rangeDeferralsBookId = _rangeDeferralsBookId;
        this.initValue();

        return rangeDeferralsBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRangeDeferralsId</Name>
				<Source><![CDATA[
    public Range parmRangeDeferralsId(Range _rangeDeferralsId = rangeDeferralsId)
    {
        rangeDeferralsId = _rangeDeferralsId;
        this.initValue();

        return rangeDeferralsId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retirementValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets deferrals retirement value.
    /// </summary>
    /// <returns><c>DeferralsAmount</c> object.</returns>
    public RDeferralsAmount retirementValue()
    {
        this.calc();

        return retirementValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates deferrals sum by transaction type.
    /// </summary>
    /// <param name = "_deferralsSum">Sum to update to.</param>
    /// <param name = "_transType">Transaction type.</param>
    protected void updateSum(RDeferralsAmount _deferralsSum, RDeferralsTransType _transType)
    {
        switch (_transType)
        {
            case RDeferralsTransType::WritingOff:
                writingOffValue  += _deferralsSum;
                break;

            case RDeferralsTransType::Retired:
                retirementValue  += _deferralsSum;
                break;

            case RDeferralsTransType::Receipt:
                deferralsAmount  += _deferralsSum;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writingOffValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets writing off value amount.
    /// </summary>
    /// <returns><c>RDeferralsAmount</c> object.</returns>
    public RDeferralsAmount writingOffValue()
    {
        this.calc();

        return writingOffValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>