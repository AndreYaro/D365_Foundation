<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxBankExchangeRateDifferenceFlighting</Name>
	<SourceCode>
		<Declaration><![CDATA[
using IFeatureLifecycle = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureLifecycle;
using FeatureLifecycleStage = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.FeatureLifecycleStage;
/// <summary>
/// The <c>TaxBankExchangeRateDifferenceFlighting</c> class is used to determine whether the feature 'TaxBankExchangeRateDifferenceFlighting' is enabled.
/// Feature: Creates the additional <c>TaxTrans</c> for Exchange Rate Difference in alternative way and also uptake it from tax settlement.
/// Feature is enabled when flighting is enabled; if problem occurs, disable flighting to revert the change.
/// </summary>
/// <remarks>Available from 10.0.21, feature enabled by default.</remarks>
[TaxFlighting(TaxFlightingGroup::IndirectTax)]
internal class TaxBankExchangeRateDifferenceFlighting implements IFeatureLifecycle
{
    private static TaxBankExchangeRateDifferenceFlighting instance = new TaxBankExchangeRateDifferenceFlighting();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    internal static TaxBankExchangeRateDifferenceFlighting instance()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::PublicPreview;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>