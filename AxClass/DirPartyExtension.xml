<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirPartyExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DirPartyExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>onRelatedPartyExt</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(DirPartyExtensibilityHelper), delegatestr(DirPartyExtensibilityHelper, relatedPartyExtDelegate))]
    static void onRelatedPartyExt(TableId _tableId, RecId _recId, EventHandlerResult _evtResult)
    {
        Common entity;

        if (_tableId == tableNum(ProjTable))
        {
            select firstonly entity
                where entity.RecId == _recId;

            if (entity.RecId)
            {
                _evtResult.result(entity.party());
            }
            else
            {
                _evtResult.result(0);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onCreateDirPartyFromCommonExt</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(DirPartyExtensibilityHelper), delegatestr(DirPartyExtensibilityHelper, createDirPartyFromCommonExtDelegate))]
    static void onCreateDirPartyFromCommonExt(Common _common, TransDateTime _transDateTime, EventHandlerResult _evtResult)
    {
        switch (_common.TableId)
        {
            case tableNum(CustTable) :
            _evtResult.result(new CustomerEntity(_common,_transDateTime));
            break;

            case tableNum(VendTable) :
            _evtResult.result(new VendorEntity(_common,_transDateTime));
            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onShowMessageBarDelegate</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(DirPartyExtensibilityHelper), delegatestr(DirPartyExtensibilityHelper, showMessageBarDelegate))]
    static void onShowMessageBarDelegate(Common _common, boolean _hide)
    {
        #Resource
        #ResAppl

        DirPartyRecId               partyRecId;
        SysDictTable                dictTable;

        dictTable = new SysDictTable(_common.TableId);
        partyRecId = _common.(dictTable.fieldName2Id(identifierStr(Party)));
        _hide = _hide || (!partyRecId);

        if ((_common.TableId == tableNum(smmLeadTable) || _common.TableId == tableNum(smmOpportunityTable)))
        {
            switch (DirParty::showPartyMatchIcon(_common))
            {
                case #ImageWarning :
                if ( _common.TableId == tableNum(smmLeadTable) ||
                        _common.TableId == tableNum(CaseDetailBase) ||
                        smmBusRelTable::findByParty(_common.(fieldNum(smmOpportunityTable,Party))))
                {
                    _hide = true;
                }
                break;

                case #ImageMethodEmpty :
                if (_common.TableId == tableNum(CaseDetail))
                {
                    _hide = false;
                }

                break;
            }
        }
        else if (_common.TableId == tableNum(smmQuotationCompetitorGroup))
        {
            _hide = _hide || !DirPartyTable::findRec(partyRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onShowActionBarDelegate</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(DirPartyExtensibilityHelper), delegatestr(DirPartyExtensibilityHelper, showActionBarDelegate))]
    static void onShowActionBarDelegate(FormRun _formRun, Common _common, boolean _hide)
    {
        #define.PartyActionBarMessageGroup('PartyActionBarMessageGroup')
        #define.PartyActionBarMessageIcon('PartyActionBarMessageIcon')

        FormGroupControl            actionBarMessageGroup;
        FormWindowControl           actionBarIcon;

        actionBarMessageGroup = _formRun.design().controlName(#PartyActionBarMessageGroup);
        actionBarIcon = _formRun.design().controlName(#PartyActionBarMessageIcon);

        if (_common.TableId == tableNum(smmLeadTable) || _common.TableId == tableNum(smmOpportunityTable))
        {
            if (!actionBarIcon)
            {
                actionBarIcon.imageResource(DirParty::showPartyMatchIcon(_common));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefFromCommon</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the main table from the address book entities.
    /// </summary>
    /// <param name="_common">
    ///    A record that represents an address book entity.
    /// </param>
    public static void jumpRefFromCommon(Common _common)
    {
        MenuFunction    menuFunction;
        Args            args;
        args = new Args();

        menuFunction = new MenuFunction(formStr(DirPartyTable), MenuItemType::Display);

        // Check access rights
        if (!menuFunction || !menuFunction.checkAccessRights())
        {
            // Access rights are not sufficient to use this function.
            throw error("@SYS81158");
        }
        args.record(_common);

        if (_common.tableId == tableNum(DirPartyTable))
        {
            args.lookupRecord(_common);
        }

        menuFunction.run(args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>