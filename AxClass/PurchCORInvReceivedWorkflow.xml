<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCORInvReceivedWorkflow</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchCORInvReceivedWorkflow</c> class is used to run an invoice received notification
/// workflow.
/// </summary>
class PurchCORInvReceivedWorkflow extends PurchCORWorkflow
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canSubmit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>PurchLine</c> record can be submitted to the workflow.
    /// </summary>
    /// <returns>
    /// true if the <c>PurchLine</c> record can be submitted to the workflow; otherwise, false.
    /// </returns>
    /// <remarks>
    /// A COR policy must exist for the purchase line, the <c>WfInvReceivedState</c> workflow state field
    /// must have the not submitted value, and an active workflow configuration must be found.
    /// </remarks>
    protected boolean canSubmit()
    {
        if (!this.checkPolicy())
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>completeAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of a menu item that is used when taking the complete action.
    /// </summary>
    /// <returns>
    /// A menu item name.
    /// </returns>
    protected menuItemNameAction completeAction()
    {
        return menuitemActionStr(PurchCORInvReceivedTaskComplete);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the document record as a <c>PurchLine</c> record.
    /// </summary>
    /// <returns>
    ///    A <c>PurchLine</c> record.
    /// </returns>
    protected PurchLine getPurchLine()
    {
        return this.parmDocumentRecord() as PurchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>PurchLine</c> state.
    /// </summary>
    /// <returns>
    /// The <c>PurchLine</c> state value.
    /// </returns>
    protected TradeWorkflowState getState()
    {
        return this.getPurchLine().WfInvReceivedState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkflowType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of a workflow type that is used when you start the workflow.
    /// </summary>
    /// <returns>
    /// A workflow type name.
    /// </returns>
    protected workflowTypeName getWorkflowType()
    {
        return PurchCORInvReceivedWorkflow::templateName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the workflow state.
    /// </summary>
    protected void setState()
    {
        PurchLine::setInvReceivedWorkflowState(this.getPurchLine().RecId, TradeWorkflowState::Submitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cancelInvReceivedWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Cancels the invoice received workflows on the specified <c>PurchLine</c> record.
    /// </summary>
    /// <param name="_purchLine">
    ///    The workflow document <c>PurchLine</c> record.
    /// </param>
    public static void cancelInvReceivedWorkflow(PurchLine _purchLine)
    {
        PurchCORInvReceivedWorkflow::newPurchLine(_purchLine).cancelWorkflow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>completeTaskOfInvReceivedWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Activates the <c>Complete</c> task action on the workflow.
    /// </summary>
    /// <param name="_purchLine">
    ///    The <c>PurchLine</c> record of the workflow document.
    /// </param>
    static void completeTaskOfInvReceivedWorkflow(PurchLine _purchLine)
    {
        PurchCORInvReceivedWorkflow::newPurchLine(_purchLine).completeTask();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates an instance of the <c>PurchCORInvReceivedWorkflow</c> class.
    /// </summary>
    /// <returns>
    ///     An instance of the <c>PurchCORInvReceivedWorkflow</c> class.
    /// </returns>
    public static PurchCORInvReceivedWorkflow construct()
    {
        return new PurchCORInvReceivedWorkflow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Submits a purchase line document and activates the corresponding workflow.
    /// </summary>
    /// <param name="_args">
    ///    The arguments of the <c>PurchCORInvReceivedWorkflow</c> class.
    /// </param>
    public static void main(Args _args)
    {
        PurchCORInvReceivedWorkflow purchCORInvReceivedWorkflow;

        if (_args.dataset() != tableNum(PurchLine))
        {
            throw error(strFmt("@SYS19306",funcName()));
        }

        purchCORInvReceivedWorkflow = PurchCORInvReceivedWorkflow::newPurchLine(_args.record());

        if (purchCORInvReceivedWorkflow.canSubmit())
        {
            purchCORInvReceivedWorkflow.activateWorkflow(_args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates an instance of the <c>PurchCORInvReceivedWorkflow</c> class.
    /// </summary>
    /// <param name="_purchLine">
    ///    The <c>PurchLine</c> record on which to submit the workflow.
    /// </param>
    /// <returns>
    ///     An instance of the <c>PurchCORInvReceivedWorkflow</c> class.
    /// </returns>
    public static PurchCORInvReceivedWorkflow newPurchLine(PurchLine _purchLine)
    {
        PurchCORInvReceivedWorkflow purchCORInvReceivedWorkflow = PurchCORInvReceivedWorkflow::construct();

        purchCORInvReceivedWorkflow.parmDocumentRecord(_purchLine);

        return purchCORInvReceivedWorkflow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activatePurchaseRequisitionWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activates the purchase requisition workflow.
    /// </summary>
    /// <param name="_purchLine">
    /// The <c>PurchLine</c> record to submit.
    /// </param>
    /// <param name="_workflowComment">
    /// Comment to submit.
    /// </param>
    /// <remarks>
    /// Activates the workflow configuration by calling the <c>ActivateFromWorkflowtemplate</c> method on
    /// the <c>Workflow</c> class that has information about the purchase line record.
    /// </remarks>
    public static void activatePurchaseRequisitionWorkflow(PurchLine _purchLine)
    {
        WorkflowComment _workflowComment = "@SYS303447";
        PurchCORInvReceivedWorkflow::newPurchLine(_purchLine).submit(_workflowComment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the name of the template.
    /// </summary>
    /// <returns>
    ///    The name of the workflow template.
    /// </returns>
    public static workflowTypeName templateName()
    {
        return workFlowTypeStr(PurchCORNotifyInvReceived);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>