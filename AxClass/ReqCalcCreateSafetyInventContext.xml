<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqCalcCreateSafetyInventContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides additional context for the <c>ReqCalc.createSafetyInvent</c> method.
/// </summary>
final public class ReqCalcCreateSafetyInventContext implements System.IDisposable
{
    private static ReqCalcCreateSafetyInventContext instance;    
    private RecordInsertList recordInsertList;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        if (instance)
        {
            // Nesting not supported
            throw error(Error::wrongUseOfFunction(classStr(ReqCalcCreateSafetyInventContext)));
        }
    
        instance = this;    
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new context instance.
    /// </summary>
    /// <returns>A new context instance.</returns>
    public static ReqCalcCreateSafetyInventContext create()
    {
        return new ReqCalcCreateSafetyInventContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordInsertList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or creates the <c>RecordInsertList</c>.
    /// </summary>
    /// <returns>The current value.</returns>
    private RecordInsertList recordInsertList()
    {
        if (!recordInsertList)
        {
            recordInsertList = new RecordInsertList(tableNum(ReqTrans), true);
        }

        return recordInsertList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDatabase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts any records added to the <c>RecordInsertList</c> into the db.
    /// </summary>
    public void insertDatabase()
    {
        if (recordInsertList)
        {
            recordInsertList.insertDatabase();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordInsertListFromCurrentContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RecordInsertList</c> of the current context.
    /// </summary>
    /// <returns>The <c>RecordInsertList</c> of the current context.</returns>
    public static RecordInsertList recordInsertListFromCurrentContext()
    {
        if (instance)
        {
            return instance.recordInsertList();
        }
        
        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>