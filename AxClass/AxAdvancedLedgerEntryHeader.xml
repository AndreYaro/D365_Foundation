<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxAdvancedLedgerEntryHeader</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>AxAdvancedLedgerEntryHeader</c> class is generated by the AIF document service utility, it is used to handles the <c>AdvancedLedgerEntryHeader</c> record for the web service.
/// </summary>
class AxAdvancedLedgerEntryHeader extends AxApplicationBase
{
    AdvancedLedgerEntryHeader advancedLedgerEntryHeader;

    #AdvancedLedgerEntryFaults
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>advancedLedgerEntryHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the provided <c>AdvancedLedgerEntryHeader</c> buffer as the current record.
    /// </summary>
    /// <param name="_advancedLedgerEntryHeader">
    ///     A buffer to be used as the current record.
    /// </param>
    /// <returns>
    ///     The current record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AdvancedLedgerEntryHeader advancedLedgerEntryHeader(AdvancedLedgerEntryHeader _advancedLedgerEntryHeader = advancedLedgerEntryHeader)
    {
        if (!prmisDefault(_advancedLedgerEntryHeader))
        {
            this.setCurrentRecordFromExternal(_advancedLedgerEntryHeader);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the original instance of the <c>AxInternalBase</c> class.
    /// </summary>
    /// <returns>
    ///     An instance of the <c>AxInternalBase</c> class.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _advancedLedgerEntryHeader = advancedLedgerEntryHeader)
    {
        if (!prmisDefault(_advancedLedgerEntryHeader))
        {
            super(_advancedLedgerEntryHeader);
            advancedLedgerEntryHeader = _advancedLedgerEntryHeader as AdvancedLedgerEntryHeader;
        }
        else
        {
            super();
        }

        return advancedLedgerEntryHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    protected Common emptyRecord()
    {
        AdvancedLedgerEntryHeader localAdvancedLedgerEntryHeader;

        return localAdvancedLedgerEntryHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles the Exemption of the mandatory fields of the <c>AdvancedLedgerEntryHeader</c>.
    /// </summary>
    protected void initMandatoryFieldsExemptionList()
    {
        super();

        this.setParmMethodAsNotMandatory(methodStr(AxAdvancedLedgerEntryHeader, parmAccountingDate));
        this.setParmMethodAsNotMandatory(methodStr(AxAdvancedLedgerEntryHeader, parmTransactionCurrency));
        this.setParmMethodAsNotMandatory(methodStr(AxAdvancedLedgerEntryHeader, parmFiscalCalendarPeriod));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves an enumeration value that specifies the internal or external context.
    /// </summary>
    /// <param name="_inputStatus">
    ///    An enumeration value that specifies the new input status; optional.
    /// </param>
    /// <returns>
    ///    An internal or external enumeration value.
    /// </returns>
    /// <remarks>
    ///    The <c>AxAdvancedLedgerEntryHeader</c> class is intended to work with the client and service
    ///    model.This variable is exposed to be controlled from the client and the service models. The
    ///    <c>Internal</c> enumeration value represents the application. The <c>External</c> enumeration value
    ///    represents the user or application.
    /// </remarks>
    public int inputStatus(InternalExternal _inputStatus = inputStatus)
    {
        int inputStatusReturn;

        inputStatusReturn = super(_inputStatus);

        return inputStatusReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldSetExternally</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether a field has been set by an external consumer.
    /// </summary>
    /// <param name="_fieldId">
    ///    The ID of the field to check whether it is set externally.
    /// </param>
    /// <returns>
    ///    true if the field was set externally; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    You may sometimes have to apply a system-determined default value to a field and ignore the value
    ///    of the consumer.It is important to understand whether the external consumer has set a specific
    ///    field.
    /// </remarks>
    public boolean isFieldSetExternally(fieldId _fieldId)
    {
        boolean ret;

        ret = super(_fieldId);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TransDate parmAccountingDate(TransDate _accountingDate = dateNull())
    {
        if (!prmisDefault(_accountingDate))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, AccountingDate), _accountingDate);
        }

        return advancedLedgerEntryHeader.AccountingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalCalendarPeriod</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId parmFiscalCalendarPeriod(RefRecId _fiscalCalendarPeriod = 0)
    {
        if (!prmisDefault(_fiscalCalendarPeriod))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, FiscalCalendarPeriod), _fiscalCalendarPeriod);
        }

        return advancedLedgerEntryHeader.FiscalCalendarPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalizingDefinition</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId parmJournalizingDefinition(RefRecId _journalizingDefinition = 0)
    {
        if (!prmisDefault(_journalizingDefinition))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, JournalizingDefinition), _journalizingDefinition);
        }

        return advancedLedgerEntryHeader.JournalizingDefinition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerVoucher</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Voucher parmLedgerVoucher(Voucher _ledgerVoucher = '')
    {
        if (!prmisDefault(_ledgerVoucher))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, LedgerVoucher), _ledgerVoucher);
        }

        return advancedLedgerEntryHeader.LedgerVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReverseDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TransDate parmReverseDate(TransDate _reverseDate = dateNull())
    {
        if (!prmisDefault(_reverseDate))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, ReverseDate), _reverseDate);
        }

        return advancedLedgerEntryHeader.ReverseDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReverseEntry</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public NoYes parmReverseEntry(NoYes _reverseEntry = NoYes::No)
    {
        if (!prmisDefault(_reverseEntry))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, ReverseEntry), _reverseEntry);
        }

        return advancedLedgerEntryHeader.ReverseEntry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCurrency</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmTransactionCurrency(str _transactionCurrency = '')
    {
        DictField dictField;

        if (!prmisDefault(_transactionCurrency))
        {
            dictField = new DictField(tableNum(AdvancedLedgerEntryHeader), fieldNum(AdvancedLedgerEntryHeader,TransactionCurrency));
            this.validateInboundCurrencyString(_transactionCurrency,dictField);

            if (this.valueMappingInbound())
            {
                _transactionCurrency = this.axCurrencyCode(_transactionCurrency);
            }

            this.setField(fieldNum(AdvancedLedgerEntryHeader, TransactionCurrency), _transactionCurrency);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(advancedLedgerEntryHeader.TransactionCurrency);
        }
        else
        {
            return advancedLedgerEntryHeader.TransactionCurrency;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionNumber</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AdvancedLedgerEntryId parmTransactionNumber(AdvancedLedgerEntryId _transactionNumber = '')
    {
        if (!prmisDefault(_transactionNumber))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, TransactionNumber), _transactionNumber);
        }

        return advancedLedgerEntryHeader.TransactionNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionStatus</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AdvancedLedgerEntryTransactionStatus parmTransactionStatus(AdvancedLedgerEntryTransactionStatus _transactionStatus = AdvancedLedgerEntryTransactionStatus::All)
    {
        if (!prmisDefault(_transactionStatus))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, TransactionStatus), _transactionStatus);
        }

        return advancedLedgerEntryHeader.TransactionStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionText</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AdvancedLedgerEntryTransText parmTransactionText(AdvancedLedgerEntryTransText _transactionText = '')
    {
        if (!prmisDefault(_transactionText))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, TransactionText), _transactionText);
        }

        return advancedLedgerEntryHeader.TransactionText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowApprovalState</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AdvancedLedgerEntryWFApprovalState parmWorkflowApprovalState(AdvancedLedgerEntryWFApprovalState _workflowApprovalState = AdvancedLedgerEntryWFApprovalState::NotSubmitted)
    {
        if (!prmisDefault(_workflowApprovalState))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, WorkflowApprovalState), _workflowApprovalState);
        }

        return advancedLedgerEntryHeader.WorkflowApprovalState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkFlowStatus</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AdvancedLedgerEntryWFApprovalStatus parmWorkFlowStatus(AdvancedLedgerEntryWFApprovalStatus _workFlowStatus = AdvancedLedgerEntryWFApprovalStatus::Draft)
    {
        if (!prmisDefault(_workFlowStatus))
        {
            this.setField(fieldNum(AdvancedLedgerEntryHeader, WorkFlowStatus), _workFlowStatus);
        }

        return advancedLedgerEntryHeader.WorkFlowStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeFieldAsTouched</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Removes a field from the field touched map.
    /// </summary>
    /// <param name="_fieldId">
    ///    The field that should be removed.
    /// </param>
    /// <returns>
    ///    true if the field was removed; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    This method is exposed so the internal state can be reset. You may sometimes have to apply a
    ///    default field value and ignore the value that is provided by the consumer. By resetting the
    ///    internal state, typical defaulting can occur.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean removeFieldAsTouched(fieldId _fieldId)
    {
        boolean removeFieldsAsTouchedReturn;

        removeFieldsAsTouchedReturn = fieldTouched.remove(_fieldId);

        return removeFieldsAsTouchedReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        this.advancedLedgerEntryHeader().defaultRow(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calls the <c>validateField</c> method for the current <c>AdvancedLedgerEntryHeader</c> record.
    /// </summary>
    /// <param name="_field">
    ///     The field identifier that corresponds to the field being validated.
    /// </param>
    /// <remarks>
    ///     This method overrides the base implementation so this <c>AxAdvancedLedgerEntryHeader</c> instance can
    ///     be passed to the <c>AdvancedLedgerEntryHeader.validateField</c> table method.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///     An error is found validating record.
    /// </exception>
    protected void validateField(fieldId _field)
    {
        AdvancedLedgerEntryHeader currentRecord = this.currentRecord() as AdvancedLedgerEntryHeader;
        if (!currentRecord.validateField(_field, this))
        {
            if (continueOnError)
            {
                AifFault::checkFailedLogFault("@SYS98197");
            }
            else
            {
                throw AifFault::faultList("@SYS98197",#ValidationFailed);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calls the <c>validateWrite</c> method for the current <c>AdvancedLedgerEntryHeader</c> record.
    /// </summary>
    /// <remarks>
    ///     This method overrides the base implementation. Therefore, this <c>AxAdvancedLedgerEntryHeader</c>
    ///     instance can be passed to the <c>AdvancedLedgerEntryHeader.validateWrite</c> table method.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///     An error is found when validating the record.
    /// </exception>
    protected void validateWrite()
    {
        if (!this.currentRecord().validateWrite())
        {
            if (continueOnError)
            {
                AifFault::checkFailedLogFault("@SYS98197");
            }
            else
            {
                throw AifFault::faultList("@SYS98197",#ValidationFailed);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static AxAdvancedLedgerEntryHeader construct()
    {
        return new AxAdvancedLedgerEntryHeader();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAdvancedLedgerEntryHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Instantiates a new object of the <c>AxAdvancedLedgerEntryHeader</c> class.
    /// </summary>
    /// <param name="_advancedLedgerEntryHeader">
    ///     An <c>AdvancedLedgerEntryHeader</c> buffer to be used as the current record.
    /// </param>
    /// <returns>
    ///     A new instance of the <c>AxAdvancedLedgerEntryHeader</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AxAdvancedLedgerEntryHeader newAdvancedLedgerEntryHeader(AdvancedLedgerEntryHeader _advancedLedgerEntryHeader)
    {
        AxAdvancedLedgerEntryHeader axAdvancedLedgerEntryHeader = AxAdvancedLedgerEntryHeader::construct();

        axAdvancedLedgerEntryHeader.advancedLedgerEntryHeader(_advancedLedgerEntryHeader);

        return axAdvancedLedgerEntryHeader;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>