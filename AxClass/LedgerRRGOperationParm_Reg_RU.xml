<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGOperationParm_Reg_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGOperationParm_Reg_RU extends LedgerRRGOperationParm_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>splitAccounts</Name>
				<Source><![CDATA[
	protected container splitAccounts(str _accountFilter,
                                      boolean _splitReverse   = true,
                                      Set _accountSet         = new Set(Types::Int64),
                                      Set _accountReverseSet  = new Set(Types::String))
    {
        Query                       query = new Query();
        QueryRun                    queryRun;
        QueryBuildRange             range = query.addDataSource(tablenum(RTax25ProfitTable)).addRange(fieldnum(RTax25ProfitTable, ProfitId));
        RTax25ProfitTable           profitTable;

        range.value(_accountFilter);
        queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            if (queryRun.changed(tablenum(RTax25ProfitTable)))
            {
                profitTable = queryRun.get(tablenum(RTax25ProfitTable));
                this.traverseNodes(profitTable.RecId, _accountSet);
            }
        }

        return [this.set2Filter(_accountSet), ''];
    }

]]></Source>
			</Method>
			<Method>
				<Name>traverseNodes</Name>
				<Source><![CDATA[
	private void traverseNodes(RefRecId _parentProfitTableRecId, Set _accountSet)
    {
        RTax25ProfitTable profitTable;

        select profitTable where profitTable.ParentProfitRecId == _parentProfitTableRecId;

        if (profitTable)
        {
            while (profitTable)
            {
                this.traverseNodes(profitTable.RecId, _accountSet);
                next profitTable;
            }
        }
        else
        {
            _accountSet.add(RTax25ProfitTable::find(_parentProfitTableRecId).ProfitId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
 [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
	public static LedgerRRGOperationParm_Reg_RU construct()
    {
        return new LedgerRRGOperationParm_Reg_RU();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>