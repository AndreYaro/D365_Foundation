<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqCalcRecordCacheReqPO</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>ReqCalcRecordCacheReqPO</c> implements a record cache for <c>ReqPO</c> records.
/// </summary>
public class ReqCalcRecordCacheReqPO extends ReqCalcRecordCache
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a key/value pair into the cache.
    /// </summary>
    /// <param name="_planVersion">
    ///    The plan version.
    /// </param>
    /// <param name="_refId">
    ///    The invent trans reference record ID.
    /// </param>
    /// <param name="_reqPo">
    ///    The <c>ReqPo</c> record to cache.
    /// </param>
    /// <returns>
    ///    true if the record was cached; otherwise, false.
    /// </returns>
    public boolean insert(
        RefRecId         _planVersion,
        InventTransRefId _refId,
        ReqPO            _reqPo)
    {
        return this.insertKey(this.key(_planVersion, _refId), _reqPo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>key</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Builds a key for the cache.
    /// </summary>
    /// <param name="_planVersion">
    ///    The plan version.
    /// </param>
    /// <param name="_refId">
    ///    The invent trans reference record ID.
    /// </param>
    /// <returns>
    ///    A <c>container</c> that can be used as a key for the cache.
    /// </returns>
    protected container key(
        RefRecId         _planVersion,
        InventTransRefId _refId)
    {
        return [_planVersion, _refId];
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Looks up a value in the cache.
    /// </summary>
    /// <param name="_planVersion">
    ///    The plan version.
    /// </param>
    /// <param name="_refId">
    ///    The invent trans reference record ID.
    /// </param>
    /// <returns>
    ///    The cached <c>ReqPo</c> record; otherwise, an empty buffer.
    /// </returns>
    public ReqPo lookup(
         RefRecId         _planVersion,
         InventTransRefId _refId)
    {
        return this.lookupKey(this.key(_planVersion, _refId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Removes a key/value pair from the cache.
    /// </summary>
    /// <param name="_planVersion">
    ///    The plan version.
    /// </param>
    /// <param name="_refId">
    ///    The invent trans reference record ID.
    /// </param>
    /// <returns>
    ///    The cached <c>ReqPo</c> record; otherwise, an empty buffer.
    /// </returns>
    public boolean remove(
        RefRecId         _planVersion,
        InventTransRefId _refId)
    {
        return this.removeKey(this.key(_planVersion, _refId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static ReqCalcRecordCacheReqPo construct()
    {
        return new ReqCalcRecordCacheReqPO();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    public static ReqCalcRecordCacheReqPO newStandard()
    {
        ReqCalcRecordCache  reqCalcRecordCache = ReqCalcRecordCacheReqPO::construct();

        reqCalcRecordCache.parmTableId(tableNum(ReqPO));

        return reqCalcRecordCache;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>