<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerMatrixReportWithDimUIBuilder_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerMatrixReportWithDimUIBuilder_CN</c> is UIBuilder class for <c>LedgerMatrixReportWithDim_CN</c> report.
/// </summary>
public class LedgerMatrixReportWithDimUIBuilder_CN extends SrsReportDataContractExtendUIBuilder_CN
{
    Name        dimensionAttribute;
    DialogField dialogLedgerMatrixId;
    DialogField dialogFieldDimensionAttribute;
    DialogField dialogFieldFromDimensionValue;
    DialogField dialogFieldToDimensionValue;

    #define.ColumnNum(2)
    #Dimensions
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the column number of dialog fields.
    /// </summary>
    public void build()
    {
        FormBuildGroupControl formBuildGroupControl;

        super();

        formBuildGroupControl = this.dialog().curFormGroup();
        formBuildGroupControl.columns(#ColumnNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttributeLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a dimension attribute lookup.
    /// </summary>
    /// <param name="_dimensionAttributeDialogControl">
    /// The dimension attribute control.
    /// </param>
    public void dimensionAttributeLookup(FormStringControl _dimensionAttributeDialogControl)
    {
        DimensionHierarchy::lookupDimensionAttributeByLocalizedName(_dimensionAttributeDialogControl, 0, true, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttributeModify</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a dimension attribute modified
    /// </summary>
    /// <param name="_dimensionAttributeDialogControl">
    /// The dimension attribute control.
    /// </param>
    /// <returns>
    /// Return result.
    /// </returns>
    public boolean dimensionAttributeModify(FormStringControl _dimensionAttributeDialogControl)
    {
        if (dimensionAttribute != dialogFieldDimensionAttribute.value())
        {
            //If modified "Dimension Attribute" is different with previous,
            //set the "From Dimension" and "To Dimension" as null
            dialogFieldFromDimensionValue.value('');
            dialogFieldToDimensionValue.value('');
            dimensionAttribute = dialogFieldDimensionAttribute.value();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttributeValidate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a dimension attribute validate
    /// </summary>
    /// <param name="_dimensionAttributeControl">
    /// The dimension attribute control
    /// </param>
    /// <returns>
    /// Return validation result
    /// </returns>
    public boolean dimensionAttributeValidate(FormStringControl _dimensionAttributeControl)
    {
        return LedgerMatrixReportHelper_CN::checkExistDimensionAttribute(_dimensionAttributeControl.valueStr(), _dimensionAttributeControl.label());
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionValueLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the look-up interaction for the individual dimension attribute lookup controls.
    /// </summary>
    /// <param name="_dimensionValueControl">
    /// The dimension value control.
    /// </param>
    public void dimensionValueLookup(FormStringControl _dimensionValueControl)
    {
        LedgerMatrixReportHelper_CN::dimensionValueLookup(_dimensionValueControl, dialogFieldDimensionAttribute.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionValueValidate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the validate interaction for the individual dimension value controls.
    /// </summary>
    /// <param name="_dimensionValueControl">
    /// The dimension value control.
    /// </param>
    /// <returns>
    /// Return validation result
    /// </returns>
    public boolean dimensionValueValidate(FormStringControl _dimensionValueControl)
    {
        return LedgerMatrixReportHelper_CN::checkExistDimensionValue(
            _dimensionValueControl.valueStr(),
            dialogFieldDimensionAttribute.value(),
            _dimensionValueControl.label());
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerMatrixIdValidate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a account matrix validate
    /// </summary>
    /// <param name="_ledgerMatrixIdControl">
    /// The account matrix control
    /// </param>
    /// <returns>
    /// Return validation result
    /// </returns>
    public boolean ledgerMatrixIdValidate(FormStringControl _ledgerMatrixIdControl)
    {
        LedgerMatrixId_CN       ledgerMatrixId;
        LedgerMatrixTable_CN    ledgerMatrixTable_CN;

        boolean ret = true;

        if (dialogLedgerMatrixId.value())
        {
            ledgerMatrixId          = _ledgerMatrixIdControl.valueStr();
            ledgerMatrixTable_CN    = LedgerMatrixTable_CN::findByMatrixId(ledgerMatrixId);

            if (!ledgerMatrixTable_CN)
            {
                //The value '%1' in field '%2' is not found in the related table '%3'.
                ret = checkFailed(strFmt(
                    "@GLS180006",
                    ledgerMatrixId,
                    _ledgerMatrixIdControl.label(),
                    tableStr(ledgerMatrixTable_CN)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyOverrideMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the default methods in order to handle events on dialogs.
    /// </summary>
    protected void modifyOverrideMethod()
    {
        this.overrideDialogFieldLookup(dialogFieldDimensionAttribute, methodStr(LedgerMatrixReportWithDimUIBuilder_CN, dimensionAttributeLookup));
        this.overrideDialogFieldLookup(dialogFieldFromDimensionValue, methodStr(LedgerMatrixReportWithDimUIBuilder_CN, dimensionValuelookup));
        this.overrideDialogFieldLookup(dialogFieldToDimensionValue, methodStr(LedgerMatrixReportWithDimUIBuilder_CN, dimensionValuelookup));
        this.overrideDialogFieldMethod(
            dialogFieldDimensionAttribute,
            methodStr(FormStringControl, Modified),
            methodStr(LedgerMatrixReportWithDimUIBuilder_CN, dimensionAttributeModify));
        this.overrideDialogFieldMethod(
            dialogLedgerMatrixId,
            methodStr(FormStringControl, Validate),
            methodStr(LedgerMatrixReportWithDimUIBuilder_CN, ledgerMatrixIdValidate));
        this.overrideDialogFieldMethod(
            dialogFieldDimensionAttribute,
            methodStr(FormStringControl, Validate),
            methodStr(LedgerMatrixReportWithDimUIBuilder_CN, dimensionAttributeValidate));
        this.overrideDialogFieldMethod(
            dialogFieldFromDimensionValue,
            methodStr(FormStringControl, Validate),
            methodStr(LedgerMatrixReportWithDimUIBuilder_CN, dimensionValueValidate));
        this.overrideDialogFieldMethod(
            dialogFieldToDimensionValue,
            methodStr(FormStringControl, Validate),
            methodStr(LedgerMatrixReportWithDimUIBuilder_CN, dimensionValueValidate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyProperty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides this method when want to modify the property of field control, such as: Lookupbutton, Enable, etc.
    /// </summary>
    protected void modifyProperty()
    {
        this.overrideDialogFieldAlwaysShowLookup(dialogFieldDimensionAttribute);
        this.overrideDialogFieldAlwaysShowLookup(dialogFieldFromDimensionValue);
        this.overrideDialogFieldAlwaysShowLookup(dialogFieldToDimensionValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override this method in order to initialize the dialog fields after the fields have been built.
    /// </summary>
    public void postBuild()
    {
        dialogFieldDimensionAttribute = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(LedgerMatrixReportWithDimContract_CN, parmDimensionAttribute));
        dialogFieldFromDimensionValue = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(LedgerMatrixReportWithDimContract_CN, parmFromDimensionValue));
        dialogFieldToDimensionValue = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(LedgerMatrixReportWithDimContract_CN, parmToDimensionValue));
        dialogLedgerMatrixId = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(LedgerMatrixReportWithDimContract_CN, parmLedgerMatrixId));

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>