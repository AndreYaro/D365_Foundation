<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetBalancesPeriodGERContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract class for the <c>AssetBalancesPeriod</c> GER report.
/// </summary>
[DataContractAttribute]
[SysOperationGroupAttribute('Period', "@SYS40", '1')]
[SysOperationContractProcessingAttribute(classStr(AssetBalancesPeriodGERUIBuilder))]
internal final class AssetBalancesPeriodGERContract extends ERFormatMappingRunBaseContract implements SysOperationValidatable
{
    private FromDate fromDate;
    private ToDate toDate;
    private Boolean printSetUp;
    private LedgerCurrencySelection ledgerCurrencySelection;
    private ERFormatMappingId formatMapping;
    private str query;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FromDate.
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationGroupMemberAttribute('Period'),
        SysOperationDisplayOrderAttribute('1'),
        Hookable(false)
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencySelection</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('CurrencySelection'),
        SysOperationLabelAttribute(literalstr("@SYS129076")),
        SysOperationHelpTextAttribute(literalstr("@FixedAssets:FA_Reports_CurrencySelectionText")),
        SysOperationDisplayOrderAttribute('3')
    ]
    internal LedgerCurrencySelection parmCurrencySelection(LedgerCurrencySelection _ledgerCurrencySelection = ledgerCurrencySelection)
    {
        ledgerCurrencySelection = _ledgerCurrencySelection;
        return ledgerCurrencySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate.
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationGroupMemberAttribute('Period'),
        SysOperationDisplayOrderAttribute('2'),
        Hookable(false)
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormatMapping</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FormatMapping'),
        SysOperationLabelAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationHelpTextAttribute(literalstr("@ElectronicReporting:FormatMapping"))
    ]
    internal ERFormatMappingId parmFormatMapping(ERFormatMappingId _formatMapping = formatMapping)
    {
        formatMapping = _formatMapping;
        return formatMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrint</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Print.
    /// </summary>
    /// <param name="_print">
    /// The new value of the datacontract parameter Print; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Print.
    /// </returns>
    [
        DataMemberAttribute('Print'),
        Hookable(false)
    ]
    public Boolean parmPrint(Boolean _print = printSetUp)
    {
        printSetUp = _print;
        return printSetUp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the <C>ledgerCurrencySelection</C> parameter as a string such that it can be mapped in GER.
    /// </summary>
    /// <returns>
    /// The value of the <C>ledgerCurrencySelection</C> parameter as a string.
    /// </returns>
    [Hookable(false)]
    public str parmCurrencyType()
    {
        if (ledgerCurrencySelection == LedgerCurrencySelection::Reporting)
        {
            return "@SYS29141";
        }
        else
        {
            return "@SYS83782";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the report parameters.
    /// </summary>
    /// <returns>
    ///    true if no errors; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean validate()
    {
        boolean isValid = true;

        if (!formatMapping)
        {
            isValid = checkFailed(strFmt("@SYS26332", new SysDictType(extendedTypeNum(ERFormatMappingId)).label()));
        }

        if (isValid)
        {
            if (!fromDate)
            {
                isValid = checkFailed("@SYS91557");
            }
            else if (!toDate)
            {
                isValid = checkFailed("@SYS90868");
            }
            else if (toDate < fromDate)
            {
                isValid = checkFailed("@SYS312567");
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter query
    /// </summary>
    /// <param name="_query">
    /// The new value of the datacontract parameter query
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter query
    /// </returns>
    [
        DataMemberAttribute,
        AifQueryTypeAttribute('_query', querystr(AssetBalancesPeriod))
    ]
    internal str parmQuery(str _query = query)
    {
        query = _query;
        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>