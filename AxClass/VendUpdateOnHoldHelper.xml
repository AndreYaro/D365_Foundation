<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendUpdateOnHoldHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>VendUpdateOnHoldHelper</c> is a helper class to update vendor hold status asynchronously.
/// </summary>
internal final class VendUpdateOnHoldHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateOnHoldAsync</Name>
				<Source><![CDATA[
    internal static void updateOnHoldAsync(container _vendRecords,
        CustVendorBlocked _blocked,
        VendBlockedReleaseDate _releasedDate,
        boolean _applyAll,
        boolean _displayInfo = false,
        ReasonCode _reasonCode = '')
    {
        container parameters = [_vendRecords, _blocked, _releasedDate, _applyAll, _displayInfo, _reasonCode];

        runAsync(classNum(VendUpdateOnHoldHelper),
            staticMethodStr(VendUpdateOnHoldHelper, updateOnHoldAsyncRunner),
            parameters,
            System.Threading.CancellationToken::None,
            classNum(VendUpdateOnHoldHelper),
            staticMethodStr(VendUpdateOnHoldHelper, updateOnHoldCallback));
        Info(strFmt("@SCM:HoldStatusOfTheSelectedVendorsIsNowBeingUpdated"));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOnHoldAsyncRunner</Name>
				<Source><![CDATA[
    private static void updateOnHoldAsyncRunner(container _parameters)
    {
        setPrefix("@SCM:UpdatingVendorHoldStatus");
        VendTable::updateOnHold(conPeek(_parameters, 1),
            conPeek(_parameters, 2),
            conPeek(_parameters, 3),
            conPeek(_parameters, 4),
            conPeek(_parameters, 5),
            conPeek(_parameters, 6));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOnHoldCallback</Name>
				<Source><![CDATA[
    private static void updateOnHoldCallback(AsyncTaskResult _taskResult)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>