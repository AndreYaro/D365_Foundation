<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMCreateDialog</Name>
	<SourceCode>
		<Declaration><![CDATA[
class BOMCreateDialog
{
    protected Dialog        dialog;

    protected DialogField   fieldBOMFormulaId;
    protected DialogField   fieldBOMName;
    protected DialogField   fieldMustCopy;
    protected DialogField   fieldInventSiteId;

    private BOMIdBase       bomFormulaId;
    private NoYes           mustCopy;
    private InventSiteId    inventSiteId;
    private Name            bomName;

    private boolean         isManual;
    private boolean         isFormula;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupFormulaId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Look up functionality for the formulas on BOM table.
    /// </summary>
    /// <param name="_formControl">
    /// The form control that runs the lookup.
    /// </param>
    /// <remarks>
    /// This method is called when the BOM dialog is of type formula
    /// and need to filter the lookup to only BOM versions.
    /// </remarks>
    private void lookupFormulaId(FormControl _formControl)
    {
        InventTable inventTable;

        inventTable.PmfProductType = PmfProductType::Formula;
        BOMTable::lookupFormulaId(_formControl, inventTable, '', '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDialog</Name>
				<Source><![CDATA[
    protected Dialog parmDialog(Dialog _dialog)
    {
        dialog = _dialog;
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the dialog.
    /// </summary>
    /// <returns>The dialog</returns>
    protected Dialog dialog()
    {
        str staticSecondInstructionText = isFormula ? "@SCM:BOMCreateStaticTextFormula" : "@SCM:BOMCreateStaticTextBOM";

        if (isFormula)
        {
            dialog.caption("@PRO242");
        }

        dialog.addText(staticSecondInstructionText);

        if (isManual)
        {
            fieldBOMFormulaId = dialog.addField(extendedtypestr(BOMIdBase), isFormula ? "@PRO101" : "@SYS22298");
            fieldBOMFormulaId.fieldControl().mandatory(true);
            fieldBOMFormulaId.lookupButton(1); // never display lookup            
            fieldBOMFormulaId.value(this.fieldBOMFormulaIdDefaultValue());
        }

        fieldBOMName = dialog.addField(extendedtypestr(Name), "@SYS7399", "@SYS50975");
        fieldMustCopy = dialog.addField(enumstr(NoYes), "@SYS12898", "@SYS50976");

        fieldInventSiteId = dialog.addField(extendedtypestr(InventSiteId), "@SYS103211", "@SYS103217");

        fieldInventSiteId.visible(this.isSiteVisible());

        dialog.formBuildDesign().dialogSize(0);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldBOMFormulaIdDefaultValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the default value of fieldBOMFormulaId.
    /// </summary>
    /// <returns> Returns the value the fieldBOMFormulaId will be defaulted with. </returns>
    protected str fieldBOMFormulaIdDefaultValue()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves values from the dialog after it is completed.
    /// </summary>
    /// <returns>true if values are retrieved successfully; otherwise, false.</returns>
    protected boolean getFromDialog()
    {
        boolean ret = true;

        inventSiteId = fieldInventSiteId.value();

        // when multisite is activated, validate that the site is valid or empty
        if (inventSiteId && !InventSite::exist(inventSiteId))
        {
            ret = checkFailed(strfmt("@SYS111931", inventSiteId));
            inventSiteId = '';
        }

        if (fieldBOMFormulaId)
        {
            bomFormulaId = fieldBOMFormulaId.value();
        }

        mustCopy = fieldMustCopy.value();
        bomName = fieldBOMName.value();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptCreateBOMDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the dialog with the BOM creation options and returns the user selection.
    /// </summary>
    /// <param name="_manual">
    /// A Boolean value indicating whether the BOM ID is manually filled in.
    /// </param>
    /// <param name="_pmfIsFormula">
    /// A Boolean value indicating whether the record is a BOM or formula.
    /// </param>
    /// <returns>
    /// A container with the new BOM ID, name, a flag indicating whether the BOM is copied or not and the site identifier,
    /// in the form [bomID, bomName, copyBOM, siteID].
    /// </returns>
    public container promptCreateBOMDialog(
        boolean _manual,
        boolean _pmfIsFormula = false)
    {
        isManual = _manual;
        isFormula = _pmfIsFormula;

        dialog = this.dialog();

        if (dialog.run())
        {
            if (this.getFromDialog())
            {
                return [bomFormulaId, bomName, mustCopy, inventSiteId];
            }
        }
                
        return connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BOMCreateDialog construct()
    {
        return new BOMCreateDialog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>BOMCreateDialog</c> class.
    /// </summary>
    /// <param name="_dialog">
    /// A <c>Dialog</c> instance used for actually prompting the user; optional.
    /// </param>
    /// <returns>
    /// A new <c>BOMCreateDialog</c> instance.
    /// </returns>
    public static BOMCreateDialog newDialog(Dialog _dialog = new Dialog("@SYS25027"))
    {
        BOMCreateDialog bomCreateDialog = BOMCreateDialog::construct();

        bomCreateDialog.parmDialog(_dialog);

        return bomCreateDialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSiteVisible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if site dialog field is visible.
    /// </summary>
    /// <returns>Returns true if site dialog field is visible; otherwise, false.</returns>
    protected boolean isSiteVisible()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>