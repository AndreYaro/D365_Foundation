<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocumentViewer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Initializes the appropriate source document originating record form to display from the <c>AccountingSourceExplorer</c> form.
/// </summary>
public abstract class SourceDocumentViewer
{
    SourceDocumentHeaderRecId sourceDocumentHeaderRecId;
    AccountingSourceExplorerTmp currentRecord;
    Args args;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canViewSourceDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the view source document form can be opened for a particular document.
    /// </summary>
    /// <param name="_sourceDocumentHeaderRecId">
    /// The <c>SourceDocumentHeader</c> record id of the accounting source explorer record.
    /// </param>
    /// <returns>
    /// True if the view source document form can be opened; otherwise, false.
    /// </returns>
    public static boolean canViewSourceDocument(
        SourceDocumentHeaderRecId       _sourceDocumentHeaderRecId)
    {
        SourceDocumentViewer            viewer;
        AccessRight                     sourceDocumentAccessRights;
        SecurityRights                  securityRights = SecurityRights::construct();
        boolean                         canViewSourceDocument = false;

        viewer = SourceDocumentViewer::initSourceDocumentViewer(_sourceDocumentHeaderRecId);

        if (viewer)
        {
            sourceDocumentAccessRights = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, viewer.parmMenuItemName(), curExt());
            canViewSourceDocument = (sourceDocumentAccessRights >= AccessRight::View);
        }

        return canViewSourceDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentHeaderRecId</Name>
				<Source><![CDATA[
    private SourceDocumentHeaderRecId parmSourceDocumentHeaderRecId(
        SourceDocumentHeaderRecId _sourceDocumentHeaderRecId = sourceDocumentHeaderRecId)
    {
        sourceDocumentHeaderRecId = _sourceDocumentHeaderRecId;
        return sourceDocumentHeaderRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSourceDocumentViewer</Name>
				<Source><![CDATA[
    private static SourceDocumentViewer initSourceDocumentViewer(
        SourceDocumentHeaderRecId       _sourceDocumentHeaderRecId)
    {
        SourceDocumentViewer            viewer;
        SourceDocumentHeader            sourceDocumentHeader;
        SourceDocumentExtensionKey      extensionKey;

        sourceDocumentHeader = SourceDocumentHeader::find(_sourceDocumentHeaderRecId);

        if (sourceDocumentHeader)
        {
            extensionKey = [sourceDocumentHeader.TypeEnumName, sourceDocumentHeader.TypeEnumValue];
            viewer = SourceDocumentExtensionFactory::newObject(classNum(SourceDocumentViewer), extensionKey, false);
        }

        return viewer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    protected abstract MenuItemName parmMenuItemName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setArgs</Name>
				<Source><![CDATA[
    protected abstract void setArgs()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>view</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display the originating form for the particular source document.
    /// </summary>
    protected void view()
    {
        args = new Args();
        this.setArgs();

        MenuFunction menuFunction;
        menuFunction = new  MenuFunction(this.parmMenuItemName(), MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewSourceDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows the source document originating form.
    /// </summary>
    /// <param name = "_sourceDocumentHeaderRecId">
    /// The <c>RecId</c> of the current <c>SourceDocumentHeader</c> record.
    /// </param>
    public static void viewSourceDocument(
        SourceDocumentHeaderRecId       _sourceDocumentHeaderRecId)
    {
        SourceDocumentViewer            viewer;

        viewer = SourceDocumentViewer::initSourceDocumentViewer(_sourceDocumentHeaderRecId);

        if (viewer)
        {
            viewer.parmSourceDocumentHeaderRecId(_sourceDocumentHeaderRecId);
            viewer.view();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>