<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAdvRuleExe_PreTaxDedSettlement_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The asset advanced rule executor for pre-tax deduction settlement
/// </summary>
[AssetAdvancedRuleTypeAttribute_JP(enumStr(AssetAdvancedRuleType_PreTaxDeduction_JP), AssetAdvancedRuleType_PreTaxDeduction_JP::DepOverDownSettlement)]
class AssetAdvRuleExe_PreTaxDedSettlement_JP extends AssetAdvRuleExecutor_JP
{
    AssetAdvRuleContext_PreTaxDedSettle_JP  assetAdvRuleContext_PreTaxDedSettle;

    // The two sides of the settlement.
    AssetDepPreTaxDedProcessContext_JP  assetDepPreTaxDedProcessContext_Over;
    AssetDepPreTaxDedProcessContext_JP  assetDepPreTaxDedProcessContext_Under;

    #define.OverDepTypeItemId(1)
    #define.UnderDepTypeItemId(2)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addLog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds log
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// The context instance
    /// </param>
    protected void addLog(AssetDepPreTaxDedProcessContext_JP _assetDepPreTaxDedProcessContext)
    {
        AssetAdvRuleLogger_JP                   logger;
        AssetAdvRuleLogger_PreTaxDeduction_JP   preTaxDedLogger;

        logger = this.getLogger();

        if (logger)
        {
            if (logger is AssetAdvRuleLogger_PreTaxDeduction_JP)
            {
                preTaxDedLogger = logger as AssetAdvRuleLogger_PreTaxDeduction_JP;
                preTaxDedLogger.setAssetDepPreTaxDedProcessContext(_assetDepPreTaxDedProcessContext);
            }

            logger.save();
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>doRuleAction</Name>
				<Source><![CDATA[
    public boolean doRuleAction()
    {
        AssetAmount                             settlementAmount;
        AssetDepPreTaxDedProcessSettlement_JP   assetDepPreTaxDedProcessSettlement;

        settlementAmount = min(
            abs(assetDepPreTaxDedProcessContext_Over.editRemainingOverUnderAmount()),
            abs(assetDepPreTaxDedProcessContext_Under.editRemainingOverUnderAmount()));

        // Try to do the settlement
        if (assetDepPreTaxDedProcessContext_Over.addSettlementAmount(settlementAmount)
            && assetDepPreTaxDedProcessContext_Under.addSettlementAmount(-1 * settlementAmount))
        {
            ttsBegin;

            // Save settlement info
            assetDepPreTaxDedProcessSettlement.AssetDepPreTaxDedProcessContext_Over     = assetDepPreTaxDedProcessContext_Over.RecId;
            assetDepPreTaxDedProcessSettlement.AssetDepPreTaxDedProcessContext_Under    = assetDepPreTaxDedProcessContext_Under.RecId;
            assetDepPreTaxDedProcessSettlement.AccountingCurrencyAmount                 = settlementAmount;
            assetDepPreTaxDedProcessSettlement.insert();

            // Update context
            assetDepPreTaxDedProcessContext_Over.update();
            assetDepPreTaxDedProcessContext_Under.update();

            // Save log
            this.addLog(assetDepPreTaxDedProcessContext_Over);
            this.addLog(AssetDepPreTaxDedProcessContext_Under);

            ttsCommit;
        }
        else
        {
            return false;
        }

        return true;
    }
]]></Source>
			</Method>
			<Method>
				<Name>getOverDepType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets over depreciation type.
    /// </summary>
    /// <returns>
    /// Returns over depreciation type
    /// </returns>
    protected AssetDepType_JP getOverDepType()
    {
        AssetDepType_JP     ret;

        ret = assetAdvRuleType.getItemValue(#OverDepTypeItemId);

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>getUnderDepType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets under depreciation type.
    /// </summary>
    /// <returns>
    /// Returns under depreciation type
    /// </returns>
    protected AssetDepType_JP getUnderDepType()
    {
        AssetDepType_JP     ret;

        ret = assetAdvRuleType.getItemValue(#UnderDepTypeItemId);

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>initForConstruct</Name>
				<Source><![CDATA[
    protected void initForConstruct(AssetAdvRuleType_JP _assetAdvRuleType, AssetAdvRuleContext_JP _assetAdvRuleContext)
    {
        super(_assetAdvRuleType, _assetAdvRuleContext);

        assetAdvRuleContext_PreTaxDedSettle = _assetAdvRuleContext as AssetAdvRuleContext_PreTaxDedSettle_JP;

        // Init the 2 sides of settlement
        assetDepPreTaxDedProcessContext_Over    = assetAdvRuleContext_PreTaxDedSettle.getAssetDepPreTaxDedProcessContext(this.getOverDepType(), true);
        assetDepPreTaxDedProcessContext_Under   = assetAdvRuleContext_PreTaxDedSettle.getAssetDepPreTaxDedProcessContext(this.getUnderDepType(), true);
    }
]]></Source>
			</Method>
			<Method>
				<Name>isRuleMatched</Name>
				<Source><![CDATA[
    public boolean isRuleMatched()
    {
        boolean ret;

        if (assetDepPreTaxDedProcessContext_Over.editRemainingOverUnderAmount()     > 0
            && assetDepPreTaxDedProcessContext_Under.editRemainingOverUnderAmount() < 0)
        {
            ret = true;
        }
        else
        {
            ret = false;
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>doSettlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does settlement
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcess">
    /// The process instance
    /// </param>
    /// <param name="_assetId">
    /// The asset id
    /// </param>
    /// <param name="_bookId">
    /// The book id
    /// </param>
    public static void doSettlement(
        AssetDepPreTaxDedProcess_JP     _assetDepPreTaxDedProcess,
        AssetId                         _assetId,
        AssetBookId                     _bookId)
    {
        AssetAdvRuleContext_PreTaxDedSettle_JP      assetAdvRuleContext_PreTaxDedSettle;

        assetAdvRuleContext_PreTaxDedSettle = new AssetAdvRuleContext_PreTaxDedSettle_JP();
        assetAdvRuleContext_PreTaxDedSettle.parmAssetDepPreTaxDedProcess(_assetDepPreTaxDedProcess);
        assetAdvRuleContext_PreTaxDedSettle.parmAssetId(_assetId);
        assetAdvRuleContext_PreTaxDedSettle.parmBookId(_bookId);

        AssetAdvRuleExecutor_JP::executeRuleSet(
            assetAdvRuleContext_PreTaxDedSettle,
            AssetAdvancedRuleGroupType_JP::AssetDepPreTaxDeductionSettlement);
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>