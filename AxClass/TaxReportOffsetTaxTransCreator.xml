<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportOffsetTaxTransCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Initializes and saves an offsetting record for a given <c>TaxTrans</c>, as part of the tax settlement process.
/// </summary>
class TaxReportOffsetTaxTransCreator
{
    Voucher         voucher;
    TransDate       transactionDate;
    TaxPeriod       taxPeriod;
    TaxPeriodDate   fromDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructAndInit</Name>
				<Source><![CDATA[
    public static TaxReportOffsetTaxTransCreator constructAndInit(
        Voucher         _voucher,
        TransDate       _transactionDate,
        TaxPeriod       _taxPeriod,
        TaxPeriodDate   _fromDate)
    {
        TaxReportOffsetTaxTransCreator  taxReportOffsetTaxTransCreator = TaxReportOffsetTaxTransCreator::construct();
        taxReportOffsetTaxTransCreator.init(
            _voucher,
            _transactionDate,
            _taxPeriod,
            _fromDate
        );

        return taxReportOffsetTaxTransCreator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static TaxReportOffsetTaxTransCreator construct()
    {
        return new TaxReportOffsetTaxTransCreator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the class.
    /// </summary>
    /// <param name = "_voucher">The voucher for the offset tax record.</param>
    /// <param name = "_transactionDate">The transaction date for the offset tax record.</param>
    /// <param name = "_taxPeriod">The tax period for the offset tax record.</param>
    /// <param name = "_fromDate">The from date for the tax period for the offset tax record.</param>
    public void init(
        Voucher         _voucher,
        TransDate       _transactionDate,
        TaxPeriod       _taxPeriod,
        TaxPeriodDate   _fromDate)
    {
        this.voucher      = _voucher;
        this.transactionDate = _transactionDate;
        this.taxPeriod    = _taxPeriod;
        this.fromDate     = _fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initOffsetTaxTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the offset <c>TaxTrans</c> record.
    /// </summary>
    /// <param name = "_taxTrans">The primary <c>TaxTrans</c> record to create an offset for.</param>
    /// <returns>The offset <c>TaxTrans</c> record.</returns>
    protected TaxTrans initOffsetTaxTrans(TaxTrans _taxTrans)
    {
        TaxTrans        taxTransOffsetTrans;

        taxTransOffsetTrans.Voucher                 = voucher;
        taxTransOffsetTrans.TransDate               = transactionDate;
        taxTransOffsetTrans.Source                  = TaxModuleType::Tax;
        taxTransOffsetTrans.TaxCode                 = _taxTrans.TaxCode;
        taxTransOffsetTrans.TaxOrigin               = TaxOrigin::TaxReporting;
        taxTransOffsetTrans.TaxDirection            = _taxTrans.TaxDirection;
        taxTransOffsetTrans.TaxPeriod               = taxPeriod;
        taxTransOffsetTrans.CurrencyCode            = _taxTrans.CurrencyCode;
        taxTransOffsetTrans.TaxBaseAmountCur        = _taxTrans.TaxBaseAmountCur * -1;
        taxTransOffsetTrans.TaxBaseAmountRep        = _taxTrans.TaxBaseAmountRep * -1;
        taxTransOffsetTrans.TaxAmountCur            = _taxTrans.TaxAmountCur * -1;
        taxTransOffsetTrans.TaxAmountRep            = _taxTrans.TaxAmountRep * -1;
        taxTransOffsetTrans.TaxBaseAmount           = _taxTrans.TaxBaseAmount* -1;
        taxTransOffsetTrans.TaxBaseQty              = _taxTrans.TaxBaseQty * -1;
        taxTransOffsetTrans.TaxAmount               = _taxTrans.TaxAmount * -1;
        taxTransOffsetTrans.TaxInCostPrice          = _taxTrans.TaxInCostPrice * -1;
        taxTransOffsetTrans.TaxInCostPriceMST       = _taxTrans.TaxInCostPriceMST * -1;
        taxTransOffsetTrans.TaxInCostPriceCur       = _taxTrans.TaxInCostPriceCur * -1;
        taxTransOffsetTrans.TaxInCostPriceRep       = _taxTrans.TaxInCostPriceRep * -1;
        taxTransOffsetTrans.SourceCurrencyCode      = _taxTrans.SourceCurrencyCode;
        taxTransOffsetTrans.SourceBaseAmountCur     = _taxTrans.SourceBaseAmountCur * -1;
        taxTransOffsetTrans.SourceTaxAmountCur      = _taxTrans.SourceTaxAmountCur * -1;
        taxTransOffsetTrans.SourceRegulateAmountCur = _taxTrans.SourceRegulateAmountCur * -1;
        taxTransOffsetTrans.ExemptTax               = _taxTrans.ExemptTax;
        taxTransOffsetTrans.ExemptCode              = _taxTrans.ExemptCode;
        taxTransOffsetTrans.TaxValue                = _taxTrans.TaxValue;
        taxTransOffsetTrans.VATExemptPct            = _taxTrans.VATExemptPct;
        taxTransOffsetTrans.PrintCode               = _taxTrans.PrintCode;
        taxTransOffsetTrans.TaxRepCounter           = _taxTrans.TaxRepCounter;
        taxTransOffsetTrans.TaxID                   = _taxTrans.TaxID;
        taxTransOffsetTrans.PartyTaxId              = _taxTrans.PartyTaxId;
        taxTransOffsetTrans.ReverseCharge_W         = _taxTrans.ReverseCharge_W;
        taxTransOffsetTrans.EmptyTaxBaseForOutgoingTax_W = _taxTrans.EmptyTaxBaseForOutgoingTax_W;
        taxTransOffsetTrans.OriginTaxTransRecId = _taxTrans.RecId;

        return taxTransOffsetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistOffsetTaxTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert the offset <c>TaxTrans</c> record in the database.
    /// </summary>
    /// <param name = "_taxTransOffsetTrans">The offset <c>TaxTrans</c> record to insert.</param>
    /// <returns>The RecId of the inserted <c>TaxTrans</c> record.</returns>
    protected RecId persistOffsetTaxTrans(TaxTrans _taxTransOffsetTrans)
    {
        _taxTransOffsetTrans.insertTaxReporting(fromDate);

        return _taxTransOffsetTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveOffsetTaxTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes and saves an offsetting record for a given <c>TaxTrans</c>, as part of the tax settlement process.
    /// </summary>
    /// <param name = "_taxTrans">The <c>TaxTrans</c> record to be offset.</param>
    /// <returns>The recId of the created offsetting record.</returns>
    public RecId saveOffsetTaxTrans(TaxTrans _taxTrans)
    {
        TaxTrans        taxTransOffsetTrans;

        taxTransOffsetTrans.clear();
        taxTransOffsetTrans = this.initOffsetTaxTrans(_taxTrans);
        taxTransOffsetTrans.insert();

        return taxTransOffsetTrans.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>