<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocumentDistributionTaskProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SourceDocumentDistributionTaskProcessor extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the description of the class.
    /// </summary>
    /// <returns>Returns the description of the class</returns>
    [Hookable(false)]
    protected ClassDescription defaultCaption()
    {
        return "@SourceDocumentAccountingFramework:SourceDocumentDistributionBatchTaskCaption";
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAccountingFrameworkProcessorForDistributionTask</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static SourceDocumentDistributionTaskProcessor createAccountingFrameworkProcessorForDistributionTask()
    {
        return new SourceDocumentDistributionTaskProcessor(
            classStr(SourceDocumentDistributionTaskProcessor),
            identifierStr(distributeDocument),
            SysOperationExecutionMode::Synchronous);
    }

]]></Source>
			</Method>
			<Method>
				<Name>distributeDocument</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void distributeDocument(SourceDocumentDistributionTaskContract _sourceDocumentDistributionTaskContract)
    {
        const SourceDocumentProcessorCaller NullCaller = null;
        const boolean doAsynchronousLineTransition = false;

        ttsbegin;

        changecompany(_sourceDocumentDistributionTaskContract.parmDocumentDataAreaId())
        {
            SourceDocumentProcessorFacade::submitSourceDocumentLinesForHeader
            (
                SourceDocumentHeader::find(_sourceDocumentDistributionTaskContract.parmSourceDocumentHeaderRecId()).getSourceDocumentImplementation(),
                SourceDocumentLineAccountingStatus::FullyDistributed,
                NullCaller,
                curUserId(),
                doAsynchronousLineTransition
            );
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>