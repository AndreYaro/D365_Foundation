<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentSubmissionFilterPrepayments_SA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BusinessDocumentSubmissionFilterPrepayments_SA</c> class implements the IBusinessDocumentSubmissionFilter interface
///    to filter LedgerJournalTrans records before submission if prepayment is enabled for that for Saudi Arabian customers.
/// </summary>
using System.ComponentModel.Composition;

[Export(identifierstr(Dynamics.AX.Application.IBusinessDocumentSubmissionFilter))]
internal class BusinessDocumentSubmissionFilterPrepayments_SA implements IBusinessDocumentSubmissionFilter
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>filterBusinessDocumentsBeforeSubmission</Name>
				<Source><![CDATA[
    public void filterBusinessDocumentsBeforeSubmission(QueryBuildDataSource _qbds, TableId _tableId, BusinessDocumentSubmissionContract _dataContract)
    {
        if (this.isSACustomerSubmittingLedgerJournalRecord(_tableId))
        {
            findOrCreateRange_W(
                _qbds,
                fieldNum(LedgerJournalTrans, PREPAYMENT),
                queryValue(NoYes::Yes))
            .status(RangeStatus::Hidden);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSACustomerSubmittingLedgerJournalRecord</Name>
				<Source><![CDATA[
    private boolean isSACustomerSubmittingLedgerJournalRecord(TableId _tableId)
    {
        boolean isSACustomer =
            SysCountryRegionCode::isLegalEntityInCountryRegion([#isoSA]) && FeatureStateProvider::isFeatureEnabled(IntegrationTaxAuthoritiesSAFeature::instance());
        return isSACustomer && (_tableId == tableNum(LedgerJournalTrans));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>