<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetReservationLineSelectorContract_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetReservationLineSelectorContract_PSN</c> class is used to pass information to the budget reservation selector form when the form is being called from a relieving document.
/// </summary>
public class BudgetReservationLineSelectorContract_PSN
{
    Set                                     budgetReservationSet;
    SetEnumerator                           budgetReservationSetEnumerator;
    BudgetReservationRelievingDocument_PSN  budgetReservationRelievingDocument;
    AccountingDate                          accountingDate;
    AgreementLineRecId                      agreementLineRecId;
    boolean                                 isPurchaseAgreementLine;
    boolean                                 doShowEditableSelectorForm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addSelectedBudgetReservationLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the specified budget reservation line record ID to the set of selected budget reservation line record IDs.
    /// </summary>
    /// <param name="_budgetReservationLineRecId">
    /// The budget reservation line record ID to add to the set of selected budget reservation line record IDs.
    /// </param>
    public void addSelectedBudgetReservationLine(BudgetReservationRecId_PSN _budgetReservationLineRecId)
    {
        budgetReservationSet.add(_budgetReservationLineRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextBudgetReservationLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the next budget reservation record ID that the user selected and returns it, if there is one.
    /// </summary>
    /// <returns>
    /// The next selected budget reservation record ID if there is a record remaining; otherwise, zero.
    /// </returns>
    public BudgetReservationLineRecId_PSN getNextBudgetReservationLineRecId()
    {
        BudgetReservationLineRecId_PSN budgetReservationLineRecId;
    
        if (budgetReservationSetEnumerator.moveNext())
        {
            budgetReservationLineRecId = budgetReservationSetEnumerator.current();
        }
    
        return budgetReservationLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSingleBudgetReservationLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the record ID of the budget reservation line that has been selected by the user.
    /// </summary>
    /// <returns>
    /// The record ID of the budget reservation line selected by the user.
    /// </returns>
    /// <remarks>
    /// This method is intended to only be called in scenarios where a single record is expected to be selected.
    /// </remarks>
    public BudgetReservationLineRecId_PSN getSingleBudgetReservationLineRecId()
    {
        BudgetReservationLineRecId_PSN  budgetReservationLineRecId;
        SetEnumerator                   setEnumerator;
    
        Debug::assert(budgetReservationSet != null);
    
        if (budgetReservationSet != null && budgetReservationSet.elements() == 1)
        {
            // Set the values that the user selected on the budget reservation selector form.
            setEnumerator              = budgetReservationSet.getEnumerator();
            setEnumerator.moveNext();
            budgetReservationLineRecId  = setEnumerator.current();
        }
    
        return budgetReservationLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the budget reservation set enumerator to a new enumerator from the budget reservation set.
    /// </summary>
    public void initializeEnumerator()
    {
        budgetReservationSetEnumerator = budgetReservationSet.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        budgetReservationSet = new Set(typeName2Type(extendedTypeStr(BudgetReservationLineRecId_PSN)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDate</Name>
				<Source><![CDATA[
    public AccountingDate parmAccountingDate(AccountingDate _accountingDate = accountingDate)
    {
        accountingDate = _accountingDate;
    
        return accountingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementLineRecId</Name>
				<Source><![CDATA[
    public AgreementLineRecId parmAgreementLineRecId(AgreementLineRecId _agreementLineRecId = agreementLineRecId)
    {
        agreementLineRecId = _agreementLineRecId;
    
        return agreementLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetReservationRelievingDocument</Name>
				<Source><![CDATA[
    public BudgetReservationRelievingDocument_PSN parmBudgetReservationRelievingDocument(BudgetReservationRelievingDocument_PSN _budgetReservationRelievingDocument = budgetReservationRelievingDocument)
    {
        budgetReservationRelievingDocument = _budgetReservationRelievingDocument;
    
        return budgetReservationRelievingDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetReservationSet</Name>
				<Source><![CDATA[
    private Set parmBudgetReservationSet(Set _budgetReservationSet = budgetReservationSet)
    {
        if (_budgetReservationSet.typeId() != typeName2Type(extendedTypeStr(BudgetReservationLineRecId_PSN)))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    
        budgetReservationSet = _budgetReservationSet;
    
        return budgetReservationSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoShowEditableSelectorForm</Name>
				<Source><![CDATA[
    public boolean parmDoShowEditableSelectorForm(boolean _doShowEditableSelectorForm = doShowEditableSelectorForm)
    {
        doShowEditableSelectorForm = _doShowEditableSelectorForm;
    
        return doShowEditableSelectorForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPurchaseAgreementLine</Name>
				<Source><![CDATA[
    public boolean parmIsPurchaseAgreementLine(boolean _isPuchaseAgreementLine = isPurchaseAgreementLine)
    {
        isPurchaseAgreementLine = _isPuchaseAgreementLine;
    
        return isPurchaseAgreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and returns a new instance of the <c>BudgetResLineSelectorContract_PSN</c> class based on the specified parameters.
    /// </summary>
    /// <param name="_budgetReservationRelievingDocument">
    /// The relieving document type.
    /// </param>
    /// <param name="_accountingDate">
    /// The accounting date.
    /// </param>
    /// <param name="_agreementLineRecId">
    /// The record ID of an agreement line; optional.
    /// </param>
    /// <returns>
    /// A new instance of the <c>BudgetResLineSelectorContract_PSN</c> class.
    /// </returns>
    public static BudgetReservationLineSelectorContract_PSN newFromParameters(
        BudgetReservationRelievingDocument_PSN  _budgetReservationRelievingDocument,
        AccountingDate                          _accountingDate = dateNull(),
        AgreementLineRecId                      _agreementLineRecId = 0)
    {
        BudgetReservationLineSelectorContract_PSN budgetResLineSelectorContract = new BudgetReservationLineSelectorContract_PSN();
    
        budgetResLineSelectorContract.parmBudgetReservationRelievingDocument(_budgetReservationRelievingDocument);
        budgetResLineSelectorContract.parmAccountingDate(_accountingDate);
        budgetResLineSelectorContract.parmBudgetReservationSet(new Set(typeName2Type(extendedTypeStr(BudgetReservationLineRecId_PSN))));
        budgetResLineSelectorContract.parmAgreementLineRecId(_agreementLineRecId);
    
        return budgetResLineSelectorContract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>