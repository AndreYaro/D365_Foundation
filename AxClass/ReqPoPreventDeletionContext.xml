<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPoPreventDeletionContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqPoPreventDeletionContext</c> class declares a disposable context
/// which indicates that the specified planned order must not be deleted 
/// during planning or explosion even if the planned order is no longer covering any demand.
/// </summary>
internal final class ReqPoPreventDeletionContext implements System.IDisposable
{
    private static ReqPoPreventDeletionContext instance;
    private ReqPoPreventDeletionContext parentInstance;
    private InventTransRefId refId;
    private ReqRefType refType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        parentInstance = instance;
        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>ReqPoPreventDeletionContext</c>.
    /// </summary>
    /// <returns>
    /// An instance of <c>ReqPoPreventDeletionContext</c>.
    /// </returns>
    [Hookable(false)]
    internal static ReqPoPreventDeletionContext construct(InventTransRefId _inventTransRefId, ReqRefType _reqRefType)
    {
        var context = new ReqPoPreventDeletionContext();
        context.refId = _inventTransRefId;
        context.refType = _reqRefType;
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final void dispose()
    {
        instance = instance.parentInstance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeDeleted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether planned order can be deleted or not.
    /// </summary>
    /// <returns>True if it is safe to be removed; otherwise false.</returns>
    [Hookable(false)]
    internal static boolean canBeDeleted(InventTransRefId _inventTransRefId, ReqRefType _reqRefType)
    {
        ReqPoPreventDeletionContext currentInstance = instance;

        if (currentInstance)
        {
            while (currentInstance)
            {
                if (currentInstance.refId == _inventTransRefId
                    && currentInstance.refType == _reqRefType)
                {
                    return false;
                }

                currentInstance = currentInstance.parentInstance;
            }
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>