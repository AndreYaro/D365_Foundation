<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineUtils</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A utitlity class for tax model document line
/// </summary>
class TaxModelDocLineUtils
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isSupportReturnLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the document line supports return transaction besides normal transaction
    /// </summary>
    /// <param name = "_documentLine">
    /// The document line information.
    /// </param>
    /// <returns>
    /// True if it supports return transaction besides normal transaction
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected static boolean isSupportReturnLine(SalesPurchJournalLine _documentLine)
    {
        switch (_documentLine.SourceTableId)
        {
            case tableNum(PurchLine) :
            case tableNum(VendInvoiceTrans) :
            case tableNum(CustInvoiceTrans) :
            case tableNum(PurchParmLine) :
            case tableNum(SalesLine) :
            case tableNum(SalesParmLine) :
            case tableNum(VendInvoiceInfoLine) :
            case tableNum(PurchRFQLine) :
            case tableNum(PurchRFQParmLine) :
            case tableNum(VendRFQTrans) :
            case tableNum(VendPackingSlipTrans) :
                return true;
            default:
                return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSupportNormalLineOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the document line supports normal transaction only
    /// </summary>
    /// <param name = "_documentLine">
    /// The document line information.
    /// </param>
    /// <returns>
    /// True if it supports normal transaction only
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected static boolean isSupportNormalLineOnly(SalesPurchJournalLine _documentLine)
    {
        switch (_documentLine.SourceTableId)
        {
            case tableNum(CustInvoiceLine) :
            case tableNum(CustInvoiceLineTemplate) :
            case tableNum(InventJournalTrans) :
            case tableNum(InventQualityOrderTable) :
            case tableNum(InventTransferLine) :
            case tableNum(InventTransferParmLine) :
            case tableNum(LedgerJournalTrans) :
            case tableNum(LedgerJournalTrans_Project) :
            case tableNum(PurchReqLine) :
            case tableNum(SalesQuotationLine) :
            case tableNum(ProjItemTrans) :
            case tableNum(ProjEmplTrans) :
            case tableNum(ProjCostTrans) :
            case tableNum(ProdJournalBOM) :
            case tableNum(ProjOnAccTrans) :
            case tableNum(ProjRevenueTrans) :
            case tableNum(ProjTable) :
            case tableNum(ProdTable) :
            case tableNum(ProjJournalTrans) :
            case tableNum(ProjInvoiceTable) :
            case tableNum(TmpProjAdjustment) :
            case tableNum(TmpProjAdjustmentCreate) :
            case tableNum(BOMParmReportFinish) :
            case tableNum(SMAServiceOrderLine) :
            case tableNum(TaxEngineTaxJournalLine) :
            case tableNum(AgreementLine) :
            case tableNum(ProjAdvancedJournalLine):
            case tableNum(ProjAdvancedJournalLineTaxExtensionIN):
                return true;
            default:
                return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineDocLineType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine the document line type
    /// </summary>
    /// <param name = "_documentLine">
    /// The document line information.
    /// </param>
    /// <returns>
    /// <c>TaxModelDocLineType</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxModelDocLineType determineDocLineType(SalesPurchJournalLine _documentLine)
    {
        if (TaxModelDocLineUtils::isSupportNormalLineOnly(_documentLine))
        {
            return TaxModelDocLineType::Normal;
        }
        else if (TaxModelDocLineUtils::isSupportReturnLine(_documentLine))
        {
            return TaxModelDocLineType::Return;
        }
        else
        {
            return TaxModelDocLineType::Unknown;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>