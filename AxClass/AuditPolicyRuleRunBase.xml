<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AuditPolicyRuleRunBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AuditPolicyRuleRunBase</c> class is a <c>Runbase</c> class that displays the
///    <c>AuditPolicyRule</c> form.
/// </summary>
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
class AuditPolicyRuleRunBase extends RunBase
{
    SysQueryRun     queryrun;
    Args            args;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the <c>AuditPolicyRuleRunBase</c> class will include batch execution.
    /// </summary>
    /// <returns>
    ///    Always returns false.
    /// </returns>
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the dialog box.
    /// </summary>
    /// <returns>
    ///    The initialized dialog box.
    /// </returns>
    public Object dialog()
    {
        DialogRunbase dialog = Dialog::newFormnameRunbase(formstr(AuditPolicyRule), this);

        dialog = this.dialogInternal(dialog);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArgs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>Args</c> object.
    /// </summary>
    /// <returns>
    ///    The <c>Args</c> object.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Args getArgs()
    {
        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets class values to what is stored in the <c>xSysLastValue</c> class.
    /// </summary>
    /// <remarks>
    /// This method does not call the super method to make sure that values are not retrieved when a new
    /// instance of this class is created.
    /// </remarks>
    public void getLast()
    {
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>QueryRun</c> object to use the query on the <c>SysPolicySourceDocumentRule</c>
    ///    record.
    /// </summary>
    /// <remarks>
    ///    If the <c>QueryRun</c> object cannot initialize by using the query on the
    ///    <c>SysPolicySourceDocumentRule</c> record, it uses the query from the
    ///    <c>SysPolicyTypeSourceDocumentQuery</c> record.
    /// </remarks>
    private void initQuery()
    {
        Query                               query;
        SysPolicyRule                       policyRule = args.record();
        SysPolicySourceDocumentRule         auditRule;
        SysPolicySourceDocumentRuleType     sourceDocumentRuleType;
        Formrun                             formPolicy = args.caller();
        Object                              form;

        select firstonly PolicyTypeSourceDocumentQuery from sourceDocumentRuleType
            where sourceDocumentRuleType.RecId == str2int64(args.parm());

        if (policyRule)
        {
            auditRule = SysPolicySourceDocumentRule::find(policyRule.RecId);
        }
        else
        {
            if (formPolicy && formHasMethod(formPolicy, identifierstr(getPolicyIndex)))
            {
                form = formPolicy;
                policyRule.Policy = form.getPolicyIndex();
                args.record(policyRule);
            }
        }

        if (auditRule && SysQuery::isPackedOk(auditRule.QueryPacked))
        {
            queryrun = new SysQueryRun(auditRule.QueryPacked);
        }
        else
        {
            query = new Query(SysPolicyTypeSourceDocumentQuery::find(sourceDocumentRuleType.PolicyTypeSourceDocumentQuery).QueryName);
            if (query)
            {
                queryrun = new SysQueryRun(query);
            }
        }

        if (queryrun)
        {
            queryrun.promptAllowSave(false);
            queryrun.promptSaveQueryPrUser(false);
            queryrun.promptLoadLastUsedQuery(false);
            queryrun.promptShowCompany(false);

            switch (sourceDocumentRuleType.QueryClassification)
            {
                case QueryClassification::Aggregate:
                case QueryClassification::Duplicate:
                case QueryClassification::Sampling:
                    queryrun.promptShowAggregate(true);
                    break;
                default:
                    // Sets promptShowAggregate to false by default
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The constructor of the <c>AuditPolicyRuleRunBase</c> class.
    /// </summary>
    /// <param name="_args">
    ///    The <c>Args</c> object; optional.
    /// </param>
    void new(Args _args = null)
    {
        super();
        args = _args;
        this.initQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Packs the <c>SysQueryRun</c> object.
    /// </summary>
    /// <returns>
    ///    The packed object, as a container.
    /// </returns>
    public container pack()
    {
        return queryrun.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>QueryRun</c> object.
    /// </summary>
    /// <returns>
    ///    The <c>QueryRun</c> object.
    /// </returns>
    public QueryRun queryRun()
    {
        return queryrun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the instance of the <c>AuditPolicyRuleRunBase</c> class that is associated with the form.
    /// </summary>
    /// <returns>
    ///    The instance of the <c>AuditPolicyRuleRunBase</c> class that is associated with the form.
    /// </returns>
    RunBase runBase()
    {
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether to add the Select button to the dialog.
    /// </summary>
    /// <returns>
    ///    Always returns true.
    /// </returns>
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AuditPolicyRuleRunBase construct(Args _args)
    {
        return new AuditPolicyRuleRunBase(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ClassDescription description()
    {
        return "@SYS319400";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        AuditPolicyRuleRunBase auditPolicyRule = AuditPolicyRuleRunBase::construct(_args);

        auditPolicyRule.prompt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>