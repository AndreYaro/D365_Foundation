<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTableListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
class VendTableListPageInteraction extends ListPageInteraction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableInvoicesButton</Name>
				<Source><![CDATA[
    boolean enableInvoicesButton()
    {
        VendInvoiceJour vendInvoiceJour;

        select firstonly RecId from vendInvoiceJour
            where vendInvoiceJour.InvoiceAccount == this.vendTable().AccountNum;

        return (vendInvoiceJour.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableTemplateButton</Name>
				<Source><![CDATA[
    boolean enableTemplateButton()
    {
        return (this.vendTable().RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialized</Name>
				<Source><![CDATA[
    public void initialized()
    {
        boolean         useQualityManagement;
        boolean         useTotalPriceMatching;
        boolean         useInvoiceMatching;
        VendParameters  vendParameters;
        boolean         historyButtonsVisible;
        boolean         purchCycleEnabled;
        super();

        switch (this.listPage().listPageArgs().menuItemName())
        {
            case menuitemDisplayStr(VendTableDiverseListPage) :
                // Vendors Who Are Diverse
                this.listPage().caption("@SYS191281");
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_MinorityOwned), true);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_FemaleOwned), true);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_SmallBusiness), true);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_VeteranOwned), true);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_DisabledOwned), true);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_HUBZone), true);
                break;
            case menuitemDisplayStr(VendTableHoldListPage) :
                // Vendors on Hold
                this.listPage().caption("@SYS117453");
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_CreditMax), true);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_BlockedReleaseDate), true);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_Phone), false);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_PhoneLocal), false);
                break;
            case menuitemDisplayStr(VendTablePastDueListPage) :
                // Vendors Past Due
                this.listPage().caption("@SYS117454");
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_CreditMax), true);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_Phone), false);
                this.listPage().listPageFieldVisible(formControlStr(VendTableListPage, VendTable_PhoneLocal), false);
                break;
        }

        // Enable non conformace button only if quality management is turned on
        useQualityManagement = InventParameters::find().UseQualityManagement;
        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, nonConformance), useQualityManagement);

        vendParameters = VendParameters::find();

        useTotalPriceMatching = vendParameters.UseTotalPriceMatching;
        useInvoiceMatching = vendParameters.editUseInvoiceMatching();
        purchCycleEnabled = PurchParameters::find().PurchaseCycle;
        historyButtonsVisible = vendParameters.editUseInvoiceMatching(false) == NoYes::Yes;

        // Hide totals tolerance button if turned off in AP setup
        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, vendTotalPriceTolerance), useTotalPriceMatching);

        // enable the matching policy and price tolerance only if use invoice matching is on
        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, matchingPolicy), useInvoiceMatching);
        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, priceTolerance), useInvoiceMatching);

        // enable purchasing cycle menu item button
        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, purchaseCycle), purchCycleEnabled);

        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, invoiceHistory), historyButtonsVisible);
        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, approvalJournalHistory), historyButtonsVisible);

        //enable prepayment group when posting definition is disabled
        this.listPage().actionPaneControlEnabled(formControlStr(VendTableListPage, advance), !LedgerParameters::find().JournalizingDefinitionEnableValue);

        //<GEEU>
        if (VendAdvanceInvoice::isDeactivated())
        {
            this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, advance), false);
        }
        //</GEEU>

        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, AddToOutlookContacts), !smmOutlookSyncDeprecationHandler::isOutlookSyncDisabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    public void initializeQuery(Query _query)
    {
        DirPartyContactInfoView::updateQueryListPage(_query);
        super(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializing</Name>
				<Source><![CDATA[
    public void initializing()
    {
        super();

        switch (this.listPage().listPageArgs().menuItemName())
        {
            case menuitemDisplayStr(VendTableDiverseListPage) :
                this.listPage().modeledQueryName(queryStr(VendTableDiverseListPage));
                break;
            case menuitemDisplayStr(VendTableHoldListPage) :
                this.listPage().modeledQueryName(queryStr(VendTableHoldListPage));
                break;
            case menuitemDisplayStr(VendTablePastDueListPage) :
                this.listPage().modeledQueryName(queryStr(VendTablePastDueListPage));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    public void selectionChanged()
    {
        CatVendorChannel    catVendorChannel;
        boolean isVendorConfiguredForCatalogImport;
        boolean isVendorEnabledForCatalogImport;
        catVendorChannel = this.listPage().activeRecord(queryDataSourceStr(VendTableListPage, catVendorChannel));
        super();

        isVendorConfiguredForCatalogImport  = (catVendorChannel) ? true : false;
        isVendorEnabledForCatalogImport     = catVendorChannel.IsEnabled == NoYes::Yes ? true : false;

        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, configure), !isVendorConfiguredForCatalogImport);

        // Show enable button, when vendor is configured for catalog import and disabled.
        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, enable),
                                                                (!isVendorEnabledForCatalogImport && isVendorConfiguredForCatalogImport));

        // Show disable button, when vendor is configured for catalog import and enabled.
        this.listPage().actionPaneControlVisible(formControlStr(VendTableListPage, disable),
                                                                (isVendorEnabledForCatalogImport && isVendorConfiguredForCatalogImport));
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTable</Name>
				<Source><![CDATA[
    private VendTable vendTable()
    {
        return this.listPage().activeRecord(
            queryDataSourceStr(VendTableListPage, VendTable)) as VendTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>