<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementAutolinkHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This interface provides a mechanism that decouples dependencies on <c>AgreementLine</c> by providing helper
/// methods that can be overridden when appropriate.
/// </summary>
interface AgreementAutolinkHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findLineForAutoMatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the best <c>AgreementLine</c> to associate with the <c>SalesPurchLine</c>.
    /// </summary>
    /// <param name="_salesPurchLine">
    /// The <c>SalesPurchLine</c> to find the agreement lines for.
    /// </param>
    /// <param name="_checkLimits">
    /// A flag that indicates whether to check the agreed maximum and minimum amounts and remaining quantity or amount; optional.
    /// </param>
    /// <returns>
    /// The best <c>AgreementLine</c> among the lines of the specified agreement.
    /// </returns>
    /// <remarks>
    /// This method assumes that the respective sales or purchase header is already linked to an <c>AgreementLine</c>.
    /// </remarks>
    AgreementLine findLineForAutoMatch(SalesPurchLine _salesPurchLine, boolean _checkLimits)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the given <c>SalesPurchLine</c> with an <c>AgreementLine</c>.
    /// </summary>
    /// <param name="_salesPurchLine">
    /// The <c>SalesPurchLine</c> to initialize.
    /// </param>
    /// <param name="_agreementLine">
    /// The <c>AgreementLine</c> to intialize with.
    /// </param>
    void initFromAgreementLine(SalesPurchLine _salesPurchLine, AgreementLine _agreementLine)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLinkValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check whether the link to the current <c>AgreementLine</c> is still valid.
    /// </summary>
    /// <param name="_salesPurchLine">
    /// <c>SalesPurchLine</c> to validate.
    /// </param>
    /// <param name="_showInfoLog">
    /// A flag that indicates whether messages should be written to the infolog.
    /// </param>
    /// <returns>
    /// true if the link is still valid; otherwise false.
    /// </returns>
    /// <remarks>
    /// It is assumed that the given <c>SalesPurchLine</c> has an <c>AgreementLine</c> linked.
    /// </remarks>
    boolean isLinkValid(SalesPurchLine _salesPurchLine, boolean _showInfoLog)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>