<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ForecastExpand</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class ForecastExpand extends BudgetExpansion
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBeInsertedTestFields</Name>
				<Source><![CDATA[
    boolean canBeInsertedTestFields(BudgetMap test)
    {
        return super(test) || test.InventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFields</Name>
				<Source><![CDATA[
    public void setFields(BudgetMap newBudget, LedgerAllocateTrans allocateTrans)
    {
        if (!parentBudget.Qty)
        {
            throw(error("@SYS35234"));
        }

        if (PdsGlobal::pdsIsCWItem(parentBudget.ItemId))
        {
            // Catch Weight is driver for the calculation and the other units must follow
            newBudget.PdsCWQty = decround(parentBudget.PdsCWQty * accummulatedPercentProportion/100, 0)
                - accummulatedCWQuantity;

            newBudget.InventQty = PdsCatchWeight::inventQty(parentBudget.ItemId, newBudget.PdsCWQty);
            newBudget.Qty = PdsCatchWeight::inventQty(parentBudget.ItemId, newBudget.PdsCWQty, newBudget.UnitId);
        }
        else
        {
            newBudget.Qty = decround(parentBudget.Qty * accummulatedPercentProportion/100,
                    UnitOfMeasure::unitOfMeasureDecimalPrecision(UnitOfMeasure::unitOfMeasureIDBySymbol(newBudget.UnitId)))
                - accummulatedBudgetQuantity;

            newBudget.InventQty = decround(parentBudget.InventQty * accummulatedPercentProportion/100,
                    UnitOfMeasure::unitOfMeasureDecimalPrecision(UnitOfMeasure::unitOfMeasureIDBySymbol(newBudget.UnitId)))
                - accummulatedInventQuantity;
        }

        newBudget.Amount = CurrencyExchangeHelper::amount(parentBudget.Amount / parentBudget.Qty * newBudget.Qty, parentBudget.Currency);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
