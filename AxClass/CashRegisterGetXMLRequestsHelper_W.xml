<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashRegisterGetXMLRequestsHelper_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>CashRegisterGetXMLRequestsHelper_W</c> contains help methods
/// for processing XML files with Requests to Fiscal Service and Responses from it.
/// </summary>
public class CashRegisterGetXMLRequestsHelper_W
{
    private const str xmlRequestFileName = 'XmlRequest.xml';
    private const str xmlResponseFileName = 'XmlResponse.xml';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>downLoadXMLRequestResponse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Downloads files with response or request from Fiscal Service.
    /// </summary>
    /// <param name="_args">
    /// Parameters.
    /// </param>
    private void downLoadXMLRequestResponse(args _args)
    {
        CashRegisterWebRequestLog_W webRequestLog = _args.record();
        System.Xml.XmlDocument xml = new System.Xml.XmlDocument();
        System.IO.MemoryStream stream = new System.IO.MemoryStream();
        File file = new File();
        str fileOutputName;
        switch(_args.parmEnum())
        {
            case XMLRequestResponse::Request:
                fileOutputName = xmlRequestFileName;
                xml.LoadXml(webRequestLog.XMLRequest);
                break;

            case XMLRequestResponse::Response:
                fileOutputName = xmlResponseFileName;
                xml.LoadXml(webRequestLog.XMLResponse);
                break;
        }
        xml.Save(stream);
        stream.Seek(0, System.IO.SeekOrigin::Begin);
        File::SendFileToUser(stream, fileOutputName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    // <exception cref="Exception::Error">
    // Wrong types of parameters or wrong values of parameters.
    // </exception>
    public static void main(Args _args)
    {
        if (!_args || _args.parmEnumType() != enumNum(XMLRequestResponse)
            || _args.dataset() != tableNum(CashRegisterWebRequestLog_W))
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        CashRegisterGetXMLRequestsHelper_W helper = new CashRegisterGetXMLRequestsHelper_W();
        helper.downLoadXMLRequestResponse(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>