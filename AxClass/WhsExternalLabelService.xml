<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsExternalLabelService</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Net.Http;

internal final class WhsExternalLabelService extends WhsExternalServiceClient
{    
    private static const str LabelParamsName = 'label';
    private static const str LabelParamsPrinter = 'printer';
    private static const str LabelParamsLabelBody = 'body';

    private WHSSysCorpNetPrinters printer;
    private str labelBody;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WhsExternalLabelService construct()
    {
        return new WhsExternalLabelService();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWithPrinterAndLabel</Name>
				<Source><![CDATA[
    internal static WhsExternalLabelService newWithPrinterAndLabel(WHSSysCorpNetPrinters _printer, WhsLabelPrintCommand _labelPrintCommand)
    {
        if (!_printer.LabelPrintServiceInstance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        WhsExternalServiceInstance externalServiceInstance = WhsExternalServiceInstance::findByRecId(_printer.LabelPrintServiceInstance);
        WHSExternalServiceDefinition externalServiceDefinition = WHSExternalServiceDefinition::findByRecId(externalServiceInstance.ExternalServiceDefinition);
        WhsExternalServiceOperation labelPrintOperation = WhsExternalLabelService::determineLabelPrintOperationFromLabelType(externalServiceDefinition, _labelPrintCommand.parmLabelType());

        if (!labelPrintOperation)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }


        WhsExternalLabelService service = WhsExternalLabelService::construct()
                                            .withLabelPrintCommand(_labelPrintCommand)
                                            .withPrinter(_printer)
                                            .withExternalServiceInstance(externalServiceInstance)
                                            .withExternalServiceOperation(labelPrintOperation);

        return service;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineLabelPrintOperationFromLabelType</Name>
				<Source><![CDATA[
    private static WhsExternalServiceOperation determineLabelPrintOperationFromLabelType(WHSExternalServiceDefinition _externalServiceDefinition, WhsLabelPrintCommandType _labelType)
    {
        WhsExternalServiceOperationRecId labelPrintOperationRecId;

        switch (_labelType)
        {
            case WhsLabelPrintCommandType::ZPL:
                labelPrintOperationRecId = _externalServiceDefinition.LabelPrintOperation;
                break;

            case WhsLabelPrintCommandType::ExternalLabelPrintServiceCommand:
                labelPrintOperationRecId = _externalServiceDefinition.VariablesPrintOperation;
                break;
        }

        return WhsExternalServiceOperation::findByRecId(labelPrintOperationRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>withPrinter</Name>
				<Source><![CDATA[
    private WhsExternalLabelService withPrinter(WHSSysCorpNetPrinters _printer)
    {
        this.printer = _printer;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>withLabelPrintCommand</Name>
				<Source><![CDATA[
    private WhsExternalLabelService withLabelPrintCommand(WhsLabelPrintCommand _labelPrintCommand)
    {
        this.labelBody = _labelPrintCommand.parmLabelString();

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTranslatorForService</Name>
				<Source><![CDATA[
    protected WhsDocumentRoutingTranslator initTranslatorForService(WhsDocumentRoutingTranslator _newTranslator)
    {
        Map labelParams = new Map(Types::String, Types::String);
        labelParams.add(LabelParamsPrinter, this.printer.LabelPrintServicePrinterName);
        labelParams.add(LabelParamsLabelBody, this.labelBody);

        return _newTranslator.withParameterMap(labelParams, LabelParamsName);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>