<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTableDeliveryInformation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchLineDeliveryInformation</c> class is used for subscribing events regarding to 
/// delivery mode and delivery terms fields on <c>PurchTable</c> table.
/// </summary>
internal final class PurchTableDeliveryInformation
{    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>VendInvoiceTableToLineUpdate_convertPurchTableFieldToVendInvoiceDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribe to event regarding conversion purchase header fields to lines of vendor invoces, which skips delivery mode and delivery terms fields.
    /// There are no information on vendor invoices regarding to delivery modes and terms.
    /// </summary>
    [SubscribesTo(classStr(VendInvoiceTableToLineUpdate), staticDelegateStr(VendInvoiceTableToLineUpdate, convertPurchTableFieldToVendInvoiceDelegate))]
    public static void VendInvoiceTableToLineUpdate_convertPurchTableFieldToVendInvoiceDelegate(FieldId _purchTableFieldId, EventHandlerResult _result)
    {
        switch(_purchTableFieldId)
        {
            // These PO rolldown fields do not exist on an invoice
            case fieldNum(PurchTable, DlvMode):
            case fieldNum(PurchTable, DlvTerm):
                _result.result(0);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PurchTable2LineField_getFieldDescriptionDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribe to event to update delivery mode and delivery term information from header to lines.
    /// </summary>
    [SubscribesTo(classStr(PurchTable2LineField), delegateStr(PurchTable2LineField, getFieldDescriptionDelegate))]
    public static void PurchTable2LineField_getFieldDescriptionDelegate(FieldId _fieldId, EventHandlerResult _result)
    {
        switch (_fieldId)
        {
            case fieldnum(PurchTable, DlvTerm):
                _result.result(fieldid2pname(tablenum(PurchLine), fieldnum(PurchLine, DlvTerm)));
                break;
            case fieldnum(PurchTable, DlvMode):
                _result.result(fieldid2pname(tablenum(PurchLine), fieldnum(PurchLine, DlvMode)));
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>