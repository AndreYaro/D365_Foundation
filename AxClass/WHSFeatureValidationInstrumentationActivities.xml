<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSFeatureValidationInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for feature validation instrumentation logging.
/// </summary>
internal final class WHSFeatureValidationInstrumentationActivities extends FeatureManagementExtensionValidationInstrumentationActivities
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        super(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WHSFeatureValidationInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSFeatureValidationInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateEnableFeatureManagementState</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final SysInstrumentationActivityContext validateEnableFeatureManagementState(boolean _isEnabledByDefault)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'ValidateEnableFeatureManagementState');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty('ExtensionValidator.EnableByDefault', any2Str(_isEnabledByDefault));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatedEnableFeatureManagementState</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final void validatedEnableFeatureManagementState(SysInstrumentationActivityContext _activityContext, int _enableFeature)
    {
        _activityContext.addCustomProperty('ExtensionValidator.EnableFeature', any2Str(_enableFeature));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEnableFeatureManagementState</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final SysInstrumentationActivityContext insertEnableFeatureManagementState(boolean _isEnabledByDefault)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'InsertEnableFeatureManagementState');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty('ExtensionValidator.EnableByDefault', any2Str(_isEnabledByDefault));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertedEnableFeatureManagementState</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final void insertedEnableFeatureManagementState(SysInstrumentationActivityContext _activityContext, int _enableFeature)
    {
        _activityContext.addCustomProperty('ExtensionValidator.EnableFeature', any2Str(_enableFeature));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEnableFeatureManagementState</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final SysInstrumentationActivityContext updateEnableFeatureManagementState(boolean _isEnabledByDefault)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'UpdateEnableFeatureManagementState');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty('ExtensionValidator.EnableByDefault', any2Str(_isEnabledByDefault));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatedEnableFeatureManagementState</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final void updatedEnableFeatureManagementState(SysInstrumentationActivityContext _activityContext, int _enableFeature)
    {
        _activityContext.addCustomProperty('ExtensionValidator.EnableFeature', any2Str(_enableFeature));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>