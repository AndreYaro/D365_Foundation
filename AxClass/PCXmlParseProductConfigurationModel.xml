<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcXmlParseProductConfigurationModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCXmlParseProductConfigurationModel</c> class is responsible for parsing XML for the product
/// configuration model.
/// </summary>
class PcXmlParseProductConfigurationModel
{
    private PCInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[

        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void new()
    {
        logger = PCInstrumentationLogger::createLogger(classStr(PCXmlParseProductConfigurationModel));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Stores the session values included in the XML of the specified configuration session.
    /// </summary>
    /// <param name="_productConfigurationModel">
    /// The product configuration model.
    /// </param>
    /// <param name="_configuration">
    /// The product configuration session to store the values of the configuration.
    /// </param>
    /// <param name="_xmlContainer">
    /// The string that contains the XML.
    /// </param>
    /// <param name="_adaptorProductConfigurationModel">
    /// An instance of the <c>PCAdaptorProductConfigurationModel</c> class.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void parse(
        PCProductConfigurationModel         _productConfigurationModel,
        PCProductConfiguration              _configuration,
        str                                 _xmlContainer,
        PCAdaptorProductConfigurationModel  _adaptorProductConfigurationModel)
    {
        #PC
        PCClass                             rootComponent = PCClass::find(_productConfigurationModel.RootComponentClass);
        PCXmlParseReader                    xmlReader  = PCXmlParseReader::construct();
        Name                                rootComponentName;
        PCAdaptorRootComponent              adaptorRootComponent;

        PCXmlParseComponent                 parseComponent = PCXmlParseComponent::construct();

        using (var activityContext = logger.postRuntime().parseModelXml())
        {

            //initialize the reader
            xmlReader.initialize(_xmlContainer);
            xmlReader.readStartElement(#sessionElement);

            //all or nothing - single transaction
            ttsbegin;

            // get the name of the root component
            rootComponentName = EcoResCategoryTranslation::findByCategoryAndLanguage(rootComponent.RecId, LanguageTable::defaultLanguage()).FriendlyName;

            // default to system language if no translation exist in the client language
            rootComponentName = rootComponentName != '' ? rootComponentName : rootComponent.Name;

            // initialize root component of the adaptor data structure
            adaptorRootComponent = PCAdaptorRootComponent::construct(rootComponent, null, null);
            _adaptorProductConfigurationModel.setRootComponent(adaptorRootComponent);

            parseComponent.parseIL(rootComponent, xmlReader, null, rootComponentName, adaptorRootComponent);

            ttscommit;

            xmlReader.close();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static PCXmlParseProductConfigurationModel construct()
    {
        return new PCXmlParseProductConfigurationModel();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>