<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkInventoryTransactionQueryParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWorkInventoryTransactionQueryParameters</c> class encapsulates common parameters to be reused across various work inventory transaction queries.
/// </summary>
public final class WHSWorkInventoryTransactionQueryParameters
{
    private boolean isQueryFirstOnly = false;
    private boolean includeArchivedTransactions = false;
    private boolean includeWorkInventTransRecId = false; // not respected by WHSWorkInventoryTransactionQueryByUserActions

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFirstOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls if only the first result from the query is requested. Default is false - all the results are returned.
    /// </summary>
    /// <returns>
    /// true if only the first result from the query is requested; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean parmFirstOnly()
    {
        return isQueryFirstOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFirstOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls if only the first result from the query is requested. Default is false - all the results are returned.
    /// </summary>
    /// <param name = "_firstOnly">A boolean indicating if query should return just a single first result or many.</param>
    /// <returns>
    /// Current instance of the <c>WHSWorkInventoryTransactionQueryParameters</c> class so can chain the calls.
    /// </returns>
    [Hookable(false)]
    public WHSWorkInventoryTransactionQueryParameters setFirstOnly(boolean _firstOnly)
    {
        isQueryFirstOnly = _firstOnly;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeArchivedTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls if inventrory transactions which have been archived are requested. Default is false - archived inventory transactions are not returned.
    /// </summary>
    /// <returns>
    /// true if inclusion of archived inventory transactions in the result is requested; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean parmIncludeArchivedTransactions()
    {
        return includeArchivedTransactions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIncludeArchivedTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls if inventrory transactions which have been archived are requested. Default is false - archived inventory transactions are not returned.
    /// </summary>
    /// <param name = "_includeArchivedTransactions">A boolean indicating whether inventory transactions which have been archived are requested.</param>
    /// <returns>
    /// Current instance of the <c>WHSWorkInventoryTransactionQueryParameters</c> class so can chain the calls.
    /// </returns>
    [Hookable(false)]
    public WHSWorkInventoryTransactionQueryParameters setIncludeArchivedTransactions(boolean _includeArchivedTransactions)
    {
        includeArchivedTransactions = _includeArchivedTransactions;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeWorkInventTransRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls if work inventory transaction RecId is included. Default is true - work inventory transaction RecId is included.
    /// </summary>
    /// <returns>
    /// true if inclusion of work inventory transaction RecId in the result is requested; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean parmIncludeWorkInventTransRecId()
    {
        return includeWorkInventTransRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIncludeWorkInventTransRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls if work inventory transaction RecId is included. Default is true - work inventory transaction RecId is included.
    /// </summary>
    /// <param name = "_includeWorkInventTransRecId">A boolean indicating whether work inventory transaction RecId is included.</param>
    /// <returns>
    /// Current instance of the <c>WHSWorkInventoryTransactionQueryParameters</c> class so can chain the calls.
    /// </returns>
    [Hookable(false)]
    public WHSWorkInventoryTransactionQueryParameters setIncludeWorkInventTransRecId(boolean _includeWorkInventTransRecId)
    {
        includeWorkInventTransRecId = _includeWorkInventTransRecId;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WHSWorkInventoryTransactionQueryParameters construct()
    {
        return new WHSWorkInventoryTransactionQueryParameters();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>