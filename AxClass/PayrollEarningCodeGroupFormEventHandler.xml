<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollEarningCodeGroupFormEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PayrollEarningCodeGroupFormEventHandler</c> contains the event subscribers for the 
/// <c>PayrollEarningCodeGroup</c> form.
/// </summary>
public final class PayrollEarningCodeGroupFormEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>EarningCode_OnValidating</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the field earning code <c>onValidating</c> event to validate it.
    /// </summary>
    /// <param name="_sender">The data object context.</param>
    /// <param name="_e">The data field event args.</param>
    [FormDataFieldEventHandler(formDataFieldStr(PayrollEarningCodeGroup, PayrollEarningCodeGroupCode, EarningCode), FormDataFieldEventType::Validating)]
    public static void EarningCode_OnValidating(FormDataObject _sender, FormDataFieldEventArgs _e)
    {
        FormDataFieldCancelEventArgs cancelEvent = _e as FormDataFieldCancelEventArgs;
        PayrollEarningCodeGroupCode payrollEarningCodeGroupCode = _sender.datasource().formRun().dataSource(formDataSourceStr(PayrollEarningCodeGroup, PayrollEarningCodeGroupCode)).cursor() as PayrollEarningCodeGroupCode;

        boolean isValid = !cancelEvent.cancel();
            
        // Assigning an earning code to a group that is currently the Earning codes Basis group is not allowed
        if (PayrollEarningCode::checkAssignedBasisGroup(payrollEarningCodeGroupCode.EarningCode, payrollEarningCodeGroupCode.EarningCodeGroup))
        {
            isValid = checkFailed("@Payroll:TheEarningCodeGroupThatYouSelectedIsTheBasisEarningCodeGroup");
        }
            
        cancelEvent.cancel(!isValid);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>