<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsLocationWizardTableCtrl_Pick</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WmsLocationWizardTableCtrl_Pick extends WMSLocationWizardTableCtrl_NormalName
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkNotExistTmp</Name>
				<Source><![CDATA[
        public boolean checkNotExistTmp(
        Common     _cursor = null,
        boolean    onlySuper = false
        )
    {
        WMSLocationWizard   localLocationWizard = this.defaultDataParent() as WMSLocationWizard;
        WMSLocation         cursor = _cursor as WMSLocation;
        if (! super(cursor,onlySuper))
        {
            return false;
        }

        if (onlySuper)
        {
            return true;
        }

        if (! localLocationWizard.wmsLocationWizardTableCtrl_Buffer().checkNotExistTmp(cursor,true))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public Name description(int tableNo = 1)
    {
        if (tableNo != 1)
        {
            return super();
        }

        return "@SYS50242";
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableGridTab</Name>
				<Source><![CDATA[
        public boolean enableGridTab()
    {
        WMSLocationWizard   localLocationWizard = this.defaultDataParent() as WMSLocationWizard;
        InventLocation      inventLocation = InventLocation::find(this.inventLocationId());

        if (! super())
        {
            return false;
        }

        if (! localLocationWizard.hasLocationCoordinate())
        {
            return false;
        }

        if (inventLocation.wmsAisleNameActive && aisleFrom > aisleTo)
        {
            return false;
        }

        if (inventLocation.wmsRackNameActive && rackFrom > rackTo)
        {
            return false;
        }

        if (   inventLocation.wmsLevelNameActive
            && WMSLocationWizardTableCtrl_NormalName::isAll(shelfs,false))
        {
            return false;
        }

        if (   inventLocation.wmsPositionNameActive
            && WMSLocationWizardTableCtrl_NormalName::isAll(bins,false))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpTxt</Name>
				<Source><![CDATA[
        public HelpTxt helpTxt()
    {
        return "@SYS57526";
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sorting</Name>
				<Source><![CDATA[
        public Sorting sorting()
    {
        return 4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wmsLocationType</Name>
				<Source><![CDATA[
        WMSLocationType wmsLocationType()
    {
        return WMSLocationType::Pick;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static WMSLocationWizardTableCtrl_Pick construct()
    {
        WMSLocationWizardTableCtrl_Pick wmsLocationWizardTableCtrl_Pick = new WMSLocationWizardTableCtrl_Pick();

        return wmsLocationWizardTableCtrl_Pick;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWarehouseInformation</Name>
				<Source><![CDATA[
        static container getWarehouseInformation(InventLocationId _inventLocationId)
    {
        return WMSLocationWizardTableCtrl_NormalName::getWarehouseInformation(_inventLocationId, WMSLocationType::Pick);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromWizard</Name>
				<Source><![CDATA[
        static WMSLocationWizardTableCtrl_Pick newFromWizard(WMSLocationWizard wmsLocationWizard)
    {
        WMSLocationWizardTableCtrl_Pick wmsLocationWizardTableCtrl_Pick = WMSLocationWizardTableCtrl_Pick::construct();

        wmsLocationWizardTableCtrl_Pick.parmDefaultDataParent(wmsLocationWizard);
        return wmsLocationWizardTableCtrl_Pick;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>