<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleRetailParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>NumberSeqModuleRetailParameters</c> class is used to configure all the number sequences in the system.
/// </summary>
public class NumberSeqModuleRetailParameters extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures all the data types related to the Retail Parameters that are in use by the module.
    /// </summary>
    /// <remarks>
    /// Detailed description of how to setup references for number sequences can
    /// be found in method loadModule() on the 'father' class: numberSeqReference.
    /// </remarks>
    protected void loadModule()
    {
        NumberSeqDatatype dataType = NumberSeqDatatype::construct();

        // Store id (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailStoreId));
        dataType.parmReferenceHelp(literalStr("@RET3015"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(1);
        
        this.create(dataType);

        // Variant number (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailVariantId));
        dataType.parmReferenceHelp(literalStr("@RET4084"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(2);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // Gift card number (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailCreditVoucherId));
        dataType.parmReferenceHelp(literalStr("@RET4455"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(3);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // Credit voucher number (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailGiftCardId));
        dataType.parmReferenceHelp(literalStr("@RET4456"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(4);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // Offer number (scope is per LE)
        // This is used for form generated offer id. See <c>RetailPeriodicDiscount::numberSeqOfferId()</c>.
        dataType.parmDatatypeId(extendedTypeNum(RetailDiscountOfferId));
        dataType.parmReferenceHelp(literalStr("@RET4089"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(5);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // Mix and match group (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailMixAndMatchId));
        dataType.parmReferenceHelp(literalStr("@RET4090"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(6);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // Multibuy number (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailMultibuyDiscountId));
        dataType.parmReferenceHelp(literalStr("@RET4091"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(7);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // POS terminal ID (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailTerminalId));
        dataType.parmReferenceHelp(literalStr("@RET5939"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(8);

        this.create(dataType);

        // Offer discount code (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailDiscountCodeId));
        dataType.parmReferenceHelp(literalStr("@RET6306"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(9);

        this.create(dataType);

        // Massupdate worksheet number (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailMassUpdateWorksheetID));
        dataType.parmReferenceHelp(literalStr("@RET6400"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(10);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // Assortment id (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailAssortmentID));
        dataType.parmReferenceHelp(literalStr("@RET260935"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(11);

        this.create(dataType);

        // Kit Configuration Name (scope is global)
        datatype.parmDatatypeId(extendedtypenum(RetailKitConfigurationName));
        datatype.parmReferenceHelp(literalstr("@SYS53852"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(12);

        this.create(datatype);

        // Threshold number (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailThresholdDiscountId));
        dataType.parmReferenceHelp(literalStr("@REX1152"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(13);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // Retail loyalty card number (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailLoyaltyCardNumber));
        dataType.parmReferenceHelp(literalStr("@RET5940"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(14);

        this.create(dataType);

        // Kit Order Name (scope is global)
        datatype.parmDatatypeId(extendedtypenum(RetailKitAssemblyOrderName));
        datatype.parmReferenceHelp(literalstr("@REX4161379"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(15);
        this.create(datatype);

        // Retail loyalty adjustment Id (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailLoyaltyAdjustmentId));
        dataType.parmReferenceHelp(literalStr("@REX4520026"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(16);
        this.create(dataType);

        //RetailLabelChangeJournalId (scope is per LE)
        dataType.parmdataTypeId(extendedtypenum(RetailLabelChangeJournalId));
        dataType.parmreferenceHelp(literalStr("@SYP4880931"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmsortField(17);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        //RetailChannelId (scope is global)
        dataType.parmdataTypeId(extendedtypenum(RetailChannelId));
        dataType.parmreferenceHelp(literalStr("@Retail:RetailChannelId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmsortField(18);
        this.create(dataType);

        // RetailCatalogId (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailCatalogId));
        dataType.parmReferenceHelp(literalStr("@Retail:CatalogId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(19);
        this.create(dataType);

        // RetailDeviceId (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailDeviceId));
        dataType.parmReferenceHelp(literalStr("@REX4520300"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(20);
        this.create(dataType);

        // RetailCouponNumber (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailCouponNumber));
        dataType.parmReferenceHelp(literalStr("@Retail:RetailCouponNumberSequence"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(21);        

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // RetailCouponCodeId (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailCouponCodeId));
        dataType.parmReferenceHelp(literalStr("@Retail:RetailCouponCodeNumberSequence"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(22);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        //RetailGrandTotalJournalId (scope is per LE)
        dataType.parmdataTypeId(extendedtypenum(RetailGrandTotalJournalId));
        dataType.parmReferenceLabel(literalStr("@RetailGrandTotalJournal:PeriodGrandTotalJournal"));
        dataType.parmreferenceHelp(literalStr("@RetailGrandTotalJournal:PeriodGrandTotalJournal"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmsortField(23);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // RetailFiscalIntegrationFunctionalityProfileId (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailFiscalIntegrationFunctionalityProfileId));
        dataType.parmReferenceLabel(literalStr("@RetailFiscalIntegration:FiscalFunctionalProfileNumber"));
        dataType.parmReferenceHelp(literalStr("@RetailFiscalIntegration:FiscalFunctionalProfileNumber"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(24);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // RetailFiscalIntegrationTechnicalProfileId (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailFiscalIntegrationTechnicalProfileId));
        dataType.parmReferenceLabel(literalStr("@RetailFiscalIntegration:FiscalTechnicalProfileNumber"));
        dataType.parmReferenceHelp(literalStr("@RetailFiscalIntegration:FiscalTechnicalProfileNumber"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(25);

        this.create(dataType);

        // RetailFiscalIntegrationRegistrationProcessId (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailFiscalIntegrationRegistrationProcessId));
        dataType.parmReferenceLabel(literalStr("@RetailFiscalIntegration:RegistrationProcessNumber"));
        dataType.parmReferenceHelp(literalStr("@RetailFiscalIntegration:RegistrationProcessNumber"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(26);

        this.create(dataType);

        // RetailFiscalIntegrationConnectorGroupId (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailFiscalIntegrationConnectorGroupId));
        dataType.parmReferenceLabel(literalStr("@RetailFiscalIntegration:FiscalConnectorGroupNumber"));
        dataType.parmReferenceHelp(literalStr("@RetailFiscalIntegration:FiscalConnectorGroupNumber"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(27);

        this.create(dataType);

        // Setup tax information name (scope is per LE)
        datatype.parmDatatypeId(extendedTypeNum(TaxInformationName));
        datatype.parmReferenceLabel(literalStr("@Tax:TaxInformationName"));
        datatype.parmReferenceHelp(literalStr("@Tax:TaxInformationNameHelp"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(99999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // RetailLoyaltyOtherActivityTypeId (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailLoyaltyOtherActivityTypeId));
        dataType.parmReferenceLabel(literalStr("@Retail:LoyaltyOtherActivityTypesId"));
        dataType.parmReferenceHelp(literalStr("@Retail:LoyaltyOthersActivityTypeId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(28);

        this.create(datatype);

        // RetailLoyaltyNonTransactionalActivityId (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailLoyaltyNonTransactionalActivityId));
        dataType.parmReferenceLabel(literalStr("@Retail:LoyaltyNonTransactionalActivityId"));
        dataType.parmReferenceHelp(literalStr("@Retail:LoyaltyNonTransactionID"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(29);

        this.create(datatype);

        // Retail safe number
        dataType.parmDatatypeId(extendedTypeNum(RetailSafeNumber));
        dataType.parmReferenceLabel(literalStr("@Retail:SafeId"));
        dataType.parmReferenceHelp(literalStr("@Retail:SafeId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(30);

        this.create(dataType);

        // Retail client book (scope is per LE)
        dataType.parmDatatypeId(extendedTypeNum(RetailClientBookId));
        dataType.parmReferenceLabel(literalStr("@Retail:ClientBookId"));
        dataType.parmReferenceHelp(literalStr("@Retail:ClientBookIdHelp"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(31);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // RetailDocumentOperationId (scope is global)
        dataType.parmdataTypeId(extendedtypenum(RetailDocumentOperationId));
        dataType.parmReferenceLabel(literalStr("@RetailDocumentOperationLabels:RetailDocumentOperationIdType"));
        dataType.parmReferenceHelp(literalStr("@RetailDocumentOperationLabels:RetailDocumentOperationIdReferenceHelp"));
        dataType.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsManual(NoYes::No);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmsortField(32);

        // Per feature requirement - we are using global/shared scope for this number sequence instead of DataArea.
        this.create(dataType);

        // Retail Commerce Validator Id (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailCommerceValidatorId));
        dataType.parmReferenceLabel(literalStr("@Retail:RetailCommerceValidatorIdNumberSequenceLabel"));
        dataType.parmReferenceHelp(literalStr("@Retail:RetailCommerceValidatorIdNumberSequenceHelp"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(33);

        this.create(dataType);

        // Retail Commerce Validator Test Id (scope is global)
        dataType.parmDatatypeId(extendedTypeNum(RetailCommerceValidatorTestId));
        dataType.parmReferenceLabel(literalStr("@Retail:RetailCommerceValidatorTestIdNumberSequenceLabel"));
        dataType.parmReferenceHelp(literalStr("@Retail:RetailCommerceValidatorTestIdNumberSequenceHelp"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(34);

        this.create(dataType);        

        // Retail Offer Id(scope is per LE)
        // This is for data entity imported offer id.
        dataType.parmDatatypeId(extendedTypeNum(RetailOfferIdEx3));
        dataType.parmReferenceHelp(literalStr("@RetailPricing:RetailOfferIdEx3NumberSequenceHelpText"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(35);

        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        // NOTE TO ENG: When adding additional number sequences don't forget to update NumberSeqModuleRetailParametersTest
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence area.
    /// </summary>
    /// <returns>
    /// Area that the current application object is attached to.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::RetailParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Subribe to delegate method, all subclasses of NumberSeqApplicationModule should subscribes.
    /// </summary>
    /// <param name = "numberSeqModuleNamesMap">The <c>numberSeqModuleNamesMap</c> Number sequence module map.</param>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleRetailParameters), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>