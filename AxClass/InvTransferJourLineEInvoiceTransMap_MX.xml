<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InvTransferJourLineEInvoiceTransMap_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InvTransferJourLineEInvoiceTransMap_MX extends EInvoiceTransBaseMap_MX
{
    InventTransferJourLine inventTransferJourLine;
    InventTransferJour     inventTransferJour;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amount</Name>
				<Source><![CDATA[
    public LineAmount amount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountCur</Name>
				<Source><![CDATA[
    public LineAmount amountCur()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode currencyCode()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>customsDocDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>CustomsDocNumber</c> value of the posted document line.
    /// </summary>
    /// <returns>
    /// The <c>CustomsDocNumber</c> value of the posted document line.
    /// </returns>
    public CustomsDocDate_MX customsDocDate()
    {
        return eInvoiceTrans.CustomsDocDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customsDocNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>CustomsDocNumber</c> value.
    /// </summary>
    /// <returns>
    /// The <c>CustomsDocNumber</c> value.
    /// </returns>
    public CustomsDocNumber_MX customsDocNumber()
    {
        return eInvoiceTrans.CustomsDocNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customsName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>CustomsName</c> value of the posted document line.
    /// </summary>
    /// <returns>
    /// The <c>CustomsName</c> value of the posted document line.
    /// </returns>
    public CustomsName_MX customsName()
    {
        return eInvoiceTrans.CustomsName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountAmount</Name>
				<Source><![CDATA[
    public AmountCur discountAmount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountAmountMST</Name>
				<Source><![CDATA[
    public AmountMST discountAmountMST()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventTransferJourLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the class variables.
    /// </summary>
    /// <param name="_inventTransferJourLine">
    /// A <c>InventTransferJourLine</c> record.
    /// </param>
    protected void initInventTransferJourLine(InventTransferJourLine _inventTransferJourLine)
    {
        inventTransferJourLine.data(_inventTransferJourLine);
    
        eInvoiceTrans = EInvoiceTrans_MX::findByRef(inventTransferJourLine.TableId, inventTransferJourLine.RecId);
        eInvoiceJour  = EInvoiceJour_MX::find(eInvoiceTrans.RefEInvoiceJourRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs specific initialization code.
    /// </summary>
    /// <param name="_originalJournalLine">
    /// A <c>InventTransferJour</c> record.
    /// </param>
    protected void initLine(Common _originalJournalLine)
    {
        this.initInventTransferJourLine(_originalJournalLine);
    
        inventTransferJour = inventTransferJourLine.inventTransferJour_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventTransId</c> value from the posted document line.
    /// </summary>
    /// <returns>
    /// The <c>InventTransId</c> value of the original document line.
    /// </returns>
    public InventTransId inventTransId()
    {
        return inventTransferJourLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the item ID from the posted document line.
    /// </summary>
    /// <returns>
    /// The posted document line item ID.
    /// </returns>
    public ItemId itemId()
    {
        return inventTransferJourLine.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the item name of original posted document.
    /// </summary>
    /// <returns>
    /// The posted document line item name.
    /// </returns>
    public ItemFreeTxt itemName()
    {
        InventTable        inventTable;
        LanguageId         languageId = CompanyInfo::languageId();
        ItemFreeTxt        ret;
        EcoResDescription  description;
    
        select firstOnly inventTable
            where inventTable.ItemId == inventTransferJourLine.ItemId;
    
        ret = inventTable.productName(languageId);
        description = inventTable.productDescription(languageId);
    
        if (description)
        {
            if (ret)
            {
                ret += '-';
            }
            ret += description;
        }
    
        ret =  Global::strLRTrim(ret);
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupTransList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the list of <c>MarkupTrans</c> records that are related to each invoice line.
    /// </summary>
    /// <returns>
    /// A list of <c>MarkupTrans</c> records.
    /// </returns>
    public List markupTransList()
    {
        List list = new List(Types::Record);
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>productCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a product code according to SAT classification.
    /// </summary>
    /// <returns>
    /// A product code according to SAT classification.
    /// </returns>
    public EInvoiceExtCodeId_MX productCode()
    {
        InventTable  inventTable;
    
        select firstOnly satCodeId_MX from inventTable
            where inventTable.ItemId == inventTransferJourLine.ItemId;
    
        return  inventTable.satCodeId_MX;
    }

]]></Source>
			</Method>
			<Method>
				<Name>propertyNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the property number information about the posted document line.
    /// </summary>
    /// <returns>
    /// The property number information about the posted document line.
    /// </returns>
    public PropertyNumber_MX propertyNumber()
    {
        return eInvoiceTrans.PropertyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the quantity of posted document line.
    /// </summary>
    /// <returns>
    /// The posted document line quantity.
    /// </returns>
    public Qty qty()
    {
        return inventTransferJourLine.QtyShipped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceRecId</Name>
				<Source><![CDATA[
    public RefRecId sourceRecId()
    {
        return inventTransferJourLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceTableId</Name>
				<Source><![CDATA[
    public RefTableId sourceTableId()
    {
        return inventTransferJourLine.TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the unit ID of the posted document line.
    /// </summary>
    /// <returns>
    /// The posted document line unit ID.
    /// </returns>
    public UnitOfMeasureSymbol unit()
    {
        return inventTransferJourLine.UnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPrice</Name>
				<Source><![CDATA[
    public SalesPrice unitPrice()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPriceMST</Name>
				<Source><![CDATA[
    public SalesPrice unitPriceMST()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>uomCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a unit of measure code according to SAT classification.
    /// </summary>
    /// <returns>
    /// A unit of measure code according to SAT classification.
    /// </returns>
    public EInvoiceExtCodeId_MX uomCode()
    {
        return UnitOfMeasure_W::findByUnitOfMeasure(UnitOfMeasure::findBySymbol(inventTransferJourLine.UnitId).RecId).satCodeId_MX;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>InvTransferJourLineEInvoiceTransMap_MX</c> class.
    /// </summary>
    /// <param name="_inventTransferJourLine">
    /// The original <c>InventTransferJourLine</c> record that will be used as the data source.
    /// </param>
    /// <returns>
    /// A new instance of the <c>InvTransferJourLineEInvoiceTransMap_MX</c> class.
    /// </returns>
    /// <remarks>
    ///  Use the following procedure to customize or extend the X class.
    ///  <list type="number">
    ///   <item>
    ///    <description>
    ///    Create a new class that derives from the <c>CustPackingSlipTransEInvoiceTransMap_MX</c> class.
    ///    </description>
    ///   </item>
    ///   <item>
    ///    <description>
    ///    Overlayer the <c>construct</c> method on the <c>CustPackingSlipTransEInvoiceTransMap_MX</c> class so
    ///    that it returns an instance of the derived class.
    ///    </description>
    ///   </item>
    ///   <item>
    ///    <description>
    ///    Override the methods from the <c>CustPackingSlipTransEInvoiceTransMap_MX</c> class that you want to
    ///    customize or extend in your derived class.
    ///    </description>
    ///   </item>
    ///  </list>
    ///   This procedure helps to ensure that your customizations are maintained if the base version of the
    ///  X class is changed, minimizing code conflicts during an upgrade. For more information, see <see cref="Best Practices for static construct Methods" />
    /// </remarks>
    public static InvTransferJourLineEInvoiceTransMap_MX construct(InventTransferJourLine _inventTransferJourLine)
    {
        InvTransferJourLineEInvoiceTransMap_MX   inventTransferJourLineMap;

        inventTransferJourLineMap = new InvTransferJourLineEInvoiceTransMap_MX();
        inventTransferJourLineMap.initLine(_inventTransferJourLine);

        return inventTransferJourLineMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a description of item.
    /// </summary>
    /// <returns>Item description.</returns>
    public str itemDescription()
    {
        InventTable inventTable = InventTable::find(inventTransferJourLine.ItemId);
        EcoResProduct product = EcoResProduct::find(inventTable.Product);
        return product.productDescription();
    }

]]></Source>
			</Method>
			<Method>
				<Name>weight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a weight of item.
    /// </summary>
    /// <returns>Gross weight.</returns>
    public ItemNetWeight weight()
    {
        InventTable inventTable = InventTable::find(inventTransferJourLine.ItemId);
        return inventTable.grossWeight();
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a total weight of the items of the line.
    /// </summary>
    /// <returns>Gross weight.</returns>
    public ItemNetWeight totalWeight()
    {
        InventTable inventTable = InventTable::find(inventTransferJourLine.ItemId);
        return inventTable.grossWeight() * inventTransferJourLine.QtyShipped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dropOffSpot</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns drop off spot.
    /// </summary>
    /// <returns>Spot id.</returns>
    public EInvoiceSiteID_MX dropOffSpot()
    {
        return eInvoiceTrans.DropOffSpot;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pickUpSpot</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns pick up spot.
    /// </summary>
    /// <returns>Spot id.</returns>
    public EInvoiceSiteID_MX pickUpSpot()
    {
        return eInvoiceTrans.PickUpSpot;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isHazardous</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows if the document is related with hazardous materials' transportation.
    /// </summary>
    /// <returns>
    /// Returns true if hazardous materials are used; otherwise false.
    /// </returns>
    public boolean isHazardous()
    {
        return eInvoiceTrans.IsHazardous == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hazardousMaterialType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the type of hazardous material.
    /// </summary>
    /// <returns>Hazardous material type.</returns>
    public EInvoiceExtCodeId_MX hazardousMaterialType()
    {
        return eInvoiceTrans.HazardousMaterialType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>containerType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the type of container.
    /// </summary>
    /// <returns>Container type.</returns>
    public EInvoiceExtCodeId_MX containerType()
    {
        return eInvoiceTrans.ContainerType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayHazardous</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether hazardous material tag must be displayed in xml document.
    /// </summary>
    /// <returns><c>NoYes</c> value.</returns>
    public NoYes displayHazardous()
    {
        return InventTable::find(inventTransferJourLine.ItemId).DisplayHazard_MX;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>