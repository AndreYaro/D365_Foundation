<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjGroupQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjGroupQueryBuilder</c> class is used to determine project group by project type.
/// </summary>
class ProjGroupQueryBuilder extends AifQueryBuilder
{
    ProjGroupQueryBuilderArgs args;
}

]]></Declaration>
		<Methods>
			<Method>
				<Name>getArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the args object from the class.
    /// </summary>
    /// <returns>
    /// The <c>ProjGroupQueryBuilderArgs</c> object stored in the class.
    /// </returns>
    private ProjGroupQueryBuilderArgs getArgs()
    {
        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    public void initialize()
    {
        QueryBuildDataSource qbds;
        query = new Query(queryStr(ProjGroupQuery));
        query.allowCrossCompany(true);
        query.addCompanyRange(this.getArgs().parmDataAreaId());

        qbds = query.dataSourceTable(tableNum(ProjGroup));

        SysQuery::findOrCreateRange(qbds, fieldNum(ProjGroup, ProjType)).value(SysQuery::value(this.getArgs().parmProjType()));
        queryRun = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setArgs</Name>
				<Source><![CDATA[
    public void setArgs (AifQueryBuilderArgs _args)
    {
        if (!_args || classIdGet(_args) != classNum(ProjGroupQueryBuilderArgs))
        {
            throw error("@SYS95118");
        }
        args = _args;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
