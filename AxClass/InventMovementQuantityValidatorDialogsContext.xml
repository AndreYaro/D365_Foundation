<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMovementQuantityValidatorDialogsContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class InventMovementQuantityValidatorDialogsContext implements System.IDisposable
{
    private static InventMovementQuantityValidatorDialogsContext instance;
    private boolean isLowerLimitDialogPrompted;
    private boolean isUpperLimitDialogPrompted;
    private boolean isMultiplicityDialogPrompted;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    public void Dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static InventMovementQuantityValidatorDialogsContext construct()
    {
        return new InventMovementQuantityValidatorDialogsContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static InventMovementQuantityValidatorDialogsContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsLowerLimitDialogPrompted</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean parmIsLowerLimitDialogPrompted(boolean _isLowerLimitDialogPrompted = isLowerLimitDialogPrompted)
    {
        isLowerLimitDialogPrompted = _isLowerLimitDialogPrompted;
        return isLowerLimitDialogPrompted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsUpperLimitDialogPrompted</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean parmIsUpperLimitDialogPrompted(boolean _isUpperLimitDialogPrompted = isUpperLimitDialogPrompted)
    {
        isUpperLimitDialogPrompted = _isUpperLimitDialogPrompted;
        return isUpperLimitDialogPrompted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsMultiplicityDialogPrompted</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean parmIsMultiplicityDialogPrompted(boolean _isMultiplicityDialogPrompted = isMultiplicityDialogPrompted)
    {
        isMultiplicityDialogPrompted = _isMultiplicityDialogPrompted;
        return isMultiplicityDialogPrompted;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>