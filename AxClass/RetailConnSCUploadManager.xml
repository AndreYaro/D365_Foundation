<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailConnSCUploadManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Process to perform the uploading of the data.
/// </summary>
class RetailConnSCUploadManager
{
    List bulkCopyList;
    List tempDBTableCursorList;

    int rowsAffected;
    str forceLocale;

    System.Threading.Thread currentThread;
    System.Globalization.CultureInfo currentCulture;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bulkCopyToTargetTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method performs the bulk copy of the incoming data to the actual target table.
    /// </summary>
    internal void bulkCopyToTargetTable()
    {
        // set to InvariantCulture
        currentThread = System.Threading.Thread::get_CurrentThread();
        currentCulture = currentThread.get_CurrentCulture();
        currentThread.set_CurrentCulture(System.Globalization.CultureInfo::GetCultureInfo(forceLocale));

        ListEnumerator bulkCopyListEnumerator = bulkCopyList.getEnumerator();

        while (bulkCopyListEnumerator.moveNext())
        {
            RetailConnSCDataBulkCopy bulkCopy = bulkCopyListEnumerator.current();
            bulkCopy.bulkCopyToTargetTable();
            this.rowsAffected += bulkCopy.getRowsAffected();
        }

        // restore culture
        currentThread.set_CurrentCulture(currentCulture);
        currentCulture = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bulkCopyToTemp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method performs the bulk copy of the incoming data to a staging temp table.
    /// </summary>
    public void bulkCopyToTemp()
    {
        // set to InvariantCulture
        currentThread = System.Threading.Thread::get_CurrentThread();
        currentCulture = currentThread.get_CurrentCulture();
        currentThread.set_CurrentCulture(System.Globalization.CultureInfo::GetCultureInfo(forceLocale));

        ListEnumerator bulkCopyListEnumerator = bulkCopyList.getEnumerator();
        ListEnumerator tempDBTableCursorEnumerator = tempDBTableCursorList.getEnumerator();

        while (bulkCopyListEnumerator.moveNext())
        {
            RetailConnSCDataBulkCopy bulkCopy = bulkCopyListEnumerator.current();

            tempDBTableCursorEnumerator.reset();

            while (tempDBTableCursorEnumerator.moveNext())
            {
                RetailConnSCUploadTmpCursor tempDBTableCursor = tempDBTableCursorEnumerator.current();

                if (bulkCopy.GetTargetTableName() == tempDBTableCursor.getTargetTableName())
                {
                    bulkCopy.bulkCopyToTemp(tempDBTableCursor.getTempDBTablePysicalName());
                }
            }
        }

        // restore culture
        currentThread.set_CurrentCulture(currentCulture);
        currentCulture = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clean up instance by releasing resource. Must be called after instance use.
    /// </summary>
    public void cleanUp()
    {
        ListEnumerator tempDBTableCursorEnumerator = tempDBTableCursorList.getEnumerator();

        while (tempDBTableCursorEnumerator.moveNext())
        {
            RetailConnSCUploadTmpCursor tempDBTableCursor = tempDBTableCursorEnumerator.current();
            tempDBTableCursor.cleanUp();
        }

        // will only reach here when exception happens during bulk copy, restore culture.
        if (currentCulture)
        {
            currentThread.set_CurrentCulture(currentCulture);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDataBulkCopy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method adds the name of the target table, temp table and the name of the physical table to the list and returns the
    /// instance of <c>RetailConnSCDataBulkCopy</c> class.
    /// </summary>
    /// <param name="targetTableName">Name of the target table. </param>
    /// <param name="columnNames">Name of the fields.</param>
    /// <param name="_tempDataFilePath">Server side data file path if data file is directly copied over.</param>
    /// <returns>Instance of <c>RetailConnSCDataBulkCopy</c> class.</returns>
    public RetailConnSCDataBulkCopy createDataBulkCopy(TableName targetTableName, container columnNames, str _tempDataFilePath = '')
    {
        RetailConnSCDataBulkCopy bulkCopy = new RetailConnSCDataBulkCopy(targetTableName, columnNames, _tempDataFilePath);

        bulkCopyList.addEnd(bulkCopy);

        ListEnumerator enumerator = tempDBTableCursorList.getEnumerator();

        boolean cursorFound = false;

        while (enumerator.moveNext())
        {
            RetailConnSCUploadTmpCursor tempDBTableCursor = enumerator.current();

            if (tempDBTableCursor.getTargetTableName() == targetTableName)
            {
                cursorFound = true;
                break;
            }
        }

        if (!cursorFound)
        {
            RetailConnSCUploadTmpCursor tempDBTableCursor = new RetailConnSCUploadTmpCursor(targetTableName);
            tempDBTableCursorList.addEnd(tempDBTableCursor);
        }

        return bulkCopy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertToRegularTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the records to the regular target tables.
    /// </summary>
    /// <returns>
    /// The count of records read from the <c>xmlDataReader</c>.
    /// </returns>
    public int64 insertToRegularTable()
    {
        ListEnumerator bulkCopyListEnumerator = bulkCopyList.getEnumerator();
        ListEnumerator tempDBTableCursorEnumerator = tempDBTableCursorList.getEnumerator();

        ttsbegin;

        while (bulkCopyListEnumerator.moveNext())
        {
            RetailConnSCDataBulkCopy bulkCopy = bulkCopyListEnumerator.current();

            tempDBTableCursorEnumerator.reset();

            while (tempDBTableCursorEnumerator.moveNext())
            {
                RetailConnSCUploadTmpCursor tempDBTableCursor = tempDBTableCursorEnumerator.current();

                if (bulkCopy.GetTargetTableName() == tempDBTableCursor.getTargetTableName())
                {
                    bulkCopy.insertIntoTargetTable(tempDBTableCursor.getTempDBTableCursor());

                    this.rowsAffected += bulkCopy.getRowsAffected();
                }
            }
        }

        ttscommit;

        return this.rowsAffected;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new instance of <c>RetailConnSCUploadManager</c> class.
    /// </summary>
    /// <param name="_forceLocale">
    /// Optional parameter to pass the value of locale while initializing the class.
    /// </param>
    public void new(str _forceLocale = '')
    {
        bulkCopyList = new List(Types::Class);
        tempDBTableCursorList = new List(Types::Class);

        rowsAffected = 0;
        forceLocale = _forceLocale;

        currentCulture = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramRowsAffected</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the number of rows affected.
    /// </summary>
    /// <param name = "_rowsAffected">The number of rows.</param>
    /// <returns>The number of rows.</returns>
    internal int paramRowsAffected(int _rowsAffected = rowsAffected)
    {
        rowsAffected = _rowsAffected;
        return rowsAffected;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>