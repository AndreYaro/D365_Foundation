<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendCoverPageController_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendCoverPageController_PSN</c> class serves as the controller for the <c>VendCoverPage</c> report.
/// </summary>
public class VendCoverPageController_PSN extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the ability to change a report contract before the report is executed.
    /// </summary>
    protected void preRunModifyContract()
    {
        #define.NumberOfSignatures('NumberOfSignatures')

        SrsReportRdlDataContract    dataContract;
        VendCoverPageLayout         vendCoverPageLayout;

        // Get the number of signatures setup by the user.
        select firstOnly NumberofSignatures from vendCoverPageLayout;

        dataContract = this.parmReportContract().parmRdlContract() as SrsReportRdlDataContract;

        // Set the value for number of signature parameter.
        dataContract.setValue(#NumberOfSignatures, enum2int(vendCoverPageLayout.NumberofSignatures));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>VendCoverPageController_PSN</c> class.
    /// </summary>
    /// <param name="_args">
    /// Arguments passed from menuitem.
    /// </param>
    /// <returns>
    /// An instance of the <c>VendCoverPageController_PSN</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static VendCoverPageController_PSN construct(Args _args)
    {
        VendCoverPageController_PSN controller = new VendCoverPageController_PSN();
        controller.parmArgs(_args);

        if (_args.menuItemName() == menuitemOutputStr(VendCoverPageLandscape))
        {
            controller.parmReportName(ssrsReportStr(VendCoverPage, LandscapeReport));
        }
        else
        {
            controller.parmReportName(ssrsReportStr(VendCoverPage, PortraitReport));
        }

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        VendCoverPageController_PSN::construct(_args).startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>