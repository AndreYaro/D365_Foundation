<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTransStatementSimContract_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
    DataContractAttribute,
    SysOperationGroupAttribute('Focuses', "@SYS83218", '1'),
    SysOperationGroupAttribute('Date', "@SYS7402", '2'),
    SysOperationGroupAttribute('PageLayout', "@SYS27406", '3'),
    SysOperationGroupAttribute('PrintOut', "@SYS12608", '4'),
    SysOperationGroupAttribute('Simulation', "@ExtendedItallianLocalization:Simulations", '5'),
    SysOperationContractProcessingAttribute(classstr(LedgerTransStatementSimUIBuilder_IT), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class LedgerTransStatementSimContract_IT implements SysOperationValidatable
{
    public DimensionsTransTableType dimensionsTransTableType;
    public LedgerReportCurrencySelection ledgerReportCurrencySelection;
    public boolean groupPerSec;
    public boolean salesTaxSpec;
    public boolean displayCompanyForLedgerAccount;
    public boolean offsetAccount;
    public boolean currencyTotal;
    public boolean emptyPeriods;
    public boolean withoutTrans;
    public boolean openingTrans;
    public boolean closingTrans;
    public boolean includeReversed;
    public TransDate fromDate;
    public TransDate toDate;
    public boolean newPage;
    public DimensionsLedgerTransSpecDim specification;
    public List postingLayers;
    public DateCode dateCode;
    public MainAccountNum mainAccountNum;
    public str reportTitle;
    public Name primaryDimensionFocus;
    public Name secondaryDimensionFocus;
    public str sysVersion;
    public DirPartyName userName;
    public boolean showTotals;
    public boolean showFooter;
    public NoYes includeSimulation;
    public SimulationJournalGroupId_IT simulationJournalGroupId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmClosingTrans</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ClosingTrans'),
        SysOperationLabelAttribute(literalstr("@GeneralLedger:IncludeAllClosingTransactions")),
        SysOperationHelpTextAttribute(literalstr("@SYS82258")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('09')
    ]
    public boolean parmClosingTrans(boolean _closingTrans = closingTrans)
    {
        closingTrans  = _closingTrans;
        return closingTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyTotal</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('CurrencyTotal'),
        SysOperationLabelAttribute(literalstr("@SYS62928")),
        SysOperationHelpTextAttribute(literalstr("@SYS83297")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('05')
    ]
    public boolean parmCurrencyTotal(boolean _currencyTotal = currencyTotal)
    {
        currencyTotal  = _currencyTotal ;
        return currencyTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateCode</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('DateCode'),
        SysOperationLabelAttribute(literalstr("@SYS22526")),
        SysOperationHelpTextAttribute(literalstr("@SYS60051")),
        SysOperationGroupMemberAttribute('Date'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public DateCode parmDateCode(DateCode _dateCode = dateCode)
    {
        dateCode = _dateCode;
        return dateCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayCompanyForLedgerAccount</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(DisplayCompanyForLedgerAccount))]
    public boolean parmDisplayCompanyForLedgerAccount(boolean _displayCompanyForLedgerAccount = displayCompanyForLedgerAccount)
    {
        displayCompanyForLedgerAccount = _displayCompanyForLedgerAccount;
        return displayCompanyForLedgerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmptyPeriods</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('EmptyPeriods'),
        SysOperationLabelAttribute(literalstr("@SYS1527")),
        SysOperationHelpTextAttribute(literalstr("@SYS24758")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('06')
    ]
    public boolean parmEmptyPeriods(boolean _emptyPeriods = emptyPeriods)
    {
        emptyPeriods  = _emptyPeriods ;
        return emptyPeriods;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS5209")),
        SysOperationHelpTextAttribute(literalstr("@SYS67")),
        SysOperationGroupMemberAttribute('Date'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupPerSec</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('GroupPerSec'),
        SysOperationLabelAttribute(literalstr("@SYS85873")),
        SysOperationHelpTextAttribute(literalstr("@SYS85874")),
        SysOperationGroupMemberAttribute('Focuses'),
        SysOperationDisplayOrderAttribute('5')
    ]
    public boolean parmGroupPerSec(boolean _groupPerSec = groupPerSec)
    {
        groupPerSec = _groupPerSec;
        return groupPerSec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeReversed</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IncludeReversed'),
        SysOperationLabelAttribute(literalstr("@SYS78625")),
        SysOperationHelpTextAttribute(literalstr("@SYS78627")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('10')
    ]
    public boolean parmIncludeReversed(boolean _includeReversed = includeReversed)
    {
        includeReversed  = _includeReversed;
        return includeReversed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewPage</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('NewPage'),
        SysOperationLabelAttribute(literalstr("@SYS15349")),
        SysOperationHelpTextAttribute(literalstr("@SYS85875")),
        SysOperationGroupMemberAttribute('PageLayout'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public boolean parmNewPage(boolean _newPage = newPage)
    {
        newPage = _newPage;
        return newPage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetAccount</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('OffsetAccount'),
        SysOperationLabelAttribute(literalstr("@SYS11162")),
        SysOperationHelpTextAttribute(literalstr("@SYS330996")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('04')
    ]
    public boolean parmOffsetAccount(boolean _offsetAccount = offsetAccount)
    {
        offsetAccount  = _offsetAccount;
        return offsetAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOpeningTrans</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('OpeningTrans'),
        SysOperationLabelAttribute(literalstr("@SYS4000403")),
        SysOperationHelpTextAttribute(literalstr("@SYS4000404")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('08')
    ]
    public boolean parmOpeningTrans(boolean _openingTrans = openingTrans)
    {
        openingTrans  = _openingTrans;
        return openingTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayers</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('PostingLayers'),
        SysOperationLabelAttribute(literalstr("@SYS10925")),
        SysOperationHelpTextAttribute(literalstr("@SYS1487")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('02'),
        AifCollectionTypeAttribute('return', Types::Enum, enumStr(CurrentOperationsTax))
    ]
    public List parmPostingLayers(List _postingLayers = postingLayers)
    {
        postingLayers = _postingLayers;
        return postingLayers;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrimaryDimensionFocus</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('PrimaryDimensionFocus'),
        SysOperationLabelAttribute(literalstr("@SYS329752")),
        SysOperationGroupMemberAttribute('Focuses'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public Name parmPrimaryDimensionFocus(Name _primaryDimensionFocus = primaryDimensionFocus)
    {
        primaryDimensionFocus = _primaryDimensionFocus;
        return primaryDimensionFocus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportTitle</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ReportTitle')
    ]
    public Str60 parmReportTitle(str _reportTitle = reportTitle)
    {
        reportTitle  = _reportTitle;
        return reportTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesTaxSpec</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('SalesTaxSpec'),
        SysOperationLabelAttribute(literalstr("@SYS54353")),
        SysOperationHelpTextAttribute(literalstr("@SYS83630")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('03')
    ]
    public boolean parmSalesTaxSpec(boolean _salesTaxSpec = salesTaxSpec)
    {
        salesTaxSpec  = _salesTaxSpec ;
        return salesTaxSpec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSecondaryDimensionFocus</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('SecondaryDimensionFocus'),
        SysOperationLabelAttribute(literalstr("@SYS329756")),
        SysOperationGroupMemberAttribute('Focuses'),
        SysOperationDisplayOrderAttribute('4')
    ]
    public Name parmSecondaryDimensionFocus(Name _secondaryDimensionFocus = secondaryDimensionFocus)
    {
        secondaryDimensionFocus = _secondaryDimensionFocus;
        return secondaryDimensionFocus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowFooter</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(ShowFooter))]
    public boolean parmShowFooter(boolean _showFooter = showFooter)
    {
        showFooter = _showFooter;
        return showFooter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowTotals</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(ShowTotals))]
    public boolean parmShowTotals(boolean _showTotals = showTotals)
    {
        showTotals = _showTotals;
        return showTotals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSpecification</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('Specification'),
        SysOperationLabelAttribute(literalstr("@SYS101254")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('01')
    ]
    public DimensionsLedgerTransSpecDim parmSpecification(DimensionsLedgerTransSpecDim _specification = specification )
    {
        specification  = _specification ;
        return specification ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSysVersion</Name>
				<Source><![CDATA[
    [DataMemberAttribute('SysVersion')]
    public Description255 parmSysVersion(str _sysVersion = sysVersion)
    {
        sysVersion = _sysVersion;
        return sysVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS14656")),
        SysOperationHelpTextAttribute(literalstr("@SYS67")),
        SysOperationGroupMemberAttribute('Date'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransaction</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('Transactions'),
        SysOperationLabelAttribute(literalstr("@SYS1084")),
        SysOperationHelpTextAttribute(literalstr("@SYS85872")),
        SysOperationGroupMemberAttribute('Focuses'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public DimensionsTransTableType parmTransaction(DimensionsTransTableType _dimensionsTransTableType = dimensionsTransTableType)
    {
        dimensionsTransTableType = _dimensionsTransTableType;
        return dimensionsTransTableType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencySelection</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('CurrencySelection'),
        SysOperationLabelAttribute(literalstr("@SYS7572")),
        SysOperationHelpTextAttribute(literalstr("@GLS105019")),
        SysOperationGroupMemberAttribute('Focuses'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public LedgerReportCurrencySelection parmCurrencySelection(LedgerReportCurrencySelection _ledgerReportCurrencySelection = ledgerReportCurrencySelection)
    {
        ledgerReportCurrencySelection = _ledgerReportCurrencySelection;
        return ledgerReportCurrencySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserName</Name>
				<Source><![CDATA[
    [DataMemberAttribute('UserName')]
    public DirPartyName parmUserName(DirPartyName _userName = userName)
    {
        userName = _userName;
        return userName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWithoutTrans</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('WithoutTrans'),
        SysOperationLabelAttribute(literalstr("@SYS7749")),
        SysOperationHelpTextAttribute(literalstr("@SYS83212")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('07')
    ]
    public boolean parmWithoutTrans(boolean _withoutTrans = withoutTrans)
    {
        withoutTrans  = _withoutTrans;
        return withoutTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the  parameters.
    /// </summary>
    /// <returns>
    /// true if all report parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;
        FiscalCalendarRecId calendarRecId = Ledger::fiscalCalendar(CompanyInfo::current());

        if (fromDate && toDate)
        {
            if (fromDate > toDate)
            {
                isValid = checkFailed(strfmt("@SYS55013", date2StrUsr(fromDate, DateFlags::FormatAll), date2StrUsr(toDate, DateFlags::FormatAll)));
            }

            TransDate fromDatePeriodStart = LedgerFiscalCalendar::findOpeningStartDateByDate(calendarRecId, fromDate);
            TransDate toDatePeriodStart = LedgerFiscalCalendar::findOpeningStartDateByDate(calendarRecId, toDate);

            if (fromDatePeriodStart != toDatePeriodStart)
            {
                isValid = checkFailed(strfmt("@SYS28745", year(fromDatePeriodStart), year(toDatePeriodStart)));
            }
        }

        recId primaryFocusRecId = DimensionHierarchy::findByTypeAndName(DimensionHierarchyType::Focus, this.parmPrimaryDimensionFocus()).RecId;
        recId secondaryFocusRecId = DimensionHierarchy::findByTypeAndName(DimensionHierarchyType::Focus, this.parmSecondaryDimensionFocus()).RecId;

        if (!primaryFocusRecId)
        {
            isValid = checkFailed("@SYS83202");
        }

        if (DimensionHierarchy::haveCommonAttributes(primaryFocusRecId, secondaryFocusRecId))
        {
            isValid = checkFailed("@SYS83203");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeSimulation</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('includeSimulation'),
        SysOperationLabelAttribute(literalstr("@ExtendedItallianLocalization:SimulationJournalTransactions")),
        SysOperationHelpTextAttribute(literalstr("@ExtendedItallianLocalization:IncludeSimulationJournals")),
        SysOperationGroupMemberAttribute('Simulation'),
        SysOperationDisplayOrderAttribute('01')
    ]
    public NoYes parmIncludeSimulation(NoYes _includeSimulation = includeSimulation)
    {
        includeSimulation  = _includeSimulation;
        return includeSimulation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSimulationJournalGroupId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('SimulationJournalGroupId'),
        SysOperationLabelAttribute(literalstr("@ExtendedItallianLocalization:SimulationJournalNameGroup")),
        SysOperationHelpTextAttribute(literalstr("@ExtendedItallianLocalization:SimulationJournalNameGroup")),
        SysOperationGroupMemberAttribute('Simulation'),
        SysOperationDisplayOrderAttribute('02')
    ]
    public SimulationJournalGroupId_IT parmSimulationJournalGroupId(SimulationJournalGroupId_IT _simulationJournalGroupId = simulationJournalGroupId)
    {
        simulationJournalGroupId  = _simulationJournalGroupId ? _simulationJournalGroupId : ' '; //to allow empty values on parameters
        return simulationJournalGroupId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>