<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineSalesLineReturnImpl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The tax model class for <c>SalesLine</c>.
/// </summary>
[
TaxModelDocumentLineReturnAttribute(tableStr(SalesLine), DispositionAction::Credit),
TaxModelDocumentLineReturnAttribute(tableStr(SalesLine), DispositionAction::CreditOnly),
TaxModelDocumentLineReturnAttribute(tableStr(SalesLine), DispositionAction::ReplaceCredit),
TaxModelDocumentLineReturnAttribute(tableStr(SalesLine), DispositionAction::ReplaceScrap),
TaxModelDocumentLineReturnAttribute(tableStr(SalesLine), DispositionAction::ReturnToCust),
TaxModelDocumentLineReturnAttribute(tableStr(SalesLine), DispositionAction::Scrap)
]
public class TaxModelDocLineSalesLineReturnImpl extends TaxModelDocLineSalesLineImpl
    implements TaxModelTaxableReturn
{
    TaxModelDocLineCustInvoiceTransImpl orignalInvoiceTransModel;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDispositionAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>DispositionAction</c> of the transaction.
    /// </summary>
    /// <returns>
    /// the <c>DispositionAction</c> of the transaction
    /// </returns>
    public DispositionAction getDispositionAction()
    {
        return salesLine.returnDispositionCode().DispositionAction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrignalInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the original invoice transaction.
    /// </summary>
    /// <returns>
    /// The orignal invoice.
    /// </returns>
    public TaxModelTaxable getOrignalInvoiceTrans()
    {
        return orignalInvoiceTransModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax direction.
    /// </summary>
    /// <returns>
    /// The tax direction
    /// </returns>
    public TaxDirection getTaxDirection()
    {
        return TaxDirection::OutgoingTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets <c>TaxModelTransactionType_IN</c> of the transaction
    /// </summary>
    /// <returns>
    /// The <c>TaxModelTransactionType_IN</c> of the transaction
    /// </returns>
    public TaxModelTransactionType getTransactionType()
    {
        return TaxModelTransactionType::Return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init the domain object.
    /// The method should only be called by the <c>TaxModelDocLineFactoryable_IN</c> classes.
    /// </summary>
    /// <param name="_documentLineMap">
    /// The document line buffer.
    /// </param>
    public void init(SalesPurchJournalLine _documentLineMap)
    {
        CustInvoiceTrans custInvoiceTrans;

        super(_documentLineMap);

        if (salesLine.InventTransIdReturn)
        {
            custInvoiceTrans = custInvoiceTrans::findInventTransid(SalesLine.InventTransIdReturn);
            orignalInvoiceTransModel = TaxModelDocLineFactory::newTaxModelDocLine(custInvoiceTrans) as TaxModelDocLineCustInvoiceTransImpl;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOrignalTaxSettled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine the orignal tax is settled or not.
    /// </summary>
    /// <returns>
    /// True, if the orignal tax is settled;Otherwise, false.
    /// </returns>
    public boolean isOrignalTaxSettled()
    {
        if (orignalInvoiceTransModel)
        {
            return TaxTrans::isTaxSettledForTransaction(
                orignalInvoiceTransModel.getDocumentLineMainTableId(),
                orignalInvoiceTransModel.getDocumentLineMainTableRecId());
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxPerOrignal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is the tax rate using the same of the orignal document line.
    /// </summary>
    /// <returns>
    /// True, if the tax rate using the same of the orignal document line.
    /// </returns>
    public boolean isTaxPerOrignal()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantity</Name>
				<Source><![CDATA[
    public Qty getQuantity()
    {
        return salesLine.ExpectedRetQty;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>