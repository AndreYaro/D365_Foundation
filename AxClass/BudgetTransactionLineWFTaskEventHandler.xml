<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionLineWFTaskEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetTransactionLineWFTaskEventHandler</c> class is the event handler class for managing
///    the workflow task canceled event and the workflow task returned event.
/// </summary>
public class BudgetTransactionLineWFTaskEventHandler implements WorkflowElementCanceledEventHandler,
                                                                WorkflowElementReturnedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the canceled event for the workflow task.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void canceled(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        BudgetTransactionLine::setWorkflowStatus(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            BudgetTransactionWorkflowStatus::NotSubmitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the returned event for the workflow task.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        BudgetTransactionLine::setWorkflowStatus(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            BudgetTransactionWorkflowStatus::Rejected);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>