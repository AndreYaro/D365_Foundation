<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>mcrRoyaltyVendTableStatusType_Approved</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRRoyaltyVendTableStatusType_Approved</c> class holds the rebate processes specific to royalty with status 'Approved'.
/// </summary>
public class mcrRoyaltyVendTableStatusType_Approved extends MCRRoyaltyVendTableStatusType
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBeDeleted</Name>
				<Source><![CDATA[
    public boolean canBeDeleted()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerPostingAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the royalty corrected amount.
    /// </summary>
    /// <returns>
    /// The corrected royalty amount.
    /// </returns>
    public Amount ledgerPostingAmount()
    {
        return mcrRoyaltyVendTable.CorrectedRoyaltyAmt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>royaltyStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the royalty status as 'Approved'.
    /// </summary>
    /// <returns>
    /// The royalty status.
    /// </returns>
    public MCRRoyaltyVendTableStatus royaltyStatus()
    {
        return MCRRoyaltyVendTableStatus::Approved;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the royalty payment process.
    /// </summary>
    public void runPayment()
    {
        MCRRoyaltyVendTable mcrRoyaltyVendTableLocal;

        using (var activityContext = this.instrumentationLogger().royaltyClaimActivities().runPaymentApproved(mcrRoyaltyVendTable))
        {
            ttsbegin;
            mcrRoyaltyVendTableLocal = MCRRoyaltyVendTable::findByRecId(mcrRoyaltyVendTable.RecId, true);

            mcrRoyaltyVendTableLocal.royaltyTableProcess().runPayment();

            if (mcrRoyaltyVendTableLocal.RoyaltyBalance == 0)
            {
                this.setFinalStatus();
            }

            if (mcrRoyaltyVendTableLocal.validateWrite())
            {
                mcrRoyaltyVendTableLocal.update();
            }
            else
            {
                error(strFmt("@MCR:MCRRoyaltyVendTableValidationError", mcrRoyaltyVendTableLocal.RoyaltyClaimId));
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNextStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the royalty status as 'Processed'.
    /// </summary>
    public void setNextStatus()
    {
        mcrRoyaltyVendTable.RoyaltyStatus   = MCRRoyaltyVendTableStatus::Processed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates changes to a field in the <c>MCRRoyaltyVendTable</c> table.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name to Validate.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field to validate; optional.
    /// </param>
    /// <returns>
    /// true if the value in the field change is valid; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret = true;

        ret = ret && super(_fieldName, _arrayIndex);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the class.
    /// </summary>
    /// <returns>
    /// A class instance.
    /// </returns>
    public static MCRRoyaltyVendTableStatusType_Approved construct()
    {
        return new MCRRoyaltyVendTableStatusType_Approved();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>