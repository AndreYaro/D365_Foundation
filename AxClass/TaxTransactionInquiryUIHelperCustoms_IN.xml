<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransactionInquiryUIHelperCustoms_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is a UI helper extends <c>TaxTransactionInquiryUIHelperTotal_IN</c>. If the form is to
/// show the customs inquiry, this UI helper will be created and provide some methods to the form.
/// </summary>
class TaxTransactionInquiryUIHelperCustoms_IN extends TaxTransactionInquiryUIHelperTotal_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateUIDesign</Name>
				<Source><![CDATA[
    protected void updateUIDesign()
    {
        super();

        registrationNumberCtrl.visible(true);
        settlementPeriodCtrl.visible(true);
        registrationNumberCtrl.label("@GLS5100");
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkErrors</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check and throw more errors if there is any error only for this type of tax inquiry before clicking
    /// the inquiry button.
    /// </summary>
    protected void checkErrors()
    {
        super();

        if (!registrationNumberCtrl.text())
        {
            throw error(strFmt("@SYS26332","@GLS5100"));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInquiryMenuItemDisplayStr</Name>
				<Source><![CDATA[
    protected MenuItemNameDisplay getInquiryMenuItemDisplayStr()
    {
        return menuItemDisplayStr(CustomsInquiryTrans_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxInquiryViewTableId</Name>
				<Source><![CDATA[
    protected TableId getTaxInquiryViewTableId()
    {
        return tableNum(CustomsInquiryTrans_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFilterQuery</Name>
				<Source><![CDATA[
    protected DisplayQueryString getFilterQuery()
    {
        return queryStr(CustomsInquiry_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAvailableFieldGroupName</Name>
				<Source><![CDATA[
    protected FieldGroupName getAvailableFieldGroupName()
    {
        return "@TaxTransactionInquiry:CustomsAvailableFields";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultSelectedFieldGroupName</Name>
				<Source><![CDATA[
    protected FieldGroupName getDefaultSelectedFieldGroupName()
    {
        return "@TaxTransactionInquiry:CustomsSelectedFields";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxType</Name>
				<Source><![CDATA[
    protected TaxType_IN getTaxType()
    {
        return TaxType_IN::Customs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add ranges to the query of the tax transaction.
    /// </summary>
    /// <param name = "_queryBuildDataSource">the look up query</param>
    protected void addRanges(QueryBuildDataSource _queryBuildDataSource)
    {
        TaxRegistrationNumber_IN    registrationNumber  = taxInquiryArguments.getTaxRegistrationNumber();
        TaxSettlementPeriodId       settlementPeriod    = taxInquiryArguments.getSettlementPeriod();

        if (registrationNumber)
        {
            queryBuildDataSource.addRange(fieldNum(CustomsInquiryTrans_IN, RegistrationNumber)).value(registrationNumber);
        }

        if (settlementPeriod)
        {
            queryBuildDataSource.addRange(fieldNum(CustomsInquiryTrans_IN, TaxPeriod)).value(settlementPeriod);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>