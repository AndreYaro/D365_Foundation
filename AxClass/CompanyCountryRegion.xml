<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CompanyCountryRegion</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class to use for instances of company country region checks.
/// </summary>
public class CompanyCountryRegion
{
    #ISOCountryRegionCodes

    private selectableDataArea                   companyId;
    private LogisticsAddressCountryRegionISOCode companyCountryRegionIsoCode;

    public UnknownNoYes        isCountryRegionRU;
    public UnknownNoYes        isCountryRegionIN;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates and initializes a new instance of the class.
    /// </summary>
    /// <param name = "_selectableDataArea">Data area of the company.</param>
    protected void new(selectableDataArea _selectableDataArea)
    {
        this.initialize(_selectableDataArea);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <param name = "_selectableDataArea">Data area of the company.</param>
    /// <returns>The new instance oif the class.</returns>
    public static CompanyCountryRegion construct(selectableDataArea _selectableDataArea)
    {
        return new CompanyCountryRegion(_selectableDataArea);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the data area.
    /// </summary>
    /// <returns>Data area of the object instance.</returns>
    public SelectableDataArea parmCompanyId()
    {
        return companyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyCountryRegionIsoCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the country region code.
    /// </summary>
    /// <returns>The company country region code of the object instance.</returns>
    public LogisticsAddressCountryRegionISOCode parmCompanyCountryRegionIsoCode()
    {
        return companyCountryRegionIsoCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the data area and ISO country code for the company.
    /// </summary>
    /// <param name = "_selectableDataArea">Data area of the company.</param>
    protected void initialize(selectableDataArea _selectableDataArea)
    {
        companyId                   = _selectableDataArea;
        companyCountryRegionIsoCode = SysCountryRegionCode::countryInfo(_selectableDataArea);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCompanyInCountryRegion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the value of country region if known or returns the result of comparison with the company's country region.
    /// </summary>
    /// <param name = "_isCompanyInCountryRegion">A country region value.</param>
    /// <param name = "_isoCountryCode">The  ISO code of country region.</param>
    /// <returns>The value of country region.</returns>
    public UnknownNoYes isCompanyInCountryRegion(UnknownNoYes _isCompanyInCountryRegion, LogisticsAddressCountryRegionISOCode _isoCountryCode)
    {
        if (_isCompanyInCountryRegion == UnknownNoYes::Unknown)
        {
            _isCompanyInCountryRegion = this.parmCompanyCountryRegionIsoCode() == _isoCountryCode ? UnknownNoYes::Yes : UnknownNoYes::No;
        }
         
        return _isCompanyInCountryRegion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCountryRegionIN</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the company's country region is India.
    /// </summary>
    /// <returns>
    ///     true if the company's country region is India; otherwise, false.
    /// </returns>
    public boolean isCountryRegionIN()
    {
        isCountryRegionIN = this.isCompanyInCountryRegion(isCountryRegionIN, #isoIN);
        return isCountryRegionIN == UnknownNoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCountryRegionRU</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the company's country region is Russia.
    /// </summary>
    /// <returns>
    ///     true if the company's country region is Russia; otherwise, false.
    /// </returns>
    public boolean isCountryRegionRU()
    {
        isCountryRegionRU = this.isCompanyInCountryRegion(isCountryRegionRU, #isoRU);
        return isCountryRegionRU == UnknownNoYes::Yes;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>