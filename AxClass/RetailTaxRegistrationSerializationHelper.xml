<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTaxRegistrationSerializationHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxRegistration</c> serialization helper class.
/// </summary>
internal final class RetailTaxRegistrationSerializationHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>serializeTaxRegistrationQueryToXml</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes a <c>TaxRegistration</c> query to an XML-array.
    /// </summary>
    /// <param name = "taxRegistrationQuery">The query.</param>
    /// <returns>The XML document with the serialized array.</returns>
    public static XmlDocument serializeTaxRegistrationQueryToXml(Query taxRegistrationQuery)
    {
        const str rootNodeName = 'ArrayOfTaxRegistration';
        const str xmlNodeName = 'TaxRegistration';

        XmlDocument xmlDoc = XmlDocument::newBlank();
        XmlElement xmlRoot = xmlDoc.createElement(rootNodeName);
        
        xmlDoc.appendChild(xmlRoot);
        QueryRun qr = new QueryRun(taxRegistrationQuery);
        while (qr.next())
        {
            TaxRegistration taxRegistration = qr.get(tableNum(TaxRegistration));
            XmlElement taxRegistrationXmlElement = RetailTaxRegistrationSerializationHelper::serializeTaxRegistrationToXml(taxRegistration, xmlDoc, xmlNodeName);
            xmlRoot.appendChild(taxRegistrationXmlElement);
        }

        return xmlDoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>serializeTaxRegistrationToXml</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes a <c>TaxRegistration</c> record into an XML document.
    /// </summary>
    /// <param name = "taxInformation">The record.</param>
    /// <param name = "xmlDoc">The XML document.</param>
    /// <param name = "xmlNodeName">The node name to create.</param>
    /// <returns>The created XML node.</returns>
    public static XmlElement serializeTaxRegistrationToXml(TaxRegistration taxRegistration, XmlDocument xmlDoc, str xmlNodeName)
    {
        XmlElement xmlElement;
        XmlElement xmlRoot;

        xmlRoot = xmlDoc.createElement(xmlNodeName);

        xmlElement = xmlDoc.createElement('RecordId');
        xmlElement.text(int642Str(taxRegistration.RecId));
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('Description');
        xmlElement.text(taxRegistration.Description);
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('DirPartyLocationRecordId');
        xmlElement.text(int642Str(taxRegistration.DirPartyLocation));
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('RegistrationNumber');
        xmlElement.text(taxRegistration.RegistrationNumber);
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('TypeApplicabilityRuleRecordId');
        xmlElement.text(int642Str(taxRegistration.TaxRegistrationTypeApplicabilityRule));
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('ValidFromString');
        xmlElement.text(RetailTransactionServiceUtilities::dateToString(taxRegistration.ValidFrom));
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('ValidToString');
        xmlElement.text(RetailTransactionServiceUtilities::dateToString(taxRegistration.ValidTo));
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('Issuer');
        xmlElement.text(taxRegistration.Issuer);
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('IssueDateString');
        xmlElement.text(RetailTransactionServiceUtilities::dateToString(taxRegistration.IssueDate));
        xmlRoot.appendChild(xmlElement);

        xmlElement = xmlDoc.createElement('Section');
        xmlElement.text(taxRegistration.Section);
        xmlRoot.appendChild(xmlElement);

        return xmlRoot;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>