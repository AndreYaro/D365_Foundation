<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendOutPaymUserInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustVendOutPaymUserInteraction</c> is the plugin base class responsible for handling user interaction for payment generation.
/// </summary>
[Microsoft.Dynamics.AX.Platform.Extensibility.ExportInterfaceAttribute()]
public abstract class CustVendOutPaymUserInteraction
{
    CustVendOutPaym custVendOutPaym;
    Args args;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getUserInteraction</Name>
				<Source><![CDATA[
    private static CustVendOutPaymUserInteraction getUserInteraction(UserInteractive _interactionType)
    {
        str enumValue;
        SysPluginMetadataCollection metadataCollection;
        CustVendOutPaymUserInteraction userInteraction;

        enumValue = enum2Symbol(enumnum(UserInteractive), _interactionType);
        metadataCollection = new SysPluginMetadataCollection();
        metadataCollection.SetManagedValue(enumstr(UserInteractive), enumValue);
        userInteraction = SysPluginFactory::Instance('Dynamics.AX.Application', classStr(CustVendOutPaymUserInteraction), metadataCollection) as CustVendOutPaymUserInteraction;
        return userInteraction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructForGeneration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Factory method for constructing appropriate instance of user interaction object during creation of payment proposal.
    /// </summary>
    /// <param name = "_args">Args object with <c>UserInteractive</c> enum value used for instantiating user interaction object.</param>
    /// <returns>Derived object instance of <c>CustVendPaymProposalUserInteraction</c> class.</returns>
    public static CustVendOutPaymUserInteraction constructForGeneration(Args _args)
    {
        str enumName;
        CustVendOutPaymUserInteraction userInteraction;

        Debug::assert(_args != null);

        if (_args.parmEnumType() == 0)
        {
            _args.parmEnumType(enumNum(UserInteractive));
            _args.parmEnum(UserInteractive::Yes);
        }

        enumName = enumId2Name(_args.parmEnumType());

        userInteraction = CustVendOutPaymUserInteraction::getUserInteraction(_args.parmEnum());
        return userInteraction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPromptForPaymentFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if we can prompt for the payment format dialog when generating payments.
    /// </summary>
    /// <returns>true if the prompt can be displayed; otherwise, false.</returns>
    public abstract boolean canPromptForPaymentFormat()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>