<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanEasyItemAllocatorUtility</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The utility class used for the grid modifications (moving from left to right and vice versa) on the <c>ReqDemPlanEasyItemAllocator</c> form.
/// </summary>
class ReqDemPlanEasyItemAllocatorUtility
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assignItemsToAllocKeyLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns a list of items (distinct products and product variants) to an item allocation key.
    /// </summary>
    /// <param name="_dataSource">
    /// The data source to be used for deletion.
    /// </param>
    /// <param name="_allocationId">
    /// The item allocation ID in the current form context.
    /// </param>
    public static void assignItemsToAllocKeyLine(FormDataSource _dataSource, ForecastItemAllocationId _allocationId)
    {
        ReqDemPlanEasyItemAllocationUnionView selectedRecord = _datasource.getFirst(true);
        ForecastItemAllocationLine            itemAllocationLine;
        RecordInsertList                      itemAllocationLineList = new RecordInsertList(tableNum(ForecastItemAllocationLine));

        // in case nothing is marked (no multi-selection done), the current highlighted record is selected.
        if (!selectedRecord)
        {
            selectedRecord = _datasource.cursor();
        }

        ttsBegin;
        while (selectedRecord != null)
        {
            itemAllocationLine.clear();
            itemAllocationLine.AllocationId = _allocationId;
            itemAllocationLine.ItemId = selectedRecord.ItemId;
            itemAllocationLine.InventDimId = selectedRecord.inventDimId;
            itemAllocationLineList.add(itemAllocationLine);
            selectedRecord = _dataSource.getNext();
        }
        itemAllocationLineList.insertDatabase();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unAssignAllDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// The common utility method which displays a dialog to confirm deletion of all items from the item allocation key.
    /// </summary>
    /// <returns>
    /// The boolean representing the button pressed on the dialog.
    /// </returns>
    public static boolean unAssignAllDialog()
    {
        DialogButton diagBut;
        diagBut = Box::yesNo(
            "@DMP1307",
            DialogButton::No, // Initial focus is on the No button.
            "@DMP1308");

        return diagBut == DialogButton::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unassignAllItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unassigns all items from the item allocation key.
    /// </summary>
    /// <param name="_itemAllocationId">
    /// The id of the item allocation key
    /// </param>
    public static void unassignAllItems(ForecastItemAllocationId _itemAllocationId)
    {
        ForecastItemAllocationLine   unAssignmentBuf;
        ReqDemPlanDataProcessingHelper dataHelper = new ReqDemPlanDataProcessingHelper();

        dataHelper.skipAll(unAssignmentBuf);

        ttsbegin;
        delete_from unAssignmentBuf
                where unAssignmentBuf.AllocationId == _itemAllocationId;
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unassignSelectedItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unassigns the selected items from the item allocation key.
    /// </summary>
    /// <param name="_dataSource">
    /// The data source to be used for deletion.
    /// </param>
    public static void unassignSelectedItems(FormDataSource _dataSource)
    {
        ForecastItemAllocationLine itemAllocationLine;
        ForecastItemAllocationLine selectedRecord = _dataSource.getFirst(true);

        // in case nothing is marked (no multi-selection done), the current highlighted record is selected.
        if (!selectedRecord)
        {
            selectedRecord = _dataSource.cursor();
        }

        ttsBegin;
        while (selectedRecord != null)
        {
            delete_from itemAllocationLine
                where itemAllocationLine.AllocationId == selectedRecord.AllocationId
                &&  itemAllocationLine.ItemId == selectedRecord.ItemId
                &&  itemAllocationLine.InventDimId == selectedRecord.inventDimId;

            selectedRecord = _dataSource.getNext();
        }
        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>