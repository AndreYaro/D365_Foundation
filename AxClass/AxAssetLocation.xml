<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxAssetLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxAssetLocation extends AxInternalBase
{
    AssetLocation assetLocation;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assetLocation</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public AssetLocation assetLocation(AssetLocation _assetLocation = assetLocation)
    {
        if (!prmisdefault(_assetLocation))
        {
            this.setCurrentRecordFromExternal(_assetLocation);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
        public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the current record in the <c>AxAssetLocation</c> table.
    /// </summary>
    /// <param name="_assetLocation">
    /// That <c>AxAssetLocation</c> record to set; optional.
    /// </param>
    /// <returns>
    /// An <c>AxAssetLocation</c> record.
    /// </returns>
    public Common currentRecord(Common _assetLocation = assetLocation)
    {
        if (!prmisdefault(_assetLocation))
        {
            super(_assetLocation);
            assetLocation = _assetLocation as AssetLocation;
        }
        else
        {
            super();
        }

        return assetLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an empty record for the <c>AssetLocation</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record from the <c>AssetLocation</c> table.
    /// </returns>
    protected Common emptyRecord()
    {
        AssetLocation localAssetLocation;
        ;
        return localAssetLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocation</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public AssetLocationId parmLocation(AssetLocationId _location = '')
    {
        if (!prmisdefault(_location))
        {
            this.setField(fieldnum(AssetLocation, Location), _location);
        }

        return assetLocation.Location;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public AssetLocationName parmName(AssetLocationName _name = '')
    {
        if (!prmisdefault(_name))
        {
            this.setField(fieldnum(AssetLocation, Name), _name);
        }

        return assetLocation.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLocation</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void setLocation()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(AssetLocation, Location)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setName</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void setName()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(AssetLocation, Name)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls all of the default methods that must be called before a record is inserted or updated.
    /// </summary>
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setLocation();
        this.setName();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static AxAssetLocation construct()
    {
        return new AxAssetLocation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAssetLocation</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static AxAssetLocation newAssetLocation(AssetLocation _assetLocation)
    {
        AxAssetLocation axAssetLocation = AxAssetLocation::construct();
        ;
        axAssetLocation.assetLocation(_assetLocation);

        return axAssetLocation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>