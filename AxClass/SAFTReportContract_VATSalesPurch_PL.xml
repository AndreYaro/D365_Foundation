<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SAFTReportContract_VATSalesPurch_PL</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;
/// <summary>
/// The data contract class for the service that runs the SAF-T VAT Sales Purch (PL) report.
/// </summary>
[
    DataContract,
    SysOperationGroup('Period', "@SYS40", '1'),
    SysOperationGroup('TaxAuthority', "@SYS21937", '2'),
    SysOperationGroup('SubmittingPurpose', "@StandardAuditFile_SAFT_W:SubmittingPurpose", '3')
]
public class SAFTReportContract_VATSalesPurch_PL extends SAFTReportContract_Base_W
{
    private ERFormatMappingId erFormatMappingId;

    private boolean aggregateFiscalDocuments; // RO
    private boolean reportRetailPOSInvoices; // FP from Retail
    private boolean reportFiscalDocumentConvertedToInvoice; // FP from Fiscal documents
    private boolean reportFiscalDocumentWithThreshold; // FP with threshold
    private boolean considerVATReportDateCodes;
    private boolean reportInAccountingCurrency;
    private Query aggregateFiscalDocumentsQuery; // RO user query
    private SAFTReceiptThreshold_PL receiptThreshold;
    private SAFTReportVDEKSchemaVersion_PL reportSchemaVersion;
    private TaxPeriod taxPeriod;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initDefaultQuery</Name>
				<Source><![CDATA[
    public Query initDefaultQuery()
    {
        Query defaultQuery = new Query();

        QueryBuildDataSource qbdsTaxTrans = defaultQuery.addDataSource(tableNum(TaxTrans));

        QueryBuildDataSource qbds = qbdsTaxTrans.addDataSource(tableNum(TaxTrans_W));
        qbds.addRange(fieldNum(TaxTrans_W, VatDueDate_W));
        qbds.relations(true);
        qbds.joinMode(JoinMode::InnerJoin);
        qbds.fetchMode(QueryFetchMode::One2One);

        qbds = qbdsTaxTrans.addDataSource(tableNum(TaxTable));
        qbds.addRange(fieldNum(TaxTable, TaxType_W)).value(queryValue(TaxType_W::VAT));
        qbds.addRange(fieldNum(TaxTable, TaxType_W)).value(queryValue(TaxType_W::VATReduced));
        qbds.addLink(fieldNum(TaxTrans, TaxCode), fieldNum(TaxTable, TaxCode));
        qbds.joinMode(JoinMode::ExistsJoin);
        qbds.fetchMode(QueryFetchMode::One2One);

        return defaultQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAggregateFiscalDocumentsQuery</Name>
				<Source><![CDATA[
    public Query initAggregateFiscalDocumentsQuery()
    {
        Query defaultQuery = new Query();

        QueryBuildDataSource qbdsTaxTrans = defaultQuery.addDataSource(tableNum(TaxTrans));

        QueryBuildDataSource qbds = qbdsTaxTrans.addDataSource(tableNum(TaxTrans_W));
        qbds.addRange(fieldNum(TaxTrans_W, VatDueDate_W));
        qbds.relations(true);
        qbds.joinMode(JoinMode::InnerJoin);
        qbds.fetchMode(QueryFetchMode::One2One);

        qbds = qbdsTaxTrans.addDataSource(tableNum(TaxTable));
        qbds.addRange(fieldNum(TaxTable, TaxType_W)).value(queryValue(TaxType_W::VAT));
        qbds.addRange(fieldNum(TaxTable, TaxType_W)).value(queryValue(TaxType_W::VATReduced));
        qbds.addRange(fieldNum(TaxTable, TaxCountryRegionType)).value(queryValue(CountryRegionType::Domestic));
        qbds.addLink(fieldNum(TaxTrans, TaxCode), fieldNum(TaxTable, TaxCode));
        qbds.joinMode(JoinMode::ExistsJoin);
        qbds.fetchMode(QueryFetchMode::One2One);

        QueryBuildDataSource qbdsCustInvoiceJour = qbdsTaxTrans.addDataSource(tableNum(CustInvoiceJour));
        qbdsCustInvoiceJour.addLink(fieldNum(TaxTrans, Voucher), fieldNum(CustInvoiceJour, LedgerVoucher));
        qbdsCustInvoiceJour.addLink(fieldNum(TaxTrans, TransDate), fieldNum(CustInvoiceJour, InvoiceDate));
        qbdsCustInvoiceJour.joinMode(JoinMode::ExistsJoin);
        qbdsCustInvoiceJour.fetchMode(QueryFetchMode::One2One);

        qbds = qbdsCustInvoiceJour.addDataSource(tableNum(CustInvoiceJour_PL));
        qbds.addRange(fieldNum(CustInvoiceJour_PL, FiscalDocState_PL)).value(queryValue(PlFiscalDocState::FiscalDocument));
        qbds.addRange(fieldNum(CustInvoiceJour_PL, FiscalDocState_PL)).value(queryValue(PlFiscalDocState::Changed2Invoice));
        qbds.relations(true);
        qbds.joinMode(JoinMode::ExistsJoin);
        qbds.fetchMode(QueryFetchMode::One2One);

        return defaultQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmERFormatMappingId</Name>
				<Source><![CDATA[
    public ERFormatMappingId parmERFormatMappingId(ERFormatMappingId _erFormatMappingId = erFormatMappingId)
    {
        erFormatMappingId = _erFormatMappingId;
        return erFormatMappingId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileDestination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the file destination to be used while generating report via ER framework.
    /// </summary>
    /// <returns>The file destination to be used while generating report via ER framework.</returns>
    public ERIFileDestination getFileDestination()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAggregateFiscalDocuments</Name>
				<Source><![CDATA[
    public boolean parmAggregateFiscalDocuments(boolean _value = aggregateFiscalDocuments)
    {
        aggregateFiscalDocuments = _value;
        return aggregateFiscalDocuments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportRetailPOSInvoices</Name>
				<Source><![CDATA[
    public boolean parmReportRetailPOSInvoices(boolean _value = reportRetailPOSInvoices)
    {
        reportRetailPOSInvoices = _value;
        return reportRetailPOSInvoices;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportFiscalDocumentConvertedToInvoice</Name>
				<Source><![CDATA[
    public boolean parmReportFiscalDocumentConvertedToInvoice(boolean _value = reportFiscalDocumentConvertedToInvoice)
    {
        reportFiscalDocumentConvertedToInvoice = _value;
        return reportFiscalDocumentConvertedToInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportFiscalDocumentWithThreshold</Name>
				<Source><![CDATA[
    public boolean parmReportFiscalDocumentWithThreshold(boolean _value = reportFiscalDocumentWithThreshold)
    {
        reportFiscalDocumentWithThreshold = _value;
        return reportFiscalDocumentWithThreshold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConsiderVATReportDateCodes</Name>
				<Source><![CDATA[
    public boolean parmConsiderVATReportDateCodes(boolean _value = considerVATReportDateCodes)
    {
        considerVATReportDateCodes = _value;
        return considerVATReportDateCodes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiptThreshold</Name>
				<Source><![CDATA[
    public SAFTReceiptThreshold_PL parmReceiptThreshold(SAFTReceiptThreshold_PL _value = receiptThreshold)
    {
        receiptThreshold = _value;
        return receiptThreshold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAggregateFiscalDocumentsQuery</Name>
				<Source><![CDATA[
    public Query parmAggregateFiscalDocumentsQuery(Query _query = aggregateFiscalDocumentsQuery)
    {
        aggregateFiscalDocumentsQuery = _query;
        return aggregateFiscalDocumentsQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportSchemaVersion</Name>
				<Source><![CDATA[
    public SAFTReportVDEKSchemaVersion_PL parmReportSchemaVersion(SAFTReportVDEKSchemaVersion_PL _reportSchemaVersion = reportSchemaVersion)
    {
        reportSchemaVersion = _reportSchemaVersion;
        return reportSchemaVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxPeriod</Name>
				<Source><![CDATA[
    public TaxPeriod parmTaxPeriod(TaxPeriod _taxPeriod = TaxPeriod)
    {
        taxPeriod = _taxPeriod;
        return taxPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportInAccountingCurrency</Name>
				<Source><![CDATA[
    public boolean parmReportInAccountingCurrency(boolean _reportInAccountingCurrency = reportInAccountingCurrency)
    {
        reportInAccountingCurrency = _reportInAccountingCurrency;
        return reportInAccountingCurrency;
    }
    //

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>