<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashFlowLastUpdatedValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal abstract class CashFlowLastUpdatedValidator implements FinanceInsightsIPipelineValidator
{
    protected SysInstrumentationLogger logger;
    protected FinanceInsightsPipelineValidatorResult result;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
        logger  = SysInstrumentationLoggerFactory::CreateLogger(this.GetType().FullName);
        result = FinanceInsightsPipelineValidatorResult::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    protected abstract boolean exists(){}

]]></Source>
			</Method>
			<Method>
				<Name>lastModifiedDateTime</Name>
				<Source><![CDATA[
    protected abstract utcdatetime lastModifiedDateTime(){}

]]></Source>
			</Method>
			<Method>
				<Name>shouldLogOutsideToleranceWithZeroRows</Name>
				<Source><![CDATA[
    protected abstract boolean shouldLogOutsideToleranceWithZeroRows(){}

]]></Source>
			</Method>
			<Method>
				<Name>logOutsideTolerance</Name>
				<Source><![CDATA[
    protected abstract void logOutsideTolerance(){}

]]></Source>
			</Method>
			<Method>
				<Name>isActive</Name>
				<Source><![CDATA[
    protected abstract boolean isActive(){}

]]></Source>
			</Method>
			<Method>
				<Name>getToleranceDays</Name>
				<Source><![CDATA[
    protected abstract int getToleranceDays(){}

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FinanceInsightsPipelineValidatorResult validate()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(this.GetType().FullName, funcName());

        using (SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity))
        {
            if (this.isActive() && LedgerLiquidity::existForCompany())
            {
                this.validateLastUpdatedDateTime(activityContext);
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLastUpdatedDateTime</Name>
				<Source><![CDATA[
    private void validateLastUpdatedDateTime(SysInstrumentationActivityContext _activityContext)
    {
        if (this.exists())
        {
            _activityContext.addCustomProperty('Exists', enum2Str(NoYes::Yes));

            if (!this.hasBeenUpdatedWithinTolerance())
            {
                this.logOutsideTolerance();
            }
        }
        else
        {
            _activityContext.addCustomProperty('Exists', enum2Str(NoYes::No));

            if (this.shouldLogOutsideToleranceWithZeroRows())
            {
                this.logOutsideTolerance();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasBeenUpdatedWithinTolerance</Name>
				<Source><![CDATA[
    private boolean hasBeenUpdatedWithinTolerance()
    {
        boolean wasModifiedLately = true;

        utcdatetime lastModifiedDateTime = this.lastModifiedDateTime();
        utcdatetime toleranceDateTime = DateTimeUtil::addDays(DateTimeUtil::utcNow(), -this.getToleranceDays());

        if (lastModifiedDateTime != DateTimeUtil::minValue()
            && lastModifiedDateTime < toleranceDateTime)
        {
            wasModifiedLately = false;
        }

        return wasModifiedLately;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>