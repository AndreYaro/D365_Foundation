<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPaymentAccessTokenContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  The <c>RetailPaymentAccessTokenContext</c> class helps in transferring context when creating a credit card payment.
/// </summary>
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;

public final class RetailPaymentAccessTokenContext implements System.IDisposable
{
    private static RetailPaymentAccessTokenContext instance;

    internal static CommerceHQEventSource eventSource = CommerceHQEventSource::Log;

    private Map accessCodes = new Map(Types::Int64, Types::Class);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Dispose the context.
    /// </summary>
    [Hookable(false)]
    public void dispose()
    {
        eventSource.EventWriteRetailNonRecurringRetailPaymentAccessTokenContextDisposed();
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of the class.
    /// </summary>
    /// <returns>The instance of the <c>RetailPaymentAccessTokenContext</c> class.</returns>
    [Hookable(false)]
    public static RetailPaymentAccessTokenContext instance()
    {
        if (instance == null)
        {
            instance = new RetailPaymentAccessTokenContext();
        }
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveAccessCodeForPaymentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the access code associated with the payment line in <c>MCRCustPaymTable</c> table.
    /// </summary>
    /// <param name = "_recId">RecId of <c>MCRCustPaymTable</c> table.</param>
    /// <param name = "_accessCode">An access code.</param>
    /// <param name = "_propertiesXmlString">A properties xml string.</param>
    /// <param name = "_creditCardProcessorsId">A credit card processor id.</param>
    /// <param name = "_cardTypeId">A card type id.</param>
    [Hookable(false)]
    public void saveAccessCodeForPaymentLine(
        MCRCustPaymTableRecID _recId, 
        str _accessCode, 
        str _propertiesXmlString, 
        CreditCardProcessorsId _creditCardProcessorsId, 
        str _cardTypeId)
    {
        RetailPaymentAccessTokenArgs accessTokenArgs = new RetailPaymentAccessTokenArgs();
        accessTokenArgs.parmAccessCode(_accessCode);
        accessTokenArgs.parmCardPropertiesXmlString(_propertiesXmlString);
        accessTokenArgs.parmCreditCardProcessorsId(_creditCardPRocessorsId);
        accessTokenArgs.parmCardTypeId(_cardTypeId);
        accessCodes.add(_recId, accessTokenArgs);
        eventSource.EventWriteRetailNonRecurringAccessTokenSaved(_recId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccessCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an access code by RecId of <c>MCRCustPaymTable</c> table.
    /// </summary>
    /// <param name = "_recId">RecId of <c>MCRCustPaymTable</c> table.</param>
    /// <returns>An access code.</returns>
    [Hookable(false)]
    public RetailPaymentAccessTokenArgs getAccessCode(MCRCustPaymTableRecID _recId)
    {
        return accessCodes.lookup(_recId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accessCodeExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if an access code an access code by RecId of <c>MCRCustPaymTable</c> table.
    /// </summary>
    /// <param name = "_recId">RecId of <c>MCRCustPaymTable</c> table.</param>
    /// <returns>True if an access code exists; otherwise false.</returns>
    [Hookable(false)]
    public boolean accessCodeExists(MCRCustPaymTableRecID _recId)
    {
        return accessCodes.exists(_recId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeAccessCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes access code from the context.
    /// </summary>
    /// <param name = "_recId">>RecId of <c>MCRCustPaymTable</c> table.</param>
    [Hookable(false)]
    public void removeAccessCode(MCRCustPaymTableRecID _recId)
    {
        accessCodes.remove(_recId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>