<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleSigningLimit</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// this class is used to configure number sequences in Signing Limit module.
/// </summary>
/// <remarks>
/// the details of configuring number sequence is in method loadModule().
/// </remarks>
public class NumberSeqModuleSigningLimit extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Configures all of the data types that are used by the module.
    /// </summary>
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        //setup signing limit request number sequence - it is global

        datatype.parmDatatypeId(extendedtypenum(HRPRequestNumber));
        datatype.parmReferenceHelp(literalstr("@HCM:RequestNumberSequenceHelp"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the Signing Limit module for this class.
    /// </summary>
    /// <returns>
    ///    The module specific ID.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::SigningLimit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleSigningLimit), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>