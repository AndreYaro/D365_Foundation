<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProjectOperationsIntegrationFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation;

/// <summary>
/// The <c>ProjProjectOperationsIntegrationFeature</c> class defines the feature of enabling configuration for project operations on CE.
/// </summary>
[Export(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
[FeatureMetadataConfigurationKey(configurationKeyStr(Project))]
[SysObsolete('This class is obsoleted as feature is in mandatory state.', true, 15\11\2023)]
final public class ProjProjectOperationsIntegrationFeature implements IFeatureMetadata, IFeatureLifecycle, IFeatureDependencies
{
    private static ProjProjectOperationsIntegrationFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAllFeatures</Name>
				<Source><![CDATA[
    public IFeature[] dependsOnAllFeatures()
    {
        
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAnyFeature</Name>
				<Source><![CDATA[
    public IFeature[] dependsOnAnyFeature()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new ProjProjectOperationsIntegrationFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>ProjProjectOperationsIntegrationFeature</c> instance.</returns>
    [Hookable(false)]
    public static ProjProjectOperationsIntegrationFeature instance()
    {
        if (!instance)
        {
            instance = new ProjProjectOperationsIntegrationFeature();
        }
        
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Proj:EnableProjectOperationsIntegration");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::ProjectManagementAndAccounting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Proj:EnableProjectOperationsIntegrationFeatureSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://aka.ms/ProjOpsIntegration';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the feature can be disabled.
    /// </summary>
    /// <returns>true if no company parameter is turned on; otherwise, false.</returns>
    [Hookable(false)]
    public boolean canDisable()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the feature is enabled.
    /// </summary>
    /// <returns>
    /// true if the feature is enabled; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public static boolean isFeatureEnabled()
    {
        return Dynamics.AX.Application.FeatureStateProvider::IsFeatureEnabled(ProjProjectOperationsIntegrationFeature::instance());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>