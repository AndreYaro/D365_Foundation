<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxPurchaseTaxReportController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxPurchaseTaxReportController</c> class is the controller class for the
///    <c>TaxPurchaseTaxReport</c> report.
/// </summary>
class TaxPurchaseTaxReportController extends SrsReportRunController implements BatchRetryable
{
    boolean     calledFromMenu;
    TransDate   reportDate;
    Voucher     reportVoucher;

    #define.ReportName('TaxPurchaseTaxReport.Report')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
        protected void prePromptModifyContract()
    {
        TaxPurchaseTaxReportContract contract;

        contract    = this.parmReportContract().parmRdpContract() as TaxPurchaseTaxReportContract;

        this.processReportParameters(contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReportParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the caller arguments and the query ranges for the SSRS report.
    /// </summary>
    /// <param name="_contract">
    ///    A contract class <c>TaxPurchaseTaxReportContract</c> object.
    /// </param>
    public void processReportParameters(TaxPurchaseTaxReportContract _contract)
    {
        TaxPurchaseTaxTrans taxPurchaseTaxTrans;

        Query query = this.getFirstQuery();

        if (this.parmArgs() && this.parmArgs().caller() &&
                    this.parmArgs().dataset() == tableNum(TaxPurchaseTaxTrans))
        {
            calledFromMenu      = false;
            taxPurchaseTaxTrans = this.parmArgs().record();
            reportDate          = taxPurchaseTaxTrans.ReportDate;
            reportVoucher       = taxPurchaseTaxTrans.ReportVoucher;
        }
        else
        {
            calledFromMenu = true;
        }

        _contract.parmCalledFromMenu(calledFromMenu);
        _contract.parmReportDate(reportDate);
        _contract.parmReportVoucher(reportVoucher);

        if (!calledFromMenu)
        {
            if (!reportVoucher)
            {
                query.dataSourceTable(tableNum(TaxPurchaseTaxTrans)).rangeField(fieldNum(TaxPurchaseTaxTrans, ReportVoucher)).value(strFmt('%1..%1',''));
            }
            else
            {
                query.dataSourceTable(tableNum(TaxPurchaseTaxTrans)).rangeField(fieldNum(TaxPurchaseTaxTrans, ReportDate)).value(strFmt('%1',reportDate));
                query.dataSourceTable(tableNum(TaxPurchaseTaxTrans)).rangeField(fieldNum(TaxPurchaseTaxTrans, ReportVoucher)).value(reportVoucher);
            }
        }

        boolean taxCodeExist;
        QueryRun queryrun = new QueryRun(query);
        
        while(queryrun.next())
        {
            taxPurchaseTaxTrans = queryrun.get(tableNum(TaxPurchaseTaxTrans));
            if (taxPurchaseTaxTrans.TaxCode)
            {
                taxCodeExist = true;
                break;
            }
        }

        if (taxCodeExist)
        {
            this.parmReportContract().parmReportName(#ReportName);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        TaxPurchaseTaxReportController controller = new TaxPurchaseTaxReportController();
        controller.parmReportName(ssrsReportStr(TaxPurchaseTaxReport, ReportTotal));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>