<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkDeferredPutProcessingTaskCancellationContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The contract class used when cancelling deferred puts.
/// </summary>
[DataContract]
internal class WHSWorkDeferredPutProcessingTaskCancellationContract
{
    private WHSUserId newWorkUserId;
    private NoYes     keepExistingWorkUserId;
    private RefRecId  workDeferredPutProcessingTaskRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmWorkDeferredPutProcessingTaskRecId</Name>
				<Source><![CDATA[
    [DataMember, Hookable(false)]
    internal RefRecId parmWorkDeferredPutProcessingTaskRecId(RefRecId _workDeferredPutProcessingTaskRecId = workDeferredPutProcessingTaskRecId)
    {
        workDeferredPutProcessingTaskRecId = _workDeferredPutProcessingTaskRecId;
        return workDeferredPutProcessingTaskRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewWorkUserId</Name>
				<Source><![CDATA[
    [DataMember, Hookable(false)]
    internal WHSUserId parmNewWorkUserId(WHSUserId _newWorkUserId = newWorkUserId)
    {
        newWorkUserId = _newWorkUserId;
        return newWorkUserId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmKeepExistingWorkUserId</Name>
				<Source><![CDATA[
    [DataMember, Hookable(false)]
    internal NoYes parmKeepExistingWorkUserId(NoYes _keepExistingWorkUserId = keepExistingWorkUserId)
    {
        keepExistingWorkUserId = _keepExistingWorkUserId;
        return keepExistingWorkUserId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSWorkDeferredPutProcessingTaskCancellationContract construct()
    {
        return new WHSWorkDeferredPutProcessingTaskCancellationContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSWorkDeferredPutProcessingTaskCancellationContract newFromParameters(
        WHSWorkDeferredPutMultiTaskCancellationContract _multiContract,
        RefRecId                                        _workDeferredPutProcessingTaskRecId)
    {
        WHSWorkDeferredPutProcessingTaskCancellationContract contract =  WHSWorkDeferredPutProcessingTaskCancellationContract::construct();

        contract.initFromWorkDeferredPutMultiTaskCancellationContract(_multiContract);
        contract.parmWorkDeferredPutProcessingTaskRecId(_workDeferredPutProcessingTaskRecId);

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWorkDeferredPutMultiTaskCancellationContract</Name>
				<Source><![CDATA[
    private void initFromWorkDeferredPutMultiTaskCancellationContract(WHSWorkDeferredPutMultiTaskCancellationContract _multiContract)
    {
        this.parmKeepExistingWorkUserId(_multiContract.parmKeepExistingWorkUserId());
        this.parmNewWorkUserId(_multiContract.parmNewWorkUserId());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>