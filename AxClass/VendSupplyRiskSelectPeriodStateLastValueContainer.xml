<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendSupplyRiskSelectPeriodStateLastValueContainer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>VendSupplyRiskSelectPeriodStateLastValueContainer</c> is responsible for saving the <c>VendSupplyRiskSelectPeriodState</c>
/// instances in the <c>SysLastValue</c> storage.
/// </summary>
internal final class VendSupplyRiskSelectPeriodStateLastValueContainer implements SysSaveable
{
    private VendSupplyRiskSelectPeriodState state;
    private str                             elementName;

    private const int CurrentVersion = 1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmState</Name>
				<Source><![CDATA[
    internal VendSupplyRiskSelectPeriodState parmState(VendSupplyRiskSelectPeriodState _state = state)
    {
        state = _state;
        return state;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmElementName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str parmElementName(str _elementName = elementName)
    {
        elementName = _elementName;
        return elementName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public container pack()
    {
        return [CurrentVersion, state.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the state with default values.
    /// </summary>
    [Hookable(false)]
    public void initParmDefault()
    {
        state = VendSupplyRiskSelectPeriodState::newFromFiscalYearPeriod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean unpack(container _packedClass)
    {
        Integer     version    = conPeek(_packedClass, 1);

        if (version == CurrentVersion)
        {
            container   packedState = conPeek(_packedClass, 2);
            state = VendSupplyRiskSelectPeriodState::construct();
            state.unpack(packedState);

            return true;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the data area ID.
    /// </summary>
    /// <returns>The last value for the data area ID.</returns>
    [Hookable(false)]
    public DataAreaId lastValueDataAreaId()
    {
        return curExt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the user ID.
    /// </summary>
    /// <returns>The last value for the user ID.</returns>
    [Hookable(false)]
    public UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the element type.
    /// </summary>
    /// <returns>The last value for the element type.</returns>
    [Hookable(false)]
    public UtilElementType lastValueType()
    {
        return UtilElementType::Class;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the element name.
    /// </summary>
    /// <returns>The last value for the element name.</returns>
    [Hookable(false)]
    public str lastValueElementName()
    {
        return elementName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last value for the class name.
    /// </summary>
    /// <returns>The last value for the class name.</returns>
    [Hookable(false)]
    public str lastValueDesignName()
    {
        return classStr(VendSupplyRiskSelectPeriodState);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        state = VendSupplyRiskSelectPeriodState::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveInLastValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the provided instance owned by given form in the <c>SysLastValue</c>
    /// </summary>
    /// <param name="_state">The <c>VendSupplyRiskSelectPeriodState</c> class instance.</param>
    /// <param name="_parentFormName">The name of the owning form.</param>
    internal static void saveInLastValue(VendSupplyRiskSelectPeriodState _state, FormName _parentFormName)
    {
        VendSupplyRiskSelectPeriodStateLastValueContainer vendSupplyRiskSelectPeriodStateLastValueContainer = new VendSupplyRiskSelectPeriodStateLastValueContainer();
        vendSupplyRiskSelectPeriodStateLastValueContainer.parmState(_state);
        vendSupplyRiskSelectPeriodStateLastValueContainer.parmElementName(_parentFormName);

        xSysLastValue::saveLast(vendSupplyRiskSelectPeriodStateLastValueContainer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>readStateFromLastValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the instance saved in the <c>SysLastValue</c>
    /// </summary>
    /// <param name="_parentFormName">The name of the owning form.</param>
    /// <returns>The <c>VendSupplyRiskSelectPeriodState</c> class instance.</returns>
    internal static VendSupplyRiskSelectPeriodState readStateFromLastValue(FormName _parentFormName)
    {
        VendSupplyRiskSelectPeriodStateLastValueContainer vendSupplyRiskSelectPeriodStateLastValueContainer = new VendSupplyRiskSelectPeriodStateLastValueContainer();
        vendSupplyRiskSelectPeriodStateLastValueContainer.parmElementName(_parentFormName);
        xSysLastValue::getLast(vendSupplyRiskSelectPeriodStateLastValueContainer);
        return vendSupplyRiskSelectPeriodStateLastValueContainer.parmState();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>