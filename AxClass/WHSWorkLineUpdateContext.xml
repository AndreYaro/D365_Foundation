<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkLineUpdateContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>WHSWorkLineUpdateContext</c> is used to transfer context related to updating the work line during reopening the container.
/// </summary>
internal final class WHSWorkLineUpdateContext implements System.IDisposable
{
    private static WHSWorkLineUpdateContext instance;

    private boolean updatePackingWorkLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    public void Dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSWorkLineUpdateContext construct()
    {
        return new WHSWorkLineUpdateContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSWorkLineUpdateContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowReopen</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static boolean allowReopen()
    {
        return instance ? instance.parmUpdatePackingWorkLine() : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAllowingReopen</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSWorkLineUpdateContext newAllowingReopen(boolean _updatePackingWorkLine)
    {
        var context = WHSWorkLineUpdateContext::construct();

        context.parmUpdatePackingWorkLine(_updatePackingWorkLine);

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdatePackingWorkLine</Name>
				<Source><![CDATA[
    [Hookable(false)]
    private boolean parmUpdatePackingWorkLine(boolean _updatePackingWorkLine = updatePackingWorkLine)
    {
        updatePackingWorkLine = _updatePackingWorkLine;
        return updatePackingWorkLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>