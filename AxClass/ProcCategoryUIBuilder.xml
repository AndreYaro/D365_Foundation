<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProcCategoryUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProcCategoryUIBuilder</c> class is the UI builder class for the
/// <c>ProcCategory</c><c>pn_SSRS_nover_1st</c>.
/// </summary>

public class ProcCategoryUIBuilder extends SrsReportDataContractUIBuilder
{
    ProcCategoryContract        rdpContract;
    VendTmpCompanyInfo          vendTmpCompanyInfo;

    DialogField                 companyField;
    DialogField                 fromDateField;
    DialogField                 toDateField;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the dialog box for the report.
    /// </summary>
    public void build()
    {
        rdpContract = this.dataContractObject() as ProcCategoryContract;

        vendTmpCompanyInfo.initTable();

        companyField = this.addDialogField(methodStr(ProcCategoryContract, parmCompany), rdpContract);
        companyField.lookupButton(2);
        fromDateField = this.addDialogField(methodStr(ProcCategoryContract, parmFromDate), rdpContract);
        toDateField = this.addDialogField(methodStr(ProcCategoryContract, parmToDate), rdpContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the lookup multiple select for the company parameter lookup.
    /// </summary>
    public void companyLookup()
    {
        QueryRun    queryRun;
        int         mutiSelectTableNum = tablenum(VendTmpCompanyInfo);

        container selectedFields = [mutiSelectTableNum, fieldname2id(mutiSelectTableNum, fieldstr(VendTmpCompanyInfo, DataArea))];
        queryRun = new QueryRun(queryStr(VendTmpCompanyInfo));
        queryRun.setCursor(vendTmpCompanyInfo);

        SysLookupMultiSelectCtrl::constructWithQueryRun(this.dialog().dialogForm().formRun(), companyField.control(), queryRun, false, selectedFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets data from the dialog box and assigns the values to the contract parameters.
    /// </summary>
    public void getFromDialog()
    {
        List            companyValuesSelected = new List(Types::String);
        ListEnumerator  comanyValuesEnum;
        List            dataAreaRecIdList = new List(Types::Int64);

        super();

        companyValuesSelected = SRSReportHelper::ConvertStrToList(companyField.value());

        comanyValuesEnum = companyValuesSelected.getEnumerator();

        while (comanyValuesEnum.moveNext())
        {
            select firstOnly DataAreaRecId from vendTmpCompanyInfo
                where VendTmpCompanyInfo.DataArea == comanyValuesEnum.current();

            dataAreaRecIdList.addEnd(vendTmpCompanyInfo.DataAreaRecId);
        }

        rdpContract.parmLegalEntity(dataAreaRecIdList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Registers the method override in order to capture the dialog box events.
    /// </summary>
    public void postRun()
    {
        dialog.dialogForm().formRun().controlMethodOverload(false);
        this.companyLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>