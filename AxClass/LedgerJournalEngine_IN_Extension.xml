<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalEngine_IN_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerJournalEngine_IN_Extension</c> class is used to deal with IN logics for <c>LedgerJournalEngine</c>.
/// </summary>
[ExtensionOf(classStr(LedgerJournalEngine))]
final public class LedgerJournalEngine_IN_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isGSTTDS_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the amount fields for GST TDS group should be calculated or not.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">The <c>LedgerJournalTrans</c> record.</param>
    /// <returns>true, if it is relevant for GST TDS calculation; otherwise, false.</returns>
    internal boolean isGSTTDS_IN(LedgerJournalTrans _ledgerJournalTrans)
    {
        boolean isGSTTDS_IN;
        if (TaxParameters::checkTaxParameters_IN()
            && TaxSolutionScopeIntegrationUtil::isCompanyEnabled()
            && _ledgerJournalTrans)
        {
            LedgerJournalType journalType = LedgerJournalTable::find(_ledgerJournalTrans.JournalNum).JournalType;
            if (journalType == LedgerJournalType::Payment
                || journalType == LedgerJournalType::CustPayment)
            {
                isGSTTDS_IN = true;
            }
        }
        return isGSTTDS_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSettledAmount</Name>
				<Source><![CDATA[
    public void findSettledAmount(
        LedgerJournalTrans _ledgerJournalTrans)
    {
        next findSettledAmount(_ledgerJournalTrans);

        if (this.isGSTTDS_IN(_ledgerJournalTrans))
        {
            if (this.getSpecAmount(_ledgerJournalTrans) == -_ledgerJournalTrans.amount())
            {
                this.updateGSTTDSAmountWhenJournalAmountMatch_IN(_ledgerJournalTrans);
            }
            else
            {
                this.updateGSTTDSAmountWhenJournalAmountNotMatch_IN(_ledgerJournalTrans);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGSTTDSAmountWhenJournalAmountNotMatch_IN</Name>
				<Source><![CDATA[
    ///<summary>
    /// Updates GST TDS related amounts,
    /// When the journal amount is different from the total amount of marked transaction.
    ///</summary>
    /// <param name = "_ledgerJournalTrans">The <c>LedgerJournalTrans</c> record.</param>
    internal void updateGSTTDSAmountWhenJournalAmountNotMatch_IN(LedgerJournalTrans _ledgerJournalTrans)
    {
        LedgerJournalTransTaxExtensionIN ledgerJournalTransTaxExtension = _ledgerJournalTrans.ledgerJournalTransTaxExtensionIN();
        ledgerJournalTransTaxExtension.InvoiceSettleAmountGSTTDS = _ledgerJournalTrans.AmountCurDebit ? _ledgerJournalTrans.AmountCurDebit : _ledgerJournalTrans.AmountCurCredit;
        ledgerJournalTransTaxExtension.ExcludeGSTAmountGSTTDS = 0;
        ledgerJournalTransTaxExtension.updateTaxableAmountGSTTDS();
        this.updateLedgerJournalTransTaxExtension(_ledgerJournalTrans, ledgerJournalTransTaxExtension);

        if (TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(_ledgerJournalTrans).ApplyGSTTDS
            && ledgerJournalTransTaxExtension.CalculateWithTaxableAmountGSTTDS)
        {
            warning("@TaxGSTTDS:ClearExcludeGSTMsg");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGSTTDSAmountWhenJournalAmountMatch_IN</Name>
				<Source><![CDATA[
    ///<summary>
    /// Updates GST TDS related amounts,
    /// When the journal amount is changed and is matched to the total amount of marked transaction.
    ///</summary>
    ///<param name = "_ledgerJournalTrans">The <c>LedgerJournalTrans</c> record.</param>
    internal void updateGSTTDSAmountWhenJournalAmountMatch_IN(LedgerJournalTrans _ledgerJournalTrans)
    {
        LedgerJournalTransTaxExtensionIN ledgerJournalTransTaxExtension = _ledgerJournalTrans.ledgerJournalTransTaxExtensionIN();
        [ledgerJournalTransTaxExtension.InvoiceSettleAmountGSTTDS, ledgerJournalTransTaxExtension.ExcludeGSTAmountGSTTDS] = this.calculateInvoiceGSTAmount_IN(_ledgerJournalTrans);
        ledgerJournalTransTaxExtension.updateTaxableAmountGSTTDS();
        this.updateLedgerJournalTransTaxExtension(_ledgerJournalTrans, ledgerJournalTransTaxExtension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateInvoiceGSTAmount_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the GST amount of the associated records in the <c>LedgerJournalTrans</c> table in the specified currency.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">The <c>LedgerJournalTrans</c> record.</param>
    /// <returns>The GST amount of associated records in the <c>LedgerJournalTrans</c> table.</returns>
    private container calculateInvoiceGSTAmount_IN(LedgerJournalTrans _ledgerJournalTrans)
    {
        ExchangeRateHelper exchangeRateHelper = ExchangeRateHelper::newCurrency(Ledger::primaryLedger(CompanyInfo::findDataArea(_ledgerJournalTrans.Company).RecId), _ledgerJournalTrans.CurrencyCode);

        return TaxGSTTDSCalculation_IN::getGSTAmountsForSpecReference_IN(
            _ledgerJournalTrans.company(),
            _ledgerJournalTrans.TableId,
            _ledgerJournalTrans.RecId,
            _ledgerJournalTrans.CurrencyCode,
            _ledgerJournalTrans.Company,
            _ledgerJournalTrans.TransDate,
            exchangeRateHelper.prepareExchangeRateForStorage(_ledgerJournalTrans.crossrate()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLedgerJournalTransTaxExtension</Name>
				<Source><![CDATA[
    private void updateLedgerJournalTransTaxExtension(
        LedgerJournalTrans _ledgerJournalTrans,
        LedgerJournalTransTaxExtensionIN _ledgerJournalTransTaxExtension)
    {
        if (FormDataUtil::isFormDataSource(_ledgerJournalTransTaxExtension))
        {
            _ledgerJournalTransTaxExtension.update();
        }
        else
        {
            _ledgerJournalTrans.packExtensionTable(_ledgerJournalTransTaxExtension);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>