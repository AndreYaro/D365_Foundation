<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventQualityReferenceTypeInventory</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventQualityReferenceTypeInventory</c> class abstracts an inventory reference document.
/// </summary>
class InventQualityReferenceTypeInventory extends InventQualityReferenceType
{
    Qty originalQty;
    PdsCWInventQty cwOriginalQty;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the default <c>InventDimId</c> value for this invent reference.
    /// </summary>
    /// <returns>
    ///    The <c>InventDimId</c> value.
    /// </returns>
    public InventDimId defaultInventDimId()
    {
        if (!this.ItemId() || !InventDistinctProductValidator::construct().isDistinctProductFullySpecified(this.ItemId(), InventDim::find(this.inventDimId())))
        {
            return this.inventDimId();
        }

        InventDim inventDimDefault;
        if (this.inventDimId())
        {
            inventDimDefault = InventDim::find(this.inventDimId());
        }
        else
        {
            inventDimDefault = InventDim::findOrCreateBlank();
        }

        inventDimDefault.initFromInventTable(
            InventTable::find(this.itemId()),
            this.inventItemOrderSetupType(),
            InventDim::find(this.inventDimId()));

        var inventDimIdLocal = InventDim::findOrCreate(inventDimDefault).InventDimId;
        this.setInventDimId(inventDimIdLocal);

        return inventDimIdLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProductDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the default product dims from <c>InventTable</c>.
    /// </summary>
    /// <returns>Returns the obtained inventory dimension id with the found dimensions.</returns>
    public InventDimId initProductDimensions()
    {
        var inventDimLocal = InventDim::findOrCreateBlank();
        inventDimLocal.initProductDimensionsFromInventTable(InventTable::find(this.ItemId()));
        var inventDimIdLocal = InventDim::findOrCreate(inventDimLocal).InventDimId;
        this.setInventDimId(inventDimIdLocal);

        return inventDimIdLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromQualityOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an instance based on the <c>InventQualityOrderTable</c> buffer.
    /// </summary>
    /// <param name="_orderTable">
    ///    An <c>InventQualityOrderTable</c> buffer.
    /// </param>
    protected void initFromQualityOrder(InventQualityOrderTable _orderTable)
    {
        inventDimId     = _orderTable.InventDimId;
        itemId          = _orderTable.ItemId;

        InventCreateQualityOrderFromInventBatchContext context = InventCreateQualityOrderFromInventBatchContext::current();
        if (context
            && context.parmCreateQualityOrderFromInventBatch())
        {
            originalQty     = 0;
            cwOriginalQty   = 0;
        }
        else
        {
            originalQty     = _orderTable.orig().Qty;
            cwOriginalQty   = _orderTable.orig().PdsCWQty;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDirection</Name>
				<Source><![CDATA[
    public InventDirection inventDirection()
    {
        return InventDirection::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventRefId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventRefId</c> value for this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>InventRefId</c> value.
    /// </returns>
    public InventRefId inventRefId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventRefQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the lot quantity of this reference document.
    /// </summary>
    /// <returns>
    ///    The quantity as an <c>InventQty</c> value.
    /// </returns>
    public InventQty inventRefQty()
    {
        InventDimParm   inventDimParm;

        InventDim inventDimOnHand = InventDim::find(inventDimId);
        inventDimParm.initFromInventDim(inventDimOnHand);
        InventOnHandQty inventOnHandQty = InventOnHandQty::newParameters(itemId, inventDimOnHand, inventDimParm);

        // For WHS items it is very hard to tell exact qty available for use.
        // For this reason we return full physical qty and let reservation deal with missing on-hand.
        return WHSInventEnabled::exist(itemId)   ?
                inventOnHandQty.physicalInvent() :
                inventOnHandQty.availPhysical() + originalQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    public Common parmBuffer(Common _buffer = null)
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWInventRefQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the lot catch weight quantity of this reference document.
    /// </summary>
    /// <returns>
    /// The catch weight quantity as an <c>InventQty</c> value.
    /// </returns>
    public PdsCWInventQty pdsCWInventRefQty()
    {
        InventDimParm   inventDimParm;

        InventDim inventDimOnHand = InventDim::find(inventDimId);
        inventDimParm.initFromInventDim(inventDimOnHand);
        InventOnHandQty inventOnHandQty = InventOnHandQty::newParameters(itemId, inventDimOnHand, inventDimParm);

        return inventOnHandQty.pdsCWAvailPhysical() + cwOriginalQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventTestReferenceType</c> value of this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>InventTestReferenceType</c> value.
    /// </returns>
    public InventTestReferenceType referenceType()
    {
        return InventTestReferenceType::Inventory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventQualityReferenceTypeInventory construct()
    {
        return new InventQualityReferenceTypeInventory();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>