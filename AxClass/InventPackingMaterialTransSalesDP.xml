<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPackingMaterialTransSalesDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventPackingMaterialTransSalesDP</c> is the report data provider class
/// for the Packing material weight - sales report.
/// </summary>
[
    SRSReportParameterAttribute(classStr(InventPackingMaterialTransSalesContract)),
    SRSReportQueryAttribute(queryStr(InventPackingMaterialTransSalesSSRS))
]
class InventPackingMaterialTransSalesDP extends SRSReportDataProviderBase
{
    InventDimParm   inventDimParm;
    FromDate        fromDate;
    ToDate          toDate;

    InventPackingMaterialTransSalesTmp inventPackingMaterialTransSalesTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    private Query buildQuery()
    {
        Query query = new Query(this.parmQuery().pack());
        QueryBuildDataSource qbds = query.dataSourceTable(tableNum(InventPackagingMaterialTrans));
        QueryBuildRange qbr = SysQuery::findOrCreateRange(qbds, fieldNum(InventPackagingMaterialTrans, InvoiceDate));
        qbr.value(queryRange(fromDate, toDate));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventPackingMaterialTransSalesTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Fills the <c>InventPackingMaterialTransSalesTmp</c> temporary table
    ///     with the data and return the table.
    /// </summary>
    /// <returns>
    ///  The <c>InventPackingMaterialTransSalesTmp</c> temporary table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(InventPackingMaterialTransSalesTmp))
    ]
    public InventPackingMaterialTransSalesTmp getInventPackingMaterialTransSalesTmp()
    {
        select inventPackingMaterialTransSalesTmp;
        return inventPackingMaterialTransSalesTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize()
    {
        InventPackingMaterialTransSalesContract contract = this.parmDataContract();
        InventDimViewContract inventDimViewContract = contract.parmInventDimViewContract();

        fromDate = contract.parmFromDate();
        toDate = contract.parmToDate();

        inventDimParm.initFromInventDimParm(inventDimViewContract.parmInventDimParm());
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRecord</Name>
				<Source><![CDATA[
    private void insertRecord(
        InventPackagingMaterialTrans _packagingMaterialTrans,
        InventPackagingMaterialCode  _packagingMaterialCode,
        InventDim                    _inventDim
        )
    {
        inventPackingMaterialTransSalesTmp.clear();
        inventPackingMaterialTransSalesTmp.initFromInventDim(_inventDim, inventDimParm);
        inventPackingMaterialTransSalesTmp.InvoiceDate        = _packagingMaterialTrans.InvoiceDate;
        inventPackingMaterialTransSalesTmp.InvoiceId          = _packagingMaterialTrans.InvoiceId;
        inventPackingMaterialTransSalesTmp.ItemId             = _packagingMaterialTrans.ItemId;
        inventPackingMaterialTransSalesTmp.LineNum            = _packagingMaterialTrans.LineNum;
        inventPackingMaterialTransSalesTmp.PackagingWeight    = _packagingMaterialTrans.PackagingWeight;
        inventPackingMaterialTransSalesTmp.SalesId            = _packagingMaterialTrans.SalesId;
        inventPackingMaterialTransSalesTmp.Name               = _packagingMaterialCode.Name;
        inventPackingMaterialTransSalesTmp.PackMaterialCode   = _packagingMaterialCode.PackMaterialCode;
        inventPackingMaterialTransSalesTmp.Unit               = _packagingMaterialCode.Unit;
        inventPackingMaterialTransSalesTmp.PackagingClassId_W = _packagingMaterialTrans.PackagingClassId_W;
        inventPackingMaterialTransSalesTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the report parameters and inserts data into the temporary table.
    /// </summary>
    public void processReport()
    {
        this.initialize();

        QueryRun queryRun = new QueryRun(this.buildQuery());
        while (queryRun.next())
        {
            this.insertRecord(
                queryRun.get(tableNum(InventPackagingMaterialTrans)),
                queryRun.get(tableNum(InventPackagingMaterialCode)),
                queryRun.get(tableNum(InventDim)));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
