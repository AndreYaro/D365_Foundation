<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFEventDocument_CancelBySubstitution_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Represents the event of cancelling an electronic fiscal document.
/// </summary>
internal final class EFEventDocument_CancelBySubstitution_BR extends EFEventDocument_Cancel_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applicationVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the application version.
    /// </summary>
    /// <returns>
    /// The application version.
    /// </returns>
    [Hookable(false)]
    public EFDocApplicationVersion_BR applicationVersion()
    {
        return fiscalDocument.ApplicationVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eventDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a constant that describe the message type.
    /// </summary>
    /// <returns>
    /// A constant that describes the message type.
    /// </returns>
    [Hookable(false)]
    public str eventDescription()
    {
        return 'Cancelamento por substituicao';
    }

]]></Source>
			</Method>
			<Method>
				<Name>eventType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a constant that represents the event type.
    /// </summary>
    /// <returns>
    /// A constant that represents the event type.
    /// </returns>
    [Hookable(false)]
    public str eventType()
    {
        return '110112';
    }

]]></Source>
			</Method>
			<Method>
				<Name>issuerState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the issuer state.
    /// </summary>
    /// <returns>The issuer state.</returns>
    [Hookable(false)]
    public LogisticsAddressStateId issuerState()
    {
        LogisticsPostalAddress logisticsPostalAddress = LogisticsPostalAddress::findRecId(fiscalDocument.FiscalEstablishmentPostalAddress);
        return LogisticsAddressState::find(logisticsPostalAddress.CountryRegionId, logisticsPostalAddress.State).IBGECode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>issuerType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the isuer type.
    /// </summary>
    /// <returns>The issuer type.</returns>
    [Hookable(false)]
    public str issuerType()
    {
        return '1';
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(FiscalDocument_BR _fiscalDocument)
    {
        super(_fiscalDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>substitutionAccessKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the substitution access key.
    /// </summary>
    /// <returns>The substitution access key.</returns>
    [Hookable(false)]
    public EFDocAccessKey_BR substitutionAccessKey()
    {
        return fiscalDocument.SubstitutionAccessKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the class instance.
    /// </summary>
    /// <param name = "_fiscalDocument">The fiscal document.</param>
    /// <returns>The class instance.</returns>
    [Hookable(false)]
    public static EFEventDocument_CancelBySubstitution_BR construct(FiscalDocument_BR _fiscalDocument)
    {
        EFEventDocument_CancelBySubstitution_BR instance = new EFEventDocument_CancelBySubstitution_BR(_fiscalDocument);
        instance.parmEventType(EFDocSchemaType_BR::CancelAsEvent);

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>