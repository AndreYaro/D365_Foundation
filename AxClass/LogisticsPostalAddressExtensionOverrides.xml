<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsPostalAddressExtensionOverrides</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsPostalAddressExtensionOverrides
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static LogisticsPostalAddressExtensionOverrides construct()
    {
        return new LogisticsPostalAddressExtensionOverrides();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxInformation_IN_jumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jumps to main form determined by the field in TaxInformation_IN where jumpRef is triggered.
    /// </summary>
    /// <param name = "_targetField">Field in TaxInformation_IN where the jumpRef is triggered</param>
    public void taxInformation_IN_jumpRef(FormDataObject _targetField)
    {
        FormDataSource    taxInformation_ds = _targetField.datasource();
        TaxInformation_IN taxInformation_IN = taxInformation_ds.cursor();
        FormRun           form = taxInformation_ds.formRun();
        FormDataSource    logisticsLocation_ds = form.dataSource(formDataSourceStr(LogisticsPostalAddress, LogisticsLocation)) as FormDataSource;
        LogisticsLocation logisticsLocation = logisticsLocation_ds.cursor();

        switch (_targetField.fieldId())
        {
            case fieldNum(TaxInformation_IN, ECCNumber):
                TaxRegistrationNumbers_IN::jumpRef(TaxRegistrationNumbers_IN::find(taxInformation_IN.eccNumber).RegistrationNumber, TaxType_IN::Excise, logisticsLocation);
                break;
            case fieldNum(TaxInformation_IN, IECRegistrationNumberTable):
                TaxRegistrationNumbers_IN::jumpRef(TaxRegistrationNumbers_IN::find(taxInformation_IN.iecRegistrationNumberTable).RegistrationNumber, TaxType_IN::Customs, logisticsLocation);
                break;
            case fieldNum(TaxInformation_IN, ManECCRegistrationNumberTable):
                TaxRegistrationNumbers_IN::jumpRef(TaxRegistrationNumbers_IN::find(taxInformation_IN.ManECCRegistrationNumberTable).RegistrationNumber, TaxType_IN::Excise, logisticsLocation);
                break;
            case fieldNum(TaxInformation_IN, SalesTaxRegistrationNumber):
                TaxRegistrationNumbers_IN::jumpRef(
                    TaxRegistrationNumbers_IN::find(taxInformation_IN.SalesTaxRegistrationNumber).RegistrationNumber,
                    TaxType_IN::SalesTax,
                    logisticsLocation);
                break;
            case fieldNum(TaxInformation_IN, STCRegistrationNumberTable):
                TaxRegistrationNumbers_IN::jumpRef(TaxRegistrationNumbers_IN::find(taxInformation_IN.stcRegistrationNumberTable).RegistrationNumber, TaxType_IN::ServiceTax, logisticsLocation);
                break;
            case fieldNum(TaxInformation_IN, TraderECCRegistrationNumberTable):
                TaxRegistrationNumbers_IN::jumpRef(TaxRegistrationNumbers_IN::find(taxInformation_IN.TraderECCRegistrationNumberTable).RegistrationNumber, TaxType_IN::Excise, logisticsLocation);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxRegistration_TaxRegTypeApplicabilityRule_lookupQuery</Name>
				<Source><![CDATA[
    private Query taxRegistration_TaxRegTypeApplicabilityRule_lookupQuery(FormReferenceControl _formReferenceControl)
    {
        FormRun form = _formReferenceControl.formRun();
        FormDataSource logisticsPostalAddress_ds = form.dataSource(formDataSourceStr(LogisticsPostalAddress, LogisticsPostalAddress)) as FormDataSource;
        LogisticsPostalAddress logisticsPostalAddress = logisticsPostalAddress_ds.cursor();
        LogisticsEntityPostalAddressFormHandler postalAddressForm = form.parmPostalAddressForm();
        TableId callerTableId = postalAddressForm.getCallerRecord().TableId;

        // Create a custom Query that filters on tax registration rules.
        Query query = new Query();
        QueryBuildDataSource qbdsTaxRegistrationTypeRules = query.addDataSource(tableNum(TaxRegistrationTypeApplicabilityRule));

        // Filter tax registration for country of the given address or company primary address.
        qbdsTaxRegistrationTypeRules.addRange(fieldNum(TaxRegistrationTypeApplicabilityRule, CountryRegionId)).value(queryValue(logisticsPostalAddress.CountryRegionId));

        if (callerTableId == tableNum(CustTable)
            || callerTableId == tableNum(VendTable))
        {
            LogisticsAddressCountryRegionId companyInfoCountryRegionId = CompanyInfo::find().postalAddress().CountryRegionId;
            if (companyInfoCountryRegionId
                && logisticsPostalAddress.CountryRegionId != companyInfoCountryRegionId)
            {
                qbdsTaxRegistrationTypeRules.addRange(fieldNum(TaxRegistrationTypeApplicabilityRule, CountryRegionId)).value(queryValue(companyInfoCountryRegionId));
            }
        }

        qbdsTaxRegistrationTypeRules.addRange(fieldNum(TaxRegistrationTypeApplicabilityRule, PartyTypeRestriction)).value(queryValue(PartyTypeRestriction::None));
        if (postalAddressForm.parmTaxRegistrationPartyType() != PartyTypeRestriction::None)
        {
            qbdsTaxRegistrationTypeRules.addRange(fieldNum(TaxRegistrationTypeApplicabilityRule, PartyTypeRestriction)).value(queryValue(postalAddressForm.parmTaxRegistrationPartyType()));
        }

        if (!postalAddressForm.getIsPrimaryTaxRegistration())
        {
            qbdsTaxRegistrationTypeRules.addRange(fieldNum(TaxRegistrationTypeApplicabilityRule, IsPrimaryAddressRestricted)).value(queryValue(NoYes::No));
        }
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxRegistration_TaxRegTypeApplicabilityRule_lookupReference</Name>
				<Source><![CDATA[
    public Common taxRegistration_TaxRegTypeApplicabilityRule_lookupReference(FormReferenceControl _formReferenceControl)
    {
        SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(TaxRegistrationTypeApplicabilityRule), _formReferenceControl, true);

        sysTableLookup.addLookupfield(fieldNum(TaxRegistrationTypeApplicabilityRule, TaxRegistrationType));
        sysTableLookup.addLookupfield(fieldNum(TaxRegistrationTypeApplicabilityRule, CountryRegionId));
        sysTableLookup.parmQuery(this.taxRegistration_TaxRegTypeApplicabilityRule_lookupQuery(_formReferenceControl));

        return sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxRegistration_TaxRegTypeApplicabilityRule_resolveReference</Name>
				<Source><![CDATA[
    public Common taxRegistration_TaxRegTypeApplicabilityRule_resolveReference(FormReferenceControl _formReferenceControl)
    {
        Query query = this.taxRegistration_TaxRegTypeApplicabilityRule_lookupQuery(_formReferenceControl);

        QueryBuildDataSource qbdsTaxRegistrationTypeRules = query.dataSourceTable(tableNum(TaxRegistrationTypeApplicabilityRule));

        QueryBuildDataSource qbdsTaxRegistrationType = qbdsTaxRegistrationTypeRules.addDataSource(tableNum(TaxRegistrationType));
        qbdsTaxRegistrationType.relations(true);
        qbdsTaxRegistrationType.joinMode(JoinMode::ExistsJoin);

        QueryBuildRange qbrTaxRegstrationType = qbdsTaxRegistrationType.addRange(fieldNum(TaxRegistrationType, TaxRegstrationType));

        var filterValue = _formReferenceControl.filterValue(AbsoluteFieldBinding::construct(fieldStr(TaxRegistrationType, TaxRegstrationType), tableStr(TaxRegistrationType))).value();
        qbrTaxRegstrationType.value(SysQuery::valueLikeAfter(filterValue));

        QueryRun queryRun = new QueryRun(query);

        TaxRegistrationTypeApplicabilityRule taxRegistrationRule;

        if (queryRun.next())
        {
            RecId taxRegistrationRuleRecId = queryRun.get(tableNum(TaxRegistrationTypeApplicabilityRule)).RecId;

            // taxRegistrationRule should be the only one for given conditions
            if (!queryRun.next())
            {
                taxRegistrationRule = TaxRegistrationTypeApplicabilityRule::find(taxRegistrationRuleRecId);
            }
        }

        return taxRegistrationRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxRegistrationGrid_RegistrationNumber_tooltip</Name>
				<Source><![CDATA[
    public str taxRegistrationGrid_RegistrationNumber_tooltip(FormStringControl _targetControl)
    {
        FormDataSource taxRegistration_ds = _targetControl.dataSourceObject();
        TaxRegistration taxRegistration = taxRegistration_ds.cursor();

        return taxRegistration.showFormat();
    }

]]></Source>
			</Method>
			<Method>
				<Name>TMSCarrierInfo_CarrierCode_jumpRef</Name>
				<Source><![CDATA[
	/// <summary>
    /// Open the TMSCarrier form, which displays the given carrier.
    /// </summary>
    /// <param name = "_tmsCarrierCodeControl">The control that contains the code of the carrier to display.</param>
    public void TMSCarrierInfo_CarrierCode_jumpRef(FormStringControl _tmsCarrierCodeControl)
    {
        TMSCarrier::jumpRefCarrierCode(_tmsCarrierCodeControl.valueStr());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>