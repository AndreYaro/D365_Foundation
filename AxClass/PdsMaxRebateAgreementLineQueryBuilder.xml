<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsMaxRebateAgreementLineQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///		The class <c>PdsMaxRebateAgreementLineQueryBuilder</c> builds the query
///     for selecting the rebate agreement line to create a rebate for.
/// </summary>
public class PdsMaxRebateAgreementLineQueryBuilder
{
    PDSRebateAgreement          rebateAgreement;
    PDSRebateAgreementLine      pdsRebateAgreementLine;
    PDSRebateItem               pdsRebateItem;
    TAMMerchandisingEvent       tamMerchandisingEvent;
    TAMPromotionItem            tamPromotionItem;
    InventDim                   selectedInventDim;
    InventDim                   inventDim;
    ItemId                      itemId;
    SalesUnit                   salesUnit;
    CurrencyCode                currency;
    SalesQty                    rebateQty;
    AmountCur                   rebateAmt;
    SysDaQueryObject			queryObject;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///		Creates an instance of <c>PdsMaxRebateAgreementLineQueryBuilder</c> class.
    /// </summary>
    /// <param name="_rebateAgreement">
    ///		A <c>PDSRebateAgreement</c> record.
    /// </param>
    /// <param name="_inventDim">
    ///		A <c>InventDim</c> record.
    /// </param>
    /// <param name="_itemId">
    ///		An item ID.
    /// </param>
    /// <param name="_rebateQty">
    ///     The Rebate quantity.
    /// </param>
    /// <param name="_salesUnit">
    ///     The sales unit.
    /// </param>
    /// <param name="_currency">
    ///     The currency.
    /// </param>
    /// <param name="_rebateAmt">
    ///     The Rebate amount.
    /// </param>
    /// <returns>
    ///		An instance of <c>PdsMaxRebateAgreementLineQueryBuilder</c> class.
	/// </returns>
    internal static PdsMaxRebateAgreementLineQueryBuilder newFromQuery(
        PDSRebateAgreement          _rebateAgreement,
        InventDim                   _inventDim,
        ItemId                      _itemId,
        SalesQty                    _rebateQty,
        SalesUnit                   _salesUnit,
        CurrencyCode                _currency,
        AmountCur                   _rebateAmt)
    {
        PdsMaxRebateAgreementLineQueryBuilder queryBuilder = new PdsMaxRebateAgreementLineQueryBuilder();

        queryBuilder.rebateAgreement    = _rebateAgreement;
        queryBuilder.inventDim          = _inventDim;
        queryBuilder.itemId             = _itemId;
        queryBuilder.rebateQty          = _rebateQty;
        queryBuilder.salesUnit          = _salesUnit;
        queryBuilder.currency           = _currency;
        queryBuilder.rebateAmt          = _rebateAmt;

        return queryBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPdsRebateAgreementLineMax</Name>
				<Source><![CDATA[
    /// <summary>
    ///		Selects the rebate agreement line that has the maximum rebate line break.
    /// </summary>
    /// <returns>
    ///		The <c>PDSRebateAgreementLine</c> record to create a rebate for.
    /// </returns>
    internal PDSRebateAgreementLine selectPdsRebateAgreementLineMax()
    {
        queryObject = new SysDaQueryObject(pdsRebateAgreementLine);

        // Account for the custom item code and ensure that we check the item list.
        if (rebateAgreement.PDSItemRebateCode == PDSRebateItemCode::Selection)
        {
            if (rebateAgreement.PdsRebateProgramType == PdsRebateProgramType::BillBack)
            {
                if (rebateAgreement.PDSRebateLineBreakType == PdsRebateLineBreakType::Amount)
                {
                    this.selectPdsRebateAgreementLineForPromotionItem(fieldStr(PDSRebateAgreementLine, RebateFromAmount));
                }
                else if (rebateAgreement.PDSRebateLineBreakType == PdsRebateLineBreakType::Quantity)
                {
                    this.selectPdsRebateAgreementLineForPromotionItem(fieldStr(PDSRebateAgreementLine, RebateFromQty));
                }
            }
            else
            {
                if (rebateAgreement.PDSRebateLineBreakType == PdsRebateLineBreakType::Amount)
                {
                    this.selectPdsRebateAgreementLineForRebateItem(fieldStr(PDSRebateAgreementLine, RebateFromAmount));
                }
                else if (rebateAgreement.PDSRebateLineBreakType == PdsRebateLineBreakType::Quantity)
                {
                    this.selectPdsRebateAgreementLineForRebateItem(fieldStr(PDSRebateAgreementLine, RebateFromQty));
                }
            }
        }
        else
        {
            if (rebateAgreement.PDSRebateLineBreakType == PdsRebateLineBreakType::Amount)
            {
                this.selectPdsRebateAgreementLine(fieldStr(PDSRebateAgreementLine, RebateFromAmount));
            }
            else if (rebateAgreement.PDSRebateLineBreakType == PdsRebateLineBreakType::Quantity)
            {
                this.selectPdsRebateAgreementLine(fieldStr(PDSRebateAgreementLine, RebateFromQty));
            }
        }

		SysDaFindStatement findStatement = new SysDaFindStatement();
		findStatement.execute(new SysDaFindObject(queryObject));

        return pdsRebateAgreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPdsRebateAgreementLineForPromotionItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the query for selecting the rebate agreement line for promotion item.
    /// </summary>
    /// <param name = "_orderByField">
    ///     The order by field ID.
    /// </param>
    protected void selectPdsRebateAgreementLineForPromotionItem(str	_orderByField)
    {
        this.selectPdsRebateAgreementLine(_orderByField);

        SysDaQueryObject tamMerchandisingEventQueryObject   = this.joinTAMMerchandisingEvent(queryObject);
        SysDaQueryObject tamPromotionItemQueryObject        = this.joinTAMPromotionItem(tamMerchandisingEventQueryObject);

        TAMRebateInventDimExistsJoinQueryBuilder tamRebateInventDimExistsJoinQueryBuilder = new TAMRebateInventDimExistsJoinQueryBuilder();
        tamRebateInventDimExistsJoinQueryBuilder.existsJoinInventDim(tamPromotionItemQueryObject, new SysDaFieldExpression(tamPromotionItem, fieldStr(TamPromotionItem, InventDimID)), inventDim, selectedInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPdsRebateAgreementLineForRebateItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the query for selecting the rebate agreement line for rebate item.
    /// </summary>
    /// <param name = "_orderByField">
    ///     The order by field ID.
    /// </param>
    protected void selectPdsRebateAgreementLineForRebateItem(str _orderByField)
    {
        this.selectPdsRebateAgreementLine(_orderByField);

        SysDaQueryObject pdsRebateItemQueryObject = this.joinPDSRebateItem(queryObject);

        TAMRebateInventDimExistsJoinQueryBuilder tamRebateInventDimExistsJoinQueryBuilder = new TAMRebateInventDimExistsJoinQueryBuilder();
        tamRebateInventDimExistsJoinQueryBuilder.existsJoinInventDim(pdsRebateItemQueryObject, new SysDaFieldExpression(pdsRebateItem, fieldStr(PdsRebateItem, InventDimID)), inventDim, selectedInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPdsRebateAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the query for selecting the rebate agreement line.
    /// </summary>
    /// <param name = "_orderByField">
    ///     The order by field ID.
    /// </param>
    protected void selectPdsRebateAgreementLine(str	_orderByField)
    {
        queryObject.firstOnlyHint = SysDaFirstOnlyHint::FirstOnly1;
        queryObject.orderByClause().addDescending(_orderByField);
        queryObject.whereClause(this.buildPdsRebateAgreementLineWhereClause());
    }

]]></Source>
			</Method>
			<Method>
				<Name>joinTAMMerchandisingEvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Adds a join with merchandising event.
    /// </summary>
    /// <param name = "_queryObject">
    ///     A <c>SysDaQueryObject</c> instance.
    /// </param>
    /// <returns>
    ///     A <c>SysDaQueryObject</c> instance.
    /// </returns>
    private SysDaQueryObject joinTAMMerchandisingEvent(SysDaQueryObject _queryObject)
    {
        SysDaQueryObject tamMerchandisingEventQueryObject = new SysDaQueryObject(tamMerchandisingEvent);
        
        tamMerchandisingEventQueryObject.projection().add(fieldStr(TAMMerchandisingEvent, RecId));
        tamMerchandisingEventQueryObject.whereClause(this.buildTAMMerchandisingEventWhereClause());

        _queryObject.joinClause(SysDaJoinKind::InnerJoin, tamMerchandisingEventQueryObject);

        return tamMerchandisingEventQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>joinTAMPromotionItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Adds a join with promotion item.
    /// </summary>
    /// <param name = "_queryObject">
    ///     A <c>SysDaQueryObject</c> instance.
    /// </param>
    /// <returns>
    ///     A <c>SysDaQueryObject</c> instance.
    /// </returns>
    private SysDaQueryObject joinTAMPromotionItem(SysDaQueryObject _queryObject)
    {
        SysDaQueryObject tamPromotionItemQueryObject = new SysDaQueryObject(tamPromotionItem);
        
        tamPromotionItemQueryObject.projection().add(fieldStr(TamPromotionItem, InventDimID));
        tamPromotionItemQueryObject.whereClause(this.buildTAMPromotionItemWhereClause());

        _queryObject.joinClause(SysDaJoinKind::InnerJoin, tamPromotionItemQueryObject);

        return tamPromotionItemQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>joinPDSRebateItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Adds a join with rebate item.
    /// </summary>
    /// <param name = "_queryObject">
    ///     A <c>SysDaQueryObject</c> instance.
    /// </param>
    /// <returns>
    ///     A <c>SysDaQueryObject</c> instance.
    /// </returns>
    private SysDaQueryObject joinPDSRebateItem(SysDaQueryObject _queryObject)
    {
        SysDaQueryObject pdsRebateItemQueryObject = new SysDaQueryObject(pdsRebateItem);
        
        pdsRebateItemQueryObject.projection().add(fieldStr(PdsRebateItem, InventDimID));
        pdsRebateItemQueryObject.whereClause(this.buildPdsRebateItemWhereClause());

        _queryObject.joinClause(SysDaJoinKind::InnerJoin, pdsRebateItemQueryObject);

        return pdsRebateItemQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildPdsRebateAgreementLineWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the where clause for rebate agreement line.
    /// </summary>
    /// <returns>
    ///     A <c>SysDaQueryExpression</c> instance.
    /// </returns>
    protected SysDaQueryExpression buildPdsRebateAgreementLineWhereClause()
    {
        SysDaQueryExpression whereClause =  new SysDaEqualsExpression(
                                                new SysDaFieldExpression(pdsRebateAgreementLine, fieldStr(PdsRebateAgreementLine, RebateAgreementRefRecId)),
                                                new SysDaValueExpression(rebateAgreement.RecId));
        return whereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildTAMMerchandisingEventWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the where clause for merchandising event.
    /// </summary>
    /// <returns>
    ///     A <c>SysDaQueryExpression</c> instance.
    /// </returns>
    private SysDaQueryExpression buildTAMMerchandisingEventWhereClause()
    {
        SysDaQueryExpression whereClause =  new SysDaEqualsExpression(
                                                new SysDaFieldExpression(tamMerchandisingEvent, fieldStr(TAMMerchandisingEvent, MerchandisingEventID)),
                                                new SysDaValueExpression(rebateAgreement.tamMerchandisingEventID));
        return whereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildTAMPromotionItemWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the where clause for promotion item.
    /// </summary>
    /// <returns>
    ///     A <c>SysDaQueryExpression</c> instance.
    /// </returns>
    private SysDaQueryExpression buildTAMPromotionItemWhereClause()
    {
        SysDaQueryExpression whereClause =  new SysDaEqualsExpression(
                                                new SysDaFieldExpression(tamPromotionItem, fieldStr(TamPromotionItem, MerchandisingEventID)),
                                                new SysDaFieldExpression(tamMerchandisingEvent, fieldStr(TAMMerchandisingEvent, MerchandisingEventID)))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(tamPromotionItem, fieldStr(TamPromotionItem, ItemID)),
                                                new SysDaValueExpression(itemId)));
        return whereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildPdsRebateItemWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the where clause for rebate item query.
    /// </summary>
    /// <returns>
    ///     A <c>SysDaQueryExpression</c> instance.
    /// </returns>
    private SysDaQueryExpression buildPdsRebateItemWhereClause()
    {
        SysDaQueryExpression whereClause =  new SysDaEqualsExpression(
                                                new SysDaFieldExpression(pdsRebateItem, fieldStr(PdsRebateItem, RebateAgreementRefRecId)),
                                                new SysDaFieldExpression(pdsRebateAgreementLine, fieldStr(PdsRebateAgreementLine, RebateAgreementRefRecId)))
                                            .and(new SysDaEqualsExpression(
                                                new SysDaFieldExpression(pdsRebateItem, fieldStr(PdsRebateItem, ItemID)),
                                                new SysDaValueExpression(itemId)));
        return whereClause;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>