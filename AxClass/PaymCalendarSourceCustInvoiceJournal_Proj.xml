<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PaymCalendarSourceCustInvoiceJournal_Proj</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PaymCalendarSourceCustInvoiceJournal_Proj</c> class provides an interface that is used to find
/// the payment calendars when the source is the <c>ProjProposalJour</c> table.
/// </summary>
internal class PaymCalendarSourceCustInvoiceJournal_Proj implements PaymCalendarIDerivationSource, PaymCalendarIBankAddress, PaymCalendarIDocumentAddress
{
    private ProjProposalJour projProposalJour;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBankPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a postal address that is associated to a bank account.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record that represents the postal address.
    /// </returns>
    public LogisticsPostalAddress getBankPostalAddress()
    {
        LogisticsPostalAddress postalAddress;

        CustBankAccountId custBankAccountId = projProposalJour.CustBankAccountId ?
                                              projProposalJour.CustBankAccountId :
                                              CustTable::find(projProposalJour.InvoiceAccount).BankAccount;
        if (custBankAccountId)
        {
            CustBankAccount custBankAccount = CustBankAccount::findByCompany(projProposalJour.DataAreaId,
                                                                             projProposalJour.InvoiceAccount,
                                                                             custBankAccountId);

            if (custBankAccount.Location)
            {
                postalAddress = LogisticsLocationEntity::location2PostalAddress(custBankAccount.Location);
            }
        }

        return postalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a postal address that is associated to a document.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record that represents the postal address.
    /// </returns>
    public LogisticsPostalAddress getDocumentPostalAddress()
    {
        LogisticsPostalAddress postalAddress;

        LogisticsLocationRecId logisticsLocationRecId = ProjFundingSource::findByContractAndCustomer(projProposalJour.ProjInvoiceProjId,
                                                                                                     projProposalJour.OrderAccount).InvoiceLocation;

        if (logisticsLocationRecId)
        {
            postalAddress = LogisticsLocationEntity::location2PostalAddress(logisticsLocationRecId);
        }

        return postalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrimaryPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a postal address that is associated to a third-party entity.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record that represents the postal address.
    /// </returns>
    public LogisticsPostalAddress getPrimaryPostalAddress()
    {
        LogisticsPostalAddress localPostalTable;

        CustTable custTable = CustTable::findByCompany(projProposalJour.DataAreaId, projProposalJour.InvoiceAccount);

        if (custTable)
        {
            localPostalTable = custTable.postalAddress();
        }

        return localPostalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a payment calendar derivation source instance for a specified record.
    /// </summary>
    /// <param name="_projProposalJour">
    /// A <c>ProjProposalJour</c> record that specifies the initialization data.
    /// </param>
    private void initialize(ProjProposalJour _projProposalJour)
    {
        projProposalJour = _projProposalJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModuleType</Name>
				<Source><![CDATA[
    public PaymCalendarModuleType parmModuleType()
    {
        return PaymCalendarModuleType::Customer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public PaymMode parmPaymMode()
    {
        return projProposalJour.PaymMode ? projProposalJour.PaymMode : CustTable::find(projProposalJour.InvoiceAccount).PaymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymTermDataAreaId</Name>
				<Source><![CDATA[
    public DataAreaId parmPaymTermDataAreaId()
    {
        return projProposalJour.DataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymTermId</Name>
				<Source><![CDATA[
    public PaymTermId parmPaymTermId()
    {
        return projProposalJour.Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>PaymCalendarSourceCustInvoiceJournal_Proj</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>PaymCalendarSourceCustInvoiceJournal_Proj</c> class.
    /// </returns>
    private static PaymCalendarSourceCustInvoiceJournal_Proj construct()
    {
        return new PaymCalendarSourceCustInvoiceJournal_Proj();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCalendarSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>PaymCalendarSourceCustInvoiceJournal_Proj</c> class.
    /// </summary>
    /// <param name="_projProposalJour">
    /// A <c>ProjProposalJour</c> record to load.
    /// </param>
    /// <returns>
    /// A new instance of the <c>PaymCalendarSourceCustInvoiceJournal_Proj</c> class.
    /// </returns>
    public static PaymCalendarSourceCustInvoiceJournal_Proj newCalendarSource(ProjProposalJour _projProposalJour)
    {
        PaymCalendarSourceCustInvoiceJournal_Proj paymCalendarSourceCustInvoiceJournal_Proj = PaymCalendarSourceCustInvoiceJournal_Proj::construct();
        paymCalendarSourceCustInvoiceJournal_Proj.initialize(_projProposalJour);

        return paymCalendarSourceCustInvoiceJournal_Proj;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>