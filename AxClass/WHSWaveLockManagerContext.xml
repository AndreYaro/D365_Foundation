<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveLockManagerContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWaveLockManagerContext</c> is used to keep track of a shared <c>WHSWaveLockManager</c> instance to be used throughout wave processing
/// instead of creating a new instance (and thus risking locking conflicts from ourselves) each time.
/// </summary>
internal class WHSWaveLockManagerContext implements System.IDisposable
{
    private static WHSWaveLockManagerContext instance;

    private WHSWaveLockManager waveLockManager;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void Dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <returns>A new instance of the class.</returns>
    [Hookable(false)]
    internal static WHSWaveLockManagerContext construct()
    {
        return new WHSWaveLockManagerContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWaveLockManagerContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the <c>WHSWaveLockManagerContext</c> class.
    /// </summary>
    /// <param name = "_waveLockManager">An instance of the <c>WHSWaveLockManager</c> class we want to have available from sub-flows.</param>
    /// <returns>A new instance of the class.</returns>
    [Hookable(false)]
    internal static WHSWaveLockManagerContext newWaveLockManagerContext(WHSWaveLockManager _waveLockManager)
    {
        var context = WHSWaveLockManagerContext::construct();
        context.waveLockManager = _waveLockManager;

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of the class.
    /// </summary>
    /// <returns>The instance of the class. If no instance is created null is returned.</returns>
    [Hookable(false)]
    internal static WHSWaveLockManagerContext instance()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWaveLockManager</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSWaveLockManager parmWaveLockManager()
    {
        return waveLockManager;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>