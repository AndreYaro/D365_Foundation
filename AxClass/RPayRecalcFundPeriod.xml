<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayRecalcFundPeriod</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RPayRecalcFundPeriod extends RunBase
{
    RHRMEmplId  emplId;
    DialogField dlgEmplId;
    QueryRun    queryRun;

    #define.CurrentVersion(1)

    #localmacro.CurrentList
        emplId
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        Dialog dialog;

        dialog = super();

        dlgEmplId = dialog.addFieldValue(extendedTypeStr(RHRMEmplId), emplId);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            emplId = dlgEmplId.value();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        this.initQueryRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQueryRun</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void initQueryRun()
    {
        Query   query;
        QueryBuildDatasource qbds;

        query = new Query();
        qbds = query.addDataSource(tablenum(RPayCounterTable));
        FindOrCreateRange_W(qbds, fieldnum(RPayCounterTable, CounterType), queryValue(RPayCounterType::Fund)).status(RangeStatus::Locked);
        FindOrCreateRange_W(qbds, fieldnum(RPayCounterTable, LineType), queryValue(RPayCtypeType::BudgetFund)).status(RangeStatus::Locked);
        qbds.addRange(fieldnum(RPayCounterTable, CounterUnit));

        queryRun = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList, queryRun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        if (!queryRun)
        {
            this.initQueryRun();
        }

        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        RPayCounterTable    payCounterTable;
        RPayTaxSumCalc      taxSumCalc;

        while (queryRun.next())
        {
            payCounterTable = queryRun.get(tablenum(RPayCounterTable));
            taxSumCalc = new RPayTaxSumCalc(true);
            taxSumCalc.runFundPeriod(emplId, payCounterTable.CounterUnit);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer         version     = RunBase::getVersion(packedClass);
        PackedQueryRun  packedQuery;

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList, packedQuery] = packedClass;

                if (SysQuery::isPackedOk(packedQuery))
                {
                    queryRun = new QueryRun(packedQuery);
                }

                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayRecalcFundPeriod construct()
    {
        return new RPayRecalcFundPeriod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ClassDescription description()
    {
        return "@RUP614";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RPayRecalcFundPeriod    recalcFundPeriod = RPayRecalcFundPeriod::construct();

        if (recalcFundPeriod.prompt())
        {
            recalcFundPeriod.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>