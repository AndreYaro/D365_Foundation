<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocumentIncomingXmlDocLineTax_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class responsible to read an xml fiscal document and retrieve the tax information (IPI/ICMS) related to a line
/// </summary>
class EFDocumentIncomingXmlDocLineTax_BR
{
    EFDocReceivedXmlReader_BR xmlReader;
    int                       xmlLinePosition;
    #EFDocumentXpath_BR
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAmountByPath</Name>
				<Source><![CDATA[
    private TaxAmount getAmountByPath(str _path1, str _path2 = '', str _path3 = '')
    {
        str xpath = strFmt(_path1, xmlLinePosition);
        TaxAmount result = str2num(xmlReader.getNodeContent(xpath));

        if (!result && _path2)
        {
            xpath = strFmt(_path2, xmlLinePosition);
            result = str2num(xmlReader.getNodeContent(xpath));

            if (!result && _path3)
            {
                xpath = strFmt(_path3, xmlLinePosition);
                result = str2num(xmlReader.getNodeContent(xpath));
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCst</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets CST value from the xml line
    /// </summary>
    /// <returns>
    /// Origin + CST for ICMS; CST for ICMS SIMPLES
    /// </returns>
    public EFDocRecXmlCst_BR getCst()
    {
        str xpath    = strFmt(#FiscalDocumentLineCstXPath, xmlLinePosition);
        str value    = xmlReader.getNodeContent(xpath);

        if (value == '')
        {
            value = this.getCstSimples();
        }
        else
        {
            value = this.getOrigin() + value;
        }

        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCstSimples</Name>
				<Source><![CDATA[
    private EFDocRecXmlCst_BR getCstSimples()
    {
        str xpath = strFmt(#FiscalDocumentLineCstSimplesXPath, xmlLinePosition);
        return xmlReader.getNodeContent(xpath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFcpStAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets FCP ST amount from the xml line.
    /// </summary>
    /// <returns>
    /// FCP ST amount tag content.
    /// </returns>
    internal TaxAmount getFcpStAmount()
    {
        return this.getAmountByPath(EFdocumentXPathConstants_BR::fiscalDocumentLineFcpStAmountXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineFcpStAmountRetXpath, EFdocumentXPathConstants_BR::fiscalDocumentLineICMSSN500FcpStAmountRetXpath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFcpStBaseAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets FCP ST Base amount from the xml line.
    /// </summary>
    /// <returns>
    /// FCP ST Base amount tag content.
    /// </returns>
    internal TaxBase getFcpStBaseAmount()
    {
        return this.getAmountByPath(EFdocumentXPathConstants_BR::fiscalDocumentLineFcpStBaseAmountXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineFcpStBaseAmountRetXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineICMSSN500FcpStBaseAmountRetXPath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFcpStValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets FCP ST Value from the xml line.
    /// </summary>
    /// <returns>
    /// FCP ST Value tag content.
    /// </returns>
    internal TaxValue getFcpStValue()
    {
        return this.getAmountByPath(EFdocumentXPathConstants_BR::fiscalDocumentLineFcpStValueXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineFcpStValueRetXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineICMSSN500FcpStValueRetXPath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIcmsAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ICMS amount from the xml line
    /// </summary>
    /// <returns>
    /// ICMS amount tag content
    /// </returns>
    /// <remarks>
    /// Works for both ordinary ICMS and ICMS SIMPLES
    /// </remarks>
    public TaxAmount getIcmsAmount()
    {
        str xpath = strFmt(#FiscalDocumentLineIcmsAmountXPath, xmlLinePosition);
        str value = xmlReader.getNodeContent(xpath);

        if (value == '')
        {
            value = this.getIcmsSimplesAmountAsStr();
        }

        return str2num(value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIcmsBaseAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ICMS base amount from the xml line
    /// </summary>
    /// <returns>
    /// ICMS base amount tag content
    /// </returns>
    public TaxBase getIcmsBaseAmount()
    {
        str xpath = strFmt(#FiscalDocumentLineIcmsBaseAmountXPath, xmlLinePosition);
        return str2num(xmlReader.getNodeContent(xpath));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIcmsSimplesAmountAsStr</Name>
				<Source><![CDATA[
    private str getIcmsSimplesAmountAsStr()
    {
        str xpath = strFmt(#FiscalDocumentLineIcmsSimplesAmountXPath, xmlLinePosition);
        return xmlReader.getNodeContent(xpath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIcmsSimplesValueAsStr</Name>
				<Source><![CDATA[
    private str getIcmsSimplesValueAsStr()
    {
        str xpath = strFmt(#FiscalDocumentLineIcmsSimplesValueXPath, xmlLinePosition);
        return xmlReader.getNodeContent(xpath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIcmsStAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ICMS ST amount from the xml line
    /// </summary>
    /// <returns>
    /// ICMS ST amount tag content
    /// </returns>
    public TaxAmount getIcmsStAmount()
    {
        return this.getAmountByPath(#FiscalDocumentLineIcmsStAmount, EFdocumentXPathConstants_BR::fiscalDocumentLineIcmsStAmountRetXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineICMSSN500IcmsStAmountRetXpath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIcmsStBaseAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ICMS ST Base amount from the xml line
    /// </summary>
    /// <returns>
    /// ICMS ST Base amount tag content
    /// </returns>
    public TaxBase getIcmsStBaseAmount()
    {
        return this.getAmountByPath(#FiscalDocumentLineIcmsStBaseAmountXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineIcmsStBaseAmountRetXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineICMSSN500IcmsStBaseAmountRetXpath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIcmsStValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ICMS ST Value from the xml line
    /// </summary>
    /// <returns>
    /// ICMS ST Value tag content
    /// </returns>
    public TaxValue getIcmsStValue()
    {
        return this.getAmountByPath(#FiscalDocumentLineIcmsStValueXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineIcmsStValueRetXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineICMSSN500IcmsStValueRetXpath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIcmsValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ICMS value from the xml line
    /// </summary>
    /// <returns>
    /// ICMS value tag content
    /// </returns>
    /// <remarks>
    /// Works for both ordinary ICMS and ICMS SIMPLES
    /// </remarks>
    public TaxValue getIcmsValue()
    {
        str xpath = strFmt(#FiscalDocumentLineIcmsValueXPath, xmlLinePosition);
        str value = xmlReader.getNodeContent(xpath);

        if (value == '')
        {
            value = this.getIcmsSimplesValueAsStr();
        }

        return str2num(value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIpiAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets IPI amount from the xml line
    /// </summary>
    /// <returns>
    /// IPI amount tag content
    /// </returns>
    public TaxAmount getIpiAmount()
    {
        str xpath = strFmt(#FiscalDocumentLineIpiAmountXPath, xmlLinePosition);
        return str2num(xmlReader.getNodeContent(xpath));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIpiBaseAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets IPI base amount from the xml line
    /// </summary>
    /// <returns>
    /// IPI base amount tag content
    /// </returns>
    public TaxBase getIpiBaseAmount()
    {
        str xpath = strFmt(#FiscalDocumentLineIpiBaseAmountXPath, xmlLinePosition);
        return str2num(xmlReader.getNodeContent(xpath));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIpiValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets IPI Value from the xml line
    /// </summary>
    /// <returns>
    /// IPI Value tag content
    /// </returns>
    public TaxValue getIpiValue()
    {
        str xpath = strFmt(#FiscalDocumentLineIpiValueXPath, xmlLinePosition);
        return str2num(xmlReader.getNodeContent(xpath));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrigin</Name>
				<Source><![CDATA[
    private str getOrigin()
    {
        str xpath = strFmt(#FiscalDocumentLineOriginXPath, xmlLinePosition);
        return xmlReader.getNodeContent(xpath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getvICMSSubstituto</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets vICMSSubstituto from the xml line.
    /// </summary>
    /// <returns>
    /// vICMSSubstituto tag content.
    /// </returns>
    protected TaxValue getvICMSSubstituto()
    {
        return this.getAmountByPath(EFdocumentXPathConstants_BR::fiscalDocumentLinevICMSSubstitutoXPath, EFdocumentXPathConstants_BR::fiscalDocumentLineICMSSN500vICMSSubstitutoXPath);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the current class
    /// </summary>
    /// <param name="_xmlDoc">
    /// Xml document that will be parsed to retrieve the values of the lines.
    /// </param>
    /// <param name="_xmlLinePosition">
    /// Line position inside the xml document. The xml document may contain many lines.
    /// </param>
    public void new(XmlDocument _xmlDoc, int _xmlLinePosition)
    {
        xmlLinePosition = _xmlLinePosition;
        xmlReader = new EFDocReceivedXmlReader_BR(_xmlDoc);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>