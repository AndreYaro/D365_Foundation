<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdStatusType_CostEstimate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProdStatusType_CostEstimate</c> class encapsulates behavior of a cost estimated production
/// order.
/// </summary>
/// <remarks>
/// A production order is said to be cost estimated if the class implements the
/// <c>ProdStatusType.currentProdStatus</c> method by returning a <c>ProdStatusAll::CostEstimated</c>
/// value.
/// </remarks>
public class ProdStatusType_CostEstimate extends ProdStatusType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currentProdStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Defines a specific status for a production order.
    /// </summary>
    /// <returns>
    ///    Always returns the <c>ProdStatusAll::CostEstimated</c> value.
    /// </returns>
    public ProdStatusAll currentProdStatus()
    {
        return ProdStatusAll::CostEstimated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleting</Name>
				<Source><![CDATA[
    public void deleting()
    {
        throw error(strFmt(
            "@SYS22042",
            prodTable.ProdStatus));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(ProdTable _prodTable)
    {
        super(_prodTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>previousProdStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Defines a previous status for a cost estimated production order.
    /// </summary>
    /// <returns>
    ///    Always returns the <c>ProdStatus::Created</c> value.
    /// </returns>
    public ProdStatus previousProdStatus()
    {
        return ProdStatus::Created;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runJobScheduling</Name>
				<Source><![CDATA[
    public boolean runJobScheduling(
        ProdParmScheduling      _prodParmScheduling,
        boolean                 _ask                = false,
        ProdPurch               _prodPurch          = null,
        RunbaseRecsMapable      _multi              = null,
        WrkCtrScheduler_Prod    _wrkCtrScheduler    = null,
        boolean                 _runningPreviousJob = false
        )
    {
        return this.isStatusUpdateAllowed(ProdStatusAll::JobScheduled)
            && this.pmfCheckRework()
            && super(_prodParmScheduling,_ask,_prodPurch,_multi,_wrkCtrScheduler, _runningPreviousJob);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runJobUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a job update is allowed for a cost estimated production order.
    /// </summary>
    /// <param name="_ask">
    ///    A value of TRUE indicates that method will only check whether job update is allowed. A value of FALSE
    ///    indicates that the method will also perform the job update.; optional
    /// </param>
    /// <returns>
    ///    true if the <paramref name="_ask" /> parameter is false; otherwise, false.
    /// </returns>
    public boolean runJobUpdate(boolean _ask = false)
    {
        if (_ask)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runOperationScheduling</Name>
				<Source><![CDATA[
    public boolean runOperationScheduling(
        ProdParmScheduling      _prodParmScheduling,
        boolean                 _ask                = false,
        ProdPurch               _prodPurch          = null,
        RunbaseRecsMapable      _multi              = null,
        WrkCtrScheduler_Prod    _wrkCtrScheduler    = null,
        boolean                 _runningPreviousJob = false
        )
    {
        return this.isStatusUpdateAllowed(ProdStatusAll::OperationScheduled)
            && this.pmfCheckRework()
            && super(_prodParmScheduling,_ask,_prodPurch,_multi,_wrkCtrScheduler,_runningPreviousJob);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runSplit</Name>
				<Source><![CDATA[
    public boolean runSplit(
        ProdParmSplit       _prodParmSplit,
        boolean             _ask            = false,
        RunbaseRecsMapable  _multi          = null
        )
    {
        if (_ask && prodTable.CollectRefLevel == 0)
        {
            return this.prodTableType().pmfCanSplit();
        }

        return super(_prodParmSplit, _ask, _multi);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a cost estimated production order can be deleted.
    /// </summary>
    /// <returns>
    ///    Always returns false because a cost estimated production order cannot be deleted.
    /// </returns>
    public boolean validateDelete()
    {
        return checkFailed("@SYS18511");
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDeleteProdBOM</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether production bills of materials can be deleted.
    /// </summary>
    /// <param name="_prodBOM">
    ///    The production bill of materials parameter. This parameter is disregarded by the method.
    /// </param>
    /// <returns>
    ///    Always returns false because production Bills of materials cannot be deleted when a production
    ///    order is cost estimated.
    /// </returns>
    public boolean validateDeleteProdBOM(ProdBOM _prodBOM)
    {
        return checkFailed(strFmt(
            "@SYS22042",
            prodTable.ProdStatus));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteProdBOM</Name>
				<Source><![CDATA[
    public boolean validateWriteProdBOM(ProdBOM _prodBOM)
    {
        if (_prodBOM.pdsPotencyFieldModified())
        {
            return checkFailed(strFmt("@PSC33", prodTable.ProdStatus));
        }

        return super(_prodBOM);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProdStatusType_CostEstimate construct(ProdTable _prodTable)
    {
        return new ProdStatusType_CostEstimate(_prodTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>