<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GeneralLedgerBalanceClearDimensionSetsAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Data maintenance action to clear dimension set records when using the new balance feature.
/// </summary>
[Export(identifierStr(Dynamics.AX.Application.IDataMaintenanceAction))]
[DataMaintenanceFeatureClass(classStr(GeneralLedgerBalanceClearDimensionSetsFlight))]
internal class GeneralLedgerBalanceClearDimensionSetsAction
    implements IDataMaintenanceAction, IDataMaintenanceOpportunity, IDataMaintenanceActionParameters
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceCaption caption()
    {
        return literalStr("@GeneralLedger:GeneralLedgerBalanceClearDimensionSetsActionCaption");
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceDescription description()
    {
        return literalStr("@GeneralLedger:GeneralLedgerBalanceClearDimensionSetsActionDescription");
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabled()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>category</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceActionCategory category()
    {
        return DataMaintenanceActionCategory::Performance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ModuleAxapta module()
    {
        return ModuleAxapta::Ledger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tasks</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public Array tasks()
    {
        Array tasks = this.deleteBalanceTasks();

        int lastIndex = tasks.lastIndex();

        tasks.value(lastIndex + 1, classStr(GeneralLedgerBalanceClearDimensionSetsBalancesTask));
        tasks.value(lastIndex + 2, classStr(GeneralLedgerBalanceClearDimensionSetsReferencesTask));
        tasks.value(lastIndex + 3, classStr(GeneralLedgerBalanceClearDimensionSetsUnprocessedTask));
        tasks.value(lastIndex + 4, classStr(GeneralLedgerBalanceClearDimensionSetHierarchyDefinitionsTask));
        tasks.value(lastIndex + 5, classStr(GeneralLedgerBalanceClearDimensionSetsWorkRecordTask));

        return tasks;
    }

]]></Source>
			</Method>
			<Method>
				<Name>opportunityResult</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceOpportunityResult opportunityResult()
    {
        DataMaintenanceOpportunityResult scanResult = DataMaintenanceOpportunityResult::construct();

        boolean opportunityFound = GeneralLedgerBalanceWork::workRecordExistsForClearDimensionSets();
        scanResult.parmOpportunityFound(opportunityFound);

        return scanResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>automaticallySchedule</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean automaticallySchedule()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parameters</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceActionParameters parameters()
    {
        DataMaintenanceActionParameters actionParameters = new DataMaintenanceActionParameters();
        actionParameters.IsSystemAction = true;

        return actionParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteBalanceTasks</Name>
				<Source><![CDATA[
    protected Array deleteBalanceTasks()
    {
        Array tasks = new Array(Types::String);

        return tasks;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getClearSetsClassActionClassNameDelegate</Name>
				<Source><![CDATA[
    [SubscribesTo(classStr(GeneralLedgerBalanceFeature), delegateStr(GeneralLedgerBalanceFeature, getClearSetsActionClassName))]
    internal static void getClearSetsClassActionClassNameDelegate(EventHandlerResult _result)
    {
        _result.result(classStr(GeneralLedgerBalanceClearDimensionSetsAction));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>