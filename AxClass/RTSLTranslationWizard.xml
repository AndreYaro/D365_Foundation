<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rtslTranslationWizard</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rtslTranslationWizard extends SysWizard
{
    RTSLTranslation     translation;
    FormProgressControl progressExportControl,
                        progressImportControl;

    #define.StartTab        (1)
    #define.CheckCompanyTab (2)
    #define.SelectDataTab   (3)
    #define.ExportTab       (4)
    #define.PreviewTab      (5)
    #define.ImportTab       (6)
    #define.FinishTab       (7)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>back</Name>
				<Source><![CDATA[
        public void back()
    {
        switch (this.curTab())
        {
            case #CheckCompanyTab   :
            case #SelectDataTab     :
            case #ExportTab         :
                    break;
            case #PreviewTab        :
                    translation.abortCompanyExport();
                    progressExportControl.pos(0);
                    break;
            case #ImportTab         :
                    break;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
        public FormName formName()
    {
        return formStr(RTSLTranslationWizard);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTranslation</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void initTranslation(RTSLRuleModule _ruleModule)
    {
        translation = RTSLTranslation::construct(_ruleModule);
        translation.parmCaller(this);
        translation.init();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
        public void next()
    {
        switch (this.curTab())
        {
            case #StartTab          :
            case #CheckCompanyTab   :
            case #SelectDataTab     :
                    break;
            case #ExportTab         :
                    progressExportControl.rangeHi(translation.progressExportTotal());
                    nextEnabled[#PreviewTab] = translation.exportCompany();
                    break;
            case #PreviewTab        :
                    progressImportControl.pos(0);
                    break;
            case #ImportTab         :
                    progressImportControl.rangeHi(translation.progressImportTotal());
                    progressImportControl.pos(0);
                    if (! translation.importCompany())
                    {
                        progressImportControl.pos(0);
                        return;
                    }
                    cancelButton.visible(false);
                    break;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>progressStep</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void progressStep(str _text = '')
    {
        ;
        switch (this.curTab())
        {
            case #ExportTab: progressExportControl.stepIt();
                             break;
            case #ImportTab: progressImportControl.stepIt();
                             break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptQuery</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void promptQuery()
    {
        QueryRun    queryRun = new QueryRun(translation.parmQuery());
        ;
        queryRun.prompt();
        translation.parmQuery(queryRun.query());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExportProgressControl</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void setExportProgressControl(int _controlId)
    {
        progressExportControl = formRun.control(_controlId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setImportProgressControl</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void setImportProgressControl(int _controlId)
    {
        progressImportControl = formRun.control(_controlId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupNavigation</Name>
				<Source><![CDATA[
        protected void setupNavigation()
    {
        nextEnabled[#CheckCompanyTab] = ! translation.mustStopOnError();
        nextEnabled[#PreviewTab]      = false;
        backEnabled[#FinishTab]       = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>translation</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public RTSLTranslation translation()
    {
        return translation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        RTSLTranslationWizard wizard;

        if (! _args)
            throw error("@SYS25407");

        if (_args.dataset() != tableNum(RTSLRuleModule))
            throw error(strFmt("@SYS29104", RTSLTranslation::description()));

        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceRU00007, funcName());

        wizard = new RTSLTranslationWizard();
        wizard.initTranslation(_args.record());

        if (wizard.prompt())
        {
            wizard.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>