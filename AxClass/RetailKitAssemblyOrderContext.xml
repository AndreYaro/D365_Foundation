<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailKitAssemblyOrderContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailKitAssemblyOrderContext</c> class helps in transferring context across the methods of <c>RetailKitAssemblyOrder</c> class.
/// </summary>
public final class RetailKitAssemblyOrderContext implements System.IDisposable
{
    private TransDate transDate;
    private boolean shouldAutomaticallyPostSalesLineKitOrder;
    private static RetailKitAssemblyOrderContext instance;
    private NoYes isCashAndCarry;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        // default to being from statement posting for backwards compatability reasons.
        this.isCashAndCarry = NoYes::Yes;
        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <returns>A new instance of the class.</returns>
    public static RetailKitAssemblyOrderContext construct()
    {
        return new RetailKitAssemblyOrderContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of the class.
    /// </summary>
    /// <returns>The instance of the class. If no instance is created null is returned.</returns>
    public static RetailKitAssemblyOrderContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates and Returns transDate of current instance.
    /// </summary>
    /// <returns>transDate of current instance.</returns>
    public TransDate parmTransDate(TransDate _transDate = transDate)
    {
        if (!prmIsDefault(_transDate))
        {
            transDate = _transDate;
        }

        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCashAndCarry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates and returns the flag for whether this is a cash and carry order (meaning a sales order created through statement posting).
    /// </summary>
    /// <param name = "_isCashAndCarry">Whether or not this is a cash and carry order.</param>
    /// <returns>Yes if this is a cash and carry order; otherwise, no.</returns>
    public NoYes parmIsCashAndCarry(NoYes _isCashAndCarry = isCashAndCarry)
    {
        if (!prmIsDefault(_isCashAndCarry))
        {
            isCashAndCarry = _isCashAndCarry;
        }

        return isCashAndCarry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShouldAutomaticallyPostSalesLineKitOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates and returns the flag value related to automatically post kit orders created for sales lines.
    /// </summary>
    /// <param name = "_shouldAutomaticallyPostSalesLineKitOrder">New value for the flag that indicates if kit orders for sales lines should be automatically posted.</param>
    /// <returns>True when kit orders should be automatically posted for sales lines; otherwise, false.</returns>
    public boolean parmShouldAutomaticallyPostSalesLineKitOrder(boolean _shouldAutomaticallyPostSalesLineKitOrder = shouldAutomaticallyPostSalesLineKitOrder)
    {
        if (!prmIsDefault(_shouldAutomaticallyPostSalesLineKitOrder))
        {
            shouldAutomaticallyPostSalesLineKitOrder = _shouldAutomaticallyPostSalesLineKitOrder;
        }

        return shouldAutomaticallyPostSalesLineKitOrder;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>