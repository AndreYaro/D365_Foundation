<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailDocumentCustomerOrderPickupProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Runtime.DataModel;
using Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder;

internal class RetailDocumentCustomerOrderPickupProcessor extends RetailDocumentOperationProcessorBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static RetailDocumentCustomerOrderPickupProcessor construct(RetailDocumentOperationProcessorParameters _parameters)
    {
        return new RetailDocumentCustomerOrderPickupProcessor(_parameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processInternal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starts to process the request document and save result, should be implement in subclasses.
    /// </summary>
    /// <returns>A container object to indicate result documents.</returns>
    /// <exception cref="Exception::Error">The input document is invalid or failed to be processed.</exception>
    protected container processInternal()
    {
        str custOrderInfoXml = conPeek(this.requestContainer, 1);

        CustomerOrderInfo custOrderInfo = CustomerOrderInfo::FromXml(custOrderInfoXml);

        container result = RetailTransactionServiceOrders::settleCustomerOrder(custOrderInfo);

        boolean isSuccess = conPeek(result, RetailDocumentOperationProcessorInventoryDocumentBase::IsSuccessIndex);

        if (!isSuccess)
        {
            this.throwsException(this.isRetriable, conPeek(result, RetailDocumentOperationProcessorInventoryDocumentBase::ErrorMessageIndex), RetailDocumentOperationProcessingErrorCode::InternalProcessingFailed);
        }

        return [conPeek(result, RetailDocumentOperationProcessorInventoryDocumentBase::ResponseDocumentIndex)];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>