<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendVendorRequestCategoryNCAWorkflowAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class VendVendorRequestCategoryNCAWorkflowAction
{
    private VendVendorRequestNewCategory vendRequest;
    private WorkflowVersionTable workflowConfigurationTable;
    private WorkflowComment workflowComment;
    private boolean submit;
    private WorkflowWorkItemTable workflowWorkItemTable;
    private MenuItemName menuItemName;
    private WorkflowTypeName workflowTemplateName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialogOk</Name>
				<Source><![CDATA[
    public boolean dialogOk()
    {
        WorkflowSubmitDialog workflowSubmitDialog = WorkflowSubmitDialog::construct(this.parmWorkflowConfigurationTable());

        if (workflowSubmitDialog)
        {
            workflowSubmitDialog.run();
        }

        this.parmWorkflowComment(workflowSubmitDialog.parmWorkflowComment());
        return workflowSubmitDialog.parmIsClosedOK();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the workflow objects.
    /// </summary>
    /// <param name="_documentRecord">
    /// The workflow document record that is used in the workflow.
    /// </param>
    /// <param name="_menuItemName">
    /// The submit command to use for the new vendor category request workflow.
    /// </param>
    /// <param name="_workflowConfigurationTable">
    /// The workflow configuration table to use for the workflow.
    /// </param>
    /// <param name="_workflowWorkItemTable">
    /// The workflow item table to use for the workflow.
    /// </param>
    public void init(Common _documentRecord,
                     MenuItemName _menuItemName,
                     WorkflowVersionTable _workflowConfigurationTable,
                     WorkflowWorkItemTable _workflowWorkItemTable)
    {
        this.parmVendRequest(_documentRecord as VendVendorRequestNewCategory);
        this.parmSubmit(_menuItemName == menuitemactionstr(VendVendorRequestCategoryNCASubmit));
        this.parmMenuItemName(_menuItemName);

        this.parmWorkflowConfigurationTable(_workflowConfigurationTable);
        this.parmWorkflowWorkItemtable(_workflowWorkItemTable);
        this.parmWorkflowTemplateName(this.parmWorkflowConfigurationTable().workflowTable().TemplateName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    public menuItemName parmMenuItemName(MenuItemName _menuItemName = menuItemName)
    {
        menuItemName = _menuItemName;

        return menuItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmit</Name>
				<Source><![CDATA[
    public boolean parmSubmit(boolean _submit = submit)
    {
        submit = _submit;
        return submit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendRequest</Name>
				<Source><![CDATA[
    public VendVendorRequestNewCategory parmVendRequest(VendVendorRequestNewCategory _vendRequest = vendRequest)
    {
        vendRequest = _vendRequest;
        return vendRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowComment</Name>
				<Source><![CDATA[
    public WorkflowComment parmWorkflowComment(WorkflowComment _workflowComment = workflowComment)
    {
        workflowComment = _workflowComment;
        return workflowComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowConfigurationTable</Name>
				<Source><![CDATA[
    public WorkflowVersionTable parmWorkflowConfigurationTable(WorkflowVersionTable _workflowConfigurationTable = workflowConfigurationTable)
    {
        workflowConfigurationTable = _workflowConfigurationTable;
        return workflowConfigurationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowTemplateName</Name>
				<Source><![CDATA[
    public workflowTypeName parmWorkflowTemplateName(workflowTypeName _workflowTemplateName = workflowTemplateName)
    {
        workflowTemplateName = _workflowTemplateName;
        return workflowTemplateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowWorkItemtable</Name>
				<Source><![CDATA[
    public WorkflowWorkItemTable parmWorkflowWorkItemtable(WorkflowWorkItemTable _workflowWorkItemTable = workflowWorkItemTable)
    {
        workflowWorkItemTable = _workflowWorkItemTable;
        return workflowWorkItemTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>submit</Name>
				<Source><![CDATA[
    /// <summary>
    /// The submit method is called from the <c>main</c> static method.
    /// </summary>
    /// <remarks>
    /// This is used to start the new vendor category request workflow template.
    /// </remarks>
    public void submit()
    {
        Workflow::activateFromWorkflowType(
            this.parmWorkflowTemplateName(),
            this.parmVendRequest().RecId,
            this.parmWorkflowComment(),
            NoYes::No);

        ttsbegin;
        VendVendorRequestNewCategory vendRequestLocal = VendVendorRequestNewCategory::find(this.parmVendRequest().RecId, true);
        vendRequestLocal.RequestStatus = VendVendorRequestStatus::ReviewTaskPending;
        vendRequestLocal.update();
        ttscommit;

    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSubmit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the submission to workflow by the user.
    /// </summary>
    /// <returns>
    /// True if the workflow can be submitted by the user; otherwise, false.
    /// </returns>
    public boolean validateSubmit()
    {
        return (this.parmVendRequest().canSubmitToWorkflow(workFlowTypeStr(VendVendorRequestCategoryNCATemplate)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendVendorRequestCategoryNCAWorkflowAction construct()
    {
        return new VendVendorRequestCategoryNCAWorkflowAction();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        VendVendorRequestCategoryNCAWorkflowAction vendRequestCatNCAWorkflowAction = VendVendorRequestCategoryNCAWorkflowAction::construct();
        vendRequestCatNCAWorkflowAction.init(args.record(), args.menuItemName(), args.caller().getActiveWorkflowConfiguration(), null);

        if (vendRequestCatNCAWorkflowAction.validateSubmit()
            && vendRequestCatNCAWorkflowAction.dialogOk()
            && vendRequestCatNCAWorkflowAction.parmSubmit())
        {
            vendRequestCatNCAWorkflowAction.submit();
            args.caller().updateWorkflowControls();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>