<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransactionReversal_Vend_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(TransactionReversal_Vend))]
internal final class TransactionReversal_Vend_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInvoiceJournal</Name>
				<Source><![CDATA[
    void createInvoiceJournal(CustVendTrans _vendTrans, CustVendTrans _vendTransOrig)
    {
        next createInvoiceJournal(_vendTrans, _vendTransOrig);

        if (new CreditInvoicingToggle().isEnabled()
            && TaxTransGlobalInitializerTransactionReversalFlight::instance().isEnabled())
        {
            VendInvoiceJour vendInvoiceJourOrig = VendInvoiceJour::findFromVendTransVoucher(
                _vendTransOrig.Invoice,
                _vendTransOrig.Voucher,
                _vendTransOrig.TransDate,
                _vendTransOrig.AccountNum);

            if (vendInvoiceJourOrig)
            {
                VendInvoiceJour vendInvoiceJourReversed = VendInvoiceJour::findFromVendTransVoucher(
                    _vendTrans.Invoice,
                    _vendTrans.Voucher,
                    _vendTrans.TransDate,
                    _vendTrans.AccountNum);

                if (vendInvoiceJourReversed)
                {
                    TransactionReversal_Vend::createCustVendCreditInvoicingJour(vendInvoiceJourReversed, vendInvoiceJourOrig);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCustVendCreditInvoicingJour</Name>
				<Source><![CDATA[
    internal static void createCustVendCreditInvoicingJour(VendInvoiceJour _vendInvoiceJourReversed, VendInvoiceJour _vendInvoiceJourOrig)
    {
        if (_vendInvoiceJourReversed
            && _vendInvoiceJourOrig
            && !CustVendCreditInvoicingJour::exist(_vendInvoiceJourReversed.TableId, _vendInvoiceJourReversed.RecId))
        {
            CustVendCreditInvoicingJour custVendCreditInvoicingJour;

            custVendCreditInvoicingJour.AccountType = LedgerJournalACType::Vend;
            custVendCreditInvoicingJour.CorrectedInvoiceRecId = _vendInvoiceJourOrig.RecId;
            custVendCreditInvoicingJour.CustVendCorrectedInvoiceId = _vendInvoiceJourOrig.InvoiceId;
            custVendCreditInvoicingJour.CustVendInvoiceAccount = _vendInvoiceJourOrig.InvoiceAccount;
            custVendCreditInvoicingJour.InvoiceRecId = _vendInvoiceJourReversed.RecId;
            custVendCreditInvoicingJour.InvoiceTableId = _vendInvoiceJourReversed.TableId;
            custVendCreditInvoicingJour.CustVendCorrectedInvoiceDate = _vendInvoiceJourReversed.InvoiceDate;
            custVendCreditInvoicingJour.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>