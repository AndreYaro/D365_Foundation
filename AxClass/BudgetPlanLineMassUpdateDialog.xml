<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanLineMassUpdateDialog</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class BudgetPlanLineMassUpdateDialog extends RunBaseBatch implements BatchRetryable
{
    private DialogRunBase dialog;

    private SharedServiceUnitFileID uploadFileId;
    private BudgetPlanHeader budgetPlanHeader;
    private RecId layout;
    private RecId entityGroup;

    private const str OkButtonName = 'OkButton';
    private const str FileUploadName = 'FileUpload';

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        entityGroup,
        layout,
        uploadFileId
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return strFmt("@SYS53184", "@Budget:BudgetPlanLineMassUpdate", this.budgetPlanHeader.DocumentNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        BudgetPlanLayout budgetPlanLayout = BudgetPlanLayout::find(this.budgetPlanHeader.Layout);

        DMFDefinitionGroup dmfDefinitionGroup;

        select firstonly RecId, DefinitionGroupName from dmfDefinitionGroup
            where dmfDefinitionGroup.RecId == budgetPlanLayout.DMFDefinitionGroup;

        if (dmfDefinitionGroup)
        {
            entityGroup = dmfDefinitionGroup.RecId;
        }
        else
        {
            throw error("@Budget:MissingBudgetPlanLineMassUpdateImportDefinition");
        }

        if (!BudgetPlanLineMassUpdateDMFManager::findDMFDefinitionGroupEntity(dmfDefinitionGroup.DefinitionGroupName))
        {
            throw error(strFmt("@Budget:MissingBudgetPlanLineMassUpdateDataDefinitionGroupEntity", dmfDefinitionGroup.DefinitionGroupName));
        }

        layout = this.budgetPlanHeader.Layout;

        dialog = new DialogRunbase("@Budget:BudgetPlanLineMassUpdate", this);

        DialogGroup dialogGroup = dialog.addGroup("@SYS54759");
        FormBuildControl formBuildControl = dialog.formBuildDesign().control(dialogGroup.name());

        DialogField definitionGroupNameField = dialog.addField(extendedTypeStr(DMFDefinitionGroupName));
        definitionGroupNameField.value(dmfDefinitionGroup.DefinitionGroupName);
        definitionGroupNameField.enabled(false);

        FileUploadBuild dialogFileUpload = formBuildControl.addControlEx(classstr(FileUpload), FileUploadName);
        dialogFileUpload.style(FileUploadStyle::MinimalWithFilename);
        dialogFileUpload.baseFileUploadStrategyClassName(classstr(FileUploadTemporaryStorageStrategy));
        dialogFileUpload.fileNameLabel("@SYS308842");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogPostRun</Name>
				<Source><![CDATA[
    public void dialogPostRun(DialogRunbase _dialog)
    {
        FileUpload fileUpload = this.getFormControl(_dialog, FileUploadName);
        fileUpload.notifyUploadCompleted += eventhandler(this.uploadCompleted);
        this.setDialogOkButtonEnabled(_dialog, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>uploadCompleted</Name>
				<Source><![CDATA[
    protected void uploadCompleted()
    {
        FileUpload fileUpload = this.getFormControl(dialog, FileUploadName);
        
        FileUploadTemporaryStorageResult uploadResult = fileUpload.getFileUploadResult();

        if (uploadResult.getUploadStatus())
        {
            fileUpload.notifyUploadCompleted -= eventhandler(this.UploadCompleted);
            uploadFileId = uploadResult.getFileId();
            this.setDialogOkButtonEnabled(dialog, true);
        }
        else
        {
            warning(uploadResult.getLogMessage());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Version version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDialogOkButtonEnabled</Name>
				<Source><![CDATA[
    protected void setDialogOkButtonEnabled(DialogRunbase _dialog, boolean _isEnabled)
    {
        FormControl okButtonControl = this.getFormControl(_dialog, OkButtonName);

        if (okButtonControl)
        {
            okButtonControl.enabled(_isEnabled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormControl</Name>
				<Source><![CDATA[
    protected FormControl getFormControl(DialogRunbase _dialog, str _controlName)
    {
        return _dialog.formRun().control(_dialog.formRun().controlId( _controlName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        this.importBudgetPlanLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BudgetPlanLineMassUpdateDialog construct()
    {
        return new BudgetPlanLineMassUpdateDialog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        BudgetPlanLineMassUpdateDialog import = BudgetPlanLineMassUpdateDialog::construct();

        if (args.record() is BudgetPlanHeader)
        {
            import.budgetPlanHeader = args.record();
        }

        if (import.prompt())
        {
            import.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>importBudgetPlanLines</Name>
				<Source><![CDATA[
    private void importBudgetPlanLines()
    {
        BudgetPlanLineMassUpdateDMFManager budgetPlanLineMassUpdateDMFManager = budgetPlanLineMassUpdateDMFManager::newFromBudgetPlanLayout(layout);
        budgetPlanLineMassUpdateDMFManager.parmBudgetPlanHeader(budgetPlanHeader);
        budgetPlanLineMassUpdateDMFManager.importBudgetPlanLines(uploadFileId, this.parmInBatch());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>