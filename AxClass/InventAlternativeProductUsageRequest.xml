<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAlternativeProductUsageRequest</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventAlternativeProductUsageRequest</c> class contains the request for the alternative product usage strategy.
/// </summary>
final public class InventAlternativeProductUsageRequest
{
    private boolean         isRequestInitialized;

    private ItemId          itemId;
    private InventDim       inventDim;
    private InventQty       quantity;

    private InventTable     inventTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    [HookableAttribute(false)]
    final public ItemId parmItemId()
    {
        return ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDim</Name>
				<Source><![CDATA[
    [HookableAttribute(false)]
    final public InventDim parmInventDim()
    {
        return InventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantity</Name>
				<Source><![CDATA[
    [HookableAttribute(false)]
    final public InventQty parmQuantity()
    {
        return quantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAlternativeProductUsageCondition</Name>
				<Source><![CDATA[
    [HookableAttribute(false)]
    final public ItemNumAlternative parmAlternativeProductUsageCondition()
    {
        return this.parmInventTable().hasActiveAltItemId() ? this.parmInventTable().UseAltItemId : ItemNumAlternative::Never;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTable</Name>
				<Source><![CDATA[
    [HookableAttribute(false)]
    final public InventTable parmInventTable()
    {
        if (!inventTable.RecId)
        {
            inventTable = InventTable::find(ItemId);
        }

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the alternative product usage request.
    /// </summary>
    /// <param name = "_itemId">
    /// An item ID representing the product to potentially replace.
    /// </param>
    /// <param name = "_inventDim">
    /// An <c>InventDim</c> buffer representing the product dimensions for the product which should potentially be replaced.
    /// </param>
    /// <param name = "_quantity">
    /// A quantity representing the inventory quantity which should be deducted from inventory for the product.
    /// </param>
    [HookableAttribute(false)]
    final public void initializeRequest(ItemId _itemId, InventDim _inventDim, InventQty _quantity)
    {
        if (isRequestInitialized)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        itemId = _itemId;
        inventDim.data(_inventDim);
        quantity = _quantity;

        isRequestInitialized = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new request.
    /// </summary>
    /// <returns>
    /// The instantiated <c>InventAlternativeProductUsageRequest</c> request object.
    /// </returns>
    [HookableAttribute(false)]
    public static InventAlternativeProductUsageRequest newRequest()
    {
        return new InventAlternativeProductUsageRequest();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>