<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCatchWeightTagAutoSelectQuarantine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSCatchWeightTagAutoSelectQuarantine</c> class does automatic tag selection for the quarantine (inventory status change) process.
/// </summary>
internal class WHSCatchWeightTagAutoSelectQuarantine extends WHSCatchWeightTagAutoSelect
{
    private str selectionKey;
    private ItemId quarantineItemId;
    private InventDimId inventDimId;
    private InventHandlingQty handlingQty;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    protected ItemId itemId()
    {
        return quarantineItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>quantity</Name>
				<Source><![CDATA[
    protected InventHandlingQty quantity()
    {
        return handlingQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInventDim</Name>
				<Source><![CDATA[
    protected InventDim createInventDim()
    {
        return InventDim::find(inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTagSelectionQuery</Name>
				<Source><![CDATA[
    protected Query createTagSelectionQuery()
    {
        return WHSControlCatchWeightTag::createQueryValidTagsAutoSelection(mode, this.itemId(), this.inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePassOnCompletion</Name>
				<Source><![CDATA[
    protected void updatePassOnCompletion(WHSTransWeight _weight, container _selectedTags)
    {
        super(_weight, _selectedTags);

        pass.insert(WHSWorkExecuteDisplayCatchWeightControls::CatchWeight, _weight);
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveSelectedTags</Name>
				<Source><![CDATA[
    protected void saveSelectedTags(container _selectedTags)
    {
        str tagNumbers = pass.lookupStr(selectionKey);

        for (int i = 1; i <= conLen(_selectedTags); i++)
        {
            tagNumbers += (tagNumbers ? ',' : '') + int642Str(conPeek(_selectedTags, i));
        }

        pass.insert(selectionKey, tagNumbers);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParams</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>WHSCatchWeightTagAutoSelectQuarantine</c> class.
    /// </summary>
    /// <param name = "_pass">The form pass through.</param>
    /// <param name = "_key">The key for the list of catch weight tags in the pass through for this specific instance.</param>
    /// <param name = "_itemId">The item id to process.</param>
    /// <param name = "_inventDimId">The inventory dimension id to process.</param>
    /// <param name = "_handlingQty">The catch weight handling quantity.</param>
    /// <returns>A new instance of the <c>WHSCatchWeightTagAutoSelectQuarantine</c> class.</returns>
    internal static WHSCatchWeightTagAutoSelectQuarantine newFromParams(WHSRFPassThrough _pass, str _key, ItemId _itemId, InventDimId _inventDimId, InventHandlingQty _handlingQty)
    {
        WHSCatchWeightTagAutoSelectQuarantine autoSelect = new WHSCatchWeightTagAutoSelectQuarantine();

        autoSelect.selectionKey = _key;
        autoSelect.inventDimId = _inventDimId;
        autoSelect.quarantineItemId = _itemId;
        autoSelect.handlingQty = _handlingQty;

        autoSelect.init(WHSWorkExecuteMode::Quarantine, _pass);

        return autoSelect;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>