<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjInvoiceDPBase_CH_QRBill_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// An extension class of base class of project invoice report data provider to fill QR-Bill specific fields in the GIRO report.
/// </summary>
[ExtensionOf(classStr(ProjInvoiceDPBase))]
public final class ProjInvoiceDPBase_CH_QRBill_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initGiro</Name>
				<Source><![CDATA[
    protected void initGiro()
    {
        next initGiro();

        if (giroType == PaymentStub::QRBill)
        {
            moneyTransferSlip = PaymMoneyTransferSlip::construct(projInvoiceJour.GiroType);

            CompanyBankAccountId companyBankAccountId = projInvoiceJour.paymentBankAccountId();
            
            if (!companyBankAccountId)
            {
                CustPaymModeTable custPaymModeTable = CustPaymModeTable::find(CustTable::find(projInvoiceJour.InvoiceAccount).PaymMode);

                if (custPaymModeTable.AccountType == LedgerJournalACType::Bank)
                {
                    companyBankAccountId = custPaymModeTable.parmPaymAccount();
                }
            }

            moneyTransferSlip.initFromBankAccountTable(companyBankAccountId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populatesTempTableForPaymentSlip</Name>
				<Source><![CDATA[
    protected void populatesTempTableForPaymentSlip()
    {
        next populatesTempTableForPaymentSlip();

        if (giroType == PaymentStub::QRBill)
        {
            projInvoiceTmp.IBAN_CH = moneyTransferSlip.getQRIBANOrIBAN(projInvoiceJour.PaymId);
            projInvoiceTmp.CurrencyCodeISO = Currency::currencyCodeISO(projInvoiceJour.CurrencyId);

            LogisticsPostalAddress invoiceAddress = LogisticsPostalAddress::findRecId(projInvoiceJour.DeliveryPostalAddress);
            projInvoiceTmp.InvoiceAddressLine1_CH = strRemoveCr(invoiceAddress.Street);
            projInvoiceTmp.InvoiceAddressLine2_CH = strFmt('%1 %2', invoiceAddress.ZipCode, invoiceAddress.City);
            projInvoiceTmp.InvoiceCountryRegionId_CH = invoiceAddress.CountryRegionId;
            projInvoiceTmp.OcrField = projInvoiceJour.PaymId;
            projInvoiceTmp.LanguageId_CH = projInvoiceJour.LanguageId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillBillInformation_CH</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills Bill information in the buffer of the <c>ProjInvoiceTmp</c> table.
    /// </summary>
    /// <param name = "_proformaTmpTaxWorkTrans">
    /// Tax transactions in case of proforma.
    /// </param>
    public void fillBillInformation_CH(TmpTaxWorkTrans _proformaTmpTaxWorkTrans)
    {
        TmpTaxWorkTrans tmpTaxWorkTransLoc;

        if (projInvoiceJour.isProforma())
        {
            tmpTaxWorkTransLoc = _proformaTmpTaxWorkTrans;
        }
        else
        {
            tmpTaxWorkTransLoc = TmpTaxWorkTrans::initFromTaxTrans_CH(projInvoiceJour.LedgerVoucher, projInvoiceJour.InvoiceDate);
        }

        projInvoiceTmp.BillInformation_CH = CustQRBillQRCodeCreator_CH::getBillInformation(projInvoiceJour, tmpTaxWorkTransLoc);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>