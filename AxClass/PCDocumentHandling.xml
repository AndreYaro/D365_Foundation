<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcDocumentHandling</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PcDocumentHandling
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createOrUpdateDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates a document.
    /// </summary>
    /// <param name="_sourceDocumentLine">
    /// A source document line.
    /// </param>
    /// <param name="_notes">
    /// The document reference notes of the configuration session user selections.
    /// </param>
    public void createOrUpdateDocument(Common _sourceDocumentLine, str _notes)
    {
        DocuRef     document;

        //update the document notes
        if (_sourceDocumentLine)
        {
            PCSourceDocumentLineDocuRef sourceDocumentLineDocuRef = PCSourceDocumentLineDocuRef::findDocumentHelperBySourceLine(_sourceDocumentLine, true);

            if (sourceDocumentLineDocuRef)
            {
                document.selectForUpdate(true);
                select firstonly document
                    where document.RecId == sourceDocumentLineDocuRef.DocuRecId;

                if (document)
                {
                    document.Notes = _notes;
                    document.update();
                }
            }
            else
            {
                PCRuntimeLibrary::initializeDocument(document, _sourceDocumentLine, _notes);
                document.insert();

                sourceDocumentLineDocuRef.RefRecId = _sourceDocumentLine.RecId;
                sourceDocumentLineDocuRef.DocuRecId  = document.RecId;
                sourceDocumentLineDocuRef.RefTableId = _sourceDocumentLine.TableId;
                sourceDocumentLineDocuRef.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDocumentBySourceLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the configuration summary that is generated for the specified product configuration.
    /// </summary>
    /// <param name="_sourceLine">
    /// The product configuration source line.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>DocuRef</c> table; otherwise, an empty record.
    /// </returns>
    public DocuRef findDocumentBySourceLine(Common _sourceLine, boolean _forUpdate =false)
    {
        DocuRef documentReference;
        TableId baseTableId = DocuRef::GetRootTableID(_sourceLine.TableId);

        documentReference.selectForUpdate(_forUpdate);

        select  firstonly documentReference
        where   documentReference.RefRecId      == _sourceLine.RecId
        &&      documentReference.Restriction   == DocuRestriction::External
        &&      documentReference.RefTableId    == baseTableId;

        return documentReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCDocumentHandling construct()
    {
        return new PCDocumentHandling();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>