<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgPayRule_JmgProfileTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgPayRule_JmgProfileTable</c> class represents the profiles pay rule.
/// </summary>
/// <remarks>
///    This class lets users delimit the pay agreement lines by profiles.
/// </remarks>
class JmgPayRule_JmgProfileTable extends JmgPayRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the description of the pay rule from the profile.
    /// </summary>
    /// <returns>
    ///    The description of the pay rule from the profiles.
    /// </returns>
    public JmgDescription description()
    {
        return "@SYS38519";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDesignTimeCustomDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the design time data source for the pay rule from the profile.
    /// </summary>
    /// <returns>
    ///    An <c>ExpressionDataSource</c> object that contains the design time data source.
    /// </returns>
    /// <remarks>
    ///    The pay rule from the profile adds a <c>JmgProfileId</c> field to the custom design data source.
    /// </remarks>
    protected ExpressionDataSource getDesignTimeCustomDataSource()
    {
        ExpressionDataSource ret;

        ret = super();
        this.addDesignTimeFieldToDataSource(ret, extendedtypestr(JmgProfileId));
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJoinConditions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the expression with conditions for the Profiles pay rule.
    /// </summary>
    /// <returns>
    ///    The expression with conditions for the Profiles pay rule.
    /// </returns>
    /// <remarks>
    ///    The Profiles pay rule adds one condition: the <c>JmgProfileId</c> field equals the
    ///    <c>Query.Profile</c> value.
    /// </remarks>
    public Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionOrElement getJoinConditions()
    {
        Query q = this.getQuery();

        Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionProjection designTimeProjection =
            SysExpression::getDesignTimeProjectionModel(classstr(JmgPayRule_JmgProfileTable), this.getDesignTimeCustomDataSources());

        Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionOrElement expressionDefinition =
            Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionOrElement::Create();

        Microsoft.Dynamics.AX.Framework.Expression.Model.Field profileIdField;
        Microsoft.Dynamics.AX.Framework.Expression.Model.Field transactionProfileIdField;

        Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionAndElement andElement =
            Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionAndElement::Create();

        profileIdField = designTimeProjection.GetField(q.dataSourceTable(tablenum(JmgProfileTable)).name(), fieldstr(JmgProfileTable, Profile));
        transactionProfileIdField = designTimeProjection.GetField(#TransactionDataSourceId, extendedtypestr(JmgProfileId));

        andElement.AddDesignElement(
            Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionFieldStringElement::Create(
                profileIdField,
                Microsoft.Dynamics.AX.Framework.Expression.Model.StringOperator::Equals,
                transactionProfileIdField));

        expressionDefinition.AddAndElement(andElement);

        return expressionDefinition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the name of the <c>JmgPayRuleJmgProfileTable</c> query.
    /// </summary>
    /// <returns>
    ///    The name of the <c>JmgPayRuleJmgProfileTable</c> query.
    /// </returns>
    queryName getQueryName()
    {
        return querystr(JmgPayRuleJmgProfileTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRuntimeCustomDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the custom run time data source for the pay rule from the profile.
    /// </summary>
    /// <param name="_jmgStampJournalTrans">
    ///    The transaction where the values of the run time fields are initialized.
    /// </param>
    /// <returns>
    ///    An <c>ExpressionDataSource</c> object that contains the run time data source for the pay rule from
    ///    the profiles.
    /// </returns>
    /// <remarks>
    ///    Adds one run time field, which is the <c>JmgProfileId</c> field that is initialized from the worker
    ///    and profile date fields of the transaction.
    /// </remarks>
    protected ExpressionDataSource getRuntimeCustomDataSource(JmgStampJournalTrans _jmgStampJournalTrans)
    {
        ExpressionDataSource expressionDataSource;
        JmgStampJournalTable jmgStampJournalTable;

        jmgStampJournalTable = JmgStampJournalTable::find(_jmgStampJournalTrans.Worker, _jmgStampJournalTrans.ProfileDate);

        expressionDataSource = super(_jmgStampJournalTrans);
        this.addRunTimeFieldToDataSource(expressionDataSource, extendedtypestr(JmgProfileId), jmgStampJournalTable.Profile);
        return expressionDataSource;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>