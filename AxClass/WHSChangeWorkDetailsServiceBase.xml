<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSChangeWorkDetailsServiceBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Abstract class supporting shared logic used by WHSChangeWork SysOp services.
/// </summary>
public abstract class WHSChangeWorkDetailsServiceBase
{
    private WHSInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loopWorkLinesAndDoOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loops over the work orders from the list passed in from the controller, and executes the selected operation for each.
    /// </summary>
    /// <param name="_dataContract">The data contract object reference.</param>
    protected void loopWorkLinesAndDoOperation(WHSChangeWorkDetailsDataContract _dataContract)
    {
        var workIdList = _dataContract.parmWorkIdList();
        var workIdEnumerator = workIdList.getEnumerator();

        while (workIdEnumerator.moveNext())
        {
            WHSWorkId workId = workIdEnumerator.current();

            try
            {
                this.doOperation(workId, _dataContract);
            }
            catch
            {
                warning(strFmt(this.operationFailedErrorMsg(), workId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the actual business operation. Overridden to do the actual implementation.
    /// </summary>
    /// <param name="_workId">Work Id to modify.</param>
    /// <param name="_dataContract">The data contract object reference.</param>
    protected void doOperation(WHSWorkId _workId, WHSChangeWorkDetailsDataContract _dataContract)
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationFailedErrorMsg</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the message for errors in the operation.
    /// </summary>
    /// <returns>The message to use for formatting the user error message.</returns>
    protected str operationFailedErrorMsg()
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>instrumentationLogger</Name>
				<Source><![CDATA[
    final internal WHSInstrumentationLogger instrumentationLogger()
    {
        if (!instrumentationLogger)
        {
            instrumentationLogger = WHSInstrumentationLogger::createLogger(classId2Name(classIdGet(this)));
        }

        return instrumentationLogger;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>