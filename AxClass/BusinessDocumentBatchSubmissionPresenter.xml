<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentBatchSubmissionPresenter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A presenter for <c>BusinessDocumentSubmission</c> form controls related to batch submission scenario. 
/// </summary>
internal class BusinessDocumentBatchSubmissionPresenter
{
    private FormDataSource submissionDataSource;
    private Map documentTypes;
    private FormControl updateStatusButton;
    private FormControl batchSubmissionInvoicesButton;
    private FormComboBoxControl documentTypeComboBox;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>BusinessDocumentBatchSubmissionPresenter</c> class.
    /// </summary>
    /// <param name = "_submissionDataSource">A <c>BusinessDocumentSubmission</c> table data source.</param>
    /// <param name = "_documentTypes">A map of document types by integer ids.</param>
    /// <param name = "_updateStatusButton">An update status button.</param>
    /// <param name = "_batchSubmissionInvoicesButton">A batch submission invoices button.</param>
    /// <param name = "_documentTypeComboBox">A document types combobox.</param>
    /// <returns>A new instance of the <c>BusinessDocumentBatchSubmissionPresenter</c> class.</returns>
    internal static BusinessDocumentBatchSubmissionPresenter construct(
        FormDataSource _submissionDataSource,
        Map _documentTypes,
        FormControl _updateStatusButton,
        FormControl _batchSubmissionInvoicesButton,
        FormComboBoxControl _documentTypeComboBox)
    {
        var ret = new BusinessDocumentBatchSubmissionPresenter();

        ret.submissionDataSource = _submissionDataSource;
        ret.documentTypes = _documentTypes;
        ret.updateStatusButton = _updateStatusButton;
        ret.batchSubmissionInvoicesButton = _batchSubmissionInvoicesButton;
        ret.documentTypeComboBox = _documentTypeComboBox;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBatchSubmitControlsVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates controls visibility.
    /// </summary>
    internal void updateBatchSubmitControlsVisibility()
    {
        if (BusinessDocumentParameters::isFeatureEnabled([EInvoicingFeaturesForService::ID00001]))
        {
            boolean batchSubmission = this.isBatchSubmission();
            BusinessDocumentSubmission submissionTable = submissionDataSource.cursor();
            
            batchSubmissionInvoicesButton.visible(true);
            batchSubmissionInvoicesButton.enabled(batchSubmission && submissionTable.UID);
        }
        else
        {
            batchSubmissionInvoicesButton.visible(false);
        }

        updateStatusButton.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBatchSubmission</Name>
				<Source><![CDATA[
    private boolean isBatchSubmission()
    {
        boolean ret = false;

        if (documentTypes.exists(documentTypeComboBox.selection()))
        {
            RefTableId refTableId = documentTypes.lookup(documentTypeComboBox.selection());
            ret = refTableId == tableNum(BusinessDocumentBatchSubmission);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>