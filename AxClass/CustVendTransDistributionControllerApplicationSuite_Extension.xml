<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransDistributionControllerApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(CustVendTransDistributionController))]
internal final class CustVendTransDistributionControllerApplicationSuite_Extension
{
    #ISOCountryRegionCodes
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isDistributionFactorFromDefaultDimension</Name>
				<Source><![CDATA[
    private boolean isDistributionFactorFromDefaultDimension(List _distributionFactors, LedgerDimensionAccount _defaultLedgerDimension)
    {
        boolean ret;
        CustVendTransDistribution defaultDistribution = new CustVendTransDistribution(_defaultLedgerDimension, 1.0);

        if (_distributionFactors.elements() == 1)
        {
            ListEnumerator listEnumerator = _distributionFactors.getEnumerator();

            if (listEnumerator.moveNext())
            {
                CustVendTransDistribution currentDistribution = listEnumerator.current();
                ret = (currentDistribution.ledgerDimension() == defaultDistribution.ledgerDimension()
                    && currentDistribution.transactionAmount() == defaultDistribution.transactionAmount()
                    && currentDistribution.accountingAmount() == defaultDistribution.accountingAmount()
                    && currentDistribution.reportingAmount() == defaultDistribution.reportingAmount());
            }
        }
       
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQueryForCustVendGeneralJournalEntry</Name>
				<Source><![CDATA[
    protected void buildQueryForCustVendGeneralJournalEntry(QueryBuildDataSource _qbds)
    {
        next buildQueryForCustVendGeneralJournalEntry(_qbds);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            int field = fieldNum(GeneralJournalAccountEntry, IsCorrection);
            _qbds.addGroupByField(field);
            _qbds.addOrderByField(field, SortOrder::Descending);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDistributionFactorsForPostingTypes</Name>
				<Source><![CDATA[
    public List getDistributionFactorsForPostingTypes(
            CustVendTrans           _custVendTrans,
            List                    _ledgerPostingTypes,
            LedgerDimensionAccount  _defaultLedgerDimension,
            boolean                 _forceSingleDistribution,
            boolean                 _mergeDefaultWithOriginalDimension)
    {
        boolean countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);


        List ret = next getDistributionFactorsForPostingTypes(
            _custVendTrans,
            _ledgerPostingTypes,
            _defaultLedgerDimension,
            _forceSingleDistribution,
            _mergeDefaultWithOriginalDimension);

        if (countryRegion_RU 
            && !_forceSingleDistribution
            && !CustVendTransDistributionController::custVendTransHasSourceDocumentData(_custVendTrans)
            && this.isDistributionFactorFromDefaultDimension(ret, _defaultLedgerDimension))
        {
            List postedDistributionData = new List(Types::Class);
            Money postedDistributionsTotal = this.getGeneralJournalDistributionData(postedDistributionData, _custVendTrans, _ledgerPostingTypes);
            
            if (!postedDistributionData.empty())
            {
                List distributionFactors = new List(Types::Class);
                this.calculateDistributionFactors(postedDistributionData, postedDistributionsTotal, distributionFactors);

                ret = this.parmCurrentDistributionFactors(distributionFactors);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>