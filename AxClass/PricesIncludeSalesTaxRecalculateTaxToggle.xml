<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PricesIncludeSalesTaxRecalculateTaxToggle</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;

/// <summary>
/// The <c>PricesIncludeSalesTaxRecalculateTaxToggle</c> class defines whether system should re-calculate tax if the purchase order is with "Prices include sales tax" marked.
/// </summary>
internal final class PricesIncludeSalesTaxRecalculateTaxToggle implements IFeatureLifecycle
{
    private static PricesIncludeSalesTaxRecalculateTaxToggle singleton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    private static void typeNew()
    {
        singleton = new PricesIncludeSalesTaxRecalculateTaxToggle();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static PricesIncludeSalesTaxRecalculateTaxToggle instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the feature is enabled.
    /// </summary>
    /// <returns>
    /// True if the feature is enabled; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean isEnabled()
    {
        return Dynamics.AX.Application.FeatureStateProvider::IsFeatureEnabled(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>