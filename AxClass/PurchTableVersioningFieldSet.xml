<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTableVersioningFieldSet</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchTableVersioningFieldSet</c> provides versioning functionality for the subset of fields defined by the <c>PurchTableMap</c> table map.
/// </summary>
final class PurchTableVersioningFieldSet implements PurchTableIVersioningFieldSet
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>purchTableMapFieldSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Casts a version record to an instance of a <c>PurchTableMap</c> record.
    /// </summary>
    /// <param name = "_purchTableVersion">
    /// A <c>PurchTableVersioning</c> object containing the version record.
    /// </param>
    /// <returns>
    /// The <c>PurchTableMap</c> record.
    /// </returns>
    [Wrappable(false)]
    protected PurchTableMap purchTableMapFieldSet(PurchTableVersioning _purchTableVersion)
    {
        return _purchTableVersion.parmPurchTableVersion();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isChangeConfirmationRequired</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a change to the specific subset of fields on a record defined by the <c>PurchTableMap</c> table map will require a purchase order confirmation.
    /// </summary>
    /// <param name = "_currentPurchTableVersion">
    /// An current <c>PurchTableVersioning</c> object to compare the archived version against.
    /// </param>
    /// <param name = "_archivedPurchTableVersion">
    /// An archived <c>PurchTableVersioning</c> object to compare the current version against.
    /// </param>
    /// <returns>
    /// true if the change requires confirmation; otherwise, false.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    public boolean isChangeConfirmationRequired(PurchTableVersioning _currentPurchTableVersion, PurchTableVersioning _archivedPurchTableVersion)
    {
        PurchTableMap currentPurchTableMap  = this.purchTableMapFieldSet(_currentPurchTableVersion);
        PurchTablemap archivedPurchTableMap = this.purchTableMapFieldSet(_archivedPurchTableVersion);

        boolean ret = false;

        if (    currentPurchTableMap.CashDisc           != archivedPurchTableMap.CashDisc
            ||  currentPurchTableMap.CurrencyCode       != archivedPurchTableMap.CurrencyCode
            ||  currentPurchTableMap.DeliveryDate       != archivedPurchTableMap.DeliveryDate
            ||  currentPurchTableMap.DeliveryName       != archivedPurchTableMap.DeliveryName
            ||  currentPurchTableMap.PurchName          != archivedPurchTableMap.PurchName
            ||  currentPurchTableMap.OrderAccount       != archivedPurchTableMap.OrderAccount
            ||  currentPurchTableMap.InvoiceAccount     != archivedPurchTableMap.InvoiceAccount
            ||  currentPurchTableMap.AddressRefRecId    != archivedPurchTableMap.AddressRefRecId
            ||  currentPurchTableMap.AddressRefTableId  != archivedPurchTableMap.AddressRefTableId
            ||  currentPurchTableMap.Payment            != archivedPurchTableMap.Payment
            ||  currentPurchTableMap.LineDisc           != archivedPurchTableMap.LineDisc
            ||  currentPurchTableMap.DiscPercent        != archivedPurchTableMap.DiscPercent
            ||  currentPurchTableMap.DlvMode            != archivedPurchTableMap.DlvMode
            ||  currentPurchTableMap.InventSiteId       != archivedPurchTableMap.InventSiteId
            ||  currentPurchTableMap.ReturnItemNum      != archivedPurchTableMap.ReturnItemNum
            ||  currentPurchTableMap.VendorRef          != archivedPurchTableMap.VendorRef
            ||  currentPurchTableMap.ReqAttention       != archivedPurchTableMap.ReqAttention
            ||  currentPurchTableMap.DlvTerm            != archivedPurchTableMap.DlvTerm
            ||  (PurchParameters::find().IsSupplierShipmentDatesEnabled
                 && (   currentPurchTableMap.RequestedShipDate != archivedPurchTableMap.RequestedShipDate
                     || currentPurchTableMap.ShipCalendarId    != archivedPurchTableMap.ShipCalendarId)))
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the specific subset of versioned fields defined by the <c>PurchTableMap</c> table map from a source version to a target version.
    /// </summary>
    /// <param name = "_targetPurchTableVersion">
    /// A <c>PurchTableVersioning</c> object containing the taget version.
    /// </param>
    /// <param name = "_sourcePurchTableVersion">
    /// A <c>PurchTableVersioning</c> object containing the source version.
    /// </param>
    [Hookable(false), Wrappable(false)]
    public void copyVersion(PurchTableVersioning _targetPurchTableVersion, PurchTableVersioning _sourcePurchTableVersion)
    {
        PurchTableMap targetPurchTableMap    = this.purchTableMapFieldSet(_targetPurchTableVersion);
        PurchTableMap sourcePurchTableMap    = this.purchTableMapFieldSet(_sourcePurchTableVersion);
        targetPurchTableMap.data(sourcePurchTableMap.data());
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldSetTableMapId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrives the ID of the table map defining the versioned subset of fields.
    /// </summary>
    /// <returns>
    /// The ID of the <c>PurchTableMap</c> table map.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    public TableId fieldSetTableMapId()
    {
        return tableNum(PurchTableMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>