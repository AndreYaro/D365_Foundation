<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumCriticalContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventSumCriticalContract</c> class is the contract for the critical on-hand inventory report.
/// </summary>
[DataContractAttribute]
public class InventSumCriticalContract implements SysOperationValidatable
{
    Query                       query;
    container                   packedQuery;

    guid                        reportId;
    SRSPrintMediumType          srsPrintMediumType;
    container                   printSettings;

    #define.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        reportId,
        packedQuery,
        srsPrintMediumType,
        printSettings
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSRSPrintSettings</Name>
				<Source><![CDATA[
    public container parmSRSPrintSettings(container _printSettings = printSettings)
    {
        printSettings = _printSettings;
        return printSettings;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSRSPrintMediumType</Name>
				<Source><![CDATA[
    public SRSPrintMediumType parmSRSPrintMediumType(SRSPrintMediumType _srsPrintMediumType = srsPrintMediumType)
    {
        srsPrintMediumType = _srsPrintMediumType;
        return srsPrintMediumType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportId</Name>
				<Source><![CDATA[
    public guid parmReportId(guid _reportId = reportId)
    {
        reportId = _reportId;

        return reportId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportName</Name>
				<Source><![CDATA[
    public str parmReportName()
    {
        return ssrsReportStr(InventSumCritical, Report);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates contract parameters.
    /// </summary>
    /// <returns>
    ///    true since there are no parameters to validate here.
    /// </returns>
    public boolean validate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        if (query)
        {
            packedQuery = query.pack();
        }
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        int version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #currentList] = _packedClass;
                if (packedQuery)
                {
                    query = new Query(packedQuery);
                }
                break;
            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    public Query parmQuery(Query _query = query)
    {
        query = _query;

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a critical on-hand report contract.
    /// </summary>
    /// <returns>An instance of <c>InventSumCriticalContract</c> class.</returns>
    public static InventSumCriticalContract construct()
    {
        return new InventSumCriticalContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>