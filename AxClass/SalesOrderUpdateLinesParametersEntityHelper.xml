<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesOrderUpdateLinesParametersEntityHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesOrderUpdateLinesParametersEntityHelper</c> class is a helper class for the <c>SalesOrderUpdateLinesParametersEntity</c> data entity.
/// The helper exposes methods required for setting the datasource range values in the data entity.
/// It is also used for the data entity field validation.
/// </summary>
public class SalesOrderUpdateLinesParametersEntityHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>tableNumSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>SalesTable</c> table ID.
    /// </summary>
    /// <returns><c>SalesTable</c> table ID</returns>
    [QueryRangeFunctionAttribute()]
    public static str tableNumSalesTable()
    {
        return SysQueryRangeUtil::value(tableNum(SalesTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>includedFieldIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a list of field IDs that are valid sales order update lines parameters.
    /// </summary>
    /// <returns>String representing a list of field IDs.</returns>
    [QueryRangeFunctionAttribute()]
    public static str includedFieldIds()
    {
        Set             validFieldIds   = SalesOrderUpdateLinesParametersEntityHelper::getValidSalesOrderUpdateLinesParameterFieldIds();
        SetEnumerator   enumerator      = validFieldIds.getEnumerator();
        str             value;

        while (enumerator.moveNext())
        {
            value = queryRangeConcat(value, enumerator.current());
        }

        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldValidSalesOrderUpdateLinesParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the field is a valid sales order update lines parameter.
    /// </summary>
    /// <param name = "_fieldName">Name of the field to be checked.</param>
    /// <returns>true if the field is a valid one; otherwise, false.</returns>
    public static boolean isFieldValidSalesOrderUpdateLinesParameter(FieldName _fieldName)
    {
        Set             salesTable2LineParameterFields  = SalesOrderUpdateLinesParametersEntityHelper::getValidSalesOrderUpdateLinesParameterFieldIds();
        SqlDictionary   sqlDictionary;

        select fieldId from sqlDictionary
            where sqlDictionary.tabId   == tableNum(SalesTable)
                && sqlDictionary.name   == _fieldName;

        if (salesTable2LineParameterFields.in(sqlDictionary.fieldId))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidSalesOrderUpdateLinesParameterFieldIds</Name>
				<Source><![CDATA[
    private static Set getValidSalesOrderUpdateLinesParameterFieldIds()
    {
        Set         salesTable2LineParameterFields  = new Set(Types::Integer);
        container   header2LineFieldIds             = SalesTable2LineParameters::header2LineFieldIdList();
        int         position                        = 1;
        TableId     tableId;
        FieldId     fieldId;

        while (position <= conlen(header2LineFieldIds))
        {
            [tableId, fieldId] = conpeek(header2LineFieldIds, position);

            if (tableId == tableNum(SalesTable) && SalesTable2LineParameters::fieldEnabled(tableId, fieldId))
            {
                salesTable2LineParameterFields.add(fieldId);
            }

            position++;
        }

        return salesTable2LineParameterFields;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>