<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is resposible for vouchers allocation for records from this tables:
/// Depreciation book journal lines, depreciation book transactions, group depreciation book transactions (IN).
/// </summary>
public abstract class ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocation
{
    NumberSequenceTable numberSequenceTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>runAllocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs vouchers allocation.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void runAllocation()
    {
        if (!this.verifyNumberSequenceMatchesNumberOfTransactions(this.getNumberOfDepreciationBookTransactions()))
        {
            throw error("@FixedAssets:FA_MessageError_NumberSequenceInsufficiantNumbers");
        }

        this.allocateVouchers();

        numberSequenceTable = this.findOrCreateNumberSequence();

        this.updateNumberSequenceInJournalNames();
    }

]]></Source>
			</Method>
			<Method>
				<Name>verifyNumberSequenceMatchesNumberOfTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies whether it is sufficient amount of numbers in the number sequence or not.
    /// </summary>
    /// <param name = "_numberOfTransactions">The number of transactions to validate.</param>
    /// <returns>true if the there is a sufficient amount of number in the number sequence; otherwise, false.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected abstract boolean verifyNumberSequenceMatchesNumberOfTransactions(int64 _numberOfTransactions)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>allocateVouchers</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allocate vouchers for transactional data.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected abstract void allocateVouchers()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateNumberSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates the specified number sequence based on const parameters.
    /// </summary>
    /// <returns>The number sequence found or created.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected abstract NumberSequenceTable findOrCreateNumberSequence()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateNumberSequenceInJournalNames</Name>
				<Source><![CDATA[
    private void updateNumberSequenceInJournalNames()
    {
        ReleaseUpdateDB70_FixedAssets::executeSqlStatementStatic(this.getSQLUpdateVoucherNumberSequenceInJournalNames(numberSequenceTable.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLUpdateVoucherNumberSequenceInJournalNames</Name>
				<Source><![CDATA[
    private str getSQLUpdateVoucherNumberSequenceInJournalNames(RefRecId _numberSequenceTableRecID)
    {
        str sqlStatement = strFmt(@"
            UPDATE [dbo].[ASSETDEPBOOKJOURNALNAMEUPGRADETMP]
                SET [ASSETDEPBOOKJOURNALNAMEUPGRADETMP].[NUMBERSEQUENCETABLE] = %1
                FROM [ASSETDEPBOOKJOURNALNAMEUPGRADETMP]
                WHERE [ASSETDEPBOOKJOURNALNAMEUPGRADETMP].[NUMBERSEQUENCETABLE] = 0
                  AND [ASSETDEPBOOKJOURNALNAMEUPGRADETMP].[DATAAREAID] = '%2'
                  AND [ASSETDEPBOOKJOURNALNAMEUPGRADETMP].[PARTITION] = %3",
            _numberSequenceTableRecID,
            curExt(),
            getCurrentPartitionRecId());

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfDepreciationBookTransactions</Name>
				<Source><![CDATA[
    private int64 getNumberOfDepreciationBookTransactions()
    {
        ResultSet depBookTransResultSet = ReleaseUpdateDB70_FixedAssets::executeSqlQueryWithResultsStatic(this.getSQLDepreciationBooksTransactionsNumber());
        ResultSet groupDepBookTransINResultSet = ReleaseUpdateDB70_FixedAssets::executeSqlQueryWithResultsStatic(this.getSQLDepreciationBooksTransactionsNumber_IN());

        depBookTransResultSet.next();
        groupDepBookTransINResultSet.next();

        int64 numberOfDepBookTrans = depBookTransResultSet.getInt64(1);
        int64 numberOfGroupDepBookTransIN = groupDepBookTransINResultSet.getInt64(1);

        return numberOfDepBookTrans + numberOfGroupDepBookTransIN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDepreciationBooksTransactionsNumber</Name>
				<Source><![CDATA[
    private str getSQLDepreciationBooksTransactionsNumber()
    {
        str sqlStatement = strFmt(@"
            SELECT COUNT(RECID) FROM [dbo].[ASSETDEPBOOKTRANS]
                WHERE [ASSETDEPBOOKTRANS].[DATAAREAID] = '%1'
                  AND [ASSETDEPBOOKTRANS].[PARTITION] = %2",
            curExt(),
            getCurrentPartitionRecId());

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDepreciationBooksTransactionsNumber_IN</Name>
				<Source><![CDATA[
    private str getSQLDepreciationBooksTransactionsNumber_IN()
    {
        str sqlStatement = strFmt(@"
            SELECT COUNT(RECID) FROM [dbo].[ASSETGROUPDEPBOOKTRANS_IN]
                WHERE [ASSETGROUPDEPBOOKTRANS_IN].[DATAAREAID] = '%1'
                  AND [ASSETGROUPDEPBOOKTRANS_IN].[PARTITION] = %2",
            curExt(),
            getCurrentPartitionRecId());

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>contructExistingNS</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instanse of <c>ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocation</c> class
    /// for the existsing number sequence.
    /// </summary>
    /// <param name = "_numberSequenceTable">
    /// Number sequence table record.
    /// </param>
    /// <returns>
    /// An instanse of <c>ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocation</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocation contructExistingNS(NumberSequenceTable _numberSequenceTable)
    {
        ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocationExistingNS numberSequenceAllocationExisting =
            new ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocationExistingNS();

        numberSequenceAllocationExisting.parmNumberSequenceTable(_numberSequenceTable);

        return numberSequenceAllocationExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructDefaultFast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instanse of <c>ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocation</c> class
    /// for the default number sequence.
    /// </summary>
    /// <param name = "_numberSequenceCode">
    /// Number sequence code.
    /// </param>
    /// <param name = "_numberSequencePrefix">
    /// Number sequence prefix.
    /// </param>
    /// <param name = "_numberSequenceAlpanumericLength">
    /// The length of the alphanumeric part.
    /// </param>
    /// <param name = "_numberSequenceStartNumber">
    /// The starting number of the number sequence.
    /// </param>
    /// <returns>
    /// An instanse of <c>ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocation</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocation constructDefaultFast(
        NumberSequenceCode _numberSequenceCode,
        str _numberSequencePrefix,
        int _numberSequenceAlpanumericLength,
        int _numberSequenceStartNumber)
    {
        ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocationFastDefault numberSequenceFast =
            new ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalVouchersAllocationFastDefault();

        numberSequenceFast.parmNumberSequenceCode(_numberSequenceCode);
        numberSequenceFast.parmNumberSequencePrefix(_numberSequencePrefix);
        numberSequenceFast.parmNumberSequenceAlphnumericLength(_numberSequenceAlpanumericLength);
        numberSequenceFast.parmNumberSequenceFirstNumber(_numberSequenceStartNumber);

        return numberSequenceFast;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>