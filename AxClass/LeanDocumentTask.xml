<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanDocumentTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LeanDocumentTask</c> class is the base class for lean document tasks.
/// </summary>
public abstract class LeanDocumentTask
{
    LeanDocumentProcessingData processingData;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canProceedWithTask</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the current state allows for the execution of the task.
    /// </summary>
    /// <returns>
    ///    true if execution is enabled; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected boolean canProceedWithTask()
    {
        boolean result = true;

        result = result
                    && processingData
                    && processingData.parmDocumentLines().elements() > 0;

        // only assert the result as this should never happen (i.e. if there're no lines, there should be no header)
        Debug::assert(result);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>equal</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the two objects are equal.
    /// </summary>
    /// <param name="otherObject">
    ///    The other object.
    /// </param>
    /// <returns>
    ///    true if the two objects hold the same state; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean equal(Object otherObject)
    {
        LeanDocumentTask otherTask = otherObject as LeanDocumentTask;

        return  otherObject == this
                || otherTask != null ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the class.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void init()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcessingData</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public LeanDocumentProcessingData parmProcessingData(LeanDocumentProcessingData _processingData = processingData)
    {
        processingData = _processingData;

        return processingData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes the task.
    /// </summary>
    /// <remarks>
    ///    Must be implemented in derived classes.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The method is called in the base class.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void run()
    {
        throw error(Error::wrongUseOfFunction(funcname()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>