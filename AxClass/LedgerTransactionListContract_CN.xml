<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTransactionListContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>LedgerDetailDailyLedgerTrans</c> report.
/// </summary>
/// <remarks>
/// This is the Data Contract for the <c>LedgerDetailDailyLedgerTrans</c> SSRS report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(LedgerTransactionListUIBuilder_CN)),
    SysOperationGroupAttribute('PreprintedPaper', "@GLS54554", '1'),
    SysOperationGroupAttribute('BlankPaper', "@SYS25850", '2')
]
class LedgerTransactionListContract_CN implements SysOperationValidatable
{
    LedgerPreprintDetail_CN         ledgerPreprintDetailCode;
    LedgerPrintLayoutCurrency_CN    ledgerPrintCurrency;
    Counter                         maxLines;
    boolean                         prePrint;
    boolean                         formInitFromMenu;
    MainAccountNum                  mainAccountId;

    #define.DefaultMaxLines(30)
    #define.DefaultMinLines(4)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFormInitFromMenu</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter FormInitFromMenu
    /// </summary>
    /// <param name="_formInitFromMenu">
    /// The new value of the data contract parameter "FormInitFromMenu"
    /// </param>
    /// <returns>
    /// The current value of data contract parameter FormInitFromMenu
    /// </returns>
    [
        DataMemberAttribute('InitFromMenu'),
        SysOperationLabelAttribute(literalStr("@SYS117498"))
    ]
    public boolean parmFormInitFromMenu(boolean _formInitFromMenu = formInitFromMenu)
    {
        formInitFromMenu = _formInitFromMenu;
        return formInitFromMenu;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPreprintDetailCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Print layout code
    /// </summary>
    /// <param name="_ledgerPrePrintDetailCode">
    /// The new value of the data contract parameter "Print layout code"
    /// </param>
    /// <returns>
    /// The current value of the data contract parameter Print layout code
    /// </returns>
    [
        DataMemberAttribute('LedgerPreprintDetail'),
        SysOperationLabelAttribute(literalStr("@GLS54454")),
        SysOperationGroupMemberAttribute('PreprintedPaper'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerPreprintDetail_CN parmLedgerPreprintDetailCode(LedgerPreprintDetail_CN _ledgerPrePrintDetailCode = ledgerPreprintDetailCode)
    {
        ledgerPreprintDetailCode = _ledgerPrePrintDetailCode;
        return ledgerPreprintDetailCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPrintLayoutCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Print layout currency
    /// </summary>
    /// <param name="_ledgerPrintCurrency">
    /// The new value of the data contract parameter "Print layout currency"
    /// </param>
    /// <returns>
    /// The current value of data contract parameter Print layout currency
    /// </returns>
    [
        DataMemberAttribute('LedgerPrintLayoutCurrency'),
        SysOperationLabelAttribute(literalStr("@GLS54456")),
        SysOperationGroupMemberAttribute('BlankPaper'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerPrintLayoutCurrency_CN parmLedgerPrintLayoutCurrency(LedgerPrintLayoutCurrency_CN _ledgerPrintCurrency = ledgerPrintCurrency)
    {
        ledgerPrintCurrency = _ledgerPrintCurrency;
        return ledgerPrintCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaxLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Maximum lines
    /// </summary>
    /// <param name="_maxLines">
    /// The new value of the data contract parameter "Maximum lines"
    /// </param>
    /// <returns>
    /// The current value of data contract parameter Maximum lines
    /// </returns>
    [
        DataMemberAttribute('MaxLines'),
        SysOperationLabelAttribute(literalStr("@GLS54547")),
        SysOperationGroupMemberAttribute('BlankPaper'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public Counter parmMaxLines(Counter _maxLines = maxLines)
    {
        maxLines = _maxLines;
        return maxLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreprint</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter PrePrint
    /// </summary>
    /// <param name="_prePrint">
    /// The new value of the data contract parameter "PrePrint"
    /// </param>
    /// <returns>
    /// The current value of data contract parameter PrePrint
    /// </returns>
    [
        DataMemberAttribute('Preprint'),
        SysOperationLabelAttribute(literalStr("@SYS25852"))
    ]
    public boolean parmPreprint(boolean _prePrint = prePrint)
    {
        prePrint = _prePrint;
        return prePrint;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false;
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!prePrint
            && ((maxLines > #DefaultMaxLines) || (maxLines < #DefaultMinLines)))
        {
            //The maximum number of lines must be between 4 and 30.
            isValid = checkFailed(strFmt("@GLS54558", #DefaultMinLines, #DefaultMaxLines));
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>