<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiasGARImportUIBuilder_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FiasGARImportUIBuilder_RU</c> class is the UI builder for <c>FiasGARImportController_RU</c>.
/// </summary>
internal final class FiasGARImportUIBuilder_RU extends SysOperationAutomaticUIBuilder
{
    private const str fileUploadControlName = 'GARFileUpload';
    private const str metadataFileUploadControlName = 'GARMetaDataFileUpload';
    private const str acceptFileType = '.zip';
    private FiasGARImportContract_RU dataContract;
    private DialogField fieldIsUploadMedata;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void build()
    {
        super();

        dataContract = this.dataContractObject();
        SysOperationDialog dlg = dialog as SysOperationDialog;
        dlg.mainFormGroup().columns(1);

        DialogGroup dialogGroup = dlg.addGroup();
        FormBuildControl formBuildControl = dlg.formBuildDesign().control(dialogGroup.name());
        FileUploadBuild dialogFileUpload = formBuildControl.addControlEx(classstr(FileUpload), fileUploadControlName);
        dialogFileUpload.style(FileUploadStyle::MinimalWithFilename);
        dialogFileUpload.baseFileUploadStrategyClassName(classstr(FileUploadTemporaryStorageStrategy));
        dialogFileUpload.fileTypesAccepted(acceptFileType);
        dialogFileUpload.fileNameLabel("@FIAS:ImportGARAddressFile");
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void postRun()
    {
        this.setDialogOkButtonEnabled(dialog.formRun(), false);

        FileUpload addressFileUpload = this.getFormControl(dialog.formRun(), fileUploadControlName);
        addressFileUpload.notifyUploadCompleted += eventhandler(this.uploadCompleted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>uploadCompleted</Name>
				<Source><![CDATA[
    private void uploadCompleted()
    {
        FormRun formRun = dialog.formRun();
        FileUpload fileUploadControl = this.getFormControl(formRun, fileUploadControlName);
        FileUploadTemporaryStorageResult fileUploadResult = fileUploadControl.getFileUploadResult();
        if (fileUploadResult != null && fileUploadResult.getUploadStatus())
        {
            dataContract.parmUploadGARFileID(fileUploadResult.getFileId());
        }

        this.setDialogOkButtonEnabled(formRun, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDialogOkButtonEnabled</Name>
				<Source><![CDATA[
    private void setDialogOkButtonEnabled(FormRun _formRun, boolean _isEnabled)
    {
        const str OkButtonName = 'CommandButton';
        FormControl okButtonControl = this.getFormControl(_formRun, OkButtonName);

        if (okButtonControl)
        {
            okButtonControl.enabled(_isEnabled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormControl</Name>
				<Source><![CDATA[
    private FormControl getFormControl(FormRun _formRun, str _controlName)
    {
        return _formRun.control(_formRun.controlId( _controlName));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>