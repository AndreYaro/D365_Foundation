<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResAttributeGroupAttributeHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class EcoResAttributeGroupAttributeHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cascadeInsertInventoryProductAvailabilityAttributes</Name>
				<Source><![CDATA[
    public void cascadeInsertInventoryProductAvailabilityAttributes(EcoResTmpAttribute ecoResTmpAttribute, EcoResAttributeGroup ecoResAttributeGroup, EcoResAttributeModifier attributeModifier, EcoResCategory ecoResCategory)
    {
        EcoResAttributeGroupAttribute ecoResAttributeGroupAttribute;
        EcoResTmpAttribute      tmp;
        EcoResAttribute         attribute;


        if (!isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            return;
        }

        RetailParameters retailParameters = RetailParameters::find();
        EcoResAttribute inventoryProductAttribute = EcoResAttribute::find(retailParameters.InventoryProductAttribute);
        EcoResAttribute inventoryProductAvailabilitySortableAttribute = EcoResAttribute::find(retailParameters.InventoryProductAvailabilitySortableAttribute);

        EcoResCategoryAttributeGroup ecoResCategoryAttributeGroup;

        tmp.setTmp();
        tmp.setTmpData(ecoResTmpAttribute);

        select count(AttributeRecId) from tmp
            where tmp.AttributeRecId == inventoryProductAttribute.RecId
            || tmp.AttributeRecId == inventoryProductAvailabilitySortableAttribute.RecId;

        // When inventoryProductAttribute and inventoryProductAvailabilitySortableAttribute are all in tmp, they must have been inserted in original logic in closeOk of EcoResAttributeGroupAttribute form
        if (tmp.AttributeRecId >= 2)
        {
            // insert record into RetailProdAttributeInternalOrgMetadata to make attribute show in channel
            this.setProductAttributeShowOnChannel(inventoryProductAttribute.RecId, ecoResAttributeGroup);
            this.setProductAttributeShowOnChannel(inventoryProductAvailabilitySortableAttribute.RecId, ecoResAttributeGroup);
            return;
        }

        ttsbegin;
        while select Name, AttributeTypeRecId from tmp
            join RecId from attribute
                where attribute.RecId == tmp.AttributeRecId
                   && attribute.AttributeType == tmp.AttributeTypeRecId
                   && attribute.AttributeModifier == attributeModifier
        {
            // if current attribute is inventoryProductAttribute, insert inventoryProductAvailabilitySortableAttribute into ecoResAttributeGroupAttribute
            if (inventoryProductAvailabilitySortableAttribute && attribute.RecId == inventoryProductAttribute.RecId)
            {
                ecoResAttributeGroupAttribute.clear();
                ecoResAttributeGroupAttribute.Attribute      = inventoryProductAvailabilitySortableAttribute.RecId;
                ecoResAttributeGroupAttribute.AttributeGroup = ecoResAttributeGroup.RecId;
                ecoResAttributeGroupAttribute.DefaultValue   = EcoResValue::createDefaultValue(inventoryProductAvailabilitySortableAttribute.RecId);
                ecoResAttributeGroupAttribute.insert();

                // insert record into RetailProdAttributeInternalOrgMetadata to make attribute show in channel
                this.setProductAttributeShowOnChannel(inventoryProductAttribute.RecId, ecoResAttributeGroup);
                this.setProductAttributeShowOnChannel(inventoryProductAvailabilitySortableAttribute.RecId, ecoResAttributeGroup);
            }
            // if current attribute is inventoryProductAvailabilitySortableAttribute, insert inventoryProductAttribute into ecoResAttributeGroupAttribute
            else if (inventoryProductAvailabilitySortableAttribute && attribute.RecId == inventoryProductAvailabilitySortableAttribute.RecId)
            {
                ecoResAttributeGroupAttribute.clear();
                ecoResAttributeGroupAttribute.Attribute      = inventoryProductAttribute.RecId;
                ecoResAttributeGroupAttribute.AttributeGroup = ecoResAttributeGroup.RecId;
                ecoResAttributeGroupAttribute.DefaultValue   = EcoResValue::createDefaultValue(inventoryProductAttribute.RecId);
                ecoResAttributeGroupAttribute.insert();

                // insert record into RetailProdAttributeInternalOrgMetadata to make attribute show in channel
                this.setProductAttributeShowOnChannel(inventoryProductAttribute.RecId, ecoResAttributeGroup);
                this.setProductAttributeShowOnChannel(inventoryProductAvailabilitySortableAttribute.RecId, ecoResAttributeGroup);
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProductAttributeShowOnChannel</Name>
				<Source><![CDATA[
    private void setProductAttributeShowOnChannel(RefRecId _attributeId, EcoResAttributeGroup ecoResAttributeGroup)
    {
        RetailInternalOrgAttributeGroupExploded internalOrgAttributeGroupExploded;
        RetailInternalOrganization retailInternalOrg;
        EcoResAttributeGroupAttribute ecoResAttributeGroupAttribute;
        RetailProdAttribIntOrgMetadataCollapsed internalOrgMetadata;
        RetailAttributeChannelMetadata metadata;
        RetailChannelMetadataVersion metadataVersion;
        RetailChannelTable channelTable;

        RetailAttributeMetadata retailAttributeMetadata = RetailAttributeMetadata::findByAttribute(_attributeId);

        utcDateTime utcNow = DateTimeUtil::utcNow();

        ttsbegin;
        while select retailInternalOrg
        exists join internalOrgAttributeGroupExploded
                where internalOrgAttributeGroupExploded.AttributeGroup == ecoResAttributeGroup.RecId
                    && internalOrgAttributeGroupExploded.ValidFrom <= utcNow
                    && internalOrgAttributeGroupExploded.ValidTo >= utcNow
                    && internalOrgAttributeGroupExploded.Modifier == RetailChannelAttributeModifier::Product
        exists join channelTable
                where channelTable.OMOperatingUnitID == retailInternalOrg.InternalOrganization
                    && (channelTable.ChannelType == RetailChannelType::SharePointOnlineStore
                    || channelTable.ChannelType == RetailChannelType::OnlineStore)
        {
            // find Attribute for a internal org from RetailProdAttribIntOrgMetadataCollapsed view.
            internalOrgMetadata = RetailProdAttribIntOrgMetadataCollapsed::findByInternalOrgAttribute(retailInternalOrg.RecId, _attributeId);

            if (internalOrgMetadata.RecId)
            {
                metadata = internalOrgMetadata.Metadata;
                metadataVersion = internalOrgMetadata.MetadataVersion;
            }
            else
            {
                metadata = retailAttributeMetadata.Metadata;
                metadataVersion = retailAttributeMetadata.MetadataVersion;
            }

            // Insert/Upsert product attribute metadata.
            RetailProdAttributeInternalOrgMetadata::addUpdate(
                retailInternalOrg.RecId,
                _attributeId,
                false,
                RetailProductAttributeRelationType::Channel,
                metadata,
                metadataVersion);
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>