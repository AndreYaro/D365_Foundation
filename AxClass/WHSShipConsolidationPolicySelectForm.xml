<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipConsolidationPolicySelectForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSShipConsolidationPolicySelectForm</c> class contains the business logic of the <c>WHSShipConsolidationPolicySelect</c> form.
/// </summary>
public class WHSShipConsolidationPolicySelectForm
{
    WHSShipConsolidationPolicy selectedPolicy;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>WHSShipConsolidationPolicySelectForm</c>.
    /// </summary>
    /// <returns>
    /// An instance of <c>WHSShipConsolidationPolicySelectForm</c>.
    /// </returns>
    internal static WHSShipConsolidationPolicySelectForm construct()
    {
        return new WHSShipConsolidationPolicySelectForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateShipConsolidationPolicyData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the selected set of release lines with the new policy selected from the dialog 
    /// named select shipment consolidation policy in the release to warehouse form.
    /// </summary>
    /// <param name="_args">
    /// The WHSShipConsolidationPolicySelect form related data.
    /// </param>
    /// <param name="_selectedPolicyRecId">
    /// The recId of the selected shipment consolidation policy which will be assigned to the selected lines.
    /// </param>
    internal void updateShipConsolidationPolicyData(Args _args, WHSShipConsolidationPolicyRecId _selectedPolicyRecId)
    {
        selectedPolicy = WHSShipConsolidationPolicy::findByRecId(_selectedPolicyRecId);

        if (selectedPolicy.Valid != WHSShipConsolidationPolicyValidationStatus::Valid)
        {
            checkFailed(strFmt("@WAX:ShipmentConsolidationPolicyIsInvalid", selectedPolicy.ShipConsolidationPolicyName));

            return;
        }

        if (FormDataUtil::isFormDataSource(_args.record()))
        {
            FormDataSource formDataSource = _args.record().dataSource();

            if (formDataSource.table() == tableNum(WHSTmpReleaseToWarehouse))
            {
                for (WHSTmpReleaseToWarehouse releaseToWarehouse = this.getBufferFromDataSource(formDataSource);
                    releaseToWarehouse; 
                    releaseToWarehouse = formDataSource.getNext())
                {
                    if (this.validateCanAssignPolicy(releaseToWarehouse))
                    {
                        WHSTmpReleaseToWarehouse::assignShipConsolidationPolicy(selectedPolicy.RecId, releaseToWarehouse);
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBufferFromDataSource</Name>
				<Source><![CDATA[
    private Common getBufferFromDataSource(FormDataSource _dataSource)
    {
        return _dataSource.getFirst(true) ? _dataSource.getFirst(true) : _dataSource.cursor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCanAssignPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the shipment consolidation policy can be associated to the release line in release to warehouse form.
    /// </summary>
    /// <param name="_releaseToWarehouse">
    /// The buffer of the line to be released.
    /// </param>
    /// <returns>
    /// true if the shipment consolidation policy can be associated to the release line; otherwise, false.
    /// </returns>
    private boolean validateCanAssignPolicy(WHSTmpReleaseToWarehouse _releaseToWarehouse)
    {
        if ((_releaseToWarehouse.Module == WHSModule::Transfer && selectedPolicy.ShipConsolidationPolicyType == WHSShipConsolidationPolicyType::TransferIssue) ||
            (_releaseToWarehouse.Module == WHSModule::Sales    && selectedPolicy.ShipConsolidationPolicyType == WHSShipConsolidationPolicyType::Sales))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>