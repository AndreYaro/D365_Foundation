<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanGenerationInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BudgetPlanGenerationInstrumentationActivities
{
    private BudgetInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(BudgetInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static BudgetPlanGenerationInstrumentationActivities newFromLogger(BudgetInstrumentationLogger _logger)
    {
        return new BudgetPlanGenerationInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>planLineContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext planLineContext()
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServicePlanLinesDetails);

        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext assetContext(BudgetPlanGenerateContractAsset _contract)
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServiceAsset);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(BudgetInstrumentationConstants::FromDate, date2StrXpp(_contract.parmSourceFromDate()))
            .addCustomProperty(BudgetInstrumentationConstants::ToDate, date2StrXpp(_contract.parmSourceToDate()));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>budgetPlanContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext budgetPlanContext(BudgetPlanGenerateContractBudgetPlan _contract)
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServiceBudgetPlan);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(BudgetInstrumentationConstants::BudgetPlanProcessRecId, int642Str(_contract.parmSourceBudgetPlanBudgetPlanProcess()))
            .addCustomProperty(BudgetInstrumentationConstants::BudgetPlanHeader, int642Str(_contract.parmSourceBudgetPlanHeaderRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::BudgetPlanScenarioRecId, int642Str(_contract.parmSourceBudgetPlanScenarioRecId()));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>budgetTransContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext budgetTransContext(BudgetPlanGenerateContractBudgetTransaction _contract)
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServiceBudgetTransaction);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(BudgetInstrumentationConstants::BudgetTransactionCodeRecId, int642Str(_contract.parmBudgetTransactionCode()));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>genJourContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext genJourContext(BudgetPlanGenerateContractGenJour _contract)
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServiceGeneralJournal);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(BudgetInstrumentationConstants::FiscalCalendarYearRecId, int642Str(_contract.parmFiscalCalendarYearRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::FromFiscalCalendarPeriodRecId, int642Str(_contract.parmFromFiscalCalendarPeriodRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::ToFiscalCalendarPeriodRecId, int642Str(_contract.parmToFiscalCalendarPeriodRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::AccountTypeProfitAndLossSelected, any2Str(_contract.parmAccountTypeProfitandLossSelected()))
            .addCustomProperty(BudgetInstrumentationConstants::AccountTypeRevenueSelected, any2Str(_contract.parmAccountTypeRevenueSelected()))
            .addCustomProperty(BudgetInstrumentationConstants::AccountTypeExpenseSelected, any2Str(_contract.parmAccountTypeExpenseSelected()))
            .addCustomProperty(BudgetInstrumentationConstants::AccountTypeBalanceSheetSelected, any2Str(_contract.parmAccountTypeBalanceSheetSelected()))
            .addCustomProperty(BudgetInstrumentationConstants::AccountTypeAssetSelected, any2Str(_contract.parmAccountTypeAssetSelected()))
            .addCustomProperty(BudgetInstrumentationConstants::AccountTypeLiabilitySelected, any2Str(_contract.parmAccountTypeLiabilitySelected()))
            .addCustomProperty(BudgetInstrumentationConstants::AccountTypeTotalSelected, any2Str(_contract.parmAccountTypeTotalSelected()))
            .addCustomProperty(BudgetInstrumentationConstants::IncludeClosingTransaction, any2Str(_contract.parmIncludeClosingTransaction()))
            .addCustomProperty(BudgetInstrumentationConstants::AccountTypeEquitySelected, any2Str(_contract.parmAccountTypeEquitySelected()));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>HCMContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext HCMContext(BudgetPlanGenerateContractHcm _contract)
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServiceHCM);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(BudgetInstrumentationConstants::BudgetPlanLineIncludePosition, any2Str(_contract.parmTargetBudgetPlanLineIncludePosition()))
            .addCustomProperty(BudgetInstrumentationConstants::BudgetPlanProcessRecId, int642Str(_contract.parmSourceBudgetPlanProcess()))
            .addCustomProperty(BudgetInstrumentationConstants::BudgetPlanScenarioRecId, int642Str(_contract.parmSourceBudgetPlanScenarioRecId()));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projForecastContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext projForecastContext(BudgetPlanGenerateContractProjectForecast _contract)
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServiceProjectForecast);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(BudgetInstrumentationConstants::ProjectForecastProfitAndLoss, any2Str(_contract.parmSourceProjectForecastProfitAndLoss()))
            .addCustomProperty(BudgetInstrumentationConstants::ProjectForecastWIP, any2Str(_contract.parmSourceProjectForecastWIP()))
            .addCustomProperty(BudgetInstrumentationConstants::ProjectForecastPayrollAllocation, any2Str(_contract.parmSourceProjectForecastPayrollAllocation()))
            .addCustomProperty(BudgetInstrumentationConstants::ProjectForecastProjectFromDate, date2StrXpp(_contract.parmSourceProjectForecastProjectFromDate()))
            .addCustomProperty(BudgetInstrumentationConstants::ProjectForecastProjectToDate, date2StrXpp(_contract.parmSourceProjectForecastProjectToDate()))
            .addCustomProperty(BudgetInstrumentationConstants::ProjectForecastLedgerFromDate, date2StrXpp(_contract.parmSourceProjectForecastLedgerFromDate()))
            .addCustomProperty(BudgetInstrumentationConstants::ProjectForecastLedgerToDate, date2StrXpp(_contract.parmSourceProjectForecastLedgerToDate()));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>supplyForecastContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext supplyForecastContext()
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServiceSupplyForecast);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>demandForecastContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext demandForecastContext(BudgetPlanGenerateContractDemandForecast _contract)
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanGenerateServiceDemandForecast);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(BudgetInstrumentationConstants::DemandForecastConsumption, any2Str(_contract.parmSourceDemandForecastConsumption()))
            .addCustomProperty(BudgetInstrumentationConstants::DemandForecastSalesOrder, any2Str(_contract.parmSourceDemandForecastSalesOrder()));

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>