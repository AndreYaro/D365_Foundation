<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjWBSActivityEstimatesDataCorrection</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjWBSActivityEstimatesDataCorrection
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
	public static void main(Args _args)
    {
        HierarchyTreeTable hierarchyTreeTable;
        str hierarchyTreeTableName = tableId2PName(hierarchyTreeTable.TableId);

        PSAActivityEstimates estimates;
        str estimatesTableName = tableId2PName(estimates.TableId);

        smmActivities activities;
        str activitiesTableName = tableId2PName(activities.TableId);

        SalesQuotationTable quotationTable;
        str quotationTableName = tableId2PName(quotationTable.TableId);

        if (Box::yesNoCancel((
                    strFmt("@Res:ValidateWBSActivityEstimatesDataCorrection",
                        hierarchyTreeTableName,
                        estimatesTableName,
                        activitiesTableName,
                        quotationTableName)
                        ), DialogButton::No) == DialogButton::Yes)
        {
            ttsbegin;
            ProjWBSActivityEstimatesDataCorrection::handleExistingHierarchiesWithoutTemplates();
            ProjWBSActivityEstimatesDataCorrection::handleExistingHierarchiesWithTemplates();
            ttscommit;

            info("@Res:ProjWBSActivityEstimatesDataCorrectionSuccessful");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleExistingHierarchiesWithoutTemplates</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method handles cases for existing hierarchies which have not been converted to a template yet.
    /// </summary>
    private static void handleExistingHierarchiesWithoutTemplates()
    {
        SalesQuotationTable salesQuotationTable;
        HierarchyLinkTable hierarchyLinkTable;
        ProjPlanVersion projPlanVersion;
        HierarchyTreeTable hierarchyTreeTable;
        smmActivities smmActivities;

        // Find all quotations where the smmActivity associated with the root task is the same as the followup activity
        while select salesQuotationTable
        join RecId from hierarchyLinkTable where
            hierarchyLinkTable.RefTableId == tableNum(SalesQuotationTable)
            && hierarchyLinkTable.RefRecId == salesQuotationTable.RecId
        join RecId from projPlanVersion where
            projPlanVersion.HierarchyId == hierarchyLinkTable.HierarchyId
            && projPlanVersion.HierarchyTaskId == 1
        join forupdate hierarchyTreeTable where
            hierarchyTreeTable.RecId == projPlanVersion.HierarchyTreeTableRefRecId
        join RecId from smmActivities where
            smmActivities.RecId == hierarchyTreeTable.RefRecId
            && smmActivities.ActivityNumber == salesQuotationTable.QuotationFollowupActivity
        {
            // Create a new smmActivity for the root
            smmActivities newRootActivity = smmActivityCreate::createActivity(salesQuotationTable);
            hierarchyTreeTable.RefRecId = newRootActivity.RecId;
            HierarchyTreeTable.update();

            // Update the activity number for all the estimates on the root
            PSAActivityEstimates estimates;
            ResUtil::skipDatabaseLogAndEvent(estimates);
            update_recordset estimates setting
                ActivityNumber = newRootActivity.ActivityNumber
            where
                estimates.ProjPlanHierarchyId == hierarchyLinkTable.HierarchyId
                && estimates.ProjPlanHierarchyTaskId == 1;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleExistingHierarchiesWithTemplates</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method handles cases for existing hierarchies which have been converted to a template 
    ///     and needs to build missing association between activities and hierarchyTreeTable.
    /// </summary>
    private static void handleExistingHierarchiesWithTemplates()
    {
        // Find records which have been converted to templates already.
        SalesQuotationTable salesQuotationTable;
        HierarchyLinkTable hierarchyLinkTable;
        
        while select salesQuotationTable
        join HierarchyId from hierarchyLinkTable where
            hierarchyLinkTable.RefTableId == tableNum(SalesQuotationTable)
            && hierarchyLinkTable.RefRecId == salesQuotationTable.RecId
            && salesQuotationTable.QuotationType == QuotationType::Project 
			&& salesQuotationTable.TemplateActive == NoYes::Yes
        
        {
            // Create a new smmActivity and hierarchyTreeTable record for the root
            smmActivities newRootActivity = smmActivityCreate::createActivity(salesQuotationTable);
            HierarchyTreeTable::insertActivity(hierarchyLinkTable.HierarchyId, null, newRootActivity);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>