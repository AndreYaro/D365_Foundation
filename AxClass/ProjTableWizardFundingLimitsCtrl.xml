<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTableWizardFundingLimitsCtrl</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjTableWizardFundingLimitsCtrl extends ProjTableWizard
{
    ProjInvoiceProjId   invoiceProjId;
    ProjInvoiceProjId   oldInvoiceProjId;

    boolean             createFunders;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createdQtyDB</Name>
				<Source><![CDATA[
    Integer createdQtyDB()
    {
        return any2int((select count(RecId) from projFundingLimit).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createdQtyFile</Name>
				<Source><![CDATA[
    Integer createdQtyFile()
    {
        return any2int((select count(RecId) from projFundingLimit
               where projFundingLimit.ContractId == this.parmOldInvoiceProjId()).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static Name description()
    {
        return "@SYS134755";
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDB</Name>
				<Source><![CDATA[
    void insertDB()
    {
        ProjFundingLimit  projFundingLimitDB, projFundingLimitFile;

        ttsbegin;

        if (this.parmCreateFunders())
        {
            while select projFundingLimitFile
                where projFundingLimitFile.ContractId == this.parmOldInvoiceProjId()
            {
                projFundingLimitDB.clear();
                projFundingLimitDB.data(projFundingLimitFile);
                projFundingLimitDB.ContractId = this.parmInvoiceProjId();
                projFundingLimitDB.FundingSource = ProjFundingSource::findContractFundingSource(projFundingLimitDB.ContractId,
                                                   ProjFundingSource::find(projFundingLimitFile.FundingSource).FundingSourceId).RecId;
                projFundingLimitDB.insert();
            }
        }
        else
        {
            while select projFundingLimitFile
                where   projFundingLimitFile.ContractId == this.parmOldInvoiceProjId() &&
                        projFundingLimitFile.FundingSource == 0
            {
                projFundingLimitDB.clear();
                projFundingLimitDB.data(projFundingLimitFile);
                projFundingLimitDB.ContractId = this.parmInvoiceProjId();
                projFundingLimitDB.FundingSource = ProjFundingSource::findContractFundingSource(projFundingLimitDB.ContractId,
                                                   ProjFundingSource::find(projFundingLimitFile.FundingSource).FundingSourceId).RecId;
                projFundingLimitDB.insert();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreateFunders</Name>
				<Source><![CDATA[
    public boolean parmCreateFunders(boolean _createFunders = createFunders)
    {
        createFunders = _createFunders;

        return createFunders;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceProjId</Name>
				<Source><![CDATA[
    ProjInvoiceProjId parmInvoiceProjId(ProjInvoiceProjId    _invoiceProjId = invoiceProjId)
    {
        invoiceProjId  = _invoiceProjId;

        return invoiceProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOldInvoiceProjId</Name>
				<Source><![CDATA[
    public ProjInvoiceProjId parmOldInvoiceProjId(ProjInvoiceProjId _oldInvoiceProjId = oldInvoiceProjId)
    {
        oldInvoiceProjId = _oldInvoiceProjId;

        return oldInvoiceProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjTableWizardFundingLimitsCtrl construct()
    {
        return new ProjTableWizardFundingLimitsCtrl();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>