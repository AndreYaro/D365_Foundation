<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleLedgerEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>NumberSeqModuleLedger</c> event handlers.
/// </summary>
public class NumberSeqModuleLedgerEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeNumberSeqFormHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Registers a custom number sequence form handler for the <c>LedgerJournalTrans</c> table.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqFormHandler), staticdelegatestr(NumberSeqFormHandler, onInitializeNumberSeqFormHandler))]
    public static void initializeNumberSeqFormHandler()
    {
        NumberSeqFormHandler::registerNumberSeqFormHandler(tablenum(LedgerJournalTrans), classnum(NumberSeqFormHandlerLedgerJournal));
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadModuleEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures the data types within the ApplicationSuite module that are being used by <c>NumberSeqModuleLedger</c>.
    /// </summary>
    /// <param name = "_numberSeqModuleLedger">Instace of <c>NumberSeqModuleLedger</c> where the number sequences should be created.</param>
    /// <param name = "_datatype">Instace of <c>NumberSeqDatatype</c> where the data type should be created.</param>
    [SubscribesTo(classstr(NumberSeqModuleLedger), delegatestr(NumberSeqModuleLedger, loadedModule))]
    public static void loadModuleEventHandler(NumberSeqModuleLedger _numberSeqModuleLedger, NumberSeqDatatype _datatype)
    {
        // setup subledger journal entry - journal number
        _datatype.parmDatatypeId(extendedTypeNum(SubledgerJournalNum));
        _datatype.parmReferenceLabel(literalStr("@SYS300394"));
        _datatype.parmReferenceHelp(literalStr("@SYS25460"));
        _datatype.parmWizardIsContinuous(false);
        _datatype.parmWizardIsManual(NoYes::No);
        _datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        _datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        _datatype.parmWizardHighest(999999999);
        _datatype.parmSortField(1);
        _datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        _numberSeqModuleLedger.createNumberSequence(_datatype);

        // <GEELV>
        _datatype.parmDatatypeId(extendedTypeNum(LvCashReceiptBatchId));
        _datatype.parmReferenceHelp(literalStr("@GLS113284"));
        _datatype.parmReferenceLabel(literalStr("@GLS113285"));
        _datatype.parmWizardIsContinuous(NoYes::No);
        _datatype.parmWizardIsManual(NoYes::No);
        _datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        _datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        _datatype.parmSortField(1);
        _datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        _numberSeqModuleLedger.createNumberSequence(_datatype);
        // </GEELV>

        // <GEERU>
        _datatype.parmDatatypeId(extendedTypeNum(CommReportId_RU));
        _datatype.parmReferenceHelp(literalStr("@SalesPurchBook:ReportForPrincipalId"));
        _datatype.parmWizardIsContinuous(NoYes::Yes);
        _datatype.parmWizardIsManual(NoYes::No);
        _datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        _datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        _datatype.parmSortField(23);
        _datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        _numberSeqModuleLedger.createNumberSequence(_datatype);
        // </GEERU>
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>