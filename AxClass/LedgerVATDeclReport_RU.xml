<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerVATDeclReport_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class LedgerVATDeclReport_RU
{
    TmpLedgerVATDeclaratoinHeader_RU    header;
    TmpLedgerVATDeclaratoinLine_RU      line;

    Object                              document;

    FromDate            fromDate;
    ToDate              toDate;

    boolean             exportToXml;
    boolean             isCalledFromXMLExcelReport;
    Yr                  reportingYear;
    int                 reportingPeriodNum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    protected str currencyCode(CurrencyCode _currencyCode)
    {
        return int2str(ISOCurrencyCode::find(Currency::find(_currencyCode).CurrencyCodeISO).ISOCurrencyCodeNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocument</Name>
				<Source><![CDATA[
    public Object getDocument()
    {
        return document;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeader</Name>
				<Source><![CDATA[
    public TmpLedgerVATDeclaratoinHeader_RU getHeader()
    {
        return header;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLine</Name>
				<Source><![CDATA[
    public TmpLedgerVATDeclaratoinLine_RU getLine()
    {
        return line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAnyData</Name>
				<Source><![CDATA[
    protected boolean isAnyData()
    {
        TmpLedgerVATDeclaratoinLine_RU  lineLocal;

        lineLocal.setTmpData(line);
        select count(recId) from lineLocal;

        return lineLocal.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportToXml</Name>
				<Source><![CDATA[
    public boolean parmExportToXml(boolean _exportToXml = exportToXml)
    {
        exportToXml = _exportToXml;
        return exportToXml;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareData</Name>
				<Source><![CDATA[
    abstract protected void prepareData()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        this.prepareData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContract</Name>
				<Source><![CDATA[
    public void setContract(container _contractPack)
    {
        LedgerVATDeclarationContract_RU contract = LedgerVATDeclarationContract_RU::construct();
        contract.unpack(_contractPack);

        fromDate = contract.parmFromDate();
        toDate = contract.parmToDate();
        isCalledFromXMLExcelReport = contract.parmIsCalledFromXMLExcelReport();

        if (isCalledFromXMLExcelReport)
        {
            reportingYear       = year(toDate);
            reportingPeriodNum  = date2Qtr(toDate);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>