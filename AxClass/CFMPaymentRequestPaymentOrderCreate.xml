<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestPaymentOrderCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// base class for logic for payment request payment order create.
/// </summary>
public abstract class CFMPaymentRequestPaymentOrderCreate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CFMPaymentRequestPaymentOrderCreate construct(Common _source)
    {
        CFMPaymentRequestPaymentOrderCreate paymentOrderCreate;

        if (_source)
        {
            CFMPaymentRequestPaymentOrderAttribute extensionAttribute = new CFMPaymentRequestPaymentOrderAttribute(tableId2name(_source.TableId));

            paymentOrderCreate = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(CFMPaymentRequestPaymentOrderCreate), extensionAttribute);

            if (!paymentOrderCreate)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }
        }

        return paymentOrderCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    protected abstract CFMPaymentRequestPaymentOrder create(Common _source, DimensionHashContainer _hashCode)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    public CFMPaymentRequestPaymentOrder findOrCreate(Common _source)
    {
        str hashKey = this.getHashKey(_source);

        InteropPermission permission = new InteropPermission(InteropKind::ClrInterop);
        permission.assert();

        str spookyHashBase64 = HashFunctions::ComputeHashAsBase64String(hashKey, HashType::SpookyHash);
        DimensionHashContainer hashContainer = base64str2con(spookyHashBase64);

        CodeAccessPermission::revertAssert();

        CFMPaymentRequestPaymentOrder paymentRequestPaymentOrder = CFMPaymentRequestPaymentOrder::findByHash(hashContainer);

        if (!paymentRequestPaymentOrder.RecId)
        {
            paymentRequestPaymentOrder = this.create(_source, hashContainer);
        }

        return paymentRequestPaymentOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHashKey</Name>
				<Source><![CDATA[
    protected abstract str getHashKey(Common _source)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>