<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
class  AssetCopy extends RunBase // Makes a new copy of this asset
{
    AssetId         assetId;
    DialogField     dialogAssetId;

    boolean         promptAssetId;

    AssetTable      assetTable;
    AssetTable      assetTableNew;

    #isoCountryRegionCodes
    boolean         isIsoRU;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assetTableNew</Name>
				<Source><![CDATA[
    AssetTable assetTableNew()
    {
        return assetTableNew;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and instance of a class that contains the methods that are described by the
    ///    <c>RunBaseDialogable</c> interface.
    /// </summary>
    /// <returns>
    ///    A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog box can be either built by using the <c>Dialog</c> class or by using a class that is
    ///    created in the AOT.
    /// </remarks>
    Object dialog()
    {
        Dialog              dialog;

        if (!promptAssetId)
        {
            return null;
        }

        dialog = new DialogRunbase("@SYS67426",this);                   // copy asset
        dialogAssetId = dialog.addField(extendedTypeStr(AssetId), "@SYS67468", "", true);   // new asset account

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    boolean getFromDialog()
    {
        if (!promptAssetId)
        {
            return true;
        }

        assetId = dialogAssetId.value();
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(AssetTable _assetTable)
    {
        super();

        assetTable = _assetTable;

        AssetGroup assetGroup = assetTable.assetGroup();

        if ((!assetGroup.AutoNumber && !AssetParameters::find().AutoNumber)
            || NumberSequenceTable::find(assetGroup.AutoNumberSequenceTable).Manual)
        {
            promptAssetId = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    void run()
    {
        boolean isIsoJP = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]);

        ttsbegin;

        this.populateNewAssetTable();

        assetTableNew.insert(true);

        AssetBook assetBook;

        while select assetBook
            where assetBook.AssetId == assetTable.AssetId
        {
            AssetBook assetBookNew = this.populateNewAssetBook(assetBook, isIsoJP);
            assetBookNew.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateNewAssetTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the new <c>AssetTable</c> buffer.
    /// </summary>
    protected void populateNewAssetTable()
    {
        assetTableNew.data(AssetTable::find(assetTable.AssetId));

        if (!promptAssetId)
        {
            if (assetTable.assetGroup().AutoNumber)
            {
                assetTableNew.AssetId = NumberSeq::newGetNumFromId(assetTable.assetGroup().AutoNumberSequenceTable).num();
            }
            else if (!dialogAssetId && AssetParameters::find().AutoNumber)
            {
                assetTableNew.AssetId = NumberSeq::newGetNum(AssetParameters::numRefAssetId()).num();
            }
        }
        else
        {
            assetTableNew.AssetId = assetId;
        }

        assetTableNew.PurchLineRecId = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateNewAssetBook</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates a new <c>AssetBook</c> buffer.
    /// </summary>
    /// <param name = "_assetBook">
    /// An <c>AssetBook</c> table buffer to copy.
    /// </param>
    /// <param name = "_isIsoJP">
    /// Indicates whether the ISO code of a legal entity matches Japan.
    /// </param>
    /// <returns>
    /// A populated <c>AssetBook</c> table buffer.
    /// </returns>
    protected AssetBook populateNewAssetBook(AssetBook _assetBook, boolean _isIsoJP)
    {
        AssetBook assetBookNew;
        assetBookNew.data(_assetBook);
        assetBookNew.AssetId               = assetTableNew.AssetId;
        assetBookNew.Status                = AssetStatus::NoAcquisition;
        assetBookNew.VendAccount           = '';
        assetBookNew.VendInvoiceId         = '';
        assetBookNew.CustAccount           = '';
        assetBookNew.CustInvoiceId         = '';
        assetBookNew.PurchId               = '';
        assetBookNew.LastDepreciationDate  = dateNull();
        assetBookNew.DisposalDate          = dateNull();
        assetBookNew.ReplacementDate       = dateNull();
        assetBookNew.SaleValue             = 0;
        assetBookNew.LifeTimeRest          = assetBookNew.LifeTime;

        AssetDefaultDimensionHelper::copyDefaultDimensions(_assetBook, assetBookNew);

        if (_isIsoJP)
        {
            assetBookNew.LastDepreciationDateAccelerated_JP = dateNull();
            assetBookNew.LastReserveAllocationDate_JP       = dateNull();
            assetBookNew.EquallyDividedStartDate_JP         = dateNull();
            assetBookNew.AssetRevisedAcquisitionCost_JP     = 0;
            assetBookNew.AssetRevisedAcquisitionCostStartDate_JP = dateNull();
            assetBookNew.LastDepreciationDateExtraOrd       = dateNull();
            assetBookNew.SpecialDepStartDate_JP             = dateNull();
            assetBookNew.SpecialDepLastAllocationDate_JP    = dateNull();
        }

        return assetBookNew;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    boolean validate(Object _calledFrom = null)
    {
        boolean     ret = true;
        // check that the new course id is ok

        if (!assetId)
        {
            ret = checkFailed("@SYS67760");    // new asset not filled in
        }

        if (AssetTable::exist(assetId))
        {
            ret = checkFailed(strFmt("@SYS67761",assetId));    // Asset already exists
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@SYS67426";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        AssetCopy       assetCopy;
        FormDataSource  formDataSource;
        FormRun         callerForm;

        if (!args || args.dataset() != tableNum(AssetTable))
            throw error(strFmt("@SYS25516",AssetCopy::description()));

        assetCopy = new AssetCopy(args.record());

        if (assetCopy.prompt())
        {
            assetCopy.runOperation();

            callerForm = args.caller() as FormRun;

            if (callerForm != null && callerForm.args() != null)
            {
                callerForm.args().lookupRecord(assetCopy.assetTableNew());
            }

        	formDataSource = FormDataUtil::getFormDataSource(args.record());
            formDataSource.research(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>