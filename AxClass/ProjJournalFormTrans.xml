<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjJournalFormTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjJournalFormTrans extends JournalFormTrans
{
    ProjJournalTrans projJournalTrans;
    FormStringControl ctrlEmplId;
    ProjSalesPriceCost salesPrice;
    boolean priceFound;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>datasourceInitPost</Name>
				<Source><![CDATA[
    public void datasourceInitPost(JournalTransMap _journalTrans)
    {
        super(_journalTrans);
        projJournalTrans  = _journalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPrices</Name>
				<Source><![CDATA[
    private void setPrices()
    {
        projJournalTrans.setHourCostPrice();
        priceFound = projJournalTrans.setHourSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceInitValuePre</Name>
				<Source><![CDATA[
    public void datasourceInitValuePre()
    {
        ProjJournalTable    projJournalTable = journalTableData.journalTable();

        projJournalTrans.TransDate  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        projJournalTrans.JournalId  = projJournalTable.JournalId;

        projJournalTrans.ProjTransDate  = projJournalTable.ProjTransDate;
        if (!projJournalTrans.ProjTransDate)
        {
            projJournalTrans.ProjTransDate  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        }
        projJournalTrans.Resource       = projJournalTable.Resource;
        projJournalTrans.setResourceCategory();
        projJournalTrans.ProjId         = projJournalTable.ProjId;
        projJournalTrans.CategoryId     = projJournalTable.CategoryId;
        projJournalTrans.Txt            = projJournalTable.Txt;
        projJournalTrans.setTransDate();

        if (projJournalTrans.ProjId)
        {
            projJournalTrans.initFromProjTable(ProjTable::find(projJournalTrans.ProjId));
        }

        if (projJournalTable.LinePropertyId)
        {
            projJournalTrans.LinePropertyId = projJournalTable.LinePropertyId;
        }

        if (projJournalTrans.CategoryId)
        {
            projJournalTrans.TaxItemGroupId = ProjCategory::find(projJournalTrans.CategoryId).TaxItemGroupId;
            if (!projJournalTable.LinePropertyId && !projJournalTrans.ProjId)
            {
                projJournalTrans.setLineProperty();
            }
        }

        if (projJournalTable.JournalType == ProjJournalType::Hour)
        {
            this.setPrices();
        }
        else if (projJournalTable.JournalType == ProjJournalType::Revenue)
        {
            projJournalTrans.setRevenueSalesPrice();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayJournalprojQty</Name>
				<Source><![CDATA[
    public ProjQty displayJournalprojQty(JournalTransMap _journalTrans)
    {
        ProjJournalTable projJournalTable = journalTableData.journalTable();

        return projJournalTable.ProjQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayJournalSalesPrice</Name>
				<Source><![CDATA[
    public SalesPrice displayJournalSalesPrice(JournalTransMap _journalTrans)
    {
        ProjJournalTable projJournalTable = journalTableData.journalTable();

        return projJournalTable.SalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayVoucherprojQty</Name>
				<Source><![CDATA[
    public ProjQty displayVoucherprojQty(JournalTransMap _journalTrans)
    {
        if (journalTableData.journalVoucherNum())
        {
            JournalVoucherList voucherList = journalTableData.journalVoucherList();
            if (!voucherList.find(_journalTrans.Voucher) && _journalTrans.RecId)
            {
                voucherList.addJournalTransData(journalTransData,true);
            }

            ProjJournalVoucherObject voucherObject;
            voucherObject = voucherList.item();

            return voucherObject ? voucherObject.projQty() : 0;
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    protected void enableButtonsActive()
    {
        ProjJournalTable projJournalTable = journalTableData.journalTable();

        super();

        if (ctrlPostJournal.enabled() && projJournalTable.StatusNameId && !isSystemAdministrator())
        {
            ProjJournalStatusLine projJournalStatusLine = ProjJournalStatusLine::find(projJournalTable.StatusNameId, projJournalTable.Status);
            if (projJournalStatusLine)
            {
                ctrlPostJournal.enabled(projJournalStatusLine.PostingReady == NoYes::Yes);
                if (ctrlPostJournal.enabled() && projJournalStatusLine.GroupIdStatus)
                {
                    ProjJournalTableParameters insertParameters = ProjJournalTableParameters::parmStatusNameId(ProjJournalTable.StatusNameId);

                    ctrlPostJournal.enabled(ProjJournalStatusLine::checkUserAccessByApprovalParameters(false, false, true));

                    insertParameters.dispose();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedActivityIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedActivityIdPost()
    {
        ProjJournalTable projJournalTable = journalTableData.journalTable();

        if (projJournalTable.JournalType == ProjJournalType::Hour && projJournalTable.CategoryId)
        {
            projJournalTrans.CategoryId = projJournalTable.CategoryId;
        }
        projJournalTrans.initFromProjActivity(ProjActivity::find(projJournalTrans.ActivityNumber));
        this.fieldModifiedCategoryIdPost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedCategoryIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedCategoryIdPost()
    {
        projJournalTrans.TaxItemGroupId = ProjCategory::find(projJournalTrans.CategoryId).TaxItemGroupId;
        projJournalTrans.setLineProperty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedCostPricePost</Name>
				<Source><![CDATA[
    public void fieldModifiedCostPricePost()
    {
        priceFound = projJournalTrans.setHourSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedCurrencyPost</Name>
				<Source><![CDATA[
    public void fieldModifiedCurrencyPost()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedInvoiceLinePropertyIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedInvoiceLinePropertyIdPost()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedProjIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedProjIdPost()
    {
        projJournalTrans.initFromProjTable(ProjTable::find(projJournalTrans.ProjId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedProjTransDatePost</Name>
				<Source><![CDATA[
    public void fieldModifiedProjTransDatePost()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedQtyPost</Name>
				<Source><![CDATA[
    public void fieldModifiedQtyPost()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedResourceCategoryPost</Name>
				<Source><![CDATA[
    public void fieldModifiedResourceCategoryPost()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedResourcePost</Name>
				<Source><![CDATA[
    public void fieldModifiedResourcePost()
    {
        if (journalTableData.journalVoucherNum() && journalTableData.journalTable().VoucherDraw == JournalVoucherDraw::Entering)
        {
            journalTransData.initVoucher(journalTrans_last.Voucher,true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedTxtPre</Name>
				<Source><![CDATA[
    public void fieldModifiedTxtPre()
    {
        ProjJournalTxt journalTxt = ProjJournalTxt::findTxt(projJournalTrans.Txt);

        if (journalTxt.Txt)
        {
            projJournalTrans.Txt = journalTxt.Txt;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldValidateTxt</Name>
				<Source><![CDATA[
    public boolean fieldValidateTxt()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDatasourceAllow</Name>
				<Source><![CDATA[
    protected void initDatasourceAllow()
    {
        ProjJournalTable projJournalTable = journalTableData.journalTable();

        super();

        if (projJournalTable.StatusNameId)
        {
            ProjJournalStatusLine projJournalStatusLine;
            projJournalStatusLine   = ProjJournalStatusLine::find(projJournalTable.StatusNameId,projJournalTable.Status);

            if (projJournalStatusLine)
            {
                if (journalTrans_ds.allowDelete())
                {
                    journalTrans_ds.allowDelete(projJournalStatusLine.AllowEdit);
                }

                if (journalTrans_ds.allowEdit())
                {
                    journalTrans_ds.allowEdit(projJournalStatusLine.AllowEdit);
                }

                if (journalTrans_ds.allowCreate())
                {
                    journalTrans_ds.allowCreate(projJournalStatusLine.AllowEdit);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>manageZeroSalesPrice</Name>
				<Source><![CDATA[
    void manageZeroSalesPrice()
    {
        // If no combination found for the given category in cost price hour Table then the previous sales price is restored
        if (!priceFound && this.parmSalesPrice())
        {
            projJournalTrans.SalesPrice = this.parmSalesPrice();
            projJournalTrans.updateAssessableValue_IN();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FormRun _formRun)
    {
        super(_formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPrice</Name>
				<Source><![CDATA[
    public ProjSalesPriceCost parmSalesPrice(ProjSalesPriceCost _salesPrice = salesPrice)
    {
        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>