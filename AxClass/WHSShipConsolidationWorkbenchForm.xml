<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipConsolidationWorkbenchForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSShipConsolidationWorkbenchForm</c> class contains form logic for <c>WHSShipConsolidationWorkbench</c> form.
/// </summary>
internal class WHSShipConsolidationWorkbenchForm extends WHSShipConsolidationWorkbenchBaseForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>WHSShipConsolidationWorkbenchForm</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of <c>WHSShipConsolidationWorkbenchForm</c> class.
    /// </returns>
    internal static WHSShipConsolidationWorkbenchForm construct()
    {
        return new WHSShipConsolidationWorkbenchForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the template details into the form.
    /// </summary>
    /// <param name="_template">
    /// The template to use as a source to populate the form.
    /// </param>
    internal void populateForm(WHSShipConsolidationTemplate _template)
    {
        if (_template)
        {
            this.buf2Buf(_template, whsShipConsolidationTemplate);
        }
        else
        {
            const WHSShipConsolidationTemplateName DefaultTemplateName = 'DefaultTemplate';
            WHSShipConsolidationTemplate           emptyTemplate;

            this.buf2Buf(emptyTemplate, whsShipConsolidationTemplate);
            whsShipConsolidationTemplate.initValue();
            whsShipConsolidationTemplate.ShipConsolidationTemplateName = DefaultTemplateName;
        }

        this.setupForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the template based on the Form fields.
    /// </summary>
    /// <param name="_template">
    /// The template to populate.
    /// </param>
    internal void populateTemplate(WHSShipConsolidationTemplate _template)
    {
        if (_template.RecId)
        {
            // Skip Template name and Description fields because they are empty on the data source
            const container SkipFields = [FieldNum(WHSShipConsolidationTemplate, ShipConsolidationTemplateName), FieldNum(WHSShipConsolidationTemplate, Description)];

            this.buf2Buf(whsShipConsolidationTemplate, _template, SkipFields);
        }
        else
        {
            this.buf2Buf(whsShipConsolidationTemplate, _template);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>proposeShipmentsClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles click of the "ProposeShipments" button.
    /// </summary>
    /// <param name="_queryCriteria">
    /// Parameters from a form.
    /// </param>
    internal void proposeShipmentsClicked(WHSShipConsolidationQueryCriteria _queryCriteria)
    {
        WHSShipConsolidationEngine shipConsolidationEngine = WHSShipConsolidationEngine::construct();

        shipConsolidationEngine.parmQueryCriteria(_queryCriteria);

        if (shipConsolidationEngine.proposeShipmentsAsync())
        {
            this.openProposedShipments(shipConsolidationEngine);
        }
        else
        {
            info("@WAX:Error_NoShipmentsHaveBeenFound");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openProposedShipments</Name>
				<Source><![CDATA[
    private void openProposedShipments(WHSShipConsolidationEngine _shipConsolidationEngine)
    {
        Args			args = new Args();
        MenuFunction	shipConsolidationProposals;

        args.parmObject(_shipConsolidationEngine);
        args.caller(this);
        shipConsolidationProposals = new MenuFunction(menuitemDisplayStr(WHSShipConsolidationProposal), MenuItemType::Display);
        shipConsolidationProposals.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasUserProposeAccessRights</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether current user has access to the propose shipments operation,
    /// accessed by the <c>WHSShipConsolidationProposal</c> action menu item.
    /// </summary>
    /// <returns>
    /// True if the user has access to the operation; otherwise false.
    /// </returns>
    internal boolean hasUserProposeAccessRights()
    {
        MenuFunction menuFunction = new MenuFunction(menuitemDisplayStr(WHSShipConsolidationProposal), MenuItemType::Display);

        return menuFunction != null && menuFunction.checkAccessRights();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buf2Buf</Name>
				<Source><![CDATA[
    private void buf2Buf(
        Common      _from,
        Common      _to,
        container   _skipFields = conNull())
    {
        var dictTable = new DictTable(_from.TableId);
        FieldId fieldId = dictTable.fieldNext(0, TableScope::CurrentTableOnly);

        while (fieldId)
        {
            if (! isSysId(fieldId) && ! conFind(_skipFields, fieldId))
            {
                _to.(fieldId) = _from.(fieldId);
            }

            fieldId = dictTable.fieldNext(fieldId, TableScope::CurrentTableOnly);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormDataSourceSelectedRecordIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a set with IDs of selected records.
    /// </summary>
    /// <param name = "_formDataSource">Form data source.</param>
    /// <returns>The set with IDs of selected records.</returns>
    internal static Set getFormDataSourceSelectedRecordIds(FormDataSource _formDataSource)
    {
        Common selectedRecord;
        Set selectedRecordIds = new Set(extendedTypeId2Type(extendedTypeNum(RecId)));
    
        for (selectedRecord = _formDataSource.getFirst(true) ? _formDataSource.getFirst(true) : _formDataSource.cursor();
            selectedRecord;
            selectedRecord = _formDataSource.getNext())
        {
            if (selectedRecord.RecId)
            {
                selectedRecordIds.add(selectedRecord.RecId);
            }
        }
    
        return selectedRecordIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormDataSourceSelectedShipmentIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a set with Shipment IDs of selected records.
    /// </summary>
    /// <param name = "_formDataSource">Form data source.</param>
    /// <returns>The set with Shipment IDs of selected records.</returns>
    internal static Set getFormDataSourceSelectedShipmentIds(FormDataSource _formDataSource)
    {
        Common			selectedRecord;
        Set				selectedShipmentIds = new Set(extendedTypeId2Type(extendedTypeNum(WHSShipmentId)));
        WHSShipmentId	shipmentId;

        for (selectedRecord = _formDataSource.getFirst(true) ? _formDataSource.getFirst(true) : _formDataSource.cursor();
		selectedRecord;
        selectedRecord = _formDataSource.getNext())
        {
            switch (selectedRecord.TableId)
            {
                case tableNum(WHSShipConsolidationProposedShipment)	:
                    shipmentId = selectedRecord.(fieldNum(WHSShipConsolidationProposedShipment, ShipmentId));

                    if (shipmentId)
                    {
                        selectedShipmentIds.add(shipmentId);
                    }
                    break;

                default:
                    throw error("@SYS6144");
            }
        }
    
        return selectedShipmentIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>