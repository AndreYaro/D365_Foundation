<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventStdCostConvItemTransfer</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventStdCostConvItemTransfer extends RunBase
{
    InventStdCostConv   inventStdCostConv;

    QueryRun            queryRun;

    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        inventStdCostConv
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the internal variables.
    /// </summary>
    /// <remarks>
    /// This method is called when no <c>SysLastValue</c> record can be found when calling the
    /// <c>SysLastValue.GetLast</c> method. Remember to call the <c>super</c> method.
    /// </remarks>
    public void initParmDefault()
    {
        super();

        queryRun = new QueryRun(queryStr(InventStdCostConvItemTransfer));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();

        queryRun = new QueryRun(queryStr(InventStdCostConvItemTransfer));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList,queryRun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventStdCostConv</Name>
				<Source><![CDATA[
    public InventStdCostConv parmInventStdCostConv(InventStdCostConv _inventStdCostConv = inventStdCostConv)
    {
        inventStdCostConv = _inventStdCostConv;

        return inventStdCostConv;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>QueryRun</c> object, which is used by the <c>QueryPrompt</c> object.
    /// </summary>
    /// <returns>
    /// The <c>QueryRun</c> object, which is used by the <c>QueryPrompt</c> object.
    /// </returns>
    /// <remarks>
    /// This method is used when a query prompt is the dialog box, and when a Select menu item is added to
    /// a dialog box. Do not instantiate the <c>queryRun</c> object whenever the method is called. This
    /// should be done in the <c>unpack</c> method and the <c>initParmDefault</c> method, in the
    /// <c>init</c> method, or in the method only when it is not instantiated.
    /// </remarks>
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Transfers items into the standard cost conversion.
    /// </summary>
    /// <exception cref="M:Exception::UpdateConflict">
    ///    The update conflict was caught in a transaction scope.
    /// </exception>
    /// <exception cref="M:Exception::UpdateConflictNotRecovered">
    ///    The update conflict could not be recovered.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    ///    The validation failed.
    /// </exception>
    public void run()
    {
        #OCCRetryCount
        InventStdCostConvItem   inventStdCostConvItem;
        RecordInsertList        recordInsertList = new RecordInsertList(tableNum(InventStdCostConvItem));

        setPrefix(InventStdCostConvItemTransfer::description());

        try
        {
            QueryRun queryRunWithNotExist = new QueryRun(queryRun.query());
            QueryBuildDataSource queryBuidDataSourceNotExist = queryRunWithNotExist.query().dataSourceTable(tableNum(InventTable)).addDataSource(tableNum(InventStdCostConvItem));
            queryBuidDataSourceNotExist.joinMode(JoinMode::NoExistsJoin);
            queryBuidDataSourceNotExist.relations(true);
            queryBuidDataSourceNotExist.addRange(fieldNum(InventStdCostConvItem, StdCostConvRecId)).value(queryValue(inventStdCostConv.RecId));

            this.progressInit(InventStdCostConvItemTransfer::description(),QueryRun::getQueryRowCount(queryRun.query(), maxInt()),#AviUpdate);

            ttsbegin;

            inventStdCostConv = InventStdCostConv::find(inventStdCostConv.RecId, true);

            if (! this.validate())
            {
                throw error("@SYS120736");
            }

            inventStdCostConvItem.initFromInventStdCostConv(inventStdCostConv);

            while (queryRunWithNotExist.next())
            {
                if (queryRunWithNotExist.changed(tableNum(InventTable)))
                {
                    InventTable inventTable = queryRunWithNotExist.get(tableNum(InventTable));
                    inventStdCostConvItem.ItemId    = inventTable.ItemId;

                    setPrefix(strFmt("@SYS14077",inventStdCostConvItem.ItemId));

                    if (!inventStdCostConvItem.validateField(fieldNum(InventStdCostConvItem, ItemId)))
                    {
                        continue;
                    }

                    recordInsertList.add(inventStdCostConvItem);

                    progress.incCount();
                    progress.setText(inventTable.ItemId);
                }
            }

            recordInsertList.insertDatabase();

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            queryRun.reset();
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    queryRun.reset();
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDefaultButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a Default button is to be added to the dialog box.
    /// </summary>
    /// <returns>
    /// false by default.
    /// </returns>
    /// <remarks>
    /// If you click this button it will reset the parameters to the default that is specified in the
    /// <c>initParmDefault</c> method.To add a Default button, override this method to return true.
    /// </remarks>
    public boolean showDefaultButton()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a Select button is to be added to the dialog box.
    /// </summary>
    /// <returns>
    /// false by default.
    /// </returns>
    /// <remarks>
    /// If you click this button, it will show the query form. Therefore, the <c>queryRun</c> method has to
    /// return a valid <c>queryRun</c> object.To add a Select button, override this method to return true.
    /// </remarks>
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        boolean         ret;
        Integer         version     = conPeek(packedClass,1);
        container       packedQuery;

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList,packedQuery] = packedClass;
                if (packedQuery && conLen(packedQuery) == 1)
                {
                    queryRun = new QueryRun(packedQuery);
                }

                ret = true;
                break;

            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that items may be added to the standard cost conversion.
    /// </summary>
    /// <param name="calledFrom">
    ///    The Object caller; optional.
    /// </param>
    /// <returns>
    ///    true if no errors exist; otherwise, false.
    /// </returns>
    public boolean validate(Object calledFrom = null)
    {
        boolean ret = super(calledFrom);

        if (!inventStdCostConv.allowAddItems())
        {
            ret = checkFailed("@SYS120737");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static InventStdCostConvItemTransfer construct()
    {
        return new InventStdCostConvItemTransfer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SYS120735";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        if (!args)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        Common common = args.record();

        if (!common.RecId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        InventStdCostConvItemTransfer inventStdCostConvItemTransfer = InventStdCostConvItemTransfer::newInventStdCostConv(common);

        if (inventStdCostConvItemTransfer.prompt())
        {
            inventStdCostConvItemTransfer.runOperation();

            if (FormDataUtil::isFormDataSource(common))
            {
                FormDataSource formDataSource = FormDataUtil::getFormDataSource(common);
                formDataSource.research(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInventStdCostConv</Name>
				<Source><![CDATA[
    public static InventStdCostConvItemTransfer newInventStdCostConv(InventStdCostConv _inventStdCostConv)
    {
        InventStdCostConvItemTransfer inventStdCostConvItemTransfer = InventStdCostConvItemTransfer::construct();
        inventStdCostConvItemTransfer.getLast();
        inventStdCostConvItemTransfer.parmInventStdCostConv(_inventStdCostConv);
        return inventStdCostConvItemTransfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
