<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementDimensionSync_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Synchronizes dimension field in the RU extension table <c>AgreementHeaderExt_RU</c> and dimension field in the base table <c>AgreementHeader</c>.
/// </summary>
class AgreementDimensionSync_RU extends RunBaseBatch implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        AgreementHeader         agreementHeader;
        AgreementHeaderExt_RU   agreementheaderExt;
        AgreementLine           agreementLine;
        #OCCRetryCount

        try
        {
            ttsbegin;

            update_recordSet agreementHeader setting DefaultDimension = agreementHeaderExt.DefaultDimension
                where agreementHeader.DefaultDimension  == 0
                   && agreementHeader.IsDeleted         == 0
            join DefaultDimension from agreementHeaderExt
                where agreementHeaderExt.agreementHeader  == agreementHeader.RecId
                   && agreementHeaderExt.DefaultDimension != 0;

            update_recordSet agreementLine setting DefaultDimension = agreementHeaderExt.DefaultDimension, IsModified = NoYes::Yes
                where agreementLine.DefaultDimension    == 0
                   && agreementLine.IsDeleted           == 0
            join DefaultDimension from agreementHeaderExt
                where agreementHeaderExt.agreementHeader  == agreementLine.Agreement
                   && agreementHeaderExt.DefaultDimension != 0;

            ttscommit;

            info("@SYS80122");
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>AgreementDimensionSync_RU</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>AgreementDimensionSync_RU</c> class.
    /// </returns>
    public static AgreementDimensionSync_RU construct()
    {
        return new AgreementDimensionSync_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the description of the update dimensions task.
    /// </summary>
    /// <returns>
    /// Update dimensions task description.
    /// </returns>
    static ClassDescription description()
    {
        return "@SYS4003475";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        AgreementDimensionSync_RU agreementDimensionSync = AgreementDimensionSync_RU::construct();

        if (agreementDimensionSync.prompt())
        {
            agreementDimensionSync.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>