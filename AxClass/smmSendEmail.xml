<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmSendEmail</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Supports sending email
/// </summary>
class smmSendEmail
{
    private SysMailerMessageBuilder MessageBuilder = new SysMailerMessageBuilder();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmMessageBuilder</Name>
				<Source><![CDATA[
    public SysMailerMessageBuilder parmMessageBuilder(SysMailerMessageBuilder _messageBuilder = MessageBuilder)
    {
        if (!prmIsDefault(_messageBuilder))
        {
            MessageBuilder = _messageBuilder;
        }

        return MessageBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEmailRecipientsGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add an group of recipients for <c>smmEMailGroupId</c>.
    /// </summary>
    /// <param name = "smmEMailGroupId"><c>smmEMailGroupId</c> to add email addresses from.</param>
    public void addEmailRecipientsGroup(smmEMailGroupId smmEMailGroupId)
    {
        if (!smmEMailGroupId)
        {
            return;
        }

        smmEmailMembers smmEmailMembers;
        while select smmEmailMembers
            where smmEmailMembers.GroupId == smmEMailGroupId
        {
            Email email = smmEmailMembers.showEMail();

            if (email)
            {
                switch (smmEmailMembers.eMailToCopyOrBlindCopy)
                {
                    case smmEMailToCopyOrBlindCopy::CC:
                        MessageBuilder.addCc(email);
                        break;

                    case smmEMailToCopyOrBlindCopy::BCC:
                        MessageBuilder.addBcc(email);
                        break;

                    case smmEMailToCopyOrBlindCopy::To:
                        MessageBuilder.addTo(email);
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>send</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sends the email.
    /// </summary>
    public void send()
    {
        SysMailerFactory::sendInteractive(MessageBuilder.getMessage());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSmmEncyclopediaItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the <c>smmSendEmail</c> instance with information from a <c>smmEncyclopediaItems</c> record.
    /// </summary>
    /// <param name = "_smmEncyclopediaItem">A <c>smmEncyclopediaItems</c> record.</param>
    public void initFromSmmEncyclopediaItems(smmEncyclopediaItems _smmEncyclopediaItem)
    {
        MessageBuilder.setSubject(_smmEncyclopediaItem.Subject);

        if (_smmEncyclopediaItem.Type == smmEncyclopediaItemType::File)
        {
            this.addFileAttachement(_smmEncyclopediaItem);
            MessageBuilder.setBody(_smmEncyclopediaItem.Memo);
        }
        else if (_smmEncyclopediaItem.Type == smmEncyclopediaItemType::Link)
        {
            MessageBuilder.setBody(strFmt("%1\n\n%2", _smmEncyclopediaItem.ItemURL, _smmEncyclopediaItem.Memo));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        smmSendEmail sendMail = new smmSendEmail();

        // Get some context info and show the form.
        Common context = _args.record();

        switch (context.TableId)
        {
            case tableNum(smmEncyclopediaItems):
                sendMail.initFromSmmEncyclopediaItems(context);
                break;
        }

        sendMail.send();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFileAttachement</Name>
				<Source><![CDATA[
    private void addFileAttachement(smmEncyclopediaItems _smmEncyclopediaItem)
    {
        DocuRef fileDocuRef = DocuRef::findTableIdRecId(_smmEncyclopediaItem.DataAreaId, _smmEncyclopediaItem.TableId, _smmEncyclopediaItem.RecId);
        MessageBuilder.addAttachment(DocumentManagement::getAttachmentStream(fileDocuRef), strFmt('%1.%2', fileDocuRef.Name, fileDocuRef.fileExtension()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>