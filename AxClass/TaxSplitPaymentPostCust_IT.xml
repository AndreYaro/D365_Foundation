<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSplitPaymentPostCust_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxSplitPaymentPostCust_IT</c> class is used to create tax, ledger and customer transactions
/// while posting sales invoices, in case these invoices include split payment taxes.
/// </summary>
class TaxSplitPaymentPostCust_IT extends TaxSplitPaymentPost_IT
{
    CustInvoiceJour custInvoiceJour;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createReverseCustTrans</Name>
				<Source><![CDATA[
    protected void createReverseCustTrans(TaxRegulationAmountCur _sumTaxAmountCur)
    {
        CustVoucher custVoucher;
        CustTrans custTrans;

        custVoucher = CustVendVoucher::construct(SysModule::Cust,
            custInvoiceJour.InvoiceAccount,
            _sumTaxAmountCur,
            custInvoiceJour.CurrencyCode,
            LedgerTransTxt::CustCreditNoteCust,
            custInvoiceJour.DefaultDimension,
            custInvoiceJour.PostingProfile,
            LedgerPostingType::CustBalance,
            custInvoiceJour.Payment);

        custVoucher.setInvoiceJournal(custInvoiceJour);
        custVoucher.parmFormLetter(custInvoiceJour.InvoiceId);
        custVoucher.setTransRef(custInvoiceJour.InvoiceAmount > 0 ? CustTransRefType::CreditNote : CustTransRefType::Invoice, custInvoiceJour.InvoiceId);
        custVoucher.parmExchRate(custInvoiceJour.ExchRate);
        custVoucher.parmExchRateSecondary(custInvoiceJour.ExchRateSecondary);
        custVoucher.parmInvoiceId(custInvoiceJour.InvoiceId);
        custVoucher.parmCancelledPayment(isCorrection);
        custVoucher.parmTransTxt(transactionTxt.txt());
        custVoucher.parmIsCalledFromSplitPayment_IT(true);
        // Italy localization rule: split payment line's due date is the transaction invoice date.
        custVoucher.parmDueDate(custInvoiceJour.InvoiceDate);
        custVoucher.post(ledgerVoucher, custTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
        super();
        custInvoiceJour = invoiceJour;
        transactionTxt.setType(custInvoiceJour.InvoiceAmount > 0 ? LedgerTransTxt::CustInvoiceLedger : LedgerTransTxt::CustCreditNoteLedger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerTransType</Name>
				<Source><![CDATA[
    protected LedgerTransType ledgerTransType()
    {
        return LedgerTransType::Cust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sysModule</Name>
				<Source><![CDATA[
    protected SysModule sysModule()
    {
        return SysModule::Cust;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>