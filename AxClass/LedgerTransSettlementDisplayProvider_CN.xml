<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTransSettlementDisplayProvider_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Provides display support for LedgerTransSettlement form.
/// </summary>
[ExportMetadataAttribute("LedgerITransSettlementDisplayProvider", "DefaultProvider"),ExportAttribute("Dynamics.AX.Application.LedgerITransSettlementDisplayProvider")]
class LedgerTransSettlementDisplayProvider_CN implements LedgerITransSettlementDisplayProvider
{
    private LedgerShowDebCRedController_CN showDRsCRsController;
    private LedgerShowDebCRedController_CN showDRsCRsControllerTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialized display provider for CN.
    /// </summary>
    /// <param name = "_formRun">The LedgerTransSettlement form.</param>
    public void init(xFormRun _formRun)
    {
        if (LedgerShowDebCRedController_CN::isShowDRsCRsFeatureEnabled())
        {
            showDRsCRsController = LedgerShowDebCredController_CN::construct(tableNum(GeneralJournalAccountEntry));
            showDRsCRsControllerTmp = LedgerShowDebCredController_CN::construct(tableNum(GeneralJournalAccountEntry));
        }
        else
        {
            this.hideNegativeDRCRController_CN(_formRun);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForGeneralJournalAccountEntryDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Intialize form helper based on <c>GeneralJournalAccountEntry</c> datasource.
    /// </summary>
    /// <param name = "_ledgerTrans_AmountCur"><c>LedgerTrans</c> transaction currency amount.</param>
    /// <param name = "_ledgerTrans_AmountMST"><c>LedgerTrans</c> accounting currency amount.</param>
    /// <param name = "_generalJournalLine_AmountCurCredit"><c>GeneralJournalAccountEntry</c> transaction currency credit amount</param>
    /// <param name = "_generalJournalLine_AmountMstCredit"><c>GeneralJournalAccountEntry</c> accounting currency credit amount.</param>
    /// <param name = "_generalJournalLine_AmountCurDebit"><c>GeneralJournalAccountEntry</c> transaction currency debit amount.</param>
    /// <param name = "_generalJournalLine_AmountMstDebit"><c>GeneralJournalAccountEntry</c> accounting currency debit amount.</param>
    public void initForGeneralJournalAccountEntryDataSource(FormRealControl _ledgerTrans_AmountCur,
                                                            FormRealControl _ledgerTrans_AmountMST,
                                                            FormRealControl _generalJournalLine_AmountCurCredit,
                                                            FormRealControl _generalJournalLine_AmountMstCredit,
                                                            FormRealControl _generalJournalLine_AmountCurDebit,
                                                            FormRealControl _generalJournalLine_AmountMstDebit)
    {
        if (showDRsCRsController)
        {
            showDRsCRsController.addAmountControl(_ledgerTrans_AmountCur);
            showDRsCRsController.addAmountControl(_ledgerTrans_AmountMST);
            showDRsCRsController.addAmountCreditControl(_generalJournalLine_AmountCurCredit);
            showDRsCRsController.addAmountCreditControl(_generalJournalLine_AmountMstCredit);
            showDRsCRsController.addAmountDebitControl(_generalJournalLine_AmountCurDebit);
            showDRsCRsController.addAmountDebitControl(_generalJournalLine_AmountMstDebit);

            showDRsCRsController.initControls();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForTmpGeneralJournalAccountEntryDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Intialize form helper based on tmp<c>GeneralJournalAccountEntry</c> datasource.
    /// </summary>
    /// <param name = "_ledgerTrans_AmountCur"><c>LedgerTrans</c> transaction currency amount.</param>
    /// <param name = "_ledgerTrans_AmountMST"><c>LedgerTrans</c> accounting currency amount.</param>
    /// <param name = "_generalJournalLine_AmountCurCredit"><c>GeneralJournalAccountEntry</c> transaction currency credit amount.</param>
    /// <param name = "_generalJournalLine_AmountMstCredit"><c>GeneralJournalAccountEntry</c> accounting currency credit amount.</param>
    /// <param name = "_generalJournalLine_AmountCurDebit"><c>GeneralJournalAccountEntry</c> transaction currency debit amount.</param>
    /// <param name = "_generalJournalLine_AmountMstDebit"><c>GeneralJournalAccountEntry</c> accounting currency debit amount.</param>
    public void initForTmpGeneralJournalAccountEntryDataSource(FormRealControl _tmpLedgerTrans_AmountCur,
                                                                FormRealControl _tmpLedgerTrans_AmountMST,
                                                                FormRealControl _tmpGeneralJournalLine_AmountCurCredit,
                                                                FormRealControl _tmpGeneralJournalLine_AmountMstCredit,
                                                                FormRealControl _tmpGeneralJournalLine_AmountCurDebit,
                                                                FormRealControl _tmpGeneralJournalLine_AmountMstDebit)
    {
        if (showDRsCRsControllerTmp)
        {
            showDRsCRsControllerTmp.addAmountControl(_tmpLedgerTrans_AmountCur);
            showDRsCRsControllerTmp.addAmountControl(_tmpLedgerTrans_AmountMST);
            showDRsCRsControllerTmp.addAmountCreditControl(_tmpGeneralJournalLine_AmountCurCredit);
            showDRsCRsControllerTmp.addAmountCreditControl(_tmpGeneralJournalLine_AmountMstCredit);
            showDRsCRsControllerTmp.addAmountDebitControl(_tmpGeneralJournalLine_AmountCurDebit);
            showDRsCRsControllerTmp.addAmountDebitControl(_tmpGeneralJournalLine_AmountMstDebit);

            showDRsCRsControllerTmp.initControls();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set display options based on record buffer.
    /// </summary>
    /// <param name = "_record">The record buffer.</param>
    /// <param name = "_options">The display options.</param>
    public void displayOption(Common _record, FormRowDisplayOption _options)
    {
        if (showDRsCRsController && LedgerShowDebCRedController_CN::isNegativeAmountsInRedFeatureEnabled())
        {
            showDRsCRsController.showNegativeAmountsInRed(_record, _options);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOptionTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set display options based on tmp record buffer.
    /// </summary>
    /// <param name = "_record">The record buffer.</param>
    /// <param name = "_options">The display options.</param>
    public void displayOptionTmp(Common _record, FormRowDisplayOption _options)
    {
        if (showDRsCRsControllerTmp && LedgerShowDebCRedController_CN::isNegativeAmountsInRedFeatureEnabled())
        {
            showDRsCRsControllerTmp.showNegativeAmountsInRed(_record, _options);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hideNegativeDRCRController_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hide the controls on the LedgerTransSettlement form.
    /// </summary>
    /// <param name = "_formRun">The LedgerTransSettlement form.</param>
    private void hideNegativeDRCRController_CN(xFormRun _formRun)
    {
        _formRun.design().controlName('GeneralJournalLine_AmountCurCredit').visible(false);
        _formRun.design().controlName('GeneralJournalLine_AmountMstCredit').visible(false);
        _formRun.design().controlName('GeneralJournalLine_AmountCurDebit').visible(false);
        _formRun.design().controlName('GeneralJournalLine_AmountMstDebit').visible(false);
        _formRun.design().controlName('TmpGeneralJournalLine_AmountCurCredit').visible(false);
        _formRun.design().controlName('TmpGeneralJournalLine_AmountMstCredit').visible(false);
        _formRun.design().controlName('TmpGeneralJournalLine_AmountCurDebit').visible(false);
        _formRun.design().controlName('TmpGeneralJournalLine_AmountMstDebit').visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isShowDRsCRsFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check the parameter 'Show amount in debit/credit column' is enabled, and the country region code is CN.
    /// </summary>
    /// <returns>True if parameter is enabled, and country region code is CN.</returns>
    public boolean isShowDRsCRsFeatureEnabled()
    {
        #isoCountryRegionCodes

        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN, #isoJP])
               && LedgerParameters::find().ShowAmountDebitCredit_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountingCurrencyCreditAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Accounting Currency Credit Amount.
    /// </summary>
    /// <param name = "_record">The record buffer.</param>
    /// <returns>Accounting Currency Credit Amount.</returns>
    public AmountCur accountingCurrencyCreditAmount(Common _record)
    {
        return LedgerShowDebCredRecord_CN::constructFromRecord(_record).accountingCurrencyCreditAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountingCurrencyDebitAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Accounting Currency Debit Amount.
    /// </summary>
    /// <param name = "_record">The record buffer.</param>
    /// <returns>Accounting Currency Debit Amount.</returns>
    public AmountCur accountingCurrencyDebitAmount(Common _record)
    {
        return LedgerShowDebCredRecord_CN::constructFromRecord(_record).accountingCurrencyDebitAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionCurrencyCreditAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transasction Currency Credit Amount.
    /// </summary>
    /// <param name = "_record">The record buffer.</param>
    /// <returns>Transasction Currency Credit Amount.</returns>
    public AmountCur transactionCurrencyCreditAmount(Common _record)
    {
        return LedgerShowDebCredRecord_CN::constructFromRecord(_record).transactionCurrencyCreditAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionCurrencyDebitAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transasction Currency Debit Amount.
    /// </summary>
    /// <param name = "_record">The record buffer.</param>
    /// <returns>Transasction Currency Debit Amount.</returns>
    public AmountCur transactionCurrencyDebitAmount(Common _record)
    {
        return LedgerShowDebCredRecord_CN::constructFromRecord(_record).transactionCurrencyDebitAmount();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>