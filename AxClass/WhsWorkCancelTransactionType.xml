<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWorkCancelTransactionType</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WhsWorkCancelTransactionType</c> class handles logic specific to the canceled work transaction type.
/// </summary>
[WhsWorkTransTypeStrategyFactory(WHSWorkTransType::WorkCancel)]
class WhsWorkCancelTransactionType extends WhsWorkTransactionType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>locationDirectiveQueryName</Name>
				<Source><![CDATA[
    public QueryName locationDirectiveQueryName(WHSLocDirTable _whsLocDirTable)
    {
        return queryStr(WHSInventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLocationDirectiveQuery</Name>
				<Source><![CDATA[
    public void buildLocationDirectiveQuery(WhsLocationDirectiveTableQueryParameters _parameters)
    {
        this.addRangeToLocationDirectiveQuery(_parameters.query, _parameters.inventTransId, _parameters.locationDirective);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRangeToLocationDirectiveQuery</Name>
				<Source><![CDATA[
    public void addRangeToLocationDirectiveQuery(
                    Query                _query,
                    InventTransId        _inventTransId,
                    WhsLocationDirective _locationDirective)
    {
        ItemId itemId = _locationDirective.parmItemId();
        if (itemId)
        {
            SysQuery::findOrCreateRange(_query.dataSourceTable(tableNum(InventTable)), fieldNum(InventTable, ItemId)).value(queryValue(itemId));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>