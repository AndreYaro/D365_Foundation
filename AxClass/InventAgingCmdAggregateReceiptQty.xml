<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAgingCmdAggregateReceiptQty</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventAgingCmdAggregateReceiptQty</c> class is a command that aggregates receipts on the report lines.
/// </summary>
class InventAgingCmdAggregateReceiptQty implements InventAgingICommand
{
    InventAgingCmdMapQuery              inventAgingCmdMapQueryReceipt;
    InventAgingContract                 contract;
    InventAgingReportLines              inventAgingReportLines;
    TransDate                           period1StartDate, period2StartDate, period3StartDate, period4StartDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Aggregates the receipts on the report line.
    /// </summary>
    public void execute()
    {
        InventQty qty = inventAgingCmdMapQueryReceipt.parmQty();

        if (qty)
        {
            InventAgingTmp inventAging = inventAgingReportLines.findOrCreate(inventAgingCmdMapQueryReceipt.parmItemGroupId(),
                                                                             inventAgingCmdMapQueryReceipt.parmItemId(),
                                                                             inventAgingCmdMapQueryReceipt.parmItemName(),
                                                                             inventAgingCmdMapQueryReceipt.parmUnit(),
                                                                             inventAgingCmdMapQueryReceipt.parmInventDim());

            TransDate transDate = inventAgingCmdMapQueryReceipt.parmTransDate();
            if (transDate >= period1StartDate)
            {
                inventAging.QtyofAgingPeriod1 += qty;
            }
            else if (transDate >= period2StartDate)
            {
                inventAging.QtyofAgingPeriod2 += qty;
            }
            else if (transDate >= period3StartDate)
            {
                inventAging.QtyofAgingPeriod3 += qty;
            }
            else if (transDate >= period4StartDate)
            {
                inventAging.QtyofAgingPeriod4 += qty;
            }
            inventAgingReportLines.insert(inventAging);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance of the <c>InventAgingCmdAggregateReceiptQty</c> class.
    /// </summary>
    /// <param name="_inventAgingCmdMapQueryReceipt">
    /// The instance of the <c>InventAgingCmdMapQueryReceipt</c> class that maps the query result.
    /// </param>
    /// <param name="_contract">
    /// The instance of the <c>InventAgingContract</c> class which defines how the result is aggregated.
    /// </param>
    /// <param name="_inventAgingReportLines">
    /// The instance of the <c>InventAgingReportLines</c> class used to aggregate the result.
    /// </param>
    protected void initialize(
        InventAgingCmdMapQuery                  _inventAgingCmdMapQueryReceipt,
        InventAgingContract                     _contract,
        InventAgingReportLines                  _inventAgingReportLines)
    {
        inventAgingCmdMapQueryReceipt = _inventAgingCmdMapQueryReceipt;
        contract = _contract;
        inventAgingReportLines = _inventAgingReportLines;

        period1StartDate = contract.getPeriodOne();
        period2StartDate = contract.getPeriodTwo();
        period3StartDate = contract.getPeriodThree();
        period4StartDate = contract.getPeriodFour();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        protected static InventAgingCmdAggregateReceiptQty construct()
    {
        return new InventAgingCmdAggregateReceiptQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>InventAgingCmdAggregateReceiptQty</c> class.
    /// </summary>
    /// <param name="_inventAgingCmdMapQueryReceipt">
    /// The instance of the <c>InventAgingCmdMapQueryReceipt</c> class that maps the query result.
    /// </param>
    /// <param name="_contract">
    /// The instance of the <c>InventAgingContract</c> class which defines how the result is aggregated.
    /// </param>
    /// <param name="_inventAgingReportLines">
    /// The instance of the <c>InventAgingReportLines</c> class used to aggregate the result.
    /// </param>
    /// <returns>
    /// An instance of the <c>InventAgingCmdAggregateReceiptQty</c> class.
    /// </returns>
    public static InventAgingCmdAggregateReceiptQty newFromParameters(
        InventAgingCmdMapQuery                  _inventAgingCmdMapQueryReceipt,
        InventAgingContract                     _contract,
        InventAgingReportLines                  _inventAgingReportLines)
    {
        InventAgingCmdAggregateReceiptQty inventAgingCmdAggregateReceiptQty = InventAgingCmdAggregateReceiptQty::construct();

        inventAgingCmdAggregateReceiptQty.initialize(_inventAgingCmdMapQueryReceipt, _contract, _inventAgingReportLines);

        return inventAgingCmdAggregateReceiptQty;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
