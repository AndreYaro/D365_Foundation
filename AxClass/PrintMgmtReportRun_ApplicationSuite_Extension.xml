<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PrintMgmtReportRun_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PrintMgmtReportRun))]
final class PrintMgmtReportRun_ApplicationSuite_Extension
{
    private Common queryTableBuffer;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmQueryTableBuffer</Name>
				<Source><![CDATA[
    public Common parmQueryTableBuffer(Common _queryTableBuffer = queryTableBuffer)
    {
        queryTableBuffer = _queryTableBuffer;

        return queryTableBuffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    public static void execute(PrintMgmtReportRun _reportRun)
    {
        if (_reportRun.settingDetail().parmSSRS() == PrintMgmtSSRS::SSRS)
        {
            next execute(_reportRun);
        }
        else
        {
            PrintMgmtPrintSettingDetail settingDetail = _reportRun.settingDetail();
            PrintMgmtReportFormatName formatStrGUID = settingDetail.parmReportFormatName();

            if (ERPrintMgmtReportFormatSubscriber::isERFormat(formatStrGUID))
            {
                SrsReportRunController controller = _reportRun.parmReportRunController();
                ReportDestinationContract::setAsParmObjectFromParmEnum(controller, _reportRun.parmForcePrintJobSettings());

                Common queryTableBuffer = _reportRun.parmQueryTableBuffer();
                ERPrintMgmtRunERFormatContract contract = new ERPrintMgmtRunERFormatContract();
                contract.initContract(formatStrGUID, controller, null, settingDetail, queryTableBuffer);
                ERPrintMgmtDataProviderReport::runERFormat(contract);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>load</Name>
				<Source><![CDATA[
    public void load(Common _queryTableBuffer, Common _referencedTableBuffer, str _languageId, str _documentKeyValue)
    {
        this.parmQueryTableBuffer(_queryTableBuffer);

        next load(_queryTableBuffer, _referencedTableBuffer, _languageId, _documentKeyValue);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>