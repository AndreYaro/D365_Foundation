<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalFormController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventJournalFormController</c> class is controlling the interaction between merged header and lines inventory journal forms and the <c>JournalFormTable</c> class and the <c>JournalFormTrans</c> class.
/// </summary>
class InventJournalFormController extends JournalFormController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventJournalFormTrans</Name>
				<Source><![CDATA[
    public InventJournalFormTrans parmInventJournalFormTrans()
    {
        return journalFormTrans as InventJournalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventJournalFormTable</Name>
				<Source><![CDATA[
    public InventJournalFormTable parmInventJournalFormTable()
    {
        return journalFormTable as InventJournalFormTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlReports_RU</Name>
				<Source><![CDATA[
    public void parmCtrlReports_RU(FormMenuButtonControl _ctrlReports)
    {
        this.parmInventJournalFormTable().parmCtrlReports_RU(_ctrlReports);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlInventReserve</Name>
				<Source><![CDATA[
    public void parmCtrlInventReserve(FormFunctionButtonControl _inventReserve)
    {
        this.parmInventJournalFormTrans().parmCtrlInventReserve(_inventReserve);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlInventMarking</Name>
				<Source><![CDATA[
    public void parmCtrlInventMarking(FormFunctionButtonControl _inventMarking)
    {
        this.parmInventJournalFormTrans().parmCtrlInventMarking(_inventMarking);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlInventTransRegister</Name>
				<Source><![CDATA[
    public void parmCtrlInventTransRegister(FormFunctionButtonControl _inventTransRegister)
    {
        this.parmInventJournalFormTrans().parmCtrlInventTransRegister(_inventTransRegister);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlInventTransPick</Name>
				<Source><![CDATA[
    public void parmCtrlInventTransPick(FormFunctionButtonControl _inventTransPick)
    {
        this.parmInventJournalFormTrans().parmCtrlInventTransPick(_inventTransPick);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlCopyJournal</Name>
				<Source><![CDATA[
    public void parmCtrlCopyJournal(FormFunctionButtonControl _copyJournal)
    {
        this.parmInventJournalFormTable().parmCtrlCopyJournal(_copyJournal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlDeleteLines</Name>
				<Source><![CDATA[
    public void parmCtrlDeleteLines(FormFunctionButtonControl _deleteLines)
    {
        // "Delete lines" control might need to be controlled on header level in the merged forms.
        // Some unmerged line forms still have it, too.
        this.parmInventJournalFormTrans().parmCtrlDeleteLines(_deleteLines);
        this.parmInventJournalFormTable().parmCtrlDeleteLines(_deleteLines);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>TransDate</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void transDate_OnModified(FormDataObject _sender)
    {
        _sender.modified();
        this.parmInventJournalFormTrans().fieldModifiedTransDatePost();
        this.fieldModified(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableDataSourceEvent_OnInitValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form event raised on initValue() from the header datasource.
    /// </summary>
    /// <param name = "sender">The datasource.</param>
    /// <param name = "e">The event arguments.</param>
    public void tableDataSourceEvent_OnInitValue(FormDataSource sender, FormDataSourceEventArgs e)
    {
        this.parmInventJournalFormTable().datasourceInitValuePre();
        super(sender, e);
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerEventHandlers</Name>
				<Source><![CDATA[
    protected void registerEventHandlers()
    {
        super();
        this.registerEventHandlersOnInventDimDataSource();

        this.registerEventHandlersOnControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerEventHandlersOnControls</Name>
				<Source><![CDATA[
    protected void registerEventHandlersOnControls()
    {
        FormMenuButtonControl ctrlReports = this.parmInventJournalFormTable().parmCtrlReports_RU();
        if (ctrlReports)
        {
            ctrlReports.OnGotFocus += eventhandler(this.parmInventJournalFormTable().setPrintMenu);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerEventHandlersOnTransDataSource</Name>
				<Source><![CDATA[
    protected void registerEventHandlersOnTransDataSource()
    {
        super();

        FormDataSource dataSource = journalFormTrans.journalTrans_DS();
        dataSource.object(fieldNum(InventJournalTrans, TransDate)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController, transDate_OnModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventDimInitPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked after super() in the <c>InventDim</c> datasource's init() method.
    /// </summary>
    /// <param name = "_inventDim">The <c>InventDim</c> record.</param>
    public void InventDimInitPost(InventDim _inventDim)
    {
        this.parmInventJournalFormTrans().inventDimInitPost(_inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerEventHandlersOnInventDimDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Register event handlers on the <c>InventDim</c> datasource.
    /// </summary>
    protected void registerEventHandlersOnInventDimDataSource()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimParmInitPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked after super() in the <c>InventDimParm</c> datasource's init() method.
    /// </summary>
    /// <param name = "_inventDimParm">The <c>InventDimParm</c> record.</param>
    public void inventDimParmInitPost(InventDimParm _inventDimParm)
    {
        this.parmInventJournalFormTable().inventDimParmInitPost(_inventDimParm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromJournalForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>InventJournalFormController</c> class.
    /// </summary>
    /// <param name = "_journalFormTable">The <c>JournalFormTable</c> instance used by this merged journal form.</param>
    /// <param name = "_journalFormTrans">The <c>JournalFormTrans</c> instance used by this merged journal form.</param>
    /// <returns>A new instance of the <c>InventJournalFormController</c> class.</returns>
    public static InventJournalFormController newFromJournalForms(
        InventJournalFormTable _journalFormTable,
        InventJournalFormTrans _journalFormTrans)
    {
        var controller = new InventJournalFormController();

        controller.journalFormTable = _journalFormTable;
        controller.journalFormTrans = _journalFormTrans;

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditAndCreateLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// If journal is in workflow process and in not editable status the line operations should be disabled.
    /// </summary>
    /// <returns>True if modification on line is allowed; otherwise false.</returns>
    public boolean allowEditAndCreateLines()
    {
        boolean ret = super();
        InventJournalTable  inventJournalTable = this.parmInventJournalFormTable().journalTable() as InventJournalTable;
        if (inventJournalTable.isWorkflowUsed())
        {
            ret = ret && inventJournalTable.editableInWorkflow();
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>