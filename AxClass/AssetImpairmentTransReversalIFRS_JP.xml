<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetImpairmentTransReversalIFRS_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The derived classe of <c>AssetImpairmentTransReversalBase_JP</c> specific for fixed asset depreciation book transactions.
/// </summary>
public class AssetImpairmentTransReversalIFRS_JP extends AssetImpairmentTransReversalBase_JP
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateReversalAmount</Name>
				<Source><![CDATA[
        public AssetAmount calculateReversalAmount()
    {
        AssetImpairmentAdjustment_JP         originalAmount;
        AssetRecoverableAmount_JP            origRecoverableAmount, latestRecoverableAmount;
        AssetImpairmentTestResultDocEntry_JP resultLine;

        originalAmount = this.originalImpairmentAdjustment();
        resultLine = AssetImpairmentTestResultDocEntry_JP::findByAssetDocumentEntry(docEntry.RecId);

        origRecoverableAmount = this.origRecoverableAmount();
        latestRecoverableAmount = this.latestRecoverableAmount();

        if (origRecoverableAmount      == 0
            || originalAmount          == 0
            || latestRecoverableAmount == 0)
        {
            return 0;
        }
        else
        {
            if (latestRecoverableAmount <= origRecoverableAmount)
            {
                return 0;
            }
            else
            {
                if (-1 * originalAmount > latestRecoverableAmount - origRecoverableAmount)
                {
                    return latestRecoverableAmount - origRecoverableAmount;
                }
                else
                {
                    return -1 * originalAmount;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkReversal</Name>
				<Source><![CDATA[
        public boolean checkReversal()
    {
        AssetImpairmentAdjustment_JP         originalAmount;
        AssetRecoverableAmount_JP            origRecoverableAmount, latestRecoverableAmount;
        AssetImpairmentTestResultDocEntry_JP resultLine;

        originalAmount = this.originalImpairmentAdjustment();
        resultLine = AssetImpairmentTestResultDocEntry_JP::findByAssetDocumentEntry(docEntry.RecId);

        origRecoverableAmount = this.origRecoverableAmount();
        latestRecoverableAmount = this.latestRecoverableAmount();

        if (origRecoverableAmount      == 0
            || originalAmount          == 0
            || latestRecoverableAmount == 0)
        {
            return false;
        }
        else
        {
            if (latestRecoverableAmount <= origRecoverableAmount)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new(AssetDocument_JP      _document, AssetAmount _amount = 0)
    {
        super(_document);
        this.originalImpairmentAdjustment(_amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructAssetTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a <c>AssetImpairmentTransReversalIFRS_JP</c> instance.
    /// </summary>
    /// <param name="_document">
    /// The <c>AssetDocument_JP</c> instance.
    /// </param>
    /// <param name="_assetTrans">
    /// The <c>AssetTrans</c> record.
    /// </param>
    /// <returns>
    /// An instance of <c>AssetImpairmentTransReversalIFRS_JP</c>
    /// </returns>
    public static AssetImpairmentTransReversalIFRS_JP constructAssetTrans(AssetDocument_JP _document, AssetTrans _assetTrans)
    {
        AssetImpairmentTransReversalIFRS_JP transReversal = new AssetImpairmentTransReversalIFRS_JP(_document, _assetTrans.AmountMST);
        return transReversal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>