<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyUpdateStatus_PurchLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InterCompanyUpdateStatus_PurchLine extends InterCompanyUpdateStatus
{
    PurchLine   purchLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    void parmBuffer(Common _buffer)
    {
        super(_buffer);
        purchLine = _buffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeExternal</Name>
				<Source><![CDATA[
    void synchronizeExternal()
    {
        SalesLine   salesLine;
        if (purchLine.InterCompanyInventTransId)
        {
            changecompany(purchLine.purchTable().InterCompanyCompanyId)
            {
                setprefix(strfmt("@SYS93821",TradeInterCompany::curCompanyName()));

                salesLine             = SalesLine::findInventTransId(purchLine.InterCompanyInventTransId,true);
                salesLine.SalesStatus = this.purchStatus2SalesStatus(purchLine.PurchStatus);

                setprefix(#PreFixField(SalesLine, SalesId));

                if (this.salesLineValidateWrite(salesLine))
                {
                    InterCompanyUpdateStatus::synchronize(salesLine,InterCompanySkipUpdate::InterCompany);
                    salesLine.doUpdate();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeInternal</Name>
				<Source><![CDATA[
    void synchronizeInternal()
    {
        SalesLine   salesLine;
        if (purchLine.InterCompanyInventTransId
        &&  purchLine.ItemRefType == InventRefType::Sales
        &&  purchLine.InventRefTransId)
        {
            salesLine             = SalesLine::findInventTransId(purchLine.InventRefTransId,true);
            salesLine.SalesStatus = this.purchStatus2SalesStatus(purchLine.PurchStatus);

            setprefix(#PreFixField(SalesLine, SalesId));

            if (this.salesLineValidateWrite(salesLine,true))
            {
                InterCompanyUpdateStatus::synchronize(salesLine,InterCompanySkipUpdate::Internal);
                salesLine.doUpdate();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>