<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPeggingTreeNodeKanbanJobIssue</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>ReqPeggingTreeNodeKanbanJobIssue</c> class represents an issued kanban job node in the
///    pegging tree.
/// </summary>
public class ReqPeggingTreeNodeKanbanJobIssue extends ReqPeggingTreeNode
{
    KanbanJobIssue  kanbanJobIssue;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the textual description of the node.
    /// </summary>
    /// <returns>
    /// A string containing the description text of the node.
    /// </returns>
    public str description()
    {
        return strFmt("@SYS324492", KanbanJob::find(kanbanJobIssue.KanbanJob).itemId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>eventType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the event type for the current tree node.
    /// </summary>
    /// <returns>
    /// A <c>LeanPeggedEventType</c> instance.
    /// </returns>
    public LeanPeggedEventType eventType()
    {
        return LeanPeggedEventType::KanbanLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>ReqPeggingTreeDetails</c> instance with data.
    /// </summary>
    /// <param name="_details">
    /// The object that holds the details.
    /// </param>
    public void initializeDetails(ReqPeggingTreeDetails _details)
    {
        _details.initFromKanbanJobIssue(kanbanJobIssue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>listChildren</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the list of children record buffers (kanbans).
    /// </summary>
    /// <returns>
    /// A list containing the kanbans that supply the kanban job issue of the node.
    /// </returns>
    public List listChildren()
    {
        List      list;
        container cachedResult = reqPeggingListCache.find(classStr(ReqPeggingTreeNodeKanbanJobIssue), [kanbanJobIssue.SourceDocumentLine]);

        if (cachedResult != conNull())
        {
            return List::create(cachedResult);
        }

        list = ReqPeggingTreeNode::peggedKanbans(kanbanJobIssue.SourceDocumentLine);
        cachedResult = list.pack();
        reqPeggingListCache.insert(classStr(ReqPeggingTreeNodeKanbanJobIssue), [kanbanJobIssue.SourceDocumentLine], cachedResult);
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the kanban record buffer of the parent node.
    /// </summary>
    /// <returns>
    /// A <c>Kanban</c> record buffer.
    /// </returns>
    public Common parent()
    {
        Kanban      kanban;
        KanbanJob   kanbanJob;

        select firstonly kanban
            exists join kanbanJob
                where kanbanJob.Kanban == kanban.RecId
                   && kanbanJob.RecId  == kanbanJobIssue.KanbanJob;

        return kanban;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmKanbanJobIssue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public KanbanJobIssue parmKanbanJobIssue(KanbanJobIssue _kanbanJobIssue = kanbanJobIssue)
    {
        kanbanJobIssue = _kanbanJobIssue;

        return kanbanJobIssue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static ReqPeggingTreeNodeKanbanJobIssue construct()
    {
        return new ReqPeggingTreeNodeKanbanJobIssue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the class.
    /// </summary>
    /// <param name="_kanbanJobIssue">
    /// The <c>KanbanJobIssue</c> record buffer represented by the node.
    /// </param>
    /// <returns>
    /// A new instance of the class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReqPeggingTreeNodeKanbanJobIssue newStandard(KanbanJobIssue _kanbanJobIssue)
    {
        ReqPeggingTreeNodeKanbanJobIssue    reqPeggingTreeNodeKanbanJobIssue = ReqPeggingTreeNodeKanbanJobIssue::construct();

        reqPeggingTreeNodeKanbanJobIssue.parmKanbanJobIssue(_kanbanJobIssue);

        return reqPeggingTreeNodeKanbanJobIssue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>