<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ExciseInvoicePurchReturnController_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ExciseInvoicePurchReturnController_IN</c> class is the helper class for the associated SRS Report.
/// </summary>
public class ExciseInvoicePurchReturnController_IN extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getReportName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and set the report name.
    /// </summary>
    /// <param name="_reportName">
    /// Report name.
    /// </param>
    /// <returns>
    /// Returns the report name.
    /// </returns>
    public SRSCatalogItemName getReportName(SRSCatalogItemName _reportName = reportName)
    {
        reportName = _reportName;
        return reportName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>printReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns parameter values and runs the SRS report.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object.
    /// </param>
    public void printReport(Args _args)
    {
        VendInvoiceJour                      vendInvoiceJour;
        ExciseInvoicePurchReturnContract_IN  exciseInvoicePurchReturnContract;
        RecordSortedList                     journalList;
        VendInvoiceTrans                     vendInvoiceTrans;

        journalList = _args.object();
        if (_args.record())
        {
            vendInvoiceJour = _args.record();
        }
        else
        {
            if (journalList)
            {
                journalList.first(vendInvoiceJour);
                _args.record(vendInvoiceJour);
            }
        }
        select ExciseType_IN from vendInvoiceTrans
            where vendInvoiceTrans.PurchID == vendInvoiceJour.PurchId;

        if (vendInvoiceTrans.ExciseType_IN == ExciseType_IN::Manufacturer)
        {
            this.getReportName(ssrsReportStr(ExciseInvoicePurchReturn_IN, ManufacturerReport));
        }
        this.parmArgs(_args);
        exciseInvoicePurchReturnContract = this.parmReportContract().parmRdpContract();
        exciseInvoicePurchReturnContract.parmVendInvoiceJourRecdId(vendInvoiceJour.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>contruct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the controller class.
    /// </summary>
    /// <returns>
    /// Returns the object of controller class.
    /// </returns>
    public static ExciseInvoicePurchReturnController_IN contruct()
    {
        return new ExciseInvoicePurchReturnController_IN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initailzes the controller, assigns parameter values and runs the SRS report.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object.
    /// </param>
    public static void main(Args _args)
    {
        ExciseInvoicePurchReturnController_IN formLetterController = new ExciseInvoicePurchReturnController_IN();

        formLetterController.printReport(_args);
        formLetterController.parmReportName(formLetterController.getReportName());
        formLetterController.parmShowDialog(false);
        formLetterController.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>