<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustTransDueDateCashDiscountMassDataUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Performs a mass data update in batch for the CashDiscBaseDate and PaymTermId fields on the CustTrans table,
/// populating them with data queried from underlying documents.
/// </summary>
public class CustTransDueDateCashDiscountMassDataUpdate extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        CustTransDueDateCashDiscountMassDataUpdate controller = new CustTransDueDateCashDiscountMassDataUpdate(
            classStr(CustTransDueDateCashDiscountMassDataUpdate),
            methodStr(CustTransDueDateCashDiscountMassDataUpdate, updateCustTransCashDiscountFields),
            SysOperationExecutionMode::ScheduledBatch);

        controller.batchInfo().parmBatchExecute(NoYes::Yes);
        controller.parmDialogCaption("@AccountsReceivable:CustVendTransDueDateCashDiscountActivationHeader");
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateForm</Name>
				<Source><![CDATA[
    public FormName templateForm()
    {
        return formStr(CustVendTransDueDateCashDiscountActivation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCustTransCashDiscountFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates cash discount fields for all CustTrans records.
    /// </summary>
    public void updateCustTransCashDiscountFields()
    {
        CustTrans custTrans;
        CustTransDueDateCashDiscountUpdateView updateView;

        custTrans.skipAosValidation(true);
        custTrans.skipDataMethods(true);
        custTrans.skipEvents(true);
        custTrans.skipDeleteActions(true);

        update_recordset custTrans
            setting CashDiscBaseDate = updateView.CustTransBaseDate,
                    PaymTermId = updateView.CustTransPayment
            join updateView
                where custTrans.RecId == updateView.CustTransRecId
                   && !custTrans.CashDiscBaseDate
                   && !custTrans.PaymTermId
                   && (updateView.CustTransPayment || updateView.CustTransBaseDate);
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>