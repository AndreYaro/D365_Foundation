<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchPurchaseOrderUpdateLinesParametersEntityHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchPurchaseOrderUpdateLinesParametersEntityHelper</c> class is a helper class for the <c>PurchPurchaseOrderUpdateLinesParametersEntity</c> data entity.
/// The helper exposes methods required for setting the datasource range values in the data entity.
/// It is also used for the data entity field validation.
/// </summary>
public class PurchPurchaseOrderUpdateLinesParametersEntityHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>tableNumPurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>PurchTable</c> table ID.
    /// </summary>
    /// <returns><c>PurchTable</c> table ID</returns>
    [QueryRangeFunctionAttribute()]
    public static str tableNumPurchTable()
    {
        return SysQueryRangeUtil::value(tableNum(PurchTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>includedFieldIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a list of field IDs that are valid purchase order update lines parameters.
    /// </summary>
    /// <returns>String representing a list of field IDs.</returns>
    [QueryRangeFunctionAttribute()]
    public static str includedFieldIds()
    {
        Set             validFieldIds   = PurchPurchaseOrderUpdateLinesParametersEntityHelper::getValidPurchaseOrderUpdateLinesParameterFieldIds();
        SetEnumerator   enumerator      = validFieldIds.getEnumerator();
        str             value;

        while (enumerator.moveNext())
        {
            value = queryRangeConcat(value, enumerator.current());
        }

        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldValidPurchaseOrderUpdateLinesParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the field is a valid purchase order update lines parameter.
    /// </summary>
    /// <param name = "_fieldName">Name of the field to be checked.</param>
    /// <returns>true if the field is a valid one; otherwise, false.</returns>
    public static boolean isFieldValidPurchaseOrderUpdateLinesParameter(FieldName _fieldName)
    {
        Set             purchaseTable2LineParameterFields  = PurchPurchaseOrderUpdateLinesParametersEntityHelper::getValidPurchaseOrderUpdateLinesParameterFieldIds();
        SqlDictionary   sqlDictionary;

        select fieldId from sqlDictionary
            where sqlDictionary.tabId   == tableNum(PurchTable)
                && sqlDictionary.name   == _fieldName;

        if (purchaseTable2LineParameterFields.in(sqlDictionary.fieldId))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidPurchaseOrderUpdateLinesParameterFieldIds</Name>
				<Source><![CDATA[
    private static Set getValidPurchaseOrderUpdateLinesParameterFieldIds()
    {
        Set         purchaseTable2LineParameterFields   = new Set(Types::Integer);
        container   header2LineFieldIds                 = PurchTable2LineParameters::header2LineFieldIdList();
        int         position                            = 1;
        FieldId     fieldId;

        while (position <= conlen(header2LineFieldIds))
        {
            fieldId = conpeek(header2LineFieldIds, position);

            if (PurchTable2LineParameters::fieldEnabled(fieldId))
            {
                purchaseTable2LineParameterFields.add(fieldId);
            }

            position++;
        }

        return purchaseTable2LineParameterFields;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>