<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimTrackingWarehouseTransactionNode</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class InventDimTrackingWarehouseTransactionNode extends InventDimTrackingNode
{
    private WHSInventoryTransactionView inventoryTransaction;
    private InventDimId inventDimId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromWHSInventoryTransactionView</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static InventDimTrackingWarehouseTransactionNode newFromWHSInventoryTransactionView(
        TreeItemIdx         _nodeIdx,
        WHSInventoryTransactionView _inventoryTransaction,
        Counter             _level,
        boolean             _expanded,
        TreeItemIdx         _parentNodeIdx,
        ForwardBackward     _forwardBackward,
        InventDimParm       _inventDimParm,
        boolean             _doDateChecking)
    {
        var inventDimTrackingWHSInventoryTransactionNode = InventDimTrackingWarehouseTransactionNode::construct();

        inventDimTrackingWHSInventoryTransactionNode.parmNodeIdx(_nodeIdx);
        inventDimTrackingWHSInventoryTransactionNode.parmInventoryTransaction(_inventoryTransaction);
        inventDimTrackingWHSInventoryTransactionNode.parmLevel(_level);
        inventDimTrackingWHSInventoryTransactionNode.parmStateExpanded(_expanded);
        inventDimTrackingWHSInventoryTransactionNode.parmParentNodeIdx(_parentNodeIdx);
        inventDimTrackingWHSInventoryTransactionNode.parmForwardBackward(_forwardBackward);
        inventDimTrackingWHSInventoryTransactionNode.parmInventDimParm(_inventDimParm);
        inventDimTrackingWHSInventoryTransactionNode.parmDoDateChecking(_doDateChecking);
        inventDimTrackingWHSInventoryTransactionNode.parmInventDimId(_inventoryTransaction.convertToInventDim(true).inventDimId);

        return inventDimTrackingWHSInventoryTransactionNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventoryTransaction</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSInventoryTransactionView parmInventoryTransaction(WHSInventoryTransactionView _inventoryTransaction = inventoryTransaction)
    {
        inventoryTransaction = _inventoryTransaction;
        
        return inventoryTransaction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal InventDimId parmInventDimId(InventDimId _inventDimId = inventDimId)
    {
        inventDimId = _inventDimId;

        return inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal InventQty parmQty()
    {
        return inventoryTransaction.HandlingQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isIssue</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal NoYes isIssue()
    {
        return inventoryTransaction.Type == WHSInventoryTransactionTypeEnum::RegisteredIssue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal date getTransactionDate()
    {
        return inventoryTransaction.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static InventDimTrackingWarehouseTransactionNode construct()
    {
        return new InventDimTrackingWarehouseTransactionNode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public static InventDimTrackingWarehouseTransactionNode create(container _packedValues)
    {
        InventDimTrackingWarehouseTransactionNode inventDimTrackingWarehouseTransactionNode = InventDimTrackingWarehouseTransactionNode::construct();

        inventDimTrackingWarehouseTransactionNode.unpack(_packedvalues);
        return inventDimTrackingWarehouseTransactionNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal ItemId getItemId()
    {
        return this.parmInventoryTransaction().ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventDim</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal InventDim getInventDim()
    {
        return InventDim::find(this.parmInventDimId());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>