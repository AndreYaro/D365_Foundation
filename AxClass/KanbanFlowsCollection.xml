<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanFlowsCollection</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>KanbanFlowsCollection</c> class represents a collection of <c>KanbanFlowWrapper</c> objects.
/// </summary>
class KanbanFlowsCollection
{
    List kanbanFlowsList;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addKanbanFlowWrapper</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a flow wrapper to the collection.
    /// </summary>
    /// <param name="_kanbanFlowWrapper">
    ///    The <c>KanbanFlowWrapper</c> object that contains the relations.
    /// </param>
    /// <returns>
    ///    The index of the newly added flow.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public int addKanbanFlowWrapper(KanbanFlowWrapper _kanbanFlowWrapper)
    {
        if (!_kanbanFlowWrapper ||
            !kanbanFlowsList)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        kanbanFlowsList.addEnd(_kanbanFlowWrapper);

        return kanbanFlowsList.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears all elements in the current collection.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void clear()
    {
        this.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getKanbanFlowWrapper</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the <c>KanbanFlowWrapper</c> element in the list that is at the position specified in the
    ///    <paramref name="_index" /> parameter.
    /// </summary>
    /// <param name="_index">
    ///    The position at which the requested element is in the collection.
    /// </param>
    /// <returns>
    ///    A <c>KanbanFlowWrapper</c> object that is at the specified position in the collection.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public KanbanFlowWrapper getKanbanFlowWrapper(int _index = 1)
    {
        int idx = _index;

        if (!kanbanFlowsList ||
            _index < 1 ||
            _index > kanbanFlowsList.elements())
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        ListEnumerator listEnumerator = kanbanFlowsList.getEnumerator();

        while (idx > 0)
        {
            --idx;
            listEnumerator.moveNext();
        }

        return listEnumerator.current();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
        private void initialize()
    {
        kanbanFlowsList = new List(Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>kanbanFlowsCount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the number of elements in the collection.
    /// </summary>
    /// <returns>
    ///    The number of elements in the collection.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public int kanbanFlowsCount()
    {
        return kanbanFlowsList.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>kanbanFlowsList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the internal list storage of the collection class.
    /// </summary>
    /// <returns>
    ///    A list that contains instances of the <c>KanbanFlowWrapper</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List kanbanFlowsList()
    {
        return kanbanFlowsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeAllFlowsExcept</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Removes all flows from the collection except the one to which the index is passed.
    /// </summary>
    /// <param name="_index">
    ///    The index of the flow that is not to be removed.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void removeAllFlowsExcept(int _index)
    {
        int i = 1;

        if (!kanbanFlowsList ||
            _index < 1 ||
            _index > kanbanFlowsList.elements())
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        List newKanbanFlowsList = new List(Types::Class);
        ListEnumerator listEnumerator = kanbanFlowsList.getEnumerator();

        // get to the element to be preserved
        for (i = 1; i <=_index; ++i)
        {
            listEnumerator.moveNext();
        }

        // preserve it by adding it to the new elements list
        newKanbanFlowsList.addEnd(listEnumerator.current());

        // replace the current collection with the new one
        kanbanFlowsList = newKanbanFlowsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static KanbanFlowsCollection construct()
    {
        KanbanFlowsCollection kanbanFlowsCollection = new KanbanFlowsCollection();

        kanbanFlowsCollection.initialize();
        return kanbanFlowsCollection;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
