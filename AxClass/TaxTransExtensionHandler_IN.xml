<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransExtensionHandler_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class to handle the tax transaction extension.
/// </summary>
public class TaxTransExtensionHandler_IN
{
    TaxTrans_IN         taxTransExtension;
    TaxModelTaxable_IN  taxModelTaxable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init the TaxTrans extension
    /// </summary>
    public void init()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>post</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post the TaxTrans extension.
    /// </summary>
    /// <returns>
    /// The posted TaxTrans extension.
    /// </returns>
    public TaxTrans_IN post()
    {
        ttsBegin;
        taxTransExtension.insert();
        ttsCommit;

        return taxTransExtension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBasicData</Name>
				<Source><![CDATA[
/// <summary>
    /// Sets the basic data of tax transaction extension handler.
    /// </summary>
    protected void setBasicData()
    {
        taxTransExtension.TaxDirection      = taxModelTaxable.getTaxDirection();
        taxTransExtension.AssessableValue   = taxModelTaxable.getAssessableValueTransactionCurrency();
        taxTransExtension.AssessableValueAccountingCurrency = taxModelTaxable.getAssessableValueAccountingCurrency();
        taxTransExtension.MaximumRetailPrice  = taxModelTaxable.getMaximumRetailPriceTransactionCurrency();
        taxTransExtension.Quantity            = taxModelTaxable.getQuantity();
        if (taxTransExtension.Quantity)
        {
            taxTransExtension.TotalMaximumRetailPrice    = taxTransExtension.MaximumRetailPrice;
        }
        else
        {
            taxTransExtension.TotalMaximumRetailPrice    = taxTransExtension.MaximumRetailPrice * taxTransExtension.Quantity;
        }

        taxTransExtension.ItemId    = taxModelTaxable.getItemId();
        taxTransExtension.InventTransId = taxModelTaxable.getInventTransId();

        taxTransExtension.SourceRecId         = taxModelTaxable.getDocumentLineMainTableRecId();
        taxTransExtension.SourceTableId       = taxModelTaxable.getDocumentLineMainTableId();

        taxTransExtension.ExciseRegister      = ExciseRegister_IN::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the data to the TaxTrans extension.
    /// </summary>
    public void setData()
    {
        VendTable   vendTable;
        CustTable   custTable;
        TableId     sourceTableId;
        RecId       sourceRecId;

        this.setBasicData();

        this.setDataTaxParameters();

        this.setDataCompanyInfo(CompanyInfo::find());

        if (taxModelTaxable.getDocumentLineMainTableId() != tableNum(InventQualityOrderTable))
        {
            vendTable = taxModelTaxable.getVendTable();
            if (vendTable)
            {
                this.setDataVendTable(vendTable);
            }

            custTable = taxModelTaxable.getCustTable();
            if (custTable)
            {
                this.setDataCustTable(custTable);
            }
        }

        sourceTableId   = taxModelTaxable.getDocumentLineMainTableId();
        sourceRecId     = taxModelTaxable.getDocumentLineMainTableRecId();

        this.setDataMiscCharge(sourceTableId, sourceRecId);

        this.setDataTransactions(sourceTableId, sourceRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataAssetTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data asset table.
    /// </summary>
    /// <param name="_assetTable">
    /// The asset table.
    /// </param>
    protected void setDataAssetTable(AssetTable _assetTable)
    {
        AssetBook assetBook;

        taxTransExtension.FixedAssetSerialNumber     = _assetTable.SerialNum;
        taxTransExtension.Make                       = _assetTable.Make;
        taxTransExtension.Model                      = _assetTable.Model;
        taxTransExtension.AssetLocation              = _assetTable.Location;

        assetBook = _assetTable.book();
        taxTransExtension.PlacedInService            = assetBook.UsedFromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataCompanyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the data company information.
    /// </summary>
    /// <param name="_companyInfo">
    /// The company information.
    /// </param>
    protected void setDataCompanyInfo(companyInfo _companyInfo)
    {
        TaxInformation_IN taxInformation;

        taxTransExtension.CompanyBankName       = _companyInfo.Bank;
        taxTransExtension.CompanyName           = _companyInfo.Name;
        taxTransExtension.CompanyBankAddress    = LogisticsPostalAddress::findByLocation(
            BankAccountTable::find(_companyInfo.Bank).Location).Address;

        taxInformation = TaxInformation_IN::findDefaultByLocation(DirParty::primaryPostalAddressLocationRecId(_companyInfo.RecId));

        taxTransExtension.CommissionarateCompanyInformation  = taxInformation.Commissionarate;
        taxTransExtension.CompanyAddress                     = LogisticsPostalAddress::findByLocation(taxInformation.RegistrationLocation).Address;
        taxTransExtension.DivisionCompanyInformation         = taxInformation.Division;
        taxTransExtension.RangeCompanyInformation            = taxInformation.Range;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataCustInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the data cust invoice journal.
    /// </summary>
    /// <param name="_custInvoiceJour">
    /// The cust invoice journal.
    /// </param>
    protected void setDataCustInvoiceJour(CustInvoiceJour _custInvoiceJour)
    {
        CustInvoiceTable custInvoiceTable;

        taxTransExtension.InvoiceAmount     = _custInvoiceJour.InvoiceAmount;
        taxTransExtension.InvoiceId         = _custInvoiceJour.InvoiceId;
        taxTransExtension.InvoiceAccount    = _custInvoiceJour.InvoiceAccount;
        taxTransExtension.SalesInvoiceDate  = _custInvoiceJour.InvoiceDate;

        select firstonly custInvoiceTable
            where custInvoiceTable.InvoiceId == _custInvoiceJour.InvoiceId;

        if (custInvoiceTable)
        {
            this.setDataCustInvoiceTable(custInvoiceTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataCustInvoiceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data cust invoice table information.
    /// </summary>
    /// <param name="_custInvoiceTable">
    /// The cust invoice table.
    /// </param>
    protected void setDataCustInvoiceTable(CustInvoiceTable _custInvoiceTable)
    {
        taxTransExtension.InvoiceAccount    = _custInvoiceTable.InvoiceAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataCustInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the data cust invoice transaction information.
    /// </summary>
    /// <param name="_custInvoiceTrans">
    /// The cust invoice transaction.
    /// </param>
    protected void setDataCustInvoiceTrans(CustInvoiceTrans _custInvoiceTrans)
    {
        SalesLine salesLine;

        CustInvoiceJour  custInvoiceJour;
        InventDim inventDim;

        taxTransExtension.LineNum               = _custInvoiceTrans.LineNum;
        taxTransExtension.transactionAmount     = _custInvoiceTrans.LineAmount + _custInvoiceTrans.LineAmountTax;
        taxTransExtension.Unit                  = _custInvoiceTrans.SalesUnit;

        inventDim = InventDim::find(_custInvoiceTrans.InventDimId);
        if (inventDim)
        {
            this.setDataInventDim(inventDim);
        }

        salesLine = SalesLine::findInventTransId(taxModelTaxable.getInventTransId());
        if (salesLine)
        {
            this.setDataSalesLine(salesLine);
        }

        custInvoiceJour = _custInvoiceTrans.custInvoiceJour();
        if (custInvoiceJour)
        {
            this.setDataCustInvoiceJour(custInvoiceJour);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataCustTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the data cust table information.
    /// </summary>
    /// <param name="_custTable">
    /// The data cust table.
    /// </param>
    protected void setDataCustTable(CustTable _custTable)
    {
        taxTransExtension.Customer  = _custTable.AccountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data invent dim.
    /// </summary>
    /// <param name="_inventDim">
    /// The data invent dim.
    /// </param>
    protected void setDataInventDim(InventDim _inventDim)
    {
        taxTransExtension.InventDimFieldsMap::initAllDimensionsFrom(_inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataInventJournalTrans</Name>
				<Source><![CDATA[
/// <summary>
    /// Sets data invent journal transaction.
    /// </summary>
    /// <param name="_inventJournalTrans">
    /// The invent journal transaction.
    /// </param>
    protected void setDataInventJournalTrans(InventJournalTrans _inventJournalTrans)
    {
        InventDim inventDim;

        taxTransExtension.BillOfMaterialJournalNumber        = _inventJournalTrans.JournalId;
        taxTransExtension.Unit                               = _inventJournalTrans.unitId();
        taxTransExtension.LineNum                            = _inventJournalTrans.LineNum;

        taxTransExtension.DisposalType                       = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(_inventJournalTrans).ExciseDisposalType;

        inventDim = _inventJournalTrans.inventDim();
        if (inventDim)
        {
            this.setDataInventDim(inventDim);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataInventQualityOrderTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data invent quality order table information.
    /// </summary>
    /// <param name="_inventQualityOrderTable">
    /// The invent quality order table information.
    /// </param>
    protected void setDataInventQualityOrderTable(InventQualityOrderTable _inventQualityOrderTable)
    {
        SalesPurchJournalLine originalTransTable;

        originalTransTable = taxModelTaxable.getDocumentLineOriginalTable();
        this.setDataTransactions(originalTransTable.SourceTableId, originalTransTable.SourceRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataInventTransferLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data invent transfer line information.
    /// </summary>
    /// <param name="_inventTransferLine">
    /// The invent transfer line.
    /// </param>
    protected void setDataInventTransferLine(InventTransferLine _inventTransferLine)
    {
        InventTransferLine_IN inventTransferLineIN = _inventTransferLine.inventTransferLine_IN();
        taxTransExtension.Unit                  = inventTransferLineIN.UnitId;
        taxTransExtension.TransferOrderNumber   = _inventTransferLine.TransferId;
        taxTransExtension.PriceType             = inventTransferLineIN.PriceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataInventTransferParmLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data invent transfer parm line information.
    /// </summary>
    /// <param name="_inventTransferParmLine">
    /// The invent transfer parm line.
    /// </param>
    protected void setDataInventTransferParmLine(InventTransferParmLine _inventTransferParmLine)
    {
        taxTransExtension.ScrapQuantity         = _inventTransferParmLine.QtyScrapNow;
        taxTransExtension.LineNum               = _inventTransferParmLine.LineNum;
        this.setDataInventTransferLine(_inventTransferParmLine.inventTransferLine());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataLedgerJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data ledger journal transaction.
    /// </summary>
    /// <param name="_ledgerJouranlTrans">
    /// The ledger journal transaction.
    /// </param>
    protected void setDataLedgerJournalTrans(LedgerJournalTrans _ledgerJouranlTrans)
    {
        AssetTable          assetTable;
        LedgerJournalTable  ledgerJournalTable;

        taxTransExtension.LineNum               = _ledgerJouranlTrans.LineNum;
        taxTransExtension.TransactionAmount     = _ledgerJouranlTrans.AmountCurCredit ? _ledgerJouranlTrans.AmountCurCredit : _ledgerJouranlTrans.AmountCurDebit;
        taxTransExtension.CreditAmount          = _ledgerJouranlTrans.AmountCurCredit;
        taxTransExtension.DebitAmount           = _ledgerJouranlTrans.AmountCurDebit;

        taxTransExtension.JournalInvoice        = _ledgerJouranlTrans.Invoice;
        taxTransExtension.JournalInvoiceAmount  = _ledgerJouranlTrans.amount();
        taxTransExtension.InvoiceAmount         = taxTransExtension.JournalInvoiceAmount;
        taxTransExtension.JournalInvoiceDate    = _ledgerJouranlTrans.TransDate;
        taxTransExtension.JournalNum            = _ledgerJouranlTrans.JournalNum;
        taxTransExtension.InvoiceId             = _ledgerJouranlTrans.MarkedInvoice ? _ledgerJouranlTrans.MarkedInvoice :_ledgerJouranlTrans.Invoice;

        ledgerJournalTable = _ledgerJouranlTrans.ledgerJournalTable();
        if (ledgerJournalTable)
        {
            taxTransExtension.JournalType = ledgerJournalTable.JournalType;
            taxTransExtension.JournalName = ledgerJournalTable.JournalName;
            taxTransExtension.Journal     = taxTransExtension.JournalName;
        }

        assetTable = _ledgerJouranlTrans.findAssetTable();
        if (assetTable)
        {
            this.setDataAssetTable(assetTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataMiscCharge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data misc charge data.
    /// </summary>
    /// <param name="_transactionTableId">
    /// The transaction table id.
    /// </param>
    /// <param name="_transactionRecId">
    /// The transaction rec id.
    /// </param>
    protected void setDataMiscCharge(TableId _transactionTableId, recId _transactionRecId)
    {
        taxTransExtension.MiscChargeAmount = MarkupTrans::findSumValue_IN(_transactionTableId, _transactionRecId, '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataProjCostTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// setting the data for ProjCostTrans
    /// </summary>
    /// <param name="_projCostTrans">
    /// <c> _projCostTrans </c> as a param
    /// </param>
    protected void setDataProjCostTrans(ProjCostTrans _projCostTrans)
    {
        ProjInvoiceJour     projInvoiceJour;
        ProjInvoiceCost     projInvoiceCost;

        taxTransExtension.ProjId   = _projCostTrans.ProjId;

        projInvoiceCost = ProjInvoiceCost::findTransId(_projCostTrans.TransId);
        projInvoiceJour = projInvoiceCost.projInvoiceJour();
        if (projInvoiceJour)
        {
            this.setDataProjInvoiceJour(projInvoiceJour);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataProjInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// setting the data for ProjInvocieJour
    /// </summary>
    /// <param name="_projInvoiceJour">
    /// <c> _projInvoiceJour </c> as a param
    /// </param>
    protected void setDataProjInvoiceJour(ProjInvoiceJour _projInvoiceJour)
    {
        taxTransExtension.InvoiceAmount     = _projInvoiceJour.InvoiceAmount;
        taxTransExtension.InvoiceId         = _projInvoiceJour.ProjInvoiceId;
        taxTransExtension.InvoiceAccount    = _projInvoiceJour.InvoiceAccount;
        taxTransExtension.TransDate         = _projInvoiceJour.InvoiceDate;
        taxTransExtension.transactionAmount = _projInvoiceJour.SalesOrderbalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataProjItemTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Setting the data for ProjItemTrans
    /// </summary>
    /// <param name="_projItemTrans">
    /// <c> _projItemTrans </c> as a param
    /// </param>
    protected void setDataProjItemTrans(ProjItemTrans _projItemTrans)
    {
        SalesLine           salesLine;
        ProjInvoiceJour     projInvoiceJour;
        ProjInvoiceItem     projInvoiceItem;
        InventDim           inventDim;

        taxTransExtension.Unit      = _projItemTrans.SalesUnit;
        taxTransExtension.ProjId    = _projItemTrans.ProjId;

        inventDim = InventDim::find(_projItemTrans.InventDimId);
        if (inventDim)
        {
            this.setDataInventDim(inventDim);
        }

        salesLine = SalesLine::findInventTransId(taxModelTaxable.getInventTransId());
        if (salesLine)
        {
            this.setDataSalesLine(salesLine);
        }

        select firstOnly projInvoiceItem
            where projInvoiceItem.ProjTransId == _projItemTrans.ProjTransId;

        projInvoiceJour = projInvoiceItem.projInvoiceJour();
        if (projInvoiceJour)
        {
            this.setDataProjInvoiceJour(projInvoiceJour);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataProjOnAccTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Setting the Data for ProjOnAcctrans
    /// </summary>
    /// <param name="_projOnAccTrans">
    /// <c>_projOnAccTrans </c> as a param
    /// </param>
    protected void setDataProjOnAccTrans(ProjOnAccTrans _projOnAccTrans)
    {
        ProjInvoiceJour     projInvoiceJour;
        ProjInvoiceOnAcc    projInvoiceOnAcc;

        taxTransExtension.ProjId   = _projOnAccTrans.ProjId;

        projInvoiceOnAcc    = projInvoiceOnAcc::findTransId(_projOnAccTrans.TransId);
        projInvoiceJour     = projInvoiceOnAcc.projInvoiceJour();
        if (projInvoiceJour)
        {
            this.setDataProjInvoiceJour(projInvoiceJour);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the data purch line.
    /// </summary>
    /// <param name="_purchLine">
    /// The instance of the <c>PurchLine</c> class.
    /// </param>
    protected void setDataPurchLine(PurchLine _purchLine)
    {
        PurchTable purchTable;

        taxTransExtension.PurchaseOrderQuantity          = _purchLine.PurchQty;
        taxTransExtension.PurchaseOrder                  = _purchLine.PurchId;
        taxTransExtension.PurchaseItem                   = taxTransExtension.ItemId;

        purchTable = _purchLine.purchTable();
        if (purchTable)
        {
            taxTransExtension.PurchaseOrderDate              = purchTable.lastPurchaseOrderDate();
            taxTransExtension.PurchasePackingSlipDate        = purchTable.lastPackingSlipDate();
            taxTransExtension.PurchasePackingSlipNumber      = purchTable.lastPackingSlip();
            taxTransExtension.ReceiptListDate                = purchTable.lastReceiptsListDate();
            taxTransExtension.ReceiptListNumber              = purchTable.lastReceiptsList();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data sales line information.
    /// </summary>
    /// <param name="_salesLine">
    /// The instance of the <c>SalesLine</c> class.
    /// </param>
    protected void setDataSalesLine(SalesLine _salesLine)
    {
        SalesTable salesTable;

        taxTransExtension.SalesOrderDate    = DateTimeUtil::date(_salesLine.CreatedDateTime);
        taxTransExtension.SalesOrderQty     = _salesLine.SalesQty;
        taxTransExtension.SalesOrder        = _salesLine.SalesId;

        salesTable = _salesLine.salesTable();
        if (salesTable)
        {
            taxTransExtension.SalesPackingSlipDate           = salesTable.lastPackingSlipDate();
            taxTransExtension.SalesPackingSlipNumber         = salesTable.lastPackingSlip();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataTaxParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data tax parameters information.
    /// </summary>
    protected void setDataTaxParameters()
    {
        TaxParameters taxParameters;

        taxParameters = TaxParameters::find();

        taxTransExtension.VendorCalculationDateType     = taxParameters.VendorCalculationDateType_IN;
        taxTransExtension.CustomerCalculationDateType   = taxParameters.CustomerCalculationDateType_IN;
        taxTransExtension.TaxCalculationDateType        = taxParameters.TaxCalculationDateType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataTransactions</Name>
				<Source><![CDATA[
/// <summary>
    /// Sets data transaction information.
    /// </summary>
    /// <param name="_sourceTableId">
    /// The source table id.
    /// </param>
    /// <param name="_sourceRecId">
    /// The source rec id.
    /// </param>
    protected void setDataTransactions(TableId _sourceTableId, RecId _sourceRecId)
    {
        InventTransferParmLine inventTransferParmLine;
        InventJournalTrans inventJournalTrans;
        InventQualityOrderTable inventQualityOrderTable;
        CustInvoiceTrans custInvoiceTrans;
        int64 sourceDocumentLineId;
        ProdJournalBOM          prodJournalBOM;
        ProjItemTrans           projItemTrans;
        ProjCostTrans           projCostTrans;
        ProjOnAccTrans          projOnAccTrans;

        switch (_sourceTableId)
        {
            case tableNum(VendInvoiceTrans) :
                this.setDataVendInvoiceTrans(VendInvoiceTrans::findRecId(_sourceRecId));
                break;
            case tableNum(CustInvoiceTrans) :
                this.setDataCustInvoiceTrans(CustInvoiceTrans::findRecId(_sourceRecId));
                break;
            case tableNum(LedgerJournalTrans) :
                this.setDataLedgerJournalTrans(LedgerJournalTrans::findRecId(_sourceRecId, false));
                break;
            case tableNum(InventTransferParmLine) :
                select firstonly inventTransferParmLine
                    where inventTransferParmLine.RecId == _sourceRecId;
                this.setDataInventTransferParmLine(inventTransferParmLine);
                break;
            case tableNum(InventQualityOrderTable) :
                select firstOnly inventQualityOrderTable
                    where inventQualityOrderTable.RecId == _sourceRecId;
                this.setDataInventQualityOrderTable(inventQualityOrderTable);
                break;
            case tableNum(InventJournalTrans) :
                select firstOnly inventJournalTrans
                    where inventJournalTrans.RecId == _sourceRecId;
                this.setDataInventJournalTrans(inventJournalTrans);
                break;
            case tableNum(CustInvoiceLine) :
                sourceDocumentLineId = CustInvoiceLine::find(_sourceRecId).SourceDocumentLine;
                if (sourceDocumentLineId != 0)
                {
                    select firstOnly custInvoiceTrans
                        where custInvoiceTrans.SourceDocumentLine == sourceDocumentLineId;
                    this.setDataCustInvoiceTrans(custInvoiceTrans);
                }
                break;

            case tableNum(ProdJournalBOM):
                prodJournalBOM = ProdJournalBOM::findRecId(_sourceRecId);

                if (prodJournalBOM.RecId)
                {
                    this.setDataProdJournalBOM(prodJournalBOM);
                }
                break;

            case tableNum(ProjItemTrans) :
                select firstOnly projItemTrans
                    where projItemTrans.RecId == _sourceRecId;

                if (projItemTrans.RecId)
                {
                    this.setDataProjItemTrans(projItemTrans);
                }
                break;

            case tableNum(ProjCostTrans) :
                select firstOnly projCostTrans
                    where projCostTrans.RecId == _sourceRecId;

                if (projCostTrans.RecId)
                {
                    this.setDataProjCostTrans(projCostTrans);
                }
                break;

            case tableNum(ProjOnAccTrans) :
                select firstOnly projOnAccTrans
                    where projOnAccTrans.RecId == _sourceRecId;

                if (projOnAccTrans.RecId)
                {
                    this.setDataProjOnAccTrans(projOnAccTrans);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataVendInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data vend invoice journal.
    /// </summary>
    /// <param name="_vendInvoiceJour">
    /// The vend invoice journal.
    /// </param>
    protected void setDataVendInvoiceJour(VendInvoiceJour _vendInvoiceJour)
    {
        taxTransExtension.InvoiceAccount        = _vendInvoiceJour.InvoiceAccount;
        taxTransExtension.InvoiceId             = _vendInvoiceJour.InvoiceId;
        taxTransExtension.InvoiceAmount         = _vendInvoiceJour.InvoiceAmount;
        taxTransExtension.PurchaseInvoiceDate   = _vendInvoiceJour.InvoiceDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataVendInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data vend invoice transaction.
    /// </summary>
    /// <param name="_vendInvoiceTrans">
    /// The vend invoice transaction.
    /// </param>
    protected void setDataVendInvoiceTrans(VendInvoiceTrans _vendInvoiceTrans)
    {
        PurchLine purchLine;
        VendInvoiceJour  vendInvoiceJour;
        InventDim inventDim;
        VendInvoiceInfoLine  vendInvoiceInfoLine;

        taxTransExtension.LineNum               = _vendInvoiceTrans.LineNum;
        taxTransExtension.transactionAmount     = _vendInvoiceTrans.LineAmount + _vendInvoiceTrans.LineAmountTax;
        taxTransExtension.Unit                  = _vendInvoiceTrans.PurchUnit;
        taxTransExtension.PurchaseItem          = taxTransExtension.ItemId;

        inventDim = InventDim::find(_vendInvoiceTrans.InventDimId);
        if (inventDim)
        {
            this.setDataInventDim(inventDim);
        }

        purchLine = PurchLine::findInventTransId(taxModelTaxable.getInventTransId());
        if (purchLine)
        {
            this.setDataPurchLine(purchLine);
        }

        vendInvoiceJour = _vendInvoiceTrans.vendInvoiceJour();
        if (vendInvoiceJour)
        {
            this.setDataVendInvoiceJour(vendInvoiceJour);
        }

        vendInvoiceInfoLine = VendInvoiceInfoLine::findSourceDocumentLine(_vendInvoiceTrans.SourceDocumentLine);
        if (vendInvoiceInfoLine)
        {
            taxTransExtension.VendInvoiceInternalDefaultGroup = vendInvoiceInfoLine.vendInvoiceInfoTable().VendInvoiceGroup;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets data vend table.
    /// </summary>
    /// <param name="_vendTable">
    /// The vend table information.
    /// </param>
    protected void setDataVendTable(VendTable _vendTable)
    {
        taxTransExtension.Vendor            = _vendTable.AccountNum;
        taxTransExtension.ssiValidityDate   = _vendTable.getTaxInformationVendTable_IN().SSIValidityDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxModelTaxable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the taxModel object.
    /// </summary>
    /// <param name="_taxModelTaxable">
    /// The given taxModel object
    /// </param>
    public void setTaxModelTaxable(TaxModelTaxable_IN _taxModelTaxable)
    {
        taxModelTaxable = _taxModelTaxable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataProdJournalBOM</Name>
				<Source><![CDATA[
    /// <summary>
    /// setting the data for ProdJournalBOM
    /// </summary>
    /// <param name="_prodJournalBOM">
    /// <c> _projInvoiceJour </c> as a param
    /// </param>
    protected void setDataProdJournalBOM(ProdJournalBOM _prodJournalBOM)
    {
        taxTransExtension.Source                = TaxModuleType::ProducationOrder_IN;
        taxTransExtension.Voucher               = _prodJournalBOM.Voucher;
        taxTransExtension.ProductionOrderNumber = _prodJournalBOM.ProdId;
        taxTransExtension.ProductionOrderQty    = taxModelTaxable.getQuantity();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>