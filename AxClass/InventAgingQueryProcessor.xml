<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAgingQueryProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventAgingQueryProcessor</c> is a command that fetches rows from an instance of <c>QueryRun</c> and executes
/// the <c>InventAgingICommand</c> for each row.
/// </summary>
/// <remarks>
/// The <c>InventAgingQueryProcessor</c> can process the fetched rows in sets if configured with an instance of a
/// class that implements <c>InventAgingISetDelimiter</c> interface.
/// </remarks>
class InventAgingQueryProcessor implements InventAgingICommand
{
    QueryRun                    qr;
    boolean                     isSetDelimited;
    InventAgingICommand         command;
    InventAgingISetDelimiter    setDelimiter;
    InventAgingISkipRecord      skipRecord;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches rows from the <c>QueryRun</c> object and executes the <c>InventAgingICommand</c> for each row.
    /// </summary>
    /// <remarks>
    /// The execution can be suspended by the <c>InventAgingISetDelimiter</c>.
    /// </remarks>
    public void execute()
    {
        while (isSetDelimited || qr.next())
        {
            isSetDelimited = false;

            if (skipRecord && skipRecord.skipRecord())
            {
                continue;
            }

            if (setDelimiter && setDelimiter.delimitSet())
            {
                isSetDelimited = true;
                break;
            }
            command.execute();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>InventAgingQueryProcessor</c> class.
    /// </summary>
    /// <param name="_queryRun">
    /// The instance of the <c>QueryRun</c> class to process.
    /// </param>
    /// <param name="_command">
    /// The instance of a command to execute for each row that is fetched.
    /// </param>
    protected void initialize(
        QueryRun                    _queryRun,
        InventAgingICommand         _command)
    {
        qr = _queryRun;
        command = _command;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSetDelimited</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the processing of query is suspended by the <c>InventAgingISetDelimiter</c>.
    /// </summary>
    /// <returns>
    /// true if the processing of query is suspended by the <c>InventAgingISetDelimiter</c>; otherwise false.
    /// </returns>
    public boolean isSetDelimited()
    {
        return isSetDelimited;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSetDelimiter</Name>
				<Source><![CDATA[
    public InventAgingISetDelimiter parmSetDelimiter(InventAgingISetDelimiter _setDelimiter = setDelimiter)
    {
        setDelimiter = _setDelimiter;

        return setDelimiter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipRecord</Name>
				<Source><![CDATA[
    public InventAgingISkipRecord parmSkipRecord(InventAgingISkipRecord _skipRecord = skipRecord)
    {
        skipRecord = _skipRecord;

        return skipRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static InventAgingQueryProcessor construct()
    {
        return new InventAgingQueryProcessor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>InventAgingQueryProcessor</c> class.
    /// </summary>
    /// <param name="_queryRun">
    /// The instance of the <c>QueryRun</c> class to process.
    /// </param>
    /// <param name="_command">
    /// The instance of a command to execute for each row that is fetched.
    /// </param>
    /// <returns>
    /// An instance of the <c>InventAgingQueryProcessor</c> class.
    /// </returns>
    public static InventAgingQueryProcessor newFromParameters(
        QueryRun                    _queryRun,
        InventAgingICommand         _command)
    {
        InventAgingQueryProcessor inventAgingQueryProcessor = InventAgingQueryProcessor::construct();
        inventAgingQueryProcessor.initialize(_queryRun, _command);

        return inventAgingQueryProcessor;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
