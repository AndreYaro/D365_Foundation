<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttView_WrkCtr</Name>
	<SourceCode>
		<Declaration><![CDATA[
class GanttView_WrkCtr extends GanttView
{
    NoYes               mustReloadData;

    // current view
    GanttViewWrkCtr     currentView;
    NoYes               currentViewChanged;

    // order view
    NoYes               orderViewRefStatus;

    NoYes               orderViewRefId;
    NoYes               orderViewRefIdSummaryBar;
    NoYes               orderViewRefDeliveryDate;

    NoYes               orderViewInventSiteId;

    NoYes               orderViewProdUnitId;

    NoYes               orderViewWrkCtrGroupId;

    NoYes               orderViewWrkCtrId;

    NoYes               orderViewOprId;
    NoYes               orderViewOprIdSummaryBar;

    NoYes               orderViewGroupingChanged;

    NoYes               orderViewInitiallyCollapsed;
    NoYes               orderViewInitiallyCollapsedChanged;

    // resource view
    NoYes               resourceViewInventSiteId;

    NoYes               resourceViewProdUnitId;

    NoYes               resourceViewWrkCtrGroupId;

    NoYes               resourceViewWrkCtrId;
    NoYes               resourceViewWrkCtrIdCapacityBar;

    NoYes               resourceViewRefStatus;

    NoYes               resourceViewRefId;
    NoYes               resourceViewOprId;
    NoYes               resourceViewOprIdSummaryBar;

    NoYes               resourceViewGroupingChanged;

    NoYes               resourceViewInitiallyCollapsed;
    NoYes               resourceViewInitiallyCollapsedChanged;

    internal NoYes      showOperationNum;
    internal NoYes      showRouteJobType;
    internal NoYes      showResource;
    internal NoYes      showStartEndDateTime;

    #define.CurrentVersion(4)
    #localmacro.CurrentList
        // current view
        currentView,

        // order view
        orderViewRefStatus,

        orderViewRefId,
        orderViewRefIdSummaryBar,
        orderViewRefDeliveryDate,

        orderViewInventSiteId,

        orderViewProdUnitId,

        orderViewWrkCtrGroupId,

        orderViewWrkCtrId,

        orderViewOprId,
        orderViewOprIdSummaryBar,

        orderViewInitiallyCollapsed,

        // resource view
        resourceViewInventSiteId,

        resourceViewProdUnitId,

        resourceViewWrkCtrGroupId,

        resourceViewWrkCtrId,
        resourceViewWrkCtrIdCapacityBar,

        resourceViewRefStatus,

        resourceViewRefId,

        resourceViewOprId,
        resourceViewOprIdSummaryBar,

        resourceViewInitiallyCollapsed,
        showOperationNum,
        showRouteJobType,
        showResource,
        showStartEndDateTime
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyChangedValues</Name>
				<Source><![CDATA[
    protected boolean applyChangedValues()
    {
        if (!super())
        {
            return false;
        }

        if (mustReloadData)
        {
            return ganttClient.reload();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeCurrentView</Name>
				<Source><![CDATA[
    public void changeCurrentView()
    {
        if (currentView == GanttViewWrkCtr::OrderView)
        {
            this.parmCurrentView(GanttViewWrkCtr::ResourceView);
        }
        else if (currentView == GanttViewWrkCtr::ResourceView)
        {
            this.parmCurrentView(GanttViewWrkCtr::OrderView);
        }

        this.applyChanges();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGroupByWrkCtrId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if grouping by work center is enabled.
    /// </summary>
    /// <returns>
    ///    true if the grouping by work center is enabled; otherwise, false.
    /// </returns>
    public boolean getGroupByWrkCtrId()
    {
        boolean res = false;
        switch (this.parmCurrentView())
        {
            case GanttViewWrkCtr::OrderView:
                res = this.parmOrderViewWrkCtrId();
                break;

            case GanttViewWrkCtr::ResourceView:
                res = this.parmResourceViewWrkCtrId();
                break;

            default:
                throw error(strfmt("@SYS27147", classId2Name(classidget(this))));
        }

        return res;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOppositeView</Name>
				<Source><![CDATA[
    public GanttViewWrkCtr getOppositeView()
    {
        if (currentView == GanttViewWrkCtr::OrderView)
        {
            return GanttViewWrkCtr::ResourceView;
        }
        else if (currentView == GanttViewWrkCtr::ResourceView)
        {
            return GanttViewWrkCtr::OrderView;
        }
        else
        {
            throw error(strfmt("@SYS27147", classId2Name(classidget(this))));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the internal variables.
    /// </summary>
    /// <remarks>
    ///    This method is called when no <c>SysLastValue</c> record can be found when calling the
    ///    <c>SysLastValue.GetLast</c> method. Remember to call the <c>super</c> method.
    /// </remarks>
    public void initParmDefault()
    {
        super();

        this.initParmDefaultCurrentView();

        this.initParmDefaultOrderView();

        this.initParmDefaultResourceView();

        this.initParmLeftPaneView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefaultCurrentView</Name>
				<Source><![CDATA[
    protected void initParmDefaultCurrentView()
    {
        currentView = GanttViewWrkCtr::ResourceView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefaultOrderView</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the order view parameters.
    /// </summary>
    protected void initParmDefaultOrderView()
    {
        orderViewRefStatus          = NoYes::No;

        orderViewRefId              = NoYes::Yes;

        orderViewRefIdSummaryBar    = NoYes::No;
        orderViewRefDeliveryDate    = NoYes::Yes;

        orderViewInventSiteId       = NoYes::No;

        orderViewProdUnitId         = NoYes::No;

        orderViewWrkCtrGroupId      = NoYes::No;

        orderViewWrkCtrId           = NoYes::No;

        orderViewOprId              = NoYes::No;
        orderViewOprIdSummaryBar    = NoYes::No;

        orderViewInitiallyCollapsed = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefaultResourceView</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the resource view parameters.
    /// </summary>
    protected void initParmDefaultResourceView()
    {
        resourceViewInventSiteId        = NoYes::No;

        resourceViewProdUnitId          = NoYes::No;

        resourceViewWrkCtrGroupId       = NoYes::No;

        resourceViewWrkCtrId            = NoYes::Yes;
        resourceViewWrkCtrIdCapacityBar = NoYes::No;

        resourceViewRefStatus           = NoYes::No;

        resourceViewRefId               = NoYes::No;

        resourceViewOprId               = NoYes::No;
        resourceViewOprIdSummaryBar     = NoYes::No;

        resourceViewInitiallyCollapsed  = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmLeftPaneView</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the left pane columns view visibility.
    /// </summary>
    internal void initParmLeftPaneView()
    {
        if (GanttWrkCtrViewLeftPaneFeature::instance().isEnabled())
        {
            showOperationNum = NoYes::Yes;
            showRouteJobType = NoYes::Yes;
            showResource = NoYes::Yes;
            showStartEndDateTime = NoYes::Yes;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    public identifierName lastValueDesignName()
    {
        GanttClient_WrkCtr localGanttClient = this.parmGanttClient() as GanttClient_WrkCtr;
        return localGanttClient.lastValueDesignName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustLoadDeliveryDate</Name>
				<Source><![CDATA[
    public boolean mustLoadDeliveryDate()
    {
        if (this.parmOrderViewRefId() &&
           this.parmOrderViewRefDeliveryDate())
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustShowDeliveryDate</Name>
				<Source><![CDATA[
    public boolean mustShowDeliveryDate()
    {
        if (this.parmCurrentView() == GanttViewWrkCtr::OrderView &&
           this.mustLoadDeliveryDate())
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrentView</Name>
				<Source><![CDATA[
    public GanttViewWrkCtr parmCurrentView(GanttViewWrkCtr _currentView = currentView)
    {
        if (currentView != _currentView)
        {
            currentViewChanged  = NoYes::Yes;
            currentView         = _currentView;
        }

        return currentView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGanttClient</Name>
				<Source><![CDATA[
    public GanttClient parmGanttClient(GanttClient _ganttClient = ganttClient)
    {
        return super(_ganttClient);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewInitiallyCollapsed</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewInitiallyCollapsed(NoYes _orderViewInitiallyCollapsed = orderViewInitiallyCollapsed)
    {
        if (orderViewInitiallyCollapsed != _orderViewInitiallyCollapsed)
        {
            orderViewInitiallyCollapsedChanged  = NoYes::Yes;
            orderViewInitiallyCollapsed         = _orderViewInitiallyCollapsed;
        }

        return orderViewInitiallyCollapsed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewInventSiteId</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewInventSiteId(NoYes _orderViewInventSiteId = orderViewInventSiteId)
    {
        if (orderViewInventSiteId != _orderViewInventSiteId)
        {
            orderViewGroupingChanged    = NoYes::Yes;

            orderViewInventSiteId       = _orderViewInventSiteId;
        }

        return orderViewInventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewOprId</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewOprId(NoYes _orderViewOprId = orderViewOprId)
    {
        if (orderViewOprId != _orderViewOprId)
        {
            orderViewGroupingChanged    = NoYes::Yes;

            orderViewOprId              = _orderViewOprId;
        }

        return orderViewOprId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewOprIdSummaryBar</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewOprIdSummaryBar(NoYes _orderViewOprIdSummaryBar = orderViewOprIdSummaryBar)
    {
        if (orderViewOprIdSummaryBar != _orderViewOprIdSummaryBar)
        {
            orderViewGroupingChanged    = NoYes::Yes;

            orderViewOprIdSummaryBar    = _orderViewOprIdSummaryBar;
        }

        return orderViewOprIdSummaryBar;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewProdUnitId</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewProdUnitId(NoYes _orderViewProdUnitId = orderViewProdUnitId)
    {
        if (orderViewProdUnitId != _orderViewProdUnitId)
        {
            orderViewGroupingChanged    = NoYes::Yes;

            orderViewProdUnitId         = _orderViewProdUnitId;
        }

        return orderViewProdUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewRefDeliveryDate</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewRefDeliveryDate(NoYes _orderViewRefDeliveryDate = orderViewRefDeliveryDate)
    {
        if (orderViewRefDeliveryDate != _orderViewRefDeliveryDate)
        {
            mustReloadData              = NoYes::Yes;

            orderViewRefDeliveryDate    = _orderViewRefDeliveryDate;
        }

        return orderViewRefDeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewRefId</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewRefId(NoYes _orderViewRefId = orderViewRefId)
    {
        if (orderViewRefId != _orderViewRefId)
        {
            if (orderViewRefDeliveryDate == NoYes::Yes)
            {
                mustReloadData              = NoYes::Yes;
            }
            else
            {
                orderViewGroupingChanged    = NoYes::Yes;
            }

            orderViewRefId              = _orderViewRefId;
        }

        return orderViewRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewRefIdSummaryBar</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewRefIdSummaryBar(NoYes _orderViewRefIdSummaryBar = orderViewRefIdSummaryBar)
    {
        if (orderViewRefIdSummaryBar != _orderViewRefIdSummaryBar)
        {
            orderViewGroupingChanged    = NoYes::Yes;

            orderViewRefIdSummaryBar    = _orderViewRefIdSummaryBar;
        }

        return orderViewRefIdSummaryBar;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewRefStatus</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewRefStatus(NoYes _orderViewRefStatus = orderViewRefStatus)
    {
        if (orderViewRefStatus != _orderViewRefStatus)
        {
            orderViewGroupingChanged    = NoYes::Yes;
            orderViewRefStatus          = _orderViewRefStatus;
        }

        return orderViewRefStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewWrkCtrGroupId</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewWrkCtrGroupId(NoYes _orderViewWrkCtrGroupId = orderViewWrkCtrGroupId)
    {
        if (orderViewWrkCtrGroupId != _orderViewWrkCtrGroupId)
        {
            orderViewGroupingChanged    = NoYes::Yes;
            orderViewWrkCtrGroupId      = _orderViewWrkCtrGroupId;
        }

        return orderViewWrkCtrGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderViewWrkCtrId</Name>
				<Source><![CDATA[
    public NoYes parmOrderViewWrkCtrId(NoYes _orderViewWrkCtrId = orderViewWrkCtrId)
    {
        if (orderViewWrkCtrId != _orderViewWrkCtrId)
        {
            orderViewGroupingChanged    = NoYes::Yes;

            orderViewWrkCtrId           = _orderViewWrkCtrId;
        }

        return orderViewWrkCtrId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewInitiallyCollapsed</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewInitiallyCollapsed(NoYes _resourceViewInitiallyCollapsed = resourceViewInitiallyCollapsed)
    {
        if (resourceViewInitiallyCollapsed != _resourceViewInitiallyCollapsed)
        {
            resourceViewInitiallyCollapsedChanged   = NoYes::Yes;
            resourceViewInitiallyCollapsed          = _resourceViewInitiallyCollapsed;
        }

        return resourceViewInitiallyCollapsed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewInventSiteId</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewInventSiteId(NoYes _resourceViewInventSiteId = resourceViewInventSiteId)
    {
        if (resourceViewInventSiteId != _resourceViewInventSiteId)
        {
            resourceViewGroupingChanged = NoYes::Yes;

            resourceViewInventSiteId    = _resourceViewInventSiteId;
        }

        return resourceViewInventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewOprId</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewOprId(NoYes _resourceViewOprId = resourceViewOprId)
    {
        if (resourceViewOprId != _resourceViewOprId)
        {
            resourceViewGroupingChanged = NoYes::Yes;

            resourceViewOprId           = _resourceViewOprId;
        }

        return resourceViewOprId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewOprIdSummaryBar</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewOprIdSummaryBar(NoYes _resourceViewOprIdSummaryBar = resourceViewOprIdSummaryBar)
    {
        if (resourceViewOprIdSummaryBar != _resourceViewOprIdSummaryBar)
        {
            resourceViewGroupingChanged = NoYes::Yes;

            resourceViewOprIdSummaryBar = _resourceViewOprIdSummaryBar;
        }

        return resourceViewOprIdSummaryBar;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewProdUnitId</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewProdUnitId(NoYes _resourceViewProdUnitId = resourceViewProdUnitId)
    {
        if (resourceViewProdUnitId != _resourceViewProdUnitId)
        {
            resourceViewGroupingChanged = NoYes::Yes;

            resourceViewProdUnitId      = _resourceViewProdUnitId;
        }

        return resourceViewProdUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewRefId</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewRefId(NoYes _resourceViewRefId = resourceViewRefId)
    {
        if (resourceViewRefId != _resourceViewRefId)
        {
            resourceViewGroupingChanged = NoYes::Yes;

            resourceViewRefId           = _resourceViewRefId;
        }

        return resourceViewRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewRefStatus</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewRefStatus(NoYes _resourceViewRefStatus = resourceViewRefStatus)
    {
        if (resourceViewRefStatus != _resourceViewRefStatus)
        {
            resourceViewGroupingChanged = NoYes::Yes;

            resourceViewRefStatus       = _resourceViewRefStatus;
        }

        return resourceViewRefStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewWrkCtrGroupId</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewWrkCtrGroupId(NoYes _resourceViewWrkCtrGroupId = resourceViewWrkCtrGroupId)
    {
        if (resourceViewWrkCtrGroupId != _resourceViewWrkCtrGroupId)
        {
            resourceViewGroupingChanged    = NoYes::Yes;
            resourceViewWrkCtrGroupId      = _resourceViewWrkCtrGroupId;
        }

        return resourceViewWrkCtrGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewWrkCtrId</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewWrkCtrId(NoYes _resourceViewWrkCtrId = resourceViewWrkCtrId)
    {
        if (resourceViewWrkCtrId != _resourceViewWrkCtrId)
        {
            resourceViewGroupingChanged = NoYes::Yes;

            resourceViewWrkCtrId        = _resourceViewWrkCtrId;
        }

        return resourceViewWrkCtrId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceViewWrkCtrIdCapacityBar</Name>
				<Source><![CDATA[
    public NoYes parmResourceViewWrkCtrIdCapacityBar(NoYes _resourceViewWrkCtrIdCapacityBar = resourceViewWrkCtrIdCapacityBar)
    {
        if (resourceViewWrkCtrIdCapacityBar != _resourceViewWrkCtrIdCapacityBar)
        {
            resourceViewGroupingChanged     = NoYes::Yes;

            resourceViewWrkCtrIdCapacityBar = _resourceViewWrkCtrIdCapacityBar;
        }

        return resourceViewWrkCtrIdCapacityBar;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowOperationNum</Name>
				<Source><![CDATA[
    internal NoYes parmShowOperationNum(NoYes _showOperationNum = showOperationNum)
    {
        showOperationNum = _showOperationNum;

        return showOperationNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowRouteJobType</Name>
				<Source><![CDATA[
    internal NoYes parmShowRouteJobType(NoYes _showRouteJobType = showRouteJobType)
    {
        showRouteJobType = _showRouteJobType;

        return showRouteJobType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowResource</Name>
				<Source><![CDATA[
    internal NoYes parmShowResource(NoYes _showResource = showResource)
    {
        showResource = _showResource;

        return showResource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowStartEndDateTime</Name>
				<Source><![CDATA[
    internal NoYes parmShowStartEndDateTime(NoYes _showStartEndDateTime = showStartEndDateTime)
    {
        showStartEndDateTime = _showStartEndDateTime;

        return showStartEndDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetChangedValues</Name>
				<Source><![CDATA[
    protected void resetChangedValues()
    {
        super();

        mustReloadData                          = NoYes::No;

        // current view
        currentViewChanged                      = NoYes::No;

        // order view
        orderViewGroupingChanged                = NoYes::No;
        orderViewInitiallyCollapsedChanged      = NoYes::No;

        // resource view
        resourceViewGroupingChanged             = NoYes::No;
        resourceViewInitiallyCollapsedChanged   = NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the form that contains the view options for the work center Gantt to the user.
    /// </summary>
    protected void runForm()
    {
        Args    args = new Args(formstr(ganttWrkCtrView));
        FormRun formRun;
        args.caller(this);

        formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.detach();
        formRun.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        boolean  ret;
        Integer  version = conpeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = packedClass;
                ret = true;
                break;

            default:
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GanttView_WrkCtr construct()
    {
        return new GanttView_WrkCtr();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        #define.ganttClient('ganttClient')

        GanttClient_WrkCtr  ganttClient;
        GanttView_WrkCtr    ganttView;

        if (!args || !args.caller())
        {
            throw error(strfmt("@SYS53926", classstr(GanttView_WrkCtr)));
        }

        if (args.caller() is FormRun)
        {
            if (!SysFormRun::hasMethod(args.caller(), #ganttClient))
            {
                throw error(strfmt("@SYS73945",args.caller().name(), #ganttClient));
            }

            ganttClient = args.caller().ganttClient();
        }
        else
        {
            ganttClient = args.caller();
        }

        ganttView = ganttClient.parmGanttView();

        ganttView.runForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newGanttClient</Name>
				<Source><![CDATA[
    public static GanttView_WrkCtr newGanttClient(GanttClient_WrkCtr _ganttClient)
    {
        GanttView_WrkCtr ganttView = GanttView_WrkCtr::construct();
        ganttView.parmGanttClient(_ganttClient);

        return ganttView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>