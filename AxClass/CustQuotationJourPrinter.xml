<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustQuotationJourPrinter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustQuotationJourPrinter</c> class is responsible for printing a report for the <c>CustQuotationJour</c> table.
/// </summary>
public class CustQuotationJourPrinter
{
    protected CustQuotationJour custQuotationJour;
    protected SalesQuotationEditLinesForm salesQuotationEditLines;
    protected RecordSortedList journalList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromCustQuotationJour</Name>
				<Source><![CDATA[
	/// <summary>
    /// Creates an instance of the <c>CustQuotationJourPrinter</c> class for printing a <c>CustQuotationJour</c> record.
    /// </summary>
    /// <param name = "_salesQuotationEditLines">A <c>SalesQuotationEditLinesForm</c> object containing the parameters.</param>
    /// <param name = "_custQuotationJour">A <c>CustQuotationJour</c> record for which the report should be printed.</param>
    /// <returns>An instance of the <c>CustQuotationJourPrinter</c> class.</returns>
    public static CustQuotationJourPrinter newFromCustQuotationJour(SalesQuotationEditLinesForm _salesQuotationEditLines, CustQuotationJour _custQuotationJour)
    {
        CustQuotationJourPrinter custQuotationJourPrinter = new CustQuotationJourPrinter();
        custQuotationJourPrinter.custQuotationJour = _custQuotationJour;
        custQuotationJourPrinter.salesQuotationEditLines = _salesQuotationEditLines;
        return custQuotationJourPrinter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromJournalList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CustQuotationJourPrinter</c> class for printing multiple <c>CustQuotationJourPrinter</c> records.
    /// </summary>
    /// <param name = "_salesQuotationEditLines">A <c>SalesQuotationEditLinesForm</c> object containing the parameters.</param>
    /// <param name = "_journalList">
    /// A <c>RecordSortedList</c> containing the <c>CustQuotationJourPrinter</c> records to be printed.
    /// </param>
    /// <returns>An instance of the <c>CustQuotationJourPrinter</c> class.</returns>
    public static CustQuotationJourPrinter newFromJournalList(SalesQuotationEditLinesForm _salesQuotationEditLines, RecordSortedList _journalList)
    {
        CustQuotationJourPrinter custQuotationJourPrinter = new CustQuotationJourPrinter();
        custQuotationJourPrinter.salesQuotationEditLines = _salesQuotationEditLines;
        custQuotationJourPrinter.journalList = _journalList;
        return custQuotationJourPrinter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>print</Name>
				<Source><![CDATA[
	/// <summary>
    /// Initializes and runs the menuitem for printing the report.
    /// </summary>
    public void print()
    {
        Args args = this.constructQuotationReportArgs();
        MenuFunction salesQuotationMenu = this.constructQuotationReportMenuItem();
        salesQuotationMenu.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructQuotationReportMenuItem</Name>
				<Source><![CDATA[
	/// <summary>
    /// Constructs an appropriate menu item for printing the report.
    /// </summary>
    /// <returns>The constructed menu item.</returns>
    protected MenuFunction constructQuotationReportMenuItem()
    {
        if (this.isProjectQuotation())
        {
            return new MenuFunction(menuitemOutputStr(PSAQuotationsPrint), MenuItemType::Output);
        }

        return new MenuFunction(menuitemOutputStr(SalesQuotation),MenuItemType::Output);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructQuotationReportArgs</Name>
				<Source><![CDATA[
	/// <summary>
    /// Constructs the arguments to be passed to the report.
    /// </summary>
    /// <returns>The constructed <c>Args</c> object.</returns>
    protected Args constructQuotationReportArgs()
    {
        Args args = new Args();
        args.caller(salesQuotationEditLines);
        
        if (journalList)
        {
            args.object(journalList);
        }
        else
        {
            args.record(custQuotationJour);
        }

        if (this.isProjectQuotation())
        {
            args.parm(enum2Symbol(enumNum(Assessment), salesQuotationEditLines.parmPSAAssessment()));
        }

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjectQuotation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the quotation comes from a project.
    /// </summary>
    /// <returns>true if the quotation comes from a project; otherwise, false.</returns>
	protected boolean isProjectQuotation()
    {
        return isConfigurationkeyEnabled(configurationKeyNum(Project)) && salesQuotationEditLines.salesQuotationTable().QuotationType == QuotationType::Project;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>