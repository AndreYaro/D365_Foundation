<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResResourceSchedulingController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Resource scheduling controller for project, quotations or tasks.
/// </summary>
public class ResResourceSchedulingController
{
    private ActivityRecId activity;
    private ResSearchCriteria searchCriteria;
    private ResourceCategoryRecId resourceCategory;
    private utcdatetime startDateTime;
    private utcdatetime endDateTime;
    private int resourceCount;
    private boolean allowAssign;

    HierarchicalGridCommonControl resourceTeamHierarchicalGrid;
    ResProjTeamController   projTeamController;
    FormRun                 callerForm;
    Common                  record;
    Object                  object;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmResourceTeamControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set hierarchical grid control.
    /// </summary>
    /// <param name = "_resourceTeamHierarchicalGrid">Hierarchical grid control.</param>
    /// <returns>Hierarchical grid control.</returns>
    public HierarchicalGridCommonControl parmResourceTeamControl(HierarchicalGridCommonControl _resourceTeamHierarchicalGrid = resourceTeamHierarchicalGrid)
    {
        resourceTeamHierarchicalGrid = _resourceTeamHierarchicalGrid;
        return resourceTeamHierarchicalGrid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTeamController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set <c>ResProjectTeamController</c> object.
    /// </summary>
    /// <param name = "_projTeamController"><c>ResProjectTeamController</c> object.</param>
    /// <returns><c>ResProjectTeamController</c> object.</returns>
    public ResProjTeamController projTeamController(ResProjTeamController _projTeamController = projTeamController)
    {
        projTeamController = _projTeamController;
        return projTeamController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set caller form <c>FormRun</c> object.
    /// </summary>
    /// <param name = "_callerForm">Call form <c>FormRun</c> object.</param>
    /// <returns>Caller form <c>FormRun</c> object.</returns>
    public FormRun callerForm(FormRun _callerForm = callerForm)
    {
        callerForm = _callerForm;
        return callerForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>record</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set record.
    /// </summary>
    /// <param name = "_record">Record.</param>
    /// <returns>Record.</returns>
    public Common record(Common _record = record)
    {
        record = _record;
        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>object</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set object.
    /// </summary>
    /// <param name = "_object">Object.</param>
    /// <returns>Object.</returns>
    public Object object(Object _object = object)
    {
        object = _object;
        return object;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the resource start date/time.
    /// </summary>
    /// <param name = "_startDateTime">Planned start date/time of the resource.</param>
    /// <returns>Planned start date/time.</returns>
    public utcdatetime startDateTime(utcdatetime _startDateTime = startDateTime)
    {
        startDateTime = _startDateTime;
        return startDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the resource end date/time.
    /// </summary>
    /// <param name = "_endDateTime">Planned end date/time of the resource.</param>
    /// <returns>Planned end date/time.</returns>
    public utcdatetime endDateTime(utcdatetime _endDateTime = endDateTime)
    {
        endDateTime = _endDateTime;
        return endDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the resource category record identifier.
    /// </summary>
    /// <param name = "_resourceCategory">Resource category record identifier.</param>
    /// <returns>Resource category value.</returns>
    public ResourceCategoryRecId resourceCategory(ResourceCategoryRecId _resourceCategory = resourceCategory)
    {
        resourceCategory = _resourceCategory;
        return resourceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the expected number of resources to book.
    /// </summary>
    /// <param name = "_resourceCount">Resource count.</param>
    /// <returns>Resource count value.</returns>
    public int resourceCount(int _resourceCount = resourceCount)
    {
        resourceCount = _resourceCount;
        return resourceCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the affected activity record identifier.
    /// </summary>
    /// <param name = "_activity">Activity record identifier.</param>
    /// <returns>Activity record identifier value.</returns>
    public ActivityRecId activity(ActivityRecId _activity = activity)
    {
        activity = _activity;
        return activity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>searchCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the resource search criteria.
    /// </summary>
    /// <param name = "_searchCriteria">Resource search criteria.</param>
    /// <returns>Resource search criteria.</returns>
    public ResSearchCriteria searchCriteria(ResSearchCriteria _searchCriteria = searchCriteria)
    {
        searchCriteria = _searchCriteria;
        return searchCriteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllowAssign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets whether the user is allowed to assign resource in <c>ResResourceFulfillment</c> form.
    /// </summary>
    /// <param name = "_allowAssign">Boolean to indicates whether the user is allowed to assign resource.</param>
    /// <returns>true if user is allowed to assign and approve resources; otherwise false.</returns>
    public boolean parmAllowAssign(boolean _allowAssign = allowAssign)
    {
        allowAssign = _allowAssign;
        return allowAssign;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookResources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launches activity resource booking form.
    /// </summary>
    /// <param name = "_selectedProjId">Project Id.</param>
    /// <returns>true when the operation succeeds. Otherwise, false.</returns>
    public boolean bookResources(ProjId _selectedProjId)
    {
        this.selectionsReady += eventhandler(this.updateSessionContextForGrid);
        return this.showForm(menuitemdisplaystr(ResActivityResourceBooking), _selectedProjId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignResource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launches resource requests fulfillment form to view and assign resource.
    /// </summary>
    /// <returns>true when the operation succeeds. Otherwise, false.</returns>
    public boolean assignResource()
    {
        this.selectionsReady += eventhandler(this.updateSessionContextForGrid);
        return this.showForm(menuitemdisplaystr(ResViewResourceFulfillment));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewContextId</Name>
				<Source><![CDATA[
    private str createNewContextId()
    {
        return strfmt('%1', newguid());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSessionContextForGrid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update context session for the project team hierarchical grid control on <c>ProjTable</c> form.
    /// </summary>
    /// <param name = "_controller">The <c>ResResourceSchedulingController</c> object.</param>
    public void updateSessionContextForGrid(ResResourceSchedulingController _controller)
    {
        if (_controller.resourceTeamHierarchicalGrid)
        {
            HierarchicalGridCommonControl hierarchicalGrid = _controller.resourceTeamHierarchicalGrid;
            ResourceTeamHGridSessionContext sessionContext = hierarchicalGrid.parmSessionContext();
            str contextId = this.createNewContextId();
            sessionContext.parmHGContextId(contextId);
            hierarchicalGrid.parmSessionContext(sessionContext);
            _controller.resourceTeamHierarchicalGrid = hierarchicalGrid;

            List dsList;
            ListEnumerator dsListEnumerator;
            FormDataSource formDS;
            FormRun formRun = _controller.CallerForm();
            if (formRun && (strCmp(formRun.name(), formStr(ProjTable)) == 0))
            {
                dsList = formRun.rootFormDataSources();

                if (dsList && dsList.elements() > 0)
                {
                    dsListEnumerator = dsList.getEnumerator();

                    while (dsListEnumerator.moveNext())
                    {
                        formDS = dsListEnumerator.current();
                        if (formDS.table() == tableNum(ProjTable) || formDS.table() == tableNum(PSAProjSchedRole))
                        {
                            formDS.research(true);
                            break;
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSessionContextProjId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set session context for the project team hierarchical grid control on <c>ProjTable</c> form.
    /// </summary>
    /// <param name = "_projId">Project Id.</param>
    /// <param name = "_newContextId">create new contextId.</param>
    public void setSessionContextProjId(ProjId _projId, boolean _newContextId = false)
    {
        ResourceTeamHGridSessionContext sessionContext = ResourceTeamHGridSessionContext::construct();
        sessionContext.parmProjId(_projId);
        if (_newContextId)
        {
            str contextId = this.createNewContextId();
            sessionContext.parmHGContextId(contextId);
        }
        resourceTeamHierarchicalGrid.parmSessionContext(sessionContext);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addResourceBooking</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launch <c>ResProjAddResourceBooking</c> form to book resource to project team.
    /// </summary>
    /// <param name = "_selectedProjId">Project Id.</param>
    public void addResourceBooking(ProjId _selectedProjId)
    {
        this.selectionsReady += eventhandler(this.updateSessionContextForGrid);
        this.showForm(menuitemdisplaystr(ResProjAddResourceBookingMenuItem), _selectedProjId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addResourceClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launch <c>ResProjAddResource</c> form to add resource.
    /// </summary>
    /// <param name = "_selectedProjId">Project Id.</param>
    public void addResourceClicked(ProjId _selectedProjId)
    {
        this.selectionsReady += eventhandler(this.updateSessionContextForGrid);
        this.showForm(menuitemdisplaystr(ResProjAddResource), _selectedProjId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editResourceClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launch <c>ResProjEditResource</c> from to edit activity resource.
    /// </summary>
    /// <param name = "_activityResource">Activity resource rec Id.</param>
    /// <returns></returns>
    public void editResourceClicked(activityresourcerecid _activityResource)
    {
        this.selectionsReady += eventhandler(this.updateSessionContextForGrid);
        PSAProjSchedRole resourceActivityRecord;

        if (_activityResource)
        {
            resourceActivityRecord = PSAProjSchedRole::findByRecId(_activityResource);
        }
        if (resourceActivityRecord)
        {
            Args formArgs = new Args();
            formArgs.caller(this);
            formArgs.record(resourceActivityRecord);
            new MenuFunction(menuitemdisplaystr(ResProjEditResource), MenuItemType::Display).run(formArgs);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewBookingDetailsClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launch <c>ResProjBookingDetailsView</c> form to view resource booking details.
    /// </summary>
    /// <param name = "_selectedProjId">Project Id.</param>
    public void viewBookingDetailsClicked(ProjId _selectedProjId)
    {
        this.selectionsReady += eventhandler(this.updateSessionContextForGrid);
        this.showForm(menuitemdisplaystr(ResProjBookingDetailsView), _selectedProjId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launches the form behind the specified display menu item.
    /// </summary>
    /// <param name = "_menuItemName">Display menu item to launch.</param>
    /// <param name = "_selectedProjId">Selected project identifier.</param>
    /// <returns>True when the operation succeeds; otherwise, false.</returns>
    private boolean showForm(str _menuItemName, ProjId _selectedProjId = null)
    {
        if (_selectedProjId)
        {
            this.ProjTeamController(ResProjTeamController::getInstanceFromProjId(_selectedProjId));
        }

        Args formArgs = new Args();
        formArgs.caller(this);

        new MenuFunction(_menuItemName, MenuItemType::Display).run(formArgs);
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resProjAddResource_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of ResProjAddResource form.
    /// </summary>
    [FormEventHandler(formstr(ResProjAddResource), FormEventType::Closing)]
    public static void resProjAddResource_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        if (formRun.closedOk())
        {
            ResResourceSchedulingController control = formRun.SchedulingController();
            control.selectionsReady(control);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resProjEditResource_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of ResProjEditResource form.
    /// </summary>
    [FormEventHandler(formstr(ResProjEditResource), FormEventType::Closing)]
    public static void resProjEditResource_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        if (formRun.closedOk())
        {
            ResResourceSchedulingController control = formRun.SchedulingController();
            control.selectionsReady(control);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resProjBookingDetailsView_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of ResProjBookingDetailsView form.
    /// </summary>
    [FormEventHandler(formstr(ResProjBookingDetailsView), FormEventType::Closing)]
    public static void resProjBookingDetailsView_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        ResResourceSchedulingController control = formRun.SchedulingController();
        control.selectionsReady(control);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionsReady</Name>
				<Source><![CDATA[
    /// <summary>
    /// Raised when resources selections have been made.
    /// </summary>
    /// <param name = "_setting">Resource scheduling controller object.</param>
    delegate void selectionsReady(ResResourceSchedulingController _setting)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>resActivityResourceBooking_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of ResActivityResourceBooking form.
    /// </summary>
    [FormEventHandler(formstr(ResActivityResourceBooking), FormEventType::Closing)]
    public static void resActivityResourceBooking_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        ResResourceSchedulingController control = formRun.schedulingController();
        control.selectionsReady(control);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resResourceFulfillment_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of ResResourceFulfillment form.
    /// </summary>
    [FormEventHandler(formstr(ResResourceFulfillment), FormEventType::Closing)]
    public static void resResourceFulfillment_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        ResResourceSchedulingController control = formRun.schedulingController();
        control.selectionsReady(control);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resProjAddResourceBooking_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of ResProjAddResourceBooking form.
    /// </summary>
    [FormEventHandler(formstr(ResProjAddResourceBooking), FormEventType::Closing)]
    public static void resProjAddResourceBooking_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        ResResourceSchedulingController control = formRun.schedulingController();
        control.selectionsReady(control);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of Resource scheduling controller.
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of Resource scheduling controller.
    /// </summary>
    /// <returns>Instance of <c>ResResourceSchedulingController</c>.</returns>
    public static ResResourceSchedulingController construct()
    {
        ResResourceSchedulingController controller = new ResResourceSchedulingController();
        return controller;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>