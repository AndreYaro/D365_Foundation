<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayPFReportDataSZV64</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RPayPFReportDataSZV64 extends RPayPFReportDataSZV6
{
    KeySum  monthFundSum;
    #RPayPFReportSZV64
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initDataStrucuture</Name>
				<Source><![CDATA[
    protected void initDataStrucuture()
    {
        super();
        monthFundSum   = KeySum::construct(1, 5);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert(container _conValue)
    {
        container tmpCon;
        super(_conValue);

        switch (conpeek(_conValue, 1))
        {
            case #MonthFundAmountDS:
                tmpCon = condel(_conValue, 1, 1);
                this.insertMonthFundAmount(tmpCon);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertMonthFundAmount</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void insertMonthFundAmount(container _conValue)
    {
        container conKeys;
        container conValue;

        if (conlen(_conValue) > 0)
        {
            conKeys  = conpeek(_conValue, 1);
            conValue = conpeek(_conValue, 2);

            monthFundSum.updateNow(conKeys, conValue);

            if (conlen(conKeys) >= 2)
            {
                monthFundSum.updateNow([conpeek(conKeys, 1), conpeek(conKeys, 2)], conValue);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>iterator</Name>
				<Source><![CDATA[
    public IRPayPFReportDataIterator iterator(container _initIteratorValue)
    {
        IRPayPFReportDataIterator iterator;
        container tmpCon;

        iterator = super(_initIteratorValue);

        switch (conpeek(_initIteratorValue, 1))
        {
            case #MonthFundAmountDS:
                tmpCon = condel(_initIteratorValue, 1, 1);

                iterator = RPayPFReportDataIteratorSZV64::createAsMonthFund(monthFundSum);

                iterator.find(tmpCon);

                break;
        }

        return iterator;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>