<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendNettingRuleExecutionPairCurrencyCode</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CustVendNettingRuleExecutionPairCurrencyCode implements INettingRuleCurrencycodeProvide
{
    private CustVendNettingRuleExecutionPairCurrencyCodeRange currencyCodeRange;
    private CurrencyCode currencyCode;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrencyCodeRange</Name>
				<Source><![CDATA[
    public CustVendNettingRuleExecutionPairCurrencyCodeRange getCurrencyCodeRange()
    {
        return currencyCodeRange;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode getCurrencyCode()
    {
        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static CustVendNettingRuleExecutionPairCurrencyCode construct(CurrencyCode _currencyCode, CustVendNettingRuleCriteriaNettingOperator _operator)
    {
        CustVendNettingRuleExecutionPairCurrencyCode pairCurencyCode = new CustVendNettingRuleExecutionPairCurrencyCode();
        pairCurencyCode.currencyCode = _currencyCode;
        pairCurencyCode.currencyCodeRange = CustVendNettingRuleExecutionPairCurrencyCode::determineCurrencyCodeRange(_currencyCode, _operator);

        return pairCurencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineCurrencyCodeRange</Name>
				<Source><![CDATA[
    private static CustVendNettingRuleExecutionPairCurrencyCodeRange determineCurrencyCodeRange(CurrencyCode _currencyCode, CustVendNettingRuleCriteriaNettingOperator _operator)
    {
        CustVendNettingRuleExecutionPairCurrencyCodeRange range = CustVendNettingRuleExecutionPairCurrencyCodeRange::All;
        if (_currencyCode)
        {
            switch (_operator)
            {
                case CustVendNettingRuleCriteriaNettingOperator::Eq:
                    range = CustVendNettingRuleExecutionPairCurrencyCodeRange::Eq;
                    break;
                case CustVendNettingRuleCriteriaNettingOperator::Neq:
                    range = CustVendNettingRuleExecutionPairCurrencyCodeRange::Neq;
                    break;
                default:
                    break;
            }
        }
        return range;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>