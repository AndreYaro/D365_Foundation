<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionDynamicDefaultAccountDataEntityResolver</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>DimensionDynamicDefaultAccountDataEntityResolver</c> class resolves data entity dynamic default account values.
/// </summary>
[
    System.ComponentModel.Composition.ExportMetadataAttribute("DimensionSFKType", extendedtypestr(DimensionDynamicDefaultAccount)),
    System.ComponentModel.Composition.ExportAttribute("Microsoft.Dynamics.AX.DimensionDataEntitySFKFieldResolver")
]
class DimensionDynamicDefaultAccountDataEntityResolver extends DimensionDataEntitySFKFieldResolver
{
    // Default SecondaryField suffix name
    public const FieldName custVendFieldSuffixName = 'SecondaryType';

    private FieldName custVendFieldName;
    private boolean isEnumValueSet;
    private boolean isEnumCustVendValueSet;
    private DimensionAccountType enumValue;
    private ModuleInventCustVend custVend = ModuleInventCustVend::Cust;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(Common _entity)
    {
        isEnumValueSet = false;
        isEnumCustVendValueSet = false;

        this.setCustVendFieldName();

        super(_entity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnumValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the enumeration value associated with the dynamic default account.
    /// </summary>
    /// <returns>The value of the enumeration.</returns>
    private DimensionAccountType getEnumValue()
    {
        // This code cannot short-circuit based on whether or not enumValue is zero since
        // the most common case is LedgerJournalACType::Account, which has value zero. If
        // the separate bool is not used for tracking whether or not the enum value is set,
        // then when the type is account it will not short-circuit and every call will
        // re-lookup the value leading to performance degradation.
        if (!isEnumValueSet)
        {
            TableName dimensionEntityName = tableid2name(dimensionBuffer.TableId);
            FieldId fieldId = fieldname2id(dimensionBuffer.TableId, this.parmSFKFieldName());

            if (this.parmSFKFieldName() && fieldId != 0)
            {
                DictDataEntityField dataEntityFieldEDT = new DictDataEntityField(
                    dimensionBuffer.TableId,
                    fieldId);
                FieldName enumFieldName = dataEntityFieldEDT.dynamicDimensionEnumerationField();
                enumValue = dimensionBuffer.getFieldValue(enumFieldName);
                isEnumValueSet = true;
            }
        }

        return enumValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getenumName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the Enum associated with the dynamic default account.
    /// </summary>
    /// <returns>The Enum name.</returns>
    private EnumName getenumName()
    {
        EnumName    enumName;
        TableName   dimensionEntityName = tableid2name(dimensionBuffer.TableId);
        FieldId     fieldId = fieldname2id(dimensionBuffer.TableId, this.parmSFKFieldName());

        if (this.parmSFKFieldName() && fieldId != 0)
        {
            DictDataEntityField dataEntityFieldEDT = new DictDataEntityField(
                    dimensionBuffer.TableId,
                    fieldId);
            FieldName enumFieldName = dataEntityFieldEDT.dynamicDimensionEnumerationField();

            SysDictField sysDictField = sysDictField::findFieldByName(dimensionEntityName, enumFieldName);

            if (sysDictField)
            {
                enumName = enumId2Name(sysDictField.enumId());
            }
        }

        return enumName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModuleValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the secondary <c>ModuleInventCustVend</c> value associated with the dynamic default account.
    /// </summary>
    /// <returns>The enumeration value.</returns>
    private ModuleInventCustVend getModuleValue()
    {
        if (!isEnumCustVendValueSet)
        {
            TableName dimensionEntityName = tableid2name(dimensionBuffer.TableId);
            FieldId fieldId = fieldname2id(dimensionBuffer.TableId, this.parmSFKFieldName());

            if (this.parmSFKFieldName() && fieldId != 0)
            {
                DictDataEntityField dataEntityFieldEDT = new DictDataEntityField(
                    dimensionBuffer.TableId,
                    fieldId);
                FieldName enumFieldName = dataEntityFieldEDT.dynamicDimensionEnumerationField();
                enumValue = dimensionBuffer.getFieldValue(enumFieldName);
                isEnumCustVendValueSet = true;
            }
        }

        return custVend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustVendFieldName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FieldName parmCustVendFieldName(FieldName _custVendFieldName = custVendFieldName)
    {
        custVendFieldName = _custVendFieldName;

        return custVendFieldName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustVendFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the name of the field that holds the secondary dynamic default enum value.
    /// </summary>
    private void setCustVendFieldName()
    {
        TableName dimensionEntityName = tableid2name(dimensionBuffer.TableId);
        FieldId fieldId = fieldname2id(dimensionBuffer.TableId, this.parmSFKFieldName());

        if (this.parmSFKFieldName() && fieldId != 0)
        {
            DictDataEntityField dataEntityFieldEDT = new DictDataEntityField(
                    dimensionBuffer.TableId,
                    fieldId);
            FieldName enumFieldName = dataEntityFieldEDT.dynamicDimensionEnumerationField();

            if (enumFieldName)
            {
                custVendFieldName = enumFieldName + custVendFieldSuffixName;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResolver</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an instance of the <c>DimensionDynamicDefaultAccountResolver</c> class.
    /// </summary>
    /// <returns>The new instance of the <c>DimensionDynamicDefaultAccountResolver</c> class.</returns>
    public DimensionResolver getResolver()
    {
        DimensionDynamicDefaultAccountResolver dimensionDynamicDefaultAccountResolver =
            DimensionDynamicDefaultAccountResolver::newResolver(
                this.displayValue,
                this.getEnumValue(),
                this.getCompanyValue(),
                this.getEnumName(),
                this.getModuleValue());

        return dimensionDynamicDefaultAccountResolver;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>