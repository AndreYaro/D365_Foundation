<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPackingSlipDP_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesPackingSlipDP))]
public final class SalesPackingSlipDP_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeSalesPackingSlipLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a sales packing slip line.
    /// </summary>
    /// <param name = "_salesPackingSlipHeaderTmp">
    /// A <c>SalesPackingSlipHeaderTmp</c> record which is the sales packing slip header.
    /// </param>
    /// <param name = "_packingSlipLineSelection">
    /// A <c>SalesPackingSlipDPPackingSlipLineQuerySelection</c> object which the sales packing slip line should be initialized from.
    /// </param>
    /// <returns>
    /// The initialized <c>SalesPackingSlipDetailsTmp</c> sales packing slip line record.
    /// </returns>
    protected SalesPackingSlipDetailsTmp initializeSalesPackingSlipLine(
        SalesPackingSlipHeaderTmp _salesPackingSlipHeaderTmp,
        SalesPackingSlipDPPackingSlipLineQuerySelection _packingSlipLineSelection)
    {
        SalesPackingSlipDetailsTmp salesPackingSlipTmp = next initializeSalesPackingSlipLine(_salesPackingSlipHeaderTmp, _packingSlipLineSelection);

        if (conFind(FreeNotesOnDocumentsConstants::DocuOnFormularAllLine, this.parmCustFormletterDocument().DocuOnPackingSlip))
        {
            DocuRefSearch docuRefSearch = DocuRefSearch::newTypeIdAndRestriction(
                _packingSlipLineSelection.parmCustPackingSlipTrans(),
                this.parmCustFormletterDocument().DocuTypePackingSlip,
                DocuRestriction::External);

            if (docuRefSearch)
            {
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceIT00041, funcName());
            }

            salesPackingSlipTmp.Notes = Docu::concatDocuRefNotes(docuRefSearch);
        }

        return salesPackingSlipTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeSalesPackingSlipHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a sales packing slip header.
    /// </summary>
    /// <returns>
    /// The initialized <c>SalesPackingSlipHeaderTmp</c> sales packing slip header record.
    /// </returns>
    protected SalesPackingSlipHeaderTmp initializeSalesPackingSlipHeader()
    {
        SalesPackingSlipHeaderTmp salesPackingSlipHeaderTmp = next initializeSalesPackingSlipHeader();

        if (conFind(FreeNotesOnDocumentsConstants::DocuOnFormularAllHead, this.parmCustFormletterDocument().DocuOnPackingSlip))
        {
            DocuRefSearch docuRefSearch = DocuRefSearch::newTypeIdAndRestriction(
                this.parmCustPackingSlipJour(),
                this.parmCustFormletterDocument().DocuTypePackingSlip,
                DocuRestriction::External);

            if (docuRefSearch)
            {
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceIT00041, funcName());
            }

            salesPackingSlipHeaderTmp.MainNotes = Docu::concatDocuRefNotes(docuRefSearch);
        }

        return salesPackingSlipHeaderTmp;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>