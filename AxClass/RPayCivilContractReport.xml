<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayCivilContractReport</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RPayCivilContractReport extends RunBase
{
    ComWordDocument_RU      wordDocument;

    RPayCivilContract       rPayCivilContract;
    RHRMEmplTable           emplTable;
#Address_RU

    #define.ContractTypeName("ContractTypeName")
    #define.ContractNum("ContractNum")
    #define.City("City")
    #define.ContractDate("ContractDate")
    #define.CompanyName("CompanyName")
    #define.ReprTitleName("ReprTitleName")
    #define.ReprReason("ReprReason")
    #define.EmplName("EmplName")
    #define.WorkScope("WorkScope")
    #define.StartDate("StartDate")
    #define.EndDate("EndDate")
    #define.Amount("Amount")
    #define.AmountInWords("AmountInWords")
    #define.CompanyName2("CompanyName2")
    #define.CompanyAddress("CompanyAddress")
    #define.CompanyINN("CompanyINN")
    #define.CompanyKPP("CompanyKPP")
    #define.BankName("BankName")
    #define.BankCorrAccount("BankCorrAccount")
    #define.BankBIC("BankBIC")
    #define.BankAccountNum("BankAccountNum")
    #define.ReprFIO("ReprFIO")
    #define.EmplLastName("EmplLastName")
    #define.EmplFirstName("EmplFirstName")
    #define.EmplMiddleName("EmplMiddleName")
    #define.EmplBirthDate("EmplBirthDate")
    #define.EmplINN("EmplINN")
    #define.EmplINNPF("EmplINNPF")
    #define.IdentityCardSeries("IdentityCardSeries")
    #define.IdentityCardNumber("IdentityCardNumber")
    #define.IdentityCardIssued("IdentityCardIssued")
    #define.EmplPhone("EmplPhone")
    #define.EmplAddress("EmplAddress")
    #define.Separators(" ")

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillDocument</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void fillDocument()
    {
        CompanyInfo                     companyInfo             = CompanyInfo::find();
        BankAccountTable                bankAccountTable        = BankAccountTable::find(companyInfo.Bank);
        BankGroup                       bankGroup               = BankGroup::find(bankAccountTable.BankGroupId);
        LogisticsPostalAddress          companyAddress          = companyInfo::find().postalAddress();
        LogisticsAddressStatename       addressState            = companyAddress.stateFullName_RU();
        LogisticsAddressCityRecId       addressTownId           = companyAddress.CityRecId;
        LogisticsAddressDistrictRecId   addressDistId           = companyAddress.District;
        RNumDateInWordConverter         rNumDateInWordConverter = RNumDateInWordConverter::construct();
        RHRMPersonTable                 personTable             = emplTable.personTable();
        boolean                         isRU                    = LogisticsPostalAddressUtility::isCountryRegionRU(companyAddress.CountryRegionId);
        str addressCity;

        if (addressTownId)
        {
            if (isRU)
            {
                addressCity = LogisticsAddressCity::find_RU(addressTownId).addrTypeName_RU() + #Separators + LogisticsAddressCity::find_RU(addressTownId).Description;
            }
            else
            {
                addressCity = companyAddress.City;
            }
        }

        if (addressDistId)
        {
            if (isRU)
            {
                addressCity = LogisticsAddressDistrict::find_RU(addressDistId).addrTypeName_RU() + #Separators + LogisticsAddressDistrict::find_RU(addressDistId).Description;
            }
            else
            {
                addressCity = LogisticsAddressDistrict::find_RU(addressDistId).Description;
            }
        }

        wordDocument.insertValue(#ContractTypeName,     rPayCivilContract.rPayCivilContractType().CivilContractTypeName);

        if (rPayCivilContract.ContractNum)
        {
            wordDocument.insertValue(#ContractNum,      "@SYS2060" + ' ' + rPayCivilContract.ContractNum);
        }

        wordDocument.insertValue(#City,                 addressCity ?
                                                        addressCity :
                                                        addressState);
        wordDocument.insertValue(#ContractDate,         rPayCivilContract.ContractDate);
        wordDocument.insertValue(#CompanyName,          companyInfo.Name);
        wordDocument.insertValue(#ReprTitleName,        rPayCivilContract.ReprTitleName);
        wordDocument.insertValue(#ReprReason,           rPayCivilContract.ReprReason);
        wordDocument.insertValue(#EmplName,             personTable.fio());
        wordDocument.tableInsertValue(1, 1, rPayCivilContract.WorkScope, #WorkScope);
        wordDocument.insertValue(#StartDate,            rPayCivilContract.StartDate);
        wordDocument.insertValue(#EndDate,              rPayCivilContract.EndDate);
        wordDocument.insertValue(#Amount,               Num2Str(rPayCivilContract.Amount, 4, 2, 2, 3));
        wordDocument.insertValue(#AmountInWords,        rNumDateInWordConverter.numeralsToCurrency(rPayCivilContract.Amount));

        wordDocument.insertValue(#CompanyName2,         companyInfo.Name);
        wordDocument.insertValue(#CompanyAddress,       companyInfo.postalAddress().getAddressAsLine_RU());
        wordDocument.insertValue(#CompanyINN,           CompanyInfoHelper::partyINN_RU(companyInfo));
        wordDocument.insertValue(#CompanyKPP,           CompanyInfoHelper::partyKPP_RU(companyInfo));
        wordDocument.insertValue(#BankName,             bankGroup.Name);
        wordDocument.insertValue(#BankCorrAccount,      bankAccountTable.CorrAccount_W);
        wordDocument.insertValue(#BankBIC,              bankGroup.BankBIC_RU);
        wordDocument.insertValue(#BankAccountNum,       bankAccountTable.AccountNum);
        wordDocument.insertValue(#ReprFIO,              rPayCivilContract.ReprName);

        wordDocument.insertValue(#EmplLastName,         personTable.dirPersonName().LastName);
        wordDocument.insertValue(#EmplFirstName,        personTable.dirPersonName().FirstName);
        wordDocument.insertValue(#EmplMiddleName,       personTable.dirPersonName().MiddleName);
        wordDocument.insertValue(#EmplBirthDate,        personTable.hcmPersonPrivateDetails().BirthDate);
        wordDocument.insertValue(#EmplINN,              emplTable.payINN());
        wordDocument.insertValue(#EmplINNPF,            emplTable.payPFRINN());
        wordDocument.insertValue(#IdentityCardSeries,   personTable.IdentityCardSeries);
        wordDocument.insertValue(#IdentityCardNumber,   personTable.IdentityCardNumber);
        wordDocument.insertValue(#IdentityCardIssued,   strFmt("@SYS26868",
                                                               personTable.IdentityCardIssueDate,
                                                               personTable.IdentityCardIssueBy));
        wordDocument.insertValue(#EmplPhone,            personTable.hcmWorker().phone());
        wordDocument.insertValue(#EmplAddress,          personTable.hcmWorker().DirPerson().primaryAddress());
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeDocument</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected boolean makeDocument(boolean _visible = false)
    {
        #define.templatePostfix('.dot')
        FilePath                templateFile = resourceStr(RPayCivilContractReport) + #templatePostfix;
        ResourceNode            resNode = SysResource::getResourceNode(resourceStr(RPayCivilContractReport));
        resNode.AOTload();

        templateFile = SysResource::saveToTempFile(resNode, false, templateFile);

        if (! WinAPI::fileExists(templateFile))
            throw error(strFmt("@GLS106466", templateFile));

        wordDocument = new ComWordDocument_RU();

        if (! wordDocument.newFile(templateFile, false))
            return false;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (this.makeDocument())
        {
            this.fillDocument();
            wordDocument.unlinkFields();
            wordDocument.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCivilContractTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setCivilContractTable(RPayCivilContract _rPayCivilContract)
    {
        rPayCivilContract       = _rPayCivilContract;
        emplTable               = RHRMEmplTable::find(_rPayCivilContract.EmplId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ClassDescription description()
    {
        return "@RUP2556";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RPayCivilContractReport rPayCivilContractReport;

        if (  ! _args
           || _args.dataset() != tablenum(rPayCivilContract)
           || ! _args.record())
        {
            throw error("@SYS59121");
        }
        rPayCivilContractReport = new RPayCivilContractReport();
        rPayCivilContractReport.setCivilContractTable(_args.record());
        rPayCivilContractReport.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>