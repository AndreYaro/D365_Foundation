<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSiteTableAllRelationExpansion_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventSiteTableAllRelationExpansionFactory_CN</c> class is table relation expansion.
/// </summary>
public class InventSiteTableAllRelationExpansion_CN
{
    private FieldId relationControllingCodeFieldId;
    private FieldId codeControlledRelationFieldId;
    private FieldId siteIdFieldId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInventSiteTableAllSiteRelationExpansion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>InventSiteTableAllRelationExpansion_CN</c> class.
    /// </summary>
    /// <param name = "_relationControllingCodeFieldId">
    /// The field ID of code field controlling the content of the relation field on the table.
    /// </param>
    /// <param name = "_codeControlledRelationFieldId">
    /// The field ID of relation field controlled by the code field on the table.
    /// </param>
    /// <param name = "_siteIdFieldId">
    /// The field ID of field where the relation value is stored
    /// when the code field has the value of <c>InventSiteCode_CN::Table</c>.
    /// </param>
    /// <returns>
    /// An instance of the <c>InventSiteTableAllRelationExpansion_CN</c> class.
    /// </returns>
    public static InventSiteTableAllRelationExpansion_CN createInventSiteTableAllSiteRelationExpansion(
        FieldId _relationControllingCodeFieldId,
        FieldId _codeControlledRelationFieldId,
        FieldId _siteIdFieldId)
    {
        InventSiteTableAllRelationExpansion_CN inventSiteTableAllSiteRelationExpansion = new InventSiteTableAllRelationExpansion_CN();
        inventSiteTableAllSiteRelationExpansion.initializeFieldIds(_relationControllingCodeFieldId, _codeControlledRelationFieldId, _siteIdFieldId);

        return inventSiteTableAllSiteRelationExpansion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFieldIds</Name>
				<Source><![CDATA[
    private void initializeFieldIds(
        FieldId _relationControllingCodeFieldId,
        FieldId _codeControlledRelationFieldId,
        FieldId _siteIdFieldId)
    {
        relationControllingCodeFieldId  = _relationControllingCodeFieldId;
        codeControlledRelationFieldId   = _codeControlledRelationFieldId;
        siteIdFieldId                   = _siteIdFieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defaults code and relation fields.
    /// </summary>
    /// <param name = "_InventSiteCodeMappedTable">
    /// The table buffer where defaulting should be executed.
    /// </param>
    /// <param name = "_mappedTableFieldId">
    /// The table field ID of the field that should be defaulted.
    /// </param>
    /// <remarks>
    /// The method should be invoked from a method on the table map called from defaultField method on the mapped table.
    /// </remarks>
    public void defaultField(Common _InventSiteCodeMappedTable, FieldId _mappedTableFieldId)
    {
        switch (_mappedTableFieldId)
        {
            case relationControllingCodeFieldId:
                this.defaultRelationControllingCode(_InventSiteCodeMappedTable);
                break;
            case codeControlledRelationFieldId:
                this.defaultCodeControlledRelation(_InventSiteCodeMappedTable);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRelationControllingCode</Name>
				<Source><![CDATA[
    private void defaultRelationControllingCode(Common _InventSiteCodeMappedTable)
    {
        this.defaultRelationControllingCodeForSpecificCategory(_InventSiteCodeMappedTable, siteIdFieldId, relationControllingCodeFieldId, InventSiteCode_CN::Table);

        this.defaultRelationControllingCodeForAllCategory(_InventSiteCodeMappedTable, siteIdFieldId, relationControllingCodeFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRelationControllingCodeForSpecificCategory</Name>
				<Source><![CDATA[
    private void defaultRelationControllingCodeForSpecificCategory(Common _InventSiteCodeMappedTable, FieldId _siteIdFieldId, FieldId _relationControllingCodeFieldId, InventSiteCode_CN _specificInventSiteCode)
    {
        if (_InventSiteCodeMappedTable.(_siteIdFieldId))
        {
            if (_InventSiteCodeMappedTable.isFieldSet(_siteIdFieldId))
            {
                _InventSiteCodeMappedTable.(_relationControllingCodeFieldId) = _specificInventSiteCode;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRelationControllingCodeForAllCategory</Name>
				<Source><![CDATA[
    private void defaultRelationControllingCodeForAllCategory(Common _InventSiteCodeMappedTable, FieldId _siteIdFieldId, FieldId _relationControllingCodeFieldId)
    {
        if (!_InventSiteCodeMappedTable.(_siteIdFieldId))
        {
            if ((!_InventSiteCodeMappedTable.RecId && _InventSiteCodeMappedTable.(_relationControllingCodeFieldId) != TableGroupAll::All) ||
                _InventSiteCodeMappedTable.isFieldSet(_siteIdFieldId))
            {
                _InventSiteCodeMappedTable.(_relationControllingCodeFieldId) = InventSiteCode_CN::All;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCodeControlledRelation</Name>
				<Source><![CDATA[
    private void defaultCodeControlledRelation(Common _InventSiteCodeMappedTable)
    {
        this.defaultCodeControlledRelationForSpecificCategory(_InventSiteCodeMappedTable, siteIdFieldId, codeControlledRelationFieldId);

        this.defaultCodeControlledRelationForAllCategory(_InventSiteCodeMappedTable, siteIdFieldId, codeControlledRelationFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCodeControlledRelationForSpecificCategory</Name>
				<Source><![CDATA[
    private void defaultCodeControlledRelationForSpecificCategory(Common _InventSiteCodeMappedTable, FieldId _siteIdFieldId, FieldId _codeControlledRelationFieldId)
    {
        if (_InventSiteCodeMappedTable.(_siteIdFieldId))
        {
            if (_InventSiteCodeMappedTable.isFieldSet(_siteIdFieldId))
            {
                _InventSiteCodeMappedTable.(_codeControlledRelationFieldId) = _InventSiteCodeMappedTable.(_siteIdFieldId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCodeControlledRelationForAllCategory</Name>
				<Source><![CDATA[
    private void defaultCodeControlledRelationForAllCategory(Common _InventSiteCodeMappedTable, FieldId _siteIdFieldId, FieldId _codeControlledRelationFieldId)
    {
        if (!_InventSiteCodeMappedTable.(_siteIdFieldId))
        {
            if (_InventSiteCodeMappedTable.isFieldSet(_siteIdFieldId))
            {
                _InventSiteCodeMappedTable.(_codeControlledRelationFieldId) = '';
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>relationControllingCodeDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the defaulting dependencies for the relation controlling code field.
    /// </summary>
    /// <returns>
    /// A container with defaulting dependencies for the relation controlling code field.
    /// </returns>
    /// <remarks>
    /// The method should be invoked from a method on the table map called from getDefaultingDependencies method on the mapped table.
    /// </remarks>
    public container relationControllingCodeDefaultingDependencies()
    {
        return [relationControllingCodeFieldId, [siteIdFieldId]];
    }

]]></Source>
			</Method>
			<Method>
				<Name>codeControlledRelationDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the defaulting dependencies for the code controlled relation field.
    /// </summary>
    /// <returns>
    /// A container with defaulting dependencies for the code controlled relation field.
    /// </returns>
    /// <remarks>
    /// The method should be invoked from a method on the table map called from getDefaultingDependencies method on the mapped table.
    /// </remarks>
    public container codeControlledRelationDefaultingDependencies()
    {
        return [codeControlledRelationFieldId, [siteIdFieldId]];
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableCategoryIdDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the string defining how to compute a computed field which contains the relation value
    /// when the code field has the value of <c>InventSiteCode_CN::Table</c>.
    /// </summary>
    /// <param name = "_entityName">
    /// The name of the entity which contains the computed field.
    /// </param>
    /// <param name = "_dataSourceName">
    /// The name of the data source which contains the code and relation fields.
    /// </param>
    /// <returns>
    /// A string to compute the relation value when the code field has the value of <c>InventSiteCode_CN::Table</c>.
    /// </returns>
    /// <remarks>
    /// The method should be invoked from a method on the table map called from
    /// a computed column definition method on the mapped table.
    /// </remarks>
    public str tableCategoryIdDefinition(TableName _entityName, DataSourceName _dataSourceName)
    {
        DictDataEntityField relationControllingCodeDictField    = new DictDataEntityField(tableName2Id(_entityName), relationControllingCodeFieldId);
        DictDataEntityField codeControlledRelationDictField     = new DictDataEntityField(tableName2Id(_entityName), codeControlledRelationFieldId);

        if (!relationControllingCodeDictField || !codeControlledRelationDictField)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        return SysComputedColumn::codeDependentRelation(_entityName,
                                                        _dataSourceName,
                                                        relationControllingCodeDictField.dataField(),
                                                        InventSiteCode_CN::Table,
                                                        codeControlledRelationDictField.dataField(),
                                                        '');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
