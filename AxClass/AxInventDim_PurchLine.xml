<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxInventDim_PurchLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxInventDim_PurchLine extends AxInventDim
{
    AxPurchLine axPurchLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axPurchLine</Name>
				<Source><![CDATA[
    public AxPurchLine axPurchLine(AxPurchLine _axPurchLine = axPurchLine)
    {
        axPurchLine = _axPurchLine;
        return axPurchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
    protected int inputStatus(InternalExternal _inputStatus = axPurchLine.callInputStatus())
    {
        if (axPurchLine)
        {
            return axPurchLine.callInputStatus(_inputStatus);
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modify</Name>
				<Source><![CDATA[
    public void modify()
    {
        axPurchLine.modify();
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts or updates the current record for the class.
    /// </summary>
    /// <remarks>
    ///    Execute this method on the AxBC class after new values are assigned to fields.The actual work to
    ///    save and update a record is performed in the <c>doSave</c> method, which is called by this method.
    /// </remarks>
    public void save()
    {
        axPurchLine.updateFromInventDim();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfigId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>ConfigId</c> parameter.
    /// </summary>
    public void setConfigId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, ConfigId)))
        {
            return;
        }

        super();

        axPurchLine.setInventTableRecordFields();

        if (axPurchLine.isInventTableRecordFieldsSet())
        {
            this.parmConfigId(axPurchLine.inventTableRecord().StandardConfigId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventBatchId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventBatchId</c> parameter.
    /// </summary>
    public void setInventBatchId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventBatchId)))
        {
            return;
        }

        super();

        axPurchLine.setReturnActionDefaultsRecordFields();

        if (axPurchLine.returnActionDefaultsRecord().inventDim().InventBatchId)
        {
            if (axPurchLine.isReturnActionDefaultsRecordFieldsSet())
            {
                this.parmInventBatchId(axPurchLine.returnActionDefaultsRecord().inventDim().InventBatchId);
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventColorId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventColorId</c> parameter.
    /// </summary>
    public void setInventColorId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventColorId)))
        {
            return;
        }

        super();

        axPurchLine.setInventTableRecordFields();

        if (axPurchLine.isInventTableRecordFieldsSet())
        {
            this.parmInventColorId(axPurchLine.inventTableRecord().StandardInventColorId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventVersionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventVersionId</c> parameter.
    /// </summary>
    public void setInventVersionId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventVersionId)))
        {
            return;
        }

        super();

        axPurchLine.setInventTableRecordFields();

        if (axPurchLine.isInventTableRecordFieldsSet())
        {
            this.parmInventVersionId(axPurchLine.inventTableRecord().StandardInventVersionId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventGtdId_RU</Name>
				<Source><![CDATA[
    public void setInventGtdId_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventGtdId_RU)))
        {
            return;
        }

        super();

        axPurchLine.setReturnActionDefaultsRecordFields();

        if (axPurchLine.returnActionDefaultsRecord().inventDim().InventGtdId_RU)
        {
            if (axPurchLine.isReturnActionDefaultsRecordFieldsSet())
            {
                this.parmInventGTDId_RU(axPurchLine.returnActionDefaultsRecord().inventDim().InventGtdId_RU);
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventLocationId</c> parameter.
    /// </summary>
    public void setInventLocationId()
    {
        InventDim   inventDimLocal;

        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventLocationId)))
        {
            return;
        }

        axPurchLine.setReturnActionDefaultsRecordFields();

        if (axPurchLine.returnActionDefaultsRecord().inventDim().InventLocationId)
        {
            if (axPurchLine.isReturnActionDefaultsRecordFieldsSet())
            {
                this.parmInventLocationId(axPurchLine.returnActionDefaultsRecord().inventDim().InventLocationId);
            }
            return;
        }

        axPurchLine.setInventTableRecordFields();
        axPurchLine.setAxPurchTableFields();
        this.setInventSiteId();

        if (axPurchLine.isInventTableRecordFieldsSet()  ||
            axPurchLine.isAxPurchTableFieldsSet()       ||
            (axPurchLine.axPurchTable().isFieldModified(fieldnum(PurchTable, InventLocationId)) && !axPurchLine.purchLine().isInvoiceMatched()))
        {
            inventDimLocal = InventDim::find(axPurchLine.parmInventDimId());
            if (this.parmInventSiteId())
            {
                inventDimLocal.InventSiteId = this.parmInventSiteId();
                inventDimLocal              = InventDim::findOrCreate(inventDimLocal);
            }
            this.parmInventLocationId(axPurchLine.inventTableRecord().purchInventLocationId(axPurchLine.axPurchTable().parmInventLocationId(),
                                                                                            inventDimLocal.InventDimId,
                                                                                            inventDimLocal.InventSiteId));
        }
		
        if (!this.parmInventLocationId() && EcoResDimensionGroupSetup::isWarehouseDimensionMandatoryForItem(axPurchLine.parmItemId()))
        {
            this.parmInventLocationId(InventFallbackWarehouse::transportWarehouse(this.parmInventSiteId()));
            if (!this.parmInventLocationId())
            {
                this.parmInventLocationId(InventParameters::find().FallbackInventLocationId);
                this.parmInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventOwnerId_RU</Name>
				<Source><![CDATA[
    public void setInventOwnerId_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventOwnerId_RU)))
        {
            return;
        }

        super();

        axPurchLine.setReturnActionDefaultsRecordFields();

        if (axPurchLine.returnActionDefaultsRecord().inventDim().InventOwnerId_RU)
        {
            if (axPurchLine.isReturnActionDefaultsRecordFieldsSet())
            {
                this.parmInventOwnerId_RU(axPurchLine.returnActionDefaultsRecord().inventDim().InventOwnerId_RU);
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventProfileId_RU</Name>
				<Source><![CDATA[
    public void setInventProfileId_RU()
    {
        AxPurchTable_RU     axPurchTable_RU;

        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventProfileId_RU)))
        {
            return;
        }

        super();

        if (!axPurchLine.parmItemId())
        {
            return;
        }

        axPurchLine.setReturnActionDefaultsRecordFields();

        if (axPurchLine.returnActionDefaultsRecord().inventDim().InventProfileId_RU)
        {
            if (axPurchLine.isReturnActionDefaultsRecordFieldsSet())
            {
                this.parmInventProfileId_RU(axPurchLine.returnActionDefaultsRecord().inventDim().InventProfileId_RU);
            }
            return;
        }

        axPurchLine.setAxPurchTableFields();

        axPurchTable_RU = axPurchLine.axPurchTable().axPurchTable_RU();
        if (axPurchLine.isAxPurchTableFieldsSet()       ||
            axPurchTable_RU.isFieldModified(fieldnum(PurchTable_RU, InventProfileId_RU)))
        {
            if (axPurchTable_RU.parmInventProfileId_RU())
            {
                this.parmInventProfileId_RU(axPurchTable_RU.parmInventProfileId_RU());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSerialId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSerialId</c> parameter.
    /// </summary>
    public void setInventSerialId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventSerialId)))
        {
            return;
        }

        super();

        axPurchLine.setReturnActionDefaultsRecordFields();

        if (axPurchLine.returnActionDefaultsRecord().inventDim().InventSerialId)
        {
            if (axPurchLine.isReturnActionDefaultsRecordFieldsSet())
            {
                this.parmInventSerialId(axPurchLine.returnActionDefaultsRecord().inventDim().InventSerialId);
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSiteId</c> parameter.
    /// </summary>
    public void setInventSiteId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventSiteId)))
        {
            return;
        }

        axPurchLine.setReturnActionDefaultsRecordFields();

        if (axPurchLine.returnActionDefaultsRecord().inventDim().InventSiteId)
        {
            if (axPurchLine.isReturnActionDefaultsRecordFieldsSet())
            {
                this.parmInventSiteId(axPurchLine.returnActionDefaultsRecord().inventDim().InventSiteId);
            }
            return;
        }

        if (this.isFieldSet(fieldnum(InventDim,InventLocationId)))
        {
            this.parmInventSiteId(axPurchLine.inventTableRecord().purchInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId, this.parmInventDimId()));
        }

        if (!this.isFieldSet(fieldnum(InventDim,InventSiteId)))
        {
            axPurchLine.setInventTableRecordFields();
            axPurchLine.setAxPurchTableFields();

            if (axPurchLine.isInventTableRecordFieldsSet()  ||
                axPurchLine.isAxPurchTableFieldsSet()       ||
                (axPurchLine.axPurchTable().isFieldModified(fieldnum(PurchTable, InventSiteId)) && !axPurchLine.purchLine().isInvoiceMatched()))
            {
                this.parmInventSiteId(axPurchLine.inventTableRecord().purchInventSiteId(axPurchLine.axPurchTable().parmInventSiteId(), axPurchLine.parmInventDimId()));
            }
        }

        if (!this.parmInventSiteId())
        {
            this.parmInventSiteId(InventParameters::find().fallbackSiteId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSizeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSizeId</c> parameter.
    /// </summary>
    public void setInventSizeId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventSizeId)))
        {
            return;
        }

        super();

        axPurchLine.setInventTableRecordFields();

        if (axPurchLine.isInventTableRecordFieldsSet())
        {
            this.parmInventSizeId(axPurchLine.inventTableRecord().StandardInventSizeId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventStyleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>InventStyleId</c> field.
    /// </summary>
    public void setInventStyleId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventStyleId)))
        {
            return;
        }

        super();

        axPurchLine.setInventTableRecordFields();

        if (axPurchLine.isInventTableRecordFieldsSet())
        {
            this.parmInventStyleId(axPurchLine.inventTableRecord().StandardInventStyleId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWMSLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>WMSLocationId</c> parameter.
    /// </summary>
    public void setWMSLocationId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, wmsLocationId)))
        {
            return;
        }

        super();

        axPurchLine.setReturnActionDefaultsRecordFields();

        if (axPurchLine.returnActionDefaultsRecord().inventDim().wmsLocationId)
        {
            if (axPurchLine.isReturnActionDefaultsRecordFieldsSet())
            {
                this.parmWMSLocationId(axPurchLine.returnActionDefaultsRecord().inventDim().wmsLocationId);
            }
            return;
        }

        if(this.isFieldSet(fieldNum(InventDim, InventLocationId)))
        {
            InventDim inventDimLocal = this.currentRecord();

            if(this.parmInventSiteId())
            {
                inventDimLocal.InventSiteId     = this.parmInventSiteId();
            }
            inventDimLocal.InventLocationId = this.parmInventLocationId();
            inventDimLocal                  = InventDim::findOrCreate(inventDimLocal);

            InventDirection     inventDirection;

            if(this.axPurchLine().parmPurchQty() > 0)
            {
                inventDirection = InventDirection::Receipt;
            }
            else
            {
                inventDirection = InventDirection::Issue;
            }

            if (this.mustDefaultItemLocation(inventDimLocal))
            {
                WMSLocationId wmsLocationId = WMSLocation::defaultItemLocation(this.axPurchLine().parmItemId(), inventDirection, inventDimLocal).wmsLocationId;

                this.parmWMSLocationId(wmsLocationId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustDefaultItemLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the default location should be set.
    /// </summary>
    /// <param name = "_inventDim">The inventory dimension record.</param>
    /// <returns>true if the default location should be set; false if the account is not valid.</returns>
    [Replaceable]
    protected boolean mustDefaultItemLocation(InventDim _inventDim)
    {
        return !WHSInventEnabled::exist(this.axPurchLine().parmItemId()) || !InventLocation::find(_inventDim.InventLocationId).whsEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAxPurchLine</Name>
				<Source><![CDATA[
    public static AxInventDim_PurchLine newAxPurchLine(AxPurchLine _axPurchLine)
    {
        AxInventDim_PurchLine   axInventDim_PurchLine;

        axInventDim_PurchLine = new AxInventDim_PurchLine();
        axInventDim_PurchLine.axPurchLine(_axPurchLine);
        return axInventDim_PurchLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>