<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchLineHandler_Pmf</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchLineHandler_Pmf
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedFieldPost</Name>
				<Source><![CDATA[
    [PostHandlerFor(tableStr(PurchLine), tableMethodStr(PurchLine, modifiedField))]
    public static void modifiedFieldPost(XppPrePostArgs _args)
    {
        fieldId     fieldId;
        PurchLine   purchLine;

        fieldId      = _args.getArg(identifierStr(_fieldId));
        purchLine    = _args.getThis();

        switch (fieldId)
        {
            case fieldNum(PurchLine, PurchReceivedNow):
                purchLine.pdsCWPurchReceivedNowConversion(false);
                break;
            case fieldnum(PurchLine, PdsCWInventReceivedNow):
                purchLine.pdsCWPurchReceivedNowConversion(true);
                purchLine.setInventReceivedNow();
                break;

            case fieldnum(PurchLine, PdsCWQty):
                if (PdsGlobal::pdsIsCWItem(purchLine.ItemId))
                {
                    purchLine.pdsCWQtyConversion();
                    PurchLine::modifyPurchQty(purchLine, purchLine.inventDim());
                }
                break;

            case fieldnum(PurchLine, ItemId):
                if (PdsGlobal::pdsIsCWItem(purchLine.ItemId))
                {
                    purchLine.pdsCWQtyConversion();
                    PurchLine::modifyPurchQty(purchLine,purchLine.inventDim());
                }
                else
                {
                    purchLine.PdsCWQty = 0;
                    purchLine.PdsCWInventReceivedNow = 0;
                    purchLine.PdsCWRemainInventFinancial = 0;
                    purchLine.PdsCWRemainInventPhysical = 0;
                }
                break;
            case fieldNum(PurchLine, PurchUnit):
                purchLine.pdsCWQtyConversion();
                purchLine.pdsCWPurchReceivedNowConversion(true);
                purchLine.purchUnitModified();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldPost</Name>
				<Source><![CDATA[
    [PostHandlerFor(tableStr(PurchLine), tableMethodStr(PurchLine, validateField))]
    /// <summary>
    /// Post event handler for PurchLine.validateFied() method.
    /// Validates that catch weight enabled items can only be used with purchase lines
    /// of type Purchase or Return. Validates also that, if the item is set up for approved
    /// vendor list control, the purchase vendor is on the approved vendor list, emitting
    /// warnings or errors accordingly.
    /// </summary>
    /// <param name="_args">
    /// Event arguments object.
    /// </param>
    public static void validateFieldPost(XppPrePostArgs _args)
    {
        PurchLine   purchLine;
        FieldId     fieldId;
        boolean     ok;

        purchLine   = _args.getThis();
        fieldId     = _args.getArgNum(1);

        ok          = _args.getReturnValue();

        if (ok
            &&  fieldId == fieldNum(PurchLine, ItemId)
            &&  PdsGlobal::pdsIsCWItem(purchLine.ItemId))
        {
            if (!purchLine.purchTable().isReturnOrPurchaseOrder())
            {
                ok = checkFailed("@PDS122");
            }
        }

        if (ok
            &&  #PdsApprovedVendorListEnabled
            &&  (   fieldId == fieldnum(PurchLine, ItemId)
                 || fieldId == fieldnum(PurchLine, DeliveryDate)))
        {
            ok = purchLine.pdsCheckApprovedVendorList();
        }

        _args.setReturnValue(ok);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>