<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardBreakDownFinalProcessRunner</Name>
	<SourceCode>
		<Declaration><![CDATA[
[CreditCardBreakDownPaymentStatusAttribute(CreditCardPaymentStatus::Finished)]
internal final class CreditCardBreakDownFinalProcessRunner extends CreditCardBreakDownProcessAbsRunner
{
    private CreditCardPaymentInfoContainer salesTablePacked;
    private CreditCardPaymentInfoContainer custInvoiceJourPacked;
    private CreditCardPaymentInfoContainer mCRCustPaymTablePacked;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new(CreditCardPaymentInfoContainer _salesTablePacked,
        CreditCardPaymentInfoContainer _custInvoiceJourPacked,
        CreditCardPaymentInfoContainer _mCRCustPaymTablePacked,
        CreditCardPaymentOperation _creditCardPaymentOperation,
        CreditCardPaymentBreakDownExecutionContextMode _creditCardPaymentBreakDownExecutionContextMode)
    {
        salesTablePacked = _salesTablePacked;
        custInvoiceJourPacked = _custInvoiceJourPacked;
        mCRCustPaymTablePacked = _mCRCustPaymTablePacked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static ICreditCardBreakDownProcessRun construct(
        CreditCardPaymentInfoContainer _salesTablePacked,
        CreditCardPaymentInfoContainer _custInvoiceJourPacked,
        CreditCardPaymentInfoContainer _mCRCustPaymTablePacked,
        CreditCardPaymentOperation _creditCardPaymentOperation,
        CreditCardPaymentBreakDownExecutionContextMode _creditCardPaymentBreakDownExecutionContextMode)
    {
        return new CreditCardBreakDownFinalProcessRunner(_salesTablePacked, _custInvoiceJourPacked, _mCRCustPaymTablePacked, _creditCardPaymentOperation, _creditCardPaymentBreakDownExecutionContextMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public boolean run()
    {
        // should do nothing, satisfies the runner
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRunMode</Name>
				<Source><![CDATA[
    public CreditCardBreakDownExecutionRunMode getRunMode()
    {
        return CreditCardBreakDownExecutionRunMode::MarshallingExecution;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isIdempotencySupported</Name>
				<Source><![CDATA[
    public boolean isIdempotencySupported()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHashVal</Name>
				<Source><![CDATA[
    public CreditCardPaymentBreakDownExecutionHashVal getHashVal()
    {
        List strToHash = new List(Types::String);
        strToHash.addEnd(any2Str(classIdGet(this)));
        strToHash.addEnd(con2base64str(salesTablePacked));
        strToHash.addEnd(con2base64str(custInvoiceJourPacked));
        return CreditCardPaymentHashCalculator::calculateHash(strToHash);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTablePacked</Name>
				<Source><![CDATA[
    public container getSalesTablePacked()
    {
        return salesTablePacked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustInvoiceJourPacked</Name>
				<Source><![CDATA[
    public container getCustInvoiceJourPacked()
    {
        return custInvoiceJourPacked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMCRCustPaymTablePacked</Name>
				<Source><![CDATA[
    public container getMCRCustPaymTablePacked()
    {
        return conNull();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>