<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCostPurchIndirectData</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventCostPurchIndirectData extends InventCostIndirectData
{
    ItemId  itemId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
        public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        protected static InventCostPurchIndirectData construct()
    {
        return new InventCostPurchIndirectData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
        public static InventCostPurchIndirectData newParameters(
        InventTransOrigin               _inventTransOrigin,
        InventSiteId                    _inventSiteId,
        Qty                             _receivedQty,
        CostAmount                      _receivedCostAmount,
        InventItemCostGroupRollupList   _receivedCostGroupRollupList = null
        , boolean                       _stornoPhysical = false
        )
    {
        InventCostPurchIndirectData     purchIndirectData = InventCostPurchIndirectData::construct();
        Map                             itemCostGroupRollupListMap  = new Map(Types::String, Types::Class);

        purchIndirectData.parmItemId(_inventTransOrigin.ItemId);

        // Set the reference
        purchIndirectData.initReference(_inventTransOrigin.InventTransId,
                                       ProdTransRefType::InventTransId,
                                       true, // only physical purchase is expected
                                       _inventSiteId,
                                       _inventTransOrigin.InventTransId,
                                       _inventTransOrigin.inventMovement().defaultDimension()
                                       // <GEERU>
                                       , true
                                       , _stornoPhysical
                                       // </GEERU>
                                       );

        // Now build the map with the received items
        purchIndirectData.initItemCostGroupRollupListMap(
            purchIndirectData.parmItemId(),
            _receivedQty,
            _receivedCostAmount,
            _receivedCostGroupRollupList);

        return purchIndirectData;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>