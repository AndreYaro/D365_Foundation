<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCExportSalesCalcTax</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCExportSalesCalcTax</c> class calculates the tax for the sales order.
/// </summary>
/// <remarks>
///    This class can calculate the amount for partial order lines based on a specified delivery date of
///    the order line.
/// </remarks>
class BankLCExportSalesCalcTax extends SalesCalcTax_Trans
{
    BankLCSalesPurchQtyCategoryType salesPurchQtyCategory;
    TransDate                       deliveryDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmContract</Name>
				<Source><![CDATA[
        protected TradeTotalsIContract  parmContract()
    {
        return BankLCExportSalesTotalsTransContract::newFromSalesTable(salesTable, deliveryDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
        public TransDate parmDeliveryDate(
        TransDate _deliveryDate = deliveryDate)
    {
        deliveryDate = _deliveryDate;
        return deliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchQtyCategory</Name>
				<Source><![CDATA[
        public BankLCSalesPurchQtyCategoryType parmSalesPurchQtyCategory(
        BankLCSalesPurchQtyCategoryType _salesPurchQtyCategory = salesPurchQtyCategory)
    {
        salesPurchQtyCategory = _salesPurchQtyCategory;
        return salesPurchQtyCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves line quantity for the current line to be used for tax calculation.
    /// </summary>
    /// <returns>
    /// The line quantity.
    /// </returns>
    SalesQty transQty()
    {
        return new BankLCExportSalesQuantity(salesPurchQtyCategory).calcSalesQty(salesLine, specQty);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>