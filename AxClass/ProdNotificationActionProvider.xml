<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdNotificationActionProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>ProdNotificationActionProvider</c> class is the helper class that provides information of
///    actions pertaining to the notification rule
///    reports.
/// </summary>
public class ProdNotificationActionProvider
{
    private static Map mapMenuFunctionForFirstAction;
    private static Map mapMenuFunctionForSecondAction;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLabelForFirstAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Gets label for the first action of the notification rule
    /// </summary>
    /// <param name = "_notificationClassName">The class name of the notification rule</param>
    /// <returns>A label for the first action of the notification rule; otherwise, an empty sring</returns>
    public str getLabelForFirstAction(SysClassName _notificationClassName)
    {
        return (this.getMenuFunctionForFirstAction(_notificationClassName))
            ? this.getMenuFunctionForFirstAction(_notificationClassName).label()
            : '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLabelForSecondAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Gets label for the second action of the notification rule
    /// </summary>
    /// <param name = "_notificationClassName">The class name of the notification rule</param>
    /// <returns>A label for the first action of the notification rule; otherwise, an empty sring</returns>
    public str getLabelForSecondAction(SysClassName _notificationClassName)
    {
        return (this.getMenuFunctionForSecondAction(_notificationClassName))
            ? this.getMenuFunctionForSecondAction(_notificationClassName).label()
            : '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMenuFunctionForFirstAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Gets MenuFunction for the first action of the source notification rule
    /// </summary>
    /// <param name = "_notificationClassName">The class name of the source notification rule</param>
    /// <returns>The MenuFunction for the first action of the notification ruile, otherwise, a null value</returns>
    public MenuFunction getMenuFunctionForFirstAction(SysClassName _notificationClassName)
    {
        MenuFunction action;

        if (mapMenuFunctionForFirstAction.exists(_notificationClassName))
        {
            action =  mapMenuFunctionForFirstAction.lookup(_notificationClassName) as MenuFunction;
        }
        else
        {
            action = new MenuFunction(menuItemDisplayStr(ProdNotificationAffectedJobs), MenuItemType::Display);
            mapMenuFunctionForFirstAction.insert(_notificationClassName, action);
        }

        return action;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMenuFunctionForSecondAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Gets MenuFunction for the second action of the source notification rule
    /// </summary>
    /// <param name = "_notificationClassName">The class name of the source notification rule</param>
    /// <returns>The MenuFunction for the second action of the notification ruile, otherwise, a null value</returns>
    public MenuFunction getMenuFunctionForSecondAction(SysClassName _notificationClassName)
    {
        MenuFunction action;

        if (mapMenuFunctionForSecondAction.exists(_notificationClassName))
        {
            action =  mapMenuFunctionForSecondAction.lookup(_notificationClassName) as MenuFunction;
        }
        else
        {
            SysDictClass dictClass = new SysDictClass(className2Id(_notificationClassName));

            if (dictClass)
            {
                ProdINotificationRule notificationRule = dictClass.makeObject();
                action = notificationRule.getMenuFunction();

                mapMenuFunctionForSecondAction.insert(_notificationClassName, action);
            }
        }

        return action;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>ProdNotificationActionProvider</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>ProdNotificationActionProvider</c> class.
    /// </returns>
    public static ProdNotificationActionProvider construct()
    {
        mapMenuFunctionForFirstAction = new Map(Types::String, Types::Class);
        mapMenuFunctionForSecondAction = new Map(Types::String, Types::Class);

        return  new ProdNotificationActionProvider();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>