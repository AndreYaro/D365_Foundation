<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSOrderCommittedReservationBalanceGlobal</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSOrderCommittedReservationBalanceGlobal</c> class represents the global entry point to the
/// order-committed balances. It makes sure each company has its own dedicated order-committed balance instance.
/// It is also responsible for making sure that during balance commit, we create/modify order-committed reservations
/// in the context of the right company.
/// </summary>
internal final class WHSOrderCommittedReservationBalanceGlobal
{
    private static WHSOrderCommittedReservationBalanceGlobal instance;

    private Map orderCommittedReservationBalanceMap;  // Mapping DataAreaId -> instance of the WHSOrderCommittedReservationBalance class

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>orderCommittedReservationBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an instance of the order-committed reservation balance specific for provided company.
    /// </summary>
    /// <param name = "_dataAreaId">An identifier of the company.</param>
    /// <returns>An order-committed reservation balance instance.</returns>
    [Hookable(false)]
    internal WHSOrderCommittedReservationBalance orderCommittedReservationBalance(DataAreaId _dataAreaId = curext())
    {
        WHSOrderCommittedReservationBalance createdOrderCommittedReservationBalance;

        if (!orderCommittedReservationBalanceMap)
        {
            orderCommittedReservationBalanceMap = new Map(Types::String,Types::Class);
            createdOrderCommittedReservationBalance = new WHSOrderCommittedReservationBalance();
        }
        else if (!orderCommittedReservationBalanceMap.exists(_dataAreaId))
        {
            createdOrderCommittedReservationBalance = new WHSOrderCommittedReservationBalance();
        }

        if (createdOrderCommittedReservationBalance)
        {
            orderCommittedReservationBalanceMap.insert(_dataAreaId, createdOrderCommittedReservationBalance);
        }

        return createdOrderCommittedReservationBalance ? createdOrderCommittedReservationBalance : orderCommittedReservationBalanceMap.lookup(_dataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>commitBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts resulting balance into actual inventory transactions of physical reserved status.
    /// </summary>
    /// <remarks>
    /// Balance is reset to clean state as a result of execution.
    /// </remarks>
    [Hookable(false)]
    internal void commitBalance()
    {
        if (   !orderCommittedReservationBalanceMap
            || orderCommittedReservationBalanceMap.empty())
        {
            return;
        }

        MapEnumerator orderCommittedReservationBalanceMapEnumerator = orderCommittedReservationBalanceMap.getEnumerator();

        while (orderCommittedReservationBalanceMapEnumerator.moveNext())
        {
            DataAreaId dataAreaIdOfBalanceInstance = orderCommittedReservationBalanceMapEnumerator.currentKey();
            WHSOrderCommittedReservationBalance balanceInstance = orderCommittedReservationBalanceMapEnumerator.currentValue();

            if (dataAreaIdOfBalanceInstance && balanceInstance)
            {
                if (dataAreaIdOfBalanceInstance != curext())
                {
                    changecompany(dataAreaIdOfBalanceInstance)
                    {
                        balanceInstance.commitBalance();
                    }
                }
                else
                {
                    balanceInstance.commitBalance();
                }
            }
        }

        this.resetBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetBalance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void resetBalance()
    {
        orderCommittedReservationBalanceMap = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    private static void typeNew()
    {
        instance = new WHSOrderCommittedReservationBalanceGlobal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Singleton.
    /// </summary>
    /// <returns>Singleton instance.</returns>
    [Hookable(false)]
    internal static WHSOrderCommittedReservationBalanceGlobal instance()
    {
        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>