<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankPaymentByDateDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankPaymentByDateDP</c> class is the Report Data Provider class for the
/// <c>BankPaymentByDate</c> report.
/// </summary>
[SRSReportQuery(queryStr(BankPaymentByDate))]
public class BankPaymentByDateDP extends SrsReportDataProviderPreProcessTempDB
{
    private BankPaymentByDateTmp bankPaymentByDateTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBankPaymentByDate</Name>
				<Source><![CDATA[
    [SRSReportDataSet(tableStr(BankPaymentByDateTmp))]
    public BankPaymentByDateTmp getBankPaymentByDate()
    {
        select bankPaymentByDateTmp;
        return bankPaymentByDateTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps the fields from <c>BankPaymentByDate</c> query fields to
    /// the fields from <c>BankPaymentByDateTmp</c> table.
    /// </summary>
    public void processReport()
    {
        Query query = new Query(this.parmQuery());
        this.updateQueryForLedgerJournalTrans(query);
        QueryRun queryRun = new QueryRun(query);
        RecordInsertList bankPaymentByDateTmpRecords = new RecordInsertList(bankPaymentByDateTmp.TableId, true, true, true, true, true, bankPaymentByDateTmp);

        while (queryRun.next())
        {
            this.addRecordsFromQueryToList(queryRun, bankPaymentByDateTmpRecords);
        }

        query = new Query(this.parmQuery());
        this.updateQueryForBankChequeTable(query);
        queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            this.addRecordsFromQueryToList(queryRun, bankPaymentByDateTmpRecords);
        }

        bankPaymentByDateTmpRecords.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQueryForLedgerJournalTrans</Name>
				<Source><![CDATA[
    private void updateQueryForLedgerJournalTrans(Query _query)
    {
        QueryBuildDataSource bankAccountTransDS = _query.dataSourceTable(tableNum(BankAccountTrans));
        QueryBuildDataSource ledgerJournalTransDS = bankAccountTransDS.addDataSource(tableNum(LedgerJournalTrans));
        ledgerJournalTransDS.addlink(fieldNum(BankAccountTrans, SourceTableId), fieldNum(LedgerJournalTrans, TableId));
        ledgerJournalTransDS.addlink(fieldNum(BankAccountTrans, SourceRecId), fieldNum(LedgerJournalTrans, RecId));
        ledgerJournalTransDS.joinMode(JoinMode::InnerJoin);
        ledgerJournalTransDS.addSelectionField(fieldNum(LedgerJournalTrans, RecId));

        this.linkVendor(ledgerJournalTransDS);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQueryForBankChequeTable</Name>
				<Source><![CDATA[
    private void updateQueryForBankChequeTable(Query _query)
    {
        QueryBuildDataSource bankAccountTransDS = _query.dataSourceTable(tableNum(BankAccountTrans));
        QueryBuildRange bankAccountTransDSRange = bankAccountTransDS.addRange(fieldNum(BankAccountTrans, SourceTableId));
        bankAccountTransDSRange.value(SysQuery::valueNot(tableNum(LedgerJournalTrans)));

        QueryBuildDataSource bankChequeTableDS = bankAccountTransDS.addDataSource(tableNum(BankChequeTable));
        bankChequeTableDS.addlink(fieldNum(BankAccountTrans, SourceTableId), fieldNum(BankChequeTable, TableId));
        bankChequeTableDS.addlink(fieldNum(BankAccountTrans, SourceRecId), fieldNum(BankChequeTable, RecId));
        // Use OuterJoin to include other data source
        bankChequeTableDS.joinMode(JoinMode::OuterJoin);
        bankChequeTableDS.addSelectionField(fieldNum(BankChequeTable, RecId));

        QueryBuildDataSource ledgerJournalTransDS = bankChequeTableDS.addDataSource(tableNum(LedgerJournalTrans));
        ledgerJournalTransDS.addlink(fieldNum(BankChequeTable, SourceTableId), fieldNum(LedgerJournalTrans, TableId));
        ledgerJournalTransDS.addlink(fieldNum(BankChequeTable, SourceRecId), fieldNum(LedgerJournalTrans, RecId));
        ledgerJournalTransDS.joinMode(JoinMode::OuterJoin);
        ledgerJournalTransDS.addSelectionField(fieldNum(LedgerJournalTrans, RecId));

        this.linkVendor(ledgerJournalTransDS);
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkVendor</Name>
				<Source><![CDATA[
    private void linkVendor(QueryBuildDataSource _ledgerJournalTransDS)
    {
        QueryBuildDataSource vendTransDS = _ledgerJournalTransDS.addDataSource(tableNum(VendTrans));
        vendTransDS.addlink(fieldNum(LedgerJournalTrans, VendTransId), fieldNum(VendTrans, RecId));
        vendTransDS.joinMode(JoinMode::OuterJoin);
        vendTransDS.addSelectionField(fieldNum(VendTrans, AccountNum));

        QueryBuildDataSource vendTableDS = vendTransDS.addDataSource(tableNum(VendTable));
        vendTableDS.addlink(fieldNum(VendTrans, AccountNum), fieldNum(VendTable, AccountNum));
        vendTableDS.joinMode(JoinMode::OuterJoin);
        vendTableDS.addSelectionField(fieldNum(VendTable, RecId));

        QueryBuildDataSource dirPartyTableDS = vendTableDS.addDataSource(tableNum(DirPartyTable));
        dirPartyTableDS.addlink(fieldNum(VendTable, Party), fieldNum(DirPartyTable, RecId));
        dirPartyTableDS.joinMode(JoinMode::OuterJoin);
        dirPartyTableDS.addSelectionField(fieldNum(DirPartyTable, Name));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRecordsFromQueryToList</Name>
				<Source><![CDATA[
    private void addRecordsFromQueryToList(QueryRun _queryRun, RecordInsertList _recordInsertList)
    {
        BankAccountTable bankAccountTable = _queryRun.get(tableNum(BankAccountTable));

        bankPaymentByDateTmp.AccountID = bankAccountTable.AccountID;
        bankPaymentByDateTmp.BankName = bankAccountTable.Name;

        BankAccountTrans bankAccountTrans = _queryRun.get(tableNum(BankAccountTrans));
        bankPaymentByDateTmp.TransDate = bankAccountTrans.TransDate;
        bankPaymentByDateTmp.PaymReference = bankAccountTrans.PaymReference;
        bankPaymentByDateTmp.CurrencyCode = bankAccountTrans.CurrencyCode;
        bankPaymentByDateTmp.AmountCur = bankAccountTrans.AmountCur;
        bankPaymentByDateTmp.ChequeNum = bankAccountTrans.ChequeNum;
        bankPaymentByDateTmp.DepositNum = bankAccountTrans.DepositNum;
        bankPaymentByDateTmp.Cancel = bankAccountTrans.Cancel;

        VendTrans vendTrans = _queryRun.get(tableNum(VendTrans));
        bankPaymentByDateTmp.AccountNum = vendTrans.AccountNum;

        DirPartyTable dirPartyTable = _queryRun.get(tableNum(DirPartyTable));
        bankPaymentByDateTmp.VendName = dirPartyTable.Name;

        _recordInsertList.add(bankPaymentByDateTmp);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>