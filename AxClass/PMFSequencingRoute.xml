<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PMFSequencingRoute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>PMFSequencingRoute</c> provides a simple schedule for a planned route.
/// </summary>
/// <remarks>
/// This class is intended for use with rescheduling all operations on a route due to a sequencing change. The
/// resource utilization must have already been calculated by the Dynamics AX master scheduling logic.
/// </remarks>
class PMFSequencingRoute
{
    InventTransRefId        refId;
    RefRecId                planVersion;

    PMFSeqReqRouteChanges   change;
    ReqRoute                changeReqRoute;

    utcDateTime             minDateTime;
    utcDateTime             maxDateTime;

    WrkCtrScheduler_PmfSeq  scheduler;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the object variables and loads the planned operations in operation order.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// Thrown if <paramref name="_change"/> does not reference an operation on the planned route.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void init()
    {
        refId           = change.RefId;
        planVersion     = change.PlanVersion;
        changeReqRoute  = change.reqRoute();

        if (!changeReqRoute)
        {
            throw error(strFmt("@PSC763", refId));
        }

        change.SequencedOp = true;

        if (scheduler == null)
        {
            scheduler = WrkCtrScheduler_PmfSeq::construct();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
        maxDateTime   = DateTimeUtil::maxValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaxDateTime</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public utcDateTime parmMaxDateTime(utcDateTime _maxDateTime = maxDateTime)
    {
        maxDateTime = _maxDateTime;

        return maxDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMinDateTime</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public utcDateTime parmMinDateTime(utcDateTime _minDateTime = minDateTime)
    {
        minDateTime = _minDateTime;

        return minDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqRouteChange</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PMFSeqReqRouteChanges parmReqRouteChange(PMFSeqReqRouteChanges _change = change)
    {
        change = _change;

        return change;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmScheduler</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public WrkCtrScheduler_PmfSeq  parmScheduler(WrkCtrScheduler_PmfSeq _scheduler = scheduler)
    {
        scheduler = _scheduler;
        return scheduler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>planVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the master plan version ID.
    /// </summary>
    /// <returns>
    /// The master plan version ID.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RecId planVersion()
    {
        return planVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reqRoute</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the requirement route associated with the current sequencing run.
    /// </summary>
    /// <returns>
    ///     A buffer of the <c>ReqRoute</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ReqRoute reqRoute()
    {
        return changeReqRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>schedule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the scheduling changes for the planned route.
    /// </summary>
    /// <param name="_startDateTime">
    /// The minimum starting date/time (without timezone) for the sequenced operation.
    /// </param>
    /// <returns>
    /// <c>true</c>if scheduling suceeded; otherwise, <c>false</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean schedule(utcDateTime _startDateTime)
    {
        ReqPO                   reqPo;
        WrkCtrParmSchedule      parmSchedule;
        ReqPlanData             planData;

        this.init();

        reqPo = change.reqPO();

        planData = ReqPlanData::newReqPlanVersion(this.planVersion());

        parmSchedule = WrkCtrParmSchedule::newReqTransCoverage(
                          reqPo.reqTrans(),
                          reqPo,
                          planData,
                          false,
                          false);

        parmSchedule.parmKeepProductionUnit(true);

        parmSchedule.schedDirection(SchedDirection::Forward);
        parmSchedule.schedDate(planData.todaysdate());
        parmSchedule.schedTime(0);
        scheduler.addWrkCtrParmSchedule(parmSchedule);

        scheduler.run(this, _startDateTime);

        boolean schedulingErrorOccured = scheduler.schedulingErrorOccured();
        scheduler.reset();

        return !schedulingErrorOccured;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static PMFSequencingRoute construct()
    {
        return new PMFSequencingRoute();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSequencedOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>PMFSequencingRoute</c>.
    /// </summary>
    /// <param name="_change">
    /// The <c>PMFSeqReqRouteChanges</c> that is the sequenced operation for the planned route.
    /// </param>
    /// <returns>
    /// A new <c>PMFSequencingRoute</c> to use for scheduling the planned route in the new sequence.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PMFSequencingRoute newSequencedOperation(PMFSeqReqRouteChanges _change)
    {
        PMFSequencingRoute seqRoute = PMFSequencingRoute::construct();

        seqRoute.parmReqRouteChange(_change);

        return seqRoute;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>