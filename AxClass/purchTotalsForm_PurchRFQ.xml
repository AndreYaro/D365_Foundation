<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTotalsForm_PurchRFQ</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchTotalsForm_PurchRFQ extends PurchtotalsForm
{
    PurchRFQTotals      purchRFQTotals;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructTotals</Name>
				<Source><![CDATA[
    protected TradeTotalsBase constructTotals()
    {
        PurchRFQUpdate purchRFQUpdate = specQty;
        return PurchRFQTotals::construct(this.parmCallingTable(), purchRFQUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSelectionType</Name>
				<Source><![CDATA[
    public int updateSelectionType()
    {
        return enumnum(PurchRFQUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static purchTotalsForm_PurchRFQ  construct()
    {
        return new purchTotalsForm_PurchRFQ();
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalsTabCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the caption that is displayed on the Totals tab on the <c>PurchTotals</c> form.
    /// </summary>
    /// <returns>
    /// The caption that is displayed on the Totals tab on the <c>PurchTotals</c> form.
    /// </returns>
    public str totalsTabCaption()
    {
        if (callingTable.TableId == tablenum(PurchRFQReplyTable))
        {
            return "@SCM:RFQReplyTotals";
        }
        else
        {
            return "@SCM:RFQTotals";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchCOFINSTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>COFINS</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>COFINS</c> tax type.
    /// </returns>
    public TaxAmount purchCOFINSTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posCOFINSTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchCSLLTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>CSLL</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>CSLL</c> tax type.
    /// </returns>
    public TaxAmount purchCSLLTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posCSLLTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchICMSTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>ICMS</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>ICMS</c> tax type.
    /// </returns>
    public TaxAmount purchICMSTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posICMSTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchICMSSTTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>ICMS-ST</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>ICMS-ST</c> tax type.
    /// </returns>
    public TaxAmount purchICMSSTTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posICMSSTTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchICMSDiffTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>ICMS-Dif</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>ICMS-Dif</c> tax type.
    /// </returns>
    public TaxAmount purchICMSDiffTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posICMSDiffTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchImportTaxTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>ImportTax</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>ImportTax</c> tax type.
    /// </returns>
    public TaxAmount purchImportTaxTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posImportTaxTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchINSSRetainedTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>INSSRetained</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>INSSRetained</c> tax type.
    /// </returns>
    public TaxAmount purchINSSRetainedTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posRetainedINSSTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchINSSTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>INSS</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>INSS</c> tax type.
    /// </returns>
    public TaxAmount purchINSSTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posINSSTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchIPITotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>IPI</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>IPI</c> tax type.
    /// </returns>
    public TaxAmount purchIPITotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posIPITotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchIRRFTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>IRRF</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>IRRF</c> tax type.
    /// </returns>
    public TaxAmount purchIRRFTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posIRRFTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchISSTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>ISS</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>ISS</c> tax type.
    /// </returns>
    public TaxAmount purchISSTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posISSTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchPISTotal_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>PIS</c> tax type from the <c>displayFields</c> container.
    /// </summary>
    /// <returns>
    /// The value of the <c>PIS</c> tax type.
    /// </returns>
    public TaxAmount purchPISTotal_BR()
    {
        return conPeek(displayFields, TradeTotals::posPISTotal_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupFreightAmountMST_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>Freight</c> markup type in accounting currency.
    /// </summary>
    /// <returns>
    /// The value of the <c>Freight</c> markup type.
    /// </returns>
    public MarkupAmount markupFreightAmountMST_BR()
    {
        return conPeek(displayFields, TradeTotals::posMarkupFreight_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupInsuranceAmountMST_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>Insurance</c> markup type in accounting currency.
    /// </summary>
    /// <returns>
    /// The value of the <c>Insurance</c> markup type.
    /// </returns>
    public MarkupAmount markupInsuranceAmountMST_BR()
    {
        return conPeek(displayFields, TradeTotals::posMarkupInsurance_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupOthersAmountMST_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>Other</c> markup type in transaction currency.
    /// </summary>
    /// <returns>
    /// The value of the <c>Other</c> markup type.
    /// </returns>
    public MarkupAmount markupOthersAmountMST_BR()
    {
        return conPeek(displayFields, TradeTotals::posMarkupOther_BR());
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupTotalAmount_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the total markup value in the accounting currency.
    /// </summary>
    /// <returns>
    /// Total markup value.
    /// </returns>
    public MarkupSumPurch markupTotalAmount_BR()
    {
        return this.sumMarkUpValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTaxCurrencyCodeValue_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the currency code of the sales tax.
    /// </summary>
    /// <returns>
    /// The currency code of the sales tax.
    /// </returns>
    public CurrencyCode salesTaxCurrencyCodeValue_BR()
    {
        return conPeek(displayFields, TradeTotals::posSalesTaxCurrency_BR());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>