<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tax1099ReportController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>Tax1099ReportController</c> class is the controller class for the
/// <c>Tax1099Report</c>Microsoft SQL Server Reporting Services report.
/// </summary>
public class Tax1099ReportController extends SrsReportRunController implements BatchRetryable
{
    container c;
    str vendAccountFilter;
    str dateFilter;
    TransDate fromDate;
    TransDate toDate;
    boolean printerPaperSettingsInitialized;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();

        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceUS00003, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isRetryable()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    public void initFromArgs()
    {
        VendITax1099Ranges vendITax1099Ranges = this.parmArgs().caller();
        VendITax1099View vendITax1099View = this.parmArgs().caller();

        if (vendITax1099Ranges)
        {
            vendAccountFilter = vendITax1099Ranges.vendValueRange();
            dateFilter = vendITax1099Ranges.dateValueRange();
        }

        if (vendITax1099View)
        {
            fromDate = vendITax1099View.fromDate();
            toDate = vendITax1099View.toDate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        Tax1099ReportContract contract = this.parmReportContract().parmRdpContract() as Tax1099ReportContract;
        this.initFromArgs();
        this.setParamValues(contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParamValues</Name>
				<Source><![CDATA[
    public void setParamValues(Tax1099ReportContract _contract)
    {
        _contract.parmVendorRange(vendAccountFilter);
        _contract.parmDateRange(dateFilter);
        _contract.parmFromDate(fromDate);
        _contract.parmToDate(toDate);

        switch (_contract.parmTax1099Type())
        {
            case Tax1099Type::F1099INT :
                this.parmReportContract().parmReportName(ssrsReportStr(Tax1099Report, Tax1099INT));
                break;
            case Tax1099Type::F1099DIV :
                this.parmReportContract().parmReportName(ssrsReportStr(Tax1099Report, Tax1099DIV));
                break;
            case Tax1099Type::F1099MISC :
                this.parmReportContract().parmReportName(ssrsReportStr(Tax1099Report, Tax1099MISC));
                break;
            case Tax1099Type::F1099OID:
                this.parmReportContract().parmReportName(ssrsReportStr(Tax1099Report, Tax1099OID));
                break;
            case Tax1099Type::F1099G :
                this.parmReportContract().parmReportName(ssrsReportStr(Tax1099Report, Tax1099G));
                break;
            case Tax1099Type::F1099S:
                this.parmReportContract().parmReportName(ssrsReportStr(Tax1099Report, Tax1099S));
                break;
            case Tax1099Type::F1099NEC:
                this.parmReportContract().parmReportName(ssrsReportStr(Tax1099Report, Tax1099NEC));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the customized <c>Tax1099Report</c> SRS Report.
    /// </summary>
    /// <param name="_args">
    /// Args object.
    /// </param>
    public static void main(Args _args)
    {
        Tax1099ReportController controller = new Tax1099ReportController();

        controller.parmReportName(ssrsReportStr(Tax1099Report, Tax1099INT));
        controller.parmArgs(_args);
        controller.parmDialogCaption("@SYS329805");
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisableRefreshButton</Name>
				<Source><![CDATA[
    public boolean parmDisableRefreshButton(boolean _disableRefreshButton = disableRefreshButton)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportContract</Name>
				<Source><![CDATA[
    public SrsReportDataContract parmReportContract(SrsReportDataContract _reportContract = reportContract)
    {
        SrsReportDataContract ret;

        if (prmisDefault(_reportContract))
        {
            ret = super();
        }
        else
        {
            ret = super(_reportContract);
        }

        if (!printerPaperSettingsInitialized && ret.parmPrintSettings() != null)
        {
            SRSPrintDestinationSettings printDestinationSettings = ret.parmPrintSettings();

            printDestinationSettings.printMediumType(SRSPrintMediumType::Screen);
            printDestinationSettings.fileFormat(SRSReportFileFormat::PDF);

            int margin = 50;

            // Ensure that the PrinterPageSettings have the values required
            SRSPrinterPaperSettings printerPaperSettings = new SRSPrinterPaperSettings();
            printerPaperSettings.parmPageWidth(850);
            printerPaperSettings.parmPageHeight(1100);
            printerPaperSettings.parmMarginLeft(margin);
            printerPaperSettings.parmMarginRight(margin);
            printerPaperSettings.parmMarginTop(margin);

            // Set the printer paper settings
            printDestinationSettings.parmPrinterPaperSettings(printerPaperSettings);

            printerPaperSettingsInitialized = true;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>