<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjControlCalcInvest</Name>
	<SourceCode>
		<Declaration><![CDATA[
class   ProjControlCalcInvest
extends ProjControlCalc
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>eliminationAmountTurnover</Name>
				<Source><![CDATA[
    protected AmountMST eliminationAmountTurnover(ProjControlPeriodTable _projControlPeriod)
    {
        AmountMST ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>factor</Name>
				<Source><![CDATA[
    protected Factor factor(ProjControlPeriodTable _projControlPeriod)
    {
        Factor f = 0;

        return f;
    }

]]></Source>
			</Method>
			<Method>
				<Name>foreseablesLossesAmount</Name>
				<Source><![CDATA[
    public AmountMST foreseablesLossesAmount(ProjControlPeriodTable   _projControlPeriod)
    {
        return _projControlPeriod.totalTotalEstimateAccCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodUpdateColumnAccEstimateSecond</Name>
				<Source><![CDATA[
    public void periodUpdateColumnAccEstimateSecond(ProjControlPeriodTable  _projControlPeriodTable)
    {
        if (this.parmCalledFromCode())
        {
            projControlPeriodTableColumnAccEstimate.PLCostAccCost           = projControlColumnAccEstimatePrev.PLCostAccCost+this.parmAccruedCost();
        }
        else if (this.provisionForseeablesLosses(_projControlPeriodTable))
        {
            projControlPeriodTableColumnAccEstimate.PLCostAccCost           = projControlColumnAccEstimatePrev.PLCostAccCost+accGrossMarginTemp;
        }

        projControlPeriodTableColumnAccEstimate.WIPCostpriceAccruedCost = this.WIPCostpriceAccruedCost(projControlPeriodTableColumnAccEstimate,ProjEstimateColumn::Accumulated);

        this.calcTotals(projControlPeriodTableColumnAccEstimate,ProjEstimateColumn::Accumulated);
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodUpdateColumnEstimateSecond</Name>
				<Source><![CDATA[
    public void periodUpdateColumnEstimateSecond(ProjControlPeriodTable  _projControlPeriodTable)
    {
        if (this.parmCalledFromCode())
        {
            projControlPeriodTableColumnEstimate.PLCostAccCost   = this.parmAccruedCost();
        }
        else
        {
            projControlPeriodTableColumnEstimate.PLCostAccCost = projControlPeriodTableColumnAccEstimate.PLCostAccCost-
                                                                 projControlColumnAccEstimatePrev.PLCostAccCost;
        }

        projControlPeriodTableColumnEstimate.WIPCostpriceAccruedCost = this.WIPCostpriceAccruedCost(projControlPeriodTableColumnEstimate,ProjEstimateColumn::Estimate);
        this.calcTotals(projControlPeriodTableColumnEstimate,ProjEstimateColumn::Estimate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodUpdateForseeablesLosses</Name>
				<Source><![CDATA[
    public void periodUpdateForseeablesLosses(ProjControlPeriodTable   _projControlPeriod)
    {
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLAccRevAccOnAcc</Name>
				<Source><![CDATA[
    public AmountMST PLAccRevAccOnAcc(
        ProjControlPeriodTable  _projControlPeriodTable,
        ProjEstimateColumn      _estimateColumn)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLAccRevProduction</Name>
				<Source><![CDATA[
    public AmountMST PLAccRevProduction(
        ProjControlPeriodTable _projControlPeriodTable,
        ProjEstimateColumn     _estimateColumn)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLAccRevProfit</Name>
				<Source><![CDATA[
    public AmountMST PLAccRevProfit(
        ProjControlPeriodTable          _projControlPeriodTable,
        ProjEstimateColumn              _estimateColumn,
        ProjControlPeriodTableColumn    _projControlPeriodTableColumnAccEstimate = _projControlPeriodTableColumnAccEstimate)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLAccRevSalesValue</Name>
				<Source><![CDATA[
    public AmountMST PLAccRevSalesValue(
        ProjControlPeriodTable          _projControlPeriodTable,
        ProjEstimateColumn              _estimateColumn,
        ProjControlPeriodTableColumn    _projControlPeriodTableColumnAccEstimate = _projControlPeriodTableColumnAccEstimate)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLCostAccCost</Name>
				<Source><![CDATA[
    public AmountMST PLCostAccCost(ProjControlPeriodTable          _projControlPeriodTable,
                            ProjEstimateColumn              _estimateColumn,
                            ProjControlPeriodTableColumn    _projControlPeriodTableColumnAccEstimate = _projControlPeriodTableColumnAccEstimate)
    {
        switch (_estimateColumn)
        {
            case ProjEstimateColumn::Estimate:
                if (this.parmCalledFromCode())
                {
                    return projControlColumnAccEstimatePrev.PLCostAccCost + this.parmAccruedCost();
                }
                else
                {
                    return  _projControlPeriodTable.totalTotalEstimateAccCost() - projControlColumnAccEstimatePrev.PLCostAccCost;
                }

            case ProjEstimateColumn::Accumulated:
                if (this.parmCalledFromCode())
                {
                    return this.parmAccruedCost() + projControlColumnAccEstimatePrev.PLCostAccCost;
                }
                else
                {
                    return  _projControlPeriodTable.totalTotalEstimateAccCost();
                }

            case ProjEstimateColumn::Total:
                return 0;
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PLInvRevInvoiceOnAcc</Name>
				<Source><![CDATA[
    public AmountMST PLInvRevInvoiceOnAcc(
        ProjControlPeriodTable  _projControlPeriodTable,
        ProjEstimateColumn      _estimateColumn)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueAdded</Name>
				<Source><![CDATA[
    AmountMST valueAdded(ProjControlPeriodTable _projControlPeriod)
    {
        AmountMST   ret = 0;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnover</Name>
				<Source><![CDATA[
    protected AmountMST WIPAccruedTurnover(ProjControlPeriodTable _projControlPeriod)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnoverCredit</Name>
				<Source><![CDATA[
    public boolean WIPAccruedTurnoverCredit(ProjControlPeriodTable _projControlPeriod)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnoverDebit</Name>
				<Source><![CDATA[
    public boolean WIPAccruedTurnoverDebit(ProjControlPeriodTable _projControlPeriod)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnoverProd</Name>
				<Source><![CDATA[
    protected AmountMST WIPAccruedTurnoverProd(ProjControlPeriodTable _projControlPeriod)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPAccruedTurnoverProfit</Name>
				<Source><![CDATA[
    protected AmountMST WIPAccruedTurnoverProfit(ProjControlPeriodTable _projControlPeriod)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPCost</Name>
				<Source><![CDATA[
    protected AmountMST WIPCost(ProjControlPeriodTable _projControlPeriod)
    {
        return _projControlPeriod.ActualCostAmount - this.WIPCostAcc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>WIPInvoiceOnAcc</Name>
				<Source><![CDATA[
    public AmountMST WIPInvoiceOnAcc(
        ProjControlPeriodTable  _projControlPeriodTable)
    {
        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>