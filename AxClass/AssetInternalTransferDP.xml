<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetInternalTransferDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>AssetInternalTransferDP</c> class is the data provider for the <c>AssetInternalTransfer</c> report.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(AssetInternalTransfer)),
    SRSReportParameterAttribute(classStr(AssetInternalTransferContract))
]
public class AssetInternalTransferDP extends SrsReportDataProviderPreProcessTempDB
{
    AssetInternalTransferTmp assetInternalTransferTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetInternalTransferTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the <c>AssetInternalTransferTmp</c> table.
    /// </summary>
    /// <returns>
    ///     The <c>AssetInternalTransferTmp</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(AssetInternalTransferTmp))
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AssetInternalTransferTmp getAssetInternalTransferTmp()
    {
        select assetInternalTransferTmp;
        return assetInternalTransferTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Processes the report business logic.
    /// </summary>
    public void processReport()
    {
        AssetTable assetTable;
        AssetBook assetBook;
        AssetInternalTransferHistory transferHistory;
        AssetSumCalc_Trans assetSumCalcTrans;
        QueryRun queryRun;
        OMOperatingUnit omOperatingUnit;

        queryRun = new QueryRun(this.parmQuery());

        while (queryRun.next())
        {
            assetTable = queryRun.get(tableNum(AssetTable)) as AssetTable;
            assetBook = queryRun.get(tableNum(AssetBook)) as AssetBook;
            transferHistory = queryRun.get(tableNum(AssetInternalTransferHistory)) as AssetInternalTransferHistory;

            assetInternalTransferTmp.clear();

            assetInternalTransferTmp.AssetId = assetTable.AssetId;
            assetInternalTransferTmp.AssetName = assetTable.Name;
            assetInternalTransferTmp.BookId = assetBook.BookId;

            omOperatingUnit = OMOperatingUnit::find(transferHistory.FromDepartment, OMOperatingUnitType::OMAnyOU);
            assetInternalTransferTmp.FromDepartmentNumber = omOperatingUnit.OMOperatingUnitNumber;
            assetInternalTransferTmp.FromDepartmentName = omOperatingUnit.Name;
            assetInternalTransferTmp.FromLocationId = transferHistory.FromLocation;
            assetInternalTransferTmp.FromLocationName = AssetLocation::find(transferHistory.FromLocation).Name;
            assetInternalTransferTmp.FromResponsiblePersonnelNumber = HcmWorker::find(transferHistory.FromWorkerResponsible).PersonnelNumber;
            assetInternalTransferTmp.FromResponsibleName = HcmWorker::worker2Name(transferHistory.FromWorkerResponsible);

            omOperatingUnit = OMOperatingUnit::find(transferHistory.ToDepartment, OMOperatingUnitType::OMAnyOU);
            assetInternalTransferTmp.ToDepartmentNumber = omOperatingUnit.OMOperatingUnitNumber;
            assetInternalTransferTmp.ToDepartmentName = omOperatingUnit.Name;
            assetInternalTransferTmp.ToLocationId = transferHistory.ToLocation;
            assetInternalTransferTmp.ToLocationName = AssetLocation::find(transferHistory.ToLocation).Name;
            assetInternalTransferTmp.ToResponsiblePersonnelNumber = HcmWorker::find(transferHistory.ToWorkerResponsible).PersonnelNumber;
            assetInternalTransferTmp.ToResponsibleName = HcmWorker::worker2Name(transferHistory.ToWorkerResponsible);

            if (queryRun.changed(tableNum(AssetBook)))
            {
                assetSumCalcTrans = AssetSumCalc_Trans::newAssetPeriod(assetBook.AssetId, assetBook.BookId, dateNull(), transferHistory.TransferDate);
            }

            assetInternalTransferTmp.FinancialValue = assetSumCalcTrans.financialValue();

            assetInternalTransferTmp.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>