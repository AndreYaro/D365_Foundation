<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxVendTransCashDisc</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxVendTransCashDisc extends AxInternalBase
{
    VendTransCashDisc vendTransCashDisc;
    LedgerJournalEngine ledgerJournalEngine;
    int ledgerjournalTransIdx;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _vendTransCashDisc = vendTransCashDisc)
    {
        if (!prmisdefault(_vendTransCashDisc))
        {
            super(_vendTransCashDisc);
            vendTransCashDisc = _vendTransCashDisc as VendTransCashDisc;
        }
        else
        {
            super();
        }

        return vendTransCashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>VendTransCashDisc</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>VendTransCashDisc</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        VendTransCashDisc localVendTransCashDisc;

        return localVendTransCashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodstr(AxVendTransCashDisc,parmRefTableId));
        this.setParmMethodAsNotMandatory(methodstr(AxVendTransCashDisc,parmRefRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalEngine</Name>
				<Source><![CDATA[
    public LedgerJournalEngine ledgerJournalEngine(LedgerJournalEngine _ledgerJournalEngine = ledgerJournalEngine)
    {
        LedgerJournalTable ledgerJournalTable;

        ledgerJournalEngine = _ledgerJournalEngine;

        if (ledgerJournalEngine == null)
        {
            ledgerJournalEngine = LedgerJournalEngine::construct(LedgerJournalType::PurchaseLedger);
            ledgerJournalTable = this.ledgerJournalTransRecord().ledgerJournalTable();
            ledgerJournalEngine.newJournalActive(ledgerJournalTable);
        }

        return ledgerJournalEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalTransRecord</Name>
				<Source><![CDATA[
    public LedgerJournalTrans ledgerJournalTransRecord(LedgerJournalTrans _ledgerJournalTrans = null)
    {
        LedgerJournalTrans ledgerJournalTrans;

        if (!ledgerjournalTransIdx)
        {
            ledgerjournalTransIdx = this.nextCacheIdx();
        }

        if (!prmisdefault(_ledgerJournalTrans))
        {
            this.tableCacheInsert(ledgerjournalTransIdx, _ledgerJournalTrans);
            ledgerJournalTrans = _ledgerJournalTrans;
        }
        else
        {
            if (this.tableCacheExist(ledgerjournalTransIdx))
            {
                ledgerJournalTrans = this.tableCacheLookup(ledgerjournalTransIdx);
            }
            else
            {
                ledgerJournalTrans = LedgerJournalTrans::findRecId(this.parmRefRecId(), false);
                this.tableCacheInsert(ledgerjournalTransIdx, ledgerJournalTrans);
            }
        }
        return ledgerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscAmount</Name>
				<Source><![CDATA[
    public VendCashDiscAmount parmCashDiscAmount(VendCashDiscAmount _cashDiscAmount = 0)
    {
        if (!prmisdefault(_cashDiscAmount))
        {
            this.setField(fieldnum(VendTransCashDisc, CashDiscAmount), _cashDiscAmount);
        }

        return vendTransCashDisc.CashDiscAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscCode</Name>
				<Source><![CDATA[
    public CashDiscCode parmCashDiscCode(CashDiscCode _cashDiscCode = '')
    {
        if (!prmisdefault(_cashDiscCode))
        {
            this.setField(fieldnum(VendTransCashDisc, CashDiscCode), _cashDiscCode);
        }

        return vendTransCashDisc.CashDiscCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscdate</Name>
				<Source><![CDATA[
    public VendCashDiscDate parmCashDiscdate(VendCashDiscDate _cashDiscdate = dateNull())
    {
        if (!prmisdefault(_cashDiscdate))
        {
            this.setField(fieldnum(VendTransCashDisc, CashDiscdate), _cashDiscdate);
        }

        return vendTransCashDisc.CashDiscdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscDue</Name>
				<Source><![CDATA[
    public CashDiscDue parmCashDiscDue(CashDiscDue _cashDiscDue = CashDiscDue::CashDisc)
    {
        if (!prmisdefault(_cashDiscDue))
        {
            this.setField(fieldnum(VendTransCashDisc, CashDiscDue), _cashDiscDue);
        }

        return vendTransCashDisc.CashDiscDue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmCashDiscPercent(DiscPct _cashDiscPercent = 0)
    {
        if (!prmisdefault(_cashDiscPercent))
        {
            this.setField(fieldnum(VendTransCashDisc, CashDiscPercent), _cashDiscPercent);
        }

        return vendTransCashDisc.CashDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmManual</Name>
				<Source><![CDATA[
    public NoYes parmManual(NoYes _manual = NoYes::No)
    {
        if (!prmisdefault(_manual))
        {
            this.setField(fieldnum(VendTransCashDisc, Manual), _manual);
        }

        return vendTransCashDisc.Manual;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefRecId</Name>
				<Source><![CDATA[
    public RefRecId parmRefRecId(RefRecId _refRecId = 0)
    {
        if (!prmisdefault(_refRecId))
        {
            this.setField(fieldnum(VendTransCashDisc, RefRecId), _refRecId);
        }

        return vendTransCashDisc.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefTableId</Name>
				<Source><![CDATA[
    public RefTableId parmRefTableId(RefTableId _refTableId = 0)
    {
        if (!prmisdefault(_refTableId))
        {
            this.setField(fieldnum(VendTransCashDisc, RefTableId), _refTableId);
        }

        return vendTransCashDisc.RefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscAmount</Name>
				<Source><![CDATA[
    protected void setCashDiscAmount()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendTransCashDisc, CashDiscAmount)))
        {
            return;
        }

        this.ledgerJournalEngine().calcVirtualCashDisc(this.ledgerJournalTransRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscCode</Name>
				<Source><![CDATA[
    protected void setCashDiscCode()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendTransCashDisc, CashDiscCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscdate</Name>
				<Source><![CDATA[
    protected void setCashDiscdate()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendTransCashDisc, CashDiscdate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscDue</Name>
				<Source><![CDATA[
    protected void setCashDiscDue()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendTransCashDisc, CashDiscDue)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setManual</Name>
				<Source><![CDATA[
    protected void setManual()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendTransCashDisc, Manual)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRefRecId</Name>
				<Source><![CDATA[
    protected void setRefRecId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendTransCashDisc, RefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRefTableId</Name>
				<Source><![CDATA[
    protected void setRefTableId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendTransCashDisc, RefTableId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setCashDiscdate();
        this.setCashDiscAmount();
        this.setRefRecId();
        this.setRefTableId();
        this.setCashDiscDue();
        this.setManual();
        this.setCashDiscCode();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTransCashDisc</Name>
				<Source><![CDATA[
    public VendTransCashDisc vendTransCashDisc(VendTransCashDisc _vendTransCashDisc = vendTransCashDisc)
    {
        if (!prmisdefault(_vendTransCashDisc))
        {
            this.setCurrentRecordFromExternal(_vendTransCashDisc);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxVendTransCashDisc construct()
    {
        return new AxVendTransCashDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newVendTransCashDisc</Name>
				<Source><![CDATA[
    public static AxVendTransCashDisc newVendTransCashDisc(VendTransCashDisc _vendTransCashDisc)
    {
        AxVendTransCashDisc axVendTransCashDisc = AxVendTransCashDisc::construct();

        axVendTransCashDisc.vendTransCashDisc(_vendTransCashDisc);

        return axVendTransCashDisc;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>