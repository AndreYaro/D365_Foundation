<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceWorkflowHistoryAutomaticPostingTimelineEntryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Timeline entry builder for automatic posting workflow task for vendor invoices.
/// </summary>
[Export(identifierStr(Dynamics.AX.Application.WorkflowHistoryITimelineEntryBuilder))]
[ExportMetadata(classStr(WorkflowHistoryITimelineEntryBuilder), identifierStr(VendInvoicePostWorkflowTask))]
internal final class VendInvoiceWorkflowHistoryAutomaticPostingTimelineEntryBuilder extends WorkflowHistoryBaseTimelineEntryBuilder 
                                                                                    implements ProcessExecutionIOpenExecutionMessageLogDialog
{
    private VendInvoiceInfoTable vendorInvoice;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeForWorkflowHistoryEvent</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected void initializeForWorkflowHistoryEvent(WorkflowHistoryEvent _workflowHistoryEvent)
    {
        vendorInvoice = _workflowHistoryEvent.getDocumentInWorkflow() as VendInvoiceInfoTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkflowHistoryEntryHeader</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected TimelineEntryHeader getWorkflowHistoryEntryHeader(WorkflowHistoryEvent _workflowHistoryEvent)
    {
        TimelineEntryHeader timelineEntryHeader = super(_workflowHistoryEvent);

        WorkflowTrackingTable workflowTracking = _workflowHistoryEvent.getTracking();

        if (workflowTracking.TrackingContext == WorkflowTrackingContext::AutomatedTask)
        {
            if (workflowTracking.TrackingType == WorkflowTrackingType::Creation)
            {
                timelineEntryHeader = "@AccountsPayable:VendInvoiceAutomationBeginAutomaticPostingTimelineEntryHeader";
            }
            else if (workflowTracking.TrackingType == WorkflowTrackingType::Completion)
            {
                timelineEntryHeader = "@AccountsPayable:WorkflowHistoryDialogInvoicePostingSucceeded";
            }
        }

        return timelineEntryHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkflowHistoryEntryButtons</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected List getWorkflowHistoryEntryButtons(WorkflowHistoryEvent _workflowHistoryEvent)
    {
        List entryButtonList = new List(Types::Class);

        Args messageLogArgs = new Args();
        messageLogArgs.caller(this);

        // Add a link to the Process Automation message log to this timeline entry
        TimelineButton messageLogButton = TimelineButton::newForMenuItem(
            menuItemDisplayStr(ProcessExecutionMessageLogDialog),
            MenuItemType::Display,
            messageLogArgs);

        entryButtonList.addEnd(messageLogButton);

        return entryButtonList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContractForMessageLog</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ProcessExecutionMessageLogContract getContractForMessageLog()
    {
        return ProcessExecutionMessageLogContract::newForSourceRecord(
            VendInvoicePostTaskConstants::VendorInvoiceBatchPosting,
            vendorInvoice.TableId,
            vendorInvoice.RecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>