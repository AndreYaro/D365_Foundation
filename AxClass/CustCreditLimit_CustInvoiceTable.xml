<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCreditLimit_CustInvoiceTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CustCreditLimit_CustInvoiceTable extends CustCreditLimit
{
    CustFreeInvoiceCalcTotals freeInvoiceTotals;
    CustInvoiceTable custInvoiceTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>balanceTotals</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the balance of the <c>SalesTotals</c> class, if any is specified.
    /// </summary>
    /// <returns>
    ///    The balance of the <c>SalesTotals</c> class.
    /// </returns>
    AmountMST balanceTotals()
    {
        if (!balanceTotalsCalculated && freeInvoiceTotals)
        {
            this.calc();
            balanceTotals = CurrencyExchangeHelper::mstAmount(freeInvoiceTotals.custFreeInvoiceInvoiceAmount(), freeInvoiceTotals.custFreeInvoiceCurrency());
            balanceTotalsCalculated = true;
        }
        return balanceTotals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    protected void calc()
    {
        this.freeInvoiceTotals().calc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>custInvoiceTable</Name>
				<Source><![CDATA[
    CustInvoiceTable custInvoiceTable(CustInvoiceTable _custInvoiceTable)
    {
        custInvoiceTable = _custInvoiceTable;
        return custInvoiceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>freeInvoiceTotals</Name>
				<Source><![CDATA[
    CustFreeInvoiceCalcTotals freeInvoiceTotals(CustFreeInvoiceCalcTotals _freeInvoiceTotals = freeInvoiceTotals)
    {
        if (!prmisdefault(_freeInvoiceTotals))
        {
            currency = _freeInvoiceTotals.custFreeInvoiceCurrency();
            exchangeRate = _freeInvoiceTotals.custFreeInvoiceExchRate();
        }

        freeInvoiceTotals = _freeInvoiceTotals;
        return freeInvoiceTotals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the variables of the class.
    /// </summary>
    /// <remarks>
    ///    When the class is instantiated, the <c>new</c> method will automatically be run all the way from
    ///    the instantiated class up to the parent class. This may not be convenient, as the child class may
    ///    not want to have the parent class initialization run. The <c>init</c> method is only called one
    ///    time.
    /// </remarks>
    void init()
    {
        super();
        this.freeInvoiceTotals(new CustFreeInvoiceCalcTotals(custInvoiceTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(CustInvoiceTable _custInvoiceTable)
    {
        custInvoiceTable = _custInvoiceTable;
        super(CustTable::find(custInvoiceTable.InvoiceAccount));

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.agreementCheckInit_RU(custInvoiceTable.AgreementHeaderExt_RU, custInvoiceTable.TableId, custInvoiceTable.RecId);
        }
        // </GEERU>
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>