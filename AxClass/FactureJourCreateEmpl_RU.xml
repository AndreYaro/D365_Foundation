<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FactureJourCreateEmpl_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class FactureJourCreateEmpl_RU extends FactureJourCreate_RU implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkParameters</Name>
				<Source><![CDATA[
        protected boolean checkParameters()
    {
        boolean ret;

        ret = super();
        if (! factureExtId)
        {
            ret = checkFailed("@GLS104571");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInvoiceJourByTrans</Name>
				<Source><![CDATA[
        protected Common findInvoiceJourByTrans(Common _trans)
    {
        EmplAdvLine_RU localEmplAdvLine;
        ;

        localEmplAdvLine = _trans as EmplAdvLine_RU;

        return EmplAdvTable_RU::find(localEmplAdvLine.AdvanceId, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInvoiceTransByFacture</Name>
				<Source><![CDATA[
        protected Common findInvoiceTransByFacture()
    {
        return EmplAdvLine_RU::findLineNum(factureTrans.InvoiceId, factureTrans.InvoiceLineNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initJournal</Name>
				<Source><![CDATA[
        protected void initJournal()
    {
        DictType dictType;
        boolean  error = false;

        numberSeq = NumberSeq::newGetNum(CustParameters::numRefCustFactureId_RU(),false,true);

        if (! numberSeq)
        {
            dictType = new DictType(extendedtypenum(FactureId_RU));
            error(strfmt("@SYS53911", dictType.label(), "@SYS25196"));
            error    = true;
        }

        super();

        if (error)
        {
            throw error("@GLS106933");
        }

        factureJour.FactureId   = numberSeq.num();
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
        public FactureModule_RU module()
    {
        return FactureModule_RU::Empl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>