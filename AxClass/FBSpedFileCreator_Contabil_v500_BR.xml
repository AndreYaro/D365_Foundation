<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBSpedFileCreator_Contabil_v500_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FBSpedFileCreator_Contabil_v500_BR extends FBSpedFileCreator_Contabil_v400_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createRecord0000</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the block 0000 and its child blocks
    /// </summary>
    protected void createRecord0000()
    {
        FBSpedRecord_BR         spedRecord;
        LogisticsPostalAddress  fiscalEstablishmentAddress = fiscalEstablishment.postalAddress();

        spedRecord  = FBSpedRecord_BR::constructEmpty('0000');

        spedRecord.addFieldString                   ('LECD');                                                   // LECD
        spedRecord.addFieldDate                     (fromDate);                                                 // DT_INI
        spedRecord.addFieldDate                     (toDate);                                                   // DT_FIN
        spedRecord.addFieldString                   (fiscalEstablishment.Name);                                 // NOME
        spedRecord.addFieldNumericFilledWithZeros   (this.keepNumbers(fiscalEstablishment.CNPJCPFNum_BR), 14);  // CNPJ
        spedRecord.addFieldString                   (fiscalEstablishmentAddress.State);                         // UF
        spedRecord.addFieldString                   (this.keepAlphaAndNumbers(fiscalEstablishment.IENum_BR));   // IE
        spedRecord.addFieldNumericFilledWithZeros   (this.getCityCode(fiscalEstablishmentAddress), 7);          // COD_MUN
        spedRecord.addFieldString                   (this.keepAlphaAndNumbers(fiscalEstablishment.CCMNum_BR));  // IM

        if (situationType)
        {
            spedRecord.addFieldNumeric              (situationType);                                            // IND_SIT_ESP
        }
        else
        {
            spedRecord.addFieldEmpty                ();                                                         // IND_SIT_ESP
        }

        spedRecord.addFieldNumeric                  (openingPeriodSituation);                                   // IND_SIT_INI_PER
        spedRecord.addFieldNumeric                  (fiscalEstablishment.NIRE ? 1 : 0);                         // IND_NIRE
        spedRecord.addFieldNumeric                  (fileType);                                                 // IND_FIN_ESC

        if (fileType == FBSPEDFileType_BR::Substitute)
        {
            spedRecord.addFieldString               (fileHash);                                                 // COD_HASH_SUB
        }
        else
        {
            spedRecord.addFieldEmpty                ();                                                         // COD_HASH_SUB
        }

        spedRecord.addFieldNumeric                  (fiscalOrganization.IsLargeCompany ? 1 : 0);                // IND_GRANDE_PORTE
        spedRecord.addFieldNumeric                  (fiscalOrganization.SCPType);                               // TIP_ECD

        if (fiscalOrganization.SCPType == FBSCPType_BR::SCP)
        {
            spedRecord.addFieldNumeric              (this.keepNumbers(fiscalOrganization.SCPCode));             // COD_SCP
        }
        else
        {
            spedRecord.addFieldEmpty();                                                                         // COD_SCP
        }

        spedRecord.addFieldString                   ('N', 1);                                                   // IDENT_MF
        spedRecord.addFieldString                   ('N', 1);                                                   // IND_ESC_CONS

        this.addRecord(spedRecord);

        this.createBlock0(spedRecord);
        this.createBlockI(spedRecord);
        this.createBlockJ(spedRecord);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>