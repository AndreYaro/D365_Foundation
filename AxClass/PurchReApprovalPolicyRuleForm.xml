<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReApprovalPolicyRuleForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchReApprovalPolicyRuleForm</c> class contains form related logic, building the UI and
/// persistence of the purchase order re-approval rule.
/// </summary>
public class PurchReApprovalPolicyRuleForm
{
    FormRun                             formRun;
    PurchReApprovalPolicyRuleTable      purchReApprovalPolicyRuleTable;
    PurchReApprovalPolicyRuleFieldList  listPanelFields;
    boolean                             ruleCreated;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildUI</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>PurchReApprovalPolicyRuleFieldList</c> class.
    /// </summary>
    protected void buildUI()
    {
        listPanelFields = PurchReApprovalPolicyRuleFieldList::newForm(  formRun,
                                                                        formRun.controlId(formControlStr(PurchReApprovalPolicyRule, GroupFields)),
                                                                        formRun.controlId(formControlStr(PurchReApprovalPolicyRule, GroupFieldDescription)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Saves the list of selected fields.
    /// </summary>
    public void closeForm()
    {
        this.saveData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new purchase re-approval policy rule
    /// </summary>
    /// <param name="_sysPolicy">
    ///    A <c>SysPolicy</c> record that the rule should be associated to.
    /// </param>
    private void createRule(SysPolicy _sysPolicy)
    {
        purchReApprovalPolicyRuleTable.initValue();
        purchReApprovalPolicyRuleTable.initFromPolicy(_sysPolicy.RecId);
        purchReApprovalPolicyRuleTable.initDates(_sysPolicy.RecId);

        ruleCreated = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>PurchReApprovalPolicyRuleFieldList</c> class and populates the view that shows
    /// the selected and available fields.
    /// </summary>
    public void init()
    {
        listPanelFields.init();

        this.loadData();

        listPanelFields.fill();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>PurchReApprovalPolicyRuleForm</c> class.
    /// </summary>
    /// <param name="_args">
    /// A <c>Args</c> instance that contains information about the policy rule.
    /// </param>
    public void initArgs(Args _args)
    {
        SysPolicyRecId  policyRecId;
        formRun         callerForm = _args.caller();

        if (_args.record())
        {
            purchReApprovalPolicyRuleTable = PurchReApprovalPolicyRuleTable::find(_args.record().RecId);
        }

        if (callerForm
            && callerForm.name() == formStr(SysPolicy)
            && formHasMethod(callerForm, identifierStr(getPolicyIndex)))
        {
            policyRecId = _args.caller().getPolicyIndex();

            if (!purchReApprovalPolicyRuleTable)
            {
                if (PurchReApprovalPolicyRuleTable::checkIfPolicyIsValid(policyRecId))
                {
                    this.createRule(SysPolicy::find(policyRecId));
                }
                else
                {
                    throw error("@GLS180261");
                }
            }

            this.buildUI();
        }
        else
        {
            throw error("@SYS30498");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the <c>InSet</c> structure that contains the list of selected fields.
    /// </summary>
    private void loadData()
    {
        listPanelFields.parmInSet(Set::create(PurchReApprovalPolicyRuleFields::getRuleFields(purchReApprovalPolicyRuleTable)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        ruleCreated = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormRun</Name>
				<Source><![CDATA[
        public FormRun parmFormRun(FormRun _formRun = formRun)
    {
        formRun = _formRun;

        return formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnlyViewAccess</Name>
				<Source><![CDATA[
        public boolean parmOnlyViewAccess(boolean _onlyViewAccess = false)
    {
        if (prmisDefault(_onlyViewAccess))
        {
            return listPanelFields.parmOnlyViewAccess();
        }
        else
        {
            return listPanelFields.parmOnlyViewAccess(_onlyViewAccess);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRule</Name>
				<Source><![CDATA[
        public PurchReApprovalPolicyRuleTable parmRule(PurchReApprovalPolicyRuleTable _purchReApprovalPolicyRuleTable = purchReApprovalPolicyRuleTable)
    {
        purchReApprovalPolicyRuleTable = _purchReApprovalPolicyRuleTable;

        return purchReApprovalPolicyRuleTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveData</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Saves the list of selected fields.
    /// </summary>
    private void saveData()
    {
        purchReApprovalPolicyRuleTable = PurchReApprovalPolicyRuleFields::saveRuleFields(purchReApprovalPolicyRuleTable, listPanelFields.parmInSet().pack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlsEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets several controls enabled if the current rule can be edited.
    /// </summary>
    /// <param name="_validFrom">
    /// A <c>FormDateTimeControl</c> control for the valid from field.
    /// </param>
    /// <param name="_validTo">
    /// A <c>FormDateTimeControl</c> control for the valid to field.
    /// </param>
    /// <param name="_okButton">
    /// A <c>FormCommandButtonControl</c> control for the ok button.
    /// </param>
    public void setControlsEnabled( FormDateTimeControl         _validFrom,
                                    FormDateTimeControl         _validTo,
                                    FormCommandButtonControl    _okButton)
    {
        // If the purchase re-approval policy rule has expired, then disable all editing and the OK button
        if (PurchReApprovalPolicyRuleTable.ValidTo <= DateTimeUtil::utcNow())
        {
            _validFrom.allowEdit(false);
            _validTo.allowEdit(false);

            this.parmOnlyViewAccess(true);
            _okButton.visible(false);
        }
        else
        {
            _validFrom.allowEdit(true);
            _validTo.allowEdit(ruleCreated);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setViewMode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Defines the type of view where fields will be shown.
    /// </summary>
    /// <param name="_viewType">
    ///    A <c>PurchreApprovalPolicyRuleViewType</c> value for the current view state.
    /// </param>
    public void setViewMode(PurchreApprovalPolicyRuleViewType _viewType)
    {
        listPanelFields.setViewMode(_viewType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PurchReApprovalPolicyRuleForm construct()
    {
        return new PurchReApprovalPolicyRuleForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>PurchReApprovalPolicyRuleForm</c> class.
    /// </summary>
    /// <param name="_formRun">
    /// The <c>FormRun</c> object where view and tree structures will be added.
    /// </param>
    /// <returns>
    /// A new instance of the <c>PurchReApprovalPolicyRuleForm</c> class.
    /// </returns>
    public static PurchReApprovalPolicyRuleForm newForm(FormRun _formRun)
    {
        PurchReApprovalPolicyRuleForm policy;

        policy = PurchReApprovalPolicyRuleForm::construct();
        policy.parmFormRun(_formRun);

        return policy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>