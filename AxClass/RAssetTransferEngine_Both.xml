<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetTransferEngine_Both</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class rAssetTransferEngine_Both extends RAssetTransferEngine
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public void create()
    {
        if (rAssetTransferTable.RecId)
        {
            if (!RAssetTransferTrans::findRecRef(rAssetTransferTable.RecId)
                && !rAssetTransferTable.Posted)
            {
                RAssetCreateTransferLines::createTransferLines(rAssetTransferTable);
            }

            super();

            rAssetTransferTable_ds.refresh();
            rAssetTransferTable_ds.reread();
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAcountNum</Name>
				<Source><![CDATA[
    public void lookupAcountNum(FormStringControl _lookupCtrl)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(RAssetTable), _lookupCtrl);
        Query query = new Query();

        QueryBuildDataSource qbd = query.addDataSource(tableNum(RAssetTable));
        sysTableLookup.addLookupfield(fieldNum(RAssetTable, AccountNum));
        sysTableLookup.addLookupfield(fieldNum(RAssetTable, Name));

        qbd.addRange(fieldNum(RAssetTable, AssetType)).value(queryRange(RAssetType::Tangible, RAssetType::Other));
        QueryBuildDataSource qbdHist = qbd.addDataSource(tableNum(RAssetMoveHist));
        qbdHist.joinMode(JoinMode::ExistsJoin);
        qbdHist.fetchMode(QueryFetchMode::One2One);
        qbdHist.relations(true);
        qbdHist.addSortField(fieldNum(RAssetMoveHist, ChangeDate), SortOrder::Descending);
        qbdHist.addRange(fieldNum(RAssetMoveHist, ChangeDate)).value(queryRange(dateNull(), rAssetTransferTable.TransDate));
        qbdHist.addRange(fieldNum(RAssetMoveHist, NewLocation)).value(queryValue(rAssetTransferTable.OldLocation));
        qbdHist.addRange(fieldNum(RAssetMoveHist, NewEmployee)).value(queryValue(rAssetTransferTable.OldEmployee));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTableDesign</Name>
				<Source><![CDATA[
    public void updateTableDesign()
    {
        rAssetTransferTable_ds.object(fieldNum(RAssetTransferTable, Company)).visible(false);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteTrans</Name>
				<Source><![CDATA[
    public boolean validateWriteTrans()
    {
        boolean ret;

        if (!rAssetTransferTrans.AccountNum)
        {
            ret = checkFailed("@GLS116620");
        }
        else
        {
            ret = super()
                && RAssetCreateTransferLines::checkCanCreate(RAssetTransferTable::findRecRef(rAssetTransferTrans.TransferTableRecId), RAssetTable::find(rAssetTransferTrans.AccountNum), true);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>