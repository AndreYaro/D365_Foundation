<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CollectionLetterSentBusinessEventContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract for a <c>CollectionLetterSentBusinessEvent</c>.
/// </summary>
[DataContract]
public final class CollectionLetterSentBusinessEventContract extends BusinessEventsContract
{
    private CustAccount custAccount;
    private CollectionLetterNum collectionLetterNumber;
    private TransDate collectionLetterDate;
    private DueDate collectionLetterDueDate;
    private AmountMST collectionLetterAmount;
    private str collectionLetterCode;
    private LegalEntityDataAreaId legalEntity;
  
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromCustCollectionLetterJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>CollectionLetterSentBusinessEventContract</c> from a <c>CustCollectionLetterJour</c> record.
    /// </summary>
    /// <param name = "_custCollectionLetterJour">A <c>CustCollectionLetterJour</c> record.</param>
    /// <returns>A <c>CollectionLetterSentBusinessEventContract</c>.</returns>
    public static CollectionLetterSentBusinessEventContract newFromCustCollectionLetterJour(CustCollectionLetterJour _custCollectionLetterJour)
    {
        var contract = new CollectionLetterSentBusinessEventContract();
        contract.initialize(_custCollectionLetterJour);

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(CustCollectionLetterJour _custCollectionLetterJour)
    {
        custAccount = _custCollectionLetterJour.AccountNum;
        collectionLetterNumber = _custCollectionLetterJour.CollectionLetterNum;
        collectionLetterDate = _custCollectionLetterJour.CollectionLetterDate;
        collectionLetterDueDate = _custCollectionLetterJour.DueDate;
        collectionLetterAmount = _custCollectionLetterJour.sumCollectionAmountFee(); 
        collectionLetterCode = enum2Symbol(enumNum(CustCollectionLetterCode), _custCollectionLetterJour.CollectionLetterCode);
        legalEntity = _custCollectionLetterJour.DataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
    [DataMember('CustAccount'), BusinessEventsDataMember("@AccountsReceivable:CustomerAccount")]
    public CustAccount parmCustAccount(CustAccount _custAccount = custAccount)
    {
        custAccount = _custAccount;

        return custAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCollectionLetterNumber</Name>
				<Source><![CDATA[
    [DataMember('CollectionLetterNumber'), BusinessEventsDataMember("@AccountsReceivable:CollectionLetterNumber")]
    public CollectionLetterNum parmCollectionLetterNumber(CollectionLetterNum _collectionLetterNumber = collectionLetterNumber)
    {
        collectionLetterNumber = _collectionLetterNumber;

        return collectionLetterNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCollectionLetterDate</Name>
				<Source><![CDATA[
    [DataMember('CollectionLetterDate'), BusinessEventsDataMember("@AccountsReceivable:CollectionLetterDate")]
    public TransDate parmCollectionLetterDate(TransDate _collectionLetterDate = collectionLetterDate)
    {
        collectionLetterDate = _collectionLetterDate;

        return collectionLetterDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCollectionLetterDueDate</Name>
				<Source><![CDATA[
    [DataMember('CollectionLetterDueDate'), BusinessEventsDataMember("@AccountsReceivable:CollectionLetterDueDate")]
    public DueDate parmCollectionLetterDueDate(DueDate _collectionLetterDueDate = collectionLetterDueDate)
    {
        collectionLetterDueDate = _collectionLetterDueDate;

        return collectionLetterDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCollectionLetterAmount</Name>
				<Source><![CDATA[
    [DataMember('CollectionLetterAmount'), BusinessEventsDataMember("@AccountsReceivable:CollectionLetterAmount")]
    public AmountMST parmCollectionLetterAmount(AmountMST _collectionLetterAmount = collectionLetterAmount)
    {
        collectionLetterAmount = _collectionLetterAmount;

        return collectionLetterAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCollectionLetterCode</Name>
				<Source><![CDATA[
    [DataMember('CollectionLetterCode'), BusinessEventsDataMember("@AccountsReceivable:CollectionLetterCode")]
    public str parmCollectionLetterCode(str _collectionLetterCode = collectionLetterCode)
    {
        collectionLetterCode = _collectionLetterCode;

        return collectionLetterCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntity</Name>
				<Source><![CDATA[
    [DataMember('LegalEntity'), BusinessEventsDataMember("@AccountsReceivable:LegalEntity")]
    public LegalEntityDataAreaId parmLegalEntity(LegalEntityDataAreaId _legalEntity = legalEntity)
    {
        legalEntity = _legalEntity;

        return legalEntity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>