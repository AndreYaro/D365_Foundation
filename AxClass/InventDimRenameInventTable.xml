<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimRenameInventTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventDimRenameInventTable</c> class handles renaming an inventory dimension values for the <c>InventTable</c> table.
/// </summary>
[SysTableNameFactory(tableStr(InventTable))]
class InventDimRenameInventTable extends InventDimRenameTable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>renameInventDimValues</Name>
				<Source><![CDATA[
    public void renameInventDimValues()
    {
        InventTable             inventTable;
        int                     cnt;

        FieldId dimFieldId = fieldName2Id(tableNum(InventDim), dimFieldName);

        InventProductDimension prodDim = InventDimension::singletonFromInventDimFieldId(dimFieldId) as InventProductDimension;
        if (!prodDim)
        {
            return; // nothing to update
        }

        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(InventTable));
        queryBuildDataSource.update(true);
        queryBuildDataSource.addRange(fieldNum(InventTable, ItemId)).value(itemId);

        QueryRun queryRun = new QueryRun(query);
        while (queryRun.next())
        {
            inventTable = queryRun.get(tableNum(InventTable)) as InventTable;

            if (prodDim.parmDefaultValueForItem(inventTable) == inventDimOrig.(dimFieldId))
            {
                prodDim.parmDefaultValueForItem(inventTable, inventDim.(dimFieldId));
                inventTable.doUpdate();
                cnt++;
            }
        }

        query = new Query();
        queryBuildDataSource = query.addDataSource(tableNum(InventTable));
        queryBuildDataSource.update(true);
        queryBuildDataSource.addRange(fieldNum(InventTable, AltItemId)).value(itemId);

        queryRun = new QueryRun(query);
        while (queryRun.next())
        {
            inventTable = queryRun.get(tableNum(InventTable)) as InventTable;

            if (prodDim.parmAlternativeValueForItem(inventTable) == inventDimOrig.(dimFieldId))
            {
                prodDim.parmAlternativeValueForItem(inventTable, inventDim.(dimFieldId));
                inventTable.doUpdate();
                cnt++;
            }
        }

        if (cnt)
        {
            info(strFmt("@SYS74545", cnt, tableStr(InventTable)));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
