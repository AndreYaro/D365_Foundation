<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailEFDocMsg_CancelBySubstitution_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Represents a XML message to be sent to the tax authority for cancellation by substitution of retail electronic fiscal documents.
/// </summary>
internal class RetailEFDocMsg_CancelBySubstitution_BR extends RetailEFDocMsgBase_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCancelBySubstitutEventFormatForModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the format for the cancel XML message.
    /// </summary>
    /// <param name="_fiscalEstablishment">
    /// The fiscal establishment that owns the message.
    /// </param>
    /// <param name="_fiscalDocumentModel">
    /// Fiscal document model.
    /// </param>
    /// <returns>
    /// A message format to be used when reading or writing the XML message.
    /// </returns>
    [Hookable(false)]
    protected IEFEventDocMsgFormat_BR getCancelBySubstitutEventFormatForModel(FiscalEstablishment_BR _fiscalEstablishment, FiscalDocumentModel_BR _fiscalDocumentModel)
    {
        return EFDocFactory_BR::construct().createCancelBySubstitutionMsgFormat(_fiscalEstablishment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMessageAction</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected str getMessageAction()
    {
        return "@NFE:CancelBySubstitution";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMessageType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected EFDocMessageType_BR getMessageType()
    {
        return EFDocMessageType_BR::CancelBySubstitution;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWebService</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected EFDocWebService_BR getWebService()
    {
        return EFDocWebService_BR::Events;
    }

]]></Source>
			</Method>
			<Method>
				<Name>send</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void send(EFiscalDocument_BR _eFiscalDocument, IEFDocMsgTransport _transport)
    {
        EFEventDocumentList_BR eventDocumentList = EFEventDocumentList_BR::construct();
        EFEventDocument_BR eventDocument = EFEventDocument_BR::constructCancelBySubstitution(_eFiscalDocument.fiscalDocument());
        eventDocumentList.add(eventDocument);

        IEFDocMsgStream_BR sendStream = _transport.getSendStream();

        IEFEventDocMsgFormat_BR format = this.getCancelBySubstitutEventFormatForModel(eventDocument.fiscalEstablishment(), _eFiscalDocument.fiscalDocument().Model);
        format.write(sendStream, eventDocumentList);

        EFiscalDocumentReturnInfo_BR returnInfo = EFiscalDocumentReturnInfo_BR::newFromAccessKey(eventDocument.accessKey());
        IEFDocMsgStream_BR returnStream = _transport.send(eventDocument.accessKey());

        format.read(returnStream, returnInfo);
        this.saveMsg(eventDocument.efDocument(), sendStream, returnStream, returnInfo);

        ttsBegin;

        EFDocument_BR updateEfDocument = EFDocument_BR::findByRecId(eventDocument.efDocument().RecId, true);

        if (updateEfDocument)
        {
            updateEfDocument.MessageStatus = EFDocMessageStatus_BR::Processed;
            updateEfDocument.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMessageReturn</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected void validateMessageReturn(EFiscalDocumentReturnInfo_BR _returnInfo)
    {
        EFDocEventStatus_BR eventStatus = EFDocEventReturnCode_BR::getStatusFromReturnCode(_returnInfo.parmReturnCodeStatus());

        if (eventStatus != EFDocEventStatus_BR::Approved)
        {
            throw error(strFmt("@NFE:TaxAuthorityValidationError", this.getMessageAction(), _returnInfo.accessKey(), _returnInfo.parmReturnCodeStatus(), _returnInfo.parmReturnCodeDescription()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a <c>RetailEFDocMsg_CancelBySubstitution_BR</c> object.
    /// </summary>
    /// <returns>A <c>RetailEFDocMsg_CancelBySubstitution_BR</c> object.</returns>
    [Hookable(false)]
    public static RetailEFDocMsg_CancelBySubstitution_BR construct()
    {
        return new RetailEFDocMsg_CancelBySubstitution_BR();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>