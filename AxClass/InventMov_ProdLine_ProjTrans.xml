<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_ProdLine_ProjTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventMov_ProdLine_ProjTrans extends InventMov_ProdLine
{
    ProdBOMTransProj prodBOMTransProj;
    boolean          isReversal;
    InventMovement   subProdOrderMovement;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountOperations</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount accountOperations()
    {
        if (! cacheAccountOperations)
        {
            if (prodBOMTransProj.isProjMethodConsumed())
            {
                if (this.parmIsReversal())
                {
                    return this.accountBalanceSheet();
                }
                // Funding source is not used when Transaction posted from Item Class.
                cacheAccountOperations = ProjPosting::getLedgerDimension(ProjAccountType::CostAccount,
                                                                  this.projId(),
                                                                  this.projCategoryId(),
                                                                  0);
            }
            else
            {
                cacheAccountOperations = super();
            }
        }

        return cacheAccountOperations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityNumber</Name>
				<Source><![CDATA[
    public ProjActivityNumber activityNumber()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ActivityNumber : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault defaultDimension()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.DefaultDimension : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventTransFinancial</Name>
				<Source><![CDATA[
    public void initInventTransFinancial(
        InventTrans         _inventTrans,
        TransDate           _dateFinancial,
        InvoiceId           _invoiceNum,
        CurrencyCode        _currencyCode)
    {
        super(_inventTrans, _dateFinancial, _invoiceNum, _currencyCode);

        if (prodBOMTransProj.isProjMethodConsumed())
        {
            this.setProjAdjustRefId(_inventTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    public ItemId  itemId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ItemId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustDoProjPhysicalAdjust</Name>
				<Source><![CDATA[
    public boolean mustDoProjPhysicalAdjust()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustDoProjPhysicalPosting</Name>
				<Source><![CDATA[
    public boolean mustDoProjPhysicalPosting()
    {
        return (prodBOMTransProj.isProjMethodConsumed() && !prodBOM.prodTableRef().isProjMethodConsumed());
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSetProjAdjustRefInventTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the project adjustment number is updated.
    /// </summary>
    /// <returns>
    ///    true if project adjustment number is updated; otherwise false
    /// </returns>
    public boolean mustSetProjAdjustRefInventTrans()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsReversal</Name>
				<Source><![CDATA[
    public boolean parmIsReversal(boolean _isReversal = isReversal)
    {
        isReversal = _isReversal;
        return isReversal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdBOMTransProj</Name>
				<Source><![CDATA[
    public void parmProdBOMTransProj(ProdBOMTransProj _prodBOMTransProj)
    {
        prodBOMTransProj = _prodBOMTransProj;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingOperations</Name>
				<Source><![CDATA[
    public LedgerPostingType postingOperations()
    {
        if (prodBOMTransProj.isProjMethodConsumed())
        {
            if (this.parmIsReversal())
            {
                return this.postingBalanceSheet();
            }
            return LedgerPostingType::ProjCost;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCategoryId</Name>
				<Source><![CDATA[
    public ProjCategoryId projCategoryId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ProjCategoryId : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    public ProjId projId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ProjId : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>projLedgerOrigin</Name>
				<Source><![CDATA[
    public ProjLedgerOrigin projLedgerOrigin()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? ProjOrigin::ProductionConsumed : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projLinePropertyId</Name>
				<Source><![CDATA[
    public ProjLinePropertyId projLinePropertyId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ProjLinePropertyId : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>projSalesCurrencyId</Name>
				<Source><![CDATA[
    public ProjSalesCurrencyCode projSalesCurrencyId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ProjSalesCurrencyId : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>projSalesPrice</Name>
				<Source><![CDATA[
    public ProjSalesPriceCost projSalesPrice()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ProjSalesPrice : 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTaxGroupId</Name>
				<Source><![CDATA[
    public ProjTaxGroup projTaxGroupId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ProjTaxGroupId : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTaxItemGroupId</Name>
				<Source><![CDATA[
    public ProjTaxItemGroup projTaxItemGroupId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ProjTaxItemGroupId : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTransactionOrigin</Name>
				<Source><![CDATA[
    public ProjTransactionOrigin projTransactionOrigin()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? ProjOrigin::ProductionConsumed : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTransId</Name>
				<Source><![CDATA[
    public ProjTransIdBase projTransId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.ProjTransId : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjAdjustRefId</Name>
				<Source><![CDATA[
    public void setProjAdjustRefId(InventTrans _inventTrans)
    {
        if (_inventTrans.ProjAdjustRefId)
        {
            projAdjustRefId = _inventTrans.ProjAdjustRefId;
            return;
        }

        if (!_inventTrans.ProjId)
        {
            return;
        }

        if (!projAdjustRefId)
        {
            projAdjustRefId = NumberSeq::newGetNum(CompanyInfo::numRefParmId()).num();
        }

        _inventTrans.ProjAdjustRefId = projAdjustRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transUnitId</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol transUnitId()
    {
        return (prodBOMTransProj.isProjMethodConsumed() ? prodBOMTransProj.bomUnitId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromProdBOM</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventMov_ProdLine_ProjTrans</c> class that is based on the
    ///    specified record.
    /// </summary>
    /// <param name="_prodBOM">
    ///    The <c>ProdBOM</c> record for which the class is instantiated.
    /// </param>
    /// <param name="_inventType">
    ///    The associated <c>InventType</c> class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventMov_ProdLine_ProjTrans</c> class.
    /// </returns>
    public static InventMov_ProdLine_ProjTrans newFromProdBOM(
        ProdBOM         _prodBOM,
        InventType      _inventType = ProdBOMType::construct(_prodBOM))
    {
        return new InventMov_ProdLine_ProjTrans(_prodBOM, _inventType);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>