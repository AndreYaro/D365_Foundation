<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SpecContextCleanupTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class SpecContextCleanupTask implements IDataMaintenanceTask
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceCaption caption()
    {
        return literalStr("@CashManagement:SpecContextCleanupTaskCaption");
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceTaskResult run()
    {
        DataMaintenanceTaskResult taskResult = DataMaintenanceTaskResult::construct();
        int deleteCount = this.deleteSpecContext();
        taskResult.parmCount(deleteCount);
        taskResult.addMessage(
            DataMaintenanceMessageContract::constructForMessage(
                Exception::Info,
                strFmt("@CashManagement:SpecContextCleanupResult", int2Str(deleteCount))));
        return taskResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSpecContext</Name>
				<Source><![CDATA[
    private int deleteSpecContext()
    {
        CashManagementDataMaintainLogger logger = CashManagementDataMaintainLogger::createLogger(classStr(SpecContextCleanupDataAction));
        using (SysInstrumentationActivityContext context = logger.activityContextWithCustomProperties(CashManagementDataMaintainInstrumentationConstants::DeleteSpecContextOrphan))
        {
            int fixCount;
            SpecContext specContext;
            while select crosscompany DataAreaId from specContext
                group by specContext.DataAreaId
            {
                changecompany(specContext.DataAreaId)
                {
                    SpecContext specContextToDelete;
                    SysDaQueryObject queryObject = this.buildQueryForDeleteOrphanSpecContext(specContextToDelete);
                    CashManagementDataMaintainHelper::statementDelete(queryObject);
                    fixCount += int642int(specContextToDelete.RowCount());
                }
            }
            context.addCustomProperty(CashManagementDataMaintainInstrumentationConstants::CountOfChangesMade, int2Str(fixCount));
            return fixCount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQueryForDeleteOrphanSpecContext</Name>
				<Source><![CDATA[
    private SysDaQueryObject buildQueryForDeleteOrphanSpecContext(SpecContext _specContext)
    {
        SysDaQueryObject specContextQuery = new SysDaQueryObject(_specContext);

        SpecTrans specTrans;
        SysDaQueryObject specTransQuery = new SysDaQueryObject(specTrans);
        specTransQuery.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(specTrans, fieldStr(SpecTrans, SpecRecId)),
                new SysDaFieldExpression(_specContext, fieldStr(specContext, RecId)))
            .and(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(specTrans, fieldStr(SpecTrans, SpecCompany)),
                    new SysDaFieldExpression(_specContext, fieldStr(specContext, DataAreaId))))
            .and(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(specTrans, fieldStr(SpecTrans, SpecTableId)),
                    new SysDaFieldExpression(_specContext, fieldStr(specContext, TableId)))));

        specContextQuery.joinClause(SysDaJoinKind::NotExistsJoin, specTransQuery);

        return specContextQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>