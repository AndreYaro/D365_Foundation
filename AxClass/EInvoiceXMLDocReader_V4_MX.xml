<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceXMLDocReader_V4_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceXMLDocReader_V4_MX</c> class handles the reading of XML documents for CFDI V4.0.
/// </summary>
public class EInvoiceXMLDocReader_V4_MX extends EInvoiceXMLDocReader_V3_3_MX
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getOriginalChain</Name>
				<Source><![CDATA[
    public str getOriginalChain()
    {
        str originalChain = this.getStartChainElement()
            + this.getComprobante()
            + this.getInformacionGlobal()
            + this.getAllRelacionados()
            + this.getEmissor()
            + this.getReceptor()
            + this.getAllConceptos()
            + this.getAllRetenciones()
            + this.getAllTraslados()
            + this.getForeignTrade()
            + this.getCartaPorte()
            + this.getEndChainElement();

        return this.getFormattedOriginalChain(originalChain);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartChainElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the start chain element.
    /// </summary>
    /// <returns>The start element.</returns>
    protected str getStartChainElement()
    {
        return #delimiter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEndChainElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the end chain element.
    /// </summary>
    /// <returns>The end element.</returns>
    protected str getEndChainElement()
    {
        return #delimiter + #delimiter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getComprobante</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the "Comprobante" element from the XML.
    /// </summary>
    /// <returns>The "Comprobante" element from the XML.</returns>
    protected str getComprobante()
    {
        return this.getXpathValue(@'/x:Comprobante/@Version')
            + this.getXpathValue(@'/x:Comprobante/@Serie')
            + this.getXpathValue(@'/x:Comprobante/@Folio')
            + this.getXpathValue(@'/x:Comprobante/@Fecha')
            + this.getXpathValue(@'/x:Comprobante/@FormaPago')
            + this.getXpathValue(@'/x:Comprobante/@NoCertificado')
            + this.getXpathValue(@'/x:Comprobante/@CondicionesDePago')
            + this.getXpathValue(@'/x:Comprobante/@SubTotal')
            + this.getXpathValue(@'/x:Comprobante/@Descuento')
            + this.getXpathValue(@'/x:Comprobante/@Moneda')
            + this.getXpathValue(@'/x:Comprobante/@TipoCambio')
            + this.getXpathValue(@'/x:Comprobante/@Total')
            + this.getXpathValue(@'/x:Comprobante/@TipoDeComprobante')
            + this.getXpathValue(@'/x:Comprobante/@Exportacion')
            + this.getXpathValue(@'/x:Comprobante/@MetodoPago')
            + this.getXpathValue(@'/x:Comprobante/@LugarExpedicion')
            + this.getXpathValue(@'/x:Comprobante/@Confirmacion');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInformacionGlobal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the "InformacionGlobal" element from the XML.
    /// </summary>
    /// <returns>The "InformacionGlobal" element from the XML.</returns>
    protected str getInformacionGlobal()
    {
        return this.getXpathValue(@'/x:Comprobante/x:InformacionGlobal/@Periodicidad')
            + this.getXpathValue(@'/x:Comprobante/x:InformacionGlobal/@Meses')
            + this.getXpathValue(@'/x:Comprobante/x:InformacionGlobal/@AÃ±o');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllRelacionados</Name>
				<Source><![CDATA[
    protected str getAllRelacionados()
    {
        str relacionadosChain;

        XmlNode node = this.getXpathNode(@'/x:Comprobante');

        if (node != null)
        {
            XmlNodeList relacionadosNodeList = node.selectNodes(@'x:CfdiRelacionados', nsmgr);

            for (XmlNode relacionadosNode = relacionadosNodeList.nextNode(); relacionadosNode != null; relacionadosNode = relacionadosNodeList.nextNode())
            {
                boolean addTipoRelacion = true;
                XmlNodeList relacionadoNodeList = relacionadosNode.selectNodes(@'x:CfdiRelacionado', nsmgr);
                for (XmlNode relacionadoNode = relacionadoNodeList.nextNode(); relacionadoNode != null; relacionadoNode = relacionadoNodeList.nextNode())
                {
                    relacionadosChain += addTipoRelacion ? this.getXpathValueBasedOnNode(relacionadosNode, '@TipoRelacion') : '';
                    relacionadosChain += this.getXpathValueBasedOnNode(relacionadoNode,'@UUID');
                    addTipoRelacion = false;
                }
            }
        }

        return relacionadosChain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEmissor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the "Emisor" element from the XML.
    /// </summary>
    /// <returns>The "Emisor" element from the XML.</returns>
    protected str getEmissor()
    {
        return this.getXpathValue(@'/x:Comprobante/x:Emisor/@Rfc')
            + this.removeDuplicatedSpaces(this.getXpathValue(@'/x:Comprobante/x:Emisor/@Nombre'))
            + this.getXpathValue(@'/x:Comprobante/x:Emisor/@RegimenFiscal');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReceptor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the "Receptor" element from the XML.
    /// </summary>
    /// <returns>The "Receptor" element from the XML.</returns>
    protected str getReceptor()
    {
        return this.getXpathValue(@'/x:Comprobante/x:Receptor/@Rfc')
            + this.removeDuplicatedSpaces(this.getXpathValue(@'/x:Comprobante/x:Receptor/@Nombre'))
            + this.getXpathValue(@'/x:Comprobante/x:Receptor/@DomicilioFiscalReceptor')
            + this.getXpathValue(@'/x:Comprobante/x:Receptor/@ResidenciaFiscal')
            + this.getXpathValue(@'/x:Comprobante/x:Receptor/@NumRegIdTrib')
            + this.getXpathValue(@'/x:Comprobante/x:Receptor/@RegimenFiscalReceptor')
            + this.getXpathValue(@'/x:Comprobante/x:Receptor/@UsoCFDI');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllConceptos</Name>
				<Source><![CDATA[
    protected str getAllConceptos()
    {
        XmlNode node = this.getXpathNode(@'/x:Comprobante/x:Conceptos');

        if (!node)
        {
            return '';
        }

        str conceptosChain;

        XmlNodeList nodeList = node.selectNodes(@'x:Concepto', nsmgr);

        for (XmlNode conceptoNode = nodeList.nextNode(); conceptoNode; conceptoNode = nodeList.nextNode())
        {
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@ClaveProdServ');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@NoIdentificacion');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@Cantidad');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@ClaveUnidad');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@Unidad');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@Descripcion');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@ValorUnitario');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@Importe');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@Descuento');
            conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@ObjetoImp');

            conceptosChain += this.getConceptoTraslados(conceptoNode);
            conceptosChain += this.getConceptoRetenciones(conceptoNode);

            if (conceptoNode.selectSingleNode(@'x:InformacionAduanera/@NumeroPedimento', nsmgr))
            {
                conceptosChain += this.getXpathValueBasedOnNode(conceptoNode, @'x:InformacionAduanera/@NumeroPedimento');
            }

            if (conceptoNode.selectSingleNode(@'x:CuentaPredial/@Numero', nsmgr))
            {
                conceptosChain += this.getXpathValueBasedOnNode(conceptoNode, @'x:CuentaPredial/@Numero');
            }
        }

        return this.removeDuplicatedSpaces(conceptosChain);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllTraslados</Name>
				<Source><![CDATA[
    protected str getAllTraslados()
    {
        XmlNode node = this.getXpathNode(@'/x:Comprobante/x:Impuestos/x:Traslados');

        if (!node)
        {
            return '';
        }

        str trasladosChain;

        XmlNodeList nodeList = node.selectNodes(@'x:Traslado', nsmgr);

        for (XmlNode trasladoNode = nodeList.nextNode(); trasladoNode; trasladoNode = nodeList.nextNode())
        {
            trasladosChain += this.getXpathValueBasedOnNode(trasladoNode, '@Base');
            trasladosChain += this.getXpathValueBasedOnNode(trasladoNode, '@Impuesto');
            trasladosChain += this.getXpathValueBasedOnNode(trasladoNode, '@TipoFactor');
            trasladosChain += this.getXpathValueBasedOnNode(trasladoNode, '@TasaOCuota');
            trasladosChain += this.getXpathValueBasedOnNode(trasladoNode, '@Importe');
        }

        trasladosChain += this.getXpathValue(@'/x:Comprobante/x:Impuestos/@TotalImpuestosTrasladados');

        return trasladosChain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllRetenciones</Name>
				<Source><![CDATA[
    protected str getAllRetenciones()
    {
        return super() + this.getXpathValue(@'/x:Comprobante/x:Impuestos/@TotalImpuestosRetenidos');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNameSpace</Name>
				<Source><![CDATA[
    protected str getNameSpace()
    {
        return 'http://www.sat.gob.mx/cfd/4';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>