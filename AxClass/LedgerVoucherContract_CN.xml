<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerVoucherContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for LedgerVoucherReport SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the LedgerVoucherReport SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationGroupAttribute('PrintLedgerDimension', "@GeneralLedger:ReportParameter_PrintAccountDimension", '7'),
    SysOperationGroupAttribute('PrePrintPaper', "@GLS54554", '8'),
    SysOperationGroupAttribute('BlankPaper', "@SYS25850", '9'),
    SysOperationContractProcessingAttribute(classStr(LedgerVoucherUIBuilder_CN), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
class LedgerVoucherContract_CN implements SysOperationValidatable
{
    LedgerJournalId                 journalNum;
    Range                           voucherNum;
    FromDate                        fromDate;
    ToDate                          toDate;
    LedgerVoucherTypeId_CN          voucherType;
    LedgerPrintLayoutId_CN          printLayoutCode;
    LedgerPrintLayoutCurrency_CN    printLayoutCurrency;
    Counter                         maxLines;
    PrePrintLevel                   prePrintLevel;
    boolean                         isPrintFromJournalLine;
    boolean                         postProforma;
    RecId                           ledgerVoucherReportTmpRecId;
    CurrentOperationsTax            postingLayer;
    boolean                         isPrintLedgerDimension;
    DimensionDisplayLayout_CN       dimensionDisplayLayout;
    str                             ledgerVoucherReportTmpPhysicalTableName;

    #define.MinimumLine(2)
    #define.MaximumLine(10)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter From date.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter FromDate.
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationDisplayOrderAttribute('4')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrintFromJournalLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Report caller.
    /// </summary>
    /// <param name="_isPrintFromJournalLine">
    /// The new value of the datacontract parameter Report caller;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Report caller.
    /// </returns>
    [
        DataMemberAttribute('IsPrintFromJournalLine')
    ]
    public boolean parmIsPrintFromJournalLine(boolean _isPrintFromJournalLine = isPrintFromJournalLine)
    {
        isPrintFromJournalLine = _isPrintFromJournalLine;
        return isPrintFromJournalLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Journal number.
    /// </summary>
    /// <param name="_journalNum">
    /// The new value of the datacontract parameter Journal number;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Journal number.
    /// </returns>
    [
        DataMemberAttribute('JournalNum'),
        SysOperationLabelAttribute(literalStr("@SYS17795")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public LedgerJournalId parmJournalNumber(LedgerJournalId _journalNum = journalNum)
    {
        journalNum = _journalNum;
        return journalNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaxLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Maximum lines.
    /// </summary>
    /// <param name="_maxLines">
    /// The new value of the datacontract parameter Maximum lines;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Maximum lines.
    /// </returns>
    [
        DataMemberAttribute('MaxLines'),
        SysOperationLabelAttribute(literalStr("@GLS54547")),
        SysOperationGroupMemberAttribute('BlankPaper'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public Counter parmMaxLines(Counter _maxLines = maxLines)
    {
        maxLines = _maxLines;
        return maxLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter postinglayer.
    /// </summary>
    /// <param name="_postingLayer">
    /// The new value of the datacontract parameter postinglayer; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter postinglayer.
    /// </returns>
    [
        DataMemberAttribute('PostingLayer'),
        SysOperationDisplayOrderAttribute('6'),
        SysOperationLabelAttribute(literalstr("@SYS334157"))
    ]
    public CurrentOperationsTax parmPostingLayer(CurrentOperationsTax _postingLayer = postingLayer)
    {
        postingLayer = _postingLayer;
        return postingLayer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrePrintLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Print level.
    /// </summary>
    /// <param name="_prePrintLevel">
    /// The new value of the datacontract parameter Print level;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Print level.
    /// </returns>
    [
        DataMemberAttribute('PrePrintLevel')
    ]
    public PrePrintLevel parmPrePrintLevel(PrePrintLevel _prePrintLevel = prePrintLevel)
    {
        prePrintLevel = _prePrintLevel;
        return prePrintLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintLayoutCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Print layout code.
    /// </summary>
    /// <param name="_printLayoutCode">
    /// The new value of the datacontract parameter Print layout code;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Print layout code.
    /// </returns>
    [
        DataMemberAttribute('PrintLayoutCode'),
        SysOperationGroupMemberAttribute('PrePrintPaper'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerPrintLayoutId_CN parmPrintLayoutCode(LedgerPrintLayoutId_CN _printLayoutCode = printLayoutCode)
    {
        printLayoutCode = _printLayoutCode;
        return printLayoutCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintLayoutCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Print layout currency.
    /// </summary>
    /// <param name="_printLayoutCurrency">
    /// The new value of the datacontract parameter Print layout currency;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Print layout currency.
    /// </returns>
    [
        DataMemberAttribute('PrintLayoutCurrency'),
        SysOperationGroupMemberAttribute('BlankPaper'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerPrintLayoutCurrency_CN parmPrintLayoutCurrency(LedgerPrintLayoutCurrency_CN _printLayoutCurrency = printLayoutCurrency)
    {
        printLayoutCurrency = _printLayoutCurrency;
        return printLayoutCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpTableDataRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter LedgerVoucherReportTmpRecId.
    /// </summary>
    /// <param name="_ledgerVoucherReportTmpRecId">
    /// The new value of the datacontract parameter LedgerVoucherReportTmpRecId
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter LedgerVoucherReportTmpRecId
    /// </returns>
    [
        DataMemberAttribute('LegderVoucherReportTmpRecId')
    ]
    public RecId parmTmpTableDataRecId(RecId _ledgerVoucherReportTmpRecId = ledgerVoucherReportTmpRecId)
    {
        ledgerVoucherReportTmpRecId = _ledgerVoucherReportTmpRecId;
        return ledgerVoucherReportTmpRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter To date.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter ToDate.
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationDisplayOrderAttribute('5')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVoucherNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Chinese voucher number.
    /// </summary>
    /// <param name="_voucherNum">
    /// The new value of the datacontract parameter Chinese voucher number;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Chinese voucher number.
    /// </returns>
    [
        DataMemberAttribute('VoucherNum'),
        SysOperationLabelAttribute(literalStr("@GLS60258")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public Range parmVoucherNumber(Range _voucherNum = voucherNum)
    {
        voucherNum = _voucherNum;
        return voucherNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVoucherType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Voucher type.
    /// </summary>
    /// <param name="_voucherType">
    /// The new value of the datacontract parameter Voucher type;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Voucher type.
    /// </returns>
    [
        DataMemberAttribute('VoucherType'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerVoucherTypeId_CN parmVoucherType(LedgerVoucherTypeId_CN _voucherType = voucherType)
    {
        voucherType = _voucherType;
        return voucherType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrintLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Print account dimension.
    /// </summary>
    /// <param name="_voucherType">
    /// The new value of the datacontract parameter Print account dimension;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Print account dimension.
    /// </returns>
    [
        DataMemberAttribute('IsPrintLedgerDimension')
    ]
    public boolean parmIsPrintLedgerDimension(boolean _isPrintLedgerDimension = isPrintLedgerDimension)
    {
        isPrintLedgerDimension = _isPrintLedgerDimension;
        return isPrintLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionDisplayLayout</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Print layout for account dimension.
    /// </summary>
    /// <param name="_voucherType">
    /// The new value of the datacontract parameter Print layout for account dimension;
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Print layout for account dimension.
    /// </returns>
    [
        DataMemberAttribute('DimensionDisplayLayout'),
        SysOperationGroupMemberAttribute('PrintLedgerDimension'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public DimensionDisplayLayout_CN parmDimensionDisplayLayout(DimensionDisplayLayout_CN _dimensionDisplayLayout = dimensionDisplayLayout)
    {
        dimensionDisplayLayout = _dimensionDisplayLayout;
        return dimensionDisplayLayout;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates parameter entered by the user in the custom-dialog.
    /// </summary>
    /// <returns>
    /// true if validations pass; false otherwise.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (!this.parmVoucherType())
        {
            //Voucher type must be entered
            ret = checkFailed(strFmt("@SYS39376", "@GLS54929"));
        }
        if (!this.parmIsPrintFromJournalLine())
        {
            if (ret && !this.parmFromDate())
            {
                //From date must be entered
                ret = checkFailed(strFmt("@SYS39376", "@SYS24050"));
            }
            if (ret && !this.parmToDate())
            {
                //To date must be entered
                ret = checkFailed(strFmt("@SYS39376", "@SYS36680"));
            }
            if (ret && this.parmFromDate() > this.parmToDate())
            {
                //From date must be before To date
                ret = checkFailed("@SYS91020");
            }
        }
        if (this.parmPrePrintLevel() == PrePrintLevel::PrePrinted)
        {
            if (ret && !this.parmPrintLayoutCode())
            {
                //Print layout code must be entered
                ret = checkFailed(strFmt("@SYS39376", "@GLS54454"));
            }
        }
        if (this.parmPrePrintLevel() == PrePrintLevel::BlankPaper)
        {
            if (ret && (this.parmMaxLines() > #MaximumLine || this.parmMaxLines() < #MinimumLine))
            {
                //The maximum number of lines must be between 2 and 10.
                ret = checkFailed(strFmt("@GLS54558", #MinimumLine, #MaximumLine));
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the first and last day of current period.
    /// </summary>
    /// <returns>
    /// The container include the first and last day of current period.
    /// </returns>
    public static container getDefaultDates()
    {
        RecId       fiscalCalendarRecId;
        FromDate    fromDate;
        ToDate      toDate;

        fiscalCalendarRecId = CompanyInfoHelper::fiscalCalendarRecId();

        fromDate    = LedgerFiscalCalendar::findFirstDayofPeriod(fiscalCalendarRecId, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        toDate      = LedgerFiscalCalendar::findLastDayofPeriod(fiscalCalendarRecId, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        return [fromDate, toDate];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerVoucherReportTmpPhysicalTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter LedgerVoucherReportTmpPhysicalTableName.
    /// </summary>
    /// <param name="_ledgerVoucherReportTmpPhysicalTableName">
    /// The new value of the datacontract parameter LedgerVoucherReportTmpPhysicalTableName
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter LedgerVoucherReportTmpPhysicalTableName
    /// </returns>
    [
        DataMemberAttribute('LedgerVoucherReportTmpPhysicalTableName')
    ]
    public str parmLedgerVoucherReportTmpPhysicalTableName(str _ledgerVoucherReportTmpPhysicalTableName = ledgerVoucherReportTmpPhysicalTableName)
    {
        ledgerVoucherReportTmpPhysicalTableName = _ledgerVoucherReportTmpPhysicalTableName;
        return ledgerVoucherReportTmpPhysicalTableName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>