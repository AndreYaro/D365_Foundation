<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysDictType_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
// Get properies needed for dynamic profit tax output forms
final class SysDictType_RU extends SysDictType
{
    #define.Auto("Auto")
    #define.DecimalNum2(2)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>noOfDecimals</Name>
				<Source><![CDATA[
    public int noOfDecimals(boolean newMode = false)
    {
        str ret;

        setprefix(this.name());

        if (! isSysId(this.id()))
        {
            ret = findProperty(this.treeNode().AOTgetProperties(), #PropertyNoOfDecimals);
            if (ret != #Auto)
                return any2int(str2num(ret));
        }

        if (this.extend())
        {
            return new SysDictType_RU(this.extend()).noOfDecimals();
        }

        return #DecimalNum2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>noYes2Boolean</Name>
				<Source><![CDATA[
    #define.Yes("Yes")
    private boolean noYes2Boolean(str _property)
    {
        return  _property == #Yes ?
                true              :
                false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showZero</Name>
				<Source><![CDATA[
    public boolean showZero()
    {
        str ret;

        setprefix(this.name());

        if (! isSysId(this.id()) )
        {
            ret = findProperty(this.treeNode().AOTgetProperties(), #PropertyShowZero);
            if (ret != #Auto)
                return this.noYes2Boolean(ret);
        }
        if (this.extend())
        {
            return new SysDictType_RU(this.extend()).showZero();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLegalEntityInCountryRegion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the ISO code of a legal entity matches any ISO code supplied in the type.
    /// </summary>
    /// <param name = "_selectableDataArea">Value of the legal entity.</param>
    /// <returns>true if a matching ISO code is found; otherwise, false.</returns>
    public boolean isLegalEntityInCountryRegion(selectableDataArea _selectableDataArea = curext())
    {
        return SysCountryRegionCode::isLegalEntityInCountryRegion(
            this.getCountryRegionCodes(),
            _selectableDataArea);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>