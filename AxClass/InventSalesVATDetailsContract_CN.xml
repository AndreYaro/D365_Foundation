<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSalesVATDetailsContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>InventSalesVATDetailsContract</c> SSRS report.
/// </summary>
/// <remarks>
/// This is the Data contract class for the <c>InventSalesVATDetails_CN</c> SSRS report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(InventSalesVATDetailsUIBuilder_CN), SysOperationDataContractProcessingMode::CreateSeparateUIBuilderForEachContract)
]
class InventSalesVATDetailsContract_CN implements SysOperationValidatable
{
    CustAccount         custAccount;
    TaxCode             salesTaxCode;
    CustInvoiceId       custInvoiceId;

    LedgerFiscalPeriodNameContract_CN   periodContract;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPeriodContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the object instance to the nested data contract.
    /// </summary>
    /// <param name = "_periodContract">
    /// The new value of the data contract parameter _periodContract;
    /// </param>
    /// <returns>
    /// The current value of data contract parameter To period
    /// </returns>
    [
        DataMemberAttribute,
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerFiscalPeriodNameContract_CN parmPeriodContract(LedgerFiscalPeriodNameContract_CN _periodContract = periodContract)
    {
        periodContract = _periodContract;
        return periodContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesTaxCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Sales tax code
    /// </summary>
    /// <param name="_salesTaxCode">
    /// The new value of the data contract parameter "Sales tax code"
    /// </param>
    /// <returns>
    /// The current value of data contract parameter Sales tax code
    /// </returns>
    [
        DataMemberAttribute('SalesTaxCode'),
        SysOperationLabelAttribute(literalStr("@SYS182460")),
        SysOperationDisplayOrderAttribute('4')
    ]
    public TaxCode parmSalesTaxCode(TaxCode _salesTaxCode = salesTaxCode)
    {
        salesTaxCode = _salesTaxCode;
        return salesTaxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Customer account
    /// </summary>
    /// <param name = "_custAccount">
    /// The new value of the data contract parameter "Customer account";
    /// </param>
    /// <returns>
    /// The current value of data contract parameter Customer account
    /// </returns>
    [
        DataMemberAttribute('CustAccount'),
        SysOperationLabelAttribute(literalStr("@SYS7149")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public CustAccount parmCustAccount(CustAccount _custAccount = custAccount)
    {
        custAccount = _custAccount;
        return custAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Invoice
    /// </summary>
    /// <param name = "_custInvoiceId">
    /// The new value of the data contract parameter "Invoice";
    /// </param>
    /// <returns>
    /// The current value of data contract parameter Invoice
    /// </returns>
    [
        DataMemberAttribute('CustInvoiceId'),
        SysOperationLabelAttribute(literalStr("@SYS12128")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public CustInvoiceId parmInvoiceId(CustInvoiceId _custInvoiceId = custInvoiceId)
    {
        custInvoiceId = _custInvoiceId;
        return custInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// True when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!this.parmSalesTaxCode())
        {
            //The sales tax code parameter is missing a value.
            isValid = checkFailed(strFmt("@GLS220078", "@SYS182460"));
        }

        return isValid && this.parmPeriodContract().validate();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>