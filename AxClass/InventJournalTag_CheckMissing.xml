<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalTag_CheckMissing</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventJournalTag_CheckMissing extends RunBase
{
    InventJournalId         journalId;
    Counter                 startValue, endValue;
    NumberSequenceFormat    numberSequenceFormat;
    NoYes                   includeStatusMissing;

    DialogField             startValueField;
    DialogField             endValueField;
    DialogField             numberSequenceFormatField;
    DialogField             includeStatusMissingField;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        journalId,
        startValue,
        endValue,
        numberSequenceFormat,
        includeStatusMissing
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    ///    interface.
    /// </summary>
    /// <returns>
    ///    A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog can be built by using the <c>Dialog</c> class or by using a class that is created in the
    ///    Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        DialogRunbase   dialog = super();

        DialogField journalIdField = dialog.addField(extendedTypeStr(InventJournalId));
        journalIdField.value(journalId);
        journalIdField.allowEdit(false);

        startValueField = dialog.addField(extendedTypeStr(Counter), "@SYS14923", "@SYS21768");
        startValueField.value(startValue);

        endValueField = dialog.addField(extendedTypeStr(Counter), "@SYS53150", "@SYS9749");
        endValueField.value(endValue);

        numberSequenceFormatField = dialog.addField(extendedTypeStr(NumberSequenceFormat), "@SYS65163");
        numberSequenceFormatField.value(numberSequenceFormat);

        includeStatusMissingField = dialog.addField(enumStr(NoYes), strFmt("@SYS65166", InventJournalTagStatus::Missing), "@SYS65167");
        includeStatusMissingField.value(includeStatusMissing);
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean     ret = super();

        startValue              = startValueField.value();
        endValue                = endValueField.value();
        numberSequenceFormat    = numberSequenceFormatField.value();
        includeStatusMissing    = includeStatusMissingField.value();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromForm</Name>
				<Source><![CDATA[
    protected void initFromForm(Args _args,JournalForm _journalForm)
    {
        JournalTableMap                 journalTable = _journalForm.journalTableData().journalTable();

        this.getLast();
        this.parmJournalId(journalTable.JournalId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalId</Name>
				<Source><![CDATA[
    public InventJournalId parmJournalId(InventJournalId _journalId = journalId)
    {
        journalId = _journalId;
        return journalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        Counter                 i;
        InventJournalTrans_Tag  inventJournalTrans_Tag;

        for (i=startValue; i<=endValue; i++)
        {
            InventTagId tagId = NumberSeq::numInsertFormat(i, numberSequenceFormat);
            select firstonly inventJournalTrans_Tag
                where inventJournalTrans_Tag.JournalId  == journalId    &&
                      inventJournalTrans_Tag.TagId      == tagId;
            if (!inventJournalTrans_Tag)
            {
                info(strFmt("@SYS65168", tagId));
            }
            else if (includeStatusMissing && inventJournalTrans_Tag.TagStatus == InventJournalTagStatus::Missing)
            {
                info(strFmt("@SYS65169", tagId, InventJournalTagStatus::Missing));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer     version     = RunBase::getVersion(_packedClass);
        boolean     ret = true;

        switch (version)
        {
            case #CurrentVersion   :
                [version,#CurrentList] = _packedClass;
                break;
            default :
                ret = false;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventJournalTag_CheckMissing construct(InventJournalTable _inventJournalTable)
    {
        return new InventJournalTag_CheckMissing();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS65164";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        JournalForm journalForm = JournalForm::fromArgs(_args);
        InventJournalTag_CheckMissing inventJournalTag_CheckMissing = InventJournalTag_CheckMissing::newFromForm(_args,journalForm);

        if (!inventJournalTag_CheckMissing.prompt())
        {
            return;
        }

        inventJournalTag_CheckMissing.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    protected static InventJournalTag_CheckMissing newFromForm(
        Args            _args,
        JournalForm     _journalForm)
    {
        InventJournalTable              inventJournalTable = _journalForm.journalTableData().journalTable();
        InventJournalTag_CheckMissing   inventJournalTag_CheckMissing = InventJournalTag_CheckMissing::construct(inventJournalTable);

        inventJournalTag_CheckMissing.initFromForm(_args, _journalForm);
        return inventJournalTag_CheckMissing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
