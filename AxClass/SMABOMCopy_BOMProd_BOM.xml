<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMABOMCopy_BOMProd_BOM</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SMABOMCopy_BOMProd_BOM extends SMABOMCopy_BOMProd
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkParameters</Name>
				<Source><![CDATA[
        protected boolean checkParameters()
    {
        boolean ret = super() && BOMTable::checkExist(bomCopyRefId);

        ret = ret && InventTable::find(itemId).checkConfigId(configId);

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
        protected void copy()
    {
        SMAServiceBOMTable  serviceBOMTableNew;
        BOMSearch           BOMSearch   = BOMSearch::newBOMCalc(bomCopyRefId, bomDate, itemId, configId);
        RecordInsertList    recordList  = this.initRecordList();
        Map                 subBOMMap   = new Map(Types::Record, Types::Record);
        MapEnumerator       me;

        while (BOMSearch && BOMSearch.next())
        {
            this.initBuffer(serviceBOMTableNew, BOMSearch.BOM());

            recordList.add(serviceBOMTableNew);

            if (serviceBOMTableNew.inventTable().isProducedByDefault())
            {
                subBOMMap.insert(serviceBOMTableNew, BOMSearch.BOM());
            }
            else
            {
                this.incProgress(serviceBOMTableNew.inventTable());
            }
        }

        recordList.insertDatabase();

        recordList = null;

        // Copy sub BOMs
        me = subBOMMap.getEnumerator();

        while (me.moveNext())
        {
            this.copySubBOM(me.currentKey(), me.currentValue());
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>copySubBOM</Name>
				<Source><![CDATA[
        protected void copySubBOM(SMAServiceBOMTable _bufferNew, Common _bufferSource)
    {
        this.incProgress(_bufferSource.inventTable());

        super(_bufferNew, _bufferSource);
    }
]]></Source>
			</Method>
			<Method>
				<Name>getProgressCount</Name>
				<Source><![CDATA[
        protected container getProgressCount()
    {
        int         canHaveBOM;
        int         cannotHaveBOM;
        BOMSearch   BOMSearch = BOMSearch::newBOMCalc(bomCopyRefId,bomDate,itemId,configId);
        BOM         localBOM;

        while (BOMSearch && BOMSearch.next())
        {
            localBOM = BOMSearch.BOM();
            if (localBOM.inventTable().isProducedByDefault())
            {
                canHaveBOM++;
            }
            else
            {
                cannotHaveBOM++;
            }
        }

        return [canHaveBOM, cannotHaveBOM];
    }
]]></Source>
			</Method>
			<Method>
				<Name>initBufferFromCopySource</Name>
				<Source><![CDATA[
        protected void initBufferFromCopySource(SMAServiceBOMTable _buffer, Common _source)
    {
        BOM source = _source as BOM;
        _buffer.initFromBOM(source);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>