<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CzTaxDocumentCreate_Cust</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CzTaxDocumentCreate_Cust</c> is used to create tax documents for
/// customer transactions.
/// </summary>
class CzTaxDocumentCreate_Cust extends CzTaxDocumentCreate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allocateDocumentNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allocate tax document number.
    /// </summary>
    /// <param name = "_document">Tax document.</param>
    public void allocateDocumentNum(CzTaxDocumentTable _document)
    {
        boolean OK = true;

        NumberSeq numSeq;
        NumberSequenceReference numSeqRef;
        NumberSequenceTable numSeqTable;
        numSeqRef = CustParameters::numRefCustTaxDocument_CZ();

        if (! numSeqRef || ! numSeqRef.NumberSequenceId)
        {
            OK = checkFailed(strfmt("@GLS111556", new DictType(extendedtypenum(CZTaxDocumentNum_Cust)).label(), "@SYS25196"));
        }

        if (OK)
        {
            numSeqTable = numSeqRef.numberSequenceTable();

            if (! numSeqTable.Continuous)
            {
                OK = checkFailed(strfmt("@SYS26207", numSeqRef.referenceLabel() +
                                                     ' (' +
                                                     "@SYS25196" +
                                                     ')'));
            }
            if (numSeqTable.Manual)
            {
                OK = checkFailed(strfmt("@SYS26209", numSeqRef.referenceLabel() +
                                                     ' (' +
                                                     "@SYS25196" +
                                                     ')'));
            }
        }

        if (OK)
        {
            numSeq = NumberSeq::newGetNum(numSeqRef);
            _document.TaxDocumentNum = numSeq.num();
        }
        else
        {
            throw error("@SYS23020");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts Tax Document.
    /// </summary>
    /// <param name = "_document">Tax document.</param>
    public void insert(CzTaxDocumentTable _document)
    {
        _document.AmountCur = - _document.AmountCur;
        _document.AmountMST = - _document.AmountMST;
        _document.VATAmountCur = - _document.VATAmountCur;
        _document.VATAmountMST = - _document.VATAmountMST;

        super(_document);
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemForm</Name>
				<Source><![CDATA[
        protected str menuItemForm()
    {
        return menuitemdisplaystr(CzTaxDocumentTable_Cust);
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemReport</Name>
				<Source><![CDATA[
        protected str menuItemReport()
    {
        return menuitemoutputstr(CzTaxDocumentTable_Cust);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sign</Name>
				<Source><![CDATA[
        int sign()
    {
        return -1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        static ClassDescription description()
    {
        return "@GLS108305";
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the help text for the dialog.
    /// </summary>
    /// <returns>
    /// The help text for the dialog.
    /// </returns>
    static HelpTxt helpText()
    {
        return "@GLS108305";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        // fix for menu item does not call abstract classes
    static void main(Args _args)
    {
        CzTaxDocumentCreate::main(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>