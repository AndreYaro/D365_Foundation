<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalizingDefinitionManagerCustomer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The JournalizingDefinitionManagerCustomer class provides the journalizing definition implementation specific to the accounts receivable module.
/// </summary>
class JournalizingDefinitionManagerCustomer extends JournalizingDefinitionManager
{
    JournalizingDefinitionCustomerTrans     journalizingDefinitionCustomerTrans;
    BillingCodeRefRecId                     billingCodeRefRecId;
    BillingClassificationRefRecId           billingClassificationRefRecId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDefaultJournalizingDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the journalizing definition ID by using the parameter values.
    /// </summary>
    /// <returns>
    /// The journalizing definition ID according to the class parameter.
    /// </returns>
    /// <remarks>
    /// This method is accounts receivable specific implementation of the <c>getDefaultJournalizingDefinition</c> method of the <c>JournalizingDefinitionManager</c> class.
    /// </remarks>
    public JournalizingDefinitionId getDefaultJournalizingDefinition()
    {
        JournalizingDefinitionId journalizingDefinitionId;

        select firstonly JournalizingDefinition
        from journalizingDefinitionCustomerTrans

        order by MatchType

        where   ((journalizingDefinitionCustomerTrans.CustBillingCode == billingCodeRefRecId &&
                journalizingDefinitionCustomerTrans.MatchType == BillingCodeBillingClassAll::BillingCode) ||
                (journalizingDefinitionCustomerTrans.CustBillingClassification == billingClassificationRefRecId &&
                journalizingDefinitionCustomerTrans.MatchType == BillingCodeBillingClassAll::BillingClassification)||
                journalizingDefinitionCustomerTrans.MatchType == BillingCodeBillingClassAll::All) &&
                journalizingDefinitionCustomerTrans.CustomerTransactionType == JournalizingDefinitionCustomerTrans::ledgerPostingTypeToCustomerTransactionType(ledgerPostingType);

        journalizingDefinitionId = journalizingDefinitionCustomerTrans.JournalizingDefinition;

        return journalizingDefinitionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingClassification</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    BillingClassificationRefRecId parmBillingClassification(BillingClassificationRefRecId    _billingClassificationRefRecId = billingClassificationRefRecId)
    {
        billingClassificationRefRecId  = _billingClassificationRefRecId;
        return  billingClassificationRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    BillingCodeRefRecId parmBillingCode(BillingCodeRefRecId    _billingCodeRefRecId = billingCodeRefRecId)
    {
        billingCodeRefRecId  = _billingCodeRefRecId;
        return  billingCodeRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLedgerPostingTypeValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the provided posting type is valid for use with the class.
    /// </summary>
    /// <param name = "_ledgerPostingType">The posting type to validate.</param>
    /// <returns>True if the posting type is valid; false otherwise.</returns>
    protected boolean isLedgerPostingTypeValid(LedgerPostingType _ledgerPostingType)
    {
        boolean ret;

        if (_ledgerPostingType == LedgerPostingType::CustBalance ||
           _ledgerPostingType == LedgerPostingType::SalesFreight ||
           _ledgerPostingType == LedgerPostingType::Tax ||
           _ledgerPostingType == LedgerPostingType::LedgerJournal ||
           _ledgerPostingType == LedgerPostingType::CustInterest
            )
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>