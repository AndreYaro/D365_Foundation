<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventOwnerReserveQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventOwnerReserveQueryBuilder</c> class is used to build a <c>Query</c> sorted by inventory owner type for selecting quantities and dimensions for reservation from the <c>WHSInventReserve</c> table.
/// </summary>
public class WHSInventOwnerReserveQueryBuilder extends WHSInventReserveQueryBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSInventOwnerReserveQueryBuilder construct()
    {
        return new WHSInventOwnerReserveQueryBuilder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newExcludeSumWithDeltaRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiates a new instance of this class based on the arguments for selecting <c>WHSInventReserve</c> records without any corresponding <c>WHSInventReserveDelta</c> records.
    /// </summary>
    /// <param name="_itemId">
    /// The item ID to select on-hand for.
    /// </param>
    /// <param name="_inventDimCriteria">
    /// An <c>InventDim</c> buffer that will be used to filter the on-hand.
    /// </param>
    /// <param name="_inventDimParmCriteria">
    /// An <c>InventDimParm</c> buffer that will be used to filter the on-hand.
    /// </param>
    /// <param name="_reservationHierarchyLevel">
    /// The reservation level that should be used when selecting on-hand.
    /// </param>
    /// <param name="_ttsId">
    /// Current transaction ID.
    /// </param>
    /// <param name="_includeOrdered">
    /// A boolean indicating whether available ordered should be included.
    /// </param>
    /// <param name="_includePhysical">
    /// A boolean indicating whether available physical should be included.
    /// </param>
    /// <param name="_onlyReserveOnWHSEnabledWarehouses">
    /// A boolean indicating whether only advanced warehousing enabled warehouses should be reserved on.
    /// </param>
    /// <returns>
    /// A new instance of this class based on the arguments.
    /// </returns>
    /// <remarks>
    /// Note that the query can only filter availability at the <c>_reservationHierarchLevel</c> and not up the hierarchy.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static WHSInventOwnerReserveQueryBuilder newExcludeSumWithDeltaRecords(
        ItemId                          _itemId,
        InventDim                       _inventDimCriteria,
        InventDimParm                   _inventDimParmCriteria,
        WHSReservationHierarchyLevel    _reservationHierarchyLevel,
        CreatedTransactionId            _ttsId,
        boolean                         _includeOrdered,
        boolean                         _includePhysical,
        boolean                         _onlyReserveOnWHSEnabledWarehouses = false)
    {
        var queryBuilder = WHSInventOwnerReserveQueryBuilder::newFromParameters(
            _itemId,
            _inventDimCriteria,
            _inventDimParmCriteria,
            _reservationHierarchyLevel,
            _includeOrdered,
            _includePhysical);

        queryBuilder.parmTtsId(_ttsId);
        queryBuilder.parmExcludeSumWithDeltaRecords(true);
        queryBuilder.parmOnlyReserveOnWHSEnabledWarehouses(_onlyReserveOnWHSEnabledWarehouses);

        return queryBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new instance of this class based on the arguments.
    /// </summary>
    /// <param name="_itemId">
    /// The item ID to select on-hand for.
    /// </param>
    /// <param name="_inventDimCriteria">
    /// An <c>InventDim</c> buffer that will be used to filter the on-hand.
    /// </param>
    /// <param name="_inventDimParmCriteria">
    /// An <c>InventDimParm</c> buffer that will be used to filter the on-hand.
    /// </param>
    /// <param name="_reservationHierarchyLevel">
    /// The reservation level that should be used when selecting on-hand.
    /// </param>
    /// <param name="_ttsId">
    /// Current transaction ID.
    /// </param>
    /// <param name="_includeOrdered">
    /// A boolean indicating whether available ordered should be included.
    /// </param>
    /// <param name="_includePhysical">
    /// A boolean indicating whether available physical should be included.
    /// </param>
    /// <returns>
    /// A new instance of this class based on the arguments.
    /// </returns>
    /// <remarks>
    /// Note that the query can only filter availability at the <c>_reservationHierarchLevel</c> and not up the hierarchy.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static WHSInventOwnerReserveQueryBuilder newFromParameters(
        ItemId                          _itemId,
        InventDim                       _inventDimCriteria,
        InventDimParm                   _inventDimParmCriteria,
        WHSReservationHierarchyLevel    _reservationHierarchyLevel,
        boolean                         _includeOrdered,
        boolean                         _includePhysical)
    {
        var queryBuilder = WHSInventOwnerReserveQueryBuilder::construct();

        queryBuilder.initializeFromParameters(
            _itemId,
            _inventDimCriteria,
            _inventDimParmCriteria,
            _reservationHierarchyLevel,
            _includeOrdered,
            _includePhysical);

        queryBuilder.parmExcludeSumWithDeltaRecords(false);

        return queryBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildOnHandQuery</Name>
				<Source><![CDATA[
    public Query buildOnHandQuery()
    {
        this.initQuery();

        QueryBuildDataSource qbdsOwnerType = query.addDataSource(tableNum(InventOwnerType));
        // Make sure our own inventory (owned by the current legal entity) is reserved first
        qbdsOwnerType.addOrderByField(fieldNum(InventOwnerType, IsCurrentLegalEntity), SortOrder::Descending);
        qbdsOwnerType.fetchMode(QueryFetchMode::One2One);

        QueryBuildDataSource qbdsInventDim = this.addInventDimDS(qbdsOwnerType);

        QueryBuildDataSource qbdsWHSInventReserve = qbdsInventDim.addDataSource(tableNum(WHSInventReserve));
        qbdsWHSInventReserve.relations(true);
        qbdsWHSInventReserve.joinMode(JoinMode::InnerJoin);
        qbdsWHSInventReserve.fetchMode(QueryFetchMode::One2One);

        this.addRangesToInventReserveQBDS(qbdsWHSInventReserve);

        if (this.parmExcludeSumWithDeltaRecords())
        {
            this.addWHSInventReserveDeltaDSNotExist(qbdsWHSInventReserve);
        }

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>