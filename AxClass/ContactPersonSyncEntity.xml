<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ContactPersonSyncEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ContactPersonSyncEntity extends DirParty_Person
{
    ContactPerson               contactPerson;

    // Properties
    ContactPersonId             contactPersonId;
    smmAssistantName            assistantName;
    smmAssistantPhone           assistantTelephoneNumber;
    smmBillingInformation       billingInformation;
    smmContactPersonDetailsMemo contactMemo;
    smmOutlookCategories        outlookCategories;
    smmComputerNetworkName      computerNetworkName;
    smmDepartment               department;
    smmGovernmentIDNumber       governmentIDNumber;
    smmMileage                  mileage;
    smmOfficeLocation           officeLocation;
    smmOrganizationalIDNumber   organizationalIDNumber;
    smmProfession               profession;
    smmSensitivity              sensitivity;
    smmSpouse                   spouse;
    smmLoyaltyDescription       loyalty;
    smmDecisionDescription      decision;
    smmCharacterDescription     character;
    smmTMAvailableFrom          timeAvailableFrom;
    smmTMAvailableTo            timeAvailableTo;

    DirPartyRecId               contactForParty;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializePersonInfo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the contact person specific attributes.
    /// </summary>
    public void initializePersonInfo()
    {
        super();
        if (contactPerson.isNewRecord())
        {
            contactPerson.initValue();
        }
        else
        {
            contactPerson.selectForUpdate(true);
        }

        partyRecId = contactPerson.Party;
        contactPersonId = contactPerson.ContactPersonId;
        contactForParty = contactPerson.ContactForParty;
        assistantName = contactPerson.AssistantName;
        assistantTelephoneNumber = contactPerson.AssistantPhone;
        billingInformation = contactPerson.BillingInformation;
        computerNetworkName = contactPerson.ComputerNetworkName;
        department = contactPerson.Department;
        contactMemo = contactPerson.Memo;
        outlookCategories = contactPerson.OutlookCategories;
        governmentIDNumber = contactPerson.GovernmentIDNumber;
        mileage = contactPerson.Mileage;
        officeLocation = contactPerson.OfficeLocation;
        organizationalIDNumber = contactPerson.OrganizationalIDNumber;
        profession = contactPerson.Profession;
        sensitivity = contactPerson.Sensitivity;
        spouse = contactPerson.Spouse;
        loyalty = smmLoyaltyGroup::find(contactPerson.Loyalty).Description;
        decision = smmDecisionGroup::find(contactPerson.Decision).Description;
        character = smmCharacterGroup::find(contactPerson.Character).Description;
        timeAvailableFrom = contactPerson.TimeAvailableFrom;
        timeAvailableTo = contactPerson.TimeAvailableTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates new instance of a <c>ContactPersonSyncEntity</c> object.
    /// </summary>
    /// <param name="_common">
    ///    A <c>ContactPerson</c> table buffer.
    /// </param>
    /// <param name="_transDateTime">
    ///    Effective record date time.
    /// </param>
    void new(Common _common, TransDateTime _transDateTime = DateTimeUtil::getSystemDateTime())
    {
        super(_common, _transDateTime);
        contactPerson = _common;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssistantName</Name>
				<Source><![CDATA[
    public smmAssistantName parmAssistantName(smmAssistantName _assistantName = assistantName)
    {
        assistantName = _assistantName;
        return assistantName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssistantTelephoneNumber</Name>
				<Source><![CDATA[
    public smmAssistantPhone parmAssistantTelephoneNumber(smmAssistantPhone _assistantTelephoneNumber = assistantTelephoneNumber)
    {
        assistantTelephoneNumber = _assistantTelephoneNumber;
        return assistantTelephoneNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingInformation</Name>
				<Source><![CDATA[
    public smmBillingInformation parmBillingInformation(smmBillingInformation _billingInformation = billingInformation)
    {
        billingInformation = _billingInformation;
        return billingInformation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCharacter</Name>
				<Source><![CDATA[
    public smmCharacterDescription parmCharacter(smmCharacterDescription _character = character)
    {
        character = _character;
        return character;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmComputerNetworkName</Name>
				<Source><![CDATA[
    public smmComputerNetworkName parmComputerNetworkName(smmComputerNetworkName _computerNetworkName = computerNetworkName)
    {
        computerNetworkName = _computerNetworkName;
        return computerNetworkName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactForParty</Name>
				<Source><![CDATA[
    public DirPartyRecId parmContactForParty(DirPartyRecId _contactForParty = contactForParty)
    {
        contactForParty = _contactForParty;
        return contactForParty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactMemo</Name>
				<Source><![CDATA[
    public smmContactPersonDetailsMemo parmContactMemo(smmContactPersonDetailsMemo _contactMemo = contactMemo)
    {
        contactMemo = _contactMemo;
        return contactMemo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactPerson</Name>
				<Source><![CDATA[
    public ContactPerson parmContactPerson(ContactPerson _contactPerson = contactPerson)
    {
        contactPerson = _contactPerson;
        return contactPerson;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactPersonId</Name>
				<Source><![CDATA[
    public ContactPersonId parmContactPersonId(ContactPersonId _contactPersonId = contactPersonId)
    {
        contactPersonId = _contactPersonId;
        return contactPersonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDecision</Name>
				<Source><![CDATA[
    public smmDecisionDescription parmDecision(smmDecisionDescription _decision = decision)
    {
        decision = _decision;
        return decision;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDepartment</Name>
				<Source><![CDATA[
    public smmDepartment parmDepartment(smmDepartment _department = department)
    {
        department = _department;
        return department;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGovernmentIDNumber</Name>
				<Source><![CDATA[
    public smmGovernmentIDNumber parmGovernmentIDNumber(smmGovernmentIDNumber _governmentIDNumber = governmentIDNumber)
    {
        governmentIDNumber = _governmentIDNumber;
        return governmentIDNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLoyalty</Name>
				<Source><![CDATA[
    public smmLoyaltyDescription parmLoyalty(smmLoyaltyDescription _loyalty = loyalty)
    {
        loyalty = _loyalty;
        return loyalty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMileage</Name>
				<Source><![CDATA[
    public smmMileage parmMileage(smmMileage _mileage = mileage)
    {
        mileage = _mileage;
        return mileage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOfficeLocation</Name>
				<Source><![CDATA[
    public smmOfficeLocation parmOfficeLocation(smmOfficeLocation _officeLocation = officeLocation)
    {
        officeLocation = _officeLocation;
        return officeLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrganizationalIDNumber</Name>
				<Source><![CDATA[
    public smmOrganizationalIDNumber parmOrganizationalIDNumber(smmOrganizationalIDNumber _organizationalIDNumber = organizationalIDNumber)
    {
        organizationalIDNumber = _organizationalIDNumber;
        return organizationalIDNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOutlookCategories</Name>
				<Source><![CDATA[
    public smmOutlookCategories parmOutlookCategories(smmOutlookCategories _outlookCategories = outlookCategories)
    {
        outlookCategories = _outlookCategories;
        return outlookCategories;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProfession</Name>
				<Source><![CDATA[
    public smmProfession parmProfession(smmProfession _profession = profession)
    {
        profession = _profession;
        return profession;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSensitivity</Name>
				<Source><![CDATA[
    public smmSensitivity parmSensitivity(smmSensitivity _sensitivity = sensitivity)
    {
        sensitivity = _sensitivity;
        return sensitivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSpouse</Name>
				<Source><![CDATA[
    public smmSpouse parmSpouse(smmSpouse _spouse = spouse)
    {
        spouse = _spouse;
        return spouse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeAvailableFrom</Name>
				<Source><![CDATA[
    public smmTMAvailableFrom parmTimeAvailableFrom(smmTMAvailableFrom _timeAvailableFrom = timeAvailableFrom)
    {
        timeAvailableFrom = _timeAvailableFrom;
        return timeAvailableFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeAvailableTo</Name>
				<Source><![CDATA[
    public smmTMAvailableTo parmTimeAvailableTo(smmTMAvailableTo _timeAvailableTo = timeAvailableTo)
    {
        timeAvailableTo = _timeAvailableTo;
        return timeAvailableTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Commits the <c>ContactPerson</c> record.
    /// </summary>
    public void write()
    {
        smmLoyaltyGroup loyaltyGroup;
        smmDecisionGroup decisionGroup;
        smmCharacterGroup characterGroup;

        ttsbegin;
        super();
        contactPerson.ContactPersonId = contactPersonId;
        contactPerson.Party = partyRecId;
        contactPerson.ContactForParty = contactForParty;
        contactPerson.AssistantName = assistantName;
        contactPerson.AssistantPhone = assistantTelephoneNumber;
        contactPerson.BillingInformation = billingInformation;
        contactPerson.ComputerNetworkName = computerNetworkName;
        contactPerson.Department = department;
        contactPerson.Memo = contactMemo;
        contactPerson.OutlookCategories = outlookCategories;
        contactPerson.GovernmentIDNumber = governmentIDNumber;
        contactPerson.Mileage = mileage;
        contactPerson.OfficeLocation = officeLocation;
        contactPerson.OrganizationalIDNumber = organizationalIDNumber;
        contactPerson.Profession = profession;
        contactPerson.Sensitivity = sensitivity;
        contactPerson.Spouse = spouse;
        select firstonly LoyaltyId from loyaltyGroup where loyaltyGroup.Description == loyalty;
        contactPerson.Loyalty = loyaltyGroup.LoyaltyId;
        select firstonly DecisionId from decisionGroup where decisionGroup.Description == decision;
        contactPerson.Decision = decisionGroup.DecisionId;
        select firstonly CharacterId from characterGroup where characterGroup.Description == character;
        contactPerson.Character = characterGroup.CharacterId;
        contactPerson.TimeAvailableFrom = timeAvailableFrom;
        contactPerson.TimeAvailableTo = timeAvailableTo;

        contactPerson.write();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Helps construct the <c>ContactPersonSyncEntity</c> class.
    /// </summary>
    /// <param name="_contactPerson">
    ///    A <c>ContactPerson</c> table buffer.
    /// </param>
    /// <returns>
    ///    An instance of the <c>ContactPersonSyncEntity</c> class.
    /// </returns>
    public static ContactPersonSyncEntity construct(ContactPerson _contactPerson)
    {
        ContactPersonSyncEntity contactPersonEntity = new ContactPersonSyncEntity(_contactPerson);
        contactPersonEntity.initFromDirPartyTable(DirPartyTable::findRec(_contactPerson.Party));
        contactPersonEntity.initializePersonInfo();
        return contactPersonEntity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>