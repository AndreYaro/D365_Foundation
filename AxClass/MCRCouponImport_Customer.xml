<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCouponImport_Customer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRCouponImport_Customer</c> class handles the import process of customers for coupons.
/// </summary>
class MCRCouponImport_Customer extends MCRCouponImport
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preImport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prepares for import by deleting the customers associated with a coupon if append is unchecked.
    /// </summary>
    public void preImport()
    {
        MCRCouponCustomer  mcrCouponCustomer;
        if (!this.parmAppend() && this.parmMCRCouponId())
        {
            delete_from mcrCouponCustomer
                where mcrCouponCustomer.MCRCouponId == this.parmMCRCouponId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>importRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Imports customer record for a given coupon.
    /// </summary>
    /// <param name = "_custAccount">Customer account to import.</param>
    /// <param name = "_insertList">The record insert list instance to add the record to.</param>
    public void importRecord(CustAccount _custAccount, RecordInsertList _insertList)
    {
        MCRCouponCustomer  mcrCouponCustomer;

        if (this.validateAccountNum(_custAccount))
        {
            mcrCouponCustomer.MCRCouponId = this.parmMCRCouponId();
            mcrCouponCustomer.CustVendRel = _custAccount;
            mcrCouponCustomer.CustomerCode = TableGroupAll::Table;
            _insertList.add(mcrCouponCustomer);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAccountNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that a customer is valid and can be imported and associated with a coupon.
    /// </summary>
    /// <param name="_custAccount">
    /// The reference to the customer to validate.
    /// </param>
    /// <returns>
    /// true if the customer is valid to be linked to a coupon; otherwise, false.
    /// </returns>
    public boolean validateAccountNum(CustAccount _custAccount)
    {
        boolean ok = true;
        if (!CustTable::find(_custAccount))
        {
            ok = checkFailed(strFmt("@SYS4730", _custAccount));
        }
        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>