<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustPostInvoiceJobCBD_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(CustPostInvoiceJob))]
internal final class CustPostInvoiceJobCBD_Extension
{
    private container printManagementExtensionsParameters;
    private boolean isERPrintSetupExists = false;
    private boolean isSSRSPrintSetupExists = true;
    private boolean isRuntimeCBDDestinationsSupported;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>printManagementExtensionsParameters</Name>
				<Source><![CDATA[
    public container printManagementExtensionsParameters()
    {
        return printManagementExtensionsParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrintManagementExtensionsParameters</Name>
				<Source><![CDATA[
    public void updatePrintManagementExtensionsParameters(container _printManagementExtensionsParameters)
    {
        printManagementExtensionsParameters = _printManagementExtensionsParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>callERPrintSettingsFormletter</Name>
				<Source><![CDATA[
    internal static boolean callERPrintSettingsFormletter(CustPostInvoiceJob _formLetter)
    {
        boolean ret;

        NonSSRSPrintMgmtAdapterPromptAdditionalParametersResult result = NonSSRSPrintMgmtAdapter::promptAndRestoreAdditionalParameters(
            CBDDestinationsFormLetterEngine::getFormatNamesDestinationMapByFormLetter(_formLetter,  PrintMgmtDocumentType::SalesFreeTextInvoice),
            NonSSRSPrintMgmtPromptExtensionParameters::newFromPacked(_formLetter.printManagementExtensionsParameters()));

        if (result.parmPromptResult())
        {
            ret = true;

            if (result.parmExtensionParameters() &&
                !result.parmExtensionParameters().isEmpty())
            {
                _formLetter.updatePrintManagementExtensionsParameters(result.parmExtensionParameters().pack());
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSupportedCBDReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Identifies if ER destination on runtime form is supported.
    /// </summary>
    /// <returns>true if ER destination on runtime form is supported; otherwise, false.</returns>
    internal boolean isSupportedCBDReport()
    {
        isRuntimeCBDDestinationsSupported = CBDDestinationsFormLetterEngine::isSupportedPrintMgmtDocType(PrintMgmtDocumentType::SalesFreeTextInvoice);
        return isRuntimeCBDDestinationsSupported;
    }

]]></Source>
			</Method>
			<Method>
				<Name>analyzePrintManagementSetup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Analyzes the print management setup.
    /// </summary>
    /// <returns>A container of analyze results.</returns>
    internal container analyzePrintManagementSetup()
    {
        container ret = CBDDestinationsFormLetterEngine::analyzePrintManagementSetup(this, PrintMgmtDocumentType::SalesFreeTextInvoice);
        [isSSRSPrintSetupExists, isERPrintSetupExists] = ret;
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        container packed = next pack();
        packed = SysPackExtensions::appendVariableToPack(
            packed,
            classStr(CustPostInvoiceJobCBD_Extension),
            varStr(printManagementExtensionsParameters),
            printManagementExtensionsParameters);

        packed = SysPackExtensions::appendVariableToPack(
            packed,
            classStr(CustPostInvoiceJobCBD_Extension),
            varStr(isERPrintSetupExists),
            isERPrintSetupExists);

        packed = SysPackExtensions::appendVariableToPack(
            packed,
            classStr(CustPostInvoiceJobCBD_Extension),
            varStr(isSSRSPrintSetupExists),
            isSSRSPrintSetupExists);

        packed = SysPackExtensions::appendVariableToPack(
            packed,
            classStr(CustPostInvoiceJobCBD_Extension),
            varStr(isRuntimeCBDDestinationsSupported),
            isRuntimeCBDDestinationsSupported);

        return packed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean ret = next unpack(_packedClass);
        
        if (ret)
        {
            printManagementExtensionsParameters = SysPackExtensions::extractPackedVariable(
                _packedClass,
                classStr(CustPostInvoiceJobCBD_Extension),
                varStr(printManagementExtensionsParameters));

            isERPrintSetupExists = SysPackExtensions::extractPackedVariable(
                _packedClass,
                classStr(CustPostInvoiceJobCBD_Extension),
                varStr(isERPrintSetupExists));

            isSSRSPrintSetupExists = SysPackExtensions::extractPackedVariable(
                _packedClass,
                classStr(CustPostInvoiceJobCBD_Extension),
                varStr(isSSRSPrintSetupExists));

            isRuntimeCBDDestinationsSupported = SysPackExtensions::extractPackedVariable(
                _packedClass,
                classStr(CustPostInvoiceJobCBD_Extension),
                varStr(isRuntimeCBDDestinationsSupported));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packSysLastValues</Name>
				<Source><![CDATA[
    public container packSysLastValues()
    {
        container packed = next packSysLastValues();
        packed = SysPackExtensions::appendVariableToPack(
            packed,
            classStr(CustPostInvoiceJobCBD_Extension),
            varStr(printManagementExtensionsParameters),
            printManagementExtensionsParameters);
        return packed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpackSysLastValues</Name>
				<Source><![CDATA[
    public void unpackSysLastValues(container _packedValues)
    {
        next unpackSysLastValues(_packedValues);
        
        printManagementExtensionsParameters = SysPackExtensions::extractPackedVariable(
            _packedValues,
            classStr(CustPostInvoiceJobCBD_Extension),
            varStr(printManagementExtensionsParameters));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCustPrintOutInvoice</Name>
				<Source><![CDATA[
    protected CustPrintOutInvoice initializeCustPrintOutInvoice()
    {
        CustPrintOutInvoice custPrintOutInvoice = next initializeCustPrintOutInvoice();

        if (custPrintOutInvoice)
        {
            if (printManagementExtensionsParameters)
            {
                custPrintOutInvoice.parmPrintManagementExtensionsParameters(printManagementExtensionsParameters);
            }

            custPrintOutInvoice.parmIsRuntimeCBDDestinationsSupported(isRuntimeCBDDestinationsSupported);
            custPrintOutInvoice.parmIsERPrintSetupExists(isERPrintSetupExists);
            custPrintOutInvoice.parmIsSSRSPrintSetupExists(isSSRSPrintSetupExists);
        }

        return custPrintOutInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCustPrintOutInvoiceProforma</Name>
				<Source><![CDATA[
    protected CustPrintOutInvoice initializeCustPrintOutInvoiceProforma()
    {
        CustPrintOutInvoice custPrintOutInvoice = next initializeCustPrintOutInvoiceProforma();

        if (custPrintOutInvoice)
        {
            if (printManagementExtensionsParameters)
            {
                custPrintOutInvoice.parmPrintManagementExtensionsParameters(printManagementExtensionsParameters);
            }

            custPrintOutInvoice.parmIsRuntimeCBDDestinationsSupported(isRuntimeCBDDestinationsSupported);
            custPrintOutInvoice.parmIsERPrintSetupExists(isERPrintSetupExists);
            custPrintOutInvoice.parmIsSSRSPrintSetupExists(isSSRSPrintSetupExists);
        }

        return custPrintOutInvoice;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>