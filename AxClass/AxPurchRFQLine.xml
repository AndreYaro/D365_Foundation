<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxPurchRFQLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AxPurchRFQLine</c> class handles the business logic for the <c>PurchRFQLine</c> table.
/// </summary>
/// <remarks>
/// This internal <c>AxBC</c> class is derived from the <c>AxInternalBase</c> class.
/// </remarks>
class AxPurchRFQLine extends AxApplicationBase implements AxInventSiteDimensionable
{
    PurchRFQLine                purchRFQLine;
    AxInventDim_PurchRFQLine    axInventDim;

    str                         county;
    str                         state;
    int                         axPurchRFQTableIdx;
    int                         axPurchRFQReplyLineIdx;
    int                         axPurchRFQCaseLineIdx;
    boolean                     axPurchRFQTableSetManually;
    int                         inventTableIdx;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axInventDim</Name>
				<Source><![CDATA[
    public AxInventDim_PurchRFQLine axInventDim(AxInventDim_PurchRFQLine _axInventDim = axInventDim)
    {
        axInventDim = _axInventDim;

        return axInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the original record of the <c>PurchRFQLine</c> table.
    /// </summary>
    /// <returns>
    ///    A <c>SMAServiceOrderLine</c> object
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchRFQReplyLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an instance of the <c>AxPurchRFQReplyLine</c> class.
    /// </summary>
    /// <param name="_axPurchRFQReplyLine">
    ///    The <c>AxPurchRFQReplyLine</c> to set; optional.
    /// </param>
    /// <returns>
    ///    An <c>AxPurchRFQReplyLine</c> object.
    /// </returns>
    public AxPurchRFQReplyLine axPurchRFQReplyLine(AxPurchRFQReplyLine    _axPurchRFQReplyLine = null)
    {
        AxPurchRFQReplyLine axPurchRFQReplyLine;

        if (!axPurchRFQReplyLineIdx)
        {
            axPurchRFQReplyLineIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axPurchRFQReplyLine))
        {
            this.classCacheInsert(axPurchRFQReplyLineIdx, _axPurchRFQReplyLine);
            axPurchRFQReplyLine = _axPurchRFQReplyLine;
        }
        else
        {
            if (this.classCacheExist(axPurchRFQReplyLineIdx))
            {
                axPurchRFQReplyLine = this.classCacheLookup(axPurchRFQReplyLineIdx);
            }
            else
            {
                axPurchRFQReplyLine = AxPurchRFQReplyLine::newPurchRFQReplyLine(PurchRFQReplyLine::find(this.parmRFQId()));
                this.classCacheInsert(axPurchRFQReplyLineIdx, axPurchRFQReplyLine);
            }
        }

        return axPurchRFQReplyLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchRFQTable</Name>
				<Source><![CDATA[
    public AxPurchRFQTable axPurchRFQTable(AxPurchRFQTable _axPurchRFQTable = null)
    {
        AxPurchRFQTable axPurchRFQTable;

        if (!axPurchRFQTableIdx)
        {
            axPurchRFQTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axPurchRFQTable))
        {
            this.classCacheInsert(axPurchRFQTableIdx, _axPurchRFQTable);
            axPurchRFQTable = _axPurchRFQTable;
            axPurchRFQTableSetManually = true;
        }
        else
        {
            if (this.classCacheExist(axPurchRFQTableIdx))
            {
                axPurchRFQTable = this.classCacheLookup(axPurchRFQTableIdx);
            }
            else
            {
                this.setRFQId();
                axPurchRFQTable = AxPurchRFQTable::newPurchRFQTable(PurchRFQTable::find(this.parmRFQId()));

                this.classCacheInsert(axPurchRFQTableIdx, axPurchRFQTable);
            }
        }

        return axPurchRFQTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an instance of the <c>PurchRFQLine</c> table.
    /// </summary>
    /// <param name="_purchRFQLine">
    ///    The<paramref name=" _smaServiceOrderLine" /> buffer passed to this method; optional.
    /// </param>
    /// <returns>
    ///    The current record of the <c>PurchRFQLine</c> table
    /// </returns>
    public Common currentRecord(Common _purchRFQLine = purchRFQLine)
    {
        PurchRFQLine   purchRFQLineLocal;

        if (!prmisDefault(_purchRFQLine))
        {
            super(_purchRFQLine);
            purchRFQLine = _purchRFQLine as PurchRFQLine;
        }
        else
        {
            super();
        }

        purchRFQLineLocal = PurchRFQLine::findRecId(purchRFQLine.RecId, true);
        if (purchRFQLine.RecVersion != purchRFQLineLocal.RecVersion)
        {
            return  purchRFQLineLocal;
        }
        else
        {
            return  purchRFQLine;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the empty record for the <c>PurchRFQLine</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record from the <c>PurchRFQLine</c> table
    /// </returns>
    protected Common emptyRecord()
    {
        PurchRFQLine localPurchRFQLine;
        return localPurchRFQLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteDimensionLink</Name>
				<Source><![CDATA[
    protected InventSiteDimensionLink inventSiteDimensionLink()
    {
        return InventSiteDimensionLink::newDimensionTables(this.purchRFQLine(), this.axInventDim().inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTableRecord</Name>
				<Source><![CDATA[
    public InventTable inventTableRecord(InventTable _inventTable = null)
    {
        InventTable   inventTable;

        if (!inventTableIdx)
        {
            inventTableIdx          = this.nextCacheIdx();
        }

        if (!prmisDefault(_inventTable))
        {
            this.tableCacheInsert(inventTableIdx, _inventTable);
            inventTable = _inventTable;
        }
        else
        {
            if (this.tableCacheExist(inventTableIdx))
            {
                inventTable = (this.tableCacheLookup(inventTableIdx) as InventTable);
            }
            else
            {
                this.setItemId();
                inventTable = InventTable::find(this.parmItemId());
                this.tableCacheInsert(inventTableIdx, inventTable);
            }
        }

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAxPurchRFQTableFieldsSet</Name>
				<Source><![CDATA[
    public boolean isAxPurchRFQTableFieldsSet()
    {
        return this.isFieldSet(fieldNum(PurchRFQLine, rfqId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventTableRecordFieldsSet</Name>
				<Source><![CDATA[
    public boolean isInventTableRecordFieldsSet()
    {
        return this.isFieldSet(fieldNum(PurchRFQLine, ItemId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStorageDimFieldSet</Name>
				<Source><![CDATA[
    public boolean isStorageDimFieldSet(FieldId _fieldId)
    {
        return this.axInventDim().isFieldSet(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxPurchRFQLine</c> class.
    /// </summary>
    public void new()
    {
        axInventDim = AxInventDim_PurchRFQLine::newAxPurchRFQLine(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActivityNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ActivityNumber</c> parameter.
    /// </summary>
    /// <param name="_activityNumber">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ActivityNumber</c> parameter.
    /// </returns>
    public ProjActivityNumber parmActivityNumber(ProjActivityNumber _activityNumber = '')
    {
        if (!prmisDefault(_activityNumber))
        {
            this.setField(fieldNum(PurchRFQLine, ActivityNumber), _activityNumber);
        }
        return purchRFQLine.ActivityNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>AddressRefRecId</c> parameter.
    /// </summary>
    /// <param name="_addressRefRecId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>AddressRefRecId</c> parameter.
    /// </returns>
    public AddressRefRecId parmAddressRefRecId(AddressRefRecId _addressRefRecId = 0)
    {
        // To avoid this problem the fields property Visible can be set to NO
        if (!prmisDefault(_addressRefRecId))
        {
            this.setField(fieldNum(PurchRFQLine, AddressRefRecId), _addressRefRecId);
        }
        return purchRFQLine.AddressRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefTableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>AddressRefTableId</c> parameter.
    /// </summary>
    /// <param name="_addressRefTableId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>AddressRefTableId</c> parameter.
    /// </returns>
    public AddressRefTableId parmAddressRefTableId(AddressRefTableId _addressRefTableId = 0)
    {
        // To avoid this problem the fields property Visible can be set to NO
        if (!prmisDefault(_addressRefTableId))
        {
            this.setField(fieldNum(PurchRFQLine, AddressRefTableId), _addressRefTableId);
        }
        return purchRFQLine.AddressRefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>AgreementId</c> parameter.
    /// </summary>
    /// <param name="_agreementId">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>AgreementId</c> parameter.
    /// </returns>
    public PurchAgreementId parmAgreementId(PurchAgreementId _agreementId = '')
    {
        if (!prmisDefault(_agreementId))
        {
            this.setField(fieldNum(PurchRFQLine, AgreementId), _agreementId);
        }

        return purchRFQLine.AgreementId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetBookId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>AssetBookId</c> parameter.
    /// </summary>
    /// <param name="_assetBookId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>AssetBookId</c> parameter.
    /// </returns>
    public AssetBookId parmAssetBookId(AssetBookId _assetBookId = '')
    {
        if (!prmisDefault(_assetBookId))
        {
            this.setField(fieldNum(PurchRFQLine, AssetBookId), _assetBookId);
        }
        return purchRFQLine.AssetBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>AssetId</c> parameter.
    /// </summary>
    /// <param name="_assetId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>AssetId</c> parameter.
    /// </returns>
    public AssetIdOpen parmAssetId(AssetIdOpen _assetId = '')
    {
        if (!prmisDefault(_assetId))
        {
            this.setField(fieldNum(PurchRFQLine, AssetId), _assetId);
        }
        return purchRFQLine.AssetId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetTransTypePurch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>AssetTransTypePurch</c> parameter.
    /// </summary>
    /// <param name="_assetTransTypePurch">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>AssetTransTypePurch</c> parameter.
    /// </returns>
    public AssetTransTypePurchEDT parmAssetTransTypePurch(AssetTransTypePurchEDT _assetTransTypePurch = AssetTransTypePurch::Acquisition)
    {
        if (!prmisDefault(_assetTransTypePurch))
        {
            this.setField(fieldNum(PurchRFQLine, AssetTransTypePurch), _assetTransTypePurch);
        }
        return purchRFQLine.AssetTransTypePurch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CategoryId</c> parameter.
    /// </summary>
    /// <param name="_categoryId">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>CategoryId</c> parameter.
    /// </returns>
    public PurchCategory parmCategoryId(PurchCategory _categoryId = 0)
    {
        if (!prmisDefault(_categoryId))
        {
            this.setField(fieldNum(PurchRFQLine, CategoryId), _categoryId);
        }

        return purchRFQLine.CategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCFOPTable_BR</Name>
				<Source><![CDATA[
    public RefRecId parmCFOPTable_BR(RefRecId _cfopTable_BR = 0)
    {
        if (!prmisDefault(_cfopTable_BR))
        {
            this.setField(fieldNum(PurchRFQLine, cfopTable_BR), _cfopTable_BR);
        }
        return purchRFQLine.cfopTable_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmedDlv</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ConfirmedDlv</c> parameter.
    /// </summary>
    /// <param name="_confirmedDlv">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ConfirmedDlv</c> parameter.
    /// </returns>
    public PurchLineDlvDate parmConfirmedDlv(PurchLineDlvDate _confirmedDlv = dateNull())
    {
        if (!prmisDefault(_confirmedDlv))
        {
            this.setField(fieldNum(PurchRFQLine, ConfirmedDlv), _confirmedDlv);
        }
        return purchRFQLine.ConfirmedDlv;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CurrencyCode</c> parameter.
    /// </summary>
    /// <param name="_currencyCode">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CurrencyCode</c> parameter.
    /// </returns>
    public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;
        str         currencyCode;
        if (!prmisDefault(_currencyCode))
        {
            dictField = new DictField(tableNum(PurchRFQLine),fieldNum(PurchRFQLine,CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode,dictField);
            if (this.valueMappingInbound())
            {
                currencyCode = this.axCurrencyCode(_currencyCode);
            }
            if (currencyCode)
            {
                this.setField(fieldNum(PurchRFQLine, CurrencyCode), currencyCode);
            }
            else
            {
                this.setField(fieldNum(PurchRFQLine, CurrencyCode), _currencyCode);
            }
        }
        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(purchRFQLine.CurrencyCode);
        }
        else
        {
            return purchRFQLine.CurrencyCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DimensionDefault</c> parameter.
    /// </summary>
    /// <param name="_defaultDimension">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>DimensionDefault</c> parameter.
    /// </returns>
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.inventSiteDimensionLink().axParmDefaultDimensionSet(this, _defaultDimension);
        }
        return purchRFQLine.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DeliveryDate</c> parameter.
    /// </summary>
    /// <param name="_deliveryDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DeliveryDate</c> parameter.
    /// </returns>
    public PurchRFQRequestedDeliveryDate parmDeliveryDate(PurchRFQRequestedDeliveryDate _deliveryDate = dateNull())
    {
        if (!prmisDefault(_deliveryDate))
        {
            this.setField(fieldNum(PurchRFQLine, DeliveryDate), _deliveryDate);
        }
        return purchRFQLine.DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DeliveryName</c> parameter.
    /// </summary>
    /// <param name="_deliveryName">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DeliveryName</c> parameter.
    /// </returns>
    public Name parmDeliveryName(Name _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(PurchRFQLine, DeliveryName), _deliveryName);
        }
        return purchRFQLine.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryAddress = 0)
    {
        if (!prmisDefault(_deliveryAddress))
        {
            this.setField(fieldNum(PurchRFQLine, DeliveryPostalAddress), _deliveryAddress);
        }

        return purchRFQLine.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExpiryDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ExpiryDateTime</c> parameter.
    /// </summary>
    /// <param name="_expiryDateTime">
    ///    The ExpiryDateTime value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ExpiryDateTime</c> parameter.
    /// </returns>
    public PurchRFQExpiryDateTime parmExpiryDateTime(PurchRFQExpiryDateTime _expiryDateTime = utcDateTimeNull())
    {
        if (!prmisDefault(_expiryDateTime))
        {
            this.setField(fieldNum(PurchRFQLine, ExpiryDateTime), _expiryDateTime);
        }
        return purchRFQLine.ExpiryDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExternalItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ExternalItemId</c> parameter.
    /// </summary>
    /// <param name="_externalItemId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ExternalItemId</c> parameter.
    /// </returns>
    public PurchExternalItemId parmExternalItemId(PurchExternalItemId _externalItemId = '')
    {
        if (!prmisDefault(_externalItemId))
        {
            this.setField(fieldNum(PurchRFQLine, ExternalItemId), _externalItemId);
        }
        return purchRFQLine.ExternalItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InventDimId</c> parameter.
    /// </summary>
    /// <param name="_inventDimId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventDimId</c> parameter.
    /// </returns>
    public InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
        if (!prmisDefault(_inventDimId))
        {
            this.setField(fieldNum(PurchRFQLine, InventDimId), _inventDimId);
        }
        return purchRFQLine.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventRefId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InventRefId</c> parameter.
    /// </summary>
    /// <param name="_inventRefId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventRefId</c> parameter.
    /// </returns>
    public InventRefId parmInventRefId(InventRefId _inventRefId = '')
    {
        if (!prmisDefault(_inventRefId))
        {
            this.setField(fieldNum(PurchRFQLine, InventRefId), _inventRefId);
        }
        return purchRFQLine.InventRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventRefTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InventRefTransId</c> parameter.
    /// </summary>
    /// <param name="_inventRefTransId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventRefTransId</c> parameter.
    /// </returns>
    public InventRefTransId parmInventRefTransId(InventRefTransId _inventRefTransId = '')
    {
        if (!prmisDefault(_inventRefTransId))
        {
            this.setField(fieldNum(PurchRFQLine, InventRefTransId), _inventRefTransId);
        }
        return purchRFQLine.InventRefTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventRefType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InventRefType</c> parameter.
    /// </summary>
    /// <param name="_inventRefType">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventRefType</c> parameter.
    /// </returns>
    public InventRefType parmInventRefType(InventRefType _inventRefType = InventRefType::None)
    {
        if (!prmisDefault(_inventRefType))
        {
            this.setField(fieldNum(PurchRFQLine, InventRefType), _inventRefType);
        }
        return purchRFQLine.InventRefType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InventTransId</c> parameter.
    /// </summary>
    /// <param name="_inventTransId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventTransId</c> parameter.
    /// </returns>
    public InventTransId parmInventTransId(InventTransId _inventTransId = '')
    {
        if (!prmisDefault(_inventTransId))
        {
            this.setField(fieldNum(PurchRFQLine, InventTransId), _inventTransId);
        }
        return purchRFQLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsAlternate</Name>
				<Source><![CDATA[
    public PurchRFQIsAlternate parmIsAlternate(PurchRFQIsAlternate _isAlternate = NoYes::No)
    {
        if (!prmisDefault(_isAlternate))
        {
            this.setField(fieldNum(PurchRFQLine, IsAlternate), _isAlternate);
        }
        return purchRFQLine.IsAlternate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ItemId</c> parameter.
    /// </summary>
    /// <param name="_itemId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ItemId</c> parameter.
    /// </returns>
    public str parmItemId(str _itemId = '')
    {
        DictField   dictField;
        str         itemId;
        if (!prmisDefault(_itemId))
        {
            dictField = new DictField(tableNum(PurchRFQLine),fieldNum(PurchRFQLine,ItemId));
            this.validateInboundItemIdString(_itemId,dictField);
            if (this.valueMappingInbound())
            {
                itemId = conPeek(this.axSalesItemId('',_itemId),1);
            }
            else
            {
                this.setField(fieldNum(PurchRFQLine, ItemId), _itemId);
            }
            if (itemId)
            {
                this.setField(fieldNum(PurchRFQLine, ItemId), itemId);
            }
            else
            {
                this.setField(fieldNum(PurchRFQLine, ItemId), _itemId);
            }
        }
        if (this.valueMappingOutbound())
        {
            //Verify correct inventDim.
            return conPeek(this.axSalesItemId('', purchRFQLine.ItemId,purchRFQLine.inventDim()),1);
        }
        else
        {
            return purchRFQLine.ItemId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ItemName</c> parameter.
    /// </summary>
    /// <param name="_itemName">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ItemName</c> parameter.
    /// </returns>
    public ItemNameDisplay parmItemName(ItemNameDisplay _itemName = '')
    {
        if (!prmisDefault(_itemName))
        {
            this.setField(fieldNum(PurchRFQLine, ItemName), _itemName);
        }
        return purchRFQLine.ItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineAmount</c> parameter.
    /// </summary>
    /// <param name="_lineAmount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineAmount</c> parameter.
    /// </returns>
    public PurchLineAmount parmLineAmount(PurchLineAmount _lineAmount = 0)
    {
        if (!prmisDefault(_lineAmount))
        {
            this.setField(fieldNum(PurchRFQLine, LineAmount), _lineAmount);
        }
        return purchRFQLine.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineDisc</c> parameter.
    /// </summary>
    /// <param name="_lineDisc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineDisc</c> parameter.
    /// </returns>
    public PurchLineDisc parmLineDisc(PurchLineDisc _lineDisc = 0)
    {
        if (!prmisDefault(_lineDisc))
        {
            this.setField(fieldNum(PurchRFQLine, LineDisc), _lineDisc);
        }
        return purchRFQLine.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineNum</c> parameter.
    /// </summary>
    /// <param name="_lineNum">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineNum</c> parameter.
    /// </returns>
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisDefault(_lineNum))
        {
            this.setField(fieldNum(PurchRFQLine, LineNum), _lineNum);
        }
        return purchRFQLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LinePercent</c> parameter.
    /// </summary>
    /// <param name="_linePercent">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LinePercent</c> parameter.
    /// </returns>
    public PurchLinePercent parmLinePercent(PurchLinePercent _linePercent = 0)
    {
        if (!prmisDefault(_linePercent))
        {
            this.setField(fieldNum(PurchRFQLine, LinePercent), _linePercent);
        }
        return purchRFQLine.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineType</c> parameter.
    /// </summary>
    /// <param name="_lineType">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineType</c> parameter.
    /// </returns>
    public PurchRFQLineItemType parmLineType(PurchRFQLineItemType _lineType = PurchRFQLineItemType::Category)
    {
        if (!prmisDefault(_lineType))
        {
            this.setField(fieldNum(PurchRFQLine, LineType), _lineType);
        }
        return purchRFQLine.LineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>MultiLnDisc</c> parameter.
    /// </summary>
    /// <param name="_multiLnDisc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>MultiLnDisc</c> parameter.
    /// </returns>
    public PurchMultiLnDisc parmMultiLnDisc(PurchMultiLnDisc _multiLnDisc = 0)
    {
        if (!prmisDefault(_multiLnDisc))
        {
            this.setField(fieldNum(PurchRFQLine, MultiLnDisc), _multiLnDisc);
        }
        return purchRFQLine.MultiLnDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>MultiLnPercent</c> parameter.
    /// </summary>
    /// <param name="_multiLnPercent">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>MultiLnPercent</c> parameter.
    /// </returns>
    public PurchMultiLnPercent parmMultiLnPercent(PurchMultiLnPercent _multiLnPercent = 0)
    {
        if (!prmisDefault(_multiLnPercent))
        {
            this.setField(fieldNum(PurchRFQLine, MultiLnPercent), _multiLnPercent);
        }
        return purchRFQLine.MultiLnPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Name</c> parameter.
    /// </summary>
    /// <param name="_name">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Name</c> parameter.
    /// </returns>
    public ItemFreeTxt parmName(ItemFreeTxt _name = '')
    {
        if (!prmisDefault(_name))
        {
            this.setField(fieldNum(PurchRFQLine, Name), _name);
        }
        return purchRFQLine.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PdsCWQty</c> parameter.
    /// </summary>
    /// <param name="_pdsCWQty">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>PdsCWQty</c> parameter.
    /// </returns>
    public PdsCWInventQty parmPdsCWQty(PdsCWInventQty _pdsCWQty = 0)
    {
        if (!prmisDefault(_pdsCWQty))
        {
            this.setField(fieldNum(PurchRFQLine, PdsCWQty), _pdsCWQty);
        }
        return purchRFQLine.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PriceUnit</c> parameter.
    /// </summary>
    /// <param name="_priceUnit">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PriceUnit</c> parameter.
    /// </returns>
    public PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
        if (!prmisDefault(_priceUnit))
        {
            this.setField(fieldNum(PurchRFQLine, PriceUnit), _priceUnit);
        }
        return purchRFQLine.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjCategoryId</c> parameter.
    /// </summary>
    /// <param name="_projCategoryId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjCategoryId</c> parameter.
    /// </returns>
    public ProjCategoryId parmProjCategoryId(ProjCategoryId _projCategoryId = '')
    {
        if (!prmisDefault(_projCategoryId))
        {
            this.setField(fieldNum(PurchRFQLine, ProjCategoryId), _projCategoryId);
        }
        return purchRFQLine.ProjCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjId</c> parameter.
    /// </summary>
    /// <param name="_projId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjId</c> parameter.
    /// </returns>
    public ProjId parmProjId(ProjId _projId = '')
    {
        if (!prmisDefault(_projId))
        {
            this.setField(fieldNum(PurchRFQLine, ProjId), _projId);
        }
        return purchRFQLine.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjLinePropertyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjLinePropertyId</c> parameter.
    /// </summary>
    /// <param name="_projLinePropertyId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjLinePropertyId</c> parameter.
    /// </returns>
    public ProjLinePropertyId parmProjLinePropertyId(ProjLinePropertyId _projLinePropertyId = '')
    {
        if (!prmisDefault(_projLinePropertyId))
        {
            this.setField(fieldNum(PurchRFQLine, ProjLinePropertyId), _projLinePropertyId);
        }
        return purchRFQLine.ProjLinePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesCurrencyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjSalesCurrencyId</c> parameter.
    /// </summary>
    /// <param name="_projSalesCurrencyId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjSalesCurrencyId</c> parameter.
    /// </returns>
    public CurrencyCode parmProjSalesCurrencyId(CurrencyCode _projSalesCurrencyId = '')
    {
        if (!prmisDefault(_projSalesCurrencyId))
        {
            this.setField(fieldNum(PurchRFQLine, ProjSalesCurrencyId), _projSalesCurrencyId);
        }
        return purchRFQLine.ProjSalesCurrencyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjSalesPrice</c> parameter.
    /// </summary>
    /// <param name="_projSalesPrice">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjSalesPrice</c> parameter.
    /// </returns>
    public ProjSalesPriceCost parmProjSalesPrice(ProjSalesPriceCost _projSalesPrice = 0)
    {
        if (!prmisDefault(_projSalesPrice))
        {
            this.setField(fieldNum(PurchRFQLine, ProjSalesPrice), _projSalesPrice);
        }
        return purchRFQLine.ProjSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjSalesUnitId</c> parameter.
    /// </summary>
    /// <param name="_projSalesUnitId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjSalesUnitId</c> parameter.
    /// </returns>
    public UnitOfMeasureSymbol parmProjSalesUnitId(UnitOfMeasureSymbol _projSalesUnitId = '')
    {
        if (!prmisDefault(_projSalesUnitId))
        {
            this.setField(fieldNum(PurchRFQLine, ProjSalesUnitId), _projSalesUnitId);
        }
        return purchRFQLine.ProjSalesUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjTaxGroupId</c> parameter.
    /// </summary>
    /// <param name="_projTaxGroupId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjTaxGroupId</c> parameter.
    /// </returns>
    public ProjTaxGroup parmProjTaxGroupId(ProjTaxGroup _projTaxGroupId = '')
    {
        if (!prmisDefault(_projTaxGroupId))
        {
            this.setField(fieldNum(PurchRFQLine, ProjTaxGroupId), _projTaxGroupId);
        }
        return purchRFQLine.ProjTaxGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxItemGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjTaxItemGroupId</c> parameter.
    /// </summary>
    /// <param name="_projTaxItemGroupId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjTaxItemGroupId</c> parameter.
    /// </returns>
    public ProjTaxItemGroup parmProjTaxItemGroupId(ProjTaxItemGroup _projTaxItemGroupId = '')
    {
        if (!prmisDefault(_projTaxItemGroupId))
        {
            this.setField(fieldNum(PurchRFQLine, ProjTaxItemGroupId), _projTaxItemGroupId);
        }
        return purchRFQLine.ProjTaxItemGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjTransId</c> parameter.
    /// </summary>
    /// <param name="_projTransId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjTransId</c> parameter.
    /// </returns>
    public ProjItemTransId parmProjTransId(ProjItemTransId _projTransId = '')
    {
        if (!prmisDefault(_projTransId))
        {
            this.setField(fieldNum(PurchRFQLine, ProjTransId), _projTransId);
        }
        return purchRFQLine.ProjTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchId</c> parameter.
    /// </summary>
    /// <param name="_purchId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchId</c> parameter.
    /// </returns>
    public PurchIdBase parmPurchId(PurchIdBase _purchId = '')
    {
        if (!prmisDefault(_purchId))
        {
            this.setField(fieldNum(PurchRFQLine, PurchId), _purchId);
        }
        return purchRFQLine.PurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchMarkup</c> parameter.
    /// </summary>
    /// <param name="_purchMarkup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchMarkup</c> parameter.
    /// </returns>
    public PurchMarkup parmPurchMarkup(PurchMarkup _purchMarkup = 0)
    {
        if (!prmisDefault(_purchMarkup))
        {
            this.setField(fieldNum(PurchRFQLine, PurchMarkup), _purchMarkup);
        }
        return purchRFQLine.PurchMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchPrice</c> parameter.
    /// </summary>
    /// <param name="_purchPrice">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchPrice</c> parameter.
    /// </returns>
    public PurchPrice parmPurchPrice(PurchPrice _purchPrice = 0)
    {
        if (!prmisDefault(_purchPrice))
        {
            this.setField(fieldNum(PurchRFQLine, PurchPrice), _purchPrice);
        }
        return purchRFQLine.PurchPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchQty</c> parameter.
    /// </summary>
    /// <param name="_purchQty">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchQty</c> parameter.
    /// </returns>
    public PurchOrderedQty parmPurchQty(PurchOrderedQty _purchQty = 0)
    {
        if (!prmisDefault(_purchQty))
        {
            this.setField(fieldNum(PurchRFQLine, PurchQty), _purchQty);
        }
        return purchRFQLine.PurchQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchUnit</c> parameter.
    /// </summary>
    /// <param name="_purchUnit">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchUnit</c> parameter.
    /// </returns>
    public str parmPurchUnit(str _purchUnit = '')
    {
        DictField   dictField;
        str         purchUnit;
        if (!prmisDefault(_purchUnit))
        {
            dictField = new DictField(tableNum(PurchRFQLine),fieldNum(PurchRFQLine,PurchUnit));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_purchUnit,dictField,this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                purchUnit = this.axUnitOfMeasureSymbol(_purchUnit);
            }
            else
            {
                this.validateInboundString(_purchUnit,dictField);
            }
            if (purchUnit)
            {
                this.setField(fieldNum(PurchRFQLine, PurchUnit), purchUnit);
            }
            else
            {
                this.setField(fieldNum(PurchRFQLine, PurchUnit), _purchUnit);
            }
        }
        if (this.valueMappingOutbound())
        {
            return this.axUnitOfMeasureSymbol(purchRFQLine.PurchUnit);
        }
        else
        {
            return purchRFQLine.PurchUnit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>QtyOrdered</c> parameter.
    /// </summary>
    /// <param name="_qtyOrdered">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyOrdered</c> parameter.
    /// </returns>
    public InventQty parmQtyOrdered(InventQty _qtyOrdered = 0)
    {
        if (!prmisDefault(_qtyOrdered))
        {
            this.setField(fieldNum(PurchRFQLine, QtyOrdered), _qtyOrdered);
        }
        return purchRFQLine.QtyOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ReasonId</c> parameter.
    /// </summary>
    /// <param name="_reasonId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ReasonId</c> parameter.
    /// </returns>
    public PurchRFQReasonId parmReasonId(PurchRFQReasonId _reasonId = '')
    {
        if (!prmisDefault(_reasonId))
        {
            this.setField(fieldNum(PurchRFQLine, ReasonId), _reasonId);
        }
        return purchRFQLine.ReasonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqPlanIdSched</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ReqPlanIdSched</c> parameter.
    /// </summary>
    /// <param name="_reqPlanIdSched">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ReqPlanIdSched</c> parameter.
    /// </returns>
    public ReqPlanIdSched parmReqPlanIdSched(ReqPlanIdSched _reqPlanIdSched = '')
    {
        if (!prmisDefault(_reqPlanIdSched))
        {
            this.setField(fieldNum(PurchRFQLine, ReqPlanIdSched), _reqPlanIdSched);
        }
        return purchRFQLine.ReqPlanIdSched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqPOId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ReqPOId</c> parameter.
    /// </summary>
    /// <param name="_reqPOId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ReqPOId</c> parameter.
    /// </returns>
    public ReqPOId parmReqPOId(ReqPOId _reqPOId = '')
    {
        if (!prmisDefault(_reqPOId))
        {
            this.setField(fieldNum(PurchRFQLine, ReqPOId), _reqPOId);
        }
        return purchRFQLine.ReqPOId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQCaseLineRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>RFQCaseLineRefRecId</c> parameter.
    /// </summary>
    /// <param name="_rfqCaseLineRefRecId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>RFQCaseLineRefRecId</c> parameter.
    /// </returns>
    public PurchRFQCaseLineRefRecId parmRFQCaseLineRefRecId(PurchRFQCaseLineRefRecId _rfqCaseLineRefRecId = 0)
    {
        if (!prmisDefault(_rfqCaseLineRefRecId))
        {
            this.setField(fieldNum(PurchRFQLine, rfqCaseLineRefRecId), _rfqCaseLineRefRecId);
        }
        return purchRFQLine.rfqCaseLineRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>RFQId</c> parameter.
    /// </summary>
    /// <param name="_rfqId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>RFQId</c> parameter.
    /// </returns>
    public PurchRFQId parmRFQId(PurchRFQId _rfqId = '')
    {
        if (!prmisDefault(_rfqId))
        {
            this.setField(fieldNum(PurchRFQLine, rfqId), _rfqId);
        }
        return purchRFQLine.rfqId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>RFQType</c> parameter.
    /// </summary>
    /// <param name="_rfqType">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>RFQType</c> parameter.
    /// </returns>
    public PurchRFQType parmRFQType(PurchRFQType _rfqType = PurchRFQType::Purch)
    {
        if (!prmisDefault(_rfqType))
        {
            this.setField(fieldNum(PurchRFQLine, rfqType), _rfqType);
        }
        return purchRFQLine.rfqType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Status</c> parameter.
    /// </summary>
    /// <param name="_status">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Status</c> parameter.
    /// </returns>
    public PurchRFQStatus parmStatus(PurchRFQStatus _status = PurchRFQStatus::Created)
    {
        if (!prmisDefault(_status))
        {
            this.setField(fieldNum(PurchRFQLine, Status), _status);
        }
        return purchRFQLine.Status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>TaxGroup</c> parameter.
    /// </summary>
    /// <param name="_taxGroup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>TaxGroup</c> parameter.
    /// </returns>
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
        if (!prmisDefault(_taxGroup))
        {
            this.setField(fieldNum(PurchRFQLine, TaxGroup), _taxGroup);
        }
        return purchRFQLine.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOverrideSalesTax</Name>
				<Source><![CDATA[
    public NoYes parmOverrideSalesTax(NoYes _overrideSalesTax = NoYes::No)
    {
        if (!prmisDefault(_overrideSalesTax))
        {
            this.setField(fieldNum(PurchRFQLine, OverrideSalesTax), _overrideSalesTax);
        }

        return purchRFQLine.OverrideSalesTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>TaxItemGroup</c> parameter.
    /// </summary>
    /// <param name="_taxItemGroup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>TaxItemGroup</c> parameter.
    /// </returns>
    public TaxItemGroup parmTaxItemGroup(TaxItemGroup _taxItemGroup = '')
    {
        if (!prmisDefault(_taxItemGroup))
        {
            this.setField(fieldNum(PurchRFQLine, TaxItemGroup), _taxItemGroup);
        }
        return purchRFQLine.TaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxServiceCode_BR</Name>
				<Source><![CDATA[
    public TaxServiceCodeId_BR parmTaxServiceCode_BR(TaxServiceCodeId_BR _taxServiceCode = '')
    {
        if (!prmisDefault(_taxServiceCode))
        {
            this.setField(fieldNum(PurchRFQLine, TaxServiceCode_BR), _taxServiceCode);
        }

        return purchRFQLine.TaxServiceCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRFQLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the <c>PurchRFQLine</c> object.
    /// </summary>
    /// <param name="_purchRFQLine">
    ///    The <c>PurchRFQLine</c> to set; optional.
    /// </param>
    /// <returns>
    ///    The <c>PurchRFQLine</c> object.
    /// </returns>
    public PurchRFQLine purchRFQLine(PurchRFQLine _purchRFQLine = purchRFQLine)
    {
        if (!prmisDefault(_purchRFQLine))
        {
            this.setCurrentRecordFromExternal(_purchRFQLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetInternalValues</Name>
				<Source><![CDATA[
    public void resetInternalValues()
    {
        super();

        axInventDim.inventDim(purchRFQLine.inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>AddressRefRecId</c> field.
    /// </summary>
    protected void setAddressRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, AddressRefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefTableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>AddressRefTableId</c> field.
    /// </summary>
    protected void setAddressRefTableId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, AddressRefTableId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAgreementId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>AgreementId</c> field.
    /// </summary>
    protected void setAgreementId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, AgreementId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetBookId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>AssetBookId</c> field.
    /// </summary>
    protected void setAssetBookId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, AssetBookId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>AssetId</c> field.
    /// </summary>
    protected void setAssetId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, AssetId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetTransTypePurch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>AssetTransTypePurch</c> field.
    /// </summary>
    protected void setAssetTransTypePurch()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, AssetTransTypePurch)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAxPurchRFQTableFields</Name>
				<Source><![CDATA[
    public void setAxPurchRFQTableFields()
    {
        this.setRFQId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CategoryId</c> field.
    /// </summary>
    protected void setCategoryId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, CategoryId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCFOPTable_BR</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CFOPTable_BR</c> field.
    /// </summary>
    protected void setCFOPTable_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, cfopTable_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmedDlv</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ConfirmedDlv</c> field.
    /// </summary>
    protected void setConfirmedDlv()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, ConfirmedDlv)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CurrencyCode</c> field.
    /// </summary>
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, CurrencyCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
    protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, DefaultDimension)))
        {
            return;
        }

        this.setInventDimId();
        this.inventSiteDimensionLink().axSetDefaultDimension(this);

        this.setAxPurchRFQTableFields();

        if (this.isAxPurchRFQTableFieldsSet()                                                 ||
            this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, DefaultDimension)) ||
            this.isInventTableRecordFieldsSet())
        {
            this.parmDefaultDimension(this.currentRecord().mergeDimension(this.axPurchRFQTable().purchRFQTable().DefaultDimension, this.inventTableRecord().DefaultDimension));
            if (this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, DefaultDimension)))
            {
                this.updateStatus();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>DefaultDimension</c> field on a buffer.
    /// </summary>
    /// <param name="_dimension">
    ///    The new dimension value.
    /// </param>
    /// <remarks>
    ///    This method is part of the <c>AxInventSiteDimensionable</c> class and is called from the
    ///    <c>InventSiteDimensionLink</c> class
    /// </remarks>
    public void setDefaultDimensionValue(DimensionDefault _dimension)
    {
        this.setField(fieldNum(PurchRFQLine, DefaultDimension), _dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DeliveryDate</c> field.
    /// </summary>
    protected void setDeliveryDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, DeliveryDate)))
        {
            return;
        }

        if (axPurchRFQTableSetManually)
        {
            this.setAxPurchRFQTableFields();
            if (this.isAxPurchRFQTableFieldsSet() || this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, DeliveryDate)))
            {
                this.parmDeliveryDate(this.axPurchRFQTable().parmDeliveryDate());
            }
        }
        else if (this.axPurchRFQReplyLine().parmDeliveryDate())
        {
            this.parmDeliveryDate(this.axPurchRFQReplyLine().parmDeliveryDate());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DeliveryName</c> field.
    /// </summary>
    protected void setDeliveryName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, DeliveryName)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryPostalAddress</Name>
				<Source><![CDATA[
    protected void setDeliveryPostalAddress()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, DeliveryPostalAddress)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record.
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method to make sure that all the fields that
    ///    are entity specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldNum(PurchRFQLine, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExpiryDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ExpiryDateTime</c> field.
    /// </summary>
    protected void setExpiryDateTime()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, ExpiryDateTime)))
        {
            return;
        }

        if (axPurchRFQTableSetManually)
        {
            this.setAxPurchRFQTableFields();
            if (this.isAxPurchRFQTableFieldsSet() || this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, ExpiryDateTime)))
            {
                this.parmExpiryDateTime(this.axPurchRFQTable().parmExpiryDateTime());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExternalItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ExternalItemId</c> field.
    /// </summary>
    protected void setExternalItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, ExternalItemId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventDimId</c> field.
    /// </summary>
    protected void setInventDimId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, InventDimId)))
        {
            return;
        }

        this.axInventDim().setInventDimId();

        if (this.axInventDim().isFieldSet(fieldNum(InventDim, InventDimId)))
        {
            this.parmInventDimId(this.axInventDim().parmInventDimId());
            if (this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, InventLocationId))
            || this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, InventSiteId)))
            {
                this.updateStatus();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventRefId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventRefId</c> field.
    /// </summary>
    protected void setInventRefId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, InventRefId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventRefTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventRefTransId</c> field.
    /// </summary>
    protected void setInventRefTransId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, InventRefTransId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventRefType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventRefType</c> field.
    /// </summary>
    protected void setInventRefType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, InventRefType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTableRecordFields</Name>
				<Source><![CDATA[
    public void setInventTableRecordFields()
    {
        this.setItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventTransId</c> field.
    /// </summary>
    protected void setInventTransId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, InventTransId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsAlternate</Name>
				<Source><![CDATA[
    protected void setIsAlternate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, IsAlternate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ItemId</c> field.
    /// </summary>
    protected void setItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, ItemId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ItemName</c> field.
    /// </summary>
    protected void setItemName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, ItemName)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineAmount</c> field.
    /// </summary>
    protected void setLineAmount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, LineAmount)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmLineAmount())
            {
                this.parmLineAmount(this.axPurchRFQReplyLine().parmLineAmount());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineDisc</c> field.
    /// </summary>
    protected void setLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, LineDisc)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmLineDisc())
                this.parmLineDisc(this.axPurchRFQReplyLine().parmLineDisc());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineNum</c> field.
    /// </summary>
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, LineNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LinePercent</c> field.
    /// </summary>
    protected void setLinePercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, LinePercent)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmLinePercent())
            {
                this.parmLinePercent(this.axPurchRFQReplyLine().parmLinePercent());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineType</c> field.
    /// </summary>
    protected void setLineType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, LineType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>MultiLnDisc</c> field.
    /// </summary>
    protected void setMultiLnDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, MultiLnDisc)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmMultiLnDisc())
                this.parmMultiLnDisc(this.axPurchRFQReplyLine().parmMultiLnDisc());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>MultiLnPercent</c> field.
    /// </summary>
    protected void setMultiLnPercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, MultiLnPercent)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmMultiLnPercent())
                this.parmMultiLnPercent(this.axPurchRFQReplyLine().parmMultiLnPercent());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>FlexName</c> field.
    /// </summary>
    protected void setName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, Name)))
        {
            return;
        }

        if (axPurchRFQTableSetManually)
        {
            this.setInventTableRecordFields();
            this.axInventDim().setConfigId();
            this.setAxPurchRFQTableFields();

            if (this.isInventTableRecordFieldsSet() ||
                this.isAxPurchRFQTableFieldsSet()      ||
                this.axInventDim().isFieldSet(fieldNum(InventDim, ConfigId)) ||
                this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, LanguageId)))
            {
                this.parmName(PurchParameters::nameAndOrDescription(this.inventTableRecord(), this.axPurchRFQTable().parmLanguageId(), this.parmInventDimId()));
            }
        }
        else if (this.axPurchRFQReplyLine().parmName())
        {
            this.parmName(this.axPurchRFQReplyLine().parmName());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQty</c> field.
    /// </summary>
    protected void setPdsCWQty()
    {
        PurchQty    qty;

        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine,
                PdsCWQty)))
        {
            return;
        }

        if (this.isFieldSet(fieldNum(PurchRFQLine, ItemId))
                && PdsGlobal::pdsIsCWItem(this.parmItemId()))
        {
            qty = PdsCatchWeight::inventQty(this.parmItemId(),
                this.parmPdsCWQty(), this.parmPurchUnit());
            this.parmPurchQty(qty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PriceUnit</c> field.
    /// </summary>
    protected void setPriceUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, PriceUnit)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchId</c> field.
    /// </summary>
    protected void setPurchId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, PurchId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchMarkup</c> field.
    /// </summary>
    protected void setPurchMarkup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, PurchMarkup)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmPurchMarkup())
            {
                this.parmPurchMarkup(this.axPurchRFQReplyLine().parmPurchMarkup());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchPrice</c> field.
    /// </summary>
    protected void setPurchPrice()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, PurchPrice)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchQty</c> field.
    /// </summary>
    protected void setPurchQty()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, PurchQty)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmPurchQty())
                this.parmPurchQty(this.axPurchRFQReplyLine().parmPurchQty());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchUnit</c> field.
    /// </summary>
    protected void setPurchUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, PurchUnit)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmPurchUnit())
                this.parmPurchUnit(this.axPurchRFQReplyLine().parmPurchUnit());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyOrdered</c> field.
    /// </summary>
    protected void setQtyOrdered()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, QtyOrdered)))
        {
            return;
        }

        if (!axPurchRFQTableSetManually)
        {
            if (this.axPurchRFQReplyLine().parmQtyOrdered())
                this.parmQtyOrdered(this.axPurchRFQReplyLine().parmQtyOrdered());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReasonId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ReasonId</c> field.
    /// </summary>
    protected void setReasonId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, ReasonId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReqPlanIdSched</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ReqPlanIdSched</c> field.
    /// </summary>
    protected void setReqPlanIdSched()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, ReqPlanIdSched)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReqPOId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ReqPOId</c> field.
    /// </summary>
    protected void setReqPOId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, ReqPOId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQCaseLineRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RFQCaseLineRefRecId</c> field.
    /// </summary>
    protected void setRFQCaseLineRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, rfqCaseLineRefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RFQId</c> field.
    /// </summary>
    protected void setRFQId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, rfqId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RFQType</c> field.
    /// </summary>
    protected void setRFQType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, rfqType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Status</c> field.
    /// </summary>
    protected void setStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, Status)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStorageDimField</Name>
				<Source><![CDATA[
    public void setStorageDimField(FieldId _fieldId)
    {
        this.axInventDim().setDimFieldId(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets default fields for a table row.
    /// </summary>
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setLineType();
        this.setLineNum();
        this.setItemId();
        this.setItemName();
        this.setDeliveryDate();
        this.setQtyOrdered();
        this.setPurchUnit();
        this.setPriceUnit();
        this.setLineDisc();
        this.setLinePercent();
        this.setLineAmount();
        this.setInventDimId();
        this.setName();
        this.setExternalItemId();
        this.setDeliveryPostalAddress();
        this.setDeliveryName();
        this.setMultiLnDisc();
        this.setMultiLnPercent();
        this.setPurchMarkup();
        this.setReqPOId();
        this.setReqPlanIdSched();
        this.setAssetId();
        this.setAssetBookId();
        this.setAssetTransTypePurch();
        this.setPurchPrice();
        this.setPurchQty();
        this.setDefaultDimension();
        this.setRFQId();
        this.setExpiryDateTime();
        this.setStatus();
        this.setReasonId();
        this.setTaxGroup();
        this.setRFQType();
        this.setInventTransId();
        this.setAddressRefTableId();
        this.setAddressRefRecId();
        this.setConfirmedDlv();
        this.setInventRefTransId();
        this.setInventRefId();
        this.setInventRefType();
        this.setCurrencyCode();
        this.setTaxItemGroup();
        this.setRFQCaseLineRefRecId();
        this.setPurchId();
        this.setIsAlternate();

        this.setPdsCWQty();
        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            this.setCFOPTable_BR();
            this.setTaxServiceCode_BR();
        }
        // </GBR>

        if (Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Purchase))
        {
            this.setOverrideSalesTax();
        }

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>TaxGroup</c> field.
    /// </summary>
    protected void setTaxGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, TaxGroup)))
        {
            return;
        }

        if (axPurchRFQTableSetManually)
        {
            this.setAxPurchRFQTableFields();
            if (this.isAxPurchRFQTableFieldsSet() || this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, TaxGroup)))
            {
                this.parmTaxGroup(this.axPurchRFQTable().parmTaxGroup());
                if (this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, TaxGroup)))
                {
                    this.updateStatus();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOverrideSalesTax</Name>
				<Source><![CDATA[
    protected void setOverrideSalesTax()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, OverrideSalesTax)))
        {
            return;
        }

        if (axPurchRFQTableSetManually)
        {
            this.setAxPurchRFQTableFields();
            if (this.isAxPurchRFQTableFieldsSet() || this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, OverrideSalesTax)))
            {
                this.parmOverrideSalesTax(this.axPurchRFQTable().parmOverrideSalesTax());
                if (this.axPurchRFQTable().isFieldModified(fieldNum(PurchRFQTable, OverrideSalesTax)))
                {
                    this.updateStatus();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>TaxItemGroup</c> field.
    /// </summary>
    protected void setTaxItemGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, TaxItemGroup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxServiceCode_BR</Name>
				<Source><![CDATA[
    protected void setTaxServiceCode_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQLine, TaxServiceCode_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>inventDimId</c> field.
    /// </summary>
    public void updateFromInventDim()
    {
        ttsbegin;
        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        this.setInventDimId();
        inventDimIdDirtySaved = false;

        this.validateFields();

        this.validateWrite();

        this.write();

        this.resetInternalValues();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the status of an RFQ line.
    /// </summary>
    void updateStatus()
    {
        PurchRFQLine    rfqLine = PurchRFQLine::findRecId(this.purchRFQLine().RecId, true);
        rfqLine.updateStatus();
        rfqLine.doUpdate();
        this.parmStatus(rfqLine.Status);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxPurchRFQLine</c> class.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>AxPurchRFQLine</c> class.
    /// </returns>
    /// <remarks>
    ///    Use the following procedure to customize or extend the
    ///    <c>
    ///       AxPurchRFQLine
    ///    </c>
    ///     class.
    ///    <list type="number">
    ///       <item>
    ///          <description>
    ///             Create a new class that derives from <c>AxPurchRFQLine</c>.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Overlayer the <c>construct</c> method on <c>AxPurchRFQLine</c> so that it returns an instance of
    ///             the derived class.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Override the methods from the <c>AxPurchRFQLine</c> class that you want to customize or extend in
    ///             your derived class.
    ///          </description>
    ///       </item>
    ///    </list>
    ///     This procedure helps make sure that your customizations are maintained if the base version of the
    ///    <c>
    ///       AxPurchRFQLine
    ///    </c>
    ///     class is changed, minimizing code conflicts during an upgrade. For more information, see <see cref="Best Practices for static construct Methods" />
    ///    .
    /// </remarks>
    public static AxPurchRFQLine construct()
    {
        return new AxPurchRFQLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchRFQLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>AxPurchRFQLine</c> class.
    /// </summary>
    /// <param name="_purchRFQLine">
    ///    An instance of the <c>AxPurchRFQLine</c> class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>AxPurchRFQLine</c> class.
    /// </returns>
    public static AxPurchRFQLine newPurchRFQLine(PurchRFQLine _purchRFQLine)
    {
        AxPurchRFQLine axPurchRFQLine = AxPurchRFQLine::construct();
        axPurchRFQLine.purchRFQLine(_purchRFQLine);

        return axPurchRFQLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>