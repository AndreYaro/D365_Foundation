<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tax1099DetailDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>Tax1099DetailDP</c> class is a report data provider (RDP) class for the associated
/// <c>Tax1099Detail</c> reports.
/// </summary>
[SRSReportQueryAttribute(queryStr(Tax1099Detail)), SRSReportParameterAttribute(classStr(Tax1099DetailContract))]
internal class Tax1099DetailDP extends SRSReportDataProviderBase
{
    Tax1099DetailTmp tax1099DetailTmp;
    Query query;
    QueryBuildDataSource queryBuildDataSource;
    Year year1099;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTax1099DetailTmp</Name>
				<Source><![CDATA[
    [SrsReportDataSet(tableStr(Tax1099DetailTmp))]
    public Tax1099DetailTmp getTax1099DetailTmp()
    {
        select tax1099DetailTmp;
        return tax1099DetailTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the SSRS report business logic.
    /// </summary>
    /// <remarks>
    /// Provides the ability to write the report business logic. This method will be called by SSRS at
    /// runtime. The method should compute data and populate the data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        query = this.parmQuery();
        queryBuildDataSource = query.dataSourceTable(tableNum(Tax1099Detail));

        this.getFromDialog();
        this.initQuery();
        this.insertData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    private void getFromDialog()
    {
        Tax1099DetailContract dataContract = this.parmDataContract() as Tax1099DetailContract;

        year1099 = dataContract.parmTax1099Year();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    private void initQuery()
    {
        if (year1099)
        {
            QueryBuildRange queryBuildRangeYear1099 = queryBuildDataSource.findRange(fieldNum(Tax1099Detail, TransDate));
            if (!queryBuildRangeYear1099)
            {
                queryBuildRangeYear1099 = queryBuildDataSource.addRange(fieldNum(Tax1099Detail, TransDate));
            }
            
            if (!queryBuildRangeYear1099.value())
            {
                date fromDate = mkDate(Tax1099Constants::FirstDay, Tax1099Constants::FirstMonth, year1099);
                date toDate = mkDate(Tax1099Constants::LastDay, Tax1099Constants::LastMonth, year1099);
                queryBuildRangeYear1099.value(queryRange(fromDate, toDate));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertData</Name>
				<Source><![CDATA[
    private void insertData()
    {
        Map insertRecordsetMap = new Map(Types::String, Types::Container);

        this.mapFields(insertRecordsetMap);

        ttsbegin;
        Query::insert_recordset(tax1099DetailTmp, insertRecordsetMap, query);
        ttscommit;

        DirPartyLocation dirPartyLocation;
        LogisticsPostalAddress logisticsPostalAddress;
        utcdatetime validTime = DateTimeUtil::utcNow();

        update_recordset tax1099DetailTmp
            setting PostalAddress = logisticsPostalAddress.Address
            join dirPartyLocation
                where dirPartyLocation.Party == tax1099DetailTmp.Party
            && dirPartyLocation.IsPrimary == NoYes::Yes
            join logisticsPostalAddress
                where logisticsPostalAddress.Location == dirPartyLocation.Location
                    && logisticsPostalAddress.ValidFrom <= validTime
                    && logisticsPostalAddress.ValidTo >= validTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapFields</Name>
				<Source><![CDATA[
    private void mapFields(Map _insertRecordsetMap)
    {
        QueryBuildFieldList queryBuildFieldList;

        query.clearAllFields();

        // Map fields from Tax1099Detail
        queryBuildFieldList = queryBuildDataSource.fields();
        this.addFieldMappingsTax1099Detail(queryBuildDataSource, queryBuildFieldList, _insertRecordsetMap);

        QueryBuildDataSource dirPartyTableDataSource = queryBuildDataSource.addDataSource(tableNum(DirPartyTable));
        dirPartyTableDataSource.joinMode(JoinMode::InnerJoin);
        dirPartyTableDataSource.addLink(fieldNum(Tax1099Detail, Party), fieldNum(DirPartyTable, RecId));

        // Map fields from DirPartyTable
        queryBuildFieldList = dirPartyTableDataSource.fields();
        this.addFieldMappingsDirPartyTable(dirPartyTableDataSource, queryBuildFieldList, _insertRecordsetMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFieldMappingsTax1099Detail</Name>
				<Source><![CDATA[
    private void addFieldMappingsTax1099Detail(QueryBuildDataSource _queryBuildDataSource, QueryBuildFieldList _queryBuildFieldList, Map _insertRecordsetMap)
    {
        int dataSourceUniqueId = _queryBuildDataSource.uniqueId();

        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, AccountNum), fieldStr(Tax1099Detail, AccountNum), fieldStr(Tax1099DetailTmp, AccountNum));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, IRSReportable), fieldStr(Tax1099Detail, IRSReportable), fieldStr(Tax1099DetailTmp, IRSReportable));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, Party), fieldStr(Tax1099Detail, Party), fieldStr(Tax1099DetailTmp, Party));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, SettleTax1099Amount), fieldStr(Tax1099Detail, SettleTax1099Amount), fieldStr(Tax1099DetailTmp, SettleTax1099Amount));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, Tax1099Box), fieldStr(Tax1099Detail, Tax1099Box), fieldStr(Tax1099DetailTmp, Tax1099Box));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, Tax1099RegNum), fieldStr(Tax1099Detail, Tax1099RegNum), fieldStr(Tax1099DetailTmp, Tax1099RegNum));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, Tax1099State), fieldStr(Tax1099Detail, Tax1099State), fieldStr(Tax1099DetailTmp, Tax1099State));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, SettleTax1099StateAmount), fieldStr(Tax1099Detail, SettleTax1099StateAmount), fieldStr(Tax1099DetailTmp, SettleTax1099StateAmount));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, TaxIDType), fieldStr(Tax1099Detail, TaxIDType), fieldStr(Tax1099DetailTmp, TaxIDType));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, TransDate), fieldStr(Tax1099Detail, TransDate), fieldStr(Tax1099DetailTmp, TransDate));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, VendAccount), fieldStr(Tax1099Detail, VendAccount), fieldStr(Tax1099DetailTmp, VendAccount));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, VendInvoiceId), fieldStr(Tax1099Detail, VendInvoiceId), fieldStr(Tax1099DetailTmp, VendInvoiceId));
        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(Tax1099Detail, Voucher), fieldStr(Tax1099Detail, Voucher), fieldStr(Tax1099DetailTmp, Voucher));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFieldMappingsDirPartyTable</Name>
				<Source><![CDATA[
    public void addFieldMappingsDirPartyTable(QueryBuildDataSource _queryBuildDataSource, QueryBuildFieldList _queryBuildFieldList, Map _insertRecordsetMap)
    {
        int dataSourceUniqueId = _queryBuildDataSource.uniqueId();

        this.addInsertFieldMapping(_queryBuildFieldList, _insertRecordsetMap, dataSourceUniqueId, fieldNum(DirPartyTable, Name), fieldStr(DirPartyTable, Name), fieldStr(Tax1099DetailTmp, Name));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInsertFieldMapping</Name>
				<Source><![CDATA[
    private void addInsertFieldMapping(QueryBuildFieldList _fieldList, Map _fieldMapping, int _sourceTableUniqueId, FieldId _sourceFieldId, FieldName _sourceFieldName, FieldName _destinationFieldName)
    {
        _fieldList.addField(_sourceFieldId);
        _fieldMapping.insert(_destinationFieldName, [_sourceTableUniqueId, _sourceFieldName]);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>