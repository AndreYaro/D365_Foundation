<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscLinePolicyRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Base class for handling price and discount policy rules for order line tables mapped to the <c>PriceDiscResultFields</c> policy table map.
/// </summary>
abstract class PriceDiscLinePolicyRule extends PriceDiscPolicyRule
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addPriceCalcTriggeringPolicyFields</Name>
				<Source><![CDATA[
    protected void addPriceCalcTriggeringPolicyFields(PriceDiscPolicyFieldList _priceCalcTriggeringPolicyFieldList)
    {
        super(_priceCalcTriggeringPolicyFieldList);

        _priceCalcTriggeringPolicyFieldList.addPriceDiscResultField(fieldNum(PriceDiscResultFields, SalesPurchQty));
        _priceCalcTriggeringPolicyFieldList.addPriceDiscResultField(fieldNum(PriceDiscResultFields, SalesPurchUnit));
        _priceCalcTriggeringPolicyFieldList.addPriceDiscResultField(fieldNum(PriceDiscResultFields, CurrencyCode));
        _priceCalcTriggeringPolicyFieldList.addPriceDiscResultField(fieldNum(PriceDiscResultFields, RecieptDeliveryDate));
        _priceCalcTriggeringPolicyFieldList.addPriceDiscResultField(fieldNum(PriceDiscResultFields, Price));
        _priceCalcTriggeringPolicyFieldList.addPriceDiscResultField(fieldNum(PriceDiscResultFields, PdsCWQty));
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCreateFixedPolicy</Name>
				<Source><![CDATA[
    protected boolean canCreateFixedPolicy(PriceDiscPolicyField _policyField)
    {
        boolean ret = super(_policyField);

        if (!ret)
        {
            return ret;
        }

        if (_policyField.parmTableMapId() == tableNum(PriceDiscResultFields))
        {
            switch (_policyField.parmTableMapFieldId())
            {
                case fieldNum(PriceDiscResultFields, PriceUnit) :
                    ret = PriceDiscPolicyFixed::newFromPriceDiscResultFields(this.parmPriceDiscResultFields()).priceUnitUpdate();
                    break;

                case fieldNum(PriceDiscResultFields, Price) :
                    ret = PriceDiscPolicyFixed::newFromPriceDiscResultFields(this.parmPriceDiscResultFields()).priceUpdate();
                    break;

                case fieldNum(PriceDiscResultFields, LineDisc) :
                    ret = PriceDiscPolicyFixed::newFromPriceDiscResultFields(this.parmPriceDiscResultFields()).lineDiscUpdate();
                    break;

                case fieldNum(PriceDiscResultFields, LinePercent) :
                    ret = PriceDiscPolicyFixed::newFromPriceDiscResultFields(this.parmPriceDiscResultFields()).linePercentUpdate();
                    break;

                case fieldNum(PriceDiscResultFields, MarkUp) :
                    ret = PriceDiscPolicyFixed::newFromPriceDiscResultFields(this.parmPriceDiscResultFields()).markUpUpdate();
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSystemPolicyFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    ///		Retrieves a list of <c>PriceDiscPolicyField</c> objects.
    /// </summary>
    /// <param name = "_policyFindOrCreate">
    ///		An instance of <c>PriceDiscPolicyFindOrCreate</c> class.
    /// </param>
    /// <returns>
    ///		A list of <c>PriceDiscPolicyField</c> objects.
    /// </returns>
    public PriceDiscPolicyFieldList retrieveSystemPolicyFieldList(PriceDiscPolicyFindOrCreate _policyFindOrCreate)
    {
        PriceDiscPolicyFieldList policyFieldList = PriceDiscPolicyFieldList::newList();

        PriceDiscPolicyField lineAmountField = PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, LineAmount));

        if (_policyFindOrCreate.parmPriceDiscPolicyField().parmTableMapId() == lineAmountField.parmTableMapId() && _policyFindOrCreate.parmPriceDiscPolicyField().parmTableMapFieldId() == lineAmountField.parmTableMapFieldId())
        {
            policyFieldList.addPolicyField(lineAmountField);
        }
        else
        {
            PriceDiscPolicyField priceField         = PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, Price));
            PriceDiscPolicyField lineDiscField      = PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, LineDisc));
            PriceDiscPolicyField linePercentField   = PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, LinePercent));
            PriceDiscPolicyField priceUnitField     = PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, PriceUnit));
            PriceDiscPolicyField markupField        = PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, Markup));

            switch (_policyFindOrCreate.parmPolicySource())
            {
                case PriceDiscSystemSource::Agreement :
                    CommitmentType agreementLineType = AgreementLine::find(this.parmPriceDiscResultFields().matchingAgreementLine()).AgreementLineType;
                    switch (agreementLineType)
                    {
                        case CommitmentType::ProductQuantity :
                            policyFieldList.addPolicyField(priceField);
                            policyFieldList.addPolicyField(lineDiscField);
                            policyFieldList.addPolicyField(linePercentField);
                            policyFieldList.addPolicyField(priceUnitField);
                            break;
                        default:
                            policyFieldList.addPolicyField(linePercentField);
                            break;
                    }
                    break;

                case PriceDiscSystemSource::ProductConfig :
                    policyFieldList.addPolicyField(lineDiscField);
                    policyFieldList.addPolicyField(linePercentField);
                    policyFieldList.addPolicyField(priceField);
                    break;

                default :
                    policyFieldList.addPolicyField(markupField);
                    policyFieldList.addPolicyField(priceField);
                    policyFieldList.addPolicyField(lineDiscField);
                    policyFieldList.addPolicyField(linePercentField);
                    policyFieldList.addPolicyField(priceUnitField);
                    break;
            }
        }

        return policyFieldList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>