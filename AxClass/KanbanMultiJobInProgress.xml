<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanMultiJobInProgress</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>KanbanMultiJobInProgress</c> class provides the interface between the <c>KanbanJobStatus</c> class and the user interface.
/// </summary>
/// <remarks>
/// Status updates can be performed through a form or silently.
/// </remarks>
public class KanbanMultiJobInProgress extends KanbanMultiJob implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>query</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query to use when the class is run from a form.
    /// </summary>
    /// <returns>
    /// The <c>Query</c> object to use.
    /// </returns>
    public Query query()
    {
        return new QueryRun(querystr(KanbanMultiJobInProgress)).query();
    }

]]></Source>
			</Method>
			<Method>
				<Name>targetKanbanJobStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a <c>LeanKanbanJobStatus</c> enumeration value that represents the target status.
    /// </summary>
    /// <param name="_kanbanJob">
    /// A <c>KanbanJob</c> table buffer.
    /// </param>
    /// <returns>
    /// The target status.
    /// </returns>
    public LeanKanbanJobStatus targetKanbanJobStatus(KanbanJob _kanbanJob = null)
    {
        return LeanKanbanJobStatus::InProgress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>KanbanMultiJobInProgress</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>KanbanMultiJobInProgress</c> class.
    /// </returns>
    /// <remarks>
    ///  Use the following procedure to customize or extend the
    ///  <c>
    ///  KanbanMultiJobInProgress
    ///  </c>
    ///   class.
    ///  <list type="number">
    ///   <item>
    ///    <description>
    ///    Create a new class that derives from the <c>KanbanMultiJobInProgress</c> class.
    ///    </description>
    ///   </item>
    ///   <item>
    ///    <description>
    ///    Overlayer the <c>construct</c> method on the <c>KanbanMultiJobInProgress</c> class so that it
    ///    returns an instance of the derived class.
    ///    </description>
    ///   </item>
    ///   <item>
    ///    <description>
    ///    Override the methods from the <c>KanbanMultiJobInProgress</c> class that you want to customize or
    ///    extend in your derived class.
    ///    </description>
    ///   </item>
    ///  </list>
    ///
    ///  This procedure helps make sure that your customizations are maintained if the base version of the
    ///  <c>
    ///  KanbanMultiJobInProgress
    ///  </c>
    ///   class is changed, minimizing code conflicts during an upgrade. For more information, see <see cref="Best Practices for static construct Methods" />
    ///  .
    /// </remarks>
    public static KanbanMultiJob construct()
    {
        return new KanbanMultiJobInProgress();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        using (SysErrorMessageHelpScope scope = SysErrorMessageHelpScope::newErrorContext(_args))
        {
            KanbanMultiJob::newArgs(_args,LeanKanbanJobStatus::InProgress).runMain(_args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>