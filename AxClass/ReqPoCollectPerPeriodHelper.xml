<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPoCollectPerPeriodHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class containing logic related to the <c>ReqPoCollectPerPeriod</c> enum.
/// </summary>
internal static final class ReqPoCollectPerPeriodHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPeriodKeyForDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computes the period key for a given date and method of grouping.
    /// </summary>
    /// <param name = "reqPoCollectPerPeriod"><c>ReqPoCollectPerPeriod</c> enum describing the method of grouping to use.</param>
    /// <param name = "inputDate">The date for which the period key must be computed.</param>
    /// <returns>Returns the period key for the given date and method of grouping.</returns>
    internal static str getPeriodKeyForDate(ReqPoCollectPerPeriod reqPoCollectPerPeriod, date inputDate)
    {
        switch (reqPoCollectPerPeriod)
        {
            case ReqPoCollectPerPeriod::ReqDate:
                return int2Str(date2Num(inputDate));

            case ReqPoCollectPerPeriod::ReqWeek:
                return ReqPoCollectPerPeriodHelper::getWeekBasedPeriodKeyForDate(inputDate);

            case ReqPoCollectPerPeriod::ReqMonth:
                return int2Str(year(inputDate)) + '-' + int2Str(mthOfYr(inputDate));
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWeekBasedPeriodKeyForDate</Name>
				<Source><![CDATA[
    private static str getWeekBasedPeriodKeyForDate(date inputDate)
    {
        const int decemberMonthNumber = 12;
        const int januaryMonthNumber = 1;

        var weekOfYear = wkOfYr(inputDate);
        var monthOfYear = mthOfYr(inputDate);
        var year = year(inputDate);

        // According to the ISO 8601 standard the first week of the year is the week containing the first Thursday.
        // We need to adjust for that in the computation. It is done like so:
        // 1. If it is a first week of the year and the month is December it means that it is counted as the first week of the next year.
        // 2. If it is a week near the end of the year and the month is January it means it is the last week of the previous year.
        if (weekOfYear == 1 && monthOfYear == decemberMonthNumber)
        {
            year++;
        }
        else if (weekOfYear > 50 && monthOfYear == januaryMonthNumber)
        {
            year--;
        }

        return int2Str(year) + '-' + int2Str(weekOfYear);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>