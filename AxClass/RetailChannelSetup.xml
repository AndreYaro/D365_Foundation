<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailChannelSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Application.Instrumentation;

/// <summary>
/// The <c>RetailChannelSetup</c> class is responsible for setting up part of the seed data required by the retail module for retail channel.
/// </summary>
[
SysSetupConfigKeyAttribute(configurationkeystr(Retail)),
SysSetupTableAttribute(tableStr(TimezoneInfo)),
SysSetupConfigAttribute(true, 600)
]
public final class RetailChannelSetup extends SysSetupAsync implements SysSetup
{
    private RetailSetupLogger retailSetupLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates the <c>RetailSetup</c> class.
    /// </summary>
    public void new()
    {
        super();

        // initialize the retail setup logger.
        retailSetupLogger = new RetailSetupLogger();
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads part of the master/seed data required by the retail application.
    /// </summary>
    [Hookable(false)]
    public void loadData()
    {
        Microsoft.Dynamics.Ax.Xpp.ErrorException xppEx;
        System.Exception ex;

        try
        {
            retailSetupLogger.logSetupLoadRetailSeedDataStart();
            if (RetailUtilities::isRetailEnabled())
            {
                this.loadRetailData();
            }
        }
        catch (xppEx)
        {
            ex = xppEx;
            retailSetupLogger.logSetupLoadRetailSeedDataFailure(ex);
        }
        catch (ex)
        {
            retailSetupLogger.logSetupLoadRetailSeedDataFailure(ex);
        }
        finally
        {
            retailSetupLogger.logSetupLoadRetailSeedDataFinish(ex);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadRetailData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads part of the master/seed data required by the retail application.
    /// </summary>
    internal void loadRetailData()
    {
        RetailTimeZoneInfoJob retailTimeZoneInfoJob = new RetailTimeZoneInfoJob();
        retailTimeZoneInfoJob.runOperation();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>