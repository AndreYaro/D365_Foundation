<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxVendTransOpen</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxVendTransOpen extends AxApplicationBase
{
    VendTransOpen vendTransOpen;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
        public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
        public Common currentRecord(Common _vendTransOpen = vendTransOpen)
    {
        if (!prmisdefault(_vendTransOpen))
        {
            super(_vendTransOpen);
            vendTransOpen = _vendTransOpen;
        }
        else
        {
            super();
        }

        return vendTransOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>VendTransOpen</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>VendTransOpen</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        VendTransOpen localVendTransOpen;
        return localVendTransOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountNum</Name>
				<Source><![CDATA[
        public str parmAccountNum(str _accountNum = '')
    {
        DictField dictField;

        if (!prmisdefault(_accountNum))
        {
            dictField = new DictField(tablenum(VendTransOpen),fieldnum(VendTransOpen,AccountNum));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_accountNum,dictField,this.mapPolicy().xMLMapVendAccount());
                _accountNum = this.axVendAccount(_accountNum);
            }
            else
            {
                this.validateInboundString(_accountNum,dictField);
            }
            this.setField(fieldnum(VendTransOpen, AccountNum), _accountNum);
        }

        if (this.valueMappingOutbound())
        {
            return this.axVendAccount(vendTransOpen.AccountNum);
        }
        else
        {
            return vendTransOpen.AccountNum;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountCur</Name>
				<Source><![CDATA[
        public AmountCurDebCred parmAmountCur(AmountCurDebCred _amountCur = 0)
    {
        if (!prmisdefault(_amountCur))
        {
            this.setField(fieldnum(VendTransOpen, AmountCur), _amountCur);
        }

        return vendTransOpen.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountMST</Name>
				<Source><![CDATA[
        public AmountMSTDebCred parmAmountMST(AmountMSTDebCred _amountMST = 0)
    {
        if (!prmisdefault(_amountMST))
        {
            this.setField(fieldnum(VendTransOpen, AmountMST), _amountMST);
        }

        return vendTransOpen.AmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankDiscNoticeDeadline</Name>
				<Source><![CDATA[
        public BankDiscNoticeDeadline parmBankDiscNoticeDeadline(BankDiscNoticeDeadline _bankDiscNoticeDeadline = dateNull())
    {
        if (!prmisdefault(_bankDiscNoticeDeadline))
        {
            this.setField(fieldnum(VendTransOpen, BankDiscNoticeDeadline), _bankDiscNoticeDeadline);
        }

        return vendTransOpen.BankDiscNoticeDeadline;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankLCImportLine</Name>
				<Source><![CDATA[
        public BankLCLineRefRecId parmBankLCImportLine(BankLCLineRefRecId _bankLCImportLine = 0)
    {
        if (!prmisdefault(_bankLCImportLine))
        {
            this.setField(fieldNum(VendTransOpen, BankLCImportLine), _bankLCImportLine);
        }

        return vendTransOpen.BankLCImportLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscDate</Name>
				<Source><![CDATA[
        public VendCashDiscDate parmCashDiscDate(VendCashDiscDate _cashDiscDate = dateNull())
    {
        if (!prmisdefault(_cashDiscDate))
        {
            this.setField(fieldnum(VendTransOpen, CashDiscDate), _cashDiscDate);
        }

        return vendTransOpen.CashDiscDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscountLedgerDimension</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount parmCashDiscountLedgerDimension(LedgerDimensionDefaultAccount _cashDiscountLedgerDimension = 0)
    {
        if (!prmisdefault(_cashDiscountLedgerDimension))
        {
            this.setField(fieldnum(VendTransOpen, CashDiscountLedgerDimension), _cashDiscountLedgerDimension);
        }

        return vendTransOpen.CashDiscountLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDueDate</Name>
				<Source><![CDATA[
        public DueDate parmDueDate(DueDate _dueDate = dateNull())
    {
        if (!prmisdefault(_dueDate))
        {
            this.setField(fieldnum(VendTransOpen, DueDate), _dueDate);
        }

        return vendTransOpen.DueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEPBarCodeInfo_BR</Name>
				<Source><![CDATA[
        public EPBarCodeInfo_BR parmEPBarCodeInfo_BR(EPBarCodeInfo_BR _ePBarCodeInfo_BR = "")
    {
        if (!prmisdefault(_ePBarCodeInfo_BR))
        {
            this.setField(fieldnum(VendTransOpen, EPBarCodeInfo_BR), _ePBarCodeInfo_BR);
        }

        return vendTransOpen.EPBarCodeInfo_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchAdjUnrealized</Name>
				<Source><![CDATA[
        public AmountMSTDebCred parmExchAdjUnrealized(AmountMSTDebCred _exchAdjUnrealized = 0)
    {
        if (!prmisdefault(_exchAdjUnrealized))
        {
            this.setField(fieldnum(VendTransOpen, ExchAdjUnrealized), _exchAdjUnrealized);
        }

        return vendTransOpen.ExchAdjUnrealized;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchAdjUnrealizedReporting</Name>
				<Source><![CDATA[
        public VendExchAdjustment parmExchAdjUnrealizedReporting(VendExchAdjustment _exchAdjUnrealizedReporting = 0)
    {
        if (!prmisdefault(_exchAdjUnrealizedReporting))
        {
            this.setField(fieldNum(VendTransOpen, ExchAdjUnrealizedReporting), _exchAdjUnrealizedReporting);
        }

        return vendTransOpen.ExchAdjUnrealizedReporting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFineAmount_BR</Name>
				<Source><![CDATA[
        public FineAmount_BR parmFineAmount_BR(FineAmount_BR _fineAmount_BR = 0)
    {
        if (!prmisdefault(_fineAmount_BR))
        {
            this.setField(fieldnum(VendTransOpen, FineAmount_BR), _fineAmount_BR);
        }

        return vendTransOpen.FineAmount_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFineAmountPaymCur_BR</Name>
				<Source><![CDATA[
        public FineAmount_BR parmFineAmountPaymCur_BR(FineAmount_BR _fineAmountPaymCur_BR = 0)
    {
        if (!prmisdefault(_fineAmountPaymCur_BR))
        {
            this.setField(fieldnum(VendTransOpen, FineAmountPaymCur_BR), _fineAmountPaymCur_BR);
        }

        return vendTransOpen.FineAmountPaymCur_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFineCode_BR</Name>
				<Source><![CDATA[
        public VendFineCode_BR parmFineCode_BR(VendFineCode_BR _fineCode_BR = '')
    {
        if (!prmisdefault(_fineCode_BR))
        {
            this.setField(fieldNum(VendTransOpen, FineCode_BR), _fineCode_BR);
        }

        return vendTransOpen.FineCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGTARecoverableAmount_IN</Name>
				<Source><![CDATA[
    public AmountCur parmGTARecoverableAmount_IN(AmountCur _GTARecoverableAmount_IN = 0)
    {
        if (!prmisdefault(_GTARecoverableAmount_IN))
        {
            this.setField(fieldnum(VendTransOpen, GTARecoverableAmount_IN), _GTARecoverableAmount_IN);
        }

        return vendTransOpen.GTARecoverableAmount_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestAmount_BR</Name>
				<Source><![CDATA[

    public FinInterestAmount_BR parmInterestAmount_BR(FinInterestAmount_BR _finInterestAmount_BR = 0)
    {
        if (!prmisdefault(_finInterestAmount_BR))
        {
            this.setField(fieldnum(VendTransOpen, InterestAmount_BR), _finInterestAmount_BR);
        }

        return vendTransOpen.InterestAmount_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestAmountPaymCur_BR</Name>
				<Source><![CDATA[
        public FinInterestAmount_BR parmInterestAmountPaymCur_BR(FinInterestAmount_BR _finInterestAmountPaymCur_BR = 0)
    {
        if (!prmisdefault(_finInterestAmountPaymCur_BR))
        {
            this.setField(fieldnum(VendTransOpen, InterestAmountPaymCur_BR), _finInterestAmountPaymCur_BR);
        }

        return vendTransOpen.InterestAmountPaymCur_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestCode_BR</Name>
				<Source><![CDATA[
        public VendInterestCode_BR parmInterestCode_BR(VendInterestCode_BR _interestCode_BR = '')
    {
        if (!prmisdefault(_interestCode_BR))
        {
            this.setField(fieldNum(VendTransOpen, InterestCode_BR), _interestCode_BR);
        }

        return vendTransOpen.InterestCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastInterestDateDummy</Name>
				<Source><![CDATA[
        public TransDate parmLastInterestDateDummy(TransDate _lastInterestDateDummy = dateNull())
    {
        if (!prmisdefault(_lastInterestDateDummy))
        {
            this.setField(fieldnum(VendTransOpen, LastInterestDateDummy), _lastInterestDateDummy);
        }

        return vendTransOpen.LastInterestDateDummy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPossibleCashDisc</Name>
				<Source><![CDATA[
        public VendCashDiscAmount parmPossibleCashDisc(VendCashDiscAmount _possibleCashDisc = 0)
    {
        if (!prmisdefault(_possibleCashDisc))
        {
            this.setField(fieldnum(VendTransOpen, PossibleCashDisc), _possibleCashDisc);
        }

        return vendTransOpen.PossibleCashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefRecId</Name>
				<Source><![CDATA[
        public VendTransRefRecId parmRefRecId(VendTransRefRecId _refRecId = 0)
    {
        if (!prmisdefault(_refRecId))
        {
            this.setField(fieldnum(VendTransOpen, RefRecId), _refRecId);
        }

        return vendTransOpen.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportingCurrencyAmount</Name>
				<Source><![CDATA[
        public AmountMSTSecondary parmReportingCurrencyAmount(AmountMSTSecondary _reportingCurrencyAmount = 0)
    {
        if (!prmisdefault(_reportingCurrencyAmount))
        {
            this.setField(fieldNum(VendTransOpen, ReportingCurrencyAmount), _reportingCurrencyAmount);
        }

        return vendTransOpen.ReportingCurrencyAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettlement_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// The settlement parameter information.
    /// </summary>
    /// <param name="_settlement_IN">
    /// Yes, if the settlement parameter exist.
    /// </param>
    /// <returns>
    /// Yes, is the settlement parameter exist.
    /// </returns>
    public NoYes parmSettlement_IN(NoYesId _settlement_IN = NoYes::No)
    {
        if (!prmisdefault(_settlement_IN))
        {
            this.setField(fieldnum(VendTransOpen, Settlement_IN), _settlement_IN);
        }

        return vendTransOpen.Settlement_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTax1099Amount</Name>
				<Source><![CDATA[

    public Tax1099Amount parmTax1099Amount(Tax1099Amount _tax1099Amount = 0)
    {
        if (!prmisdefault(_tax1099Amount))
        {
            this.setField(fieldnum(VendTransOpen, Tax1099Amount), _tax1099Amount);
        }

        return vendTransOpen.Tax1099Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTax1099StateAmount</Name>
				<Source><![CDATA[
        public Tax1099StateAmount parmTax1099StateAmount(Tax1099StateAmount _tax1099StateAmount = 0)
    {
        if (!prmisdefault(_tax1099StateAmount))
        {
            this.setField(fieldnum(VendTransOpen, Tax1099StateAmount), _tax1099StateAmount);
        }

        return vendTransOpen.Tax1099StateAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxComponentTable_IN</Name>
				<Source><![CDATA[
    public RefRecId parmTaxComponentTable_IN(RefRecId _taxComponentTable_IN = 0)
    {
        if (!prmisdefault(_taxComponentTable_IN))
        {
            this.setField(fieldnum(VendTransOpen, TaxComponentTable_IN), _taxComponentTable_IN);
        }

        return vendTransOpen.TaxComponentTable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdAmountOrigin_IN</Name>
				<Source><![CDATA[

    public AmountCur parmTaxWithholdAmountOrigin_IN(AmountCur _taxWithholdAmountOrigin_IN = 0)
    {
        if (!prmisdefault(_taxWithholdAmountOrigin_IN))
        {
            this.setField(fieldnum(VendTransOpen, TaxWithholdAmountOrigin_IN), _taxWithholdAmountOrigin_IN);
        }

        return vendTransOpen.TaxWithholdAmountOrigin_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdRegNumber_IN</Name>
				<Source><![CDATA[

    public TaxWithholdRegNumberRecId_IN parmTaxWithholdRegNumber_IN(TaxWithholdRegNumberRecId_IN _taxWithholdRegNumber_IN = 0)
    {
        if (!prmisdefault(_taxWithholdRegNumber_IN))
        {
            this.setField(fieldnum(VendTransOpen, TaxWithholdRegNumber_IN), _taxWithholdRegNumber_IN);
        }

        return vendTransOpen.TaxWithholdRegNumber_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdStatus_IN</Name>
				<Source><![CDATA[

    /// <summary>
    /// The tax withhold status parameter.
    /// </summary>
    /// <param name="_taxWithholdStatus_IN">
    /// Yes, if the tax withhold status parameter exist.
    /// </param>
    /// <returns>
    /// Yes, if the tax withhold status parameter exist.
    /// </returns>
    public NoYes parmTaxWithholdStatus_IN(NoYesId _taxWithholdStatus_IN = NoYes::No)
    {
        if (!prmisdefault(_taxWithholdStatus_IN))
        {
            this.setField(fieldnum(VendTransOpen, TaxWithholdStatus_IN), _taxWithholdStatus_IN);
        }

        return vendTransOpen.TaxWithholdStatus_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTCSAmount_IN</Name>
				<Source><![CDATA[

    public AmountCur parmTCSAmount_IN(AmountCur _TCSAmount_IN = 0)
    {
        if (!prmisdefault(_TCSAmount_IN))
        {
            this.setField(fieldnum(VendTransOpen, TCSAmount_IN), _TCSAmount_IN);
        }

        return vendTransOpen.TCSAmount_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTDSAmount_IN</Name>
				<Source><![CDATA[

    public AmountCur parmTDSAmount_IN(AmountCur _TDSAmount_IN = 0)
    {
        if (!prmisdefault(_TDSAmount_IN))
        {
            this.setField(fieldnum(VendTransOpen, TDSAmount_IN), _TDSAmount_IN);
        }

        return vendTransOpen.TDSAmount_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmThirdPartyBankAccountID</Name>
				<Source><![CDATA[

    public BankThirdPartyAccountId parmThirdPartyBankAccountID(BankThirdPartyAccountId _thirdPartyBankAccountID = '')
    {
        if (!prmisdefault(_thirdPartyBankAccountID))
        {
            this.setField(fieldnum(VendTransOpen, ThirdPartyBankAccountId), _thirdPartyBankAccountID);
        }

        return vendTransOpen.ThirdPartyBankAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
        public TransDate parmTransDate(TransDate _transDate = dateNull())
    {
        if (!prmisdefault(_transDate))
        {
            this.setField(fieldnum(VendTransOpen, TransDate), _transDate);
        }

        return vendTransOpen.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUseCashDisc</Name>
				<Source><![CDATA[
        public UseCashDisc parmUseCashDisc(UseCashDisc _useCashDisc = UseCashDisc::Normal)
    {
        if (!prmisdefault(_useCashDisc))
        {
            this.setField(fieldnum(VendTransOpen, UseCashDisc), _useCashDisc);
        }

        return vendTransOpen.UseCashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
        protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTransOpen</Name>
				<Source><![CDATA[
        public VendTransOpen vendTransOpen(VendTransOpen _vendTransOpen = vendTransOpen)
    {
        if (!prmisdefault(_vendTransOpen))
        {
            this.setCurrentRecordFromExternal(_vendTransOpen);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static AxVendTransOpen construct()
    {
        return new AxVendTransOpen();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newVendTransOpen</Name>
				<Source><![CDATA[
        public static AxVendTransOpen newVendTransOpen(VendTransOpen _vendTransOpen)
    {
        AxVendTransOpen axVendTransOpen = AxVendTransOpen::construct();

        axVendTransOpen.vendTransOpen(_vendTransOpen);

        return axVendTransOpen;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>