<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalTableData</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysTableNameFactory(tableStr(InventJournalTable))]
class InventJournalTableData extends JournalTableData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromJournalName</Name>
				<Source><![CDATA[
    public void initFromJournalName(JournalNameMap _journalName)
    {
        InventJournalTable  inventJournalTable  = this.journalTable();
        InventJournalName   inventJournalName   = _journalName;

        super(_journalName);

        inventJournalTable.LedgerDimension  = inventJournalName.LedgerDimension;
        inventJournalTable.Reservation      = inventJournalName.Reservation;
        inventJournalTable.CountingStatusRegistrationPolicy = inventJournalName.CountingStatusRegistrationPolicy;
        if (inventJournalName.checkWorkflowApprovalEnabled())
        {
            inventJournalTable.WorkflowApprovalStatus = InventJournalWorkflowApprovalStatus::NotSubmitted;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalVoucherNum</Name>
				<Source><![CDATA[
    public JournalVoucherNum journalVoucherNum(JournalVoucherNum _journalVoucherNum = journalVoucherNum)
    {
        InventJournalTable  inventJournalTable = this.journalTable();

        switch (inventJournalTable.JournalType)
        {
            case InventJournalType::TagCounting:
                return null;
            default:
                return super(_journalVoucherNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWritePre</Name>
				<Source><![CDATA[
	public boolean validateWritePre(boolean _ret = true)
    {
        _ret = super(_ret);

        _ret = _ret && this.validateCountingStatusRegistrationPolicy();

        return _ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWorkflowStatus</Name>
				<Source><![CDATA[
    public boolean validateWorkflowStatus(JournalCheckPostType journalCheckPostType)
    {
        InventJournalTable  inventJournalTableLoc = this.journalTable();
        if (inventJournalTableLoc.isWorkflowUsed() && !inventJournalTableLoc.isWFApprovalApproved())
        {
            if (journalCheckPostType == JournalCheckPostType::Check)
            {
                warning(strFmt("@SCM:CannotPostJournalNotApproved", inventJournalTableLoc.JournalId));
            }
            else
            {
                return checkFailed(strFmt("@SCM:CannotPostJournalNotApproved", inventJournalTableLoc.JournalId));
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCountingStatusRegistrationPolicy</Name>
				<Source><![CDATA[
	private boolean validateCountingStatusRegistrationPolicy()
    {
        InventJournalTable  inventJournalTable = this.journalTable();
        InventJournalTable  inventJournalTableOrig = inventJournalTable.orig();
        boolean ret = true;
        if (inventJournalTable.isCountingStatusRegistrationEnabled() != inventJournalTableOrig.isCountingStatusRegistrationEnabled()
            && this.hasLines())
        {
            ret = checkFailed("@SCM:Error_CountingJournal_CountingStatusRegistrationChangedWhenJournalHasLines");
        }

        return ret;
	}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>