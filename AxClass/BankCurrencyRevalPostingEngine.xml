<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankCurrencyRevalPostingEngine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankCurrencyRevalPostingEngine</c> class is used for driving final creation of Bank - foreign currency revaluation records.
/// </summary>
internal final class BankCurrencyRevalPostingEngine
{
    private BankCurrencyRevalTmp bankCurrencyRevalTmp;
    private BankCurrencyRevalTmp bankCurrencyRevalTmpByDimension;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new(BankCurrencyRevalTmp _bankCurrencyRevalTmp, BankCurrencyRevalTmp _expandedBankCurrencyRevalTmp = null)
    {
        bankCurrencyRevalTmp = _bankCurrencyRevalTmp;
        bankCurrencyRevalTmpByDimension = _expandedBankCurrencyRevalTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the processing of the revaluations, and moves them on to posting.
    /// </summary>
    /// <returns>true if there were revaluations made; otherwise, false.</returns>
    internal boolean run()
    {
        using (SysInstrumentationActivityContext activityContext = this.createActivityContext())
        {
            if (!FeatureStateProvider::isFeatureEnabled(BankCurrencyRevalEnhancementFeature::instance()))
            {
                BankCurrencyRevalPostingAllocator postingAllocator = BankCurrencyRevalPostingAllocator::newFromBankCurrencyRevalTmp(bankCurrencyRevalTmp);

                bankCurrencyRevalTmpByDimension = postingAllocator.allocateRevaluationsAcrossDimensions();
            }

            BankCurrencyRevalPost bankCurrencyRevalPost = BankCurrencyRevalPost::newFromBankCurrencyRevalTmpInstances(bankCurrencyRevalTmp, bankCurrencyRevalTmpByDimension);

            return bankCurrencyRevalPost.postRevaluations();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createActivityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext createActivityContext()
    {
        SysInstrumentationProgressLogger progressLogger = SysInstrumentationProgressLogger::createLogger(
            BankInstrumentationConstants::SourceNameBankCurrencyRevaluation,
            BankInstrumentationConstants::BankNamespace);

        return progressLogger.activityContextForStage(BankInstrumentationConstants::BankCurrencyRevaluationPost);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>