<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerVoucherObject_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(LedgerVoucherObject))]
public final class LedgerVoucherObject_ApplicationSuite_Extension
{
    public boolean isZeroInvoice_IT;
    public boolean isZeroInvoiceAlreadySet_IT; //to avoid unnecessary checks

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isZeroInvoice_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the isZeroInvoice flag.
    /// </summary>
    /// <returns>
    /// the value of isZeroInvoice flag.
    /// </returns>
    public boolean isZeroInvoice_IT()
    {
        return isZeroInvoice_IT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isZeroInvoiceAlreadySet_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the isZeroInvoiceAlreadySet flag.
    /// </summary>
    /// <returns>
    /// the value of isZeroInvoiceAlreadySet flag.
    /// </returns>
    public boolean isZeroInvoiceAlreadySet_IT()
    {
        return isZeroInvoiceAlreadySet_IT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsZeroInvoice_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the isZeroInvoice flag.
    /// </summary>
    /// </param>
    /// <param name = "_isZeroInvoice">
    /// The new value of isZeroInvoice.
    /// </param>
    public void setIsZeroInvoice_IT(boolean _isZeroInvoice)
    {
        isZeroInvoice_IT = _isZeroInvoice;
        isZeroInvoiceAlreadySet_IT = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldAddTrans</Name>
				<Source><![CDATA[
    protected boolean shouldAddTrans(
        LedgerVoucherTransObject _transaction,
        boolean _allocate,
        boolean _obsolete,
        boolean _skipLastValueUpdate)
    {
        if (this.isZeroInvoice_IT()
            && !this.parmSkipZeroAmountCheck()
            && FeatureStateProvider::isFeatureEnabled(PostingZeroInvoicesInGeneralLedgerFeature::instance()))
        {
            this.parmSkipZeroAmountCheck(true);
        }

        boolean ret = next shouldAddTrans(
            _transaction,
            _allocate,
            _obsolete,
            _skipLastValueUpdate);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>