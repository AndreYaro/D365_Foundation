<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesDeliveryScheduleFormContext_SalesLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>SalesDeliveryScheduleFormContext_SalesLine</c> holds sales line specific delivery schedule form context.
/// </summary>
internal class SalesDeliveryScheduleFormContext_SalesLine extends SalesDeliveryScheduleFormContext
{
    private SalesLine orderLine;
    private boolean orderLineHasDeliveryLines = true;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initOrderSalesLine</Name>
				<Source><![CDATA[
    private void initOrderSalesLine(SalesLine _formCallerSalesLine)
    {
        switch (_formCallerSalesLine.LineDeliveryType)
        {
            case LineDeliveryType::OrderLineWithMultipleDeliveries:
                orderLine.data(_formCallerSalesLine);
                break;
            case LineDeliveryType::DeliveryLine:
                orderLine = SalesDeliverySchedule::findOrderLineForDeliveryLine(_formCallerSalesLine.InventTransId);
                if (!orderLine)
                {
                    // The order line of the selected delivery line was deleted.
                    throw error("@SYS131419");
                }
                break;
            default:
                // called for an order line without delivery lines
                orderLine.data(_formCallerSalesLine);
                orderLineHasDeliveryLines = false;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init(SalesLine _formCallerSalesLine)
    {
        this.initOrderSalesLine(_formCallerSalesLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static SalesDeliveryScheduleFormContext_SalesLine construct()
    {
        return new SalesDeliveryScheduleFormContext_SalesLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>SalesDeliveryScheduleFormContext_SalesLine</c> context based on the SalesLine buffer.
    /// </summary>
    /// <param name="_formCallerSalesLine">The caller's <c>SalesLine</c> buffer.</param>
    /// <returns>
    /// An instance of <c>SalesDeliveryScheduleFormContext_SalesLine</c> context.
    /// </returns>
    internal static SalesDeliveryScheduleFormContext_SalesLine newSalesLine(SalesLine _formCallerSalesLine)
    {
        SalesDeliveryScheduleFormContext_SalesLine formContext = SalesDeliveryScheduleFormContext_SalesLine::construct();

        formContext.init(_formCallerSalesLine);

        return formContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add <c>SalesLine</c> buffer representing delivery line to a map that collects delivery dates and quantities.
    /// </summary>
    /// <param name = "_orderLine">
    /// The delivery <c>SalesLine</c> buffer to be added.
    /// </param>
    internal void addLine(Common _orderLine)
    {
        SalesLine salesLine = _orderLine;

        if (deliveryQtyByDate.exists(salesLine.ShippingDateRequested))
        {
            deliveryQtyByDate.insert(salesLine.ShippingDateRequested, deliveryQtyByDate.lookup(salesLine.ShippingDateRequested) + salesLine.SalesQty);
        }
        else
        {
            deliveryQtyByDate.insert(salesLine.ShippingDateRequested, salesLine.SalesQty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrderLineTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get sales order line inventory transaction ID.
    /// </summary>
    /// <returns>
    /// Sales order line inventory transaction ID.
    /// </returns>
    internal InventTransId getOrderLineTransId()
    {
        return orderLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderLineHasDeliveryLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicate if context was called for an sales order line without delivery lines.
    /// </summary>
    /// <returns>
    /// True if context was called for an sales order line without delivery lines, otherwise false.
    /// </returns>
    internal boolean orderLineHasDeliveryLines()
    {
        return orderLineHasDeliveryLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyDeliveryScheduleFormContextForIssues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Call specific implementation of applying deliveryScheduleFormContext logic.
    /// </summary>
    /// <param name="_parameters">
    /// Parameters for adjusting the quantity in the delivery lines using the delivery schedule form specific to the SalesLine.
    /// </param>
    internal void applyDeliveryScheduleFormContextForIssues(SalesDeliveryScheduleFormContextIssueParameters _parameters)
    {
        SalesATPCalculation salesATPCalculation = _parameters.salesATPCalculation;

        salesATPCalculation.applyDeliveryScheduleFormContextForIssues_SalesLine(_parameters);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>