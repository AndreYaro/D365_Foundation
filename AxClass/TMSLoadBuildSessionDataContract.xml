<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSLoadBuildSessionDataContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides the data contract for the <c>TMSLoadBuildSessionPurgeService</c> class.
/// </summary>
[DataContractAttribute]
class TMSLoadBuildSessionDataContract implements SysPackable
{
    str loadBuildSessionQuery;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        loadBuildSessionQuery
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }
]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmLoadBuildSessionQuery</Name>
				<Source><![CDATA[
    [DataMemberAttribute, AifQueryTypeAttribute('_loadBuildSessionQuery', queryStr(TMSLoadBuildSessionQuery))]
    public str parmLoadBuildSessionQuery(str _loadBuildSessionQuery = loadBuildSessionQuery)
    {
        loadBuildSessionQuery = _loadBuildSessionQuery;

        return loadBuildSessionQuery;
    }
]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        int version = conPeek(_packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = _packedClass;
                break;
            default:
                return false;
        }

        return true;
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TMSLoadBuildSessionDataContract construct()
    {
        return new TMSLoadBuildSessionDataContract();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>