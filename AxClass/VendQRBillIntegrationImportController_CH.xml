<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendQRBillIntegrationImportController_CH</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The controller class of the Import QR-Bill procedure.
/// </summary>
public class VendQRBillIntegrationImportController_CH extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceCH00014, funcName());

        VendQRBillIntegrationImportController_CH controller = VendQRBillIntegrationImportController_CH::newFromArgs(_args);
        
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates the object of the class <c>VendQRBillIntegrationImportController_CH</c> by the <paramref name="_args"/>.
    /// </summary>
    /// <param name = "_args">The object of the class <c>Args</c>.</param>
    /// <returns></returns>
    public static VendQRBillIntegrationImportController_CH newFromArgs(Args _args)
    {
        VendQRBillIntegrationImportController_CH controller;
        controller = new VendQRBillIntegrationImportController_CH();
        controller.initializeFromArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFromArgs</Name>
				<Source><![CDATA[
    public void initializeFromArgs(Args _args)
    {
        super(_args);

        VendQRBillIntegrationImportContract_CH contract = this.getBaseDataContract() as VendQRBillIntegrationImportContract_CH;

        if (contract)
        {
            switch (_args.dataset())
            {
                case tableNum(LedgerJournalTable):
                    LedgerJournalTable ledgerJournalTable = _args.record();
                    contract.parmInvoiceJourNum(ledgerJournalTable.JournalNum);
                    contract.parmIsFromInvoiceJournal(true);
                    contract.parmModelMappingId(VendQRBillIntegrationImportService_CH::getQRModelMappingRecIdgByImportFormatMappingAndIntegrationPoint(
                        contract.parmImportFormatMappingId(),
                        VendQRBillIntegrationImportService_CH::getIntegrationPointFromJournalType(ledgerJournalTable.JournalType)));
                    break;

                case tableNum(VendInvoiceInfoTable):
                    VendInvoiceInfoTable vendInvoiceInfoTable = _args.record();
                    contract.parmVendInvoiceInfoTableRecId(vendInvoiceInfoTable.RecId);
                    contract.parmIsFromPendingInvoice(true);
                    contract.parmModelMappingId(VendQRBillIntegrationImportService_CH::getQRModelMappingRecIdgByImportFormatMappingAndIntegrationPoint(
                        contract.parmImportFormatMappingId(),
                        VendQRBillIntegrationImportService_CH::VendorInvoiceHeaderEntityIntegrationPoint));
                    break;
            }
        
            FormRun formRun = _args.caller() as FormRun;

            if (formRun)
            {
                contract.parmFormDataSource(formRun.dataSource());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>