<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPurchOpenOrdersSRSHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>VendPurchOpenOrdersSRSHelper </c>class is used to calculate the amounts of every purchase
///    order ID and the corresponding vendor name of the vendor account that is related to every purchase
///    order ID.
/// </summary>
public class VendPurchOpenOrdersSRSHelper
{
    PurchTable purchTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountDelivered</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the <c>amountDelivered</c> for every <c>purchId</c>.
    /// </summary>
    /// <param name="_purchTableRecId">
    ///    A <c>recId</c> that is passed to the <c>getPurchTable</c> method to get the corresponding record
    ///    and calculate the amount delivered.
    /// </param>
    /// <returns>
    ///    The amount delivered for every <c>purchId</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountCur amountDelivered(RecId _purchTableRecId)
    {
        PurchLine purchLine;
        AmountCur amountCur = 0;
        PurchTable purchTableLocal = this.getPurchTable(_purchTableRecId);

        while select purchLine
                where purchLine.PurchId == purchTableLocal.PurchId &&
                      !purchLine.IsDeleted
        {
            amountCur += purchLine.calcLineAmountExclTax(purchLine.PurchQty - purchLine.RemainPurchPhysical);
        }

        return amountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountRemainingExclTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the <c>amountRemainingExclTax</c> value for every <c>purchId</c>.
    /// </summary>
    /// <param name="_purchTableRecId">
    ///    A <c>recId</c> that is used to calculate the <c>amountRemainingExclTax</c> for every row.
    /// </param>
    /// <returns>
    ///    An <c>amountRemainingExclTax</c> value for every <c>purchId</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountCur amountRemainingExclTax(RecId _purchTableRecId)
    {
        PurchLine purchLine;
        AmountCur amountCur = 0;
        PurchTable purchTableLocal = this.getPurchTable(_purchTableRecId);

        while select purchLine
                where purchLine.PurchId == purchTableLocal.PurchId &&
                      !purchLine.IsDeleted
        {
            amountCur += purchLine.calcLineAmountExclTax(purchLine.RemainPurchPhysical);
        }

        return amountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountRemainingMST</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method calculates the <c>amountRemainingMST</c> value for every <c>purchId</c>.
    /// </summary>
    /// <param name="_purchTableRecId">
    ///    A <c>recId</c> that is passed to the <c>getPurchTable</c> method to get the corresponding record
    ///    and calculate the <c>amountRemainingMST</c> value.
    /// </param>
    /// <returns>
    ///    An <c>amountRemainingMST</c> value for every <c>purchId</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountMST amountRemainingMST(RecId _purchTableRecId)
    {
        PurchTable purchTableLocal = this.getPurchTable(_purchTableRecId);

        return CurrencyExchangeHelper::amountCur2MST(purchTableLocal.amountRemainingExclTax(), purchTableLocal.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the delivery date for the corresponding <c>purchTable</c> record if it exists; otherwise
    ///    returns the system date.
    /// </summary>
    /// <param name="_purchTableRecId">
    ///    A <c>recId</c> that is passed to the <c>getPurchTable</c> method to get the corresponding record
    ///    and the delivery date.
    /// </param>
    /// <returns>
    ///    The delivery date for every <c>purchId</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public DlvDate deliveryDate(RecId _purchTableRecId)
    {
        PurchTable purchTableLocal = this.getPurchTable(_purchTableRecId);
        DlvDate blankDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        if (purchTableLocal.DeliveryDate)
        {
            return purchTableLocal.DeliveryDate;
        }

        return blankDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>PurchTable</c> table record when the corresponding record ID is passed.
    /// </summary>
    /// <param name="_purchTableRecId">
    ///    This is passed to the method to fetch the corresponding record
    /// </param>
    /// <returns>
    ///    A <c>PurchTable</c> table record for each record ID.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PurchTable getPurchTable(RecId _purchTableRecId)
    {
        return PurchTable::findRecId(_purchTableRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the vendor name of the specified record.
    /// </summary>
    /// <param name="_purchTableRecId">
    ///    The record ID for which to find the vendor name.
    /// </param>
    /// <returns>
    ///    The vendor name of the corresponding vendor account.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public VendName vendorName(RecId _purchTableRecId)
    {
        return this.getPurchTable(_purchTableRecId).vendTable_OrderAccount().Name();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
