<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxSalesLine_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AxSalesLine_IN</c> class is the ax sales line that extends the <c>AxInternalBase</c> class.
/// </summary>
class AxSalesLine_IN extends AxInternalBase
{
    SalesLine_IN SalesLine_IN;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ax original data of internal base.
    /// </summary>
    /// <returns>
    /// The instance of the <c>AxInternalBase</c> class.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _SalesLine_IN = SalesLine_IN)
    {
        if (!prmisdefault(_SalesLine_IN))
        {
            super(_SalesLine_IN);
            SalesLine_IN = _SalesLine_IN;
        }
        else
        {
            super();
        }

        return SalesLine_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    protected Common emptyRecord()
    {
        SalesLine_IN localSalesLine_IN;
        return localSalesLine_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssessableValueTransactionCurrency</Name>
				<Source><![CDATA[
    public AmountCur parmAssessableValueTransactionCurrency(AmountCur _assessableValueTransactionCurrency = 0)
    {
        if (!prmisdefault(_assessableValueTransactionCurrency))
        {
            this.setField(fieldNum(SalesLine_IN, AssessableValueTransactionCurrency), _assessableValueTransactionCurrency);
        }

        return salesLine_IN.AssessableValueTransactionCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreditNoteDate</Name>
				<Source><![CDATA[
    public TransDate parmCreditNoteDate(TransDate _creditNoteDate = dateNull())
    {
        if (!prmisdefault(_creditNoteDate))
        {
            this.setField(fieldNum(SalesLine_IN, CreditNoteDate), _creditNoteDate);
        }

        return salesLine_IN.CreditNoteDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsMaxRetailPrice</Name>
				<Source><![CDATA[
    public MaximumRetailPrice_IN parmCustomsMaxRetailPrice(MaximumRetailPrice_IN _customsMaxRetailPrice = 0)
    {
        if (!prmisdefault(_customsMaxRetailPrice))
        {
            this.setField(fieldNum(SalesLine_IN, CustomsMaxRetailPrice), _customsMaxRetailPrice);
        }

        return salesLine_IN.CustomsMaxRetailPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>ExportOrder</c> parameter.
    /// </summary>
    /// <param name="_exportOrder">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>ExportOrder</c> parameter.
    /// </returns>
    public NoYesID parmExportOrder(NoYesID _exportOrder = NoYes::No)
    {
        if (!prmisdefault(_exportOrder))
        {
            this.setField(fieldNum(SalesLine_IN, ExportOrder), _exportOrder);
        }

        return salesLine_IN.ExportOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaximumRetailPrice</Name>
				<Source><![CDATA[
    public MaximumRetailPrice_IN parmMaximumRetailPrice(MaximumRetailPrice_IN _maximumRetailPrice = 0)
    {
        if (!prmisdefault(_maximumRetailPrice))
        {
            this.setField(fieldNum(SalesLine_IN, MaximumRetailPrice), _maximumRetailPrice);
        }

        return salesLine_IN.MaximumRetailPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnAction</Name>
				<Source><![CDATA[
    public ReturnAction_IN parmReturnAction(ReturnAction_IN _returnAction = '')
    {
        if (!prmisdefault(_returnAction))
        {
            this.setField(fieldNum(SalesLine_IN, ReturnAction), _returnAction);
        }

        return salesLine_IN.ReturnAction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnReasonCodeId</Name>
				<Source><![CDATA[
    public ReturnReasonCodeId parmReturnReasonCodeId(ReturnReasonCodeId _returnReasonCodeId = '')
    {
        if (!prmisdefault(_returnReasonCodeId))
        {
            this.setField(fieldNum(SalesLine_IN, ReturnReasonCodeId), _returnReasonCodeId);
        }

        return salesLine_IN.ReturnReasonCodeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesLine</Name>
				<Source><![CDATA[
    public RefRecId parmSalesLine(RefRecId _salesLine = 0)
    {
        if (!prmisdefault(_salesLine))
        {
            this.setField(fieldNum(SalesLine_IN, SalesLine), _salesLine);
        }

        return salesLine_IN.SalesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxAsPerOriginalInvoice</Name>
				<Source><![CDATA[
    public NoYesId parmTaxAsPerOriginalInvoice(NoYesId _taxAsPerOriginalInvoice = NoYes::No)
    {
        if (!prmisdefault(_taxAsPerOriginalInvoice))
        {
            this.setField(fieldNum(SalesLine_IN, TaxAsPerOriginalInvoice), _taxAsPerOriginalInvoice);
        }

        return salesLine_IN.TaxAsPerOriginalInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdLineNum</Name>
				<Source><![CDATA[
    public LineNum parmTaxWithholdLineNum(LineNum _taxWithholdLineNum = 0)
    {
        if (!prmisdefault(_taxWithholdLineNum))
        {
            this.setField(fieldNum(SalesLine_IN, TaxWithholdLineNum), _taxWithholdLineNum);
        }

        return salesLine_IN.TaxWithholdLineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdVoucher</Name>
				<Source><![CDATA[
    public Voucher parmTaxWithholdVoucher(Voucher _taxWithholdVoucher = '')
    {
        if (!prmisdefault(_taxWithholdVoucher))
        {
            this.setField(fieldNum(SalesLine_IN, TaxWithholdVoucher), _taxWithholdVoucher);
        }

        return salesLine_IN.TaxWithholdVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTCSGroup</Name>
				<Source><![CDATA[
    public TaxWithholdGroup parmTCSGroup(TaxWithholdGroup _tCSGroup = '')
    {
        if (!prmisdefault(_tCSGroup))
        {
            this.setField(fieldNum(SalesLine_IN, TCSGroup), _tCSGroup);
        }

        return salesLine_IN.TCSGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTDSGroup</Name>
				<Source><![CDATA[
    public TaxWithholdGroup parmTDSGroup(TaxWithholdGroup _tDSGroup = '')
    {
        if (!prmisdefault(_tDSGroup))
        {
            this.setField(fieldNum(SalesLine_IN, TDSGroup), _tDSGroup);
        }

        return salesLine_IN.TDSGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesLine_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the record of the sales line.
    /// </summary>
    /// <param name="_salesLine_IN">
    /// The sales line information.
    /// </param>
    /// <returns>
    /// The instance of the <c>SalesLine_IN</c> class.
    /// </returns>
    public SalesLine_IN salesLine_IN(SalesLine_IN _salesLine_IN = salesLine_IN)
    {
        if (!prmisdefault(_salesLine_IN))
        {
            this.setCurrentRecordFromExternal(_salesLine_IN);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExportOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Sets the <c>ExportOrder</c> parameter.
    /// </summary>
    protected void setExportOrder()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(SalesLine_IN, ExportOrder)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxSalesLine_IN construct()
    {
        return new AxSalesLine_IN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSalesLine_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new sales line data.
    /// </summary>
    /// <param name="_SalesLine_IN">
    /// The sales line information.
    /// </param>
    /// <returns>
    /// The instacne of the <c>AxSalesLine_IN</c> class.
    /// </returns>
    public static AxSalesLine_IN newSalesLine_IN(SalesLine_IN _SalesLine_IN)
    {
        AxSalesLine_IN AxSalesLine_IN = AxSalesLine_IN::construct();
        AxSalesLine_IN.SalesLine_IN(_SalesLine_IN);

        return AxSalesLine_IN;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>