<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvTaxExpenseEmpty</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Empty tax expense used for core tax expense when GTE is enabled
/// </summary>
class TrvTaxExpenseEmpty extends TrvTaxExpense
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowAdjustBaseAmountForTaxAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the adjusting the calculated base amount is enabled in a transaction when tax is
    /// included in the item price and when the user adjusts the tax amount.
    /// </summary>
    /// <returns>
    /// true if adjusting the calculated base amount is enabled; otherwise, false.
    /// </returns>
    public boolean allowAdjustBaseAmountForTaxAdjustment()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionCurrencyAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction currency amount.
    /// </summary>
    /// <param name = "_isCreditCardTransaction">
    /// Boolean value indicating if the transaction has any payments using credit card.
    /// </param>
    /// <returns>
    /// <c>AmountCur</c> value of the transaction record.
    /// </returns>
    protected AmountCur getTransactionCurrencyAmount(boolean _isCreditCardTransaction)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExchangeCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the exchange currency code.
    /// </summary>
    /// <param name = "_isCreditCardTransaction">
    /// Boolean value indicating if the transaction has any payments using credit card.
    /// </param>
    /// <returns>
    /// Exchange currency code of the transaction.
    /// </returns>
    protected TrvCurrencyCode getExchangeCurrencyCode(boolean _isCreditCardTransaction)
    {
        return "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBaseAmountExcludingTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and gets the base transaction amount without the tax.
    /// </summary>
    /// <param name = "_isCreditCardTransaction">
    /// Boolean value indicating if the transaction has any payments using credit card.
    /// </param>
    /// <param name = "_transactionCurrencyAmount">
    /// Amount with tax in transaction currency.
    /// </param>
    /// <returns>
    /// Base amount without tax.
    /// </returns>
    protected TaxBase getBaseAmountExcludingTax(boolean _isCreditCardTransaction, AmountCur _transactionCurrencyAmount)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldCalculateTaxBasedOnTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the transaction has valid tax group and tax item group.
    /// </summary>
    /// <returns>
    /// true, if <c>TrvExpTrans</c> table buffer has valid tax group and tax item group; otherwise, false.
    /// </returns>
    protected boolean shouldCalculateTaxBasedOnTaxGroup()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates tax for an expense line.
    /// </summary>
    /// <returns>
    /// The calculated tax amount.
    /// </returns>
    public TaxAmountCur calculateTax()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSubLedgerJournalLines</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the current transaction to calculate supports the <c>SubLedgerDistributions</c>
    ///    or <c>SubLedgerJournalLines</c> records.
    /// </summary>
    /// <returns>
    ///    true if the current transaction to calculate supports the <c>SubLedgerDistributions</c> or
    ///    <c>SubLedgerJournalLines</c> records; otherwise, false.
    /// </returns>
    public boolean useSubLedgerJournalLines()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useTaxUncommitted</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the <c>Tax</c> class should use the <c>TaxUncommitted</c> table.
    /// </summary>
    /// <returns>
    ///   True if the <c>Tax</c> class should use the <c>TaxUncommitted</c> table.
    /// </returns>
    public boolean useTaxUncommitted()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>