<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQTotals_CaseTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchRFQTotals_CaseTrans
extends PurchRFQTotals_Trans
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cashDiscCode</Name>
				<Source><![CDATA[
    CashDiscCode cashDiscCode()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>discPercent</Name>
				<Source><![CDATA[
    protected DiscPct  discPercent()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRecordSortedListLine</Name>
				<Source><![CDATA[
    protected void initRecordSortedListLine()
    {
        recordSortedListLine = new RecordSortedList(tablenum(PurchRFQCaseLine));
        recordSortedListLine.sortOrder      (fieldnum(PurchRFQCaseLine, RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccount</Name>
				<Source><![CDATA[
    VendAccount invoiceAccount()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    protected QueryRun  queryBuild()
    {
        Query                   query = new Query();
        QueryBuildDataSource    qbds;

        qbds = query.addDataSource(tablenum(PurchRFQCaseLine));
        qbds.addRange(fieldnum(PurchRFQCaseLine, RFQCaseId)).value(queryValue(purchRFQTableMap.RFQId));
        return new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuildOrderTable</Name>
				<Source><![CDATA[
    protected QueryRun queryBuildOrderTable()
    {
        Query                   query = new Query();
        QueryBuildDataSource    qbds;

        qbds = query.addDataSource(tablenum(PurchRFQCaseTable));
        qbds.firstFast(true);
        qbds.update(true);
        qbds.addRange(fieldnum(PurchRFQCaseTable, RFQCaseId)).value(purchRFQTableMap.RFQId);

        return new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGet</Name>
				<Source><![CDATA[
    protected Common queryGet(QueryRun  _queryRun)
    {
        if (_queryRun.changed(tablenum(PurchRFQCaseLine)))
        {
            purchRFQLineMap = _queryRun.get(tablenum(PurchRFQCaseLine));
        }
        else
        {
            purchRFQLineMap = null;
        }

        return purchRFQLineMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGetOrderTable</Name>
				<Source><![CDATA[
    protected Common queryGetOrderTable(QueryRun _queryRun)
    {
        PurchRFQCaseTable   queryPurchRFQCaseTable;

        if (_queryRun.changed(tablenum(PurchRFQCaseTable)))
            queryPurchRFQCaseTable = _queryRun.get(tablenum(PurchRFQCaseTable));

        return queryPurchRFQCaseTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static PurchRFQTotals_CaseTrans construct(PurchRFQCaseTable     _purchRFQCaseTable,
                                              PurchRFQUpdate    _specQty)
    {
        return new PurchRFQTotals_CaseTrans(_purchRFQCaseTable, _specQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMarkupTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Doesn't set Tax for <c>Markup</c> for appropriate tax calculation.
    /// </summary>
    /// <param name = "_markup"><c>Markup</c> class where to setup Tax.</param>
    public void setMarkupTax(Markup _markup)
    {
        // We should skip tax initing in case PurchTaxOnOperations is set to True to avoid twice tax calculation.
        if (TaxParameters::find().PurchTaxOnOperations)
        {
            return;
        }

        super(_markup);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>