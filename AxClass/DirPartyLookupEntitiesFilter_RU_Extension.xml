<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirPartyLookupEntitiesFilter_RU_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(DirPartyLookupEntitiesFilter))]
final public class DirPartyLookupEntitiesFilter_RU_Extension
{
    public FilterStatus filterLegalEntity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFilterLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Disable/Enable filter for entities LegalEntity role.
    /// </summary>
    /// <param name="_filterLegalEntity">
    ///    Enable or disable the filter.
    /// </param>
    /// <returns>
    ///    true if the filters is enabled; otherwise, false.
    /// </returns>
    public FilterStatus parmFilterLegalEntity(FilterStatus _filterLegalEntity = filterLegalEntity)
    {
        filterLegalEntity = _filterLegalEntity;
        return filterLegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateDirPartyLookupEntitiesFilterHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a new instance of the <c>DirPartyLookupEntitiesFilter</c> class.
    /// </summary>
    /// <param name="_disableAllEntityTypeFilters">
    /// Sets the value of all the filters.
    /// </param>
    /// <param name="_filterCustomers">
    /// Sets the value of the customers filter.
    /// </param>
    /// <param name="_filterVendors">
    /// Sets the value of the vendors filter.
    /// </param>
    /// <param name="_filterBusinessRelations">
    /// Sets the value of the business relations filter.
    /// </param>
    /// <param name="_filterCompetitors">
    /// Sets the value of the competitors filter.
    /// </param>
    /// <param name="_filterContacts">
    /// Sets the value of the contacts filter.
    /// </param>
    /// <param name="_filterEmployees">
    /// Sets the value of the employees filter.
    /// </param>
    /// <param name="_filterProspectiveVendors">
    /// Sets the value of the prospective vendors filter.
    /// </param>
    /// <param name="_filterApplicants">
    /// Sets the value of the applicants filter.
    /// </param>
    /// <param name="_filterDataAreaId">
    /// the <c>dataAreaId</c> value on which to filter; otherwise, disables the filter.
    /// </param>
    /// <param name="_filterLegalEntity">
    /// Sets the value of the LegalEntity filter.
    /// </param>
    /// <returns>
    /// An instance of the <c>DirPartyLookupEntitiesFilter</c> class.
    /// </returns>
    public static DirPartyLookupEntitiesFilter generateDirPartyLookupEntitiesFilterHandler(
        NoYes _disableAllEntityTypeFilters = NoYes::Yes,
        FilterStatus _filterCustomers = FilterStatus::Undefined,
        FilterStatus _filterVendors = FilterStatus::Undefined,
        FilterStatus _filterBusinessRelations = FilterStatus::Undefined,
        FilterStatus _filterCompetitors = FilterStatus::Undefined,
        FilterStatus _filterContacts = FilterStatus::Undefined,
        FilterStatus _filterEmployees = FilterStatus::Undefined,
        FilterStatus _filterProspectiveVendors = FilterStatus::Undefined,
        FilterStatus _filterApplicants = FilterStatus::Undefined,
        dataAreaId _filterDataAreaId = SysQuery::valueUnlimited(),
        FilterStatus _filterLegalEntity = FilterStatus::Undefined)
    {

        DirPartyLookupEntitiesFilter dirPartyLookupEntitiesFilter = DirPartyLookupEntitiesFilter::generateDirPartyLookupEntitiesFilter(
            _disableAllEntityTypeFilters,
            _filterCustomers,
            _filterVendors,
            _filterBusinessRelations,
            _filterCompetitors,
            _filterContacts,
            _filterEmployees,
            _filterProspectiveVendors,
            _filterApplicants,
            _filterDataAreaId);

        dirPartyLookupEntitiesFilter.parmFilterLegalEntity(_filterLegalEntity);

        return dirPartyLookupEntitiesFilter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateDirPartyLookupEntitiesFilter</Name>
				<Source><![CDATA[
    public static DirPartyLookupEntitiesFilter generateDirPartyLookupEntitiesFilter(
        NoYes _disableAllEntityTypeFilters,
        FilterStatus _filterCustomers,
        FilterStatus _filterVendors,
        FilterStatus _filterBusinessRelations,
        FilterStatus _filterCompetitors,
        FilterStatus _filterContacts,
        FilterStatus _filterEmployees,
        FilterStatus _filterProspectiveVendors,
        FilterStatus _filterApplicants,
        dataAreaId _filterDataAreaId)
    {
        DirPartyLookupEntitiesFilter dirPartyLookupEntitiesFilter = next generateDirPartyLookupEntitiesFilter(
             _disableAllEntityTypeFilters,
            _filterCustomers,
            _filterVendors,
            _filterBusinessRelations,
            _filterCompetitors,
            _filterContacts,
            _filterEmployees,
            _filterProspectiveVendors,
            _filterApplicants,
            _filterDataAreaId);

        dirPartyLookupEntitiesFilter.parmFilterLegalEntity(FilterStatus::Undefined);

        return dirPartyLookupEntitiesFilter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [next pack(), filterLegalEntity];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _pack)
    {
        boolean ret;

        ret = next unpack(_pack);

        if (ret)
        {
            filterLegalEntity = conPeek(_pack, conLen(_pack)) ;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>