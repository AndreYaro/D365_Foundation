<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumDateValueReportDim</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventSumDateValueReportDim extends InventSumDateValue
{
    InventDim       inventDimCriteria;
    InventDimParm   inventDimParm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventDim</Name>
				<Source><![CDATA[
    InventDim parmInventDim(InventDim _inventDimCriteria = inventDimCriteria)
    {
        inventDimCriteria = _inventDimCriteria;
        return inventDimCriteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimParm</Name>
				<Source><![CDATA[
    InventDimParm parmInventDimParm(InventDimParm _inventDimParm = inventDimParm)
    {
        inventDimParm = _inventDimParm;
        return inventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postedPhysicalValue</Name>
				<Source><![CDATA[
    CostAmount postedPhysicalValue()
    {
        return postedPhysicalValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventSettlement</Name>
				<Source><![CDATA[
    protected void selectInventSettlement()
    {
        postedValue -= InventSettlement::dateCostAmountAdjustment(perDate, itemId, inventDimCriteria, inventDimParm, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventSum</Name>
				<Source><![CDATA[
    protected void selectInventSum()
    {
        this.addInventSum(InventSum::findSum(itemId, inventDimCriteria, inventDimParm, InventSumFields::Physical));

        this.selectSumPostedPhysicalValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransPicked</Name>
				<Source><![CDATA[
    protected void selectInventTransPicked()
    {
        pickedQty += InventTrans::qtyPickedDate(perDate,itemId,inventDimCriteria,inventDimParm);
        cwPickedQty += cwItem
                        ? InventTrans::pdsCWQtyPickedDate(
                                                perDate,
                                                itemId,
                                                inventDimCriteria,
                                                inventDimParm)
                        : 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransPostingFinancial</Name>
				<Source><![CDATA[
    protected void selectInventTransPostingFinancial()
    {
        InventTransPosting  inventTransPostingFinancial;
        InventTransPosting  inventTransPostingPhysical;
        InventTrans         inventTrans;
        InventDim           inventDim;
        InventDim           inventDim2;
        InventSettlement    inventSettlement;

        if (! inventDimParm.isFlagSelective())
        {
            while select forceplaceholders TableId from inventTransPostingFinancial
                where inventTransPostingFinancial.ItemId                    == itemId
                    &&  inventTransPostingFinancial.InventTransPostingType    == InventTransPostingType::Financial
                    &&  inventTransPostingFinancial.TransDate                 >  perDate
            join sum(CostAmountPhysical),sum(CostAmountPosted),sum(CostAmountAdjustment),sum(Qty), sum(PdsCWQty) from inventTrans
                group by StatusIssue,StatusReceipt,PackingSlipReturned
                where inventTrans.Voucher                                   == inventTransPostingFinancial.Voucher
                    &&  inventTrans.DateFinancial                             == inventTransPostingFinancial.TransDate
                    &&  inventTrans.InventTransOrigin                         == inventTransPostingFinancial.InventTransOrigin
            join IsPosted from inventTransPostingPhysical
                group by IsPosted
                where inventTrans.VoucherPhysical                           == inventTransPostingPhysical.Voucher
                    &&  inventTrans.DatePhysical                              == inventTransPostingPhysical.TransDate
                    &&  inventTrans.InventTransOrigin                         == inventTransPostingPhysical.InventTransOrigin
                    &&  inventTransPostingPhysical.InventTransPostingType     == InventTransPostingType::Physical
            #inventDimExistsJoin(inventTrans.InventDimId,inventDim,inventDimCriteria,inventDimParm)
            {
                this.updatePhysicalValues(inventTransPostingPhysical.IsPosted, inventTrans.CostAmountPhysical);
                this.addInventTransFinancial(inventTrans);
            }
        }
        else
        if (inventDimParm.InventSerialIdFlag && inventDimCriteria.InventSerialId)
        {
            while #inventDimSelect(inventDim,inventDimCriteria,inventDimParm,forcePlaceholders tableId from,serialIdIdx)
            join sum(CostAmountPhysical),sum(CostAmountPosted),sum(CostAmountAdjustment),sum(Qty), sum(PdsCWQty) from inventTrans
                group by StatusIssue,StatusReceipt,PackingSlipReturned
                where inventTrans.InventDimId == inventDim.InventDimId
            join TableId from inventTransPostingFinancial
                where inventTrans.Voucher                                    == inventTransPostingFinancial.Voucher
                    &&  inventTrans.DateFinancial                              == inventTransPostingFinancial.TransDate
                    &&  inventTrans.InventTransOrigin                          == inventTransPostingFinancial.InventTransOrigin
                    &&  inventTransPostingFinancial.ItemId                     == itemId
                    &&  inventTransPostingFinancial.InventTransPostingType     == InventTransPostingType::Financial
                    &&  inventTransPostingFinancial.TransDate                  >  perDate
            join IsPosted from inventTransPostingPhysical
                group by IsPosted
                where inventTrans.VoucherPhysical                           == inventTransPostingPhysical.Voucher
                    &&  inventTrans.DatePhysical                              == inventTransPostingPhysical.TransDate
                    &&  inventTrans.InventTransOrigin                         == inventTransPostingPhysical.InventTransOrigin
                    &&  inventTransPostingPhysical.InventTransPostingType     == InventTransPostingType::Physical
            {
                this.updatePhysicalValues(inventTransPostingPhysical.IsPosted, inventTrans.CostAmountPhysical);
                this.addInventTransFinancial(inventTrans);
            }
        }
        else
        {
            while select TableId from inventTransPostingFinancial
                where inventTransPostingFinancial.ItemId                     == itemId
                    &&  inventTransPostingFinancial.InventTransPostingType     == InventTransPostingType::Financial
                    &&  inventTransPostingFinancial.TransDate                  >  perDate
            join sum(CostAmountPhysical),sum(CostAmountPosted),sum(CostAmountAdjustment),sum(Qty), sum(PdsCWQty) from inventTrans
                group by StatusIssue,StatusReceipt,PackingSlipReturned
                where inventTrans.Voucher                                   == inventTransPostingFinancial.Voucher
                    &&  inventTrans.DateFinancial                             == inventTransPostingFinancial.TransDate
                    &&  inventTrans.InventTransOrigin                         == inventTransPostingFinancial.InventTransOrigin
            join IsPosted from inventTransPostingPhysical
                group by IsPosted
                where inventTrans.VoucherPhysical                           == inventTransPostingPhysical.Voucher
                    &&  inventTrans.DatePhysical                              == inventTransPostingPhysical.TransDate
                    &&  inventTrans.InventTransOrigin                         == inventTransPostingPhysical.InventTransOrigin
                    &&  inventTransPostingPhysical.InventTransPostingType     == InventTransPostingType::Physical
            #inventDimExistsJoin(inventTrans.InventDimId,inventDim,inventDimCriteria,inventDimParm)
            {
                this.updatePhysicalValues(inventTransPostingPhysical.IsPosted, inventTrans.CostAmountPhysical);
                this.addInventTransFinancial(inventTrans);
            }
        }

        while select forceplaceholders sum(CostAmountAdjustment) from inventSettlement
            where inventSettlement.ItemId       == itemId
              &&  inventSettlement.Cancelled    == NoYes::No
              &&  inventSettlement.TransDate    >  perDate
              &&  inventSettlement.SettleModel  == InventSettleModel::PhysicalValue
              // <GEERU>
              &&  inventSettlement.InventTransCurrency_RU == InventTransCurrency_RU::PrimaryCur
              // </GEERU>
        join TableId from inventTrans
            where inventTrans.RecId             == inventSettlement.TransRecId
              &&  inventTrans.StatusIssue       == StatusIssue::Sold
        #inventDimExistsJoin(inventTrans.InventDimId,inventDim2,inventDimCriteria,inventDimParm)
        exists join IsPosted from inventTransPostingPhysical
            where inventTrans.VoucherPhysical                           == inventTransPostingPhysical.Voucher
              &&  inventTrans.DatePhysical                              == inventTransPostingPhysical.TransDate
              &&  inventTrans.InventTransOrigin                         == inventTransPostingPhysical.InventTransOrigin
              &&  inventTransPostingPhysical.InventTransPostingType     == InventTransPostingType::Physical
              &&  inventTransPostingPhysical.IsPosted                   == inventSettlement.Posted
        {
             this.updatePhysicalValues(false, -inventSettlement.CostAmountAdjustment);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransPostingPhysical</Name>
				<Source><![CDATA[
    protected void selectInventTransPostingPhysical()
    {
        InventTrans                 inventTrans;
        InventTransPosting          inventTransPostingPhysical;
        InventDim                   inventDim;

        if (! inventDimParm.isFlagSelective())
        {
            while select forceplaceholders TableId
                from inventTransPostingPhysical
                group by IsPosted
                where inventTransPostingPhysical.ItemId                     == itemId
                    && inventTransPostingPhysical.InventTransPostingType    == InventTransPostingType::Physical
                    && inventTransPostingPhysical.TransDate                 > perDate
                join sum(CostAmountPhysical), sum(CostAmountPosted),
                    sum(CostAmountAdjustment), sum(Qty), sum(PdsCWQty)
                from inventTrans
                group by StatusIssue, StatusReceipt, DateInvent
                where  inventTrans.VoucherPhysical          == inventTransPostingPhysical.Voucher
                    && inventTrans.DatePhysical             == inventTransPostingPhysical.TransDate
                    && inventTrans.InventTransOrigin        == inventTransPostingPhysical.InventTransOrigin
            #inventDimExistsJoin(inventTrans.InventDimId, inventDim, inventDimCriteria, inventDimParm)
            {
                this.updatePhysicalValues(
                        inventTransPostingPhysical.IsPosted,
                        -inventTrans.CostAmountPhysical);
                this.addInventTransPhysical(inventTrans);
            }
        }
        else
        if (inventDimParm.InventSerialIdFlag && inventDimCriteria.InventSerialId)
        {
            while #InventDimSelect(inventDim, inventDimCriteria, inventDimParm,
                forceplaceholders tableId from, serialIdIdx)
                join sum(CostAmountPhysical), sum(CostAmountPosted),
                        sum(CostAmountAdjustment), sum(Qty), sum(PdsCWQty)
                from inventTrans
                group by StatusIssue, StatusReceipt, DateInvent
                where inventTrans.InventDimId == inventDim.InventDimId
                join TableId
                from inventTransPostingPhysical
                group by IsPosted
                where inventTrans.VoucherPhysical                           == inventTransPostingPhysical.Voucher
                    && inventTrans.DatePhysical                             == inventTransPostingPhysical.TransDate
                    && inventTrans.InventTransOrigin                        == inventTransPostingPhysical.InventTransOrigin
                    && inventTransPostingPhysical.ItemId                    == itemId
                    && inventTransPostingPhysical.InventTransPostingType    == InventTransPostingType::Physical
                    && inventTransPostingPhysical.TransDate                 > perDate
            {
                this.updatePhysicalValues(
                        inventTransPostingPhysical.IsPosted,
                        -inventTrans.CostAmountPhysical);
                this.addInventTransPhysical(inventTrans);
            }
        }
        else
        {
            while select forceplaceholders TableId
                from inventTransPostingPhysical
                group by IsPosted
                where inventTransPostingPhysical.ItemId                     == itemId
                    && inventTransPostingPhysical.InventTransPostingType    == InventTransPostingType::Physical
                    && inventTransPostingPhysical.TransDate                 > perDate
                join sum(CostAmountPhysical), sum(CostAmountPosted),
                    sum(CostAmountAdjustment), sum(Qty), sum(PdsCWQty)
                from inventTrans
                group by StatusIssue,StatusReceipt,DateInvent
                where inventTrans.VoucherPhysical               == inventTransPostingPhysical.Voucher
                    && inventTrans.DatePhysical                 == inventTransPostingPhysical.TransDate
                    && inventTrans.InventTransOrigin            == inventTransPostingPhysical.InventTransOrigin
            #inventDimExistsJoin(inventTrans.InventDimId, inventDim, inventDimCriteria, inventDimParm)
            {
                this.updatePhysicalValues(inventTransPostingPhysical.IsPosted, -inventTrans.CostAmountPhysical);
                this.addInventTransPhysical(inventTrans);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransRegistered</Name>
				<Source><![CDATA[
    protected void selectInventTransRegistered()
    {
        registeredQty -= InventTrans::qtyRegisteredDate(perDate,itemId,inventDimCriteria,inventDimParm);
        cwRegisteredQty -= cwItem
                            ? InventTrans::pdsCWQtyRegisteredDate(
                                                            perDate,
                                                            itemId,
                                                            inventDimCriteria,
                                                            inventDimParm)
                            : 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectSumPostedPhysicalValue</Name>
				<Source><![CDATA[
    protected void selectSumPostedPhysicalValue()
    {
        InventTrans             inventTrans;
        InventTransPosting      inventTransPosting;
        InventTransPosting      inventTransPostingPhysical;
        InventDim               inventDim;
        InventDim               inventDim2;
        InventSettlement        inventSettlement;

        if (deductedQty)
        {
            while select forceplaceholders sum(CostAmountPhysical) from inventTrans
                where inventTrans.StatusReceipt     == StatusReceipt::None
                  &&  inventTrans.StatusIssue       == StatusIssue::Deducted
                  &&  inventTrans.ItemId            == itemId
            join IsPosted from inventTransPosting
                group by IsPosted
                where inventTrans.VoucherPhysical               == inventTransPosting.Voucher
                  &&  inventTrans.DatePhysical                  == inventTransPosting.TransDate
                  &&  inventTrans.InventTransOrigin             == inventTransPosting.InventTransOrigin
                  &&  inventTransPosting.InventTransPostingType == InventTransPostingType::Physical
            #inventDimExistsJoin(inventTrans.InventDimId,inventDim,inventDimCriteria,inventDimParm)
            {
                this.updatePhysicalValues(inventTransPosting.IsPosted, inventTrans.CostAmountPhysical);
            }

            while select forceplaceholders sum(CostAmountAdjustment) from inventSettlement
                where inventSettlement.ItemId       == itemId
                  &&  inventSettlement.Cancelled    == NoYes::No
                  &&  inventSettlement.TransDate    >  perDate
                  &&  inventSettlement.SettleModel  == InventSettleModel::PhysicalValue
                  // <GEERU>
                  &&  inventSettlement.InventTransCurrency_RU == InventTransCurrency_RU::PrimaryCur
                  // </GEERU>
            exists join inventTrans
                where inventTrans.RecId             == inventSettlement.TransRecId
                  &&  inventTrans.StatusIssue       == StatusIssue::Deducted
            #inventDimExistsJoin(inventTrans.InventDimId,inventDim2,inventDimCriteria,inventDimParm)
            join IsPosted from inventTransPostingPhysical
                group by IsPosted
                where inventTrans.VoucherPhysical                           == inventTransPostingPhysical.Voucher
                  &&  inventTrans.DatePhysical                              == inventTransPostingPhysical.TransDate
                  &&  inventTrans.InventTransOrigin                         == inventTransPostingPhysical.InventTransOrigin
                  &&  inventTransPostingPhysical.InventTransPostingType     == InventTransPostingType::Physical
                  &&  inventTransPostingPhysical.IsPosted                   == inventSettlement.Posted
            {
                this.updatePhysicalValues(inventTransPostingPhysical.IsPosted, -inventSettlement.CostAmountAdjustment);
            }
        }

        if (receivedQty)
        {
            while select sum(CostAmountPhysical) from inventTrans
                where inventTrans.StatusReceipt     == StatusReceipt::Received
                  &&  inventTrans.StatusIssue       == StatusIssue::None
                  &&  inventTrans.ItemId            == itemId
            join IsPosted from inventTransPosting
                group by IsPosted
                where inventTrans.VoucherPhysical               == inventTransPosting.Voucher
                  &&  inventTrans.DatePhysical                  == inventTransPosting.TransDate
                  &&  inventTrans.InventTransOrigin             == inventTransPosting.InventTransOrigin
                  &&  inventTransPosting.InventTransPostingType == InventTransPostingType::Physical
            #inventDimExistsJoin(inventTrans.InventDimId,inventDim,inventDimCriteria,inventDimParm)
            {
                this.updatePhysicalValues(inventTransPosting.IsPosted, inventTrans.CostAmountPhysical);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
    static InventSumDateValueReportDim newParameters(
        TransDate       _perDate,
        ItemId          _itemId,
        InventDim       _inventDimCriteria,
        InventDimParm   _inventDimParm

        )
    {
        InventSumDateValueReportDim inventSumDateValueReportDim = new InventSumDateValueReportDim();
        InventTable                 inventTable = InventTable::find(_itemId);

        inventSumDateValueReportDim.parmItemId(_itemId);
        inventSumDateValueReportDim.parmPerDate(_perDate);
        inventSumDateValueReportDim.parmInventDim(_inventDimCriteria);
        inventSumDateValueReportDim.parmInventDimParm(_inventDimParm);

        if (inventTable.ItemDimCostPrice == NoYes::Yes)
        {
            InventDimParm inventDimParmGroupBy = _inventDimParm.data();
            inventDimParmGroupBy.setActiveProductDim(EcoResProductDimGroupSetup::newInventTable(inventTable));
            inventSumDateValueReportDim.parmInventDimParm(inventDimParmGroupBy);

            Query query = InventSum::newQuery(null,_itemId,_inventDimCriteria,_inventDimParm,inventDimParmGroupBy);
            query.dataSourceTable(tableNum(InventSum)).findRange(fieldNum(InventSum,Closed)).value('');

            QueryRun queryRun = new QueryRun(query);
            while (queryRun.next())
            {
                InventDim inventDim = queryRun.get(tableNum(InventDim));
                inventSumDateValueReportDim.parmInventDim(inventDim);
                inventSumDateValueReportDim.init();
            }

            inventSumDateValueReportDim.parmInventDimParm(_inventDimParm);
        }
        else
        {
        inventSumDateValueReportDim.init();
        }

        return inventSumDateValueReportDim;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>