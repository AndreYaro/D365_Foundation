<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankPositivePayConfirmation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankPositivePayConfirmation</c> class manages the Bank positive pay confirmation number.
/// </summary>
public class BankPositivePayConfirmation extends RunBase
{
    private BankPositivePayTable bankPositivePayTable;
    private DialogField positivePayConfirmationField;
    protected BankPositivePayConfirmationNum confirmationNum;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        confirmationNum
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        Object dialog;

        dialog = super();

        dialog.addGroup("@SYS4004516");

        positivePayConfirmationField = dialog.addField(extendedTypeStr(BankPositivePayConfirmationNum),
            "@SYS4004517");
        positivePayConfirmationField.lookupButton(FormLookupButton::Never);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        confirmationNum = positivePayConfirmationField.value();

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankPositivePayTable</Name>
				<Source><![CDATA[
    public BankPositivePayTable parmBankPositivePayTable(BankPositivePayTable _bankPositivePayTable = bankPositivePayTable)
    {
        bankPositivePayTable = _bankPositivePayTable;

        return bankPositivePayTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        ttsBegin;

        bankPositivePayTable.selectForUpdate(true);
        bankPositivePayTable.Confirmation = confirmationNum;
        bankPositivePayTable.update();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Version version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                break;

            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        BankPositivePayConfirmation positivePayConfirmation = new BankPositivePayConfirmation();
        BankPositivePayTable bankPositivePayTable = _args.record();

        Debug::assert(bankPositivePayTable != null);

        positivePayConfirmation.parmBankPositivePayTable(bankPositivePayTable);
        if (positivePayConfirmation.prompt())
        {
            positivePayConfirmation.runOperation();

            FormDataSource callingFormDataSource = FormDataUtil::getFormDataSource(_args.record());
            callingFormDataSource.refresh();
            callingFormDataSource.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>