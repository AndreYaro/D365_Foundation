<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendAccountManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>VendAccountManager</c> class manages the saving and retrieval of data that is associated
///    with the vendor account chooser control.
/// </summary>
public class VendAccountManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSelectedAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Instantiates the <c>VendAccountChooser</c> class to get the last selected vendor account that was
    ///    saved in the <c>SysLastValue</c> table.
    /// </summary>
    /// <returns>
    ///    The vendor account number that is selected from the vendor account chooser control.
    /// </returns>
    public static VendAccount getSelectedAccount()
    {
        VendAccountChooser  accountChooser;
        VendAccount         selectedVendAccount;
        VendTable           vendTable;

        accountChooser = new VendAccountChooser();

        if (accountChooser.parmVendAccount())
        {
            selectedVendAccount = accountChooser.parmVendAccount();
        }
        else
        {
            // if there is no currently selected vendor, set a default
            // Uses XDS policy for vendor external users
            selectedVendAccount = DirPersonUserEx::vendAccount(DirPersonUser::current());

            if (!selectedVendAccount)
            {
                select firstonly AccountNum from vendTable;
                selectedVendAccount = vendTable.AccountNum;
            }
        }

        return selectedVendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelectedAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the selected vendor account number into the <c>SysLastValue</c> table.
    /// </summary>
    /// <param name="_vendAccount">
    /// The vendor account number to save.
    /// </param>
    public static void setSelectedAccount(VendAccount _vendAccount)
    {
        VendAccountChooser  accountChooser = new VendAccountChooser();

        if (_vendAccount)
        {
            accountChooser.parmVendAccount(_vendAccount);
            accountChooser.save();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeMyVendorSelfServiceQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Filters the query to the selected vendor account.
    /// </summary>
    /// <param name="_query">
    ///    The query object to modify.
    /// </param>
    /// <param name="_tableId">
    ///    The ID of the table to which to add the filter.
    /// </param>
    /// <returns>
    ///    A query that is filtered with the vendor account that is selected.
    /// </returns>
    public static Query makeMyVendorSelfServiceQuery(Query _query, TableId _tableId)
    {
        VendAccount vendAccount = VendAccountManager::getSelectedAccount();
        str         queryValueStr;
        if (vendAccount)
        {
            queryValueStr = vendAccount;
        }
        else
        {
            queryValueStr = SysQuery::valueEmptyString();
        }

        QueryBuildDataSource qBds;
        if (_tableId == tableNum(VendUserRequest))
        {
            qBds  = _query.dataSourceTable(tableNum(UserRequest));
        }
        else
        {
            qBds  = _query.dataSourceTable(_tableId);
        }

        if (VendAccountManager::vendorSelfServiceQueryFieldId(_tableId))
        {
            QueryBuildRange range = qBds.addRange(VendAccountManager::vendorSelfServiceQueryFieldId(_tableId));
            if (_tableId == tableNum(InventTransOrigin) || _tableId == tableNum(CatVendorCatalog))
            {
                queryValueStr = queryValue(VendTable::find(queryValueStr).Party);
            }
            else if (_tableId == tableNum(VendUserRequest))
            {
                QueryBuildRange dataAreaRange = SysQuery::findOrCreateRange(qBds, fieldNum(VendUserRequest, VendorDataAreaId));
                dataAreaRange.status(RangeStatus::Hidden);
                dataAreaRange.value(queryValue(curext()));
            }

            range.value(queryValueStr);
            range.status(RangeStatus::Hidden);
        }

        return _query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorSelfServiceQueryFieldId</Name>
				<Source><![CDATA[
    private static FieldId vendorSelfServiceQueryFieldId(TableId _tableId)
    {
        FieldId fieldId;

        switch (_tableId)
        {
            case tableNum(VendTable)                        :   fieldId = fieldNum(VendTable,AccountNum); break;
            case tableNum(InventTable)                      :   fieldId = fieldNum(InventTable,PrimaryVendorId); break;
            case tableNum(VendPackingSlipJour)              :   fieldId = fieldNum(VendPackingSlipJour,OrderAccount); break;
            case tableNum(VendPurchOrderJour)               :   fieldId = fieldNum(VendPurchOrderJour,OrderAccount); break;
            case tableNum(VendInvoiceJour)                  :   fieldId = fieldNum(VendInvoiceJour,OrderAccount); break;
            case tableNum(InventTransOrigin)                :   fieldId = fieldNum(InventTransOrigin,Party); break;
            case tableNum(PurchTable)                       :   fieldId = fieldNum(PurchTable,OrderAccount); break;
            case tableNum(PurchRFQTable)                    :   fieldId = fieldNum(PurchRFQTable,VendAccount); break;
            case tableNum(VendRequest)                      :   fieldId = fieldNum(VendRequest, AccountNum); break;
            case tableNum(VendRequestCategoryExtension)     :   fieldId = fieldNum(VendRequestCategoryExtension, AccountNum); break;
            case tableNum(VendUserRequest)                  :   fieldId = fieldNum(VendUserRequest, VendorAccountNumber); break;
            case tableNum(VendBankAccount)                  :   fieldId = fieldNum(VendBankAccount,AccountNum); break;
            case tableNum(VendPostedUnionUnpostedInvoice)   :   fieldId = fieldNum(VendPostedUnionUnpostedInvoice, InvoiceAccount); break;
            case tableNum(VendInvoiceInfoTable)             :   fieldId = fieldNum(VendInvoiceInfoTable, InvoiceAccount); break;
            case tableNum(VendInvoiceInfoLine)              :   fieldId = fieldNum(VendInvoiceInfoLine, InvoiceAccount); break;
            case tableNum(CatVendorCatalog)                 :   fieldId = fieldNum(CatVendorCatalog,VendorParty); break;
            case tableNum(PurchTableAllVersions)            :   fieldId = fieldNum(PurchTableAllVersions,OrderAccount); break;
        }

        return fieldId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>