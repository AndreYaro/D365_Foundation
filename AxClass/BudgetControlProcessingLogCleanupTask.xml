<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlProcessingLogCleanupTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data maintenance task to cleanup <c>BudgetControlProcessingLog</c> records.
/// </summary>
internal final class BudgetControlProcessingLogCleanupTask implements IDataMaintenanceTask
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public DataMaintenanceTaskResult run()
    {
        utcdatetime retentionBoundary = DateTimeUtil::addDays(DateTimeUtil::utcNow(), BudgetControlParameters::find().ProcessingLogRetentionDays * -1);

        BudgetControlProcessingHeader budgetControlProcessingHeader;
        delete_from budgetControlProcessingHeader
            where budgetControlProcessingHeader.CreatedDateTime <= retentionBoundary;

        BudgetControlProcessingLog budgetControlProcessingLog;
        delete_from budgetControlProcessingLog
            where budgetControlProcessingLog.MessageCreatedTime <= retentionBoundary;

        BudgetControlProcessingDetail budgetControlProcessingDetail;
        delete_from budgetControlProcessingDetail
            where budgetControlProcessingDetail.CreatedDateTime <= retentionBoundary;

        int64 totalRemoved = budgetControlProcessingLog.RowCount() + budgetControlProcessingDetail.RowCount();

        if (BudgetControlParameters::doesStoredProcedureLoggingRequireDisabling())
        {
            BudgetControlParameters::disableStoredProcedureLogging();
        }

        DataMaintenanceTaskResult result = DataMaintenanceTaskResult::construct();
        result.parmCount(totalRemoved);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public DataMaintenanceCaption caption()
    {
        return literalStr("@Budget:BudgetControlProcessingLogCleanupTaskCaption");
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>