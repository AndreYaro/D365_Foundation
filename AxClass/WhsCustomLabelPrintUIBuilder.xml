<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsCustomLabelPrintUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class WhsCustomLabelPrintUIBuilder extends SysOperationAutomaticUIBuilder
{
    private Map parametersFieldMap = new Map(Types::String, Types::Class);
    private Set mandatoryParametersSet = new Set(Types::String);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    public void build()
    {
        super();

        if (WhsCustomLabelPrintCommandGenerator::IsParameterSupportEnabled)
        {
            this.buildLabelLayoutDataSourceParameters();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLabelLayoutDataSourceParameters</Name>
				<Source><![CDATA[
    private void buildLabelLayoutDataSourceParameters()
    {
        WhsCustomLabelPrintContract contract = this.dataContractObject() as WhsCustomLabelPrintContract;

        Dialog dlg = this.dialog() as Dialog;
        DialogTabPage customParametersTabPage;

        WhsLabelLayoutDataSourceParameters parameters;
        while select parameters
            where parameters.LabelLayoutDataSourceId == contract.parmLabelLayoutDataSourceId()
        {
            if (!customParametersTabPage)
            {
                customParametersTabPage = dlg.addTabPage("@WAX:LabelLayoutDataSourceParameters");
            }

            DialogField parameterDialogField = dlg.addFieldValue(extendedTypeStr(WhsLabelLayoutDataSourceParameterStringValue), parameters.defaultValue(), parameters.DisplayText);
            parameterDialogField.mandatory_RU(parameters.Mandatory);

            parametersFieldMap.insert(parameters.Name, parameterDialogField);

            if (parameters.Mandatory)
            {
                mandatoryParametersSet.add(parameters.Name);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public void getFromDialog()
    {
        super();

        if (WhsCustomLabelPrintCommandGenerator::IsParameterSupportEnabled)
        {
            this.getLabelLayoutDataSourceParameters();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLabelLayoutDataSourceParameters</Name>
				<Source><![CDATA[
    private void getLabelLayoutDataSourceParameters()
    {
        if (!parametersFieldMap) 
        {
            return;
        }

        WhsCustomLabelPrintContract contract = this.dataContractObject() as WhsCustomLabelPrintContract;
        Map customParameters = new Map(Types::String, Types::String);

        MapEnumerator parametersFieldMapEnum = parametersFieldMap.getEnumerator();
        while (parametersFieldMapEnum.moveNext())
        {
            DialogField parameterDialogField = parametersFieldMapEnum.currentValue() as DialogField;
            if (!parameterDialogField)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            if (!parameterDialogField.value() && mandatoryParametersSet.in(parametersFieldMapEnum.currentKey()))
            {
                throw error(strFmt("@WAX:LabelLayoutDataSourceParameterIsMandatoryError", WhsLabelLayoutDataSourceParameters::find(contract.parmLabelLayoutDataSourceId(), parametersFieldMapEnum.currentKey()).DisplayText));
            }

            customParameters.add(parametersFieldMapEnum.currentKey(), parameterDialogField.value());
        }

        contract.parmCustomLabelLayoutParameters(customParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    public void postBuild()
    {
        super();

        WhsCustomLabelPrintContract contract = this.dataContractObject() as WhsCustomLabelPrintContract;

        DialogField dialogLabelLayoutDataSourceId = this.bindInfo().getDialogField(contract, methodStr(WhsCustomLabelPrintContract, parmLabelLayoutDataSourceId));
        dialogLabelLayoutDataSourceId.allowEdit(false);

        DialogField dialogLabelLayout = this.bindInfo().getDialogField(contract, methodStr(WhsCustomLabelPrintContract, parmCustomLabelLayout));
        dialogLabelLayout.registerOverrideMethod(methodStr(FormStringControl, lookup), methodStr(WhsCustomLabelPrintUIBuilder, lookupLabelLayout), this);
        
        DialogField dialogPrinterName = this.bindInfo().getDialogField(contract, methodStr(WhsCustomLabelPrintContract, parmPrinterName));
        dialogPrinterName.registerOverrideMethod(methodStr(FormStringControl, lookup), methodStr(WhsCustomLabelPrintUIBuilder, lookupPrinterName), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupLabelLayout</Name>
				<Source><![CDATA[
    private void lookupLabelLayout(FormStringControl _formStringControl)
    {
        WhsCustomLabelPrintContract contract = this.dataContractObject() as WhsCustomLabelPrintContract;

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(WHSLabelLayout), _formStringControl);
        
        Query labelLayoutsForDataSourceQuery = new Query(tableStr(WHSLabelLayout));
        QueryBuildDataSource qbdsLabelLayout = labelLayoutsForDataSourceQuery.addDataSource(tableNum(WHSLabelLayout));
        
        qbdsLabelLayout.addRange(fieldNum(WHSLabelLayout, LayoutType)).value(queryValue(WHSLabelLayoutType::CustomLabel));
        qbdsLabelLayout.addRange(fieldNum(WHSLabelLayout, LabelLayoutDataSource)).value(queryValue(contract.parmLabelLayoutDataSourceId()));

        sysTableLookup.addLookupfield(fieldNum(WHSLabelLayout, LabelLayoutId));
        sysTableLookup.addLookupfield(fieldNum(WHSLabelLayout, Description));
        sysTableLookup.parmQuery(labelLayoutsForDataSourceQuery);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPrinterName</Name>
				<Source><![CDATA[
    private void lookupPrinterName(FormStringControl _formStringControl)
    {
        WhsLabelPrintersView::lookupLabelPrinters(_formStringControl);       
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>