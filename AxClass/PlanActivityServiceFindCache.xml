<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlanActivityServiceFindCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PlanActivityServiceFindCache</c> class provides caching of the plan activity
/// service records for a given search based on output product and product dimensions.
/// </summary>
public class PlanActivityServiceFindCache
{
    SysGlobalObjectCache    sysGlobalObjectCache;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clearScope</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Clears plan activity services stored in the given scope from the cache.
    /// </summary>
    /// <param name="_scopeName">
    ///    The scope name.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void clearScope(globalObjectCacheScope _scopeName)
    {
        sysGlobalObjectCache.clear(_scopeName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if a rule exists in the cache.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    The kanban job for which we are doing the check.
    /// </param>
    /// <param name="_searchId">
    ///    The identificator to search for, optional.
    /// </param>
    /// <returns>
    ///    true if the rule exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean exist(KanbanJob _kanbanJob, container _searchId = connull())
    {
        container searchId = (_searchId != connull()) ? _searchId : PlanActivityServiceFindCache::searchId(_kanbanJob);
        str scopeId = PlanActivityServiceFindCache::scopeName(_kanbanJob);

        return sysGlobalObjectCache.find(scopeId, [searchId]) != connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPlanActivityService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>PlanActivityService</c> record from the cache.
    /// </summary>
    /// <param name="_kanbanJob">
    /// The kanban job used for identifying the scope of the cache.
    /// </param>
    /// <param name="_searchId">
    /// The search identificator.
    /// </param>
    /// <returns>
    /// A <c>PlanActivityService</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PlanActivityService getPlanActivityService(KanbanJob _kanbanJob, container _searchId)
    {
        container result;
        PlanActivityService planActivityService;

        result = sysGlobalObjectCache.find(PlanActivityServiceFindCache::scopeName(_kanbanJob), [_searchId]);

        if (result != connull())
        {
            [planActivityService] = result;
        }

        return planActivityService;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPlanActivityServiceForJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>PlanActivityService</c> record for a specific kanban job.
    /// </summary>
    /// <param name="_kanbanJob">
    /// The kanban job that is used as a search criteria.
    /// </param>
    /// <returns>
    /// A <c>PlanActivityService</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PlanActivityService getPlanActivityServiceForJob(KanbanJob _kanbanJob)
    {
        return this.getPlanActivityService(_kanbanJob,
                                            PlanActivityServiceFindCache::searchId(_kanbanJob));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPlanActivityService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the cache.
    /// </summary>
    /// <param name="_kanbanJob">
    /// The kanban job used to determine the scope of the cache.
    /// </param>
    /// <param name="_searchId">
    /// The cache identificator under which the record will be stored.
    /// </param>
    /// <param name="_planActivityService">
    /// The <c>PlanActivityService</c> record to be inserted into the cache.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void insertPlanActivityService(KanbanJob _kanbanJob,
                                                container _searchId,
                                                PlanActivityService _planActivityService)
    {
        sysGlobalObjectCache.insert(PlanActivityServiceFindCache::scopeName(_kanbanJob),
                                    [_searchId],
                                    [_planActivityService]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPlanActivityServiceForJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the cache.
    /// </summary>
    /// <param name="_kanbanJob">
    /// The kanban job for which we are inserting the record.
    /// </param>
    /// <param name="_planActivityService">
    /// The <c>PlanActivityService</c> record to be inserted into the cache.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void insertPlanActivityServiceForJob(KanbanJob _kanbanJob,
                                                PlanActivityService _planActivityService)
    {
        this.insertPlanActivityService(_kanbanJob,
                                        PlanActivityServiceFindCache::searchId(_kanbanJob),
                                        _planActivityService);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void new()
    {
        sysGlobalObjectCache = new SysGlobalObjectCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>removePlanActivityService</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Removes a value from the cache.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    The kanban job.
    /// </param>
    /// <param name="_searchId">
    ///    The search identifier.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void removePlanActivityService(
        KanbanJob           _kanbanJob,
        container           _searchId)
    {
        sysGlobalObjectCache.remove(PlanActivityServiceFindCache::scopeName(_kanbanJob), [_searchId]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the cache.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void clearCache()
    {
        KanbanJob kanbanJob;
        PlanActivityServiceFindCache cache = PlanActivityServiceFindCache::construct();

        cache.clearScope(PlanActivityServiceFindCache::scopeName(kanbanJob));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static PlanActivityServiceFindCache construct()
    {
        return new PlanActivityServiceFindCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>PlanActivityServiceFindCache</c> class.
    /// </summary>
    /// <returns>
    /// An instance of <c>PlanActivityServiceFindCache</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PlanActivityServiceFindCache newStandard()
    {
        return PlanActivityServiceFindCache::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>scopeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the cache scope name.
    /// </summary>
    /// <param name="_kanbanJob">
    /// The kanban job for which to generate scope name.
    /// </param>
    /// <returns>
    /// The scope name.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected static globalObjectCacheScope scopeName(KanbanJob _kanbanJob)
    {
        return strfmt('%1#%2', curuserid(), classstr(PlanActivityServiceFindCache));
    }

]]></Source>
			</Method>
			<Method>
				<Name>searchId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a search identifier to use with the cache object.
    /// </summary>
    /// <param name="_kanbanJob">
    /// The kanban job that is used as a source for generation of the search identifier.
    /// </param>
    /// <returns>
    /// A valid identifier.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static container searchId(KanbanJob _kanbanJob)
    {
        InventTable inventTable = _kanbanJob.inventTable();
        InventDim   inventDim   = _kanbanJob.inventDim();

        return [_kanbanJob.LeanProductionFlowActivity,
                    inventTable.DataAreaId,
                    inventTable.ItemId,
                    inventDim.DataAreaId,
                    inventDim.mapKey(InventDim::dimProductDimensionEnabledFieldList())];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>