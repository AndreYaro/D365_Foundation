<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepPreTaxDedProcTaskHandler_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <C>AssetDepPreTaxDedProcTaskHandler_JP</C> class
/// </summary>
class AssetDepPreTaxDedProcTaskHandler_JP
{
    AssetDepPreTaxDedProcessTask_JP     assetDepPreTaxDedProcessTask;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initForConstruct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes <C>AssetDepPreTaxDedProcessTask_JP</C>.
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcessTask">
    /// The <C>AssetDepPreTaxDedProcessTask_JP</C>
    /// </param>
    protected void initForConstruct(AssetDepPreTaxDedProcessTask_JP _assetDepPreTaxDedProcessTask)
    {
        assetDepPreTaxDedProcessTask = _assetDepPreTaxDedProcessTask;
    }
]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }
]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the task status
    /// </summary>
    /// <returns>
    /// Returns the status to success
    /// </returns>
    public AssetDepPreTaxDedProcessTaskStatus_JP run()
    {
        this.runForAssetBook(assetDepPreTaxDedProcessTask.AssetId, assetDepPreTaxDedProcessTask.BookId);

        return AssetDepPreTaxDedProcessTaskStatus_JP::Success;
    }
]]></Source>
			</Method>
			<Method>
				<Name>runForAssetBook</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs for <C>AssetBook</C>
    /// </summary>
    /// <param name="_assetId">
    /// The asset id
    /// </param>
    /// <param name="_bookId">
    /// The book id
    /// </param>
    protected void runForAssetBook(AssetId _assetId, AssetBookId _bookId)
    {
        AssetDepPreTaxDedProcessor_JP           assetDepPreTaxDedProcessor;

        assetDepPreTaxDedProcessor = AssetDepPreTaxDedProcessor_JP::construct(assetDepPreTaxDedProcessTask.assetDepPreTaxDedProcess_JP());

        assetDepPreTaxDedProcessor.runForAssetBook(_assetId, _bookId);
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of <C>AssetDepPreTaxDedProcTaskHandler_JP</C>
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcessTask">
    /// The <C>AssetDepPreTaxDedProcessTask_JP</C>
    /// </param>
    /// <returns>
    /// Returns the constructed instance
    /// </returns>
    public static AssetDepPreTaxDedProcTaskHandler_JP construct(AssetDepPreTaxDedProcessTask_JP _assetDepPreTaxDedProcessTask)
    {
        AssetDepPreTaxDedProcTaskHandler_JP     ret;

        if (_assetDepPreTaxDedProcessTask)
        {
            ret = new AssetDepPreTaxDedProcTaskHandler_JP();
            ret.initForConstruct(_assetDepPreTaxDedProcessTask);
        }

        return ret;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>