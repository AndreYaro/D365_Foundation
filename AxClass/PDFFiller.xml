<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>pdfFiller</Name>
	<SourceCode>
		<Declaration><![CDATA[
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
class pdfFiller
{
    Map        fields;
    Filename   pdfFileName;

    #Characters

    #define.FDF('FDF')
    #define.xfdf('xfdf')
    #define.ext_xfdf('.xfdf')
    #define.AcroExchXFDFDoc('AcroExch.XFDFDoc\\shell\\open\\command')
    #define.xmlns('xmlns')
    #define.http_adobe('http://ns.adobe.com/xfdf/')
    #define.xml_space('xml:space')
    #define.preserve('preserve')
    #define.href('href')
    #define.ids('ids')
    #define.original('original')
    #define.modified('modified')
    #define.originalString('1AC402B84990E68F21BD3B61DCB8860A')
    #define.modifiedString('05F1016A86DF164A94D058B6E0747F0D')
    #define.fields('fields')
    #define.field('field')
    #define.name('name')
    #define.value('value')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDateField</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void addDateField(str _field, date _value)
    {
        fields.insert(_field, date2str(_value,123,2,2,2,2,4,DateFlags::None));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addIntField</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void addIntField(str _field, int _value)
    {
        fields.insert(_field, int2str(_value));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRealField</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void addRealField(str _field, real _value)
    {
        fields.insert(_field, strltrim(num2str(_value,12,2,1,0)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addStrField</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void addStrField(str _field, str _value)
    {
        fields.insert(_field, _value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFDFXml</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected XmlDocument getFDFXml()
    {
        MapEnumerator fieldEnum;
        XmlDocument   xmlDoc;
        XmlElement    xfdF, xmlEl, xmlFields, xmlField;
        ;

        xmlDoc = XmlDocument::newBlank();

        xfdF = xmlDoc.createElement(#xfdf);
        xmlDoc.appendChild(xfdF);

        xfdF.setAttribute(#xmlns, #http_adobe);
        xfdF.setAttribute(#xml_space, #preserve);

        xmlEl = xmlDoc.createElement(#f);
        xmlEl.setAttribute(#href, pdfFileName);
        xfdF.appendChild(xmlEl);

        xmlEl = xmlDoc.createElement(#ids);
        xmlEl.setAttribute(#original, #originalString);
        xmlEl.setAttribute(#modified, #modifiedString);
        xfdF.appendChild(xmlEl);

        xmlFields = xmlDoc.createElement(#fields);
        xfdF.appendChild(xmlFields);

        fieldEnum = fields.getEnumerator();

        while (fieldEnum.moveNext())
        {
            xmlField = xmlDoc.createElement(#field);
            xmlField.setAttribute(#name, fieldEnum.currentKey());
            xmlEl = xmlDoc.createElement(#value);
            xmlEl.appendChild(xmlDoc.createTextNode(fieldEnum.currentValue()));
            xmlField.appendChild(xmlEl);
            xmlFields.appendChild(xmlField);
        }
        return xmlDoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new()
    {
        ;
        fields = new Map(Types::String,Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdfFileName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Filename parmPdfFileName(Filename _pdfFileName = pdfFileName)
    {
        ;
        pdfFileName = _pdfFileName;
        return pdfFileName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showFDF</Name>
				<Source><![CDATA[
    [SysObsolete("Use method 'saveFDF' instead.", false, 30\06\2020)]
    public FilenameSave showFDF()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveFDF</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves *.xfdf file to user.
    /// </summary>
    public void saveFDF()
    {
        File::SendStringAsFileToUser(this.getFDFXml().outerXml(), this.xfdfFileName() + #ext_xfdf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PDFFiller construct()
    {
        return new PDFFiller();
    }

]]></Source>
			</Method>
			<Method>
				<Name>xfdfFileName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets name of *.xfdf file.
    /// </summary>
    /// <returns>File name without extension.</returns>
    public str xfdfFileName()
    {
        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>