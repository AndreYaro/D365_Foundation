<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPaySheetEngine_Interim</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RPaySheetEngine_Interim extends RPaySheetEngine_Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canSheetChange</Name>
				<Source><![CDATA[
        protected boolean canSheetChange(boolean needMessage = true)
    {
        boolean ret = super(needMessage);

        if (ret)
        {
            if (endMth(ctrlPayPeriod.dateValue()) > RPayParameters::payPeriod())
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPayFromDate</Name>
				<Source><![CDATA[
        protected TransDate defaultPayFromDate()
    {
        return paySheetTable.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPayToDate</Name>
				<Source><![CDATA[
        protected TransDate defaultPayToDate()
    {
        return paySheetTable.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSheet</Name>
				<Source><![CDATA[
        public void deleteSheet()
    {
        super();

        if (paySheetTable.PaySheetSost == RPaySheetSost::ForPaid &&
            (select RecId from RPaySheetTable
                where RPaySheetTable.PaySheetType  == this.paySheetType()     &&
                      RPaySheetTable.PayPeriod     == paySheetTable.PayPeriod &&
                      RPaySheetTable.TransDate     == paySheetTable.TransDate &&
                      (RPaySheetTable.PaySheetSost == RPaySheetSost::ForPaid  ||
                       RPaySheetTable.PaySheetSost == RPaySheetSost::Paid)    &&
                      RPaySheetTable.RecId         != paySheetTable.RecId).RecId == 0)
        {
            this.updatePeriodicity(NoYes::No);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        protected TempStr description()
    {
        return "@RUP2542";
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPaySheetTable</Name>
				<Source><![CDATA[
        public void initPaySheetTable()
    {
        super();
        paySheetTable.TransDate = RPayParameters::calcDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>passToCash</Name>
				<Source><![CDATA[
        public boolean passToCash()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            this.updatePeriodicity(NoYes::Yes);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paySheetType</Name>
				<Source><![CDATA[
        protected RPaySheetType paySheetType()
    {
        return RPaySheetType::Interim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit</Name>
				<Source><![CDATA[
        protected void setAllowEdit(DialogField _dialogField)
    {
        _dialogField.allowEdit(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFormDesign</Name>
				<Source><![CDATA[
        public void updateFormDesign()
    {
        super();

        ctrlTransDate.allowEdit(false);

        if (RPayCalcSalaryPeriodicity::isLastInPayPeriod(RPayParameters::calcDate(), RPayParameters::payPeriod()))
        {
           sheetTableDs.allowCreate(false);
           ctrlCreate.enabled(false);
        }
        else
        {
           sheetTableDs.allowCreate(true);
           ctrlCreate.enabled(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>