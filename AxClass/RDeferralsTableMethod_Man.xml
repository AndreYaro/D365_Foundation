<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rDeferralsTableMethod_Man</Name>
	<SourceCode>
		<Declaration><![CDATA[
[RDeferralsTableMethodFactory(RDeferralsMethod::Manual)]
public class rDeferralsTableMethod_Man extends RDeferralsTableMethodIterator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    [Hookable]
    protected RDeferralsSum calc()
    {
        RDeferralsLifeTime currentPeriod = currentInterval + deferralsInterval.interval(startDeferralsDate, startPeriodDate);
        if (deferralsProfile.ManualCalcType == RDeferralsManualCalcType::Percent)
        {
            return this.calcPercent(currentPeriod);
        }
        else
        {
            return this.calcAmount(currentPeriod);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcAmount</Name>
				<Source><![CDATA[
        protected RDeferralsSum calcAmount(RDeferralsLifeTime _currentInterval)
    {
        return RDeferralsBookAmount::find(deferralsId, deferralsBookId, _currentInterval).Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPercent</Name>
				<Source><![CDATA[
        protected RDeferralsSum calcPercent(RDeferralsLifeTime _currentInterval)
    {
        RDeferralsProfileTrans      rDeferralsProfileTrans;
        RDeferralsSum               rDeferralsAmount;

        rDeferralsProfileTrans  = RDeferralsProfileTrans::find(deferralsProfile.DeferralsProfile, _currentInterval);
        rDeferralsAmount        = deferralsAmount * (rDeferralsProfileTrans.Percentage / 100);

        return rDeferralsAmount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>