<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchVendorPortalLineAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class contains actions that the user can perform on a purchase order response line.
/// </summary>
public class PurchVendorPortalLineAction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (_args.parmEnumType() != enumNum(PurchaseOrderResponseLineAction))
        {
            throw error(Error::missingParameter(null));
        }

        if ((_args.record() == null) ||
            (_args.record().TableId != tableNum(PurchaseOrderResponseLine)))
        {
            throw error(strFmt("@SYS113735", classStr(PurchVendorPortalLineAction), tableStr(PurchaseOrderResponseLine)));
        }

        PurchaseOrderResponseLine purchaseOrderResponseLine = _args.record();

        switch (_args.parmEnum())
        {
            case PurchaseOrderResponseLineAction::Revert:
                boolean revertAllowed = true;
                if ((purchaseOrderResponseLine.LineState != PurchaseOrderResponseLineState::Accepted) &&
                    (purchaseOrderResponseLine.LineState != PurchaseOrderResponseLineState::Rejected))
                {
                    revertAllowed = Box::confirm("@SCM:ConfirmRevert");
                }
                if (revertAllowed)
                {
                    purchaseOrderResponseLine.revert();
                }
                break;
            case PurchaseOrderResponseLineAction::Reject:
                boolean rejectAllowed = true;
                if (purchaseOrderResponseLine.LineState != PurchaseOrderResponseLineState::Accepted)
                {
                    rejectAllowed = Box::confirm("@SCM:ConfirmReject");
                }
                if (rejectAllowed)
                {
                    purchaseOrderResponseLine.reject();
                }
                break;
            case PurchaseOrderResponseLineAction::Substitute:
                boolean revertForSubstitutionAllowed = true;

                if (purchaseOrderResponseLine.LineState == PurchaseOrderResponseLineState::AcceptedWithChanges ||
                    purchaseOrderResponseLine.LineState == PurchaseOrderResponseLineState::SplitOriginalLine ||
                    purchaseOrderResponseLine.LineState == PurchaseOrderResponseLineState::Rejected)
                {
                    revertForSubstitutionAllowed = Box::confirm("@SCM:ConfirmSubstitute");
                    if (revertForSubstitutionAllowed)
                    {
                        purchaseOrderResponseLine.revert();
                    }
                }
                if (revertForSubstitutionAllowed)
                {
                    purchaseOrderResponseLine.substitute();
                }
                break;
            case PurchaseOrderResponseLineAction::Split:
                Args args = new Args();
                args.caller(_args.caller());
                args.record(purchaseOrderResponseLine);
                FormRun formRun = new MenuFunction(menuItemDisplayStr(PurchaseOrderResponseDeliverySchedule), MenuItemType::Display).create(args);
                if (formRun)
                {
                    formRun.run();
                    formRun.wait();
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>