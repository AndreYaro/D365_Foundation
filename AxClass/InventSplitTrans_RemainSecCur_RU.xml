<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSplitTrans_RemainSecCur_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
final public class InventSplitTrans_RemainSecCur_RU extends InventSplitTrans_Remain
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkOpen_RU</Name>
				<Source><![CDATA[
    protected boolean checkOpen_RU(InventTrans _splitTrans, InventQty _splitQty)
    {
        boolean ok = true;

        if (! _splitTrans.ValueOpenSecCur_RU)
        {
            ok = checkFailed("@SYS10534");
        }

        if (abs(_splitQty) > abs(_splitTrans.financialOpenQtySecCur_RU()))
        {
            ok = checkFailed("@SYS694");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSplitFinancialOpenQty</Name>
				<Source><![CDATA[
    protected void checkSplitFinancialOpenQty(InventTrans _transFrom, InventQty _splitQty)
    {
        if (_transFrom.RecId &&
            _transFrom.ValueOpenSecCur_RU               != InventTransOpen::Quotation &&
            abs(_transFrom.financialOpenQtySecCur_RU()) <  abs(_splitQty))
        {
            throw error(strfmt("@SYS19378",funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isQtyCompletelySettled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if inventory transaction quantity is completely settled.
    /// </summary>
    /// <param name="_inventTrans">
    /// The InventTrans record to be investigated.
    /// </param>
    /// <returns>
    /// true, if the quantity on the inventory transaction is completely settled; otherwise, false.
    /// </returns>
    protected boolean isQtyCompletelySettled(InventTrans _inventTrans)
    {
        return (_inventTrans.isUpdatedFinancial() && _inventTrans.financialOpenQtySecCur_RU() == 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCompletelyQtySettled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adjusts posted amount or adjusted amount if the quantity is completely settled,
    /// and the settled amount is not equal to the sum of the posted amount and adjusted amount.
    /// </summary>
    /// <param name="_transFrom">
    /// The InventTrans record that should be split.
    /// </param>
    /// <param name="_transTo">
    /// The InventTrans record which contains the split amounts and quantities.
    /// </param>
    protected void updateCompletelyQtySettled(InventTrans _transFrom,InventTrans  _transTo)
    {
        if (this.isQtyCompletelySettled(_transFrom))
        {
            CostAmount costAmountRounding = _transFrom.financialOpenValueSecCur_RU();

            if (costAmountRounding != 0)
            {
                if ((_transFrom.CostAmountSecCurAdjustment_RU - this.notAllocatableAdjustedAmountSec_RU()) != 0 ||
                    _transTo.CostAmountSecCurAdjustment_RU != 0)
                {
                    _transFrom.CostAmountSecCurAdjustment_RU -= costAmountRounding;
                    _transTo.CostAmountSecCurAdjustment_RU   += costAmountRounding;
                }
                else
                {
                    _transFrom.CostAmountSecCurPosted_RU     -= costAmountRounding;
                    _transTo.CostAmountSecCurPosted_RU       += costAmountRounding;
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
