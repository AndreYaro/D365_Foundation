<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandlerAccessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class is responsible for returning correct instances of the <c>WHSLicensePlateOnMultipleLocationsCheckFinalOnHandUpdateHandler</c> class.
/// </summary>
final internal class WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandlerAccessor
{
    private static Map instanceMap;
    private static WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandlerAccessor singleton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        instanceMap = new Map(Types::String, Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accessor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandlerAccessor</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    static internal WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandlerAccessor accessor()
    {
        if (!singleton)
        {
            singleton = new WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandlerAccessor();
        }

        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instanceForCurrentCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of the <c>WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandler</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    static internal WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandler instanceForCurrentCompany()
    {
        var accessor = WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandlerAccessor::accessor();

        return accessor.instanceCurrentCompany();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instanceCurrentCompany</Name>
				<Source><![CDATA[
    private WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandler instanceCurrentCompany()
    {
        DataAreaId dataAreaId = curext();

        if (!instanceMap.exists(dataAreaId))
        {
            instanceMap.insert(dataAreaId, WHSLicensePlateOnMultipleLocationFinalOnhandUpdateCheckHandler::construct());
        }

        return instanceMap.lookup(dataAreaId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>