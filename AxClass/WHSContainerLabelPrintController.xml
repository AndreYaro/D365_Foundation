<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSContainerLabelPrintController</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class WHSContainerLabelPrintController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super(classStr(WHSContainerLabelPrintService),
            methodStr(WHSContainerLabelPrintService, processContainerLabelPrinting),
            SysOperationExecutionMode::Asynchronous);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCaption</Name>
				<Source><![CDATA[
    public ClassDescription defaultCaption()
    {
        return "@WAX:Enum_WHSWorkActivity_PrintContainerLabel";
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDialogCaption</Name>
				<Source><![CDATA[
    public LabelType parmDialogCaption(LabelType _dialogCaption = dialogCaption)
    {
        return this.defaultCaption();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSContainerLabelPrintController construct(
        Args _args,
        SysOperationExecutionMode _executionMode)
    {
        WHSContainerLabelPrintController controller = new WHSContainerLabelPrintController();
        controller.parmExecutionMode(_executionMode);

        WHSContainerTable markedContainer = _args.record();
        InventLocationId warehouse        = WHSContainerLabelPrintController::getInventLocationId(markedContainer);
        InventDim containerInventDim      = InventDim::find(markedContainer.InventDimId);
        WMSLocationId wMSLocationId       = containerInventDim.wMSLocationId;
        
        WHSContainerLabelPrintContract wHSContainerLabelPrintContract = controller.getDataContractObject();

        wHSContainerLabelPrintContract.inventLocationId(warehouse);
        wHSContainerLabelPrintContract.wMSLocationId(wMSLocationId);
        wHSContainerLabelPrintContract.containerId(markedContainer.ContainerId);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSContainerLabelPrintController controller = WHSContainerLabelPrintController::construct(
            _args,
            SysOperationExecutionMode::Asynchronous);
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventLocationId</Name>
				<Source><![CDATA[
    private static InventLocationId getInventLocationId(WHSContainerTable _wHSContainerTable)
    {    
        return WHSShipmentTable::find(_wHSContainerTable.ShipmentId).InventLocationId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>