<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetAssignBarcode</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetAssignBarcode extends RunBaseBatch implements BatchRetryable
{
    QueryRun queryRun;

    #DEFINE.CurrentVersion(1)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();

        queryRun = new QueryRun(querystr(RAssetTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, queryRun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        RAssetTable  rAssetTable;
        Counter      progressTotal;
        Counter      progressCounter;
        ;

        ttsbegin;

        progressTotal = SysQuery::countTotal(queryRun);
        this.progressInit("@GLS116423", progressTotal, #AviFindFile);

        queryRun.query().dataSourceTable(tablenum(RAssetTable)).update(true);

        while (queryRun.next())
        {
            rAssetTable = queryRun.get(tablenum(RAssetTable));

            progressCounter++;
            progress.setCount(progressCounter);
            progress.setText(strfmt("@GLS116356", rAssetTable.AccountNum));

            rAssetTable.Barcode = rAssetTable.AccountNum;
            rAssetTable.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer          version        = conpeek(_packedClass,1);
        container        packedQuery;

        switch (version)
        {
            case #CurrentVersion:
                [version,packedQuery] = _packedClass;
                if (packedQuery)
                    queryRun = new QueryRun(packedQuery);
                break;

            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@GLS116423";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RAssetAssignBarcode       rAssetAssignBarcode;
        ;

        rAssetAssignBarcode = new RAssetAssignBarcode();
        if (rAssetAssignBarcode.prompt())
        {
            rAssetAssignBarcode.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>