<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_KanbanJobPickingListReversal</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventMov_KanbanJobPickingListReversal</c> class is responsible for generating inventory movements when a kanban picking list job is reversed
/// </summary>
[InventMovementFactoryAttribute(tableStr(KanbanJobPickingListReversal))]
class InventMov_KanbanJobPickingListReversal extends InventMov_KanbanJobPickingList
{
    KanbanJobPickingListReversal kanbanJobPickingListReversal;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createOriginOwnerRelationship</Name>
				<Source><![CDATA[
    public void createOriginOwnerRelationship()
    {
        InventTransOriginId originId = this.inventTransOriginId();

        if (originId && kanbanJobPickingListReversal.RecId)
        {
            InventTransOriginKanbanJobPickReversal::writeOriginOwnerRelationship(kanbanJobPickingListReversal.RecId, originId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>DimensionDefault</c> value.
    /// </summary>
    /// <returns>
    /// A <c>DimensionDefault</c> value.
    /// </returns>
    /// <remarks>
    /// This method overrides the base method. If the <c>kanbanJobPickingList</c> cache does not exist we
    /// should pick <c>DimensionDefault</c> from <c>InventTransPosting</c> table.
    /// </remarks>
    public DimensionDefault defaultDimension()
    {
        if (kanbanJobPickingList.RecId)
        {
            return super();
        }
        else
        {
            return InventTrans::findByInventTransOrigin(this.inventTransOriginId()).inventTransPostingPhysical().DefaultDimension;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOriginOwnerRelationship</Name>
				<Source><![CDATA[
    public void deleteOriginOwnerRelationship()
    {
        if (kanbanJobPickingListReversal)
        {
            InventTransOriginKanbanJobPickReversal::deleteOwnerRelationship(kanbanJobPickingListReversal.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an <c>InventDimId</c> value.
    /// </summary>
    /// <returns>
    /// An <c>InventDimId</c> value.
    /// </returns>
    /// <remarks>
    /// This method overrides the base method. Use the <c>InventDimId</c> field from the
    /// <c>KanbanJoPickingListReversal</c> table.
    /// </remarks>
    public InventDimId inventDimId()
    {
        return kanbanJobPickingListReversal.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the ID of the inventory transaction originator that corresponds to the movement.
    /// </summary>
    /// <param name="_inventTransOriginId">
    ///    The new value of the ID of the inventory transaction originator.
    /// </param>
    /// <returns>
    ///    The ID of the inventory transaction originator that corresponds to the movement.
    /// </returns>
    /// <remarks>
    ///    This method overrides a base class method.
    /// </remarks>
    public InventTransOriginId inventTransOriginId(InventTransOriginId _inventTransOriginId = inventTransOriginId)
    {
        if (_inventTransOriginId != inventTransOriginId)
        {
            inventTransOriginId = _inventTransOriginId;
        }
        else
        {
            if (!inventTransOriginId)
            {
                inventTransOriginId = InventTransOriginKanbanJobPickReversal::findInventTransOriginId(kanbanJobPickingListReversal.RecId);
            }
        }

        return inventTransOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    public ItemId itemId()
    {
        if (kanbanJobPickingList.RecId)
        {
            return super();
        }

        return InventTransOrigin::find(this.inventTransOriginId()).ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(KanbanJobPickingListReversal _kanbanJobPickingListReversal)
    {
        kanbanJobPickingListReversal = _kanbanJobPickingListReversal;

        kanbanJobPickingList = kanbanJobPickingListReversal.KanbanJobPickingList();
        kanbanJobPickingList.selectForUpdate(true);

        super(kanbanJobPickingList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_Orig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an inventory movement from the original <c>KanbanJobPickingListReversal</c> table buffer.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>InventMovement</c> class if the specified record is in the database;
    ///    otherwise, null.
    /// </returns>
    /// <remarks>
    ///    This method overrides a base class method.
    /// </remarks>
    public InventMovement newMovement_Orig()
    {
        return kanbanJobPickingListReversal.RecId
             ? new InventMov_KanbanJobPickingListReversal(kanbanJobPickingListReversal.orig())
             : null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnInventTransOrigin</Name>
				<Source><![CDATA[
    public InventTransOriginId returnInventTransOrigin()
    {
        return InventTransOriginKanbanJobPickReversal::findInventTransOriginId(kanbanJobPickingListReversal.IssueReversal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the issue transaction ID from the <c>KanbanJobPickingListReversal</c> table.
    /// </summary>
    /// <returns>
    ///    The issue inventory blocking transaction ID.
    /// </returns>
    /// <remarks>
    ///    This method overrides a base class method.
    /// </remarks>
    public InventTransId transId()
    {
        return kanbanJobPickingListReversal.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the inventory transaction quantity.
    /// </summary>
    /// <returns>
    ///    The inventory transaction quantity.
    /// </returns>
    /// <remarks>
    ///    This method overrides a base class method.
    /// </remarks>
    public InventQty transQty()
    {
        return KanbanJobPickingListReversal.Quantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDoBuffer</Name>
				<Source><![CDATA[
    public void updateDoBuffer()
    {
        if (kanbanJobPickingList.RecId)
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromKanbanJobPickingListReversal</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventMov_KanbanJobPickingListReversal</c> class based on the
    ///    specified record.
    /// </summary>
    /// <param name="_kanbanJobPickingListReversal">
    ///    The <c>KanbanJobPickingListReversal</c> record for which the class is instantiated.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventMov_KanbanJobPickingListReversal</c> class.
    /// </returns>
    public static InventMov_KanbanJobPickingListReversal newFromKanbanJobPickingListReversal(KanbanJobPickingListReversal _kanbanJobPickingListReversal)
    {
        return new InventMov_KanbanJobPickingListReversal(_kanbanJobPickingListReversal);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>