<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlafondCreateController_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The controller class for plafond creating.
/// </summary>
public class PlafondCreateController_IT extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (_args)
        {
            Common record = _args.record();

            if (record.tableId == tablenum(Plafond_IT))
            {
                Plafond_IT plafond = record;
                FormDataSource callerDS = FormDataUtil::getFormDataSource(plafond);

                PlafondCreateController_IT controller = PlafondCreateController_IT::construct();
                controller.parmDialogCaption("@ExtendedItallianLocalization:CreateNewPlafond");

                PlafondCreateDataContract_IT contract = controller.getDataContractObject();
                contract.parmPlafond(plafond);

                controller.startOperation();

                if (callerDS)
                {
                    callerDS.reSearch();
                }
                else
                {
                    Args args = new Args();
                    args.caller(args.caller());
                    FormRun formRun = new MenuFunction(menuitemDisplayStr(Plafond_IT), MenuItemType::Display).create(args);
                    formRun.run();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PlafondCreateController_IT construct()
    {
        IdentifierName className = classStr(PlafondCreateService_IT);
        IdentifierName methodName = methodStr(PlafondCreateService_IT, runCreation);
        SysOperationExecutionMode mode = SysOperationExecutionMode::Synchronous;
        PlafondCreateController_IT controller = new PlafondCreateController_IT(className, methodName, mode);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>