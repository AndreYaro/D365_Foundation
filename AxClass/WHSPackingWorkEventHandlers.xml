<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSPackingWorkEventHandlers</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal static class WHSPackingWorkEventHandlers
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>onPostRunHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes packing work type option from the lists of work types.
    /// </summary>
    /// <param name="_sender">A form.</param>
    /// <param name="_e">Form event arguments.</param>
    [
        FormEventHandler(formStr(WHSDocumentRouting), FormEventType::PostRun),
        FormEventHandler(formStr(WHSWorkTemplateTable), FormEventType::PostRun),
        FormEventHandler(formStr(WHSLocDirTable), FormEventType::PostRun),
        FormEventHandler(formStr(WHSLaborStandards), FormEventType::PostRun),
        FormEventHandler(formStr(WHSWorkClass), FormEventType::PostRun),
        FormEventHandler(formStr(WHSWorkPolicy), FormEventType::PostRun),
        FormEventHandler(formStr(WHSCrossDockOpportunityPolicy), FormEventType::PostRun)
    ]
    public static void onPostRunHandler(xFormRun _sender, FormEventArgs _e)
    {
        FormComboBoxControl workTransTypeControl = _sender.design().controlName(WHSWorkTransTypeControl::retrieveWorkTransTypeControlName(_sender)) as FormComboBoxControl;
        WHSPackingWorkEventHandlers::removeWorkTransTypeValue(workTransTypeControl);
            
        if (!workTransTypeControl.dataSource())
        {
            workTransTypeControl.OnValidated += eventhandler(WHSPackingWorkEventHandlers::validateUnboundWorkTransTypeFormControlEventHandler);
        }

        workTransTypeControl.OnEnter += eventhandler(WHSPackingWorkEventHandlers::enterWorkTransTypeFormControlEventHandler);
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeWorkTransTypeValue</Name>
				<Source><![CDATA[
    private static void removeWorkTransTypeValue(FormComboBoxControl _workTransTypeControl)
    {
        if (_workTransTypeControl)
        {
            _workTransTypeControl.delete(enum2Str(WHSWorkTransType::Packing));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUnboundWorkTransTypeFormControlEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prevents selecting the packing work option.
    /// </summary>
    /// <param name="_sender">A <c>WorkTransType</c> associated form control.</param>
    /// <param name="_e">Arguments for the event.</param>
    [Hookable(false)]
    public static void validateUnboundWorkTransTypeFormControlEventHandler(FormControl _sender, FormControlEventArgs _e)
    {
        FormControlCancelEventArgs args = _e as FormControlCancelEventArgs;

        if (args && !args.cancelled())
        {
            if (_sender.valueStr() == enum2str(WHSWorkTransType::Packing))
            {
                args.cancel(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterWorkTransTypeFormControlEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes packing work type option when entering the form control.
    /// </summary>
    /// <param name="_sender">A <c>WorkTransType</c> associated form control.</param>
    /// <param name="_e">Arguments for the event.</param>
    [Hookable(false)]
    public static void enterWorkTransTypeFormControlEventHandler(FormControl _sender, FormControlEventArgs _e)
    {
        WHSPackingWorkEventHandlers::removeWorkTransTypeValue(_sender as FormComboBoxControl);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>