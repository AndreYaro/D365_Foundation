<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesInvoiceHeaderV4EntityRecordIdSelectorLogisticsLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// This class will be used to override the entity change impact detection query
/// for SalesInvoiceHeaderV4Entity and LogisticsLocation table.
/// </summary>
[ExportMetadataAttribute(identifierStr(TableName), tableStr(LogisticsLocation))]
[ExportMetadataAttribute(identifierStr(EntityName), dataentityviewstr(SalesInvoiceHeaderV4Entity))]
[ExportAttribute(identifierstr(Dynamics.AX.Application.IBusinessEventsTableToEntityRecordIdSelector))]
internal final class SalesInvoiceHeaderV4EntityRecordIdSelectorLogisticsLocation implements IBusinessEventsTableToEntityRecordIdSelector
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityRecordIdsImpactedByTableChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the entity record IDs impacted by the associated table change.
    /// </summary>
    /// <param name = "_eventDefinition">The event definition.</param>
    /// <param name = "_changeType">The type of change.</param>
    /// <param name = "_changedRecordId">The record ID for the changed record.</param>
    /// <returns>List of impacted records</returns>
    [Hookable(false)]
    public List getEntityRecordIdsImpactedByTableChange(BusinessEventsDefinition _eventDefinition, BusinessEventsActions _changeType, RecId _changedRecordId)
    {
        List impactedRecIds = new List(Types::Int64);

        CustInvoiceJour custInvoiceJour;
        LogisticsPostalAddress logisticsPostalAddress;

        // Exclude free text invoices by only including records that have a sales ID.
        // Exclude return order by checking the sales type
        while select RecId from custInvoiceJour
            where custInvoiceJour.SalesId != ''
                && custInvoiceJour.SalesType != SalesType::ReturnItem
            exists join logisticsPostalAddress
                where logisticsPostalAddress.RecId == custInvoiceJour.InvoicePostalAddress
                    && logisticsPostalAddress.Location == _changedRecordId
        {
            impactedRecIds.addEnd(custInvoiceJour.RecId);
        }

        return impactedRecIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>