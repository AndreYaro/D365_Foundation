<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSContainerPrintLabel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TMSContainerPrintLabel</c> class is used for printing the container labels for Small Parcel Shipping scenarios.
/// </summary>
public static class TMSContainerPrintLabel
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prints the container shipping label.
    /// </summary>
    /// <param name = "args">Container for which shipping label has to be printed</param>
    [Hookable(False)]
    internal static void main(Args _args)
    {
        WHSContainerTable containerTable = _args.record() as WHSContainerTable;

        if (containerTable.RecId)
        {
            WHSCloseContainerProfile closeContainerProfile = WHSCloseContainerProfile::find(containerTable.CloseContainerProfileId);

            if (closeContainerProfile)
            {
                TMSContainerPrintLabel::printContainerShippingLabel(containerTable, closeContainerProfile);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>printContainerShippingLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prints a label for a given <c>WHSContainerTable</c> record.
    /// </summary>
    /// <param name = "_containerTable">A <c>WHSContainerTable</c> record.</param>
    /// <param name = "_closeContainerProfile">Close profile for the container.</param>
    public static void printContainerShippingLabel(
        WHSContainerTable           _containerTable,
        WHSCloseContainerProfile    _closeContainerProfile)
    {
        if (!_containerTable.ShipCarrierTrackingNum)
        {
            throw error("@TRX:NoShippingTrackingNumberFound");
        }
        
        if (!_closeContainerProfile.ContainerShippingLabelPrinterName)
        {
            throw error("@TRX:NoPrinterConfiguredForPrintingContainerLabel");
        }

        TMSRouteSegmentContainer routeSegmentContainer = _containerTable.findRouteSegmentContainer();

        if (routeSegmentContainer.ContainerShippingLabel)
        {
            TMSPrintContainerShippingLabel printShippingContainerLabel = TMSPrintContainerShippingLabel::createInstance(routeSegmentContainer.ContainerShippingLabelType);
            printShippingContainerLabel.printLabel(_closeContainerProfile.ContainerShippingLabelPrinterName, routeSegmentContainer.ContainerShippingLabel);
        }
        else
        {
            throw error("@TRX:NoContainerShippingLabelFound");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>