<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailUnknownAttributeToExtensionPropertyMapper</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder;

/// <summary>
/// The <c>RetailUnknownAttributeToExtensionPropertyMapper</c> class is used to populate 
/// the unknown attribution to extension property mappings.
/// </summary>
/// <remarks>
/// The unknown attribution to extension property mappings will be used for deserializing the 
/// customer order information during calling retail transaction service.
/// </remarks>
class RetailUnknownAttributeToExtensionPropertyMapper
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>onPostStartup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the unknown attribution to extension property mappings when the session starts.
    /// </summary>
    /// <param name="startUpCommand">The startup command.</param>
    [SubscribesTo(classStr(Info), delegateStr(Info, onPostStartup))]
    public static void onPostStartup(str startUpCommand)
    {
        SysGlobalObjectCache globalObjectCache = classFactory.globalObjectCache();

        str cacheScope = classstr(RetailUnknownAttributeToExtensionPropertyMapper);
        container cacheKey = [funcname(), curExt()];
        container cacheResult = globalObjectCache.find(cacheScope, cacheKey);

        if (cacheResult == conNull())
        {
            cacheResult = [true];
            globalObjectCache.insert(cacheScope, cacheKey, cacheResult);

            // The populating logic only need to execute one time per company.
            RetailUnknownAttributeToExtensionPropertyMapper::populateUnknownAttributeToExtensionPropertyMapping();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateUnknownAttributeToExtensionPropertyMapping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the unknown attribute to extension property mappings which will used to deserialize the customer order information.
    /// </summary>
    private static void populateUnknownAttributeToExtensionPropertyMapping()
    {
        const str TypeItemInfo = 'Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder.ItemInfo';
        const str TypeChargeInfo = 'Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder.ChargeInfo';
        const str TypeString = 'System.String';
        const str TypeBoolean = 'System.Boolean';
        const str TypeInt = 'System.Int32';

        const str HSNCodeAttributeName = 'HSNCODE';
        const str ITCCategoryAttributeName = 'ITCCATEGORY';
        const str IsExemptAttributeName = 'EXEMPT';
        const str ServiceAccountingCodeAttributeName = 'SERVICEACCOUNTINGCODE';
        const str ServiceCategoryAttributeName = 'SERVICECATEGORY';

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            System.Type itemInfoClassType = CLRInterop::getType(TypeItemInfo);
            System.Type chargeInfoClassType = CLRInterop::getType(TypeChargeInfo);

            System.Type stringType = CLRInterop::getType(TypeString);
            System.Type booleanType = CLRInterop::getType(TypeBoolean);
            System.Type intType = CLRInterop::getType(TypeInt);

            // Populates the mapping for ItemInfo class
            RetailUnknownAttributeToExtensionPropertyMapper::addUnknownAttributeToExtensionPropertyMapping(
                itemInfoClassType, HSNCodeAttributeName, RetailTransactionServiceOrders::HSNCodePropertyName, stringType);
            RetailUnknownAttributeToExtensionPropertyMapper::addUnknownAttributeToExtensionPropertyMapping(
                itemInfoClassType, ServiceAccountingCodeAttributeName, RetailTransactionServiceOrders::ServiceAccountingCodePropertyName, stringType);
            RetailUnknownAttributeToExtensionPropertyMapper::addUnknownAttributeToExtensionPropertyMapping(
                itemInfoClassType, IsExemptAttributeName, RetailTransactionServiceOrders::IsExemptPropertyName, booleanType);

            // Populates the mapping for ChargeInfo class
            RetailUnknownAttributeToExtensionPropertyMapper::addUnknownAttributeToExtensionPropertyMapping(
                chargeInfoClassType, HSNCodeAttributeName, RetailTransactionServiceOrders::HSNCodePropertyName, stringType);
            RetailUnknownAttributeToExtensionPropertyMapper::addUnknownAttributeToExtensionPropertyMapping(
                chargeInfoClassType, ServiceAccountingCodeAttributeName, RetailTransactionServiceOrders::ServiceAccountingCodePropertyName, stringType);
            RetailUnknownAttributeToExtensionPropertyMapper::addUnknownAttributeToExtensionPropertyMapping(
                chargeInfoClassType, IsExemptAttributeName, RetailTransactionServiceOrders::IsExemptPropertyName, booleanType);
            RetailUnknownAttributeToExtensionPropertyMapper::addUnknownAttributeToExtensionPropertyMapping(
                chargeInfoClassType, ITCCategoryAttributeName, RetailTransactionServiceOrders::ITCCategoryPropertyName, intType);
            RetailUnknownAttributeToExtensionPropertyMapper::addUnknownAttributeToExtensionPropertyMapping(
                chargeInfoClassType, ServiceCategoryAttributeName, RetailTransactionServiceOrders::ServiceCategoryPropertyName, intType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addUnknownAttributeToExtensionPropertyMapping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls UnknownAttributeToExtensionPropertyMapper.Add to add an unknown attribute to extension property maping to dictionary.
    /// </summary>
    /// <param name = "_infoClassType">The type of information class that the extionsion property belong to.</param>
    /// <param name = "_unknownAttributeName">The unknown attribute name.</param>
    /// <param name = "_extensionPropertyName">The extionsion property name.</param>
    /// <param name = "_extensionPropertyType">The type of the extension property.</param>
    private static void addUnknownAttributeToExtensionPropertyMapping(System.Type _infoClassType, str _unknownAttributeName, str _extensionPropertyName, System.Type _extensionPropertyType)
    {
        try
        {
            CLRInterop::staticInvoke(
                'Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder.UnknownAttributeToExtensionPropertyMapper',
                'Add',
                _infoClassType,
                _unknownAttributeName,
                _extensionPropertyName,
                _extensionPropertyType);
        }
        catch(Exception::CLRError)
        {
            ApplicationUnhandledExceptionLogger::processUnhandledCLRException();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>