<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TsTimesheetDetails</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TSTimesheetDetails</c> class is the data contract class that provides information about timesheet header.
/// </summary>
[DataContractAttribute]
public class TsTimesheetDetails
{
    protected TSPeriodFrom      periodFrom;
    protected TSPeriodTo        periodTo;
    protected TSHoursTotal      hours;
    protected RecId             headerRecId;
    protected List              tsLineDetailList;
    protected str               status;
    protected TSAppStatus       statusEnum;
    protected utcdatetime       modifiedDateTime;
    protected DirPartyName      workerName;
    protected HrmDescription    positionDescription;
    protected TSTimesheetNbr    timesheetNbr;
    protected RealBase          normBillable;
    protected DataAreaId        timesheetLE;
    protected Qty               totalChargeableHours;
    protected Qty               totalNonChargeableHours;

    private List                customFields;

    private boolean             isAssignedToCurrentUserForApproval;
    private DirPartyName        submitterName;
    private str                 lastWorkflowHeaderComment;
    private str                 lastApprovalActionInfo;

    private List                messages;

    // Used to set the order in which custom fields should appear on the user interface
    protected Counter customFieldOrderSequence;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyFromTimesheetTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies fields from <c>TSTimesheetTable</c> table into <c>TSTimesheetDetails</c> object.
    /// </summary>
    /// <param name="_tsTimesheetTable">
    /// <c>TSTimesheetTable</c> record to copy data from.
    /// </param>
    public void copyFromTimesheetTable(TSTimesheetTable _tsTimesheetTable)
    {
        HcmPositionWorkerAssignment assignment;
        HcmPositionDetail position;

        if (_tsTimesheetTable)
        {
            HcmWorkerRecId worker = TSResource::workerRecId(_tsTimesheetTable.Resource);

            //get worker name and position and add this info to the timesheet details object
            this.parmWorkerName(HcmWorker::worker2Name(worker));
            assignment = HcmPositionWorkerAssignment::getActivePositionWorkerAssignment(worker);
            position = HcmPositionDetail::findByPosition(assignment.Position);
            this.parmWorkerPosition(position.Description);

            //set timesheet parameters
            this.parmHeaderRecId(_tsTimesheetTable.RecId);
            this.parmPeriodFrom(_tsTimesheetTable.PeriodFrom);
            this.parmPeriodTo(_tsTimesheetTable.PeriodTo);
            this.parmStatus(enum2str(_tsTimesheetTable.ApprovalStatus));
            this.parmStatusEnum(_tsTimesheetTable.ApprovalStatus);
            this.parmHrsPerWeek(_tsTimesheetTable.totalHours());
            this.parmTimesheetModifiedTime(_tsTimesheetTable.ModifiedDateTime);
            this.parmTimesheetNbr(_tsTimesheetTable.TimesheetNbr);
            this.parmTimesheetLE(_tsTimesheetTable.company());
            this.parmTotalChargeableHours(_tsTimesheetTable.totalHoursBillable());
            this.parmTotalNonChargeableHours(_tsTimesheetTable.totalHours() - _tsTimesheetTable.totalHoursBillable());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateWorkflowFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the workflow related fields on the <c>TSTimesheetDetails</c> object based on active workflow information.
    /// </summary>
    /// <param name="_tsTimesheetTable">
    /// <c>TSTimesheetTable</c> record to retrieve workflow related information for.
    /// </param>
    private void populateWorkflowFields(TSTimesheetTable _tsTimesheetTable)
    {
        this.parmIsAssignedToCurrentUserForApproval(WorkflowWorkItem::isUserApprovalOwner(_tsTimesheetTable));

        SysWorkflowTable workflowTable;

        select firstonly Submitter, RootCorrelationId, RecId from workflowTable
            where workflowTable.ContextTableId == _tsTimesheetTable.TableId
               && workflowTable.ContextRecId   == _tsTimesheetTable.RecId;

        if (workflowTable.RecId)
        {
			this.parmSubmitterName(workflowTable.Submitter);
			
			WorkflowTrackingTable workflowTrackingTable = Workflow::findLastWorkflowTrackingRecord(workflowTable.RootCorrelationId);

			if (workflowTrackingTable.RecId)
			{
                WorkflowTrackingCommentTable workflowTrackingCommentTable = WorkflowTrackingCommentTable::findTrackingRecId(workflowTrackingTable.RecId);

                if (workflowTrackingCommentTable.RecId)
                {
                    this.parmLastWorkflowHeaderComment(workflowTrackingCommentTable.Comment);
                    this.parmLastApprovalActionInfo(SysWorkflowApprovalWorkitemService::getWorkflowHistoryMessage(workflowTrackingCommentTable));
                }
			}
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildCustomFieldListForHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a list of the custom fields that get passed via services
    /// for the timesheet header in order to display the data for the header fields.
    /// </summary>
    /// <param name="_tsTimesheetTable">
    /// <c>TSTimesheetTable</c> record to retrieve custom field information from.
    /// </param>
    /// <returns>
    /// A <c>List</c> of <c>TSTimesheetCustomField</c> objects;
    /// </returns>
    /// <remarks>
    /// Utilize chain of command via extension to add custom fields to the data contract.
    /// Add your custom fields after calling next.
    ///</remarks>
    protected List buildCustomFieldListForHeader(TSTimesheetTable _tsTimesheetTable)
    {
        List customFieldList = new List(Types::Class);
        customFieldOrderSequence = 1;

        return customFieldList;

        //
        // SAMPLE CODE FOR PASSING DATA FIELD VALUE FROM CUSTOM FIELD
        //
        // The following code populates the customized int64 field in the consumer app's timesheet header section.
        // using chain of command.  The data can be populated from metadata or computed based on X++ logic.
        // Functionality is not limited solely to TSTimesheetTable fields.  Other table data can be retrieved and used as well.
        //
        // public List buildCustomFieldListForHeader(TSTimesheetTable _tsTimesheetTable)
        // {
        //     List customFieldList = next buildCustomFieldListForHeader(_tsTimesheetTable);
        //     TSTimesheetCustomField tsTimesheetCustomField;
        //
        //     tsTimesheetCustomField = TSTimesheetCustomField::newFromMetadata(tableNum(TSTimesheetTable), fieldNum(TSTimesheetTable, <NewInt64FieldName>));
        //     tsTimesheetCustomField.parmFieldExtendedType(TSCustomFieldExtendedType::None);
        //     tsTimesheetCustomField.parmFieldSection(TSCustomFieldSection::Header);
        //     tsTimesheetCustomField.parmInt64Value(_tsTimesheetTable.<NewInt64FieldName>);
        //     tsTimesheetCustomField.parmOrderSequence(customFieldOrderSequence);
        //     customFieldOrderSequence++;
        //     customFieldList.addEnd(tsTimesheetCustomField);
        //
        //     return customFieldList;
        // }
        //
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateCustomFieldsForHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the custom fields in the data contract that gets passed via services
    /// in order to display values for the header custom fields.
    /// </summary>
    /// <param name="_tsTimesheetTable">
    /// <c>TSTimesheetTable</c> record to retrieve custom field information from.
    /// </param>
    private void populateCustomFieldsForHeader(TSTimesheetTable _tsTimesheetTable)
    {
        List customFieldList = this.buildCustomFieldListForHeader(_tsTimesheetTable);
        this.parmCustomFields(customFieldList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTimesheetDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates a <c>TSTimesheetDetails</c> object with general data from the table, workflow data, and custom field information.
    /// </summary>
    /// <param name="_tsTimesheetTable">
    /// <c>TSTimesheetTable</c> record to pull data from.
    /// </param>
    internal void populateTimesheetDetails(TSTimesheetTable _tsTimesheetTable)
    {
        this.copyFromTimesheetTable(_tsTimesheetTable);
        this.populateWorkflowFields(_tsTimesheetTable);
        this.populateCustomFieldsForHeader(_tsTimesheetTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHeaderRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>RecId</c> parameter.
    /// </summary>
    /// <param name="_headerRecId">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>RecId</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public RecId parmHeaderRecId(RecId _headerRecId = headerRecId)
    {
        headerRecId = _headerRecId;
        return headerRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHrsPerWeek</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>hours</c> parameter.
    /// </summary>
    /// <param name="_hours">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>hours</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public TSHoursTotal parmHrsPerWeek(TSHoursTotal _hours = hours)
    {
        hours = _hours;
        return hours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNormBillable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>normBillable</c> parameter.
    /// </summary>
    /// <param name="_normBillable">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>normBillable</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public RealBase parmNormBillable(RealBase _normBillable = normBillable)
    {
        normBillable = _normBillable;
        return normBillable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>PeriodFrom</c> parameter.
    /// </summary>
    /// <param name="_periodFrom">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>PeriodFrom</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public date parmPeriodFrom(date _periodFrom = periodFrom)
    {
        periodFrom = _periodFrom;
        return periodFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodTo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>PeriodTo</c> parameter.
    /// </summary>
    /// <param name="_periodTo">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>PeriodTo</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public date parmPeriodTo(date _periodTo = periodTo)
    {
        periodTo = _periodTo;
        return periodTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>Status</c> parameter.
    /// </summary>
    /// <param name="_status">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>Status</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public str parmStatus(str _status = status)
    {
        status = _status;
        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatusEnum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>statusEnum</c> parameter.
    /// </summary>
    /// <param name="_statusEnum">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>statusEnum</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public TSAppStatus parmStatusEnum(TSAppStatus _statusEnum = statusEnum)
    {
        statusEnum = _statusEnum;
        return statusEnum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimesheetLE</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>timesheetLE</c> parameter.
    /// </summary>
    /// <param name="_timesheetLE">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>timesheetLE</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public DataAreaId parmTimesheetLE(DataAreaId _timesheetLE = timesheetLE)
    {
        timesheetLE = _timesheetLE;
        return timesheetLE;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimesheetLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>LineDetail</c> parameter.
    /// </summary>
    /// <param name="_tsLineDetailList">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>LineDetail</c> parameter.
    /// </returns>
    [DataMemberAttribute('tsLineDetailList'),
        AifCollectionTypeAttribute('return', Types::Class, classStr(TSTimesheetEntry))]
    public List parmTimesheetLine(List _tsLineDetailList = tsLineDetailList)
    {
        tsLineDetailList = _tsLineDetailList;

        if (!tsLineDetailList)
        {
            tsLineDetailList = new List(Types::Class);
        }

        return tsLineDetailList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimesheetModifiedTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>TimesheetModifiedTime</c> parameter.
    /// </summary>
    /// <param name="_modifiedDateTime">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>TimesheetModifiedTime</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public utcdatetime parmTimesheetModifiedTime(utcdatetime _modifiedDateTime = modifiedDateTime)
    {
        modifiedDateTime = _modifiedDateTime;
        return modifiedDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimesheetNbr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>timesheetNbr</c> parameter.
    /// </summary>
    /// <param name="_timesheetNbr">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>timesheetNbr</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public TSTimesheetNbr parmTimesheetNbr(TSTimesheetNbr _timesheetNbr = timesheetNbr)
    {
        timesheetNbr = _timesheetNbr;
        return timesheetNbr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalChargeableHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>totalChargeableHours</c> parameter.
    /// </summary>
    /// <param name="_totalChargeableHours">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>totalChargeableHours</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public Qty parmTotalChargeableHours(Qty _totalChargeableHours = totalChargeableHours)
    {
        totalChargeableHours = _totalChargeableHours;
        return totalChargeableHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalNonChargeableHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>totalNonChargeableHours</c> parameter.
    /// </summary>
    /// <param name="_totalNonChargeableHours">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>totalNonChargeableHours</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public Qty parmTotalNonChargeableHours(Qty _totalNonChargeableHours = totalNonChargeableHours)
    {
        totalNonChargeableHours = _totalNonChargeableHours;
        return totalNonChargeableHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>WorkerName</c> parameter.
    /// </summary>
    /// <param name="_workerName">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>WorkerName</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public DirPartyName parmWorkerName(DirPartyName _workerName = workerName)
    {
        workerName = _workerName;
        return workerName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerPosition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>WorkerPosition</c> parameter.
    /// </summary>
    /// <param name="_positionDescription">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>WorkerPosition</c> parameter.
    /// </returns>
    [DataMemberAttribute]
    public HrmDescription parmWorkerPosition(HrmDescription _positionDescription = positionDescription)
    {
        positionDescription = _positionDescription;
        return positionDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>customFields</c> parameter.
    /// </summary>
    /// <param name="_customFields">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>customFields</c> parameter.
    /// </returns>
    [DataMemberAttribute('customFields'), AifCollectionTypeAttribute('return', Types::Class, classStr(TSTimesheetCustomField))]
    public List parmCustomFields(List _customFields = customFields)
    {
        customFields = _customFields;
        return customFields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsAssignedToCurrentUserForApproval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>isAssignedToCurrentUserForApproval</c> parameter.
    /// </summary>
    /// <param name="_isAssignedToCurrentUserForApproval">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>isAssignedToCurrentUserForApproval</c> parameter.
    /// </returns>
    [DataMemberAttribute('isAssignedToCurrentUserForApproval')]
    public boolean parmIsAssignedToCurrentUserForApproval(boolean _isAssignedToCurrentUserForApproval = isAssignedToCurrentUserForApproval)
    {
        isAssignedToCurrentUserForApproval = _isAssignedToCurrentUserForApproval;
        return isAssignedToCurrentUserForApproval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmitterName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>submitterName</c> parameter.
    /// </summary>
    /// <param name="_submitterName">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>submitterName</c> parameter.
    /// </returns>
    [DataMemberAttribute('submitterName')]
    public DirPartyName parmSubmitterName(DirPartyName _submitterName = submitterName)
    {
        submitterName = _submitterName;
        return submitterName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastWorkflowHeaderComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>lastWorkflowHeaderComment</c> parameter.
    /// </summary>
    /// <param name="_lastWorkflowHeaderComment">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>lastWorkflowHeaderComment</c> parameter.
    /// </returns>
    [DataMemberAttribute('lastWorkflowHeaderComment')]
    public str parmLastWorkflowHeaderComment(str _lastWorkflowHeaderComment = lastWorkflowHeaderComment)
    {
        lastWorkflowHeaderComment = _lastWorkflowHeaderComment;
        return lastWorkflowHeaderComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastApprovalActionInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>lastApprovalActionInfo</c> parameter.
    /// </summary>
    /// <param name="_lastApprovalActionInfo">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>lastApprovalActionInfo</c> parameter.
    /// </returns>
    [DataMemberAttribute('lastApprovalActionInfo')]
    public str parmLastApprovalActionInfo(str _lastApprovalActionInfo = lastApprovalActionInfo)
    {
        lastApprovalActionInfo = _lastApprovalActionInfo;
        return lastApprovalActionInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMessages</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>messages</c> parameter.
    /// </summary>
    /// <param name="_messages">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>lastApprovalActionInfo</c> parameter.
    /// </returns>
    [DataMemberAttribute('messages'), AifCollectionTypeAttribute('return', Types::Class, classStr(TSMessage))]
    public List parmMessages(List _messages = messages)
    {
        messages = _messages;
        return messages;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>