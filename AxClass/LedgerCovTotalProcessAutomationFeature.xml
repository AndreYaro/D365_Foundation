<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCovTotalProcessAutomationFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation;
using KernelStateProvider = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.FeatureStateProvider;

/// <summary>
/// The <c>LedgerCovTotalProcessAutomationFeature</c> class defines the Cash flow forecast automation feature.
/// </summary>
[Export(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class LedgerCovTotalProcessAutomationFeature implements IFeatureMetadata,
    IFeatureMetadataEnablementNotifiable,
    IFeaturePrerequisites
{
    private static LedgerCovTotalProcessAutomationFeature instance = new LedgerCovTotalProcessAutomationFeature();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static LedgerCovTotalProcessAutomationFeature instance()
    {
        return LedgerCovTotalProcessAutomationFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@CashFlowManagement:LedgerCovTotalAutomationFeatureName"); 
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::CashAndBankManagement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@CashFlowManagement:LedgerCovTotalAutomationFeatureSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return "https://go.microsoft.com/fwlink/?linkid=2134392";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return ProcessExecutionProcessStatus::isProcessExclusivelyExecutedByFramework(className2Id(classStr(LedgerCovTotal)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onEnabled()
    {
        this.enableOrDisableRegisteredType(NoYes::Yes);
        this.refreshFeatureExposureState();
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onDisabled()
    {
        this.enableOrDisableRegisteredType(NoYes::No);
        this.refreshFeatureExposureState();
    }

]]></Source>
			</Method>
			<Method>
				<Name>cannotEnableMessage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public LabelString cannotEnableMessage()
    {
        return "@CashFlowManagement:LedgerCovTotalAutomationLegacyBatchStatusDisabledMessage";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canEnable()
    {
        return ProcessExecutionProcessStatus::isProcessExclusivelyExecutedByFramework(className2Id(classStr(LedgerCovTotal)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableOrDisableRegisteredType</Name>
				<Source><![CDATA[
    private void enableOrDisableRegisteredType(NoYes _isEnabled)
    {
        ProcessScheduleTypeRegistration::enableOrDisableType(LedgerCovTotalProcessAutomationConstants::RegisteredTypeName, _isEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFeatureExposureState</Name>
				<Source><![CDATA[
    private void refreshFeatureExposureState()
    {
        info("@ApplicationPlatform:FeatureEnabled_RefreshNotification");
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemFlightingHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hides Cash flow forecast menu item based on feature status.
    /// </summary>
    /// <param name = "_rootMenu">Root menu.</param>
    /// <param name = "_subMenu">Sub menu.</param>
    /// <param name = "_visible">Whether or not the submenu should be visible.</param>
    [SubscribesTo(classstr(SysMenuNavigationObjectFactory), staticdelegatestr(SysMenuNavigationObjectFactory, checkAddSubMenuDelegate))]
    public static void menuItemFlightingHandler(SysDictMenu _rootMenu, SysDictMenu _subMenu, SysBoxedBoolean _visible)
    {
        if (_subMenu.isMenuItem())
        {
            var metaElement = _subMenu.GetMenuItemMetaElement();
            if (metaElement != null)
            {
                if (metaElement.Name == menuItemActionStr(LedgerCovTotal))
                {
                    _visible.value = !Dynamics.AX.Application.FeatureStateProvider::isFeatureEnabled(LedgerCovTotalProcessAutomationFeature::instance());
                }

                if (metaElement.Name == menuItemDisplayStr(LedgerCovTotalProcessAutomationScheduleSeries))
                {
                    _visible.value = Dynamics.AX.Application.FeatureStateProvider::isFeatureEnabled(LedgerCovTotalProcessAutomationFeature::instance());
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>