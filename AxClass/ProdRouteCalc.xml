<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdRouteCalc</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProdRouteCalc
{
    ProdRoute               prodRoute;
    ProdJobType             prodJobType;
    RouteAutoConsump        routeAutoConsump;
    BOMCalcData             bomCalcData;

    NoYes                   includeConstantConsump;

    // result

    ProdReportedHours       hours;
    ProdReportedGood        qtyGood;
    ProdReportedError       qtyError;

    PdsCWBatchGood          pdsCWQtyGood;
    PdsCWBatchErr           pdsCWQtyError;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hours</Name>
				<Source><![CDATA[
    ProdReportedHours hours()
    {
        return hours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        ProdRoute prodRoutePrimary = prodRoute.primary();
        hours       = prodJobType.calcCalcHours(bomCalcData,prodRoutePrimary,prodRoutePrimary,prodRoute,prodRoute,routeAutoConsump,includeConstantConsump);
        qtyGood     = prodJobType.calcCalcQtyGood(bomCalcData,prodRoutePrimary,prodRoutePrimary,prodRoute,prodRoute,routeAutoConsump,includeConstantConsump);
        qtyError    = prodJobType.calcCalcQtyError(bomCalcData,prodRoutePrimary,prodRoutePrimary,prodRoute,prodRoute,routeAutoConsump,includeConstantConsump);

        pdsCWQtyGood     = prodJobType.pdsCWCalcCalcQtyGood(bomCalcData,prodRoutePrimary,prodRoutePrimary,prodRoute,prodRoute,routeAutoConsump,includeConstantConsump);
        pdsCWQtyError    = prodJobType.pdsCWCalcCalcQtyError(bomCalcData,prodRoutePrimary,prodRoutePrimary,prodRoute,prodRoute,routeAutoConsump,includeConstantConsump);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAutoConsump</Name>
				<Source><![CDATA[
    RouteAutoConsump parmAutoConsump(RouteAutoConsump _routeAutoConsump = routeAutoConsump)
    {
        routeAutoConsump = _routeAutoConsump;
        return routeAutoConsump;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBOMCalcData</Name>
				<Source><![CDATA[
    BOMCalcData parmBOMCalcData(BOMCalcData _bomCalcData = bomCalcData)
    {
        bomCalcData = _bomCalcData;
        return bomCalcData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeConstantConsump</Name>
				<Source><![CDATA[
    NoYes parmIncludeConstantConsump(NoYes _includeconstantConsump = includeconstantConsump)
    {
        includeconstantConsump = _includeconstantConsump;
        return includeconstantConsump;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdJobType</Name>
				<Source><![CDATA[
    ProdJobType parmProdJobType(ProdJobType _prodJobType = prodJobType)
    {
        prodJobType = _prodJobType;
        return prodJobType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdRoute</Name>
				<Source><![CDATA[
    ProdRoute parmProdRoute(ProdRoute _prodRoute = prodRoute)
    {
        prodRoute = _prodRoute;
        return prodRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyGood</Name>
				<Source><![CDATA[
    ProdReportedGood qtyGood()
    {
        return qtyGood;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdJournalRoute</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>Hours</c>, <c>QtyGood</c>, and <c>QtyError</c> fields on the <paramref
    ///    name="_prodJournalRoute" /> buffer.
    /// </summary>
    /// <param name="_prodJournalRoute">
    ///    The <c>ProdRouteRoute</c> table buffer to change.
    /// </param>
    /// <param name="_hours">
    ///    The number of reported hours; optional.
    /// </param>
    /// <param name="_qtyGood">
    ///    The number of good items; optional.
    /// </param>
    /// <param name="_qtyError">
    ///    The number of items that have an error; optional.
    /// </param>
    /// <param name="_pdsCWQtyGood">
    ///    The number of catch weight good items; optional.
    /// </param>
    /// <param name="_pdsCWQtyError">
    ///    The number of catch weight items that have an error; optional.
    /// </param>
    void setProdJournalRoute(ProdJournalRoute   _prodJournalRoute,
                             ProdReportedHours  _hours    = hours,
                             ProdReportedGood   _qtyGood  = qtyGood,
                             ProdReportedError  _qtyError = qtyError
                             ,PdsCWBatchGood    _pdsCWQtyGood  = pdsCWQtyGood
                             ,PdsCWBatchErr     _pdsCWQtyError = pdsCWQtyError
                             )
    {
        _prodJournalRoute.Hours       = _hours;
        _prodJournalRoute.QtyGood     = _qtyGood;
        _prodJournalRoute.QtyError    = _qtyError;

        _prodJournalRoute.PdsCWQtyGood  = _pdsCWQtyGood;
        _prodJournalRoute.PdsCWQtyError = _pdsCWQtyError;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBOMCalcData</Name>
				<Source><![CDATA[
    static ProdRouteCalc newBOMCalcData(
        BOMCalcData             _bomCalcData,
        ProdRoute               _prodRoute,
        ProdJobType             _prodJobType,
        RouteAutoConsump        _autoConsump,
        NoYes                   _includeConstantConsump
        )
    {
        ProdRouteCalc prodRouteCalc = new ProdRouteCalc();
        prodRouteCalc.parmAutoConsump(_autoConsump);
        prodRouteCalc.parmBOMCalcData(_bomCalcData);
        prodRouteCalc.parmProdRoute(_prodRoute);
        prodRouteCalc.parmProdJobType(_prodJobType);
        prodRouteCalc.parmIncludeConstantConsump(_includeConstantConsump);

        prodRouteCalc.init();

        return prodRouteCalc;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>