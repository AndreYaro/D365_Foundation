<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCDXDataTranslator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Retail CDX data translator.
/// </summary>
abstract class RetailCDXDataTranslator
{
    RetailCDXDataSyncContext ctContext;
    RetailCDXChangeRefTable2 refTable;
    DataAreaId le;
    private RetailCDXDownloadSubjobSourceContext subJobSourceContext;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>paramCtContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of retail cdx data sync context.
    /// </summary>
    /// <param name="_paramctContext">
    /// The value of <c>RetailCDXDataSyncContext</c>; optional.
    /// </param>
    /// <returns>
    /// Retail CDX data sync context.
    /// </returns>
    public RetailCDXDataSyncContext paramCtContext(RetailCDXDataSyncContext _paramctContext = ctContext)
    {
        ctContext = _paramctContext;
        return ctContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramSubJobSourceContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of retail cdx data sync subjob context.
    /// </summary>
    /// <param name="_subJobSourceContext">
    /// The value of <c>RetailCDXDownloadSubjobSourceContext</c>; optional.
    /// </param>
    /// <returns>
    /// Retail CDX data sync subjob context.
    /// </returns>
    internal RetailCDXDownloadSubjobSourceContext paramSubJobSourceContext(RetailCDXDownloadSubjobSourceContext _subJobSourceContext = subJobSourceContext)
    {
        subJobSourceContext = _subJobSourceContext;
        return subJobSourceContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramLE</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of data area id.
    /// </summary>
    /// <param name="_paramLE">
    /// The value of <c>DataAreaId</c>; optional.
    /// </param>
    /// <returns>
    /// Data area id.
    /// </returns>
    public DataAreaId paramLE(DataAreaId _paramLE = le)
    {
        le = _paramLE;
        return le;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs pre processing.
    /// </summary>
    public void preProcess()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>preChangeTracking</Name>
				<Source><![CDATA[
    /// <summary>
    /// Manipulates data before change tracking executes.
    /// </summary>
    /// <param name = "leContainer">Container of legal entities involved in this data synchronization session.</param>
    public void preChangeTracking(container leContainer)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>preDataOutput</Name>
				<Source><![CDATA[
    /// <summary>
    /// Manipulates data before data is written to package.
    /// </summary>
    /// <param name = "leContainer">Container of legal entities involved in this data synchronization session.</param>
    public abstract void preDataOutput(container leContainer)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>