<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankCurrencyRevalCompanyFilter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankCurrencyRevalCompanyFilter</c> class is used to control selected companies for filtering bank accounts.
/// </summary>
internal final class BankCurrencyRevalCompanyFilter
{
    private FormDataSource filterDataSource;
    private FormStringControl companyFilterControl;
    private FormStringControl companyGridColumnControl;
    private SysLookupMultiSelectCtrl companyLookupControl;
    private List userCompanies;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        userCompanies = new List(Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs and initializes an instance of the <c>BankCurrencyRevalCompanyFilter</c> class.
    /// </summary>
    /// <param name = "_filterDataSource">The data source to perform company filtering on.</param>
    /// <param name = "_companyFilterControl">The custom company filter control.</param>
    /// <param name = "_companyGridColumnControl">The company grid column on the form.</param>
    /// <returns>An instance of the <c>BankCurrencyRevalCompanyFilter</c> class.</returns>
    internal static BankCurrencyRevalCompanyFilter construct(
        FormDataSource _filterDataSource,
        FormStringControl _companyFilterControl,
        FormStringControl _companyGridColumnControl)
    {
        BankCurrencyRevalCompanyFilter filter = new BankCurrencyRevalCompanyFilter();

        filter.filterDataSource = _filterDataSource;
        filter.companyFilterControl = _companyFilterControl;
        filter.companyGridColumnControl = _companyGridColumnControl;

        filter.initCompanyMultiSelectLookup();

        return filter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSelectedCompaniesToDataSourceRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds selected companies from the multi-select control to the company range of the
    /// provided form data source query.
    /// </summary>
    internal void addSelectedCompaniesToDataSourceRange()
    {
        Query dataSourceQuery = filterDataSource.query();
        dataSourceQuery.clearCompanyRange();

        List selectedCompanies = this.getSelectedDataAreaList(companyLookupControl.get());

        ListEnumerator selectedCompaniesListEnumerator = selectedCompanies.getEnumerator();

        while (selectedCompaniesListEnumerator.moveNext())
        {
            dataSourceQuery.addCompanyRange(selectedCompaniesListEnumerator.current());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedDataAreaList</Name>
				<Source><![CDATA[
    private List getSelectedDataAreaList(container _companyRecIds)
    {
        List companies = new List(Types::String);

        DataAreaId company;

        for (int i = 1; i <= conLen(_companyRecIds); i++)
        {
            company = CompanyInfo::findRecId(conPeek(_companyRecIds, i)).DataArea;

            if (company == '')
            {
                companies.addEnd(curExt());
            }
            else
            {
                companies.addEnd(company);
            }
        }

        if (companies.elements() == 0)
        {
            companies.addEnd(curExt());
        }

        return companies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserCompanies</Name>
				<Source><![CDATA[
    private List parmUserCompanies(List _userCompanies = userCompanies)
    {
        if (!prmIsDefault(_userCompanies))
        {
            userCompanies = _userCompanies;
        }
        else if (userCompanies.elements() == 0)
        {
            MyLegalEntities myLegalEntities;

            select DataArea from myLegalEntities;

            while (myLegalEntities)
            {
                if (BankCurrencyRevalFeatureExposure::isLegalEntityAllowed(myLegalEntities.DataArea))
                {
                    userCompanies.addEnd(myLegalEntities.DataArea);
                }

                next myLegalEntities;
            }
        }

        return userCompanies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCompanyControlsVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the visibility of the company controls on the form.
    /// </summary>
    internal void setCompanyControlsVisibility()
    {
        boolean isVisible = this.parmUserCompanies().elements() > 1;

        companyFilterControl.visible(isVisible);
        companyGridColumnControl.visible(isVisible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCompanyMultiSelectLookup</Name>
				<Source><![CDATA[
    private void initCompanyMultiSelectLookup()
    {
        Query companyQuery = new Query();

        QueryBuildDataSource companyDataSource = companyQuery.addDataSource(tableNum(CompanyInfo));
        companyDataSource.addSelectionField(fieldNum(CompanyInfo, DataArea));
        companyDataSource.addSelectionField(fieldNum(CompanyInfo, Name));
        companyDataSource.addOrderByField(fieldNum(CompanyInfo, DataArea));

        ListEnumerator userCompaniesListEnumerator = this.parmUserCompanies().getEnumerator();

        while (userCompaniesListEnumerator.moveNext())
        {
            companyDataSource.addRange(fieldNum(CompanyInfo, DataArea)).value(queryValue(userCompaniesListEnumerator.current()));
        }

        companyLookupControl = SysLookupMultiSelectCtrl::constructWithQuery(
            filterDataSource.formRun(),
            companyFilterControl,
            companyQuery,
            true);

        companyLookupControl.set([CompanyInfo::current(), curExt()]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCompanyCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add company criteria to the existing lookup control.
    /// </summary>
    /// <param name = "_companyCriteria">The container of companies to add to the lookup selection.</param>
    internal void addCompanyCriteria(container _companyCriteria)
    {
        companyLookupControl.set(_companyCriteria);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>