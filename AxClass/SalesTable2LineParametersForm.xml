<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTable2LineParametersForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesTable2LineParametersForm extends RunBase
{
    List        salesTable2LineParameterFields;
    container   packedFieldList;

    Map         fieldList;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        packedFieldList
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    /// in the Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        DialogRunbase               dialog = super();
        // <GIN>
        TaxWithholdParameters_IN    taxWithholdParameters = TaxWithholdParameters_IN::find();
        // </GIN>

        dialog.formBuildDesign().dialogSize(SysDialogSize::Large);
        ListEnumerator salesTable2LineParameterFieldsEnumerator = salesTable2LineParameterFields.getEnumerator();

        fieldList                                 = new Map(Types::Integer, Types::Class);

        DialogGroup dialogGroup = dialog.addGroup('');

        dialogGroup.columns(this.dialogColumns());
        dialogGroup.frameType(FormFrameType::None);

        while (salesTable2LineParameterFieldsEnumerator.moveNext())
        {
            SalesTable2LineField salesTable2LineField = salesTable2LineParameterFieldsEnumerator.current();

            dialog.addGroup(salesTable2LineField.fieldGroupLabel(), dialogGroup);

            DialogField dialogField = dialog.addField(this.setupField(),
                                                      salesTable2LineField.parameterLabel(),
                                                      salesTable2LineField.parameterHelp());

            dialogField.value(salesTable2LineField.table2LineUpdate());
            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                if (salesTable2LineField.fieldId() == fieldnum(SalesTable, tdsGroup_IN))
                {
                    dialogField.allowEdit(taxWithholdParameters.tdsActivate);
                }

                if (salesTable2LineField.fieldId() == fieldnum(SalesTable, tcsGroup_IN))
                {
                    dialogField.allowEdit(taxWithholdParameters.tcsActivate);
                }
            }
            // </GIN>

            fieldList.insert(salesTable2LineField.fieldId(), dialogField);
        }

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogColumns</Name>
				<Source><![CDATA[
    int dialogColumns()
    {
        return min(3,real2int(trunc(power(salesTable2LineParameterFields.elements(), 0.5))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        ListEnumerator salesTable2LineParameterFieldsEnumerator = salesTable2LineParameterFields.getEnumerator();

        while (salesTable2LineParameterFieldsEnumerator.moveNext())
        {
            SalesTable2LineField salesTable2LineField = salesTable2LineParameterFieldsEnumerator.current();

            DialogField dialogField = fieldList.lookup(salesTable2LineField.fieldId());

            salesTable2LineField.table2LineUpdate(dialogField.value());
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSalesTable2LineParameterFields</Name>
				<Source><![CDATA[
    protected void initSalesTable2LineParameterFields()
    {
        fieldId                     fieldId;
        // <GEERU>
        TableId                     tableId;
        // </GEERU>
        int                         pos = 1;

        salesTable2LineParameterFields  = new List(Types::Class);

        container header2LineFieldIds = SalesTable2LineParameters::header2LineFieldIdList();

        while (pos <= conlen(header2LineFieldIds))
        {
            // <GEERU>
            [tableId, fieldId] = conpeek(header2LineFieldIds, pos);
            // </GEERU>

            if (SalesTable2LineParameters::fieldEnabled(
                // <GEERU>
                tableId,
                // </GEERU>
                fieldId))
            {
                SalesTable2LineField salesTable2LineField = SalesTable2LineField::construct(
                    // <GEERU>
                    tableId,
                    // </GEERU>
                    fieldId);
                salesTable2LineParameterFields.addEnd(salesTable2LineField);
            }

            pos++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container  pack()
    {
        packedFieldList = salesTable2LineParameterFields.pack();
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        ListEnumerator salesTable2LineParameterFieldsEnumerator = salesTable2LineParameterFields.getEnumerator();

        ttsbegin;

        while (salesTable2LineParameterFieldsEnumerator.moveNext())
        {
            SalesTable2LineField salesTable2LineField = salesTable2LineParameterFieldsEnumerator.current();

            salesTable2LineField.updateSalesTable2LineParameters();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupField</Name>
				<Source><![CDATA[
    protected utilElementName setupField()
    {
        return enumstr(TradeTable2LineUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean  unpack(container  _packedClass)
    {
        boolean         ret;
        Version         version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                salesTable2LineParameterFields = List::create(packedFieldList);
                ret = true;
                break;
            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SalesTable2LineParametersForm construct()
    {
        SalesTable2LineParametersForm salesTable2LineParametersForm = new SalesTable2LineParametersForm();

        //Call getLast to prevent it from being called during prompt, thus rewriting the field list with saved values
        salesTable2LineParametersForm.getLast();

        salesTable2LineParametersForm.initSalesTable2LineParameterFields();

        return salesTable2LineParametersForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SYS62837";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        SalesTable2LineParametersForm salesTable2LineParametersForm = SalesTable2LineParametersForm::construct();

        if (salesTable2LineParametersForm.prompt())
            salesTable2LineParametersForm.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
