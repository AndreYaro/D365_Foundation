<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxPurchRFQReplyLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AxPurchRFQReplyLine</c> class handles the business logic for the <c>PurchRFQReplyLine</c>
/// table.
/// </summary>
/// <remarks>
/// This internal <c>AxBC</c> class is derived from the <c>AxInternalBase</c> class.
/// </remarks>
class AxPurchRFQReplyLine extends AxApplicationBase
{
    PurchRFQReplyLine           purchRFQReplyLine;

    int                         axPurchRFQLineIdx;
    int                         axPurchRFQReplyTableIdx;
    boolean                     axPurchRFQReplyTableSetManually;
    PurchRFQLine                purchRFQLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the original record of the <c>PurchRFQReplyLine</c> table.
    /// </summary>
    /// <returns>
    ///    A <c>PurchRFQReplyLine</c> object.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchRFQLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an object for the <c>AxPurchRFQLine</c> class.
    /// </summary>
    /// <param name="_axPurchRFQLine">
    ///    The <c>AxPurchRFQLine</c> object to set; optional.
    /// </param>
    /// <returns>
    ///    An <c>AxPurchRFQLine</c> object.
    /// </returns>
    public AxPurchRFQLine axPurchRFQLine(AxPurchRFQLine    _axPurchRFQLine = null)
    {
        AxPurchRFQLine axPurchRFQLine;

        if (!axPurchRFQLineIdx)
        {
            axPurchRFQLineIdx = this.nextCacheIdx();
        }

        if (!prmisdefault(_axPurchRFQLine))
        {
            this.classCacheInsert(axPurchRFQLineIdx, _axPurchRFQLine);
            axPurchRFQLine = _axPurchRFQLine;
        }
        else
        {
            if (this.classCacheExist(axPurchRFQLineIdx))
            {
                axPurchRFQLine = this.classCacheLookup(axPurchRFQLineIdx);
            }
            else
            {
                purchRFQLine = PurchRFQLine::find(this.parmRFQId(), this.parmLineNum());
                purchRFQLine.initFromPurchRFQReplyLine(this.currentRecord());
                purchRFQLine.initPurchQty();
                InventMovement::bufferSetTransQtyUnit(purchRFQLine);
                axPurchRFQLine = AxPurchRFQLine::newPurchRFQLine(purchRFQLine);
                this.classCacheInsert(axPurchRFQLineIdx, axPurchRFQLine);
            }
        }

        return axPurchRFQLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchRFQReplyTable</Name>
				<Source><![CDATA[
    public AxPurchRFQReplyTable axPurchRFQReplyTable(AxPurchRFQReplyTable _axPurchRFQReplyTable = null)
    {
        AxPurchRFQReplyTable axPurchRFQReplyTable;

        if (!axPurchRFQReplyTableIdx)
        {
            axPurchRFQReplyTableIdx = this.nextCacheIdx();
        }

        if (!prmisdefault(_axPurchRFQReplyTable))
        {
            this.classCacheInsert(axPurchRFQReplyTableIdx, _axPurchRFQReplyTable);
            axPurchRFQReplyTable = _axPurchRFQReplyTable;
            axPurchRFQReplyTableSetManually = true;
        }
        else
        {
            if (this.classCacheExist(axPurchRFQReplyTableIdx))
            {
                axPurchRFQReplyTable = this.classCacheLookup(axPurchRFQReplyTableIdx);
            }
            else
            {
                this.setRFQId();
                axPurchRFQReplyTable =  AxPurchRFQReplyTable::newPurchRFQReplyTable(PurchRFQReplyTable::find(this.parmRFQId()));

                this.classCacheInsert(axPurchRFQReplyTableIdx, axPurchRFQReplyTable);
            }
        }

        return axPurchRFQReplyTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the buffer for the <c>PurchRFQReplyLine</c> table.
    /// </summary>
    /// <param name="_purchRFQReplyLine">
    ///    A <c>PurchRFQReplyLine</c> buffer; optional.
    /// </param>
    /// <returns>
    ///    The current record of the <c>PurchRFQReplyLine</c> table.
    /// </returns>
    public Common currentRecord(Common _purchRFQReplyLine = purchRFQReplyLine)
    {
        PurchRFQReplyLine   purchRFQReplyLineLocal;

        if (!prmisdefault(_purchRFQReplyLine))
        {
            super(_purchRFQReplyLine);
            purchRFQReplyLine = _purchRFQReplyLine as PurchRFQReplyLine;
        }
        else
        {
            super();
        }

        purchRFQReplyLineLocal = PurchRFQReplyLine::findRecId(purchRFQReplyLine.RecId, true);
        if (purchRFQReplyLine.recVersion != purchRFQReplyLineLocal.recVersion)
        {
            return purchRFQReplyLineLocal;
        }
        else
        {
            return purchRFQReplyLine;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The <c>emptyRecord</c> method gets an empty record for the <c>PurchRFQReplyLine</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record of the <c>PurchRFQReplyLine</c> table.
    /// </returns>
    protected Common emptyRecord()
    {
        PurchRFQReplyLine localPurchRFQReplyLine;
        return localPurchRFQReplyLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxPurchRFQReplyLine</c> class.
    /// </summary>
    public void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalendarDays</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CalendarDays</c> parameter.
    /// </summary>
    /// <param name="_calendarDays">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CalendarDays</c> parameter.
    /// </returns>
    public CalendarDays parmCalendarDays(CalendarDays _calendarDays = NoYes::No)
    {
        if (!prmisdefault(_calendarDays))
        {
            this.setField(fieldnum(PurchRFQReplyLine, CalendarDays), _calendarDays);
        }
        return purchRFQReplyLine.CalendarDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmComment</Name>
				<Source><![CDATA[
    public PurchRFQLineComment parmComment(PurchRFQLineComment _comment = '')
    {
        if (!prmisdefault(_comment))
        {
            this.setField(fieldNum(PurchRFQReplyLine, Comment), _comment);
        }

        return purchRFQReplyLine.Comment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DeliveryDate</c> parameter.
    /// </summary>
    /// <param name="_deliveryDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DeliveryDate</c> parameter.
    /// </returns>
    public DlvDate parmDeliveryDate(DlvDate _deliveryDate = dateNull())
    {
        if (!prmisdefault(_deliveryDate))
        {
            this.setField(fieldnum(PurchRFQReplyLine, DeliveryDate), _deliveryDate);
        }
        return purchRFQReplyLine.DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoSeal</Name>
				<Source><![CDATA[
    public NoYesId parmDoSeal(NoYesId _doSeal = NoYes::No)
    {
        if (!prmisdefault(_doSeal))
        {
            this.setField(fieldNum(PurchRFQReplyLine, DoSeal), _doSeal);
        }

        return purchRFQReplyLine.DoSeal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExternalItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ExternalItemId</c> parameter.
    /// </summary>
    /// <param name="_externalItemId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ExternalItemId</c> parameter.
    /// </returns>
    public PurchExternalItemId parmExternalItemId(PurchExternalItemId _externalItemId = '')
    {
        if (!prmisdefault(_externalItemId))
        {
            this.setField(fieldnum(PurchRFQReplyLine, ExternalItemId), _externalItemId);
        }
        return purchRFQReplyLine.ExternalItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLeadTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LeadTime</c> parameter.
    /// </summary>
    /// <param name="_leadTime">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LeadTime</c> parameter.
    /// </returns>
    public LeadTime parmLeadTime(LeadTime _leadTime = 0)
    {
        if (!prmisdefault(_leadTime))
        {
            this.setField(fieldnum(PurchRFQReplyLine, LeadTime), _leadTime);
        }
        return purchRFQReplyLine.LeadTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineAmount</c> parameter.
    /// </summary>
    /// <param name="_lineAmount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineAmount</c> parameter.
    /// </returns>
    public PurchLineAmount parmLineAmount(PurchLineAmount _lineAmount = 0)
    {
        if (!prmisdefault(_lineAmount))
        {
            this.setField(fieldnum(PurchRFQReplyLine, LineAmount), _lineAmount);
        }
        return purchRFQReplyLine.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineDisc</c> parameter.
    /// </summary>
    /// <param name="_lineDisc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineDisc</c> parameter.
    /// </returns>
    public PurchLineDisc parmLineDisc(PurchLineDisc _lineDisc = 0)
    {
        if (!prmisdefault(_lineDisc))
        {
            this.setField(fieldnum(PurchRFQReplyLine, LineDisc), _lineDisc);
        }
        return purchRFQReplyLine.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineNum</c> parameter.
    /// </summary>
    /// <param name="_lineNum">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineNum</c> parameter.
    /// </returns>
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisdefault(_lineNum))
        {
            this.setField(fieldnum(PurchRFQReplyLine, LineNum), _lineNum);
        }
        return purchRFQReplyLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LinePercent</c> parameter.
    /// </summary>
    /// <param name="_linePercent">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LinePercent</c> parameter.
    /// </returns>
    public PurchLinePercent parmLinePercent(PurchLinePercent _linePercent = 0)
    {
        if (!prmisdefault(_linePercent))
        {
            this.setField(fieldnum(PurchRFQReplyLine, LinePercent), _linePercent);
        }
        return purchRFQReplyLine.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    public MaximumRetailPrice_IN parmMaximumRetailPrice_IN(MaximumRetailPrice_IN _maximumRetailPrice = 0)
    {
        if (!prmisdefault(_maximumRetailPrice))
        {
            this.setField(fieldnum(PurchRFQReplyLine, MaximumRetailPrice_IN), _maximumRetailPrice);
        }
        return purchRFQReplyLine.MaximumRetailPrice_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnDisc</Name>
				<Source><![CDATA[

    /// <summary>
    ///    Gets or sets the <c>MultiLnDisc</c> parameter.
    /// </summary>
    /// <param name="_multiLnDisc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>MultiLnDisc</c> parameter.
    /// </returns>
    public PurchMultiLnDisc parmMultiLnDisc(PurchMultiLnDisc _multiLnDisc = 0)
    {
        if (!prmisdefault(_multiLnDisc))
        {
            this.setField(fieldnum(PurchRFQReplyLine, MultiLnDisc), _multiLnDisc);
        }
        return purchRFQReplyLine.MultiLnDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>MultiLnPercent</c> parameter.
    /// </summary>
    /// <param name="_multiLnPercent">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>MultiLnPercent</c> parameter.
    /// </returns>
    public PurchMultiLnPercent parmMultiLnPercent(PurchMultiLnPercent _multiLnPercent = 0)
    {
        if (!prmisdefault(_multiLnPercent))
        {
            this.setField(fieldnum(PurchRFQReplyLine, MultiLnPercent), _multiLnPercent);
        }
        return purchRFQReplyLine.MultiLnPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Name</c> parameter.
    /// </summary>
    /// <param name="_name">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Name</c> parameter.
    /// </returns>
    public ItemFreeTxt parmName(ItemFreeTxt _name = '')
    {
        if (!prmisdefault(_name))
        {
            this.setField(fieldnum(PurchRFQReplyLine, Name), _name);
        }
        return purchRFQReplyLine.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PdsCWQty</c> parameter.
    /// </summary>
    /// <param name="_pdsCWQty">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>PdsCWQty</c> parameter.
    /// </returns>
    public PdsCWInventQty parmPdsCWQty(PdsCWInventQty _pdsCWQty = 0)
    {
        if (!prmisdefault(_pdsCWQty))
        {
            this.setField(fieldnum(PurchRFQReplyLine, PdsCWQty), _pdsCWQty);
        }
        return purchRFQReplyLine.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PriceUnit</c> parameter.
    /// </summary>
    /// <param name="_priceUnit">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PriceUnit</c> parameter.
    /// </returns>
    public PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
        if (!prmisdefault(_priceUnit))
        {
            this.setField(fieldnum(PurchRFQReplyLine, PriceUnit), _priceUnit);
        }
        return purchRFQReplyLine.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchMarkup</c> parameter.
    /// </summary>
    /// <param name="_purchMarkup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchMarkup</c> parameter.
    /// </returns>
    public PurchMarkup parmPurchMarkup(PurchMarkup _purchMarkup = 0)
    {
        if (!prmisdefault(_purchMarkup))
        {
            this.setField(fieldnum(PurchRFQReplyLine, PurchMarkup), _purchMarkup);
        }
        return purchRFQReplyLine.PurchMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchPrice</c> parameter.
    /// </summary>
    /// <param name="_purchPrice">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchPrice</c> parameter.
    /// </returns>
    public PurchPrice parmPurchPrice(PurchPrice _purchPrice = 0)
    {
        if (!prmisdefault(_purchPrice))
        {
            this.setField(fieldnum(PurchRFQReplyLine, PurchPrice), _purchPrice);
        }
        return purchRFQReplyLine.PurchPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchQty</c> parameter.
    /// </summary>
    /// <param name="_purchQty">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchQty</c> parameter.
    /// </returns>
    public PurchOrderedQty parmPurchQty(PurchOrderedQty _purchQty = 0)
    {
        if (!prmisdefault(_purchQty))
        {
            this.setField(fieldnum(PurchRFQReplyLine, PurchQty), _purchQty);
        }
        return purchRFQReplyLine.PurchQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchUnit</c> parameter.
    /// </summary>
    /// <param name="_purchUnit">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchUnit</c> parameter.
    /// </returns>
    public str parmPurchUnit(str _purchUnit = '')
    {
        DictField   dictField;
        str         purchUnit;
        if (!prmisdefault(_purchUnit))
        {
            dictField = new DictField(tablenum(PurchRFQReplyLine),fieldnum(PurchRFQReplyLine,PurchUnit));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_purchUnit,dictField,this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                purchUnit = this.axUnitOfMeasureSymbol(_purchUnit);
            }
            else
            {
                this.validateInboundString(_purchUnit,dictField);
            }
            if (purchUnit)
            {
                this.setField(fieldnum(PurchRFQReplyLine, PurchUnit), purchUnit);
            }
            else
            {
                this.setField(fieldnum(PurchRFQReplyLine, PurchUnit), _purchUnit);
            }
        }
        if (this.valueMappingOutbound())
        {
            return this.axUnitOfMeasureSymbol(purchRFQReplyLine.PurchUnit);
        }
        else
        {
            return purchRFQReplyLine.PurchUnit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>QtyOrdered</c> parameter.
    /// </summary>
    /// <param name="_qtyOrdered">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyOrdered</c> parameter.
    /// </returns>
    public InventQty parmQtyOrdered(InventQty _qtyOrdered = 0)
    {
        if (!prmisdefault(_qtyOrdered))
        {
            this.setField(fieldnum(PurchRFQReplyLine, QtyOrdered), _qtyOrdered);
        }
        return purchRFQReplyLine.QtyOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReplyReceived</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ReplyReceived</c> parameter.
    /// </summary>
    /// <param name="_replyReceived">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ReplyReceived</c> parameter.
    /// </returns>
    public NoYes parmReplyReceived(NoYes _replyReceived = NoYes::No)
    {
        if (!prmisdefault(_replyReceived))
        {
            this.setField(fieldnum(PurchRFQReplyLine, ReplyReceived), _replyReceived);
        }
        return purchRFQReplyLine.ReplyReceived;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>RFQId</c> parameter.
    /// </summary>
    /// <param name="_rfqId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>RFQId</c> parameter.
    /// </returns>
    public PurchRFQId parmRFQId(PurchRFQId _rfqId = '')
    {
        if (!prmisdefault(_rfqId))
        {
            this.setField(fieldnum(PurchRFQReplyLine, rfqId), _rfqId);
        }
        return purchRFQReplyLine.rfqId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>RFQLineRecId</c> parameter.
    /// </summary>
    /// <param name="_rfqLineRecId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>RFQLineRecId</c> parameter.
    /// </returns>
    public PurchRFQLineRefRecId parmRFQLineRecId(PurchRFQLineRefRecId _rfqLineRecId = 0)
    {
        if (!prmisdefault(_rfqLineRecId))
        {
            this.setField(fieldnum(PurchRFQReplyLine, rfqLineRecId), _rfqLineRecId);
        }
        return purchRFQReplyLine.rfqLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQMark</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>RFQMark</c> parameter.
    /// </summary>
    /// <param name="_purchRFQMark">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>RFQMark</c> parameter.
    /// </returns>
    public PurchRFQMark parmRFQMark(PurchRFQMark _purchRFQMark = NoYes::No)
    {
        if (!prmisdefault(_purchRFQMark))
        {
            this.setField(fieldnum(PurchRFQReplyLine, rfqMark), _purchRFQMark);
        }
        return purchRFQReplyLine.rfqMark;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidFrom</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ValidFrom</c> parameter.
    /// </summary>
    /// <param name="_validFrom">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ValidFrom</c> parameter.
    /// </returns>
    public PurchRFQValidDate parmValidFrom(PurchRFQValidDate _validFrom = dateNull())
    {
        if (!prmisdefault(_validFrom))
        {
            this.setField(fieldnum(PurchRFQReplyLine, ValidFrom), _validFrom);
        }
        return purchRFQReplyLine.ValidFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidTo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ValidTo</c> parameter.
    /// </summary>
    /// <param name="_validTo">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ValidTo</c> parameter.
    /// </returns>
    public PurchRFQValidDate parmValidTo(PurchRFQValidDate _validTo = dateNull())
    {
        if (!prmisdefault(_validTo))
        {
            this.setField(fieldnum(PurchRFQReplyLine, ValidTo), _validTo);
        }
        return purchRFQReplyLine.ValidTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRFQReplyLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the <c>PurchRFQReplyLine</c> object.
    /// </summary>
    /// <param name="_purchRFQReplyLine">
    ///    The <c>PurchRFQReplyLine</c> to set; optional.
    /// </param>
    /// <returns>
    ///    The <c>PurchRFQReplyLine</c> object.
    /// </returns>
    public PurchRFQReplyLine purchRFQReplyLine(PurchRFQReplyLine _purchRFQReplyLine = purchRFQReplyLine)
    {
        if (!prmisdefault(_purchRFQReplyLine))
        {
            this.setCurrentRecordFromExternal(_purchRFQReplyLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCalendarDays</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CalendarDays</c> field.
    /// </summary>
    protected void setCalendarDays()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, CalendarDays)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setComment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Comment</c> field.
    /// </summary>
    protected void setComment()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, Comment)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DeliveryDate</c> field.
    /// </summary>
    protected void setDeliveryDate()
    {
        DlvDate         dlvDate;
        PurchRFQLine    rfqLine;

        if (axPurchRFQReplyTableSetManually)
        {
            if (this.axPurchRFQReplyTable().isFieldModified(fieldnum(PurchRFQReplyTable, DeliveryDate)))
            {
                this.parmDeliveryDate(this.axPurchRFQReplyTable().parmDeliveryDate());
                rfqLine = PurchRFQLine::findRecId(this.parmRFQLineRecId(), true);
                rfqLine.updateStatus();
                rfqLine.doUpdate();
            }
        }
        else
        {
            dlvDate = this.axPurchRFQLine().parmDeliveryDate();
            this.clearField(fieldnum(PurchRFQReplyLine, DeliveryDate), false);
            this.parmDeliveryDate(dlvDate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExternalItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ExternalItemId</c> field.
    /// </summary>
    protected void setExternalItemId()
    {
        PurchExternalItemId purchExternalItemId;

        if (!axPurchRFQReplyTableSetManually)
        {
            purchExternalItemId = this.axPurchRFQLine().parmExternalItemId();
            this.clearField(fieldnum(PurchRFQReplyLine, ExternalItemId), false);
            this.parmExternalItemId(purchExternalItemId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLeadTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LeadTime</c> field.
    /// </summary>
    protected void setLeadTime()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, LeadTime)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineAmount</c> field.
    /// </summary>
    protected void setLineAmount()
    {
        if (!axPurchRFQReplyTableSetManually)
        {
            this.clearField(fieldnum(PurchRFQReplyLine, LineAmount), false);
            this.parmLineAmount(purchRFQLine.calcLineAmountForced());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineDisc</c> field.
    /// </summary>
    protected void setLineDisc()
    {
        PurchLineDisc   purchLineDisc;

        if (!axPurchRFQReplyTableSetManually)
        {
            purchLineDisc = this.axPurchRFQLine().parmLineDisc();
            this.clearField(fieldnum(PurchRFQReplyLine, LineDisc), false);
            this.parmLineDisc(purchLineDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineNum</c> field.
    /// </summary>
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, LineNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LinePercent</c> field.
    /// </summary>
    protected void setLinePercent()
    {
        PurchLinePercent   purchLinePercent;

        if (!axPurchRFQReplyTableSetManually)
        {
            purchLinePercent = this.axPurchRFQLine().parmLinePercent();
            this.clearField(fieldnum(PurchRFQReplyLine, LinePercent), false);
            this.parmLinePercent(purchLinePercent);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    protected void setMaximumRetailPrice_IN()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, MaximumRetailPrice_IN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnDisc</Name>
				<Source><![CDATA[

    /// <summary>
    ///    Sets the value for the <c>MultiLnDisc</c> field.
    /// </summary>
    protected void setMultiLnDisc()
    {
        PurchMultiLnDisc    purchMultiLnDisc;

        if (!axPurchRFQReplyTableSetManually)
        {
            purchMultiLnDisc = this.axPurchRFQLine().parmMultiLnDisc();
            this.clearField(fieldnum(PurchRFQReplyLine, MultiLnDisc), false);
            this.parmMultiLnDisc(purchMultiLnDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>MultiLnPercent</c> field.
    /// </summary>
    protected void setMultiLnPercent()
    {
        PurchMultiLnPercent purchMultiLnPercent;

        if (!axPurchRFQReplyTableSetManually)
        {
            purchMultiLnPercent = this.axPurchRFQLine().parmMultiLnPercent();
            this.clearField(fieldnum(PurchRFQReplyLine, MultiLnPercent), false);
            this.parmMultiLnPercent(purchMultiLnPercent);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Name</c> field.
    /// </summary>
    protected void setName()
    {
        ItemFreeTxt itemFreeTxt;

        if (!axPurchRFQReplyTableSetManually)
        {
            itemFreeTxt = this.axPurchRFQLine().parmName();
            this.clearField(fieldnum(PurchRFQReplyLine, Name), false);
            this.parmName(itemFreeTxt);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQty</c> field.
    /// </summary>
    protected void setPdsCWQty()
    {
        PurchQty    qty;

        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine,
                PdsCWQty)))
        {
            return;
        }

        if (this.axPurchRFQLine().isFieldSet(fieldnum(PurchRFQLine, ItemId))
                && PdsGlobal::pdsIsCWItem(this.axPurchRFQLine().parmItemId()))
        {
            qty = PdsCatchWeight::inventQty(this.axPurchRFQLine().parmItemId(),
                this.parmPdsCWQty(), this.parmPurchUnit());
            this.parmPurchQty(qty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PriceUnit</c> field.
    /// </summary>
    protected void setPriceUnit()
    {
        PriceUnit   priceUnit;
        if (!axPurchRFQReplyTableSetManually)
        {
            priceUnit = this.axPurchRFQLine().parmPriceUnit();
            this.clearField(fieldnum(PurchRFQReplyLine, PriceUnit), false);
            this.parmPriceUnit(priceUnit);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchMarkup</c> field.
    /// </summary>
    protected void setPurchMarkup()
    {
        PurchMarkup purchMarkup;

        if (!axPurchRFQReplyTableSetManually)
        {
            purchMarkup = this.axPurchRFQLine().parmPurchMarkup();
            this.clearField(fieldnum(PurchRFQReplyLine, PurchMarkup), false);
            this.parmPurchMarkup(purchMarkup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchQty</c> field.
    /// </summary>
    protected void setPurchQty()
    {
        PurchOrderedQty purchOrderedQty;

        if (!axPurchRFQReplyTableSetManually)
        {
            purchOrderedQty = this.axPurchRFQLine().parmPurchQty();
            this.clearField(fieldnum(PurchRFQReplyLine, PurchQty), false);
            this.parmPurchQty(purchOrderedQty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchUnit</c> field.
    /// </summary>
    protected void setPurchUnit()
    {
        str purchUnit;

        if (!axPurchRFQReplyTableSetManually)
        {
            purchUnit = this.axPurchRFQLine().parmPurchUnit();
            this.clearField(fieldnum(PurchRFQReplyLine, PurchUnit), false);
            this.parmPurchUnit(purchUnit);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyOrdered</c> field.
    /// </summary>
    protected void setQtyOrdered()
    {
        InventQty   inventQty;

        if (!axPurchRFQReplyTableSetManually)
        {
            inventQty = this.axPurchRFQLine().parmQtyOrdered();
            this.clearField(fieldnum(PurchRFQReplyLine, QtyOrdered), false);
            this.parmQtyOrdered(inventQty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReplyReceived</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ReplyReceived</c> field.
    /// </summary>
    protected void setReplyReceived()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, ReplyReceived)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RFQId</c> field.
    /// </summary>
    protected void setRFQId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, rfqId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RFQLineRecId</c> field.
    /// </summary>
    protected void setRFQLineRecId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, rfqLineRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQMark</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RFQMark</c> field.
    /// </summary>
    protected void setRFQMark()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, rfqMark)))
        {
            return;
        }

        this.parmRFQMark(NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the default fields for a table row.
    /// </summary>
    protected void setTableFields()
    {
        // <GIN>
        #ISOCountryRegionCodes
        // </GIN>
        super();

        useMapPolicy = false;

        this.setLineNum();
        this.setDeliveryDate();
        this.setPurchUnit();
        this.setPriceUnit();
        this.setLineDisc();
        this.setLinePercent();
        this.setLineAmount();
        this.setExternalItemId();
        this.setRFQId();
        this.setMultiLnDisc();
        this.setMultiLnPercent();
        this.setRFQMark();
        this.setPurchMarkup();
        this.setName();
        this.setValidFrom();
        this.setValidTo();
        this.setLeadTime();
        this.setCalendarDays();
        this.setRFQLineRecId();
        this.setPurchQty();
        this.setQtyOrdered();
        this.setReplyReceived();

        this.setPdsCWQty();
        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.setMaximumRetailPrice_IN();
        }
        // </GIN>

        this.setComment();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValidFrom</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ValidFrom</c> field.
    /// </summary>
    protected void setValidFrom()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, ValidFrom)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValidTo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ValidTo</c> field.
    /// </summary>
    protected void setValidTo()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(PurchRFQReplyLine, ValidTo)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxPurchRFQReplyLine</c> class.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>AxPurchRFQReplyLine</c> class.
    /// </returns>
    /// <remarks>
    ///    Use the following procedure to customize or extend the
    ///    <c>
    ///       AxPurchRFQReplyLine
    ///    </c>
    ///     class.
    ///    <list type="number">
    ///       <item>
    ///          <description>
    ///             Create a new class that derives from <c>AxPurchRFQReplyLine</c>.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Overlayer the <c>construct</c> method on <c>AxPurchRFQReplyLine</c> so that it returns an instance
    ///             of the derived class.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Override the methods from the <c>AxPurchRFQReplyLine</c> class that you want to customize or extend
    ///             in your derived class.
    ///          </description>
    ///       </item>
    ///    </list>
    ///     This procedure helps make sure that your customizations are maintained if the base version of the
    ///    <c>
    ///       AxPurchRFQReplyLine
    ///    </c>
    ///     class is changed, minimizing code conflicts during an upgrade. For more information, see <see cref="Best Practices for static construct Methods" />
    ///    .
    /// </remarks>
    public static AxPurchRFQReplyLine construct()
    {
        return new AxPurchRFQReplyLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchRFQReplyLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>AxPurchRFQReplyLine</c> class.
    /// </summary>
    /// <param name="_purchRFQReplyLine">
    ///    An instance of the <c>AxPurchRFQReplyLine</c> class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>AxPurchRFQReplyLine</c> class.
    /// </returns>
    public static AxPurchRFQReplyLine newPurchRFQReplyLine(PurchRFQReplyLine _purchRFQReplyLine)
    {
        AxPurchRFQReplyLine axPurchRFQReplyLine = AxPurchRFQReplyLine::construct();
        axPurchRFQReplyLine.purchRFQReplyLine(_purchRFQReplyLine);

        return axPurchRFQReplyLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>