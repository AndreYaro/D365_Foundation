<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocMsg_ServiceInquire_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class that realizes service inquire communication
/// </summary>
public class EFDocMsg_ServiceInquire_BR extends EFDocMsgBase_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSendWebService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Web Service type for the service inquiry process
    /// </summary>
    /// <returns>
    /// An EFDocWebService_BR enum value indicating the type of the web service used for the NFe service inquiry process
    /// </returns>
    protected EFDocWebService_BR getSendWebService()
    {
        return EFDocWebService_BR::ServiceInquire;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inquire</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inquires authority status web service based on given parameters
    /// </summary>
    /// <param name="_efDocServiceInquireParams">
    /// Instance of <c>EFDocServiceInquireParams_BR</c> class containing parameters for inquire webservice
    /// </param>
    /// <param name="_transport">
    /// Instance of transport class
    /// </param>
    /// <returns>
    /// Instance of <c>EFiscalDocumentReturnInfo_BR</c> with data parsed from received XML
    /// </returns>
    public EFiscalDocumentReturnInfo_BR inquire(EFDocServiceInquireParams_BR _efDocServiceInquireParams, IEFDocMsgTransport _transport)
    {
        EFiscalDocumentReturnInfo_BR returnInfo = EFiscalDocumentReturnInfo_BR::construct();
        EFDocMsgFormat_XmlServiceInquire_BR serviceInquireFormat = this.inquireEFiscalDocVersionSwitch(_efDocServiceInquireParams);

        if (!serviceInquireFormat)
        {
            serviceInquireFormat = EFDocMsgFormat_XmlServiceInquire_BR::construct(_efDocServiceInquireParams);
        }

        serviceInquireFormat.write(_transport.getSendStream(), null);

        IEFDocMsgStream_BR returnStream = _transport.send();

        serviceInquireFormat.read(returnStream, returnInfo);

        return returnInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inquireEFiscalDocVersionSwitch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets service inquire format based on given parameters.
    /// </summary>
    /// <param name="_efDocServiceInquireParams">
    /// Instance of <c>EFDocServiceInquireParams_BR</c> class containing parameters for inquire webservice
    /// </param>
    /// <returns>
    /// Instance of <c>EFDocMsgFormat_XmlServiceInquire_BR</c>.
    /// </returns>
    protected EFDocMsgFormat_XmlServiceInquire_BR inquireEFiscalDocVersionSwitch(EFDocServiceInquireParams_BR _efDocServiceInquireParams)
    {
        EFDocMsgFormat_XmlServiceInquire_BR serviceInquireFormat;

        switch (_efDocServiceInquireParams.parmEFDocVersion())
        {
            case EFiscalDocVersion_BR::V40:
                serviceInquireFormat = EFDocMsgFormat_XmlServiceInquireV4_BR::construct(_efDocServiceInquireParams);
                break;

            case EFiscalDocVersion_BR::V31:
                serviceInquireFormat = EFDocMsgFormat_XmlServiceInquireV3_BR::construct(_efDocServiceInquireParams);
                break;
        }

        return serviceInquireFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>messageType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the message type of this object.
    /// </summary>
    /// <returns>The element of <c>EFDocMessageType_BR</c> base enum with the message type.</returns>
    EFDocMessageType_BR messageType()
    {
        return EFDocMessageType_BR::Submit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>