<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAdjSelect</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class InventAdjSelect extends RunBase
{
    QueryRun            queryRun;
    TmpFormLookUp       tmpFormLookUp;

    boolean             dummy;
    // <GEERU>
    #ISOCountryRegionCodes

    InventTransCurrency_RU  inventTransCurrency;
    // </GEERU>
    // <GEERU>
    #DEFINE.CurrentVersion(3)
    // </GEERU>
    #LOCALMACRO.CurrentList
    // <GEERU>
    dummy,
    inventTransCurrency
    // </GEERU>
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addInventProfileCostAdjAllowedRange_RU</Name>
				<Source><![CDATA[
    protected void addInventProfileCostAdjAllowedRange_RU()
    {
        QueryBuildDataSource qbdsInventDim = queryRun.query().dataSourceTable(tablenum(InventDim));
        
        for (Counter x = qbdsInventDim.rangeCount(); x; x--)
        {
            if (fieldExt2Id(qbdsInventDim.range(x).field()) == fieldnum(InventDim, InventProfileId_RU))
            {
                qbdsInventDim.range(x).enabled(false);
            }
        }

        if ((select firstonly RecId 
                from InventProfile_RU 
                where InventProfile_RU.LockCostAdjustment == NoYes::Yes).RecId)
        {
            QueryBuildDataSource qbdsInventProfile = qbdsInventDim.addDataSource(tablenum(InventProfile_RU));
            qbdsInventProfile.joinMode(JoinMode::NoExistsJoin);
            qbdsInventProfile.relations(true);
            qbdsInventProfile.addRange(fieldnum(InventProfile_RU, LockCostAdjustment)).value(SysQuery::value(NoYes::Yes));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQueryRun</Name>
				<Source><![CDATA[
    abstract void initQueryRun()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        super();
        this.initQueryRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    container pack()
    {
        return [#CurrentVersion,#CurrentList,queryRun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransCurrency_RU</Name>
				<Source><![CDATA[
    protected InventTransCurrency_RU parmInventTransCurrency_RU(InventTransCurrency_RU _inventTransCurrency = inventTransCurrency)
    {
        inventTransCurrency = _inventTransCurrency;
        return inventTransCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTmpFormLookUp</Name>
				<Source><![CDATA[
    void setTmpFormLookUp(TmpFormLookUp _tmpFormLookUp)
    {
        tmpFormLookUp.setTmpData(_tmpFormLookUp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        boolean         ret;
        Integer         version     = conPeek(packedClass,1);
        container       packedQuery;

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList,packedQuery] = packedClass;
                if (packedQuery)
                   queryRun = new QueryRun(packedQuery);
                break;

            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>