<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCountingReasonCodePolicyCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventCountingReasonCodePolicyCache</c> caches the data of the <c>InventTableInventCountingReasonCodePolicy</c> table.
/// </summary>
public final class InventCountingReasonCodePolicyCache
{
    private SysGlobalObjectCache sysGlobalObjectCache;
    private str                  caller;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cacheScope</Name>
				<Source><![CDATA[
    private GlobalObjectCacheScope cacheScope()
    {
        return classStr(InventCountingReasonCodePolicyCache);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the entire cache.
    /// </summary>
    public void clearCache()
    {
        sysGlobalObjectCache.clear(this.cacheScope());
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeCacheKey</Name>
				<Source><![CDATA[
    private container makeCacheKey()
    {    
        return [caller, curExt()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCountingReasonCodePolicyUsedForItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the counting reason code policy is used for items.
    /// </summary>
    /// <returns>
    /// true if the counting reason code policy is used for items; otherwise false
    /// </returns>
    public boolean isCountingReasonCodePolicyUsedForItems()
    {
        container cacheKey = this.makeCacheKey();
        container result   = sysGlobalObjectCache.find(this.cacheScope(), cacheKey);

        if (result == conNull())
        {
            result = this.isCountingReasonCodePolicyUsedForItemsNoCache(cacheKey);
        }
        
        if (conPeek(result, 1))
        {
            return true;
        }

        return false;

    }

]]></Source>
			</Method>
			<Method>
				<Name>isCountingReasonCodePolicyUsedForItemsNoCache</Name>
				<Source><![CDATA[
    private container isCountingReasonCodePolicyUsedForItemsNoCache(container _cacheKey)
    {
        InventTableInventCountingReasonCodePolicy inventTableInventCountingReasonCodePolicy;

        select firstonly RecId from inventTableInventCountingReasonCodePolicy;

        container result;

        if (inventTableInventCountingReasonCodePolicy.RecId)
        {
            result = [NoYes::Yes];
        }
        else
        {
            result = [NoYes::No];
        }
            
        sysGlobalObjectCache.insert(this.cacheScope(), _cacheKey, result);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        sysGlobalObjectCache = classFactory.globalObjectCache();
        caller               = strFmt('%1.%2', classStr(InventCountingReasonCodePolicyCache), methodStr(InventCountingReasonCodePolicyCache, isCountingReasonCodePolicyUsedForItems));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventCountingReasonCodePolicyCache construct()
    {
        return new InventCountingReasonCodePolicyCache();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>