<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsProdPutWorkLPSpecificReservationFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When <c>WhsProdPutWorkLPSpecificReservationFlight</c> class is enabled, LP is used for prod put work reservation.
/// Depends on the <c>WhsWorkTransactionLPControlledLocationFlight</c> and <c>WhsInventUpdReservationInventDimReceiptAdjustmentFlight</c> flights.
/// </summary>
internal final class WhsProdPutWorkLPSpecificReservationFlight extends Flight
{
    static private WhsProdPutWorkLPSpecificReservationFlight singleton = new WhsProdPutWorkLPSpecificReservationFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return WhsWorkTransactionLPControlledLocationFlight::instance().isEnabled()
            && WhsInventUpdReservationInventDimReceiptAdjustmentFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WhsProdPutWorkLPSpecificReservationFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>