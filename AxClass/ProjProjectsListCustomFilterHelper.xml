<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProjectsListCustomFilterHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjProjectsListCustomFilterHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyProjectStateFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the filter if to show the only the active projects or all projects.
    /// </summary>
    /// <param name = "_formDataSource">The form data souce.</param>
    /// <param name = "selection">Indicates if all projects must be shown or only the currently active ones.</param>
    public static void applyProjectStateFilter(FormDataSource _formDataSource, int selection)
    {
        QueryBuildRange qbr = SysQuery::findOrCreateRange(_formDataSource.query().dataSourceTable(tableNum(ProjTable)), fieldNum(ProjTable, Status));

        if (ProjProjectsListCustomFilterHelper::checkProjActiveAll(selection))
        {
            qbr.value(SysQuery::valueUnlimited());
        }
        else
        {
            // Active = all non-completed projects
            qbr.value(SysQuery::valueNot(ProjStatus::Completed));
        }

		_formDataSource.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProjActiveAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// compares enum value with <c>selection</c> parameter.
    /// </summary>
    /// <param name = "selection">
    /// used to compared with enum integer value.
    /// </param>
    /// <returns>
    /// returns a boolean value after comparing parameter with <c>ProjActiveAll</c>.
    /// </returns>
    protected static boolean checkProjActiveAll(int selection)
    {
        return (selection == enum2int(ProjActiveAll::All));
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyProjectLevelFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the filter if to show all projects or only the top level projects.
    /// </summary>
    /// <param name = "_formDataSource">The form data source.</param>
    /// <param name = "selection">Indicates the level of projects to be shown.</param>
    public static void applyProjectLevelFilter(FormDataSource _formDataSource, int selection)
    {
        QueryBuildRange qbr = SysQuery::findOrCreateRange(_formDataSource.query().dataSourceTable(tableNum(ProjTable)), fieldNum(ProjTable, ParentId));

        if (selection == ProjLevels::Top)
        {
            qbr.value(SysQuery::valueEmptyString());
        }
        else
        {
            qbr.value(SysQuery::valueUnlimited());
        }

        _formDataSource.executeQuery();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>