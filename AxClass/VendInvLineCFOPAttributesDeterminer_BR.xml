<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvLineCFOPAttributesDeterminer_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>CFOPAttributesDeterminer_BR</c> implementation that maps values used to determine
/// and validate the CFOP for vendor invoice lines.
/// </summary>
class  VendInvLineCFOPAttributesDeterminer_BR extends CFOPAttributesDeterminer_BR
{
    VendInvoiceInfoLine  vendInvoiceInfoLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAddressOriginEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// It Defines the Common  used to identify the logistic postal address for
    /// Origin Address
    /// </summary>
    /// <returns>
    /// Returns the VendTable that should be used
    /// </returns>
    public Common getAddressOriginEntity()
    {
        if (this.isReturnedItem())
        {
            return vendInvoiceInfoLine.inventDim().inventSite().fiscalEstablishment();
        }

        return VendTable::find(vendInvoiceInfoLine.vendInvoiceInfoTable().OrderAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCFOPTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// It Defines the CFOPTable_BR Record used by this Vendor Invoice
    /// </summary>
    /// <returns>
    /// Returns the Table Record
    /// </returns>
    public CFOPTable_BR getCFOPTable()
    {
        return CFOPTable_BR::find(vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFOPTable_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDestinationPostalAddressRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// It Defines the RecId used to identify the logistic postal address for
    /// Destination Address
    /// </summary>
    /// <returns>
    /// Returns the RecId used for postal address
    /// </returns>
    public recId getDestinationPostalAddressRecId()
    {
        return vendInvoiceInfoLine.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOperationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Define the Operation Type ID used by on PurchLine
    /// </summary>
    /// <returns>
    /// Returnts the operation ID
    /// </returns>
    public SalesPurchOperationTypeRecId_BR getOperationId()
    {
        return vendInvoiceInfoLine.vendInvoiceInfoTable().vendInvoiceInfoTable_W().SalesPurchOperationType_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the Transaction Type (Sales/Purch) used by PurchLine
    /// </summary>
    /// <returns>
    /// It returns the Transaction Type
    /// </returns>
    public SalesPurchTrntype_BR getTransactionType()
    {
        return SalesPurchTrntype_BR::Purchase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsCancellingReturnOrder</Name>
				<Source><![CDATA[
        private boolean IsCancellingReturnOrder()
    {
        return vendInvoiceInfoLine.purchLine().purchTable().isCancellingPurchaseReturn_BR();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReturnedItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the PurchLine transaction is for returned items.
    /// </summary>
    /// <returns>
    ///     Boolean value indicating whether the transaction is for returned items.
    /// </returns>
    public boolean isReturnedItem()
    {
        return vendInvoiceInfoLine.purchLine().PurchaseType == PurchaseType::ReturnItem || this.IsCancellingReturnOrder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        void new(Common _cfopOrderTable)
    {
        vendInvoiceInfoLine = _cfopOrderTable;
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>