<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgCancelTransferTimecard</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>JmgCancelTransferTimecard</c> class cancels the transfer of an employees electronic timecard
/// registrations. All registrations are deleted from the <see cref="T:JmgStampJournalTrans" /> table,
/// and the <c>RegistrationsTransferred</c> field on the <c>JmgTimecardTable</c> record is set to
/// <c>NoYes::No</c>.
/// </summary>
/// <remarks>
/// Always run this class by using the <c>JmgCancelTransferTimecard.:main</c> method.
/// </remarks>
class JmgCancelTransferTimecard extends RunBase
{
    JmgTimecardTable    jmgTimecardTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog(DialogRunbase _dialog = null, boolean _forceOnClient = false)
    {
        Dialog ret;

        ret = this.dialogInternal(_dialog, _forceOnClient);
        ret.caption("@SYS39807");
        ret.addText("@SYS39948"+'?');
        ret.parmIsModal(true);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS39807";
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [jmgTimecardTable.Worker, jmgTimecardTable.ProfileDate];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class. Deletes registrations from the
    /// <c>JmgStampJournalTrans</c> table, and updates the <c>RegistrationsTransferred</c> field on the
    /// <c>JmgTimecardTable</c> table.
    /// </summary>
    /// <remarks>
    /// This method should not be invoked directly. Use the <c>JmgCancelTransferTimecard::main</c> method
    /// instead.If the registrations for the employee on the particular date has already been calculated,
    /// an error is thrown.
    /// </remarks>
    public void run()
    {
        JmgStampJournalTrans    jmgStampJournalTrans;
        JmgStampJournalTable    jmgStampJournalTable;
        JmgCalcApproveForm      jmgCalcApproveForm;

        super();

        if (jmgTimecardTable.dateCalculated())
        {
            throw error(strfmt("@SYS39809", date2StrUsr(jmgTimecardTable.ProfileDate, DateFlags::FormatAll)));
        }

        ttsbegin;
        jmgCalcApproveForm  = JmgCalcApproveForm::construct();
        jmgTimecardTable.selectForUpdate(true);
        jmgStampJournalTable    = JmgStampJournalTable::find(jmgTimecardTable.Worker, jmgTimecardTable.ProfileDate);

        while select forUpdate jmgStampJournalTrans
            where jmgStampJournalTrans.Worker       == jmgStampJournalTable.Worker
                && jmgStampJournalTrans.ProfileDate  == jmgStampJournalTable.ProfileDate
        {
            jmgStampJournalTrans.delete();
            jmgCalcApproveForm.transactionDeleted(jmgStampJournalTrans);
        }

        JmgTransaction::postChanges(jmgStampJournalTable);

        jmgTimecardTable.RegistrationsTransferred = NoYes::No;
        jmgTimecardTable.update();
        jmgTimecardTable.lock();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        JmgWorkerRecId  worker;
        JmgProfileDate  profileDate;

        [worker, profileDate] = packedClass;

        if (!jmgTimecardTable)
        {
            jmgTimecardTable = JmgTimecardTable::find(worker, profileDate);
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>JmgCancelTransferTimecard</c> class.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>JmgCancelTransferTimecard</c> class.
    /// </returns>
    public static JmgCancelTransferTimecard construct()
    {
        return new JmgCancelTransferTimecard();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJmgTimecardTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the JmgTimecardTable record.
    /// </summary>
    /// <param name="_jmgTimecardTable">
    /// The JmgTimecardTable record.
    /// </param>
    private void setJmgTimecardTable(JmgTimecardTable _jmgTimecardTable)
    {
        jmgTimecardTable = _jmgTimecardTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (!_args || !_args.dataset() == tablenum(JmgTimecardTable))
        {
            throw error(strfmt("@SYS19384", classstr(JmgValidateTimecard)));
        }

        JmgCancelTransferTimecard jmgCancelTransferTimecard = JmgCancelTransferTimecard::construct();
        jmgCancelTransferTimecard.getLast();
        jmgCancelTransferTimecard.setJmgTimecardTable(_args.record());

        if (_args.parmEnum() == NoYes::Yes || jmgCancelTransferTimecard.prompt())
        {
            jmgCancelTransferTimecard.runOperation();
            FormRun caller = _args.caller();
            if (caller)
            {
                caller.dataSource().research();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>