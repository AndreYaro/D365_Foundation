<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResourceCategoryFacade</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Holds convenience methods for working with resource categories.
/// </summary>
public class ResourceCategoryFacade
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultResourceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrives default resource category for current legal entity.
    /// </summary>
    /// <returns>Resource category record identifier</returns>
    public static ResourceCategoryRecId defaultResourceCategory()
    {
        PSASchedRole resourceCategory;
        
        select firstonly RecId from resourceCategory
            where resourceCategory.DefaultResourceCategory == FalseTrue::True;

        return resourceCategory.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByResourceCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds resource category by resource category Id.
    /// </summary>
    /// <param name = "_resourceCategory">Id of the resource category to look for</param>
    /// <param name = "_legalEntity">Legal entity that resource category is defined in</param>
    /// <returns>Resource category record identifier</returns>
    public static ResourceCategoryRecId findByResourceCategoryId(
        ResourceCategoryId _resourceCategory,
        LegalEntityRecId _legalEntity = CompanyInfo::current())
    {
        PSASchedRole resourceCategory;

        if (_legalEntity)
        {
            DataAreaId dataAreaId = CompanyInfo::findRecId(_legalEntity).DataArea;
            if (dataAreaId)
            {
                changecompany(dataAreaId)
                {
                    select firstonly RecId from resourceCategory
                        where resourceCategory.RoleId == _resourceCategory;
                }
            }
        }

        return resourceCategory.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the Id of the specified resource category.
    /// </summary>
    /// <param name = "_resourceCategory">Resource category to get Id of.</param>
    /// <returns>The Id of the specified resource category</returns>
    public static ResourceCategoryId getId(ResourceCategoryRecId _resourceCategory)
    {
        PSASchedRole resourceCategory;

        if (_resourceCategory)
        {
            select firstonly crossCompany RoleId from resourceCategory
                where resourceCategory.RecId == _resourceCategory;
        }

        return resourceCategory.RoleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of the specified resource category.
    /// </summary>
    /// <param name = "_resourceCategory">Resource category to get Id of.</param>
    /// <returns>The name of the specified resource category</returns>
    public static ResourceCategoryName getName(ResourceCategoryRecId _resourceCategory)
    {
        PSASchedRole resourceCategory;

        if (_resourceCategory)
        {
            select firstonly crossCompany Description from resourceCategory
                where resourceCategory.RecId == _resourceCategory;
        }

        return resourceCategory.Description;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
