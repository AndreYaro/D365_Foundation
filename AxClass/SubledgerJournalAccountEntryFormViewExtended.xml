<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJournalAccountEntryFormViewExtended</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

[ExportMetadataAttribute("SubledgerJournalAccountEntryFormViewExtended", "SubledgerJournalAccountEntryFormViewExtended"),ExportAttribute("Dynamics.AX.Application.SubledgerJournalAccountEntryFormViewIExtension")]
public class SubledgerJournalAccountEntryFormViewExtended implements SubledgerJournalAccountEntryFormViewIExtension
{
    #SubledgerJournal

    FormComboBoxControl                     showTransModeControl_RU;
    FormComboBoxControl                     postingTypeCorrControl_RU;
    FormStringControl                       ledgerDimensionCorrDisplay_RU;
    FormRun                                 element;
    boolean                                 countryRegion_RU;
    SubledgerJournalAccountEntryViewModel   subledgerJournalAccountEntryViewModel;

    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init(FormRun _element)
    {
        element = _element;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFieldControls</Name>
				<Source><![CDATA[
    public void initFieldControls(SubledgerJournalAccountEntryViewModel   _subledgerJournalAccountEntryViewModel)
    {
        subledgerJournalAccountEntryViewModel = _subledgerJournalAccountEntryViewModel;

        // <GEERU>
        countryRegion_RU                = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);

        showTransModeControl_RU         = element.design().controlName(#controlNameShowTransMode_RU);
        showTransModeControl_RU.visible(countryRegion_RU);

        postingTypeCorrControl_RU       = element.design().controlName(#controlNamePostingTypeCorr_RU);
        postingTypeCorrControl_RU.visible(countryRegion_RU && subledgerJournalAccountEntryViewModel.correspondenceEnabled_RU());

        ledgerDimensionCorrDisplay_RU   = element.design().controlName(#controlNameLedgerDimensionCorrDisplay_RU);
        ledgerDimensionCorrDisplay_RU.visible(countryRegion_RU && subledgerJournalAccountEntryViewModel.correspondenceEnabled_RU());

        if (countryRegion_RU && subledgerJournalAccountEntryViewModel.correspondenceEnabled_RU())
        {
            showTransModeControl_RU.selection(LedgerBondShowTransMode_RU::ShowDebitOnly);
        }
            // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeQuery</Name>
				<Source><![CDATA[
    public void executeQuery(QueryBuildRange debitCreditRange)
    {
        str filterByEnum(LedgerBondShowTransMode_RU _enum)
        {
            switch (_enum)
            {
                case LedgerBondShowTransMode_RU::ShowDebitOnly:
                    return queryValue(DebitCredit::Debit);
                    case LedgerBondShowTransMode_RU::ShowCreditOnly:
                    return queryValue(DebitCredit::Credit);
            }
            return SysQuery::valueUnlimited();
        }

        if (countryRegion_RU)
        {
            debitCreditRange.value(filterByEnum(showTransModeControl_RU.selection()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowTransModeControl_RU</Name>
				<Source><![CDATA[
    public FormComboBoxControl parmShowTransModeControl_RU(FormComboBoxControl _showTransModeControl_RU = showTransModeControl_RU)
    {
        showTransModeControl_RU = _showTransModeControl_RU;

        return showTransModeControl_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTransModeControl_selectionChange_RU</Name>
				<Source><![CDATA[
    public int showTransModeControl_selectionChange_RU(FormComboBoxControl  _control)
    {
        FormDataSource subledgerJournalAccEntrytmpSummaryDataSource = element.dataSource(identifierStr(SubledgerJournalAccountEntryTmpSummary));
        subledgerJournalAccEntrytmpSummaryDataSource.executeQuery();
        return _control.selection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerOverloadMethods</Name>
				<Source><![CDATA[
    public void registerOverloadMethods()
    {
        // <GEERU>
        if (countryRegion_RU)
        {
            showTransModeControl_RU.registerOverrideMethod(methodStr(FormComboBoxControl, selectionChange),
                                                           methodStr(SubledgerJournalAccountEntryFormViewExtended, showTransModeControl_selectionChange_RU),
                                                           this);
        }
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountingCurrencyCreditTotal</Name>
				<Source><![CDATA[
    public boolean accountingCurrencyCreditTotal()
    {
        // <GEERU>
        return  (this.parmShowTransModeControl_RU() && this.parmShowTransModeControl_RU().selection() == LedgerBondShowTransMode_RU::ShowDebitOnly);
        // <GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountingCurrencyDebitTotal</Name>
				<Source><![CDATA[
    public boolean accountingCurrencyDebitTotal()
    {
        // <GEERU>
        return (this.parmShowTransModeControl_RU() && this.parmShowTransModeControl_RU().selection() == LedgerBondShowTransMode_RU::ShowCreditOnly);
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportingCurrencyCreditTotal</Name>
				<Source><![CDATA[
    public boolean reportingCurrencyCreditTotal()
    {
        // <GEERU>
        return (this.parmShowTransModeControl_RU() && this.parmShowTransModeControl_RU().selection() == LedgerBondShowTransMode_RU::ShowDebitOnly);
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportingCurrencyDebitTotal</Name>
				<Source><![CDATA[
    public boolean reportingCurrencyDebitTotal()
    {
        // <GEERU>
        return (this.parmShowTransModeControl_RU() && this.parmShowTransModeControl_RU().selection() == LedgerBondShowTransMode_RU::ShowCreditOnly);
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionCurrencyCreditTotal</Name>
				<Source><![CDATA[
    public boolean transactionCurrencyCreditTotal()
    {
        // <GEERU>
        return (this.parmShowTransModeControl_RU() && this.parmShowTransModeControl_RU().selection() == LedgerBondShowTransMode_RU::ShowDebitOnly);
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionCurrencyDebitTotal</Name>
				<Source><![CDATA[
    public boolean transactionCurrencyDebitTotal()
    {
        // <GEERU>
        return (this.parmShowTransModeControl_RU() && this.parmShowTransModeControl_RU().selection() == LedgerBondShowTransMode_RU::ShowCreditOnly);
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSubledgerJournalAccountEntryView</Name>
				<Source><![CDATA[
    public SubledgerJournalAccountEntryViewModel newFromSubledgerJournalAccountEntryView(
        SubledgerJournalAccountEntryFormView      _subledgerJournalAccountEntryFormView)
    {
        SubledgerJournalAccountEntryViewModel     newSubledgerJournalAccountEntryViewModel;

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            newSubledgerJournalAccountEntryViewModel = SubledgerJournalAccEntryVwMod_MulDoc_RU::newIfApplicable(_subledgerJournalAccountEntryFormView);
            if (newSubledgerJournalAccountEntryViewModel)
            {
                return newSubledgerJournalAccountEntryViewModel;
            }
        }
        // </GEERU>

        return newSubledgerJournalAccountEntryViewModel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>