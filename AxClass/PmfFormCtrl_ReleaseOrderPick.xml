<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfFormCtrl_ReleaseOrderPick</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PmfFormCtrl_ReleaseOrderPick</c> class is the base class for form control classes
/// for the release order picking
/// </summary>
class PmfFormCtrl_ReleaseOrderPick extends PmfFormCtrl
{
    //
    // controls to be turned on, if cw item
    //
    Array   cwInventOnhandCtrls;
    //
    // controls to be turned off, if cw item
    //
    Array   stdInventOnhandCtrls;

    FormControl reserveNow;
    FormControl cwReserveNow;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCWSubControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a catch weight sub form control.
    /// </summary>
    /// <remarks>
    /// The method must be overriden by derived classes to add a catch weight form control
    /// class as a sub form control.
    /// </remarks>
    protected void addCWSubControl()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds all catch weight related form controls to the control collection.
    /// </summary>
    public void initPost()
    {
        super();

        if (cwInventOnhandCtrls.lastIndex())
        {
            cwInventOnhandCtrls = new Array(Types::Class);
        }
        if (stdInventOnhandCtrls.lastIndex())
        {
            stdInventOnhandCtrls = new Array(Types::Class);
        }

        cwInventOnhandCtrls.value(cwInventOnhandCtrls.lastIndex()+1,
            formRun.design().controlName(formControlStr(SalesReleaseOrderPicking,PdsCWPhysicalInvent)));

        cwInventOnhandCtrls.value(cwInventOnhandCtrls.lastIndex()+1,
            formRun.design().controlName(formControlStr(SalesReleaseOrderPicking,PdsCWReservPhysical)));

        cwInventOnhandCtrls.value(cwInventOnhandCtrls.lastIndex()+1,
            formRun.design().controlName(formControlStr(SalesReleaseOrderPicking,PdsCWAvailPhysical)));

        cwInventOnhandCtrls.value(cwInventOnhandCtrls.lastIndex()+1,
            formRun.design().controlName(formControlStr(SalesReleaseOrderPicking,PdsCWPickOrWMSOrderNotReserved)));

        cwInventOnhandCtrls.value(cwInventOnhandCtrls.lastIndex()+1,
            formRun.design().controlName(formControlStr(SalesReleaseOrderPicking,PdsCWAvailableForActivation)));

        cwInventOnhandCtrls.value(cwInventOnhandCtrls.lastIndex()+1,
            formRun.design().controlName(formControlStr(SalesReleaseOrderPicking,PdsCWPickOrWMSorderNotReserved)));

        reserveNow = formRun.design().controlName(identifierstr(ReserveNow));
        cwReserveNow = formRun.design().controlName(formControlStr(SalesReleaseOrderPicking,PdsCWReserveNow));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPre</Name>
				<Source><![CDATA[
    /// <summary>
    /// Triggers the addition of the catch weight form control.
    /// </summary>
    public void initPre()
    {
        super();
        this.addCWSubControl();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCWItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the item on the line is a catch weight item.
    /// </summary>
    /// <returns>
    /// true if the item is a catch weight item; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The implementation of the method on this base class always returns false.
    /// The method must be overridden by derived classes to determine if the item
    /// on the actual line is a catch weight item.
    /// </remarks>
    protected boolean isCWItem()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();

        cwInventOnhandCtrls = new Array(Types::Class);
        stdInventOnhandCtrls = new Array(Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the form design.
    /// </summary>
    public void updateDesign()
    {
        FormControl control;
        int         i;
        boolean     isCWItem = this.isCWItem();

        super();

        for (i = 1; i <= cwInventOnhandCtrls.lastIndex(); i++)
        {
            control = cwInventOnhandCtrls.value(i);
            control.allowEdit(isCWItem);
        }
        for (i = 1; i <= stdInventOnhandCtrls.lastIndex(); i++)
        {
            control = stdInventOnhandCtrls.value(i);
            control.allowEdit(!isCWItem);
        }

        reserveNow.allowEdit(!isCWItem);
        reserveNow.skip(isCWItem);

        cwReserveNow.allowEdit(isCWItem);
        cwReserveNow.skip(!isCWItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PmfFormCtrl_ReleaseOrderPick construct()
    {
        return new PmfFormCtrl_ReleaseOrderPick();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of a <c>PmfFormCtrl_ReleaseOrderPick</c> derived class for the form.
    /// </summary>
    /// <param name="_fr">
    /// <c>FormRun</c> object of caller.
    /// </param>
    /// <returns>
    /// The form control instance for the form.
    /// </returns>
    public static PmfFormCtrl_ReleaseOrderPick newForm(FormRun _fr)
    {
        PmfFormCtrl_ReleaseOrderPick    cwCtrl;

        switch (_fr.name())
        {
            case formstr(InventTransferReleaseOrderPicking):
                cwCtrl = PmfFormCtrl_InventTransRelOrdPick::construct();
                break;
            case formstr(SalesReleaseOrderPicking):
                cwCtrl = PmfFormCtrl_SalesLineRelPick::construct();
                break;
            default:
                return null;
        }
        cwCtrl.parmFormRun(_fr);
        return cwCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>