<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUpd_ChangeDimensionIssueQueryStrategy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventUpd_ChangeDimensionIssueQueryStrategy</c> class is used to determine for which issue inventory transactions inventory dimensions should be changed.
/// </summary>
public abstract class InventUpd_ChangeDimensionIssueQueryStrategy
{
    InventMovement  movement;
    InventDim       inventDimCriteria;
    InventDimParm   inventDimParm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current instance from an inventory dimension change update.
    /// </summary>
    /// <param name = "_changeDimensionUpdate">The inventory update to use for initialization.</param>
    protected void initialize(InventUpd_ChangeDimension _changeDimensionUpdate)
    {
        movement = _changeDimensionUpdate.movement();
        inventDimCriteria = _changeDimensionUpdate.parmFromInventDimCriteria();
        inventDimParm = _changeDimensionUpdate.parmFromInventDimParm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIssueInventTransactionsToUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the first issue inventory transaction to be updated.
    /// </summary>
    /// <returns>The first <c>InventTrans</c> record to be updated.</returns>
    /// <remarks>The returned <c>InventTrans</c> record can be iterated over to get all the inventory transactions that should be updated.</remarks>
    public abstract InventTrans getIssueInventTransactionsToUpdate()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>