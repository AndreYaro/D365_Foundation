<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PaymCalendarSourceVendConsInvoice_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PaymCalendarSourceVendConsInvoice_JP</c> class provides an interface used to find
/// payment calendars when the source is the <c>PaymCalendarSourceVendConsInvoice_JP</c> table.
/// </summary>
public class PaymCalendarSourceVendConsInvoice_JP implements PaymCalendarIDerivationSource, PaymCalendarIBankAddress
{
    public VendConsInvoice_JP vendConsInvoice;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBankPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the postal address associated to the bank account.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record that represents the postal address.
    /// </returns>
    public LogisticsPostalAddress getBankPostalAddress()
    {
        VendTable vendTable;
        VendBankAccount vendBankAccount;

        vendTable = VendTable::findByCompany(vendConsInvoice.dataAreaId, vendConsInvoice.VendTable);
        vendBankAccount = VendBankAccount::findByCompany(vendTable.DataAreaId, vendTable.AccountNum, vendTable.BankAccount);

        return LogisticsLocationEntity::location2PostalAddress(vendBankAccount.Location);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrimaryPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the postal address associated to the third party entity.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record that represents the postal address.
    /// </returns>
    public LogisticsPostalAddress getPrimaryPostalAddress()
    {
        VendTable vendTable;

        vendTable = VendTable::findByCompany(vendConsInvoice.DataAreaId, vendConsInvoice.VendTable);

        return vendTable.postalAddress();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the payment calendar derivation source instance for the specified record.
    /// </summary>
    /// <param name="_vendConsInvoice">
    /// A populated <c>VendConsInvoice_JP</c> table buffer that specifies the initialization data.
    /// </param>
    public void initialize(VendConsInvoice_JP _vendConsInvoice)
    {
        vendConsInvoice = _vendConsInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModuleType</Name>
				<Source><![CDATA[
    public PaymCalendarModuleType parmModuleType()
    {
        return PaymCalendarModuleType::Vendor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public PaymMode parmPaymMode()
    {
        return vendConsInvoice.getVendInvoiceJourWithSmallestId().purchTable().PaymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymTermDataAreaId</Name>
				<Source><![CDATA[
    public DataAreaId parmPaymTermDataAreaId()
    {
        return vendConsInvoice.dataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymTermId</Name>
				<Source><![CDATA[
    public PaymTermId parmPaymTermId()
    {
        return vendConsInvoice.PaymTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>PaymCalendarSourceVendConsInvoice_JP</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>PaymCalendarSourceVendConsInvoice_JP</c> class.
    /// </returns>
    private static PaymCalendarSourceVendConsInvoice_JP construct()
    {
        return new PaymCalendarSourceVendConsInvoice_JP();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdjustedDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the adjusted due date so it falls on a business day per calendar rules.
    /// </summary>
    /// <param name="_dueDate">
    /// The original due date.
    /// </param>
    /// <param name="_updatePolicy">
    /// A value that specifies the search direction when seeking the next valid business day.
    /// </param>
    /// <param name="_vendConsInvoice">
    /// The vendor consolidated invoice table buffer that specifies the calendar source.
    /// </param>
    /// <returns>
    /// An instance of <c>PaymCalendarAdjustedDate</c> which contains the adjusted due date
    /// together with the calendar and rule that was applied when adjusting the date.
    /// </returns>
    /// <remarks>
    /// If no adjustment is needed, the original date is returned. An empty record ID is returned
    /// for the payment calendar and calendar rule whenever a calendar is not found.
    /// </remarks>
    public static PaymCalendarAdjustedDate getAdjustedDueDate(
        DueDate _dueDate,
        PaymentDueDateUpdatePolicy _updatePolicy,
        VendConsInvoice_JP _vendConsInvoice)
    {
        return PaymCalendarSourceVendConsInvoice_JP::getAdjustedDueDatePrivate(_dueDate, _updatePolicy, _vendConsInvoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdjustedDueDatePrivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the adjusted due date so it falls on a business day per calendar rules.
    /// </summary>
    /// <param name="_dueDate">
    /// The original due date.
    /// </param>
    /// <param name="_updatePolicy">
    /// A value that specifies the search direction when seeking the next valid business day.
    /// </param>
    /// <param name="_vendConsInvoice">
    /// The vendor consolidated invoice table buffer that specifies the calendar source.
    /// </param>
    /// <returns>
    /// An instance of <c>PaymCalendarAdjustedDate</c> which contains the adjusted due date
    /// together with the calendar and rule that was applied when adjusting the date.
    /// </returns>
    public static PaymCalendarAdjustedDate getAdjustedDueDatePrivate(
        DueDate _dueDate,
        PaymentDueDateUpdatePolicy _updatePolicy,
        VendConsInvoice_JP _vendConsInvoice)
    {
        PaymCalendarSourceVendConsInvoice_JP calendarSource;
        PaymCalendarProcessor paymCalendarProcessor;
        PaymCalendarAdjustedDate paymCalendarAdjustedDate;

        paymCalendarProcessor = PaymCalendarProcessor::construct();
        calendarSource = PaymCalendarSourceVendConsInvoice_JP::newCalendarSource(_vendConsInvoice);
        paymCalendarAdjustedDate = paymCalendarProcessor.getAdjustedDate(_dueDate, _updatePolicy, calendarSource);

        return paymCalendarAdjustedDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCalendarSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>PaymCalendarSourceVendConsInvoice_JP</c> class.
    /// </summary>
    /// <param name="_vendConsInvoice">
    /// The <c>VendConsInvoice_JP</c> record to load.
    /// </param>
    /// <returns>
    /// A new instance of the <c>PaymCalendarSourceVendConsInvoice_JP</c> class.
    /// </returns>
    public static PaymCalendarSourceVendConsInvoice_JP newCalendarSource(VendConsInvoice_JP _vendConsInvoice)
    {
        PaymCalendarSourceVendConsInvoice_JP paymCalendarSourceVendConsInvoice;

        paymCalendarSourceVendConsInvoice = PaymCalendarSourceVendConsInvoice_JP::construct();
        paymCalendarSourceVendConsInvoice.initialize(_vendConsInvoice);

        return paymCalendarSourceVendConsInvoice;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>