<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkExecuteDisplayGetUniqueInventStatusWithPhysicalOnHandThrowContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWorkExecuteDisplayGetUniqueInventStatusWithPhysicalOnHandThrowContext</c> class is used to determine whether an exception should be thrown
/// when calling the getUniqueInventStatusWithPhysicalOnHand method from the <c>WhsWorkExecuteDisplay</c> class.
/// </summary>
internal final class WHSWorkExecuteDisplayGetUniqueInventStatusWithPhysicalOnHandThrowContext implements System.IDisposable
{
    private static WHSWorkExecuteDisplayGetUniqueInventStatusWithPhysicalOnHandThrowContext  instance;

    private boolean mustThrowIfNoUniqueStatus;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    public void Dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSWorkExecuteDisplayGetUniqueInventStatusWithPhysicalOnHandThrowContext construct()
    {
        return new WHSWorkExecuteDisplayGetUniqueInventStatusWithPhysicalOnHandThrowContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSWorkExecuteDisplayGetUniqueInventStatusWithPhysicalOnHandThrowContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setThrowIfNoUniqueStatus</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSWorkExecuteDisplayGetUniqueInventStatusWithPhysicalOnHandThrowContext setThrowIfNoUniqueStatus(boolean _mustThrowIfNoUniqueStatus)
    {
        mustThrowIfNoUniqueStatus = _mustThrowIfNoUniqueStatus;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>throwIfNoUniqueStatus</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean throwIfNoUniqueStatus()
    {
        return mustThrowIfNoUniqueStatus;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>