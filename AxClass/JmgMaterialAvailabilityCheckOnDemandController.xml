<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgMaterialAvailabilityCheckOnDemandController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgMaterialAvailabilityCheckOnDemandController</c> class acts as a controller for the
///    <c>JmgMaterialAvailabilityCheckOnDemandService</c> service.
/// </summary>
internal final class JmgMaterialAvailabilityCheckOnDemandController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super(classStr(JmgMaterialAvailabilityCheckOnDemandService), methodStr(JmgMaterialAvailabilityCheckOnDemandService, materialAvailabilityCheck), SysOperationExecutionMode::Synchronous);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCaption</Name>
				<Source><![CDATA[
    public ClassDescription defaultCaption()
    {
        return "@SCM:JmgMaterialAvailabilityCheck";
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
     internal static JmgMaterialAvailabilityCheckOnDemandController construct(Args _args, SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        if (_args.caller() && _args.caller().name() != formStr(JmgShopSupervisorReleaseOrders))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        JmgMaterialAvailabilityCheckOnDemandController controller = new JmgMaterialAvailabilityCheckOnDemandController();
        controller.initContract(_args, controller);
        controller.parmExecutionMode(_executionMode);
        controller.parmArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        JmgMaterialAvailabilityCheckOnDemandController::construct(_args).startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initContract</Name>
				<Source><![CDATA[
    private void initContract(Args _args, JmgMaterialAvailabilityCheckOnDemandController _controller)
    {
        JmgMaterialAvailabilityCheckOnDemandContract contract = _controller.getDataContractObject() as JmgMaterialAvailabilityCheckOnDemandContract;

        if (contract)
        {
            ProdTableTmpFilter prodOrders = _args.caller().getProductionOrderIds(true);
            contract.parmSelectedProdOrders(List::create( _args.caller().parmProdIdsSelected().pack()));
            contract.parmFormRun(_args.caller());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>