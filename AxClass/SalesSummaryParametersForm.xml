<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesSummaryParametersForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesSummaryParametersForm
{
    SalesSummaryFields  salesSummaryFields;

    FormListControl     selected;
    FormListControl     notSelected;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addFields</Name>
				<Source><![CDATA[
    void addFields()
    {
        SalesSummaryParameters  salesSummaryParameters;
        container               fieldIdList;

        int idx = notSelected.getNextItem(FormListNext::Selected);

        ttsbegin;

        while (idx != -1)
        {
            int fieldId = notSelected.getItem(idx).data();

            if (salesSummaryFields.addFieldAllowed(fieldId))
            {
                salesSummaryParameters.clear();
                salesSummaryParameters.initValue();
                salesSummaryParameters.DocumentStatus   = this.documentStatus();
                salesSummaryParameters.FieldId          = fieldId;
                salesSummaryParameters.insert();
                fieldIdList += fieldId;
            }
            else
                checkFailed(strfmt("@SYS57775", SalesSummaryParameters::fieldName(fieldId), this.documentStatus()));

            idx = notSelected.getNextItem(FormListNext::Selected, idx);
        }

        salesSummaryFields.invalidateItemCache();

        this.fillViews();
        SalesSummaryParametersForm::selectFields(selected, fieldIdList);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    DocumentStatus documentStatus()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillNotSelected</Name>
				<Source><![CDATA[
    void fillNotSelected()
    {
        notSelected.deleteAll();

        salesSummaryFields.initNotSelected();

        fieldId fieldId = salesSummaryFields.nextNotSelected();

        while (fieldId)
        {
            if (SalesSummaryParameters::fieldEnabled(fieldId))
            {
                FormListItem formListItem = new FormListItem(SalesSummaryParameters::fieldName(fieldId), 0, fieldId);
                notSelected.addItem(formListItem);
            }
            fieldId = salesSummaryFields.nextNotSelected();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillSelected</Name>
				<Source><![CDATA[
    void fillSelected()
    {
        selected.deleteAll();

        salesSummaryFields.initSelected();

        fieldId fieldId = salesSummaryFields.nextSelected();

        while (fieldId)
        {
            if (SalesSummaryParameters::fieldEnabled(fieldId))
            {
                FormListItem formListItem = new FormListItem(SalesSummaryParameters::fieldName(fieldId), 0, fieldId);
                selected.addItem(formListItem);
            }
            fieldId = salesSummaryFields.nextSelected();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillViews</Name>
				<Source><![CDATA[
    void fillViews()
    {
        this.fillSelected();
        this.fillNotSelected();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(FormListControl _selected, FormListControl _notSelected)
    {
        salesSummaryFields  = SalesSummaryFields::construct(this.documentStatus());

        selected            = _selected;
        notSelected         = _notSelected;

        selected.addColumn(1,new FormListColumn("@SYS3852",1, 300));
        notSelected.addColumn(1,new FormListColumn("@SYS3852",1, 300));
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeFields</Name>
				<Source><![CDATA[
    void removeFields()
    {
        container               fieldIdList;

        int idx = selected.getNextItem(FormListNext::Selected);

        ttsbegin;
        while (idx != -1)
        {
            int fieldId = selected.getItem(idx).data();

            if (salesSummaryFields.removeFieldAllowed(fieldId))
            {
                SalesSummaryParameters salesSummaryParameters = SalesSummaryParameters::find(this.documentStatus(), fieldId, true);
                salesSummaryParameters.delete();
                fieldIdList += fieldId;
            }
            else
                checkFailed(strfmt("@SYS57774", SalesSummaryParameters::fieldName(fieldId), this.documentStatus()));

            idx = selected.getNextItem(FormListNext::Selected, idx);
        }

        salesSummaryFields.invalidateItemCache();

        this.fillViews();
        SalesSummaryParametersForm::selectFields(notSelected, fieldIdList);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SalesSummaryParametersForm construct(DocumentStatus   documentStatus,
                                                FormListControl _selected,
                                                FormListControl _notSelected)
    {
        switch (documentStatus)
        {
            case DocumentStatus::Quotation          :   return new SalesSummaryParametersForm_Quotation     (_selected, _notSelected);
            case DocumentStatus::Confirmation       :   return new SalesSummaryParametersForm_Confirmation  (_selected, _notSelected);
            case DocumentStatus::PickingList        :   return new SalesSummaryParametersForm_PickingList   (_selected, _notSelected);
            case DocumentStatus::PackingSlip        :   return new SalesSummaryParametersForm_PackingSlip   (_selected, _notSelected);
            case DocumentStatus::Invoice            :   return new SalesSummaryParametersForm_Invoice       (_selected, _notSelected);
            // <GEERU>
            case DocumentStatus::Invoice4Paym_RU    :   return new SalesSummaryParametersForm_Inv4Paym_RU   (_selected, _notSelected);
            // </GEERU>
        }
        throw error(strfmt("@SYS19306",funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldIdxInList</Name>
				<Source><![CDATA[
    static int fieldIdxInList(container fieldIdList, int fieldId)
    {
        return confind(fieldIdList, fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectFields</Name>
				<Source><![CDATA[
    static void selectFields(FormListControl formListControl, container fieldIdList)
    {
        int idx = formListControl.getNextItem(FormListNext::All);

        while (idx != -1)
        {
            FormListItem formListItem = formListControl.getItem(idx);
            int fieldId = formListItem.data();
            formListItem.stateSelected(SalesSummaryParametersForm::fieldIdxInList(fieldIdList, fieldId) > 0);
            formListControl.setItem(formListItem);
            idx = formListControl.getNextItem(FormListNext::All, idx);
        }
        formListControl.setFocus();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
