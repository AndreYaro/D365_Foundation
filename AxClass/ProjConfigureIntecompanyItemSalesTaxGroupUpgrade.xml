<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjConfigureIntecompanyItemSalesTaxGroupUpgrade</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjConfigureIntecompanyItemSalesTaxGroupUpgrade</c> contains upgrade scripts for table field <c>ProjParameters.ConfigureIntecompanyItemSalesTaxGroup</c> in case the environment has <c>ProjItemTaxGroupOverrideIntercompanyCustInvFlight_KillSwitch</c> enabled.
/// </summary>
[
    SysSetupTable(tableStr(ProjParameters)),
    SysSetupConfig(true, 300, 1.0)
]
internal final class ProjConfigureIntecompanyItemSalesTaxGroupUpgrade extends SysSetupAsync implements SysSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements the loadData method of the <c>SysSetup</c> interface.
    /// </summary>
    public void loadData()
    {
        if (!ProjItemTaxGroupOverrideIntercompanyCustInvFlight::instance().isEnabled())
        {
            this.initializeConfigureIntercompanyItemSalesTaxGroupForAllCompanies(
                ProjConfigureIntercompanyItemSalesTaxGroup::ByProjectCategory);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeConfigureIntercompanyItemSalesTaxGroupForAllCompanies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize field <c>ConfigureIntercompanyItemSalesTaxGroup</c> for all companies by the specified enum value.
    /// </summary>
    /// <param name = "_intercompanyItemSalesTaxGroupConfig">Enum <c>ProjConfigureIntercompanyItemSalesTaxGroup</c> value.</param>
    /// <remarks>
    /// This method should only be called by ProjSysSetup to initialize the field <c>ConfigureIntercompanyItemSalesTaxGroup</c> value.
    /// </remarks>
    internal void initializeConfigureIntercompanyItemSalesTaxGroupForAllCompanies(
        ProjConfigureIntercompanyItemSalesTaxGroup _intercompanyItemSalesTaxGroupConfig)
    {
        ProjParameters crossCompaniesParameters;

        crossCompaniesParameters.skipDataMethods(true);
        crossCompaniesParameters.skipDatabaseLog(true);
        crossCompaniesParameters.skipEvents(true);

        ttsbegin;
        update_recordset crosscompany crossCompaniesParameters
            setting ConfigureIntercompanyItemSalesTaxGroup = _intercompanyItemSalesTaxGroupConfig
            where crossCompaniesParameters.ConfigureIntercompanyItemSalesTaxGroup != _intercompanyItemSalesTaxGroupConfig;
        ttscommit;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>