<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ThresholdSectionType_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ThresholdSectionType_IN</c> class is operation class of table <c>ThresholdSection_IN</c>.
/// </summary>
class ThresholdSectionType_IN extends Object
{
    ThresholdSections_IN    thresholdSection;
    RefTableId              sourceReferenceTableId;
    RefRecId                sourceReferenceRecId;
    Thresholdtype_IN        thresholdtype;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkThresholdSectionCreate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates whether <c>ThresholdSection_IN</c> can be created.
    /// </summary>
    /// <returns>
    ///     Returns true if <c>ThresholdSection_IN</c> can be created; otherwise, false;
    /// </returns>
    public boolean checkThresholdSectionCreate()
    {
        boolean         ret = true;
        DialogButton    questionResult;

        if (thresholdtype.existsOtherReference(sourceReferenceTableId, sourceReferenceRecId))
        {
            //The threshold is referenced by other entities. If you modify this threshold, it will affect all the references. Do you want to continue?
            questionResult = Box::yesNo("@SYS4003342", DialogButton::No);
            ret = (questionResult == DialogButton::Yes);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkThresholdSectionDeleted</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates whether the <c>ThresholdSection_IN</c> can be deleted.
    /// </summary>
    /// <returns>
    ///     Returns true if <c>ThresholdSection_IN</c> can be deleteed; otherwise, false;
    /// </returns>
    protected boolean checkThresholdSectionDeleted()
    {
        boolean         ret = true;
        DialogButton    questionResult;

        ret = thresholdSection.validateDelete();
        if (ret && thresholdtype.existsOtherReference(sourceReferenceTableId, sourceReferenceRecId))
        {
            //The threshold is referenced by other entities. If you modify this threshold, it will affect all the references. Do you want to continue?
            questionResult = Box::yesNo("@SYS4003342", DialogButton::No);
            ret = (questionResult == DialogButton::Yes);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkThresholdSectionUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates whether <c>ThresholdSection_IN</c> can be udpated.
    /// </summary>
    /// <returns>
    ///     Returns true if <c>ThresholdSection_IN</c> can be updated; otherwise, false;
    /// </returns>
    protected boolean checkThresholdSectionUpdate()
    {
        boolean         ret = true;
        DialogButton    questionResult;

        if (thresholdtype.existsOtherReference(sourceReferenceTableId, sourceReferenceRecId))
        {
            //The threshold is referenced by other entities. If you modify this threshold, it will affect all the references. Do you want to continue?
            questionResult = Box::yesNo("@SYS4003342", DialogButton::No);
            ret = (questionResult == DialogButton::Yes);
        }

        if (ret && thresholdSection.hasChildren())
        {
            //If you modify this threshold, it will affect the subsections. Do you want to continue?
            questionResult = Box::yesNo("@SYS4003343", DialogButton::No);
            ret = (questionResult == DialogButton::Yes);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAllReferenceData</Name>
				<Source><![CDATA[
    private void deleteAllReferenceData()
    {
        this.deleteAllReferenceDataOnServer();

        ThresholdSectionType_IN::constructOnServer(thresholdtype, sourceReferenceTableId, sourceReferenceRecId, thresholdSection).deleteAllReferenceDataOnServer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAllReferenceDataOnServer</Name>
				<Source><![CDATA[
    private void deleteAllReferenceDataOnServer()
    {
        ThresholdReference_IN   thresholdreference;
        ThresholdSectionType_IN thresholdSectionTypeRef;

        while select ReferenceTableId from thresholdreference
            group by ReferenceTableId
            where thresholdreference.Threshold == thresholdSection.Threshold
        {
            thresholdSectionTypeRef = ThresholdSectionTypeFactory_IN::newThresholdSectionType(thresholdreference.ReferenceTableId);
            thresholdSectionTypeRef.parmThresholdSections(thresholdSection);
            thresholdSectionTypeRef.deleteReferenceData();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteReferenceData</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Deletes reference data for current <c>ThresholdSection_IN</c>.
    /// </summary>
    protected void deleteReferenceData()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteThresholdSection</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Deletes current <c>ThresholdSection_IN</c>.
    /// </summary>
    /// <returns>
    ///     Returns true if delete successfully; otherwise, false;
    /// </returns>
    public boolean deleteThresholdSection()
    {
        boolean ret = false;

        if (this.checkThresholdSectionDeleted())
        {
            ttsBegin;

            if (thresholdSection.IsLeaf)
            {
                this.deleteAllReferenceData();
            }

            thresholdSection.delete();
            ret =  true;
            ttsCommit;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSectionNodeRepresentName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets <c>ThresholdSection_IN</c> represent name.
    /// </summary>
    /// <returns>
    ///     Returns <c>ThresholdSection_IN</c> represent name.
    /// </returns>
    public str getSectionNodeRepresentName()
    {
        str LowLimit;
        str UpLimit;
        str ValidFrom;
        str ValidTo;

        //LowLimit
        if (thresholdSection.LowLimit == 0)
        {
            LowLimit = "@SYS24272";
        }
        else
        {
            LowLimit = strFmt("@SYS82282", thresholdSection.LowLimit);
        }

        //UpLimit
        if (thresholdSection.UpLimit == 0)
        {
            UpLimit = "@SYS4003338";
        }
        else
        {
            UpLimit = strFmt("@SYS82282", thresholdSection.UpLimit);
        }

        //ValidFrom
        if (thresholdSection.ValidFrom == dateNull())
        {
            ValidFrom = "@SYS4003339";
        }
        else
        {
            ValidFrom = strFmt("@SYS82282",thresholdSection.ValidFrom);
        }

        //ValidTo
        if (thresholdSection.ValidTo == dateNull())
        {
            ValidTo = "@SYS4003340";
        }
        else
        {
            ValidTo = strFmt("@SYS82282", thresholdSection.ValidTo);
        }

        return strFmt("@SYS4003341",
            thresholdSection.ThresholdCalculationType,
            LowLimit,
            UpLimit,
            ValidFrom,
            ValidTo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Init <c>ThresholdSectionType_IN</c> instance.
    /// </summary>
    /// <param name="_thresholdtype">
    ///     The <c>ThresholdType_IN</c> instance.
    /// </param>
    /// <param name="_sourceReferenceTableId">
    ///     The tableId of the reference instance.
    /// </param>
    /// <param name="_sourceReferenceRecId">
    ///     The recId of the reference instance.
    /// </param>
    /// <param name="_thresholdSections">
    ///     The <c>Threshold_INSections</c> instance.
    /// </param>
    protected void init(
        ThresholdType_IN        _thresholdtype,
        RefTableId              _sourceReferenceTableId,
        RefRecId                _sourceReferenceRecId,
        ThresholdSections_IN    _thresholdSections)
    {
        this.parmThresholdType(_thresholdtype);
        this.setSourceReferenceTableId(_sourceReferenceTableId);
        this.setSourceReferenceRecId(_sourceReferenceRecId);
        this.parmThresholdSections(_thresholdSections);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertThresholdSection</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts <c>ThresholdSection_IN</c>.
    /// </summary>
    /// <returns>
    ///     Returns true if insert successfully; otherwise, false;
    /// </returns>
    public boolean insertThresholdSection()
    {
        boolean ret = false;
        if (thresholdSection.validateWrite())
        {
            ttsBegin;
            thresholdSection.insert();
            ret = true;
            ttsCommit;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmThresholdSections</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets and Gets <c>ThresholdSection_IN</c>.
    /// </summary>
    /// <param name="_thresholdSection">
    ///     The <c>ThresholdSection_IN</c>.
    /// </param>
    /// <returns>
    ///     Returns <c>ThresholdSection_IN</c>.
    /// </returns>
    public ThresholdSections_IN parmThresholdSections(ThresholdSections_IN _thresholdSection = thresholdSection)
    {
        thresholdSection = _thresholdSection;
        return thresholdSection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmThresholdType</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets and Gets <c>ThresholdType_IN</c>.
    /// </summary>
    /// <param name="_thresholdType">
    ///     The <c>ThresholdType_IN</c>.
    /// </param>
    /// <returns>
    ///     Returns <c>ThresholdType_IN</c>.
    /// </returns>
    public ThresholdType_IN parmThresholdType(ThresholdType_IN _thresholdType = thresholdType)
    {
        thresholdType = _thresholdType;
        return thresholdType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSourceReferenceRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the recId of the refernce.
    /// </summary>
    /// <param name="_sourceReferenceRecId">
    ///     The recId of the refernce.
    /// </param>
    protected void setSourceReferenceRecId(RefRecId _sourceReferenceRecId)
    {
        sourceReferenceRecId = _sourceReferenceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSourceReferenceTableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the tableId of the refernce.
    /// </summary>
    /// <param name="_sourceReferenceTableId">
    ///     The tableId of the refernce.
    /// </param>
    protected void setSourceReferenceTableId(RefTableId _sourceReferenceTableId)
    {
        sourceReferenceTableId = _sourceReferenceTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateThresholdSection</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Update <c>ThresholdSection_IN</c>.
    /// </summary>
    /// <returns>
    ///     eturns true if update successfully; otherwise, false;
    /// </returns>
    public boolean updateThresholdSection()
    {
        boolean ret = false;
        if (this.checkThresholdSectionUpdate())
        {
            ttsBegin;
            thresholdSection.selectForUpdate(true);
            thresholdSection.update();
            ret = true;
            ttsCommit;
        }
        else
        {
            thresholdSection.data(thresholdSection.orig());
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs a <c>ThresholdSectionType_IN</c> instance.
    /// </summary>
    /// <param name="_thresholdType">
    ///     The <c>ThresholdType_IN</c> instance.
    /// </param>
    /// <param name="_thresholdSections">
    ///     The <c>ThresholdSections_IN</c> instance.
    /// </param>
    /// <param name="_sourceReferenceTableId">
    ///     The tableId of the reference instance.
    /// </param>
    /// <param name="_sourceReferenceRecId">
    ///     The recId of the reference instance.
    /// </param>
    /// <returns>
    ///     Returns a <c>ThresholdSectionType_IN</c> instance.
    /// </returns>
    public static ThresholdSectionType_IN construct(
        ThresholdType_IN        _thresholdType,
        ThresholdSections_IN    _thresholdSections,
        RefTableId              _sourceReferenceTableId = 0,
        RefRecId                _sourceReferenceRecId = 0)
    {
        ThresholdSectionType_IN thresholdSectionType;
        thresholdSectionType = ThresholdSectionTypeFactory_IN::newThresholdSectionType(_sourceReferenceTableId);
        thresholdSectionType.init(_thresholdType, _sourceReferenceTableId, _sourceReferenceRecId, _thresholdSections);

        return thresholdSectionType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructOnServer</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs a <c>ThresholdSectionType_IN</c> instance on server.
    /// </summary>
    /// <param name="_thresholdType">
    ///     The <c>ThresholdType_IN</c> instance.
    /// </param>
    /// <param name="_sourceReferenceTableId">
    ///     The tableId of the reference instance.
    /// </param>
    /// <param name="_sourceReferenceRecId">
    ///     The recId of the reference instance.
    /// </param>
    /// <param name="_thresholdSections">
    ///     The <c>Threshold_INSections</c> instance.
    /// </param>
    /// <returns>
    ///     Returns a <c>ThresholdSectionType_IN</c> instance.
    /// </returns>
    public static ThresholdSectionType_IN constructOnServer(
        ThresholdType_IN        _thresholdType,
        RefTableId              _sourceReferenceTableId = 0,
        RefRecId                _sourceReferenceRecId = 0,
        ThresholdSections_IN    _thresholdSections = null)
    {
        ThresholdType_IN        thresholdType;
        ThresholdSections_IN    thresholdSection;

        thresholdType       = ThresholdType_IN::construct(Threshold_IN::findByRecId(_thresholdType.parmThreshold().RecId));
        thresholdSection    = ThresholdSections_IN::findByRecId(_thresholdSections.RecId);

        return ThresholdSectionType_IN::construct(thresholdType, _thresholdSections, _sourceReferenceTableId, _sourceReferenceRecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>