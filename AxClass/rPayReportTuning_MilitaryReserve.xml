<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayReportTuning_MilitaryReserve</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rPayReportTuning_MilitaryReserve extends RPayReportTuning
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
        public void lookup(FormStringControl _lookupCtrl)
    {
        RPayReportTuningTable   reportTuningTableWrk;
        SysTableLookup          sysTableLookup;
        Query                   query = new Query();
        ;
        rPayReportTuningTable = rPayReportTuningTableDs.cursor();

        switch (rPayReportTuningTable.ParameterCode)
        {
            case 1, 2, 3, 4:
                _lookupCtrl.replaceOnLookup(true);

                sysTableLookup = SysTableLookup::newParameters(tableNum(RHRMPersonnelCategory), _lookupCtrl);
                query.addDataSource(tableNum(RHRMPersonnelCategory));

                query.dataSourceNo(1).addRange(fieldNum(RHRMPersonnelCategory, ParentPersonnelCategoryId)).value(SysQuery::valueEmptyString());

                sysTableLookup.addLookupfield(fieldNum(RHRMPersonnelCategory, PersonnelCategoryId));
                sysTableLookup.addLookupfield(fieldNum(RHRMPersonnelCategory, Description));

                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
                break;

            case 5, 6, 7, 8:
                reportTuningTableWrk = RPayReportTuningTable::find(reportName, 4);
                if (reportTuningTableWrk)
                {
                    _lookupCtrl.replaceOnLookup(true);

                    sysTableLookup = SysTableLookup::newParameters(tableNum(RHRMPersonnelCategory), _lookupCtrl);
                    query.addDataSource(tableNum(RHRMPersonnelCategory));

                    query.dataSourceNo(1).addRange(fieldNum(RHRMPersonnelCategory, ParentPersonnelCategoryId)).value(queryValue(reportTuningTableWrk.Parameter));

                    sysTableLookup.addLookupfield(fieldNum(RHRMPersonnelCategory, PersonnelCategoryId));
                    sysTableLookup.addLookupfield(fieldNum(RHRMPersonnelCategory, Description));

                    sysTableLookup.parmQuery(query);
                    sysTableLookup.performFormLookup();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(RPayReportName _reportName, FormRun _formRun)
    {
        parameterName = [literalStr("@RUP3394"),
                         literalStr("@RUP3395"),
                         literalStr("@RUP3396"),
                         literalStr("@RUP3397"),
                         literalStr("@RUP3398"),
                         literalStr("@RUP3399"),
                         literalStr("@RUP3400")];

        super(_reportName,_formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>openReportTemplate</Name>
				<Source><![CDATA[
        public void openReportTemplate()
    {
        ComExcelDocument_RU doc = new ComExcelDocument_RU();
        doc.open(TemplateProvider_RU::getFor(RPayReport_EmplPensionIncome::construct()).get(resourceStr(RHRMReport_6)), true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printReport</Name>
				<Source><![CDATA[
        public void printReport()
    {
        Args args = new Args();
        MenuFunction mf;

        mf = new MenuFunction(menuitemOutputStr(RHRMReport6), MenuItemType::Output);
        mf.enumTypeParameter(enumNum(RHRMReportType));
        mf.enumParameter(RHRMReportType::F6);

        mf.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        RPayReportTuningTable   reportTuningTableWrk;
        RHRMPersonnelCategoryId categoryId;

        rPayReportTuningTable = rPayReportTuningTableDs.cursor();
        categoryId = rPayReportTuningTable.Parameter;

        if (rPayReportTuningTable.Parameter && !RHRMPersonnelCategory::exist(categoryId))
        {
            return checkFailed(strFmt("@GLS106038",
                               rPayReportTuningTable.Parameter,
                               fieldPName(RHRMPersonnelCategory, PersonnelCategoryId),
                               tablePName(RHRMPersonnelCategory)));
        }

        if (rPayReportTuningTable.ParameterCode > 4)
        {
            reportTuningTableWrk = RPayReportTuningTable::find(reportName, 4);
            categoryId = reportTuningTableWrk.Parameter;

            if (categoryId && rPayReportTuningTable.Parameter &&
                RHRMPersonnelCategory::findParentCategory(rPayReportTuningTable.Parameter).PersonnelCategoryId != categoryId)
            {
                return checkFailed(strFmt("@RUP3387", rPayReportTuningTable.Parameter, categoryId));
            }
        }

        if (rPayReportTuningTable.Parameter)
        {
            select firstonly RecId from reportTuningTableWrk
                where reportTuningTableWrk.ReportName == RPayReportName::MilitaryReserve &&
                      reportTuningTableWrk.Parameter  == rPayReportTuningTable.Parameter &&
                      reportTuningTableWrk.RecId      != rPayReportTuningTable.RecId;

            if (reportTuningTableWrk)
            {
                return checkFailed("@RUP3388");
            }
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>