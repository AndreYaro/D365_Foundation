<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayHRMPivotReportEngine</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class rPayHRMPivotReportEngine extends RunBaseBatch
{
    QueryRun                  queryRun;
    RPayHRMPivotTableType     pivotTableType;

    RPayHRMPivotTableData     pivotTableData;
    RPayHRMPivotTableMetaData pivotTableMetaData;

    container                 conNameCodeFieldsSettings;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds data for the report.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// Funcion must be overloaded.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void buildData()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    abstract public ClassDescription caption()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogInit</Name>
				<Source><![CDATA[
    public DialogRunbase dialogInit(DialogRunbase dialog, boolean forceOnClient = false)
    {
        dialog = super(Dialog::newFormnameRunbase(formStr(RPayHRMPivotReportDialog), this), forceOnClient);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayForm</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void displayForm()
    {
        Args        args = new Args();
        FormRun     form;

        args.name(formStr(RPayHRMPivotTableReport));
        args.caller(this);
        form = classfactory.formRunClass(args);
        form.init();
        form.design().caption(this.caption());
        form.run();
        form.detach();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPivotCodeNameFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits pivot fields.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected abstract void initPivotCodeNameFields()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPivotMetadata</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected abstract void initPivotMetadata()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super ();

        pivotTableMetaData = new RPayHRMPivotTableMetaData();
        pivotTableData     = new RPayHRMPivotTableData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pivotTableData</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayHRMPivotTableData pivotTableData()
    {
        ;
        return pivotTableData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pivotTableMetadata</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayHRMPivotTableMetaData pivotTableMetadata()
    {
        return pivotTableMetaData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pivotTableType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayHRMPivotTableType pivotTableType(RPayHRMPivotTableType _type = pivotTableType)
    {
        pivotTableType = _type;
        return pivotTableType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareData</Name>
				<Source><![CDATA[
    private void prepareData()
    {
        this.initPivotMetadata();
        pivotTableData.initMetadata(pivotTableMetaData);

        this.buildData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>query</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query.
    /// </summary>
    /// <returns>
    /// The query.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    abstract Query query()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        if (! queryRun)
        {
            queryRun = new SysQueryRun(this.query());
        }
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rebuildData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rebuilds the data for the report.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void rebuildData()
    {
        try
        {
            this.queryRun().reset();
            pivotTableData.rsClose();
            this.prepareData();
        }
        catch (Exception::Internal)
        {
            retry;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        try
        {
            this.prepareData();
            this.displayForm();
        }
        catch (Exception::Internal)
        {
            retry;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the query.
    /// </summary>
    /// <param name="_query">
    /// The query.
    /// </param>
    /// <exception cref="Exception::Error">
    /// Function must be overloaded.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateQuery(Query _query)
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayHRMPivotReportEngine construct(Args _args)
    {
        RPayHRMPivotReportEngine pivotReportEngine;
        RPayHRMPivotTableType    pivotTableType = _args.parmEnum();

        switch (pivotTableType)
        {
            case RPayHRMPivotTableType::RPayTblTrans:
                pivotReportEngine = new RPayHRMPivotReportEngine_TblTrans();
                break;

            case RPayHRMPivotTableType::RPayTrans:
                pivotReportEngine = new RPayHRMPivotReportEngine_PayTrans();
                break;

            case RPayHRMPivotTableType::RHRMEmplTable:
                pivotReportEngine = new RPayHRMPivotReportEngine_EmplTable();
                break;

            case RPayHRMPivotTableType::RPaySheetTrans:
                pivotReportEngine = new RPayHRMPivotReportEngine_SheetTrans();
                break;

            case RPayHRMPivotTableType::RPayTaxEmplSum:
                pivotReportEngine = new RPayHRMPivotReportEngine_Tax();
                break;

            default:
                throw error("@RUP1730");
        }

        pivotReportEngine.pivotTableType(_args.parmEnum());
        pivotReportEngine.initPivotCodeNameFields();

        return pivotReportEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RPayHRMPivotReportEngine pivotReportEngine = RPayHRMPivotReportEngine::construct(_args);
        ;

        if (pivotReportEngine.prompt())
        {
            pivotReportEngine.runOperation();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>