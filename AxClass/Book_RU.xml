<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Book_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class Book_RU
{
    SalesPurchBookTable_RU      bookTable;
    SalesPurchBookActionType_RU actionType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createBook</Name>
				<Source><![CDATA[
    protected void createBook()
    {
        if (FormDataUtil::getFormDataSource(bookTable))
        {
            FormDataUtil::getFormDataSource(bookTable).research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteBook</Name>
				<Source><![CDATA[
    protected void deleteBook()
    {
        if (this.validateDelete())
        {
            ttsbegin;

            this.deleteTrans();
            bookTable.delete();

            ttscommit;
        }

        if (FormDataUtil::getFormDataSource(bookTable))
        {
            FormDataUtil::getFormDataSource(bookTable).research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTrans</Name>
				<Source><![CDATA[
    protected abstract void deleteTrans()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActionType</Name>
				<Source><![CDATA[
    public SalesPurchBookActionType_RU parmActionType(SalesPurchBookActionType_RU _actionType = actionType)
    {
        actionType = _actionType;

        return actionType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBookTable</Name>
				<Source><![CDATA[
    public SalesPurchBookTable_RU parmBookTable(SalesPurchBookTable_RU _bookTable = bookTable)
    {
        bookTable = _bookTable;

        return bookTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        switch (actionType)
        {
            case SalesPurchBookActionType_RU::CreateBook :
                this.createBook();
                break;

            case SalesPurchBookActionType_RU::DeleteBook :
                this.deleteBook();
                break;

            case SalesPurchBookActionType_RU::UpdateBook :
                this.updateBook();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBook</Name>
				<Source><![CDATA[
    protected void updateBook()
    {
        BookDataCalc_RU        bookDataCalc;
        SalesPurchBookTable_RU bookTableLocal = bookTable.data();

        if (! bookTable.isActiveBook())
        {
            throw error("@GLS101173");
        }

        bookDataCalc = BookDataCalc_RU::newFromBookTable(bookTable);

        bookDataCalc.getLast();

        if (bookDataCalc.prompt())
        {
            bookDataCalc.runOperation();
        }

        if (FormDataUtil::getFormDataSource(bookTable))
        {
            FormDataUtil::getFormDataSource(bookTable).research();
            FormDataUtil::getFormDataSource(bookTable).findRecord(bookTableLocal);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    protected boolean validateDelete()
    {
        if (! SalesPurchBookTable_RU::isLastBook(bookTable))
        {
            throw error("@GLS106681");
        }

        if (! bookTable.isActiveBook() && (FormDataUtil::getFormDataSource(bookTable) && Box::okCancel("@GLS101124", DialogButton::Cancel) != DialogButton::Ok))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        Book_RU book;

        if (! _args || (_args.parmEnumType() != enumnum(SalesPurchBookActionType_RU)) || ! _args.dataset())
        {
            throw error("@SYS59121");
        }

        book = Book_RU::newFromBookTable(_args.parmEnum(), _args.record());

        book.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBookTable</Name>
				<Source><![CDATA[
    public static Book_RU newFromBookTable(SalesPurchBookActionType_RU _actionType,
                                           SalesPurchBookTable_RU      _bookTable)
    {
        Book_RU book;

        switch (_bookTable.TableId)
        {
            case tablenum(PurchBookTable_RU) :
                book = new Book_Purch_RU();
                break;

            case tablenum(SalesBookTable_RU) :
                book = new Book_Sales_RU();
                break;

            default :
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        book.parmActionType(_actionType);
        book.parmBookTable(_bookTable);

        return book;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>