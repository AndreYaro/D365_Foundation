<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesConfirmDPConfirmationLineQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesConfirmDPConfirmationLineQuery</c> builds the query used to retrieve sales confirmation lines in the <c>SalesConfirmDP</c> class.
/// </summary>
public class SalesConfirmDPConfirmationLineQuery extends SysCommonCollectionQuery
{
    private QueryBuildDataSource    custConfirmTrans;
    private QueryBuildDataSource    custConfirmTransInventDim;

    private SalesConfirmDP          salesConfirmDP;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds data sources to the confirmation line query.
    /// </summary>
    /// <param name = "_query">
    /// The <c>Query</c> object where data sources will be added to.
    /// </param>
    protected void addDataSources(Query _query)
    {
        this.addCustConfirmTrans(_query);
        this.addCustConfirmTransInventDim(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustConfirmTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>CustConfirmTrans</c> table as a data source to the confirmation line query.
    /// </summary>
    /// <param name = "_query">
    /// The confirmation line query object.
    /// </param>
    protected void addCustConfirmTrans(Query _query)
    {
        custConfirmTrans = _query.addDataSource(tableNum(CustConfirmTrans));

        custConfirmTrans.addRange(fieldNum(CustConfirmTrans, SalesId)).value(SysQuery::value(this.parmSalesConfirmDP().parmCustConfirmJour().SalesId));
        custConfirmTrans.addRange(fieldNum(CustConfirmTrans, ConfirmId)).value(SysQuery::value(this.parmSalesConfirmDP().parmCustConfirmJour().ConfirmId));
        custConfirmTrans.addRange(fieldNum(CustConfirmTrans, ConfirmDate)).value(SysQuery::value(this.parmSalesConfirmDP().parmCustConfirmJour().ConfirmDate));

        this.addReadableDataSource(custConfirmTrans.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustConfirmTrans</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmCustConfirmTrans()
    {
        return custConfirmTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustConfirmTransInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>InventDim</c> table associated with <c>CustConfirmTrans</c> table as a data source to the confirmation line query.
    /// </summary>
    /// <param name = "_query">
    /// The confirmation line query object.
    /// </param>
    protected void addCustConfirmTransInventDim(Query _query)
    {
        custConfirmTransInventDim = this.parmCustConfirmTrans().addDataSource(tableNum(InventDim));

        custConfirmTransInventDim.joinMode(JoinMode::OuterJoin);
        custConfirmTransInventDim.fetchMode(QueryFetchMode::One2One);

        custConfirmTransInventDim.relations(false);
        custConfirmTransInventDim.addLink(fieldNum(CustConfirmTrans, InventDimId), fieldNum(InventDim, inventDimId), this.parmCustConfirmTrans().name());

        this.addReadableDataSource(custConfirmTransInventDim.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustConfirmTransInventDim</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmCustConfirmTransInventDim()
    {
        return custConfirmTransInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDataProvider</Name>
				<Source><![CDATA[
    private void initializeDataProvider(SalesConfirmDP _salesConfirmDP)
    {
        salesConfirmDP = _salesConfirmDP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesConfirmDP</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public SalesConfirmDP parmSalesConfirmDP()
    {
        return salesConfirmDP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCommonCollection</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public SysICommonCollection createCommonCollection()
    {
        return SalesConfirmDPConfirmationLineQuerySelection::newFromConfirmationLineQuery(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a query to retrieve confirmation lines.
    /// </summary>
    /// <param name = "_salesConfirmDP">
    /// A <c>SalesConfirmDP</c> object to create the query for.
    /// </param>
    /// <returns>
    /// The instantiated <c>SalesConfirmDPConfirmationLineQuery</c> object.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    public static SalesConfirmDPConfirmationLineQuery newQuery(SalesConfirmDP _salesConfirmDP)
    {
        SalesConfirmDPConfirmationLineQuery query = new SalesConfirmDPConfirmationLineQuery();
        
        query.initializeDataProvider(_salesConfirmDP);
        query.buildQuery();

        if (FeatureStateProvider::IsFeatureEnabled(KittingFeature::instance()))
        {
            QueryRun queryRun = query.getQueryRun();
            _salesConfirmDP.kittingSetReportHandler(new KittingSrsReportDataProviderPreProcess());
            QueryRun kittingQueryRun = _salesConfirmDP.kittingReportHandler().kittingGetQueryRun(queryRun, tableNum(CustConfirmJour));
            query.setQueryRun(kittingQueryRun);
        }

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>