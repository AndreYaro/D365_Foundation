<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdConsumptionService_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

/// <summary>
/// The service of production consumption variance report generation.
/// </summary>
public class ProdConsumptionService_CN extends SysOperationServiceBase
{
    public const str ERFormatModelName = 'model';
    public const str ERModelDataSourceName = 'ProdConsumptionContract_CN';

    public const str  ReportName = "@GLS64459";

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateReportByGER</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates report by generic electronic reporting
    /// </summary>
    /// <param name = "_contract">
    /// Instance of <c>CustDueAmountAnalysisContract_CN</c>.
    /// </param>
    public void generateReportByGER(ProdConsumptionContract_CN _contract)
    {
        ProdConsumptionDP_CN dataProvider = new ProdConsumptionDP_CN();

        ERFormatMappingId erBinding = _contract.parmERBinding();

        ProdConsumptionTmp_CN prodConsumptionTmp_CN = dataProvider.prepareData(_contract);

        if (prodConsumptionTmp_CN)
        {
            try
            {
                ERIModelDefinitionParamsAction parameters = new ERModelDefinitionParamsUIActionComposite()
                    .add(
                        new ERModelDefinitionDatabaseContext()
                            .addTemporaryTable(prodConsumptionTmp_CN))
                    .add(
                        new ERModelDefinitionObjectParameterAction(ERFormatModelName, ERModelDataSourceName, _contract))
                    .add(
                        new ERModelDefinitionDatabaseContext()
                            .addValue(tableNum(CompanyInfo), fieldNum(CompanyInfo, DataArea), curext()));

                // Call ER to generate the excel.
                ERObjectsFactory::createFormatMappingRunByFormatMappingId(erBinding, ReportName)
                    .withParameter(parameters)
                    .withFileDestination(_contract.getFileDestination())
                    .run();
            }
            catch
            {
                // An error occurred while exporting data.
                error("@SYP4861341");
            }
        }
        else
        {
            // There is no data available.
            checkFailed("@SYS300117");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
