<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineVendInvTransRetImpl_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The tax model class for <c>VendInvoiceTrans</c>.
/// </summary>
[
TaxModelDocumentLineReturnAttribute(tableStr(VendInvoiceTrans), DispositionAction::Credit),
TaxModelDocumentLineReturnAttribute(tableStr(VendInvoiceTrans), DispositionAction::CreditOnly),
TaxModelDocumentLineReturnAttribute(tableStr(VendInvoiceTrans), DispositionAction::ReplaceCredit),
TaxModelDocumentLineReturnAttribute(tableStr(VendInvoiceTrans), DispositionAction::ReplaceScrap),
TaxModelDocumentLineReturnAttribute(tableStr(VendInvoiceTrans), DispositionAction::ReturnToCust),
TaxModelDocumentLineReturnAttribute(tableStr(VendInvoiceTrans), DispositionAction::Scrap)
]
public class TaxModelDocLineVendInvTransRetImpl_IN extends TaxModelDocLineVendInvoiceTransImpl_IN
    implements TaxModelTaxableReturn
{
    //Add for interface conversion.
    TaxModelTaxableReturn referenceReturnModel;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDispositionAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>DispositionAction</c> of the transaction.
    /// </summary>
    /// <returns>
    /// the <c>DispositionAction</c> of the transaction
    /// </returns>
    public DispositionAction getDispositionAction()
    {
        if (referenceReturnModel)
        {
            return referenceReturnModel.getDispositionAction();
        }
        return DispositionAction::Credit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrignalInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the original invoice transaction.
    /// </summary>
    /// <returns>
    /// The original invoice.
    /// </returns>
    public TaxModelTaxable getOrignalInvoiceTrans()
    {
        if (referenceReturnModel)
        {
            return referenceReturnModel.getOrignalInvoiceTrans();
        }
        // NOPO case, there is no purchLine
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxRateBasingDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax rate basing date for the given tax type.
    /// </summary>
    /// <param name="_taxType">
    /// The given tax type.
    /// </param>
    /// <returns>
    /// The tax rate date.
    /// </returns>
    public TransDate getTaxRateBasingDate(TaxType_IN _taxType)
    {
        TransDate               taxCalculationDate;

        if (this.isTaxPerOrignal())
        {
            TaxModelTaxable_IN taxModelTaxableIN = this.getOrignalInvoiceTrans() as TaxModelTaxable_IN;
            taxCalculationDate = taxModelTaxableIN.getTaxRateBasingDate(_taxType);
        }
        else
        {
            taxCalculationDate = super(_taxType);
        }

        return taxCalculationDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets <c>TaxModelTransactionType_IN</c> of the transaction
    /// </summary>
    /// <returns>
    /// The <c>TaxModelTransactionType_IN</c> of the transaction
    /// </returns>
    public TaxModelTransactionType getTransactionType()
    {
        if (this.isOrignalTaxSettled())
        {
            return TaxModelTransactionType::Return;
        }
        else
        {
            return TaxModelTransactionType::StrikeBalance;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init the domain object.
    /// The method should only be called by the <c>TaxModelDocLineFactoryable_IN</c> classes.
    /// </summary>
    /// <param name="_documentLineMap">
    /// The document line buffer.
    /// </param>
    public void init(SalesPurchJournalLine _documentLineMap)
    {
        super(_documentLineMap);

        referenceReturnModel = referenceModel as TaxModelTaxableReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOrignalTaxSettled</Name>
				<Source><![CDATA[
/// <summary>
    /// Determine the orignal tax is settled or not.
    /// </summary>
    /// <returns>
    /// True, if the orignal tax is settled;Otherwise, false.
    /// </returns>
    public boolean isOrignalTaxSettled()
    {
        TaxModelTaxable_IN  orignalInvoiceTransModel = this.getOrignalInvoiceTrans();

        if (orignalInvoiceTransModel)
        {
            if (TaxParameters::isAdvancedSalesTaxPaymentEnabled())
            {
                return TaxTrans_IN::isTaxSettledForTransaction(
                    orignalInvoiceTransModel.getDocumentLineMainTableId(),
                    orignalInvoiceTransModel.getDocumentLineMainTableRecId());
            }
            else
            {
                return ComponentTransactions_IN::isTaxSettledForTransaction(
                    orignalInvoiceTransModel.getDocumentLineMainTableId(),
                    orignalInvoiceTransModel.getDocumentLineMainTableRecId());
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxPerOrignal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is the tax rate using the same of the orignal document line.
    /// </summary>
    /// <returns>
    /// True, if the tax rate using the same of the orignal document line.
    /// </returns>
    public boolean isTaxPerOrignal()
    {
        return referenceReturnModel && referenceReturnModel.isTaxPerOrignal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSkipCustomsTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Should the Customs Tax be skipped on this transaction line?
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c> on the transaction line.
    /// </param>
    /// <returns>
    /// True, it should be skipped; Otherwise, false.
    /// </returns>
    public boolean shouldSkipCustomsTax(TaxOnItem _taxOnItem)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSkipServiceTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Should the Service Tax be skipped on this transaction line?
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c> on the transaction line.
    /// </param>
    /// <returns>
    /// True, it should be skipped; Otherwise, false.
    /// </returns>
    public boolean shouldSkipServiceTax(TaxOnItem _taxOnItem)
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>