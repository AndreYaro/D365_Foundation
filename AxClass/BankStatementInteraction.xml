<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankStatementInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     This <c>BankStatementInteraction</c> class is used to controll the enable status of buttons on <c>BankStatementTable</c> form.
/// </summary>
public class BankStatementInteraction extends PageInteraction
{
    BankStmtISOAccountStatement statement;

    BankStatementInteractionHelper bankStatementInteractionHelper;

    #BankElectronicReconciliation
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bankReconStatement_DS_selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calls the selectionChanged and enables the action pane buttons.
    /// </summary>
    [FormDataSourceInteractionAttribute(#BankStmtISOAccountStatement, #SelectionChanged)]
    public void bankReconStatement_DS_selectionChanged()
    {
        statement = this.page().activeRecord(#BankStmtISOAccountStatement);
        BankStmtISOReportEntry statementLine = this.page().activeRecord(tableStr(BankStmtISOReportEntry));

        bankStatementInteractionHelper = BankStatementInteractionHelper::construct(statement);
        bankStatementInteractionHelper.setIsNewLineUnposted(statementLine);
        bankStatementInteractionHelper.initDetailsActions();

        this.setButtonEnabled();
        this.setButtonVisible();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the enabled property on the action pane buttons.
    /// </summary>
    protected void setButtonEnabled()
    {
        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, ValidateButton), bankStatementInteractionHelper.parmButtonValidateEnabled());
        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, ReopenButton), bankStatementInteractionHelper.parmButtonReopenEnabled());

        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, AddLineButton), bankStatementInteractionHelper.parmButtonAddLineEnabled());
        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, RemoveLineButton), bankStatementInteractionHelper.parmButtonRemoveLineEnabled());

        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, BankStatementPostButton), bankStatementInteractionHelper.parmButtonPostEnabled());
        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, BankStatementPostMenuButton), bankStatementInteractionHelper.parmButtonPostEnabled());

        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, ReverseButton), bankStatementInteractionHelper.parmButtonReversePostEnabled());
        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, ReverseButtonV2), bankStatementInteractionHelper.parmButtonReversePostEnabled());

        this.page().actionPaneControlEnabled(formControlStr(BankStatementTable, UpdateAccountingDateButton), bankStatementInteractionHelper.parmButtonUpdateLineAccountingDateEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonVisible</Name>
				<Source><![CDATA[
    private void setButtonVisible()
    {
        this.page().actionPaneControlVisible(formControlStr(BankStatementTable, BankStatementPostButton), bankStatementInteractionHelper.parmPostButtonVisible());
        this.page().actionPaneControlVisible(formControlStr(BankStatementTable, BankStatementPostMenuButton), !bankStatementInteractionHelper.parmPostButtonVisible());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>