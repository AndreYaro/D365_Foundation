<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanForecastAggregationConfiguratorListPanel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqDemPlanForecastAggregationConfiguratorListPanel</c> class handles list panels
/// used for defining forecast dimensions that are used in forecast aggregation process.
/// </summary>
class ReqDemPlanForecastAggregationConfiguratorListPanel extends SysListPanel
{
    ReqDemPlanForecastAttributeManager  attributeManager = ReqDemPlanForecastAttributeManager::construct();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a container which holds two containers, one with data for the left list panel and one with data for the right list panel.
    /// </summary>
    /// <returns>
    /// A container which holds two containers, one with data for the left list panel and one with data for the right list panel.
    /// </returns>
    public container getData()
    {
        container available, selected;

        var listEnum = attributeManager.getAllPivotAttributes().getEnumerator();
        while (listEnum.moveNext())
        {
            ReqDemPlanForecastAttribute pivotAttribute = listEnum.current();
            selected = this.addPivotAttributeToContainer(pivotAttribute, selected);
        }

        listEnum = attributeManager.getAvailableNonPivotAttributes().getEnumerator();
        while (listEnum.moveNext())
        {
            ReqDemPlanForecastAttribute availableAttribute = listEnum.current();
            available = this.addPivotAttributeToContainer(availableAttribute, available);
        }

        return [available, selected];
    }

]]></Source>
			</Method>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method that is called when an item is added to selected list.
    /// </summary>
    /// <param name="_data">
    /// A container with the data to add.
    /// </param>
    public void addData(container _data)
    {
        // data is saved once when persistSelectedPivotAttributes method is called
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method that is called when an item is removed from selected list.
    /// </summary>
    /// <param name="_data">
    /// A container with the Id's of the elements that should be removed.
    /// </param>
    public void removeData(container _data)
    {
        // data is saved once when persistSelectedPivotAttributes method is called
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistSelectedPivotAttributes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Persists selected pivot attributes.
    /// </summary>
    public void persistSelectedPivotAttributes()
    {
        ReqDemPlanForecastAttributeType attribute;
        ReqDemPlanPivotAttributes       pivotAttribute;
        Counter                         countOfItemsLeft;
        FormListItem                    formListItem;

        var itemCount = this.parmViewSelected().getCount();

        ttsbegin;

        delete_from pivotAttribute;

        for (var i = 0; i < itemCount; i++)
        {
            var itemText = this.parmViewSelected().getItem(i).text();
            attribute = itemText == "@SYS12836" ? ReqDemPlanForecastAttributeType::ItemId : str2Enum(attribute, itemText);

            ReqDemPlanPivotAttributes::insertByAttributeType(attribute);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ReqDemPlanForecastAggregationConfiguratorListPanel construct()
    {
        return new ReqDemPlanForecastAggregationConfiguratorListPanel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of the <c>ReqDemPlanForecastAggregationConfiguratorListPanel</c> class.
    /// </summary>
    /// <param name="_formRun">
    /// A formrun that should have the list panels added.
    /// </param>
    /// <param name="_parentId">
    /// Id of the parent element.
    /// </param>
    /// <param name="_validateMethodName">
    /// The name of the method on the form that should be called when items are added or removed.
    /// </param>
    /// <returns>
    /// A new instance of the <c>ReqDemPlanForecastAggregationConfiguratorListPanel</c> class.
    /// </returns>
    public static ReqDemPlanForecastAggregationConfiguratorListPanel newFromForm(
        FormRun     _formRun,
        int         _parentId,
        MethodName  _validateMethodName)
    {
        ReqDemPlanForecastAggregationConfiguratorListPanel panel = ReqDemPlanForecastAggregationConfiguratorListPanel::construct();

        panel.parmFormRun(_formRun);
        panel.parmParentId(_parentId);
        panel.parmCaptionAvailable("@SYS53644");
        panel.parmCaptionSelected("@SYS24159");
        panel.parmHasUpDownButton(true);
        panel.parmUseImageListOverlay(false);
        panel.parmValidateMethod(_validateMethodName);
        panel.build();
        return panel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPivotAttributeToContainer</Name>
				<Source><![CDATA[
    private container addPivotAttributeToContainer(ReqDemPlanForecastAttribute _pivotAttribute, container _container)
    {
        if (_pivotAttribute.Attribute == ReqDemPlanForecastAttributeType::ItemId)
        {
            _container += [[_pivotAttribute.Attribute, "@SYS12836", "@SYS12836"]];
        }
        else
        {
            _container += [[_pivotAttribute.Attribute, enum2Str(_pivotAttribute.Attribute), enum2Str(_pivotAttribute.Attribute)]];
        }

        return _container;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>