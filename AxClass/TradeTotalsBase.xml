<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeTotalsBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class TradeTotalsBase
{
    TradeTotalsEnumerableFactory  enumerableFactory;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createEnumerableFactory</Name>
				<Source><![CDATA[
        protected TradeTotalsEnumerableFactory createEnumerableFactory()
    {
        return TradeTotalsEnumerableFactory::newFromContract(this.parmContract());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContract</Name>
				<Source><![CDATA[
        protected TradeTotalsIContract  parmContract()
    {
        TradeTotalsIContract    contract = null;

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnumerableFactory</Name>
				<Source><![CDATA[
        protected TradeTotalsEnumerableFactory parmEnumerableFactory(TradeTotalsEnumerableFactory _enumerableFactory = enumerableFactory)
    {
        enumerableFactory = _enumerableFactory;

        if (!enumerableFactory)
        {
            enumerableFactory = this.createEnumerableFactory();
        }
        return enumerableFactory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordSortedListLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a record sorted list of lines for which the totals object was created.
    /// </summary>
    /// <returns>
    /// The record sorted list of lines.
    /// </returns>
    public abstract RecordSortedList recordSortedListLine()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferEnumerableFactory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Transfer an instance of the <c>TradeTotalsEnumerableFactory</c> class into this class to use caches
    /// that are built up in the calling class.
    /// </summary>
    /// <param name="_enumerableFactory">
    /// The instance of the <c>TradeTotalsEnumerableFactory</c> class to transfer.
    /// </param>
    /// <returns>
    /// true if the transferred object is accepted; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The instance of the <c>TradeTotalsEnumerableFactory</c> class will only be accepted if the type of
    /// the transferred object is equal to the type of the <c>TradeTotalsEnumerableFactory</c> object that
    /// would otherwise be created by the <c>TradeTotalsBase</c> class
    /// </remarks>
    public boolean transferEnumerableFactory(TradeTotalsEnumerableFactory _enumerableFactory)
    {
        boolean isAccepted = false;

        if (classIdGet(_enumerableFactory) == classIdGet(this.parmEnumerableFactory()))
        {
            this.parmEnumerableFactory(_enumerableFactory);
            isAccepted = true;
        }
        return isAccepted;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>