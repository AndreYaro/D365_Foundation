<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankStatementLineListReversePost</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankStatementLineListReversePost</c>class performs reverse posting of bank statement lines by <c>BankStatementLinePostTable</c>.
/// </summary>
internal final class BankStatementLineListReversePost
{
    private List reverseLineList;
    private Map voucherReversalDateMap;
    private ReasonTableRef reverseReason;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>reverseLineListOnSpecifiedDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reverses bank statement lines whose source document header is the bank statement line post table.
    /// </summary>
    /// <param name="_reverseLineList">List of bank statement lines to reverse.</param>
    /// <param name="_voucherReversalDateMap">Map of each voucher to each reversal date.</param>
    /// <param name="_reasonCode">Reason code for the reversal.</param>
    /// <param name="_reasonComment">Reason comment for the reversal.</param>
    internal static void reverseLineListOnSpecifiedDate(
        List _reverseLineList,
        Map _voucherReversalDateMap,
        ReasonCode _reasonCode,
        ReasonComment _reasonComment)
    {
        BankStatementLineListReversePost reversePost = BankStatementLineListReversePost::construct(_reverseLineList, _voucherReversalDateMap, _reasonCode, _reasonComment);
        reversePost.post();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static BankStatementLineListReversePost construct(
        List _reverseLineList,
        Map _voucherReversalDateMap,
        ReasonCode _reasonCode,
        ReasonComment _reasonComment)
    {
        if (FeatureStateProvider::isFeatureEnabled(BankModernReconciliationFeature::instance()))
        {
            BankStatementLineListReversePost lineListpost = new BankStatementLineListReversePost();
            lineListpost.reverseLineList = _reverseLineList;
            lineListpost.voucherReversalDateMap = _voucherReversalDateMap;
            lineListpost.reverseReason = ReasonTableRef::find(ReasonTableRef::createReasonTableRef(_reasonCode, _reasonComment));
            return lineListpost;
        }
        else
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>post</Name>
				<Source><![CDATA[
    private boolean post()
    {
        #OCCRetryCount

        try
        {
            ListEnumerator enumerator = reverseLineList.getEnumerator();
            while (enumerator.moveNext())
            {
                BankStmtISOReportEntry statementLine = BankStmtISOReportEntry::find(enumerator.current());
                BankStatementLineReversePost lineReversePost = BankStatementLineReversePost::construct(statementLine, voucherReversalDateMap.lookup(statementLine.Voucher), reverseReason);
                lineReversePost.post();
            }
        }
        catch (Exception::Deadlock)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::Deadlock;
            }
            else
            {
                retry;
            }
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
        catch (Exception::error)
        {
            throw error("@Bank:StatementLinePostTableReversePostError");
        }

        info("@Bank:StatementLinePostTableReversePostComplete");

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>