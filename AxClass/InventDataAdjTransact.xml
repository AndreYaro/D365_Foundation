<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDataAdjTransact</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventDataAdjTransact extends InventDataAdj
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcValueAmount</Name>
				<Source><![CDATA[
    CostAmount calcValueAmount(CostAmount             value,
                               InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        CostAmount      amountInTotal;
        TmpFormLookUp   tmp;

        tmp.setTmpData(tmpFormLookUp);
        while select tmp
        {
            InventTrans inventTrans = InventTrans::findRecId(tmp.TransRecId);
            // <GEERU>
            amountInTotal += (_inventTransCurrency == InventTransCurrency_RU::PrimaryCur ? inventTrans.costValue() : inventTrans.costValueSecCur_RU());
            // </GEERU>
        }

        return CurrencyExchangeHelper::amount(value - amountInTotal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAdjustment</Name>
				<Source><![CDATA[
    void setAdjustment(TmpFormLookUp tmp, CostAmount adjustNow)
    {
        tmp.AdjustNow = adjustNow;
        tmp.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAdjustmentPercent</Name>
				<Source><![CDATA[
    void setAdjustmentPercent(Percent                percent,
                              InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        TmpFormLookUp   tmp;

        tmp.setTmpData(tmpFormLookUp);
        ttsbegin;
        while select forupdate tmp
        {
            InventTrans inventTrans = InventTrans::findRecId(tmp.TransRecId);
            // <GEERU>
            if (_inventTransCurrency == InventTransCurrency_RU::PrimaryCur)
            {
            // </GEERU>
                this.setAdjustment(tmp,CurrencyExchangeHelper::amount(inventTrans.costValue() * percent / 100));
            // <GEERU>
            }
            else
            {
                this.setAdjustment(tmp, CurrencyExchangeHelper::amount(inventTrans.costValueSecCur_RU() * percent / 100));
            }
            // </GEERU>
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAdjustmentQty</Name>
				<Source><![CDATA[
    void setAdjustmentQty(CostAmount amount)
    {
        InventQty       qtyTotal;
        InventTrans     inventTrans;
        TmpFormLookUp   tmp;

        tmp.setTmpData(tmpFormLookUp);
        while select tmp
        {
            inventTrans = InventTrans::findRecId(tmp.TransRecId);
            qtyTotal  += inventTrans.Qty;
        }

        if (qtyTotal  <= 0)
        {
            throw error("@SYS24527");
        }

        CostAmount amountRemain = amount;
        InventQty remain = qtyTotal;

        while select forupdate tmp
        {
            inventTrans = InventTrans::findRecId(tmp.TransRecId);
            if (inventTrans.Qty >= remain)
            {
                this.setAdjustment(tmp, CurrencyExchangeHelper::amount(amountRemain));
            }
            else
            {
                this.setAdjustment(tmp, CurrencyExchangeHelper::amount(amount * inventTrans.Qty / qtyTotal));
            }

            amountRemain    -= tmp.AdjustNow;
            remain          -= tmp.Qty;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAdjustmentValue</Name>
				<Source><![CDATA[
    void setAdjustmentValue(CostAmount             amount,
                            InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        CostAmount  amountInTotal;

        InventTrans inventTrans;
        TmpFormLookUp   tmp;

        // <GEERU>
        CostAmount costValue()
        {
            return (_inventTransCurrency == InventTransCurrency_RU::PrimaryCur ? inventTrans.costValue() : inventTrans.costValueSecCur_RU());
        }
        // </GEERU>
        tmp.setTmpData(tmpFormLookUp);
        while select tmp
        {
            inventTrans = InventTrans::findRecId(tmp.TransRecId);
            // <GEERU>
            amountInTotal+= costValue();
            // </GEERU>
        }

        if (amountInTotal <= 0)
        {
            throw error("@SYS24529");
        }

        CostAmount amountRemain = amount;
        CostAmount remain = amountInTotal;

        while select forupdate tmp
        {
            inventTrans = InventTrans::findRecId(tmp.TransRecId);

            // <GEERU>
            if (costValue() >= remain)
            // </GEERU>
            {
                this.setAdjustment(tmp,CurrencyExchangeHelper::amount(amountRemain));
            }
            else
                // <GEERU>
                this.setAdjustment(tmp,CurrencyExchangeHelper::amount(amount * costValue() / amountInTotal));
                // </GEERU>

            amountRemain    -= tmp.AdjustNow;
            // <GEERU>
            remain          -= costValue();
            // </GEERU>
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustAmountServer</Name>
				<Source><![CDATA[
    static void adjustAmountServer(  TmpFormLookUp   tmpFormLookUp,
                                            ValueQty        valueQty,
                                            CostAmount      amount,
                                            InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        InventDataAdjTransact  inventDataAdjTransact = InventDataAdjTransact::construct();

        inventDataAdjTransact.setTmpFormLookUp(tmpFormLookUp);

        if (valueQty == ValueQty::Value)
        {
            // <GEERU>
            inventDataAdjTransact.setAdjustmentValue(amount,_inventTransCurrency);
            // </GEERU>
        }

        if (valueQty == ValueQty::Qty)
        {
            inventDataAdjTransact.setAdjustmentQty(amount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustCostPriceServer</Name>
				<Source><![CDATA[
    static void adjustCostPriceServer(TmpFormLookUp          tmp,
                                             InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        InventDataAdjTransact   inventDataAdjTransact = InventDataAdjTransact::construct();

        inventDataAdjTransact.setTmpFormLookUp(tmp);

        ttsbegin;
        while select forupdate tmp
        {
            InventTrans inventTrans = InventTrans::findRecId(tmp.TransRecId);
            // <GEERU>
            if (_inventTransCurrency == InventTransCurrency_RU::PrimaryCur)
            {
            // </GEERU>
                inventDataAdjTransact.setAdjustment(tmp,CurrencyExchangeHelper::amount(inventTrans.Qty * InventTable::findCostPcsPrice(inventTrans.ItemId, inventTrans.InventDimId) - inventTrans.costValue()));
            // <GEERU>
            }
            else
            {
                inventDataAdjTransact.setAdjustment(tmp, CurrencyExchangeHelper::amount(inventTrans.Qty * InventTable::findCostPcsPriceSecCur_RU(inventTrans.ItemId, inventTrans.InventDimId) - inventTrans.costValueSecCur_RU()));
            }
            // </GEERU>
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustPercentServer</Name>
				<Source><![CDATA[
    static void adjustPercentServer( TmpFormLookUp           tmpFormLookUp,
                                            Percent                 percent,
                                            InventTransCurrency_RU  _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        InventDataAdjTransact   inventDataAdjTransact = InventDataAdjTransact::construct();

        inventDataAdjTransact.setTmpFormLookUp(tmpFormLookUp);
        // <GEERU>
        inventDataAdjTransact.setAdjustmentPercent(percent,_inventTransCurrency);
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustPriceServer</Name>
				<Source><![CDATA[
    static void adjustPriceServer(   TmpFormLookUp           tmp,
                                            Price                   price,
                                            InventTransCurrency_RU  _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        InventDataAdjTransact   inventDataAdjTransact = InventDataAdjTransact::construct();

        inventDataAdjTransact.setTmpFormLookUp(tmp);

        ttsbegin;
        while select forupdate tmp
        {
            InventTrans inventTrans = InventTrans::findRecId(tmp.TransRecId);
            // <GEERU>
            if (_inventTransCurrency == InventTransCurrency_RU::PrimaryCur)
            {
            // </GEERU>
                inventDataAdjTransact.setAdjustment(tmp,CurrencyExchangeHelper::amount(inventTrans.Qty * price - inventTrans.costValue()));
            // <GEERU>
            }
            else
            {
                inventDataAdjTransact.setAdjustment(tmp,CurrencyExchangeHelper::amount(inventTrans.Qty * price - inventTrans.costValueSecCur_RU()));
            }
            // </GEERU>
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustValueServer</Name>
				<Source><![CDATA[
    static void adjustValueServer(   TmpFormLookUp           tmpFormLookUp,
                                            ValueQty                valueQty,
                                            CostAmount              amountDialog,
                                            InventTransCurrency_RU  _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        InventDataAdjTransact   inventDataAdjTransact = InventDataAdjTransact::construct();

        inventDataAdjTransact.setTmpFormLookUp(tmpFormLookUp);

        // <GEERU>
        CostAmount amount = inventDataAdjTransact.calcValueAmount(amountDialog,_inventTransCurrency);
        // </GEERU>

        if (valueQty == ValueQty::Value)
        {
            // <GEERU>
            inventDataAdjTransact.setAdjustmentValue(amount,_inventTransCurrency);
            // </GEERU>
        }

        if (valueQty == ValueQty::Qty)
        {
            inventDataAdjTransact.setAdjustmentQty(amount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static InventDataAdjTransact construct()
    {
        return new InventDataAdjTransact();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    static InventDataAdjTransact newFromForm(TmpFormLookUp tmpFormLookUp)
    {
        InventDataAdjTransact inventDataAdjTransact = InventDataAdjTransact::construct();

        inventDataAdjTransact.setTmpFormLookUp(tmpFormLookUp);
        return inventDataAdjTransact;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPacked</Name>
				<Source><![CDATA[
    static InventDataAdjTransact newPacked(container data)
    {
        InventDataAdjTransact inventDataAdjTransact = InventDataAdjTransact::construct();

        inventDataAdjTransact.unpack(data);
        return inventDataAdjTransact;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptAmount</Name>
				<Source><![CDATA[
    static boolean  promptAmount(TmpFormLookUp          tmpFormLookUp,
                                 InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        Dialog          dialog  = new Dialog("@SYS9523");
        TmpFormLookUp   tmp;

        tmp.setTmpData(tmpFormLookUp);
        select firstonly tmp;
        if (!tmp)
        {
            return checkFailed("@SYS24531");
        }

        DialogField dialogAmount = dialog.addField(extendedTypeStr(CostAmount), "@SYS12227");

        DialogField dialogAllocate = dialog.addField(enumStr(ValueQty), "@SYS24502");

        if (! dialog.run())
        {
            return false;
        }

        // <GEERU>
        InventDataAdjTransact::adjustAmountServer(tmp, dialogAllocate.value(), dialogAmount.value(),_inventTransCurrency);
        // </GEERU>

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptCostPrice</Name>
				<Source><![CDATA[
    static boolean  promptCostPrice(TmpFormLookUp          tmpFormLookUp,
                                    InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        TmpFormLookUp   tmp;

        tmp.setTmpData(tmpFormLookUp);
        select firstonly tmp;
        if (!tmp)
        {
            return checkFailed("@SYS24531");
        }

        if (Box::yesNo("@SYS17684",DialogButton::No) != DialogButton::Yes)
        {
            return false;
        }

        // <GEERU>
        InventDataAdjTransact::adjustCostPriceServer(tmp,_inventTransCurrency);
        // </GEERU>
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptPercent</Name>
				<Source><![CDATA[
    static boolean  promptPercent(TmpFormLookUp          tmpFormLookUp,
                                  InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        Dialog          dialog  = new Dialog("@SYS24507");
        TmpFormLookUp   tmp;

        tmp.setTmpData(tmpFormLookUp);
        select firstonly tmp;
        if (!tmp)
        {
            return checkFailed("@SYS24531");
        }

        DialogField dialogPercent = dialog.addField(extendedTypeStr(Percent), "@SYS15774");

        if (! dialog.run())
        {
            return false;
        }

        Percent percent = dialogPercent.value();

        if (percent < -100)
        {
            throw error("@SYS1852");
        }

        // <GEERU>
        InventDataAdjTransact::adjustPercentServer(tmp, percent,_inventTransCurrency);
        // </GEERU>

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptPrice</Name>
				<Source><![CDATA[
    static boolean  promptPrice(TmpFormLookUp          tmpFormLookUp,
                                InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        Dialog          dialog  = new Dialog("@SYS4915");
        TmpFormLookUp   tmp;

        tmp.setTmpData(tmpFormLookUp);
        select firstonly tmp;
        if (!tmp)
        {
            return checkFailed("@SYS24531");
        }

        DialogField dialogPrice = dialog.addField(extendedTypeStr(Price), "@SYS11865");

        if (! dialog.run())
        {
            return false;
        }

        Price price = dialogPrice.value();

        if (price < 0)
        {
            throw error("@SYS1852");
        }

        // <GEERU>
        InventDataAdjTransact::adjustPriceServer(tmp, price,_inventTransCurrency);
        // </GEERU>
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptReset</Name>
				<Source><![CDATA[
    static boolean  promptReset(TmpFormLookUp tmpFormLookUp)
    {
        if (Box::yesNo("@SYS9461",DialogButton::No) == DialogButton::Yes)
        {
            delete_from tmpFormLookUp;
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptValue</Name>
				<Source><![CDATA[
    static boolean  promptValue(TmpFormLookUp          tmpFormLookUp,
                                InventTransCurrency_RU _inventTransCurrency = InventTransCurrency_RU::PrimaryCur)
    {
        Dialog          dialog  = new Dialog("@SYS8668");
        TmpFormLookUp   tmp;

        tmp.setTmpData(tmpFormLookUp);
        select firstonly tmp;
        if (!tmp)
        {
            return checkFailed("@SYS24531");
        }

        DialogField dialogValue = dialog.addField(extendedTypeStr(CostAmount), "@SYS11762");
        DialogField dialogAllocate = dialog.addField(enumStr(ValueQty), "@SYS24502");

        if (! dialog.run())
        {
            return false;
        }

        // <GEERU>
        InventDataAdjTransact::adjustValueServer(tmp, dialogAllocate.value(), dialogValue.value(),_inventTransCurrency);
        // </GEERU>

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
