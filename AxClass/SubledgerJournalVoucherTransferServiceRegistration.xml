<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJournalVoucherTransferServiceRegistration</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Series type registration plug-in for subledger journal voucher transfer process
/// </summary>
[ExportAttribute(identifierStr(Dynamics.AX.Application.ProcessScheduleITypeRegistration))]
[ExportMetadataAttribute(classStr(ProcessScheduleITypeRegistration), classStr(SubledgerJournalVoucherTransferServiceRegistration))]
internal final class SubledgerJournalVoucherTransferServiceRegistration implements ProcessScheduleITypeRegistration
{
    internal const Name TypeName = 'Batch transfer for subledger journals';
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getScheduleTypeRegistrationItem</Name>
				<Source><![CDATA[
    public ProcessScheduleTypeRegistrationItem getScheduleTypeRegistrationItem()
    {
        ProcessScheduleTypeRegistrationItem item = ProcessScheduleTypeRegistrationItem::construct();

        item.parmName(TypeName);
        item.parmCompanyScope(ProcessScheduleTypeCompanyScope::Global);
        item.parmScheduleType(ProcessScheduleProcessType::Polled);
        item.parmLabelId(literalStr('@GeneralLedger:BatchTransferOfVoucherToGeneralLedgerFeature'));

        if (SubledgerJournalTransferProcess::canUseProcessAutomationForTransfer())
        {
            item.parmIsEnabled(true);
        }
        else
        {
            item.parmIsEnabled(false);
        }

        item.parmProcessAutomationTaskClassName(classStr(SubledgerJournalToGeneralLedgerTransferService));

        return item;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>