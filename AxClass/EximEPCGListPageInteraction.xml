<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximEPCGListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The exim EPCG list page interaction class.
/// </summary>
class EximEPCGListPageInteraction extends ListPageInteraction
{
    EximEPCGSchemeTable_IN  eximEPCGSchemeTable;

    #DEFINE.EximEPCGSchemeListPage (EximEPCGSchemeListPage_IN)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableButton</Name>
				<Source><![CDATA[
    private void enableButton(str _controlName, boolean _enabled = true)
    {
        this.listPage().actionPaneControlEnabled(_controlName, _enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableButtons</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable diabled buttons.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void enableDisableButtons()
    {
        boolean                 approvedSchemeStatus;
        boolean                 mergedRedeemedStatus;
        boolean                 mergedStatus;
        boolean                 createdStatus;
        boolean                 schemeStatus;
        FormDataSource          eximEPCGSchemeTable_ds;
        EximEPCGSchemeTable_IN  eximEPCGSchemeTableloc;

        FormControlName importableItems         = formcontrolstr(#EximEPCGSchemeListPage, ImportableItems);
        FormControlName eximEPCGSchemeFunctions = formcontrolstr(#EximEPCGSchemeListPage, EximEPCGSchemeFunctions);
        FormControlName approve                 = formcontrolstr(#EximEPCGSchemeListPage, Approve);
        FormControlName techUpgrade             = formcontrolstr(#EximEPCGSchemeListPage, TechUpgrade);
        FormControlName redeemed                = formcontrolstr(#EximEPCGSchemeListPage, Redeemed);
        FormControlName buttonMerge             = formcontrolstr(#EximEPCGSchemeListPage, ButtonMerge);

        this.enableDisableSubMenuItems(false);

        if (eximEPCGSchemeTable.RecId)
        {
            approvedSchemeStatus = eximEPCGSchemeTable.Status == EximEPCGSchemeStatus_IN::Approved;

            schemeStatus = eximEPCGSchemeTable.Status    == EximEPCGSchemeStatus_IN::TechUpgrade
                           || eximEPCGSchemeTable.Status == EximEPCGSchemeStatus_IN::Approved
                           || eximEPCGSchemeTable.Status == EximEPCGSchemeStatus_IN::Redeemed
                           || eximEPCGSchemeTable.Status == EximEPCGSchemeStatus_IN::Merged;

            mergedRedeemedStatus = eximEPCGSchemeTable.Status    != EximEPCGSchemeStatus_IN::Redeemed
                                   && eximEPCGSchemeTable.Status != EximEPCGSchemeStatus_IN::Merged;

            mergedStatus  = eximEPCGSchemeTable.Status == EximEPCGSchemeStatus_IN::Merged;

            createdStatus = eximEPCGSchemeTable.Status == EximEPCGSchemeStatus_IN::Created;

            this.enableDisableSubMenuItems(true);

            this.enableButton(importableItems, !mergedStatus);
            this.enableButton(eximEPCGSchemeFunctions, mergedRedeemedStatus);

            this.enableButton(approve, (createdStatus && eximEPCGSchemeTable.Basis == EximEPCGSchemeBasis_IN::Primary));
            this.enableButton(techUpgrade, (createdStatus && eximEPCGSchemeTable.Basis == EximEPCGSchemeBasis_IN::TechnologyUpgrade));
            this.enableButton(redeemed, approvedSchemeStatus);

            this.enableButton(buttonMerge, false);
            eximEPCGSchemeTable_ds = FormDataUtil::getFormDataSource(eximEPCGSchemeTable);
            eximEPCGSchemeTableloc = eximEPCGSchemeTable_ds.getFirst(true);
            if (eximEPCGSchemeTableloc)
            {
                eximEPCGSchemeTableloc = eximEPCGSchemeTable_ds.getNext();
                if (eximEPCGSchemeTableloc
                    && EximEPCGSchemeTable_IN::enableMergeButton(eximEPCGSchemeTable_ds))
                {
                    this.enableButton(buttonMerge, true);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableSubMenuItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable disabled submenu items.
    /// </summary>
    /// <param name="_enable">
    /// If 'True', the submenu items will be enabled.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void enableDisableSubMenuItems(boolean _enable)
    {
        FormControlName importableItems     = formcontrolstr(#EximEPCGSchemeListPage, ImportableItems);
        FormControlName approve             = formcontrolstr(#EximEPCGSchemeListPage, Approve);
        FormControlName techUpgrade         = formcontrolstr(#EximEPCGSchemeListPage, TechUpgrade);
        FormControlName redeemed            = formcontrolstr(#EximEPCGSchemeListPage, Redeemed);
        FormControlName buttonMerge         = formcontrolstr(#EximEPCGSchemeListPage, ButtonMerge);
        FormControlName exportObligation    = formcontrolstr(#EximEPCGSchemeListPage, ExportObligation);
        FormControlName importDetails       = formcontrolstr(#EximEPCGSchemeListPage, ImportDetails);

        this.enableButton(importableItems, _enable);
        this.enableButton(approve, _enable);
        this.enableButton(techUpgrade, _enable);
        this.enableButton(redeemed, _enable);
        this.enableButton(buttonMerge, _enable);
        this.enableButton(exportObligation, _enable);
        this.enableButton(importDetails, _enable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance of the <c>EximEPCGListPageInteration</c> class.
    /// </summary>
    public void initializing()
    {
        if (!EximParameters_IN::checkEPCGParameters())
        {
            // %1 parameter must be selected in the Incentive scheme parameters to activate the %1 feature.
            // %1 = Export Promotion Capital Goods
            throw error(strfmt("@GLS61933", "@GLS62130"));
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets buttons when selection changed.
    /// </summary>
    public void selectionChanged()
    {
        super();
        eximEPCGSchemeTable = this.listPage().activeRecord(querydatasourcestr(EximEPCGScheme_IN, EximEPCGSchemeTable_IN)) as EximEPCGSchemeTable_IN;
        this.setButtonAccess();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set button access.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void setButtonAccess()
    {
        this.enableDisableButtons();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>