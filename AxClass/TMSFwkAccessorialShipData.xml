<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSFwkAccessorialShipData</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Xml.Linq;

/// <summary>
/// The <c>TMSFwkAccessorialShipData</c> contains payload for accessorial charge processing.
/// </summary>
class TMSFwkAccessorialShipData
{
    private XElement pickUpRatingEntity;
    private XElement dropOffRatingEntity;
    private XElement pickupAddress;
    private XElement dropOffAddress;
    private TMSHubMasterCode pickupHubMasterCode;
    private TMSHubMasterCode dropOffHubMasterCode;
    private TMSCustomerInvoiceCode customerInvoiceCode;
    private TMSCustomerCode customerCode;
    private TMSPostalCode postalCode;
    private TMSState state;
    private TMSCountryRegion country;
    private TMSFreightTermCode freightTermsCode;
    private TMSEquipmentCode equipmentCode;
    private TMSZone zone;
    private TMSWeight weight;
    private TMSWeight maxWeight;
    private real value;
    private TMSQty quantity;
    private Volume volume;
    private TMSZoneMasterCode zoneMasterCode;
    private InventSiteId site;
    private InventLocationId warehouse;
    private TMSMiles miles;
    private TMSScheduledShipUTCDateTime scheduledShipDateTime;
    private str residential;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TMSFwkAccessorialShipData construct()
    {
        return new TMSFwkAccessorialShipData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPickupRatingEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rating entity applicable to pick up location.
    /// </summary>
    /// <param name="_pickupRatingEntity">The rating entity applicable to pick up location; optional.</param>
    /// <returns>The rating entity applicable to pick up location.</returns>
    public XElement parmPickupRatingEntity(XElement _pickupRatingEntity = pickupRatingEntity)
    {
        pickupRatingEntity = _pickupRatingEntity;
        return pickupRatingEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDropOffRE</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rating entity applicable to drop off location.
    /// </summary>
    /// <param name="_dropOffRatingEntity">The rating entity applicable to drop off location; optional.</param>
    /// <returns>The rating entity applicable to drop off location.</returns>
    public XElement parmDropOffRE(XElement _dropOffRatingEntity = dropOffRatingEntity)
    {
        dropOffRatingEntity = _dropOffRatingEntity;
        return dropOffRatingEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPickupAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Pick up address.
    /// </summary>
    /// <param name="_pickupAddress">The pick up address; optional.</param>
    /// <returns>The pick up address.</returns>
    public XElement parmPickupAddress(XElement _pickupAddress = pickupAddress)
    {
        pickupAddress =_pickupAddress;
        return pickupAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDropOffAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Drop off address.
    /// </summary>
    /// <param name="_dropOffAddress">The drop off address; optional.</param>
    /// <returns>The drop off address.</returns>
    public XElement parmDropOffAddress(XElement _dropOffAddress = dropOffAddress)
    {
        dropOffAddress = _dropOffAddress;
        return dropOffAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPickupHubMasterCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Pick up hub master code.
    /// </summary>
    /// <param name="_pickupHubMasterCode">The pick up hub master code; optional.</param>
    /// <returns>The pick up hub master code.</returns>
    public TMSHubMasterCode parmPickupHubMasterCode(TMSHubMasterCode _pickupHubMasterCode = pickupHubMasterCode)
    {
        pickupHubMasterCode = _pickupHubMasterCode;
        return pickupHubMasterCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDropOffHubMasterCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Drop off hub master code.
    /// </summary>
    /// <param name="_dropOffHubMasterCode">The drop off hub master code; optional.</param>
    /// <returns>The drop off hub master code.</returns>
    public TMSHubMasterCode parmDropOffHubMasterCode(TMSHubMasterCode _dropOffHubMasterCode = dropOffHubMasterCode)
    {
        dropOffHubMasterCode = _dropOffHubMasterCode;
        return dropOffHubMasterCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerInvoiceCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customer invoice code.
    /// </summary>
    /// <param name="_customerInvoiceCode">The customer invoice code; optional.</param>
    /// <returns>The customer invoice code.</returns>
    public TMSCustomerInvoiceCode parmCustomerInvoiceCode(TMSCustomerInvoiceCode _customerInvoiceCode = customerInvoiceCode)
    {
        customerInvoiceCode = _customerInvoiceCode;
        return customerInvoiceCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customer code.
    /// </summary>
    /// <param name="_customerCode">The customer code; optional.</param>
    /// <returns>The customer code.</returns>
    public TMSCustomerCode parmCustomerCode(TMSCustomerCode _customerCode = customerCode)
    {
        customerCode = _customerCode;
        return customerCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostalCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Drop off postal code.
    /// </summary>
    /// <param name="_postalCode">The drop off postal code; optional.</param>
    /// <returns>The drop off postal code.</returns>
    public TMSPostalCode parmPostalCode(TMSPostalCode _postalCode = postalCode)
    {
        postalCode = _postalCode;
        return postalCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Drop off state.
    /// </summary>
    /// <param name="_state">The drop off state; optional.</param>
    /// <returns>The drop off state.</returns>
    public TMSState parmState(TMSState _state = state)
    {
        state = _state;
        return state;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Drop off country.
    /// </summary>
    /// <param name="_country">The drop off country; optional.</param>
    /// <returns>The drop off country.</returns>
    public TMSCountryRegion parmCountry(TMSCountryRegion _country = country)
    {
        country = _country;
        return country;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightTermsCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Freight terms code.
    /// </summary>
    /// <param name="_freightTermsCode">The freight terms code; optional.</param>
    /// <returns>The freight terms code.</returns>
    public TMSFreightTermCode parmFreightTermsCode(str _freightTermsCode = freightTermsCode)
    {
        freightTermsCode = _freightTermsCode;
        return freightTermsCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEquipmentCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Equipment code.
    /// </summary>
    /// <param name="_equipmentCode">The equipment code; optional.</param>
    /// <returns>The equipment code.</returns>
    public TMSEquipmentCode parmEquipmentCode(TMSEquipmentCode _equipmentCode = equipmentCode)
    {
        equipmentCode = _equipmentCode;
        return equipmentCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Zone.
    /// </summary>
    /// <param name="_zone">The zone; optional.</param>
    /// <returns>The zone.</returns>
    public TMSZone parmZone(TMSZone _zone = zone)
    {
        zone = _zone;
        return zone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Weight.
    /// </summary>
    /// <param name="_weight">The weight; optional.</param>
    /// <returns>The weight.</returns>
    public TMSWeight parmWeight(TMSWeight _weight = weight)
    {
        weight = _weight;
        return weight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaxWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maximum weight.
    /// </summary>
    /// <param name="_maxWeight">The maximum weight; optional.</param>
    /// <returns>The maximum weight.</returns>
    /// <remarks>
    /// Used as part of the VolumeWeight rate engine where the max weight,
    /// max(weight, volume * volumefactor) is calculated.
    /// </remarks>
    public TMSWeight parmMaxWeight(TMSWeight _maxWeight = maxWeight)
    {
        maxWeight = _maxWeight;
        return maxWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Value.
    /// </summary>
    /// <param name="_value">The value; optional.</param>
    /// <returns>The value.</returns>
    public real parmValue(real _value = value)
    {
        value = _value;
        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handling unit quantity.
    /// </summary>
    /// <param name="_quantity">The handling unit quantity; optional.</param>
    /// <returns>The handling unit quantity.</returns>
    public TMSQty parmQuantity(TMSQty _quantity = quantity)
    {
        quantity = _quantity;
        return quantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVolume</Name>
				<Source><![CDATA[
    /// <summary>
    /// Volume.
    /// </summary>
    /// <param name="_volume">The volume; optional.</param>
    /// <returns>The volume.</returns>
    public Volume parmVolume(Volume _volume = volume)
    {
        volume = _volume;
        return volume;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZoneMasterCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Zone master code.
    /// </summary>
    /// <param name="_zoneMasterCode">The zone master code; optional.</param>
    /// <returns>The zone master code.</returns>
    public TMSZoneMasterCode parmZoneMasterCode(TMSZoneMasterCode _zoneMasterCode = zoneMasterCode)
    {
        zoneMasterCode = _zoneMasterCode;
        return zoneMasterCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Site.
    /// </summary>
    /// <param name="_site">The site; optional.</param>
    /// <returns>The site.</returns>
    public InventSiteId parmSite(InventSiteId _site = site)
    {
        site = _site;
        return site;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWarehouse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Warehouse.
    /// </summary>
    /// <param name="_warehouse">The warehouse; optional.</param>
    /// <returns>The warehouse.</returns>
    public InventLocationId parmWarehouse(InventLocationId _warehouse = warehouse)
    {
        warehouse = _warehouse;
        return warehouse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMiles</Name>
				<Source><![CDATA[
    /// <summary>
    /// Miles.
    /// </summary>
    /// <param name="_miles">The miles; optional.</param>
    /// <returns>The miles.</returns>
    public TMSMiles parmMiles(TMSMiles _miles = miles)
    {
        miles = _miles;
        return miles;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmScheduledShipDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Scheduled shipping date.
    /// </summary>
    /// <param name="_scheduledShipDateTime">The scheduled shipping date; optional.</param>
    /// <returns>The scheduled shipping date.</returns>
    public TMSScheduledShipUTCDateTime parmScheduledShipDateTime(TMSScheduledShipUTCDateTime _scheduledShipDateTime = scheduledShipDateTime)
    {
        scheduledShipDateTime = _scheduledShipDateTime;
        return scheduledShipDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEffectiveScheduledShipDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Effective scheduled shipping date.
    /// </summary>
    /// <returns>The effective scheduled shipping date.</returns>
    public TMSScheduledShipUTCDateTime getEffectiveScheduledShipDateTime()
    {
        return scheduledShipDateTime == DateTimeUtil::newDateTime(dateNull(), 0) ?  DateTimeUtil::utcNow() : scheduledShipDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResidential</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether destination hub is considered a residential address.
    /// </summary>
    /// <param name="_residential">The string that determines whether destination hub is considered a residential address; optional.</param>
    /// <returns>The string that determines whether destination hub is considered a residential address.</returns>
    public str parmResidential(str _residential = residential)
    {
        residential = _residential;
        return residential;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>