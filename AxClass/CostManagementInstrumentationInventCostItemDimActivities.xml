<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostManagementInstrumentationInventCostItemDimActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CostManagementInstrumentationInventCostItemDimActivities
{
    private const str ActivityNamePrefix = 'InventCostItemDim.';
    private const str IncludePhysicalValueForAverageModel = '.IncludePhysicalValueForAverageModel';
    private const str InventCostRecalcIncludePhysicalValueForAverageModel = 'InventCostRecalcIncludePhysicalValueForAverageModel';
    private const str TransactionDataPrefix = 'InventTransReceipt.';
    private const str InventClosingIdConst = 'InventClosingId';
    private const str InventTransOriginIdConst = 'InventTransOriginId';
    private const str ReturnInventTransOriginIdConst = 'ReturnInventTransOriginId';
    private const str VoucherPhysicalConst = 'VoucherPhysical';
    private const str AmountTotalConst = 'AmountTotal';
    private const str QtyTotalConst = 'QtyTotal';
    private const str AllocatedAmountConst = 'AllocatedAmount';
    private const str AllocatedQtyConst = 'AllocatedQty';
    private const str AdjustmentAmountConst = 'AdjustmentAmount';
    private const str AdjustedAmountConst = 'AdjustedAmount';
    private const str RoundOffUnitConst = 'RoundOffUnit';
    private const str TransCountConst = 'TransCount';
    private CostManagementInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(CostManagementInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static CostManagementInstrumentationInventCostItemDimActivities newFromLogger(CostManagementInstrumentationLogger _logger)
    {
        return new CostManagementInstrumentationInventCostItemDimActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>AdjustmentAmountCheck</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext AdjustmentAmountCheck(AdjustmentAmountCheckBuilder _adjustmentAmountCheckBuilder)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + _adjustmentAmountCheckBuilder.parmMethodName());
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);
        
        activityContext.addCustomProperty(ActivityNamePrefix + InventClosingIdConst, int642Str(_adjustmentAmountCheckBuilder.parmInventClosingId()));
        activityContext.addCustomProperty(ActivityNamePrefix + RoundOffUnitConst, real2double(_adjustmentAmountCheckBuilder.parmRoundOffUnit()).ToString());
        activityContext.addCustomProperty(TransactionDataPrefix + InventTransOriginIdConst, int642Str(_adjustmentAmountCheckBuilder.parmInventTransOriginId()));
        activityContext.addCustomProperty(TransactionDataPrefix + ReturnInventTransOriginIdConst, int642str(_adjustmentAmountCheckBuilder.parmReturnInventTransOriginId()));
        activityContext.addCustomProperty(TransactionDataPrefix + VoucherPhysicalConst, _adjustmentAmountCheckBuilder.parmVoucherPhysical());
        activityContext.addCustomProperty(TransactionDataPrefix + AmountTotalConst, real2double(_adjustmentAmountCheckBuilder.parmAmountTotal()).ToString());
        activityContext.addCustomProperty(TransactionDataPrefix + QtyTotalConst, real2double(_adjustmentAmountCheckBuilder.parmQtyTotal()).ToString());
        activityContext.addCustomProperty(TransactionDataPrefix + AllocatedAmountConst, real2double(_adjustmentAmountCheckBuilder.parmAllocatedAmount()).ToString());
        activityContext.addCustomProperty(TransactionDataPrefix + AllocatedQtyConst, real2double(_adjustmentAmountCheckBuilder.parmAllocatedQty()).ToString());
        activityContext.addCustomProperty(TransactionDataPrefix + AdjustmentAmountConst, real2double(_adjustmentAmountCheckBuilder.parmAdjustmentAmount()).ToString());
        activityContext.addCustomProperty(TransactionDataPrefix + AdjustedAmountConst, real2double(_adjustmentAmountCheckBuilder.parmAdjustedAmount()).ToString());
        activityContext.addCustomProperty(TransactionDataPrefix + TransCountConst, int2str(_adjustmentAmountCheckBuilder.parmTransCount()));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>includePhysicalValueForAverageModel</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext includePhysicalValueForAverageModel(boolean isIncludePhysicalValueForAverageModel)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + IncludePhysicalValueForAverageModel);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(ActivityNamePrefix + InventCostRecalcIncludePhysicalValueForAverageModel, int2Str(isIncludePhysicalValueForAverageModel));

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>