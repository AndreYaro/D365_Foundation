<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>StockTransferShipmentPriceValidation_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
#ISOCountryRegionCodes
/// <summary>
/// The <c>StockTransferShipmentPriceValidation_IN</c> class implements validation of lines are to be shipped.
/// </summary>
public class StockTransferShipmentPriceValidation_IN
{
    private ParmId parmId;
    private InventTransferTable inventTransferTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParmIdTransferId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>StockTransferShipmentPriceValidation_IN</c> class.
    /// </summary>
    /// <param name = "_parmId">A parm table ID.</param>
    /// <param name = "_inventTransferId">An identificator of transfer order.</param>
    /// <returns>A new instance of <c>StockTransferShipmentPriceValidation_IN</c> class.</returns>
    public static StockTransferShipmentPriceValidation_IN newFromParmIdTransferId(ParmId _parmId, InventTransferId _inventTransferId)
    {
        StockTransferShipmentPriceValidation_IN priceValidation = new StockTransferShipmentPriceValidation_IN();
        priceValidation.parmId = _parmId;
        priceValidation.inventTransferTable = InventTransferTable::find(_inventTransferId);

        return priceValidation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsZeroPriceStockTransferLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determinates if transfer order shippment contains line without set unit price.
    /// </summary>
    /// <returns>true if transfer order shippment contains at least one line without set unit price; otherwise false</returns>
    public boolean existsZeroPriceStockTransferLines()
    {
        InventTransferParmLine inventTransferParmLine;
        InventTransferLine inventTransferLine;
        InventTransferLine_IN inventTransferLine_IN;

        select firstonly RecId from inventTransferLine_IN
                where inventTransferLine_IN.NetAmount == 0 
            exists join inventTransferLine
                where   inventTransferLine.RecId == inventTransferLine_IN.InventTransferLine
            exists join inventTransferParmLine
                where inventTransferLine.TransferId == inventTransferParmLine.TransferId
                    && inventTransferLine.InventTransId == inventTransferParmLine.InventTransId
                    && inventTransferParmLine.ParmId == parmId
                    && inventTransferParmLine.QtyShipNow != 0;

        return inventTransferLine_IN.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>