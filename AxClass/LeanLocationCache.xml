<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanLocationCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LeanLocationCache</c> class holds a cache of plan activity locations and production flow picking locations.
/// </summary>
class LeanLocationCache
{
    #define.MaxCacheSize(2500)

    Map     leanProdFlowCache;
    Map     planActivityCache;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPlanActivityLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the plan activity location in the cache.
    /// </summary>
    /// <param name="_planActivityRecId">
    ///     The ID of the plan activity.
    /// </param>
    /// <returns>
    ///     The container with the found location or with an empty record otherwise.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public container getPlanActivityLocation(RecId _planActivityRecId)
    {
        container               result;

        if (planActivityCache.exists(_planActivityRecId))
        {
            result = [planActivityCache.lookup(_planActivityRecId)];
        }

        return result;
    }
]]></Source>
			</Method>
			<Method>
				<Name>getProdFlowActivityPickingLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the picking location of the production flow in the cache.
    /// </summary>
    /// <param name="_itemId">
    ///     The item ID.
    /// </param>
    /// <param name="_inventDimId">
    ///     The inventory dimensions ID.
    /// </param>
    /// <param name="_planActivity">
    ///     The plan activity ID.
    /// </param>
    /// <returns>
    ///     The container with the found picking location or with an empty record otherwise.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public container getProdFlowActivityPickingLocation(
        ItemId          _itemId,
        InventDimId     _inventDimId,
        RecId           _planActivity)
    {
        container  key     = [_itemId, _inventDimId, _planActivity];
        container  result;

        if (leanProdFlowCache.exists(key))
        {
            result = [leanProdFlowCache.lookup(key)];
        }

        return result;
    }
]]></Source>
			</Method>
			<Method>
				<Name>maxSize</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public int maxSize()
    {
        return #MaxCacheSize;
    }
]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
        leanProdFlowCache    = new Map(Types::Container, Types::Record);
        planActivityCache    = new Map(Types::Int64, Types::Record);
    }
]]></Source>
			</Method>
			<Method>
				<Name>setPlanActivityLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Stores the plan activity location in the cache.
    /// </summary>
    /// <param name="_planActivityRecId">
    ///     The plan activity ID.
    /// </param>
    /// <param name="_planActivityLocation">
    ///     The location record.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setPlanActivityLocation(RecId _planActivityRecId, PlanActivityLocation _planActivityLocation)
    {
        if (planActivityCache.elements() > #MaxCacheSize)
        {
            planActivityCache = new Map(Types::Int64, Types::Record);
        }

        planActivityCache.insert(
            _planActivityRecId,
            _planActivityLocation);
    }
]]></Source>
			</Method>
			<Method>
				<Name>setProdFlowActivityPickingLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Stores the production flow picking location in the cache.
    /// </summary>
    /// <param name="_itemId">
    ///     The item ID.
    /// </param>
    /// <param name="_inventDimId">
    ///     The inventory dimensions ID.
    /// </param>
    /// <param name="_planActivity">
    ///     The plan activity ID.
    /// </param>
    /// <param name="_leanProdFlowActivityPickingLocation">
    ///     The picking location record.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setProdFlowActivityPickingLocation(
        ItemId                               _itemId,
        InventDimId                          _inventDimId,
        RecId                                _planActivity,
        LeanProdFlowActivityPickingLocation  _leanProdFlowActivityPickingLocation)
    {
        container key = [_itemId, _inventDimId, _planActivity];

        if (leanProdFlowCache.elements() > #MaxCacheSize)
        {
            leanProdFlowCache = new Map(Types::Container, Types::Record);
        }

        leanProdFlowCache.insert(
            key,
            _leanProdFlowActivityPickingLocation);
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LeanLocationCache construct()
    {
        return new LeanLocationCache();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>