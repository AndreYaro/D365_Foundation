<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailWHSHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailWHSHandler</c> class contains helper methods for Retail warehouse enabled item sale.
/// </summary>
public class RetailWHSHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>UpdateInventTransDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the proper inventDimId for retail WHS enabled item.
    /// </summary>
    /// <param name = "_inventTrans">The current invent transaction.</param>
    public static void UpdateInventTransDimId(InventTrans _inventTrans)
    {
        InventDim                       itemInventDim;

        itemInventDim = InventDim::find(_inventTrans.inventDimId);

        // Get the proper location based on item warehouse settings
        itemInventDim = RetailWHSHandler::updateItemInventDimLocation(_inventTrans.ItemId,
                                                                          itemInventDim,
                                                                          _inventTrans.Qty > 0 ? InventDirection::Receipt : InventDirection::Issue);

        _inventTrans.InventDimId = InventDim::findOrCreate(itemInventDim).inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateItemInventDimLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the item default location for retail transactions.
    /// </summary>
    /// <param name = "_itemId">The item id in transaction.</param>
    /// <param name = "_inventDim">The current invent dim id.</param>
    /// <param name = "_inventDirection">The invent direction of issue or receipt.</param>
    /// <returns>The updated invent dim record.</returns>
    public static InventDim updateItemInventDimLocation(ItemId _itemId, InventDim _inventDim, InventDirection _inventDirection)
    {
        WMSLocation wmsLocation;

        if (WHSInventEnabled::exist(_itemId) || EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(_itemId, fieldNum(InventDim, wmsLocationId)))
        {
            // Retail Transaction should respect item location if exist
            wmsLocation = WMSLocation::defaultItemLocation(_itemId, _inventDirection, _inventDim, true);

            if (wmsLocation)
            {
                _inventDim.wMSLocationId = wmsLocation.wMSLocationId;
            }
        }

        return _inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateItemInventDimLocationV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Call updateItemInventDimLocation() then update the Advanced Warehouse location to
    /// that which was given. This is added as updateItemInventDimLocation() may have been
    /// customized.
    /// </summary>
    /// <param name = "_itemId">The item id in transaction.</param>
    /// <param name = "_inventDim">The current invent dim id.</param>
    /// <param name = "_inventDirection">The invent direction of issue or receipt.</param>
    /// <param name = "_wmsLocationId">The wmsLocationId given.</param>
    /// <returns>The updated invent dim record.</returns>
    public static InventDim updateItemInventDimLocationV2(ItemId _itemId, InventDim _inventDim, InventDirection _inventDirection, WMSLocationId _wmsLocationId)
    {
        WMSLocation wmsLocation;

        // Set the default WMSLocationId.
        // This method is also customized and may set other fields, so we must call it first.
        _inventDim = RetailWHSHandler::updateItemInventDimLocation(_itemId, _inventDim, _inventDirection);

        // Set the WMSLocationId to that given, if it is valid for the InventLocationId.
        if (_wmsLocationId && _inventDim.InventLocationId
                && (WHSInventEnabled::exist(_itemId) || EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(_itemId, fieldNum(InventDim, wmsLocationId))))
        {
            wmsLocation = WMSLocation::find(_wmsLocationId, _inventDim.InventLocationId);

            if (wmsLocation.wMSLocationId)
            {
                _inventDim.wMSLocationId = wmsLocation.wMSLocationId;
            }
        }

        return _inventDim;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>