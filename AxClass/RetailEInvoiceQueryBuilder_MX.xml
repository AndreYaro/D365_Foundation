<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailEInvoiceQueryBuilder_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailEInvoiceQueryBuilder_MX</c> class builds query for CFDI Global.
/// </summary>
internal final class RetailEInvoiceQueryBuilder_MX
{
    private RetailStatementJour statementJour;
    private RetailEInvoiceAggregatedStatement_MX aggregatedStatement;
    private Query query;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs query builder.
    /// </summary>
    /// <param name = "_statementJour">The statement journal.</param>
    /// <returns>The query builder.</returns>
    internal static RetailEInvoiceQueryBuilder_MX construct(RetailStatementJour _statementJour)
    {
        RetailEInvoiceQueryBuilder_MX builder = new RetailEInvoiceQueryBuilder_MX();
        builder.statementJour = _statementJour;

        return builder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromAggregatedStatement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs query builder from aggregated statement.
    /// </summary>
    /// <param name = "_aggregatedStatement">The aggregated statement.</param>
    /// <returns>The query builder.</returns>
    internal static RetailEInvoiceQueryBuilder_MX constructFromAggregatedStatement(RetailEInvoiceAggregatedStatement_MX _aggregatedStatement)
    {
        RetailEInvoiceQueryBuilder_MX builder = new RetailEInvoiceQueryBuilder_MX();
        builder.aggregatedStatement = _aggregatedStatement;

        return builder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>query</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query.
    /// </summary>
    /// <returns>The query instance.</returns>
    internal Query query()
    {
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds base query.
    /// </summary>
    /// <returns>The builder instance.</returns>
    internal RetailEInvoiceQueryBuilder_MX build()
    {
        query = new Query();
        QueryBuildDatasource qbds = query.addDataSource(tableNum(RetailTransSalesTransAmountExclPrepView));

        if (aggregatedStatement)
        {
            QueryBuildDatasource aggregatedRelationQbds = qbds.addDataSource(tableNum(RetailEInvoiceAggregatedStatementRelation_MX));
            aggregatedRelationQbds.addRange(fieldNum(RetailEInvoiceAggregatedStatementRelation_MX, AggregatedStatementId)).value(queryValue(aggregatedStatement.AggregatedStatementId));
            aggregatedRelationQbds.addLink(fieldNum(RetailTransSalesTransAmountExclPrepView, StatementId), fieldNum(RetailEInvoiceAggregatedStatementRelation_MX, StatementId));
            aggregatedRelationQbds.joinMode(JoinMode::ExistsJoin);
        }
        else
        {
            qbds.addRange(fieldNum(RetailTransSalesTransAmountExclPrepView, StatementId)).value(queryValue(statementJour.statementId));
        }

        qbds.addRange(fieldNum(RetailTransSalesTransAmountExclPrepView, CFDIDocumentType)).value(queryValue(RetailCFDIDocumentType_MX::CFDIGlobal));

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addGroupBy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds group by conditions.
    /// </summary>
    /// <returns>The builder instance.</returns>
    internal RetailEInvoiceQueryBuilder_MX addGroupBy()
    {
        QueryBuildDatasource qbds = query.dataSourceTable(tableNum(RetailTransSalesTransAmountExclPrepView));
        qbds.addGroupByField(fieldNum(RetailTransSalesTransAmountExclPrepView, Channel));
        qbds.addGroupByField(fieldNum(RetailTransSalesTransAmountExclPrepView, store));
        qbds.addGroupByField(fieldNum(RetailTransSalesTransAmountExclPrepView, terminal));
        qbds.addGroupByField(fieldNum(RetailTransSalesTransAmountExclPrepView, transactionId));

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>