<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionSupplementaryInvoiceCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailTransactionSupplementaryInvoiceCreator</c> implements creating supplementary invoice.
/// </summary>
public class RetailTransactionSupplementaryInvoiceCreator
{
    CustInvoiceJour custInvoiceJour;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of <c>RetailTransactionSupplementaryInvoiceCreator</c>.
    /// </summary>
    /// <param name = "_sourceTable">Supplementary invoice source.</param>
    /// <returns>A new instance of <c>RetailTransactionSupplementaryInvoiceCreator</c>.</returns>
    static public RetailTransactionSupplementaryInvoiceCreator construct(Common _sourceTable)
    {
        return new RetailTransactionSupplementaryInvoiceCreator(_sourceTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates supplementary invoice.
    /// </summary>
    public void create()
    {
        if (custInvoiceJour)
        {
            try
            {
                RetailTransactionTable retailTransactionTable = this.findRetailTransaction();
                if (retailTransactionTable)
                {
                    RetailTransactionSupplementaryInvoice retailTransactionSupplementaryInvoice;
                    retailTransactionSupplementaryInvoice.initFromRetailTransactionTable(retailTransactionTable);
                    retailTransactionSupplementaryInvoice.initFromCustInvoiceJour(custInvoiceJour);
                    retailTransactionSupplementaryInvoice.insert();
                }
            }
            catch
            {
                error("@SYS138340");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>RetailTransactionSupplementaryInvoiceCreator</c> class.
    /// </summary>
    /// <param name = "_source">Supplementary invoice source.</param>
    protected void new(Common _source)
    {
        this.init(_source);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRetailTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds retail transaction related to supplementary invoice.
    /// </summary>
    /// <returns>Retail transaction.</returns>
    protected RetailTransactionTable findRetailTransaction()
    {
        RetailTransactionTable retailTransactionTable;

        select firstonly retailTransactionTable
            where retailTransactionTable.SalesOrderId == custInvoiceJour.SalesId
                && retailTransactionTable.type == RetailTransactionType::Sales
                && retailTransactionTable.entryStatus == RetailEntryStatus::Posted;

        return retailTransactionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    private void init(Common _source)
    {
        custInvoiceJour = _source as CustInvoiceJour;
        if (custInvoiceJour)
        {
            custInvoiceJour = CustInvoiceJour::findRecId(custInvoiceJour.RecId);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>