<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPostDatedCheckInstallments</Name>
	<SourceCode>
		<Declaration><![CDATA[
class VendPostDatedCheckInstallments extends RunBase
{
    int                 numberOfInstallments;
    int                 numberOfUnits;
    PeriodUnit          periodUnit;
    LedgerJournalTrans  ledgerJournalTrans;
    DialogField         dialogInstallments;
    DialogField         dialogUnit;
    DialogField         dialogNumberUnits;

    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        numberOfInstallments,
        numberOfUnits,
        periodUnit
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog box can be either built by using the <c>Dialog</c> class or by using a class that is
    /// created in the AOT.
    /// </remarks>
    public Object dialog()
    {
        DialogRunbase   dialog = super();

        dialog.addGroup("@SYS330293");

        dialogInstallments = dialog.addField(extendedtypestr(Integer),"@SYS330294", "@SYS335936");
        dialogInstallments.value(numberOfInstallments);

        dialogUnit        = dialog.addField(enumstr(PeriodUnit), "@SYS23339", "@SYS335938" );
        dialogUnit.value(periodUnit);

        dialogNumberUnits = dialog.addField(extendedtypestr(Integer),"@SYS23075", "@SYS335937");
        dialogNumberUnits.value(numberOfUnits);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAmount</Name>
				<Source><![CDATA[
    private Amount getAmount(Amount _amount)
    {
        return CurrencyExchangeHelper::amount(_amount / numberOfInstallments, ledgerJournalTrans.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        numberOfInstallments = dialogInstallments.value();
        numberOfUnits = dialogNumberUnits.value();
        periodUnit = dialogUnit.value();
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected TransDate getNextDate(int _instNumber)
    {
        utcdatetime currentDateTime;
        utcdatetime nextDateTime;

        currentDateTime = DateTimeUtil::getSystemDateTime();

        switch (periodUnit)
        {
            case PeriodUnit::Day: nextDateTime = DateTimeUtil::addDays(currentDateTime, _instNumber*numberofUnits);
                                  break;
            case PeriodUnit::Month: nextDateTime = DateTimeUtil::addMonths(currentDateTime, _instNumber*numberofUnits);
                                  break;
            case PeriodUnit::Year: nextDateTime = DateTimeUtil::addYears(currentDateTime, _instNumber*numberofUnits);
                                  break;
        }

        return DateTimeUtil::date(nextDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInstance</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void initInstance(Args args)
    {
        ledgerJournalTrans = args.record();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        ;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        LedgerJournalTrans  ledgerJournalTransLocal;
        CustVendPDCRegister custVendPDCRegister;
        int i = 1;

        while (i<= numberOfInstallments)
        {
            ledgerJournalTransLocal.data(ledgerJournalTrans);
            ledgerJournalTransLocal.TransDate = this.getNextDate(i);
            ledgerJournalTransLocal.AmountCurCredit = this.getAmount(ledgerJournalTrans.AmountCurCredit);
            ledgerJournalTransLocal.AmountCurDebit = this.getAmount(ledgerJournalTrans.AmountCurDebit);
            ledgerJournalTransLocal.LineNum = ledgerJournalTrans::lastLineNum(ledgerJournalTransLocal.JournalNum) + 1;
            ledgerJournalTransLocal.insert();
            i++;

            custVendPDCRegister.MaturityDate = ledgerJournalTransLocal.TransDate;
            custVendPDCRegister.AccountType = CustVendACType::Vend;
            custVendPDCRegister.LedgerJournalTrans = ledgerJournalTransLocal.RecId;
            custVendPDCRegister.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a Select button is to be added to the dialog box.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    /// <remarks>
    /// If you click this button, it will show the query form. Therefore, the <c>queryRun</c> method has to
    /// return a valid <c>queryRun</c> object.If you change the return value to true the button will be
    /// added.
    /// </remarks>
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer         version     = conpeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object _calledFrom = null)
    {
        boolean ret = true;

        if (numberOfInstallments <= 0)
            ret = checkFailed("@SYS322498");

        if (numberOfUnits <= 0)
            ret = checkFailed("@SYS322499");

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static VendPostDatedCheckInstallments construct(Args _args)
    {
        VendPostDatedCheckInstallments instance;
        ;
        instance = new VendPostDatedCheckInstallments();
        instance.initInstance(_args);
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public ClassDescription description()
    {
        return "@SYS322501";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        VendPostDatedCheckInstallments  createInstallments;
        VendPDCIFormRefresh             formRefresh;
        FormRun callerForm;

        if (!args || args.dataset() != tablenum(LedgerJournalTrans))
            throw error(strfmt("@SYS25516",VendPostDatedCheckInstallments::description()));

        createInstallments  = VendPostDatedCheckInstallments::construct(args);

        if (createInstallments.prompt())
        {
            createInstallments.runOperation();

            callerForm = args.caller();
            if (callerForm)
            {
                if (callerForm.name() == formstr(LedgerJournalTransVendPaym))
                {
                    formRefresh = callerForm as VendPDCIFormRefresh;
                    if (formRefresh)
                    {
                        formRefresh.refreshProposal();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>