<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccJourRuleVendPaymentReqExpProdDiscount</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AccJourRuleVendPaymentReqExpProdDiscount</c> class controls various posting attributes that
///    are used during the posting of a vendor invoice line.
/// </summary>
[
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::Discount),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::DiscountVariance),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::PriceAdjustment),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::PriceAdjustmentVariance),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::CashDiscount),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::CashDiscountVariance)
]
public class AccJourRuleVendPaymentReqExpProdDiscount extends AccountingJournalizingRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canUseInventMainAccDimensionListProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check whether the main account list provider can be used.
    /// </summary>
    /// <returns>
    /// true if the main account list provider can be used; otherwise, false.
    /// </returns>
    public boolean canUseInventMainAccDimensionListProvider()
    {
        boolean canUseInventMainAccDimensionListProvider;

        if (this.parmLedgerPostingType() == LedgerPostingType::VendBalance)
        {
            canUseInventMainAccDimensionListProvider = false;
        }
        else
        {
            canUseInventMainAccDimensionListProvider = super();
        }

        return canUseInventMainAccDimensionListProvider;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        return LedgerPostingType::VendBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        DebitCredit side;

        if (accountingDistribution.TransactionCurrencyAmount > 0)
        {
            if (monetaryAmount == MonetaryAmount::CashDiscount || monetaryAmount == MonetaryAmount::CashDiscountVariance)
            {
                side = DebitCredit::Debit;
            }
            else
            {
                side = DebitCredit::Credit;
            }
        }
        else
        {
            if (monetaryAmount == MonetaryAmount::CashDiscount || monetaryAmount == MonetaryAmount::CashDiscountVariance)
            {
                side = DebitCredit::Credit;
            }
            else
            {
                side = DebitCredit::Debit;
            }
        }

        return side;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>