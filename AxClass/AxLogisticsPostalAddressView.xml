<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxLogisticsPostalAddressView</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AxLogisticsPostalAddressView</c> class is an AxBC class that overrides the
///    <c>AxInternalBase</c> class.
/// </summary>
class AxLogisticsPostalAddressView extends AxApplicationBase
{
    LogisticsPostalAddressView logisticsPostalAddressView;

    str             county;
    str             state;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>axOrig</c> object for the postal address view.
    /// </summary>
    /// <returns>
    ///    The <c>axOrig</c> object for the specified postal address view.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the current record in the <c>logisticsPostalAddressView</c> view.
    /// </summary>
    /// <param name="_logisticsPostalAddressView">
    ///    The <c>logisticsPostalAddressView</c> view to use to find the current record.
    /// </param>
    /// <returns>
    ///    The current record in the <c>logisticsPostalAddressView</c> view.
    /// </returns>
    public Common currentRecord(Common _logisticsPostalAddressView = logisticsPostalAddressView)
    {
        if (!prmisdefault(_logisticsPostalAddressView))
        {
            super(_logisticsPostalAddressView);
            logisticsPostalAddressView = _logisticsPostalAddressView;
        }
        else
        {
            super();
        }

        return logisticsPostalAddressView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an empty record for the <c>LogisticsPostalAddressView</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record from the <c>LogisticsPostalAddressView</c> table.
    /// </returns>
    protected Common emptyRecord()
    {
        LogisticsPostalAddressView localLogisticsPostalAddressView;
        return localLogisticsPostalAddressView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logisticsPostalAddressView</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an instance the <c>logisticsPostalAddressView</c> object
    /// </summary>
    /// <param name="_logisticsPostalAddressView">
    ///    The <c>logisticsPostalAddressView</c> object that is passed as parameter
    /// </param>
    /// <returns>
    ///    The current record of the <c>logisticsPostalAddressView</c> view.
    /// </returns>
    public LogisticsPostalAddressView logisticsPostalAddressView(LogisticsPostalAddressView _logisticsPostalAddressView = logisticsPostalAddressView)
    {
        if (!prmisdefault(_logisticsPostalAddressView))
        {
            this.setCurrentRecordFromExternal(_logisticsPostalAddressView);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parm_RecId_LogisticsPostalAddress</Name>
				<Source><![CDATA[
    public RecId parm_RecId_LogisticsPostalAddress(RecId __RecId_LogisticsPostalAddress = 0)
    {
        if (!prmisdefault(__RecId_LogisticsPostalAddress))
        {
            this.setField(fieldNum(LogisticsPostalAddressView, _RecId_LogisticsPostalAddress), __RecId_LogisticsPostalAddress);
        }

        return logisticsPostalAddressView._RecId_LogisticsPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parm_recVersion_LogisticsPostalAddress</Name>
				<Source><![CDATA[
    public RecVersion parm_recVersion_LogisticsPostalAddress(RecVersion __recVersion_LogisticsPostalAddress = 0)
    {
        if (!prmisdefault(__recVersion_LogisticsPostalAddress))
        {
            this.setField(fieldNum(LogisticsPostalAddressView, _recVersion_LogisticsPostalAddress), __recVersion_LogisticsPostalAddress);
        }

        return logisticsPostalAddressView._recVersion_LogisticsPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddress</Name>
				<Source><![CDATA[
    public LogisticsAddressing parmAddress(LogisticsAddressing _address = '')
    {
        if (!prmisdefault(_address))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, Address), _address);
        }

        return logisticsPostalAddressView.Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApartment_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressApartment_RU parmApartment_RU(LogisticsAddressApartment_RU _apartment_RU = '')
    {
        if (!prmisdefault(_apartment_RU))
        {
            this.setField(fieldNum(LogisticsPostalAddressView, Apartment_RU), _apartment_RU);
        }

        return logisticsPostalAddressView.Apartment_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuilding_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressBuilding_RU parmBuilding_RU(LogisticsAddressBuilding_RU _building_RU = '')
    {
        if (!prmisdefault(_building_RU))
        {
            this.setField(fieldNum(LogisticsPostalAddressView, Building_RU), _building_RU);
        }

        return logisticsPostalAddressView.Building_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuildingCompliment</Name>
				<Source><![CDATA[
    public LogisticsAddressBuildingCompliment parmBuildingCompliment(LogisticsAddressBuildingCompliment _buildingCompliment = '')
    {
        if (!prmisdefault(_buildingCompliment))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, BuildingCompliment), _buildingCompliment);
        }

        return logisticsPostalAddressView.BuildingCompliment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCity</Name>
				<Source><![CDATA[
    public LogisticsAddressCityName parmCity(LogisticsAddressCityName _city = '')
    {
        if (!prmisdefault(_city))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, City), _city);
        }

        return logisticsPostalAddressView.City;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountryCurrencyCode</Name>
				<Source><![CDATA[
    public str parmCountryCurrencyCode(str _countryCurrencyCode = '')
    {
        DictField   dictField;
        str         countryCurrencyCode;

        countryCurrencyCode = _countryCurrencyCode;

        if (!prmisdefault(_countryCurrencyCode))
        {
            dictField = new DictField(tablenum(LogisticsPostalAddressView),fieldnum(LogisticsPostalAddressView,CountryCurrencyCode));
            this.validateInboundCurrencyString(countryCurrencyCode,dictField);

            if (this.valueMappingInbound())
            {
                countryCurrencyCode = this.axCurrencyCode(countryCurrencyCode);
            }

            this.setField(fieldnum(LogisticsPostalAddressView, CountryCurrencyCode), countryCurrencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(logisticsPostalAddressView.CountryCurrencyCode);
        }
        else
        {
            return logisticsPostalAddressView.CountryCurrencyCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountryRegionId</Name>
				<Source><![CDATA[
    public str parmCountryRegionId(str _countryRegionId = '')
    {
        DictField   dictField;
        str         countryRegionId;

        countryRegionId = _countryRegionId;

        if (!prmisdefault(_countryRegionId))
        {
            dictField = new DictField(tablenum(LogisticsPostalAddressView),fieldnum(LogisticsPostalAddressView,CountryRegionId));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(countryRegionId,dictField,this.mapPolicy().xMLMapCountryRegion());
                countryRegionId = this.axLogisticsAddressCountryRegionId(countryRegionId);
            }
            else
            {
                this.validateInboundString(countryRegionId,dictField);
            }
            this.setField(fieldnum(LogisticsPostalAddressView, CountryRegionId), countryRegionId);
        }

        if (this.valueMappingOutbound())
        {
            return this.axLogisticsAddressCountryRegionId(logisticsPostalAddressView.CountryRegionId);
        }
        else
        {
            return logisticsPostalAddressView.CountryRegionId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCounty</Name>
				<Source><![CDATA[
    public str parmCounty(str _county = '')
    {
        DictField   dictField;
        if (!prmisdefault(_county))
        {
            dictField = new DictField(tablenum(LogisticsPostalAddressView),fieldnum(LogisticsPostalAddressView,County));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_county,dictField,this.mapPolicy().xMLMapCounty());
                county = _county;
            }
            else
            {
                this.validateInboundString(_county,dictField);
            }
            this.setField(fieldnum(LogisticsPostalAddressView, County), _county);
        }

        if (this.valueMappingOutbound())
        {
            return this.axLogisticsAddressCountyId(logisticsPostalAddressView.County, logisticsPostalAddressView.CountryRegionId, logisticsPostalAddressView.State);
        }
        else
        {
            return logisticsPostalAddressView.County;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDistrict</Name>
				<Source><![CDATA[
    public LogisticsAddressDistrictRecId parmDistrict(LogisticsAddressDistrictRecId _district = 0)
    {
        if (!prmisdefault(_district))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, District), _district);
        }

        return logisticsPostalAddressView.District;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDistrictName</Name>
				<Source><![CDATA[
    public LogisticsAddressDistrictName parmDistrictName(LogisticsAddressDistrictName _districtName = '')
    {
        if (!prmisdefault(_districtName))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, DistrictName), _districtName);
        }

        return logisticsPostalAddressView.DistrictName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFlatId_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressFlatId_RU parmFlatId_RU(LogisticsAddressFlatId_RU _flat = 0)
    {
        if (!prmisdefault(_flat))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, FlatId_RU), _flat);
        }

        return logisticsPostalAddressView.FlatId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHouseId_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressHouseId_RU parmHouseId_RU(LogisticsAddressHouseId_RU _house = 0)
    {
        if (!prmisdefault(_house))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, HouseId_RU), _house);
        }

        return logisticsPostalAddressView.HouseId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmISOcode</Name>
				<Source><![CDATA[
    public LogisticsAddressCountryRegionISOCode parmISOcode(LogisticsAddressCountryRegionISOCode _iSOcode = '')
    {
        if (!prmisdefault(_iSOcode))
        {
            this.setField(fieldNum(LogisticsPostalAddressView, ISOcode), _iSOcode);
        }

        return logisticsPostalAddressView.ISOcode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrivate</Name>
				<Source><![CDATA[
    public LogisticsIsPrivate parmIsPrivate(LogisticsIsPrivate _isPrivate = NoYes::No)
    {
        if (!prmisdefault(_isPrivate))
        {
            this.setField(fieldNum(LogisticsPostalAddressView, IsPrivate), _isPrivate);
        }

        return logisticsPostalAddressView.IsPrivate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLatitude</Name>
				<Source><![CDATA[
    public LogisticsAddressLatitude parmLatitude(LogisticsAddressLatitude _latitude = 0)
    {
        if (!prmisdefault(_latitude))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, Latitude), _latitude);
        }

        return logisticsPostalAddressView.Latitude;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocation</Name>
				<Source><![CDATA[
    public recId parmLocation(recId _location = 0)
    {
        if (!prmisdefault(_location))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, Location), _location);
        }

        return logisticsPostalAddressView.Location;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocationName</Name>
				<Source><![CDATA[
    public Description parmLocationName(Description _locationName = '')
    {
        if (!prmisdefault(_locationName))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, LocationName), _locationName);
        }

        return logisticsPostalAddressView.LocationName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLongitude</Name>
				<Source><![CDATA[
    public LogisticsAddressLongitude parmLongitude(LogisticsAddressLongitude _longitude = 0)
    {
        if (!prmisdefault(_longitude))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, Longitude), _longitude);
        }

        return logisticsPostalAddressView.Longitude;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostalAddress</Name>
				<Source><![CDATA[
    public recId parmPostalAddress(recId _postalAddress = 0)
    {
        if (!prmisdefault(_postalAddress))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, PostalAddress), _postalAddress);
        }

        return logisticsPostalAddressView.PostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostalAddressRecId</Name>
				<Source><![CDATA[
    public recId parmPostalAddressRecId(recId _postalAddressRecId = 0)
    {
        if (!prmisdefault(_postalAddressRecId))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, PostalAddressRecId), _postalAddressRecId);
        }

        return logisticsPostalAddressView.PostalAddressRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostBox</Name>
				<Source><![CDATA[
    public LogisticsAddressPostBox parmPostBox(LogisticsAddressPostBox _postBox = '')
    {
        if (!prmisdefault(_postBox))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, PostBox), _postBox);
        }

        return logisticsPostalAddressView.PostBox;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrivateForParty</Name>
				<Source><![CDATA[
    public DirPartyPrivateLocationRecId parmPrivateForParty(DirPartyPrivateLocationRecId _privateForParty = 0)
    {
        if (!prmisdefault(_privateForParty))
        {
            this.setField(fieldNum(LogisticsPostalAddressView, PrivateForParty), _privateForParty);
        }

        return logisticsPostalAddressView.PrivateForParty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmState</Name>
				<Source><![CDATA[
    public str parmState(str _state = '')
    {
        DictField   dictField;
        if (!prmisdefault(_state))
        {
            dictField = new DictField(tablenum(LogisticsPostalAddressView),fieldnum(LogisticsPostalAddressView,State));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_state,dictField,this.mapPolicy().xMLMapState());
                state = _state;
            }
            else
            {
                this.validateInboundString(_state,dictField);
            }
            this.setField(fieldnum(LogisticsPostalAddressView, State), _state);
        }

        if (this.valueMappingOutbound())
        {
            return this.axLogisticsAddressStateId(logisticsPostalAddressView.State, logisticsPostalAddressView.CountryRegionId);
        }
        else
        {
            return logisticsPostalAddressView.State;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStreet</Name>
				<Source><![CDATA[
    public LogisticsAddressStreet parmStreet(LogisticsAddressStreet _street = '')
    {
        if (!prmisdefault(_street))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, Street), _street);
        }

        return logisticsPostalAddressView.Street;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStreetId_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressStreetID_RU parmStreetId_RU(LogisticsAddressStreetID_RU _street = 0)
    {
        if (!prmisdefault(_street))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, StreetId_RU), _street);
        }

        return logisticsPostalAddressView.StreetId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStreetNumber</Name>
				<Source><![CDATA[
    public LogisticsAddressStreetNumber parmStreetNumber(LogisticsAddressStreetNumber _streetNumber = '')
    {
        if (!prmisdefault(_streetNumber))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, StreetNumber), _streetNumber);
        }

        return logisticsPostalAddressView.StreetNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeZone</Name>
				<Source><![CDATA[
    public Timezone parmTimeZone(Timezone _timezone = Timezone::GMTMINUS1200INTERNATIONALDATELINEWEST)
    {
        if (!prmisdefault(_timezone))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, TimeZone), _timezone);
        }

        return logisticsPostalAddressView.TimeZone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidFrom</Name>
				<Source><![CDATA[
    public EffectiveDateTime parmValidFrom(EffectiveDateTime _validFrom = utcDateTimeNull())
    {
        if (!prmisdefault(_validFrom))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, ValidFrom), _validFrom);
        }

        return logisticsPostalAddressView.ValidFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidTo</Name>
				<Source><![CDATA[
    public ExpirationDateTime parmValidTo(ExpirationDateTime _validTo = utcDateTimeNull())
    {
        if (!prmisdefault(_validTo))
        {
            this.setField(fieldnum(LogisticsPostalAddressView, ValidTo), _validTo);
        }

        return logisticsPostalAddressView.ValidTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZipCode</Name>
				<Source><![CDATA[
    public str parmZipCode(str _zipCode = '')
    {
        DictField   dictField;
        str         zipCode;

        zipCode = _zipcode;

        if (!prmisdefault(_zipCode))
        {
            dictField = new DictField(tablenum(LogisticsPostalAddressView),fieldnum(LogisticsPostalAddressView,ZipCode));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_zipCode,dictField,this.mapPolicy().xMLMapZipCode());
                zipCode = this.axLogisticsAddressZipCodeId(_zipCode);
            }
            else
            {
                this.validateInboundString(zipCode,dictField);
            }
            this.setField(fieldnum(LogisticsPostalAddressView, ZipCode), zipCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axLogisticsAddressZipCodeId(logisticsPostalAddressView.ZipCode);
        }
        else
        {
            return logisticsPostalAddressView.ZipCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Ensures that all default methods are called before inserting or updating a record. Set default row
    ///    fields.
    /// </summary>
    protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueMapDependingFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Maps the incoming fields to the fields in the view.
    /// </summary>
    /// <remarks>
    ///    This method is used in the <c>save</c> method. Therefore, the incoming value mapping is performed
    ///    before the defaulting of fields.
    /// </remarks>
    protected void valueMapDependingFields()
    {
        if (this.valueMappingInbound())
        {
            if (state && logisticsPostalAddressView.CountryRegionId)
            {
                this.parmState(this.axLogisticsAddressStateId(state,logisticsPostalAddressView.CountryRegionId));

                if (county)
                {
                    this.parmCounty(this.axLogisticsAddressCountyId(county,
                                                                    logisticsPostalAddressView.CountryRegionId,
                                                                    logisticsPostalAddressView.State));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AxLogisticsPostalAddressView construct()
    {
        return new AxLogisticsPostalAddressView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLogisticsPostalAddressView</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new object of the <c>AxLogisticsPostalAddressView</c> view.
    /// </summary>
    /// <param name="_logisticsPostalAddressView">
    ///    The <c>logisticsPostalAddressView</c> view that is passed to create a new
    ///    <c>AxlogisticsPostalAddressView</c> object
    /// </param>
    /// <returns>
    ///    A new object of the <c>AxlogisticsPostalAddressView</c> view.
    /// </returns>
    public static AxLogisticsPostalAddressView newLogisticsPostalAddressView(LogisticsPostalAddressView _logisticsPostalAddressView)
    {
        AxLogisticsPostalAddressView axLogisticsPostalAddressView = AxLogisticsPostalAddressView::construct();
        axLogisticsPostalAddressView.logisticsPostalAddressView(_logisticsPostalAddressView);

        return axLogisticsPostalAddressView;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>