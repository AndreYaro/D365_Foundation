<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBLedgerJournalTrans_FixedAsset_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FBLedgerJournalTrans_FixedAsset_BR extends RunBase
{
    LineNum lineNum;
    LedgerJournalId journalNum;
    LedgerJournalName journalName;
    private TransDate transDate;
    private FBFiscalEstablishmentId_BR fiscalEstablishmentId;
    private FBGeneralTaxAdjustmentCode_BR pisAdjustmentCodeId;
    private FBGeneralTaxAdjustmentCode_BR cofinsAdjustmentCodeId;

    DialogRunbase               dialog;
    DialogField                 fiscalOrganizationField;
    DialogField                 transDateField;
    DialogField                 pisAdjustmentCodeField;
    DialogField                 cofinsAdjustmentCodeField;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createVoucher</Name>
				<Source><![CDATA[
    private Voucher createVoucher()
    {
        return new JournalVoucherNum(JournalTableData::newTable(LedgerJournalTable::find(journalNum))).getNew(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogTabPage       tabParameters;

        dialog          = super();
        tabParameters   = dialog.addTabPage("@SYP4884196");

        fiscalOrganizationField     = dialog.addField(extendedTypeStr(FiscalEstablishmentId_BR), "@SYS4001648");
        var fiscalOrganizationControl   = fiscalOrganizationField.control();
        fiscalOrganizationControl.registerOverrideMethod(
                methodStr(FormStringControl, lookup),
                methodStr(FBLedgerJournalTrans_FixedAsset_BR, lookupFiscalOrganization),
                this);

        transDateField              = dialog.addField(extendedTypeStr(TransDate), "@SYP4861385");

        pisAdjustmentCodeField      = dialog.addField(extendedTypeStr(FBTaxAdjustmentCode_BR), "@SYP4884194");
        var pisAdjustmentCodeControl    = pisAdjustmentCodeField.control();
        pisAdjustmentCodeControl.registerOverrideMethod(
                methodStr(FormStringControl, lookup),
                methodStr(FBLedgerJournalTrans_FixedAsset_BR, lookupPisAdjustmentCode),
                this);

        cofinsAdjustmentCodeField   = dialog.addField(extendedTypeStr(FBTaxAdjustmentCode_BR), "@SYP4884195");
        var cofinsAdjustmentCodeControl = cofinsAdjustmentCodeField.control();
        cofinsAdjustmentCodeControl.registerOverrideMethod(
                methodStr(FormStringControl, lookup),
                methodStr(FBLedgerJournalTrans_FixedAsset_BR, lookupCofinsAdjustmentCode),
                this);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAdjustmentCodeByTaxType</Name>
				<Source><![CDATA[
    public void lookupAdjustmentCodeByTaxType(FormControl    _lookupCtrl, TaxType_BR    _taxType)
    {
        SysTableLookup          sysTableLookup;
        Query                   query                   = new Query();
        QueryBuildDataSource    queryBuildDataSource    = query.addDataSource(tableNum(FBGeneralAdjustmentCodePISCOFINS_BR));
        QueryBuildRange         queryBuildRange;
        ;
        sysTableLookup  = SysTableLookup::newParameters(tableNum(FBGeneralAdjustmentCodePISCOFINS_BR), _lookupCtrl);

        queryBuildRange = queryBuildDataSource.addRange(fieldNum(FBGeneralAdjustmentCodePISCOFINS_BR, AdjustmentType));
        queryBuildRange.value(queryValue(FBGeneralAdjustmentTypePISCOFINS_BR::AssetCreditAppropriation));

        queryBuildRange = queryBuildDataSource.addRange(fieldNum(FBGeneralAdjustmentCodePISCOFINS_BR, TaxType));
        queryBuildRange.value(queryValue(_taxType));

        sysTableLookup.addLookupfield(fieldNum(FBGeneralAdjustmentCode_BR, AdjustmentCode));
        sysTableLookup.addLookupfield(fieldNum(FBGeneralAdjustmentCode_BR, Description));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupCofinsAdjustmentCode</Name>
				<Source><![CDATA[
    public void lookupCofinsAdjustmentCode(FormControl    _lookupCtrl)
    {
        this.lookupAdjustmentCodeByTaxType(_lookupCtrl, TaxType_BR::COFINS);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupFiscalOrganization</Name>
				<Source><![CDATA[
    public void lookupFiscalOrganization(FormControl _lookupCtrl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query                       = new Query();
        QueryBuildDataSource    queryBuildDataSource        = query.addDataSource(tableNum(FiscalOrganization_BR));
        ;
        sysTableLookup = SysTableLookup::newParameters(tableNum(FiscalOrganization_BR), _lookupCtrl);

        sysTableLookup.addLookupfield(fieldNum(FiscalOrganization_BR, FiscalEstablishmentId));
        sysTableLookup.addLookupfield(fieldNum(FiscalOrganization_BR, FiscalEstablishmentDataArea));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPisAdjustmentCode</Name>
				<Source><![CDATA[
    public void lookupPisAdjustmentCode(FormControl    _lookupCtrl)
    {
        this.lookupAdjustmentCodeByTaxType(_lookupCtrl, TaxType_BR::PIS);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalName</Name>
				<Source><![CDATA[
    public LedgerJournalName parmJournalName(LedgerJournalName _journalName = journalName)
    {
        journalName = _journalName;

        return journalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalNum</Name>
				<Source><![CDATA[
    public LedgerJournalId parmJournalNum(LedgerJournalId _journalNum = journalNum)
    {
        journalNum = _journalNum;

        return journalNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    public TransDate parmTransDate(TransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalEstablishmentId</Name>
				<Source><![CDATA[
    public FBFiscalEstablishmentId_BR parmFiscalEstablishmentId(FBFiscalEstablishmentId_BR _fiscalEstablishmentId = fiscalEstablishmentId)
    {
        fiscalEstablishmentId = _fiscalEstablishmentId;
        return fiscalEstablishmentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPisAdjustmentCodeId</Name>
				<Source><![CDATA[
    public FBGeneralTaxAdjustmentCode_BR parmPisAdjustmentCodeId(FBGeneralTaxAdjustmentCode_BR _pisAdjustmentCodeId = pisAdjustmentCodeId)
    {
        pisAdjustmentCodeId = _pisAdjustmentCodeId;
        return pisAdjustmentCodeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCofinsAdjustmentCodeId</Name>
				<Source><![CDATA[
    public FBGeneralTaxAdjustmentCode_BR parmCofinsAdjustmentCodeId(FBGeneralTaxAdjustmentCode_BR _cofinsAdjustmentCodeId = cofinsAdjustmentCodeId)
    {
        cofinsAdjustmentCodeId = _cofinsAdjustmentCodeId;
        return cofinsAdjustmentCodeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        FiscalEstablishment_BR              fiscalEstablishment;
        FiscalOrganization_BR               fiscalOrganization;
        FBContribAssetAssessment_BR         contribAssetAssessment;
        FBContribAssetTrans_BR              contribAssetTrans;
        FBContribAssetTable_BR              contribAssetTable;
        FBBookingPeriod_BR                  fbBookingPeriod;
        FBGeneralAdjustmentCodePISCOFINS_BR pisAdjustmentCode, cofinsAdjustmentCode;


        fiscalOrganization = FiscalOrganization_BR::findByFiscalEstablishmentId(fiscalEstablishmentId, curext());
        pisAdjustmentCode = FBGeneralAdjustmentCode_BR::findByAdjustmentCode(pisAdjustmentCodeId) as FBGeneralAdjustmentCodePISCOFINS_BR;
        cofinsAdjustmentCode = FBGeneralAdjustmentCode_BR::findByAdjustmentCode(cofinsAdjustmentCodeId) as FBGeneralAdjustmentCodePISCOFINS_BR;

        if (!fiscalOrganization || !pisAdjustmentCode || !cofinsAdjustmentCode || !transDate)
        {
            return;
        }

        fiscalEstablishment     = FiscalEstablishment_BR::findById(fiscalOrganization.FiscalEstablishmentId);
        fbBookingPeriod         = FBBookingPeriod_BR::findByFiscalEstablishmentAndPeriod(fiscalEstablishment.FiscalEstablishmentId, fiscalEstablishment.dataAreaId, mthOfYr(transDate), year(transDate));
        contribAssetAssessment  = FBContribAssetAssessment_BR::findByBookingPeriod(fbBookingPeriod.RecId);
        lineNum                 = LedgerJournalTrans::lastLineNum(journalNum) + 1;

        ttsBegin;

        if (contribAssetAssessment)
        {
            while select sum(PISInstallmentAmount), sum(PISInstallmentBaseAmount) from contribAssetTrans
                group by contribAssetTrans.PISTaxationCode, contribAssetTrans.PISTaxValue, contribAssetTable.AssetAppropriationMethod, contribAssetTable.AssetOrigin
                where contribAssetTrans.FBContribAssetAssessment_BR == contribAssetAssessment.RecId
                join AssetAppropriationMethod, AssetOrigin from contribAssetTable
                    where contribAssetTrans.FBContribAssetTable_BR == contribAssetTable.RecId
            {
                if (contribAssetTrans.PISInstallmentAmount > 0  && contribAssetTrans.PISInstallmentBaseAmount > 0)
                {
                    lineNum = FBLedgerJournalTrans_FixedAsset_BR::createTrans(  journalNum,
                                                                                lineNum,
                                                                                this.createVoucher(),
                                                                                fbBookingPeriod.periodTo(),
                                                                                fiscalEstablishment,
                                                                                TaxType_BR::PIS,
                                                                                contribAssetTrans.PISInstallmentBaseAmount,
                                                                                CurrencyExchange::round(contribAssetTrans.PISInstallmentAmount, Ledger::accountingCurrency()),
                                                                                contribAssetTrans.PISTaxValue,
                                                                                contribAssetTrans.PISTaxationCode,
                                                                                pisAdjustmentCode,
                                                                                FBLedgerJournalTrans_FixedAsset_BR::getCreditBaseSourceByApropMethod(contribAssetTable.AssetAppropriationMethod),
                                                                                contribAssetTable.AssetOrigin);
                }
            }

            while select sum(COFINSInstallmentAmount), sum(COFINSInstallmentBaseAmount) from contribAssetTrans
                group by contribAssetTrans.COFINSTaxationCode, contribAssetTrans.COFINSTaxValue, contribAssetTable.AssetAppropriationMethod, contribAssetTable.AssetOrigin
                where contribAssetTrans.FBContribAssetAssessment_BR == contribAssetAssessment.RecId
                join AssetAppropriationMethod, AssetOrigin from contribAssetTable
                    where contribAssetTrans.FBContribAssetTable_BR == contribAssetTable.RecId
            {
                if (contribAssetTrans.COFINSInstallmentAmount > 0  && contribAssetTrans.COFINSInstallmentBaseAmount > 0)
                {
                    lineNum = FBLedgerJournalTrans_FixedAsset_BR::createTrans(  journalNum,
                                                                                lineNum,
                                                                                this.createVoucher(),
                                                                                fbBookingPeriod.periodTo(),
                                                                                fiscalEstablishment,
                                                                                TaxType_BR::COFINS,
                                                                                contribAssetTrans.COFINSInstallmentBaseAmount,
                                                                                CurrencyExchange::round(contribAssetTrans.COFINSInstallmentAmount, Ledger::accountingCurrency()),
                                                                                contribAssetTrans.COFINSTaxValue,
                                                                                contribAssetTrans.COFINSTaxationCode,
                                                                                cofinsAdjustmentCode,
                                                                                FBLedgerJournalTrans_FixedAsset_BR::getCreditBaseSourceByApropMethod(contribAssetTable.AssetAppropriationMethod),
                                                                                contribAssetTable.AssetOrigin);
                }
            }
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTrans</Name>
				<Source><![CDATA[
    public static LineNum createTrans(  LedgerJournalId         _journalNum,
                                        LineNum                 _lineNum,
                                        Voucher                 _voucher,
                                        TransDate               _transDate,
                                        FiscalEstablishment_BR  _fiscalEstablishment,
                                        TaxType_BR              _taxType,
                                        AmountMST               _taxBaseAmount,
                                        AmountMST               _taxAmount,
                                        TaxValue                _taxValue,
                                        TaxationCode_BR         _taxationCode,
                                        FBGeneralAdjustmentCodePISCOFINS_BR _pisCofinsAdjustmentCode,
                                        FBNonFiscalOpCreditSourceCode_BR    _creditBaseSource,
                                        FBContribAssetOrigin_BR             _assetOrigin)
    {
        LedgerJournalTrans                  ledgerJournalTrans;
        FBGeneralAdjustmentCodeLedger_BR    generalAdjustmentCodeLedger;
        LedgerDimensionAccount              ledgerDimension;
        LedgerDimensionAccount              offsetLedgerDimension;
        FBLedgerJournalTrans_FiscalBooks_BR ledgerJournalTransFiscalBooks;
        FBContribCreditTypeCode_BR          creditTypeCode;

        ledgerJournalTrans.initValue();

        ledgerJournalTrans.LineNum          = _lineNum;
        _lineNum++;

        ledgerJournalTrans.JournalNum       = _journalNum;
        ledgerJournalTrans.TransDate        = _transDate;
        ledgerJournalTrans.Company          = _fiscalEstablishment.company();
        ledgerJournalTrans.Voucher          = _voucher;

        select generalAdjustmentCodeLedger
            where   generalAdjustmentCodeLedger.Company                     == ledgerJournalTrans.company()
                &&  generalAdjustmentCodeLedger.FBGeneralAdjustmentCode_BR  == _pisCofinsAdjustmentCode.RecId;

        ledgerJournalTrans.TaxCode          = generalAdjustmentCodeLedger.TaxCode;
        offsetLedgerDimension               = generalAdjustmentCodeLedger.LedgerDimension;
        ledgerJournalTrans.OffsetCompany    = ledgerJournalTrans.Company;

        if (ledgerJournalTrans.TaxCode)
        {
            ledgerDimension = TaxLedgerAccountGroup::accountLedgerDimension(LedgerJournalTrans.TaxCode, TaxDirection::IncomingTax);
        }

        ledgerJournalTrans.LedgerDimension          = FBLedgerJournalTrans_FiscalBooks_BR::getLedgerDimension(ledgerDimension, ledgerJournalTrans, _fiscalEstablishment);
        ledgerJournalTrans.OffsetLedgerDimension    = FBLedgerJournalTrans_FiscalBooks_BR::getLedgerDimension(offsetLedgerDimension, ledgerJournalTrans, _fiscalEstablishment);
        ledgerJournalTrans.AmountCurDebit           = _taxAmount;

        ledgerJournalTrans.write();

        ledgerJournalTransFiscalBooks.LedgerJournalTrans        = ledgerJournalTrans.RecId;
        ledgerJournalTransFiscalBooks.TaxType                   = _taxType;
        ledgerJournalTransFiscalBooks.AdjustmentType            = FBTaxAssessmentAdjustmentType_BR::General;
        ledgerJournalTransFiscalBooks.GeneralAdjustmentCode     = _pisCofinsAdjustmentCode.RecId;
        ledgerJournalTransFiscalBooks.TaxBaseAmount             = _taxBaseAmount;
        ledgerJournalTransFiscalBooks.TaxAmount                 = _taxAmount;
        ledgerJournalTransFiscalBooks.TaxationCode              = _taxationCode;
        ledgerJournalTransFiscalBooks.FiscalEstablishment_BR    = _fiscalEstablishment.RecId;
        ledgerJournalTransFiscalBooks.TaxValue                  = _taxValue;
        ledgerJournalTransFiscalBooks.ContribCreditBaseSource   = _creditBaseSource;

        if (_assetOrigin == FBContribAssetOrigin_BR::InternalMarket)
        {
            creditTypeCode = '101';
        }
        else
        {
            creditTypeCode = '108';
        }

        ledgerJournalTransFiscalBooks.FBContribCreditType_BR = FBContribCreditType_BR::findByCode(creditTypeCode).RecId;

        ledgerJournalTransFiscalBooks.write();

        return _lineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCreditBaseSourceByApropMethod</Name>
				<Source><![CDATA[
    public static FBNonFiscalOpCreditSourceCode_BR getCreditBaseSourceByApropMethod(FBPISCOFINSFixedAssetAppropMethod_BR _apropMethod)
    {
        switch (_apropMethod)
        {
            case FBPISCOFINSFixedAssetAppropMethod_BR::Depreciation:
                return FBNonFiscalOpCreditSourceCode_BR::AssetDepreciation;
            case FBPISCOFINSFixedAssetAppropMethod_BR::Acquisition:
                return FBNonFiscalOpCreditSourceCode_BR::AssetAcquisition;
            case FBPISCOFINSFixedAssetAppropMethod_BR::Amortization:
                return FBNonFiscalOpCreditSourceCode_BR::AmortizationAndDepreciationInBuildings;
            default:
                throw error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets basic information in order to start the class.
    /// </summary>
    /// <param name= "args">
    /// Args
    /// </param>
    static void main(Args args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR10006, funcName());

        LedgerJournalTable                  ledgerJournalTable;
        FormDataSource                      formDataSource;
        LedgerJournalId                     journalNum;
        LedgerJournalNameId                 ledgerNameId;
        LedgerJournalName                   journalName;
        FBLedgerJournalTrans_FixedAsset_BR  ledgerJournalTransFixedAsset;

        ledgerJournalTable  = args.caller().ledgerJournalTable();
        formDataSource      = FormDataUtil::getFormDataSource(args.record());

        ledgerNameId    = ledgerJournalTable.JournalName;
        journalName     = LedgerJournalName::find(ledgerNameId);
        journalNum      = ledgerJournalTable.JournalNum;

        ledgerJournalTransFixedAsset = new FBLedgerJournalTrans_FixedAsset_BR();
        ledgerJournalTransFixedAsset.parmJournalNum(journalNum);
        ledgerJournalTransFixedAsset.parmJournalName(journalName);

        if (ledgerJournalTransFixedAsset.prompt())
        {
            ledgerJournalTransFixedAsset.runOperation();
        }

        formDataSource.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        transDate = transDateField.value();
        fiscalEstablishmentId = fiscalOrganizationField.value();
        pisAdjustmentCodeId = pisAdjustmentCodeField.value();
        cofinsAdjustmentCodeId = cofinsAdjustmentCodeField.value();

        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>