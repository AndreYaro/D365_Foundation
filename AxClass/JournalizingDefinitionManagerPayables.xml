<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalizingDefinitionManagerPayables</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JournalizingDefinitionManagerPayables</c> class provides the journalizing definition
///    implementation specific to the accounts payable module.
/// </summary>
class JournalizingDefinitionManagerPayables extends JournalizingDefinitionManager
{
    ItemId                  itemId;
    VendAccount             vendAccount;
    InventCategoryRelation  categoryRelation;
    JournalizingDefinitionPayablesTrans  journalizingDefinitionPayablesTrans;

    #define.LedgerPostingType('LedgerPostingType')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDefaultJournalizingDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the journalizing definition ID by the parameter values.
    /// </summary>
    /// <returns>
    ///    The journalizing definition ID based on the class parameter.
    /// </returns>
    /// <remarks>
    ///    This method is a purchase specific implementation of the <c>getDefaultJournalizingDefinition</c>
    ///    method of the <c>JournalizingDefinitionManager</c> class.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The journalizing definition ID cannot be found for the specified parameter values.
    /// </exception>
    public JournalizingDefinitionId getDefaultJournalizingDefinition()
    {
        ItemGroupId                         itemGroupId = InventTable::find(this.parmItemId()).itemGroupId();
        VendGroupId                         vendGroup = VendTable::groupId(this.parmVendAccount());
        JournalizingDefinitionId            journalizingDefinitionId;

        if (ledgerPostingType == LedgerPostingType::APInvoice)
        {
            select firstonly JournalizingDefinition from
            journalizingDefinitionPayablesTrans
            order by ItemCode,VendAccountCode  asc
            where
                (
                  (journalizingDefinitionPayablesTrans.ItemCode == TableGroupCategoryAll::Table &&
                  journalizingDefinitionPayablesTrans.ItemId == this.parmItemId()) ||
                  (journalizingDefinitionPayablesTrans.ItemCode == TableGroupCategoryAll::Group &&
                  journalizingDefinitionPayablesTrans.ItemGroupId == itemGroupId) ||
                  (journalizingDefinitionPayablesTrans.ItemCode == TableGroupCategoryAll::Category &&
                  journalizingDefinitionPayablesTrans.EcoResCategory == this.parmCategoryRelation()) ||
                  journalizingDefinitionPayablesTrans.ItemCode == TableGroupCategoryAll::All ) &&
                (
                  (journalizingDefinitionPayablesTrans.VendAccountCode == TableGroupAll::Table &&
                  journalizingDefinitionPayablesTrans.VendAccount == this.parmVendAccount()) ||
                  (journalizingDefinitionPayablesTrans.VendAccountCode == TableGroupAll::GroupId &&
                  journalizingDefinitionPayablesTrans.VendGroup == vendGroup) ||
                  journalizingDefinitionPayablesTrans.VendAccountCode == TableGroupAll::All ) &&
                  journalizingDefinitionPayablesTrans.AccountsPayableTransactionType == JournalizingDefinitionPayablesTrans::ledgerPostingTypeToAccountsPayableType(ledgerPostingType);

            journalizingDefinitionId = journalizingDefinitionPayablesTrans.JournalizingDefinition;
        }
        else
        {
                throw error(strfmt("@SYS134109",enum2str(ledgerPostingType),#LedgerPostingType));
        }

        return journalizingDefinitionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryRelation</Name>
				<Source><![CDATA[
        InventCategoryRelation parmCategoryRelation(InventCategoryRelation _categoryRelation = categoryRelation)
    {
        categoryRelation = _categoryRelation;
        return  categoryRelation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
        ItemId parmItemId(ItemId    _itemId = itemId)
    {
        itemId  = _itemId;
        return  itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendAccount</Name>
				<Source><![CDATA[
        VendAccount parmVendAccount(VendAccount _vendAccount = vendAccount)
    {
        vendAccount = _vendAccount;
        return  _vendAccount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>