<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransReference
{
    // <GEERU>
    #isoCountryRegionCodes
    // </GEERU>
    InventTransOrigin   inventTransOrigin;
    InventTrans         inventTrans;
    Qty                 factor;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode currencyCode()
    {
        return CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendAC</Name>
				<Source><![CDATA[
    public CustVendAC custVendAC()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>discAmount</Name>
				<Source><![CDATA[
    public Amount discAmount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discPercent</Name>
				<Source><![CDATA[
    public Percent discPercent()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init(
        InventTrans         _inventTrans,
        InventTransOrigin   _inventTransOrigin)
    {
        inventTransOrigin.data(_inventTransOrigin);
        inventTrans.data(_inventTrans);

        factor          = 1;

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) &&
            inventTrans.InventTransOriginSales_RU && inventTrans.InventTransOriginSales_RU != inventTrans.InventTransOrigin)
        {
            inventTrans.InventTransOrigin = inventTrans.InventTransOriginSales_RU;
        }
        // </GEERU>

        this.setRefTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTrans</Name>
				<Source><![CDATA[
    public InventTrans inventTrans()
    {
        return inventTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventVendCust</Name>
				<Source><![CDATA[
    public InventVendCust inventVendCust()
    {
        return InventVendCust::Invent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    public Amount lineAmount()
    {
        return inventTrans.costValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>pcsPrice</Name>
				<Source><![CDATA[
    public Price pcsPrice()
    {
        return (inventTrans.Qty ? inventTrans.costValue() / inventTrans.Qty : inventTrans.costValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyUnit</Name>
				<Source><![CDATA[
    public Qty qtyUnit()
    {
        return inventTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRefTrans</Name>
				<Source><![CDATA[
    protected void setRefTrans()
    {
        InventTrans inventTransSum;

        Query inventTransQuery =  this.buildInventTransQuery(inventTrans);
        
        QueryRun queryRun = new QueryRun(inventTransQuery);
        if (queryRun.next())
        {
            inventTransSum = queryRun.get(tableNum(InventTrans));
        }

        if (inventTransSum.Qty)
        {
            factor = inventTransSum.Qty ? inventTrans.Qty / inventTransSum.Qty : 1;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInventTransQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the query for the sum of <c>InventTrans</c> quantities.
    /// </summary>
    /// <returns>
    /// A <c>Query</c> object.
    /// </returns>
    protected Query buildInventTransQuery(InventTrans _inventTrans)
    {
        Query query = new Query();

        QueryBuildDataSource inventTransDataSource = query.addDataSource(tableNum(InventTrans));
        inventTransDataSource.addSelectionField(fieldNum(InventTrans, Qty), SelectionField::Sum);

        inventTransDataSource.addRange(fieldNum(InventTrans, InventTransOrigin)).value(queryValue(_inventTrans.InventTransOrigin));

        if (_inventTrans.isUpdatedFinancial())
        {
            inventTransDataSource.addRange(fieldNum(InventTrans, DateFinancial)).value(queryValue(_inventTrans.DateFinancial));
            inventTransDataSource.addRange(fieldNum(InventTrans, InvoiceId)).value(queryValue(_inventTrans.InvoiceId));
            inventTransDataSource.addRange(fieldNum(InventTrans, Voucher)).value(queryValue(_inventTrans.Voucher));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitId</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol unitId()
    {
        return InventTableModule::find(inventTrans.ItemId,ModuleInventPurchSales::Invent).UnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventTransReference construct()
    {
        return new InventTransReference();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventTrans</Name>
				<Source><![CDATA[
    public static InventTransReference newFromInventTrans(InventTrans _inventTrans)
    {
        InventTransOrigin       inventTransOrigin   = _inventTrans.inventTransOrigin();
        InventTransReference    inventTransReference;

        switch (inventTransOrigin.ReferenceCategory)
        {
            case InventTransType::Purch           :
                inventTransReference = InventTransRef_Purch::construct();
                break;

            case InventTransType::Sales           :
                inventTransReference = InventTransRef_Sales::construct();
                break;

            case InventTransType::SalesQuotation  :
                inventTransReference = InventTransRef_SalesQuotation::construct();
                break;

            // Added function for transtype Statement.
            case InventTransType::Statement:
                if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
                {
                    inventTransReference = new InventTransRef_Statement();
                }
                break;
            default:
                inventTransReference = InventTransReference::construct();
        }

        inventTransReference.init(_inventTrans, inventTransOrigin);

        return inventTransReference;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>