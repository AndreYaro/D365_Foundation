<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxPurchTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxPurchTable extends AxApplicationBase implements AxInventSiteDimensionable
{
    PurchTable                  purchTable;

    int                         invoiceAccount_VendTableIdx;
    int                         orderAccount_VendTableIdx;
    int                         projTableIdx;
    int                         contactPersonIdx;
    int                         paymTermIdx;
    int                         purchParametersIdx;
    int                         axLogisticsLocationIdx;

    int                         companyInfoIdx;
    int                         axDeliveryLocationIdx;

    int                         agreementHeaderDefaultIdx;
    int                         purchAgreementHeaderDefaultIdx;

    InventSiteDimensionLink     inventSiteDimensionLink;

    // <GEERU>
    int                         axPurchTableIdx_RU;
    // </GEERU>
    // <GBR>
    int                         axPurchTableIdx_BR;
    // </GBR>
    int                         axPurchTableIdx_W;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>agreementHeaderDefaultRecord</Name>
				<Source><![CDATA[
    public AgreementHeaderDefault agreementHeaderDefaultRecord(AgreementHeaderDefault _purchAagreementHeader = null)
    {
        AgreementHeaderDefault    agreementHeaderDefault;

        if (!agreementHeaderDefaultIdx)
        {
            agreementHeaderDefaultIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_purchAagreementHeader))
        {
            this.tableCacheInsert(agreementHeaderDefaultIdx, _purchAagreementHeader);
            agreementHeaderDefault = _purchAagreementHeader;
        }
        else
        {
            if (this.tableCacheExist(agreementHeaderDefaultIdx))
            {
                agreementHeaderDefault = this.tableCacheLookup(agreementHeaderDefaultIdx);
            }
            else
            {
                if (purchTable.MatchingAgreement)
                {
                    agreementHeaderDefault = AgreementHeader::find(purchTable.MatchingAgreement).agreementHeaderDefault();
                    this.tableCacheInsert(agreementHeaderDefaultIdx, agreementHeaderDefault);
                }
            }
        }

        return agreementHeaderDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axDeliveryLocation</Name>
				<Source><![CDATA[
    public AxLogisticsLocation  axDeliveryLocation(AxLogisticsLocation  _axDeliveryLocation = null)
    {
        AxLogisticsLocation  axDeliveryLocation;
        CompanyInfo companyInfo;

        if (! axDeliveryLocationIdx)
        {
            axDeliveryLocationIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axDeliveryLocation))
        {
            this.classCacheInsert(axDeliveryLocationIdx, _axDeliveryLocation);
            axDeliveryLocation = _axDeliveryLocation;
        }
        else
        {
            if (this.classCacheExist(axDeliveryLocationIdx))
            {
                axDeliveryLocation = this.classCacheLookup(axDeliveryLocationIdx);
            }
            else
            {
                companyInfo = this.companyInfoRecord();
                axDeliveryLocation = AxLogisticsLocation::newLogisticsLocation(LogisticsLocationEntity::findLocation(companyInfo, LogisticsLocationRoleType::Delivery).getLogisticsLocation());

                this.classCacheInsert(axDeliveryLocationIdx, axDeliveryLocation);
            }
        }

        return axDeliveryLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axLogisticsLocation</Name>
				<Source><![CDATA[
    public AxLogisticsLocation  axLogisticsLocation(AxLogisticsLocation  _axLogisticsLocation = null)
    {
        AxLogisticsLocation  axLogisticsLocation;

        if (! axLogisticsLocationIdx)
        {
            axLogisticsLocationIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axLogisticsLocation))
        {
            this.classCacheInsert(axLogisticsLocationIdx, _axLogisticsLocation);
            axLogisticsLocation = _axLogisticsLocation;
        }
        else
        {
            if (this.classCacheExist(axLogisticsLocationIdx))
            {
                axLogisticsLocation = this.classCacheLookup(axLogisticsLocationIdx);
            }
            else
            {
                axLogisticsLocation = AxLogisticsLocation::newLogisticsLocation(LogisticsLocationEntity::findLocation(CompanyInfo::find(), LogisticsLocationRoleType::Invoice).getLogisticsLocation());

                this.classCacheInsert(axLogisticsLocationIdx, axLogisticsLocation);
            }
        }

        return axLogisticsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchTable_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the a instance of related <C>AxPurchTable_BR</C>.
    /// </summary>
    /// <param name="_axPurchTable_BR">
    /// A instance of <C>AxPurchTable_BR</C>. Optional.
    /// </param>
    /// <returns>
    /// A instance of <C>AxPurchTable_BR</C>.
    /// </returns>
    public AxPurchTable_BR axPurchTable_BR(AxPurchTable_BR _axPurchTable_BR = null)
    {
        AxPurchTable_BR     axPurchTable_BR;
        PurchTable_BR       purchTable_BR;

        if (!axPurchTableIdx_BR)
        {
            axPurchTableIdx_BR = this.nextCacheIdx();
        }

        if (!prmisDefault(_axPurchTable_BR))
        {
            axPurchTable_BR = _axPurchTable_BR;

            this.classCacheInsert(axPurchTableIdx_BR, axPurchTable_BR);
            axPurchTable_BR.parentAxBC(this);
        }
        else
        {
            if (this.classCacheExist(axPurchTableIdx_BR))
            {
                axPurchTable_BR = this.classCacheLookup(axPurchTableIdx_BR);
            }
            else
            {
                purchTable_BR.selectForUpdate(true);
                purchTable_BR.data(purchTable.purchTable_BR());

                axPurchTable_BR = AxPurchTable_BR::newPurchTable_BR(purchTable_BR);

                this.classCacheInsert(axPurchTableIdx_BR, axPurchTable_BR);
                axPurchTable_BR.parentAxBC(this);
            }
        }

        return axPurchTable_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchTable_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the a instance of related <C>AxPurchTable_RU</C>.
    /// </summary>
    /// <param name="_axPurchTable_RU">
    /// A instance of <C>AxPurchTable_RU</C>. Optional.
    /// </param>
    /// <returns>
    /// A instance of <C>AxPurchTable_RU</C>.
    /// </returns>
    public AxPurchTable_RU axPurchTable_RU(AxPurchTable_RU _axPurchTable_RU = null)
    {
        AxPurchTable_RU     axPurchTable_RU;
        PurchTable_RU       purchTable_RU;

        if (!axPurchTableIdx_RU)
        {
            axPurchTableIdx_RU = this.nextCacheIdx();
        }

        if (!prmisDefault(_axPurchTable_RU))
        {
            axPurchTable_RU = _axPurchTable_RU;

            this.classCacheInsert(axPurchTableIdx_RU, axPurchTable_RU);
            axPurchTable_RU.parentAxBC(this);
        }
        else
        {
            if (this.classCacheExist(axPurchTableIdx_RU))
            {
                axPurchTable_RU = this.classCacheLookup(axPurchTableIdx_RU);
            }
            else
            {
                purchTable_RU.selectForUpdate(true);
                purchTable_RU.data(purchTable.purchTable_RU());

                axPurchTable_RU = AxPurchTable_RU::newPurchTable_RU(purchTable_RU);

                this.classCacheInsert(axPurchTableIdx_RU, axPurchTable_RU);
                axPurchTable_RU.parentAxBC(this);
            }
        }

        return axPurchTable_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchTable_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the a instance of related <C>AxPurchTable_W</C>.
    /// </summary>
    /// <param name="_axPurchTable_W">
    /// A instance of <C>AxPurchTable_W</C>. Optional.
    /// </param>
    /// <returns>
    /// A instance of <C>AxPurchTable_W</C>.
    /// </returns>
    public AxPurchTable_W axPurchTable_W(AxPurchTable_W _axPurchTable_W = null)
    {
        AxPurchTable_W     axPurchTable_W;
        PurchTable_W       purchTable_W;

        if (!axPurchTableIdx_W)
        {
            axPurchTableIdx_W = this.nextCacheIdx();
        }

        if (!prmisDefault(_axPurchTable_W))
        {
            axPurchTable_W = _axPurchTable_W;

            this.classCacheInsert(axPurchTableIdx_W, axPurchTable_W);
            axPurchTable_W.parentAxBC(this);
        }
        else
        {
            if (this.classCacheExist(axPurchTableIdx_W))
            {
                axPurchTable_W = this.classCacheLookup(axPurchTableIdx_W);
            }
            else
            {
                purchTable_W.selectForUpdate(true);
                purchTable_W.data(purchTable.purchTable_W());

                axPurchTable_W = AxPurchTable_W::newPurchTable_W(purchTable_W);

                this.classCacheInsert(axPurchTableIdx_W, axPurchTable_W);
                axPurchTable_W.parentAxBC(this);
            }
        }

        return axPurchTable_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfoRecord</Name>
				<Source><![CDATA[
    public CompanyInfo companyInfoRecord(CompanyInfo _companyInfo = null)
    {
        CompanyInfo   companyInfo;

        if (!companyInfoIdx)
        {
            companyInfoIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_companyInfo))
        {
            this.tableCacheInsert(companyInfoIdx, _companyInfo);
            companyInfo = _companyInfo;
        }
        else
        {
            if (this.tableCacheExist(companyInfoIdx))
            {
                companyInfo = this.tableCacheLookup(companyInfoIdx);
            }
            else
            {
                companyInfo = CompanyInfo::find();
                this.tableCacheInsert(companyInfoIdx, companyInfo);
            }
        }

        return companyInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>contactPersonRecord</Name>
				<Source><![CDATA[
    public ContactPerson contactPersonRecord(ContactPerson _contactPerson = null)
    {
        ContactPerson    contactPerson;

        if (!contactPersonIdx)
        {
            contactPersonIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_contactPerson))
        {
            this.tableCacheInsert(contactPersonIdx, _contactPerson);
            contactPerson = _contactPerson;
        }
        else
        {
            if (this.tableCacheExist(contactPersonIdx))
            {
                contactPerson = this.tableCacheLookup(contactPersonIdx);
            }
            else
            {
                this.setContactPersonId();
                contactPerson = ContactPerson::find(this.parmContactPersonId());
                this.tableCacheInsert(contactPersonIdx, contactPerson);
            }
        }

        return contactPerson;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _purchTable = purchTable)
    {
        if (!prmisDefault(_purchTable))
        {
            super(_purchTable);
            purchTable = _purchTable as PurchTable;
        }
        else
        {
            super();
        }

        return purchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>PurchTable</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>PurchTable</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        PurchTable localPurchTable;

        return localPurchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodStr(AxPurchTable,parmPurchId));
        this.setParmMethodAsNotMandatory(methodStr(AxPurchTable,parmVendGroup));
        this.setParmMethodAsNotMandatory(methodStr(AxPurchTable,parmLanguageId));
        this.setParmMethodAsNotMandatory(methodStr(AxPurchTable,parmInvoiceAccount));
        this.setParmMethodAsNotMandatory(methodStr(AxPurchTable,parmCurrencyCode));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteDimensionLink</Name>
				<Source><![CDATA[
    protected InventSiteDimensionLink inventSiteDimensionLink()
    {
        return InventSiteDimensionLink::newDimensionTables(this.purchTable(), this.purchTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccount_VendTableRecord</Name>
				<Source><![CDATA[
    public VendTable invoiceAccount_VendTableRecord(VendTable _vendTable = null)
    {
        VendTable   vendTable;

        if (!invoiceAccount_VendTableIdx)
        {
            invoiceAccount_VendTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_vendTable))
        {
            this.tableCacheInsert(invoiceAccount_VendTableIdx, _vendTable);
            vendTable = _vendTable;
        }
        else
        {
            if (this.tableCacheExist(invoiceAccount_VendTableIdx))
            {
                vendTable = this.tableCacheLookup(invoiceAccount_VendTableIdx);
            }
            else
            {
                this.setInvoiceAccount();
                vendTable = VendTable::find(this.parmInvoiceAccount());
                this.tableCacheInsert(invoiceAccount_VendTableIdx, vendTable);
            }
        }

        return vendTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStorageDimFieldSet</Name>
				<Source><![CDATA[
    public boolean isStorageDimFieldSet(FieldId _fieldId)
    {
        return this.isFieldSet(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderAccount_VendTableRecord</Name>
				<Source><![CDATA[
    public VendTable orderAccount_VendTableRecord(VendTable _vendTable = null)
    {
        VendTable   vendTable;

        if (!orderAccount_VendTableIdx)
        {
            orderAccount_VendTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_vendTable))
        {
            this.tableCacheInsert(orderAccount_VendTableIdx, _vendTable);
            vendTable = _vendTable;
        }
        else
        {
            if (this.tableCacheExist(orderAccount_VendTableIdx))
            {
                vendTable = this.tableCacheLookup(orderAccount_VendTableIdx);
            }
            else
            {
                this.setOrderAccount();
                vendTable = VendTable::find(this.parmOrderAccount());
                this.tableCacheInsert(orderAccount_VendTableIdx, vendTable);
            }
        }

        return vendTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDate</Name>
				<Source><![CDATA[
    public AccountingDate parmAccountingDate(AccountingDate _accountingDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        if (!prmisDefault(_accountingDate))
        {
            this.setField(fieldNum(PurchTable, AccountingDate), _accountingDate);
        }

        return purchTable.AccountingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDistributionTemplate</Name>
				<Source><![CDATA[
    public RefRecId parmAccountingDistributionTemplate(RefRecId _accountingDistributionTemplate = 0)
    {
        if (!prmisDefault(_accountingDistributionTemplate))
        {
            this.setField(fieldNum(PurchTable, AccountingDistributionTemplate), _accountingDistributionTemplate);
        }

        return purchTable.AccountingDistributionTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefRecId</Name>
				<Source><![CDATA[
    public AddressRefRecId parmAddressRefRecId(AddressRefRecId _addressRefRecId = 0)
    {
        if (!prmisDefault(_addressRefRecId))
        {
            this.setField(fieldNum(PurchTable, AddressRefRecId), _addressRefRecId);
        }

        return purchTable.AddressRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefTableId</Name>
				<Source><![CDATA[
    public AddressRefTableId parmAddressRefTableId(AddressRefTableId _addressRefTableId = 0)
    {
        if (!prmisDefault(_addressRefTableId))
        {
            this.setField(fieldNum(PurchTable, AddressRefTableId), _addressRefTableId);
        }

        return purchTable.AddressRefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAutoSummaryModuleType</Name>
				<Source><![CDATA[
    public ModuleVendPurch parmAutoSummaryModuleType(ModuleVendPurch _autoSummaryModuleType = ModuleVendPurch::Vend)
    {
        if (!prmisDefault(_autoSummaryModuleType))
        {
            this.setField(fieldNum(PurchTable, AutoSummaryModuleType), _autoSummaryModuleType);
        }

        return purchTable.AutoSummaryModuleType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAvailSalesDate</Name>
				<Source><![CDATA[
    public RetailSalesDate parmAvailSalesDate(RetailSalesDate _availSalesDate = dateNull())
    {
        if (!prmisDefault(_availSalesDate))
        {
            this.setField(fieldNum(PurchTable, AvailSalesDate), _availSalesDate);
        }

        return purchTable.AvailSalesDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankCentralBankPurposeCode</Name>
				<Source><![CDATA[
    public BankCentralBankPurposeCode parmBankCentralBankPurposeCode(BankCentralBankPurposeCode _bankCentralBankPurposeCode = '')
    {
        if (!prmisDefault(_bankCentralBankPurposeCode))
        {
            this.setField(fieldNum(PurchTable, BankCentralBankPurposeCode), _bankCentralBankPurposeCode);
        }

        return purchTable.BankCentralBankPurposeCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankCentralBankPurposeText</Name>
				<Source><![CDATA[
    public BankCentralBankPurposeText parmBankCentralBankPurposeText(BankCentralBankPurposeText _bankCentralBankPurposeText = '')
    {
        if (!prmisDefault(_bankCentralBankPurposeText))
        {
            this.setField(fieldNum(PurchTable, BankCentralBankPurposeText), _bankCentralBankPurposeText);
        }

        return purchTable.BankCentralBankPurposeText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankDocumentType</Name>
				<Source><![CDATA[
    public BankDocumentType parmBankDocumentType(BankDocumentType _bankDocumentType = BankDocumentType::None)
    {
        if (!prmisDefault(_bankDocumentType))
        {
            this.setField(fieldNum(PurchTable, BankDocumentType), _bankDocumentType);
        }

        return purchTable.BankDocumentType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDisc</Name>
				<Source><![CDATA[
    public VendCashDiscCode parmCashDisc(VendCashDiscCode _cashDisc = '')
    {
        if (!prmisDefault(_cashDisc))
        {
            this.setField(fieldNum(PurchTable, CashDisc), _cashDisc);
        }

        return purchTable.CashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmCashDiscPercent(DiscPct _cashDiscPercent = 0)
    {
        if (!prmisDefault(_cashDiscPercent))
        {
            this.setField(fieldNum(PurchTable, CashDiscPercent), _cashDiscPercent);
        }

        return purchTable.CashDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeRequestRequired</Name>
				<Source><![CDATA[
    public VersioningChangeRequestRequired parmChangeRequestRequired(VersioningChangeRequestRequired _versioningChangeRequestRequired = NoYes::No)
    {
        if (!prmisDefault(_versioningChangeRequestRequired))
        {
            this.setField(fieldNum(PurchTable, ChangeRequestRequired), _versioningChangeRequestRequired);
        }

        return purchTable.ChangeRequestRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmedDlv</Name>
				<Source><![CDATA[
    public PurchLineDlvDate parmConfirmedDlv(PurchLineDlvDate _confirmedDlv = dateNull())
    {
        if (!prmisDefault(_confirmedDlv))
        {
            this.setField(fieldNum(PurchTable, ConfirmedDlv), _confirmedDlv);
        }

        return purchTable.ConfirmedDlv;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmedDlvEarliest</Name>
				<Source><![CDATA[
    public PurchLineDlvDate parmConfirmedDlvEarliest(PurchLineDlvDate _purchLineDlvDate = dateNull())
    {
        if (!prmisDefault(_purchLineDlvDate))
        {
            this.setField(fieldNum(PurchTable, ConfirmedDlvEarliest), _purchLineDlvDate);
        }

        return purchTable.DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmedShipDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal PurchConfirmedShipDate parmConfirmedShipDate(PurchConfirmedShipDate _confirmedShipDate = dateNull())
    {
        if (!prmisDefault(_confirmedShipDate))
        {
            this.setField(fieldNum(PurchTable, ConfirmedShipDate), _confirmedShipDate);
        }

        return purchTable.ConfirmedShipDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmingPO</Name>
				<Source><![CDATA[
    public ConfirmingPORefRecId parmConfirmingPO(ConfirmingPORefRecId _confirmingPORefRecId = 0)
    {
        if (!prmisDefault(_confirmingPORefRecId))
        {
            this.setField(fieldNum(PurchTable, ConfirmingPO), _confirmingPORefRecId);
        }

        return purchTable.ConfirmingPO;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConsTarget_JP</Name>
				<Source><![CDATA[
    public VendConsTarget_JP parmConsTarget_JP(VendConsTarget_JP _consTarget_JP = NoYes::No)
    {
        if (!prmisDefault(_consTarget_JP))
        {
            this.setField(fieldNum(PurchTable, ConsTarget_JP), _consTarget_JP);
        }

        return purchTable.ConsTarget_JP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactPersonId</Name>
				<Source><![CDATA[
    public ContactPersonId parmContactPersonId(ContactPersonId _contactPersonId = '')
    {
        if (!prmisDefault(_contactPersonId))
        {
            this.setField(fieldNum(PurchTable, ContactPersonId), _contactPersonId);
        }

        return purchTable.ContactPersonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContractNum_SA</Name>
				<Source><![CDATA[
    public VendContractNumZakat_SA parmContractNum_SA(VendContractNumZakat_SA _contractNum_SA = '')
    {
        if (!prmisDefault(_contractNum_SA))
        {
            this.setField(fieldNum(PurchTable, ContractNum_SA), _contractNum_SA);
        }

        return purchTable.ContractNum_SA;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountyOrigDest</Name>
				<Source><![CDATA[
    public AddressCountyOrigDest parmCountyOrigDest(AddressCountyOrigDest   _countyOrigDest = '')
    {
        if (!prmisDefault(_countyOrigDest))
        {
            this.setField(fieldNum(PurchTable, CountyOrigDest), _countyOrigDest);
        }

        return purchTable.CountyOrigDest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCovStatus</Name>
				<Source><![CDATA[
    public CovStatus parmCovStatus(CovStatus _covStatus = 0)
    {
        if (!prmisDefault(_covStatus))
        {
            this.setField(fieldNum(PurchTable, CovStatus), _covStatus);
        }

        return purchTable.CovStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCrossDockingDate</Name>
				<Source><![CDATA[
    public RetailCrossDockingDate parmCrossDockingDate(RetailCrossDockingDate _crossDockingDate = dateNull())
    {
        if (!prmisDefault(_crossDockingDate))
        {
            this.setField(fieldNum(PurchTable, CrossDockingDate), _crossDockingDate);
        }

        return purchTable.CrossDockingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;
        if (!prmisDefault(_currencyCode))
        {
            dictField = new DictField(tableNum(PurchTable), fieldNum(PurchTable, CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode, dictField);

            if (this.valueMappingInbound())
            {
                _currencyCode = this.axCurrencyCode(_currencyCode);
            }

            this.setField(fieldNum(PurchTable, CurrencyCode), _currencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(purchTable.CurrencyCode);
        }
        else
        {
            return purchTable.CurrencyCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.inventSiteDimensionLink().axParmDefaultDimensionSet(this, _defaultDimension);
        }

        return purchTable.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
    public DlvDate parmDeliveryDate(DlvDate _deliveryDate = dateNull())
    {
        if (!prmisDefault(_deliveryDate))
        {
            this.setField(fieldNum(PurchTable, DeliveryDate), _deliveryDate);
        }

        return purchTable.DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public VendName parmDeliveryName(VendName _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(PurchTable, DeliveryName), _deliveryName);
        }

        return purchTable.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryAddress = 0)
    {
        if (!prmisDefault(_deliveryAddress))
        {
            this.setField(fieldNum(PurchTable, DeliveryPostalAddress), _deliveryAddress);
        }

        return purchTable.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryType</Name>
				<Source><![CDATA[
    public PurchDlvAddrType parmDeliveryType(PurchDlvAddrType _deliveryType = PurchDlvAddr::None)
    {
        if (!prmisDefault(_deliveryType))
        {
            this.setField(fieldNum(PurchTable, DeliveryType), _deliveryType);
        }

        return purchTable.DeliveryType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscPercent</Name>
				<Source><![CDATA[
    public PurchEndDiscPct parmDiscPercent(PurchEndDiscPct _discPercent = 0)
    {
        if (!prmisDefault(_discPercent))
        {
            this.setField(fieldNum(PurchTable, DiscPercent), _discPercent);
        }

        return purchTable.DiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvMode</Name>
				<Source><![CDATA[
    public str parmDlvMode(str _dlvMode = '')
    {
        DictField   dictField;

        if (!prmisDefault(_dlvMode))
        {
            dictField = new DictField(tableNum(PurchTable), fieldNum(PurchTable, DlvMode));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvMode, dictField, this.mapPolicy().xMLMapDlvMode());
                _dlvMode = this.axDlvModeId(_dlvMode);
            }
            else
            {
                this.validateInboundString(_dlvMode, dictField);
            }

            this.setField(fieldNum(PurchTable, DlvMode), _dlvMode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvModeId(purchTable.DlvMode);
        }
        else
        {
            return purchTable.DlvMode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvTerm</Name>
				<Source><![CDATA[
    public str parmDlvTerm(str _dlvTerm = '')
    {
        DictField   dictField;

        if (!prmisDefault(_dlvTerm))
        {
            dictField = new DictField(tableNum(PurchTable), fieldNum(PurchTable, DlvTerm));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvTerm, dictField, this.mapPolicy().xMLMapDlvTerm());
                _dlvTerm = this.axDlvTermId(_dlvTerm);
            }
            else
            {
                this.validateInboundString(_dlvTerm, dictField);
            }

            this.setField(fieldNum(PurchTable, DlvTerm), _dlvTerm);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvTermId(purchTable.DlvTerm);
        }
        else
        {
            return purchTable.DlvTerm;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentState</Name>
				<Source><![CDATA[
    public VersioningDocumentState parmDocumentState(VersioningDocumentState _documentState = VersioningDocumentState::Draft)
    {
        if (!prmisdefault(_documentState))
        {
            this.setField(fieldNum(PurchTable, DocumentState), _documentState);
        }

        return purchTable.DocumentState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentStatus</Name>
				<Source><![CDATA[
    public DocumentStatus parmDocumentStatus(DocumentStatus _documentStatus = DocumentStatus::None)
    {
        if (!prmisDefault(_documentStatus))
        {
            this.setField(fieldNum(PurchTable, DocumentStatus), _documentStatus);
        }

        return purchTable.DocumentStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmail</Name>
				<Source><![CDATA[
    public Email parmEmail(Email _email = '')
    {
        if (!prmisDefault(_email))
        {
            this.setField(fieldNum(PurchTable, Email), _email);
        }

        return purchTable.Email;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDisc</Name>
				<Source><![CDATA[
    public VendEndDiscCode parmEndDisc(VendEndDiscCode _endDisc = '')
    {
        if (!prmisDefault(_endDisc))
        {
            this.setField(fieldNum(PurchTable, EndDisc), _endDisc);
        }

        return purchTable.EndDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnterpriseNumber</Name>
				<Source><![CDATA[
    public TaxEnterpriseNumber parmEnterpriseNumber(TaxEnterpriseNumber _enterpriseNumber = '')
    {
        if (!prmisDefault(_enterpriseNumber))
        {
            this.setField(fieldNum(PurchTable, EnterpriseNumber), _enterpriseNumber);
        }

        return purchTable.EnterpriseNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchangeRateDate</Name>
				<Source><![CDATA[
    public AccountingDate parmExchangeRateDate(AccountingDate _exchangeRateDate = dateNull())
    {
        if (!prmisdefault(_exchangeRateDate))
        {
            this.setField(fieldNum(PurchTable, ExchangeRateDate), _exchangeRateDate);
        }

        return purchTable.ExchangeRateDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFinalizeClosingDate</Name>
				<Source><![CDATA[
    public PurchFinalizeClosingDate parmFinalizeClosingDate(PurchFinalizeClosingDate _finalizeClosingDate = dateNull())
    {
        if (!prmisdefault(_finalizeClosingDate))
        {
            this.setField(fieldNum(PurchTable, FinalizeClosingDate), _finalizeClosingDate);
        }

        return purchTable.FinalizeClosingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedDueDate</Name>
				<Source><![CDATA[
    public PurchFixedDueDate parmFixedDueDate(PurchFixedDueDate _fixedDueDate = dateNull())
    {
        if (!prmisDefault(_fixedDueDate))
        {
            this.setField(fieldNum(PurchTable, FixedDueDate), _fixedDueDate);
        }

        return purchTable.FixedDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedExchRate</Name>
				<Source><![CDATA[
    public PurchFixedExchRate parmFixedExchRate(PurchFixedExchRate _fixedExchRate = 0)
    {
        if (!prmisdefault(_fixedExchRate))
        {
            this.setField(fieldNum(PurchTable, FixedExchRate), _fixedExchRate);
        }

        return purchTable.FixedExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightSlipType</Name>
				<Source><![CDATA[
    public VendFreightSlipType parmFreightSlipType(VendFreightSlipType _freightSlipType = FreightSlipType::None)
    {
        if (!prmisDefault(_freightSlipType))
        {
            this.setField(fieldNum(PurchTable, FreightSlipType), _freightSlipType);
        }

        return purchTable.FreightSlipType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightZone</Name>
				<Source><![CDATA[
    public VendFreightZoneId parmFreightZone(VendFreightZoneId _freightZone = '')
    {
        if (!prmisDefault(_freightZone))
        {
            this.setField(fieldNum(PurchTable, FreightZone), _freightZone);
        }

        return purchTable.FreightZone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFSHAutoCreated</Name>
				<Source><![CDATA[
    public RetailAutoCreatedPurch parmFSHAutoCreated(RetailAutoCreatedPurch _autoCreated = NoYes::No)
    {
        if (!prmisDefault(_autoCreated))
        {
            this.setField(fieldNum(PurchTable, fshAutoCreated), _autoCreated);
        }

        return purchTable.fshAutoCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTax</Name>
				<Source><![CDATA[
    public InclTax parmInclTax(InclTax _inclTax = NoYes::No)
    {
        if (!prmisDefault(_inclTax))
        {
            this.setField(fieldNum(PurchTable, InclTax), _inclTax);
        }

        return purchTable.InclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyAllowIndirectCreation</Name>
				<Source><![CDATA[
    public InterCompanyAllowIndirectCreation parmInterCompanyAllowIndirectCreation(InterCompanyAllowIndirectCreation _interCompanyAllowIndirectCreation = false)
    {
        if (!prmisDefault(_interCompanyAllowIndirectCreation))
        {
            this.setField(fieldNum(PurchTable, InterCompanyAllowIndirectCreation), _interCompanyAllowIndirectCreation);
        }

        return purchTable.InterCompanyAllowIndirectCreation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyCompanyId</Name>
				<Source><![CDATA[
    public InterCompanyCompanyId parmInterCompanyCompanyId(InterCompanyCompanyId _interCompanyCompanyId = '')
    {
        if (!prmisDefault(_interCompanyCompanyId))
        {
            this.setField(fieldNum(PurchTable, InterCompanyCompanyId), _interCompanyCompanyId);
        }

        return purchTable.InterCompanyCompanyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyCustPurchOrderFormNum</Name>
				<Source><![CDATA[
    public CustPurchaseOrder parmInterCompanyCustPurchOrderFormNum(CustPurchaseOrder _interCompanyCustPurchOrderFormNum = "")
    {
        if (!prmisDefault(_interCompanyCustPurchOrderFormNum))
        {
            this.setField(fieldNum(PurchTable, InterCompanyCustPurchOrderFormNum), _interCompanyCustPurchOrderFormNum);
        }

        return purchTable.InterCompanyCustPurchOrderFormNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyDirectDelivery</Name>
				<Source><![CDATA[
    public InterCompanyDirectDelivery parmInterCompanyDirectDelivery(InterCompanyDirectDelivery _interCompanyDirectDelivery = false)
    {
        if (!prmisDefault(_interCompanyDirectDelivery))
        {
            this.setField(fieldNum(PurchTable, InterCompanyDirectDelivery), _interCompanyDirectDelivery);
        }

        return purchTable.InterCompanyDirectDelivery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyOrder</Name>
				<Source><![CDATA[
    public InterCompanyVendor parmInterCompanyOrder(InterCompanyVendor _interCompanyOrder = NoYes::No)
    {
        if (!prmisDefault(_interCompanyOrder))
        {
            this.setField(fieldNum(PurchTable, InterCompanyOrder), _interCompanyOrder);
        }

        return purchTable.InterCompanyOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyOrigin</Name>
				<Source><![CDATA[
    public InterCompanyOrigin parmInterCompanyOrigin(InterCompanyOrigin _interCompanyOrigin = InterCompanyOrigin::Source)
    {
        if (!prmisDefault(_interCompanyOrigin))
        {
            this.setField(fieldNum(PurchTable, InterCompanyOrigin), _interCompanyOrigin);
        }

        return purchTable.InterCompanyOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyOriginalCustAccount</Name>
				<Source><![CDATA[
    public InterCompanyOriginalCustAccount parmInterCompanyOriginalCustAccount(InterCompanyOriginalCustAccount _interCompanyOriginalCustAccount = '')
    {
        if (!prmisDefault(_interCompanyOriginalCustAccount))
        {
            this.setField(fieldNum(PurchTable, InterCompanyOriginalCustAccount), _interCompanyOriginalCustAccount);
        }

        return purchTable.InterCompanyOriginalCustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyOriginalSalesId</Name>
				<Source><![CDATA[
    public InterCompanyOriginalSalesId parmInterCompanyOriginalSalesId(InterCompanyOriginalSalesId _interCompanyOriginalSalesId = '')
    {
        if (!prmisDefault(_interCompanyOriginalSalesId))
        {
            this.setField(fieldNum(PurchTable, InterCompanyOriginalSalesId), _interCompanyOriginalSalesId);
        }

        return purchTable.InterCompanyOriginalSalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanySalesId</Name>
				<Source><![CDATA[
    public InterCompanySalesId parmInterCompanySalesId(InterCompanySalesId _interCompanySalesId = '')
    {
        if (!prmisDefault(_interCompanySalesId))
        {
            this.setField(fieldNum(PurchTable, InterCompanySalesId), _interCompanySalesId);
        }

        return purchTable.InterCompanySalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntrastatAddValue_LV</Name>
				<Source><![CDATA[
    public LvIntrastatAddValue parmIntrastatAddValue_LV(LvIntrastatAddValue _intrastatAddValue_LV = 0)
    {
        if (!prmisDefault(_intrastatAddValue_LV))
        {
            this.setField(fieldNum(PurchTable, IntrastatAddValue_LV), _intrastatAddValue_LV);
        }

        return purchTable.IntrastatAddValue_LV;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntrastatFulfillmentDate_HU</Name>
				<Source><![CDATA[
    public IntrastatFulfillmentDate_HU parmIntrastatFulfillmentDate_HU(IntrastatFulfillmentDate_HU _intrastatFulfillmentDate_HU = dateNull())
    {
        if (!prmisDefault(_intrastatFulfillmentDate_HU))
        {
            this.setField(fieldNum(PurchTable, IntrastatFulfillmentDate_HU), _intrastatFulfillmentDate_HU);
        }

        return purchTable.IntrastatFulfillmentDate_HU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocationId</Name>
				<Source><![CDATA[
    public PurchInventLocationId parmInventLocationId(PurchInventLocationId _inventLocationId = '')
    {
        if (!prmisDefault(_inventLocationId))
        {
            this.setField(fieldNum(PurchTable, InventLocationId), _inventLocationId);
        }

        return purchTable.InventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventSiteId</Name>
				<Source><![CDATA[
    public InventSiteId parmInventSiteId(InventSiteId _inventSiteId = '')
    {
        if (!prmisDefault(_inventSiteId))
        {
            this.setField(fieldNum(PurchTable, InventSiteId), _inventSiteId);
        }

        return purchTable.InventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    public str parmInvoiceAccount(str _invoiceAccount = '')
    {
        DictField dictField;

        if (!prmisDefault(_invoiceAccount))
        {
            dictField = new DictField(tableNum(PurchTable), fieldNum(PurchTable, InvoiceAccount));

            if (this.valueMappingInbound())
            {
                this.validateInboundString(_invoiceAccount, dictField, this.mapPolicy().xMLMapVendAccount());
                _invoiceAccount = this.axVendAccount(_invoiceAccount);
            }
            else
            {
                this.validateInboundString(_invoiceAccount, dictField);
            }

            this.setField(fieldNum(PurchTable, InvoiceAccount), _invoiceAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axVendAccount(purchTable.InvoiceAccount);
        }
        else
        {
            return purchTable.InvoiceAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAutoNumbering_LT</Name>
				<Source><![CDATA[
    public LtInvoiceAutoNumbering parmInvoiceAutoNumbering_LT(LtInvoiceAutoNumbering _ltInvoiceAutoNumbering = NoYes::No)
    {
        if (!prmisDefault(_ltInvoiceAutoNumbering))
        {
            this.setField(fieldNum(PurchTable, InvoiceAutoNumbering_LT), _ltInvoiceAutoNumbering);
        }

        return purchTable.InvoiceAutoNumbering_LT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsEncumbranceRequired</Name>
				<Source><![CDATA[
    public UnknownNoYes parmIsEncumbranceRequired(UnknownNoYes _isEncumbranceRequired = UnknownNoYes::Unknown)
    {
        if (!prmisdefault(_isEncumbranceRequired))
        {
            this.setField(fieldNum(PurchTable, IsEncumbranceRequired), _isEncumbranceRequired);
        }

        return purchTable.IsEncumbranceRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsModified</Name>
				<Source><![CDATA[
    public VersioningIsModified parmIsModified(VersioningIsModified _isModified = NoYes::No)
    {
        if (!prmisdefault(_isModified))
        {
            this.setField(fieldNum(PurchTable, IsModified), _isModified);
        }

        return purchTable.IsModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemBuyerGroupId</Name>
				<Source><![CDATA[
    public ItemBuyerGroupId parmItemBuyerGroupId(ItemBuyerGroupId _itemBuyerGroupId = '')
    {
        if (!prmisDefault(_itemBuyerGroupId))
        {
            this.setField(fieldNum(PurchTable, ItemBuyerGroupId), _itemBuyerGroupId);
        }

        return purchTable.ItemBuyerGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLanguageId</Name>
				<Source><![CDATA[
    public VendLanguageId parmLanguageId(VendLanguageId _languageId = '')
    {
        if (!prmisDefault(_languageId))
        {
            this.setField(fieldNum(PurchTable, LanguageId), _languageId);
        }

        return purchTable.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    public VendLineDiscCode parmLineDisc(VendLineDiscCode _lineDisc = '')
    {
        if (!prmisDefault(_lineDisc))
        {
            this.setField(fieldNum(PurchTable, LineDisc), _lineDisc);
        }

        return purchTable.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmListCode</Name>
				<Source><![CDATA[
    public ListcodeId parmListCode(ListcodeId _listCode = 0)
    {
        if (!prmisDefault(_listCode))
        {
            this.setField(fieldNum(PurchTable, ListCode), _listCode);
        }

        return purchTable.ListCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocalDeliveryDate</Name>
				<Source><![CDATA[
    public RetailLocalDeliveryDate parmLocalDeliveryDate(RetailLocalDeliveryDate _localDeliveryDate = dateNull())
    {
        if (!prmisDefault(_localDeliveryDate))
        {
            this.setField(fieldNum(PurchTable, LocalDeliveryDate), _localDeliveryDate);
        }

        return purchTable.LocalDeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmManualEntryChangepolicy</Name>
				<Source><![CDATA[
    public PriceDiscPolicyManual parmManualEntryChangepolicy(PriceDiscPolicyManual _manualEntryChangepolicy = 0)
    {
        if (!prmisdefault(_manualEntryChangepolicy))
        {
            this.setField(fieldNum(PurchTable, ManualEntryChangepolicy), _manualEntryChangepolicy);
        }

        return purchTable.ManualEntryChangepolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkupGroup</Name>
				<Source><![CDATA[
    public VendMarkupGroupId parmMarkupGroup(VendMarkupGroupId _markupGroup = '')
    {
        if (!prmisDefault(_markupGroup))
        {
            this.setField(fieldNum(PurchTable, MarkupGroup), _markupGroup);
        }

        return purchTable.MarkupGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMatchingAgreement</Name>
				<Source><![CDATA[
    public RefRecId parmMatchingAgreement(AgreementHeaderRecId _agreementHeaderRecId = 0)
    {
        if (!prmisDefault(_agreementHeaderRecId))
        {
            this.setField(fieldNum(PurchTable, MatchingAgreement), _agreementHeaderRecId);
        }

        return purchTable.MatchingAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMCRDropShipment</Name>
				<Source><![CDATA[
    public MCRDropShipment parmMCRDropShipment(MCRDropShipment _mcrDropShipment = NoYes::No)
    {
        if (!prmisDefault(_mcrDropShipment))
        {
            this.setField(fieldNum(PurchTable, mcrDropShipment), _mcrDropShipment);
        }

        return purchTable.mcrDropShipment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLineDisc</Name>
				<Source><![CDATA[
    public VendMultiLineDiscCode parmMultiLineDisc(VendMultiLineDiscCode _multiLineDisc = '')
    {
        if (!prmisDefault(_multiLineDisc))
        {
            this.setField(fieldNum(PurchTable, MultiLineDisc), _multiLineDisc);
        }

        return purchTable.MultiLineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumberSequenceGroup</Name>
				<Source><![CDATA[
    public NumberSequenceGroupId parmNumberSequenceGroup(NumberSequenceGroupId _numberSequenceGroup = '')
    {
        if (!prmisDefault(_numberSequenceGroup))
        {
            this.setField(fieldNum(PurchTable, NumberSequenceGroup), _numberSequenceGroup);
        }

        return purchTable.NumberSequenceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOneTimeSupplier</Name>
				<Source><![CDATA[
    public OneTimeSupplier parmOneTimeSupplier(OneTimeSupplier _oneTimeSupplier = NoYes::No)
    {
        if (!prmisDefault(_oneTimeSupplier))
        {
            this.setField(fieldNum(PurchTable, OneTimeSupplier), _oneTimeSupplier);
        }

        return purchTable.OneTimeSupplier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOneTimeVendor</Name>
				<Source><![CDATA[
    public OneTimeSupplier parmOneTimeVendor(OneTimeSupplier _oneTimeVendor = NoYes::No)
    {
        if (!prmisDefault(_oneTimeVendor))
        {
            this.setField(fieldNum(PurchTable, OneTimeVendor), _oneTimeVendor);
        }

        return purchTable.OneTimeVendor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderAccount</Name>
				<Source><![CDATA[
    public str parmOrderAccount(str _orderAccount = '')
    {
        DictField   dictField;
        if (!prmisDefault(_orderAccount))
        {
            dictField = new DictField(tableNum(PurchTable), fieldNum(PurchTable, OrderAccount));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_orderAccount, dictField, this.mapPolicy().xMLMapVendAccount());
                _orderAccount = this.axVendAccount(_orderAccount);
            }
            else
            {
                this.validateInboundString(_orderAccount, dictField);
            }

            this.setField(fieldNum(PurchTable, OrderAccount), _orderAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axVendAccount(purchTable.OrderAccount);
        }
        else
        {
            return purchTable.OrderAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackedExtensions</Name>
				<Source><![CDATA[
    public SysExtensionSerializerPackedContainer parmPackedExtensions(SysExtensionSerializerPackedContainer _packedExtensions = connull())
    {
        if (!prmisdefault(_packedExtensions))
        {
            this.setField(fieldNum(PurchTable, PackedExtensions), _packedExtensions);
        }

        return purchTable.PackedExtensions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackingSlipAutoNumbering_LT</Name>
				<Source><![CDATA[
    public LtPackingSlipAutoNumbering parmPackingSlipAutoNumbering_LT(LtPackingSlipAutoNumbering _ltPackingSlipAutoNumbering = NoYes::No)
    {
        if (!prmisDefault(_ltPackingSlipAutoNumbering))
        {
            this.setField(fieldNum(PurchTable, PackingSlipAutoNumbering_LT), _ltPackingSlipAutoNumbering);
        }

        return purchTable.PackingSlipAutoNumbering_LT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayment</Name>
				<Source><![CDATA[
    public VendPaymTermId parmPayment(VendPaymTermId _payment = '')
    {
        if (!prmisDefault(_payment))
        {
            this.setField(fieldNum(PurchTable, Payment), _payment);
        }

        return purchTable.Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentSched</Name>
				<Source><![CDATA[
    public PaymSchedId parmPaymentSched(PaymSchedId _paymentSched = '')
    {
        if (!prmisDefault(_paymentSched))
        {
            this.setField(fieldNum(PurchTable, PaymentSched), _paymentSched);
        }

        return purchTable.PaymentSched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public VendPaymMode parmPaymMode(VendPaymMode _paymMode = '')
    {
        if (!prmisDefault(_paymMode))
        {
            this.setField(fieldNum(PurchTable, PaymMode), _paymMode);
        }

        return purchTable.PaymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymSpec</Name>
				<Source><![CDATA[
    public VendPaymSpec parmPaymSpec(VendPaymSpec _paymSpec = '')
    {
        if (!prmisDefault(_paymSpec))
        {
            this.setField(fieldNum(PurchTable, PaymSpec), _paymSpec);
        }

        return purchTable.PaymSpec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPort</Name>
				<Source><![CDATA[
    public IntrastatPortId parmPort(IntrastatPortId _port = '')
    {
        if (!prmisDefault(_port))
        {
            this.setField(fieldNum(PurchTable, Port), _port);
        }

        return purchTable.Port;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile</Name>
				<Source><![CDATA[
    public VendPostingProfile parmPostingProfile(VendPostingProfile _postingProfile = '')
    {
        if (!prmisDefault(_postingProfile))
        {
            this.setField(fieldNum(PurchTable, PostingProfile), _postingProfile);
        }

        return purchTable.PostingProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceGroupId</Name>
				<Source><![CDATA[
    public VendPriceGroup parmPriceGroupId(VendPriceGroup _priceGroupId = '')
    {
        if (!prmisDefault(_priceGroupId))
        {
            this.setField(fieldNum(PurchTable, PriceGroupId), _priceGroupId);
        }

        return purchTable.PriceGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    public ProjId parmProjId(ProjId _projId = '')
    {
        if (!prmisDefault(_projId))
        {
            this.setField(fieldNum(PurchTable, ProjId), _projId);
        }

        return purchTable.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchaseType</Name>
				<Source><![CDATA[
    public PurchaseType parmPurchaseType(PurchaseType _purchaseType = PurchaseType::Journal)
    {
        if (!prmisDefault(_purchaseType))
        {
            this.setField(fieldNum(PurchTable, PurchaseType), _purchaseType);
        }

        return purchTable.PurchaseType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchId</Name>
				<Source><![CDATA[
    public PurchIdBase parmPurchId(PurchIdBase _purchId = '')
    {
        if (!prmisDefault(_purchId))
        {
            this.setField(fieldNum(PurchTable, PurchId), _purchId);
        }

        return purchTable.PurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchName</Name>
				<Source><![CDATA[
    public PurchName parmPurchName(PurchName _purchName = '')
    {
        if (!prmisDefault(_purchName))
        {
            this.setField(fieldNum(PurchTable, PurchName), _purchName);
        }

        return purchTable.PurchName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchPoolId</Name>
				<Source><![CDATA[
    public PurchPoolId parmPurchPoolId(PurchPoolId _purchPoolId = '')
    {
        if (!prmisDefault(_purchPoolId))
        {
            this.setField(fieldNum(PurchTable, PurchPoolId), _purchPoolId);
        }

        return purchTable.PurchPoolId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchStatus</Name>
				<Source><![CDATA[
    public PurchStatus parmPurchStatus(PurchStatus _purchStatus = PurchStatus::None)
    {
        if (!prmisDefault(_purchStatus))
        {
            this.setField(fieldNum(PurchTable, PurchStatus), _purchStatus);
        }

        return purchTable.PurchStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonTableRef</Name>
				<Source><![CDATA[
    public RefRecId parmReasonTableRef(RefRecId _reasonTableRef = 0)
    {
        if (!prmisdefault(_reasonTableRef))
        {
            this.setField(fieldNum(PurchTable, ReasonTableRef), _reasonTableRef);
        }

        return purchTable.ReasonTableRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiptDateConfirmed</Name>
				<Source><![CDATA[
    public SalesReceiptDateConfirmed parmReceiptDateConfirmed(SalesReceiptDateConfirmed _receiptDateConfirmed = dateNull())
    {
        if (!prmisDefault(_receiptDateConfirmed))
        {
            this.setField(fieldNum(PurchTable, ReceiptDateConfirmed), _receiptDateConfirmed);
        }
        return purchTable.ReceiptDateConfirmed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReplenishmentLocation</Name>
				<Source><![CDATA[
    public InventLocationId parmReplenishmentLocation(InventLocationId _replenishmentLocation = '')
    {
        if (!prmisDefault(_replenishmentLocation))
        {
            this.setField(fieldNum(PurchTable, ReplenishmentLocation), _replenishmentLocation);
        }

        return purchTable.ReplenishmentLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqAttention</Name>
				<Source><![CDATA[
    public PurchReqAttention parmReqAttention(PurchReqAttention _reqAttention = '')
    {
        if (!prmisDefault(_reqAttention))
        {
            this.setField(fieldNum(PurchTable, ReqAttention), _reqAttention);
        }

        return purchTable.ReqAttention;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequestedShipDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal PurchRequestedShipDate parmRequestedShipDate(PurchRequestedShipDate _requestedShipDate = dateNull())
    {
        if (!prmisDefault(_requestedShipDate))
        {
            this.setField(fieldNum(PurchTable, RequestedShipDate), _requestedShipDate);
        }

        return purchTable.RequestedShipDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequester</Name>
				<Source><![CDATA[
    public PurchRequester parmRequester(PurchPlacer _requester = 0)
    {
        if (!prmisDefault(_requester))
        {
            this.setField(fieldNum(PurchTable, Requester), _requester);
        }

        return purchTable.Requester;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailDriverDetails</Name>
				<Source><![CDATA[
    public RetailDriverDetails parmRetailDriverDetails(RetailDriverDetails _retailDriverDetails = '')
    {
        if (!prmisdefault(_retailDriverDetails))
        {
            this.setField(fieldNum(PurchTable, RetailDriverDetails), _retailDriverDetails);
        }

        return purchTable.RetailDriverDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailRetailStatusType</Name>
				<Source><![CDATA[
    public RetailRetailStatusType parmRetailRetailStatusType(RetailRetailStatusType _retailRetailStatusType = RetailRetailStatusTypeBase::None)
    {
        if (!prmisdefault(_retailRetailStatusType))
        {
            this.setField(fieldNum(PurchTable, RetailRetailStatusType), _retailRetailStatusType);
        }

        return purchTable.RetailRetailStatusType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnItemNum</Name>
				<Source><![CDATA[
    public PurchReturnItemNum parmReturnItemNum(PurchReturnItemNum _returnItemNum = '')
    {
        if (!prmisDefault(_returnItemNum))
        {
            this.setField(fieldNum(PurchTable, ReturnItemNum), _returnItemNum);
        }

        return purchTable.ReturnItemNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnReasonCodeId</Name>
				<Source><![CDATA[
    public ReturnReasonCodeId parmReturnReasonCodeId(ReturnReasonCodeId _returnReasonCodeId = '')
    {
        if (!prmisDefault(_returnReasonCodeId))
        {
            this.setField(fieldNum(PurchTable, ReturnReasonCodeId), _returnReasonCodeId);
        }

        return purchTable.ReturnReasonCodeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnReplacementCreated</Name>
				<Source><![CDATA[
    public ReturnReplacementCreated parmReturnReplacementCreated(NoYes _returnReplacementCreated = NoYes::No)
    {
        if (!prmisDefault(_returnReplacementCreated))
        {
            this.setField(fieldNum(PurchTable, ReturnReplacementCreated), _returnReplacementCreated);
        }

        return purchTable.ReturnReplacementCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmServiceAddress</Name>
				<Source><![CDATA[
    public Addressing parmServiceAddress(Addressing _serviceAddress = '')
    {
        if (!prmisdefault(_serviceAddress))
        {
            this.setField(fieldNum(PurchTable, ServiceAddress), _serviceAddress);
        }

        return purchTable.ServiceAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmServiceCategory</Name>
				<Source><![CDATA[
    public RetailServiceCategoryId parmServiceCategory(RetailServiceCategoryId _serviceCategory = '')
    {
        if (!prmisDefault(_serviceCategory))
        {
            this.setField(fieldNum(PurchTable, ServiceCategory), _serviceCategory);
        }

        return purchTable.ServiceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmServiceDate</Name>
				<Source><![CDATA[
    public ServiceDate parmServiceDate(ServiceDate _serviceDate = dateNull())
    {
        if (!prmisDefault(_serviceDate))
        {
            this.setField(fieldNum(PurchTable, ServiceDate), _serviceDate);
        }

        return purchTable.ServiceDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmServiceName</Name>
				<Source><![CDATA[
    public VATNum parmServiceName(VATNum _serviceName = '')
    {
        if (!prmisDefault(_serviceName))
        {
            this.setField(fieldNum(PurchTable, ServiceName), _serviceName);
        }

        return purchTable.ServiceName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettleVoucher</Name>
				<Source><![CDATA[
    public PurchSettlementType parmSettleVoucher(PurchSettlementType _settleVoucher = SettlementType::None)
    {
        if (!prmisDefault(_settleVoucher))
        {
            this.setField(fieldNum(PurchTable, SettleVoucher), _settleVoucher);
        }

        return purchTable.SettleVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShippingDateConfirmed</Name>
				<Source><![CDATA[
    public SalesShippingDateConfirmed parmShippingDateConfirmed(SalesShippingDateConfirmed _shippingDateConfirmed = dateNull())
    {
        if (!prmisDefault(_shippingDateConfirmed))
        {
            this.setField(fieldNum(PurchTable, ShippingDateConfirmed), _shippingDateConfirmed);
        }
        return purchTable.ShippingDateConfirmed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShippingDateRequested</Name>
				<Source><![CDATA[
    public SalesShippingDateRequested parmShippingDateRequested(SalesShippingDateRequested _shippingDateRequested = dateNull())
    {
        if (!prmisDefault(_shippingDateRequested))
        {
            this.setField(fieldNum(PurchTable, ShippingDateRequested), _shippingDateRequested);
        }
        return purchTable.ShippingDateRequested;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipUpdate</Name>
				<Source><![CDATA[
    public InterCompanySkipUpdate parmSkipUpdate(InterCompanySkipUpdate _skipUpdate = InterCompanySkipUpdate::Both)
    {
        if (!prmisDefault(_skipUpdate))
        {
            this.setField(fieldNum(PurchTable, SkipUpdate), _skipUpdate);
        }

        return purchTable.SkipUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentHeader</Name>
				<Source><![CDATA[
    public RefRecId parmSourceDocumentHeader(RefRecId _sourceDocumentHeader = 0)
    {
        if (!prmisDefault(_sourceDocumentHeader))
        {
            this.setField(fieldNum(PurchTable, SourceDocumentHeader), _sourceDocumentHeader);
        }

        return purchTable.SourceDocumentHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentLine</Name>
				<Source><![CDATA[
    public RefRecId parmSourceDocumentLine(RefRecId _sourceDocumentLine = 0)
    {
        if (!prmisDefault(_sourceDocumentLine))
        {
            this.setField(fieldNum(PurchTable, SourceDocumentLine), _sourceDocumentLine);
        }

        return purchTable.SourceDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatProcId</Name>
				<Source><![CDATA[
    public IntrastatProcId parmStatProcId(IntrastatProcId _statProcId = '')
    {
        if (!prmisDefault(_statProcId))
        {
            this.setField(fieldNum(PurchTable, StatProcId), _statProcId);
        }

        return purchTable.StatProcId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSystemEntryChangePolicy</Name>
				<Source><![CDATA[
    public PriceDiscPolicySystem parmSystemEntryChangePolicy(PriceDiscPolicySystem _systemEntryChangePolicy = 0)
    {
        if (!prmisdefault(_systemEntryChangePolicy))
        {
            this.setField(fieldNum(PurchTable, SystemEntryChangePolicy), _systemEntryChangePolicy);
        }

        return purchTable.SystemEntryChangePolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSystemEntrySource</Name>
				<Source><![CDATA[
    public PriceDiscSystemSource parmSystemEntrySource(PriceDiscSystemSource _systemEntrySource = PriceDiscSystemSource::None)
    {
        if (!prmisdefault(_systemEntrySource))
        {
            this.setField(fieldNum(PurchTable, SystemEntrySource), _systemEntrySource);
        }

        return purchTable.SystemEntrySource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTAMVendRebateGroupId</Name>
				<Source><![CDATA[
    public TAMVendRebateGroupId parmTAMVendRebateGroupId(TAMVendRebateGroupId _tamVendRebateGroupId = '')
    {
        if (!prmisDefault(_tamVendRebateGroupId))
        {
            this.setField(fieldNum(PurchTable, TAMVendRebateGroupId), _tamVendRebateGroupId);
        }

        return purchTable.TAMVendRebateGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
        if (!prmisDefault(_taxGroup))
        {
            this.setField(fieldNum(PurchTable, TaxGroup), _taxGroup);
        }

        return purchTable.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOverrideSalesTax</Name>
				<Source><![CDATA[
    public NoYes parmOverrideSalesTax(NoYes _overrideSalesTax = NoYes::No)
    {
        if (!prmisDefault(_overrideSalesTax))
        {
            this.setField(fieldNum(PurchTable, OverrideSalesTax), _overrideSalesTax);
        }

        return purchTable.OverrideSalesTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxPeriodPaymentCode_PL</Name>
				<Source><![CDATA[
    public PlTaxPeriodPaymentCode parmTaxPeriodPaymentCode_PL(PlTaxPeriodPaymentCode _taxPeriodPaymentCode_PL = '')
    {
        if (!prmisDefault(_taxPeriodPaymentCode_PL))
        {
            this.setField(fieldNum(PurchTable, TaxPeriodPaymentCode_PL), _taxPeriodPaymentCode_PL);
        }

        return purchTable.TaxPeriodPaymentCode_PL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCode</Name>
				<Source><![CDATA[
    public IntrastatTransactionCodeId parmTransactionCode(IntrastatTransactionCodeId _transactionCode = '')
    {
        if (!prmisDefault(_transactionCode))
        {
            this.setField(fieldNum(PurchTable, TransactionCode), _transactionCode);
        }

        return purchTable.TransactionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransport</Name>
				<Source><![CDATA[
    public IntrastatTransport parmTransport(IntrastatTransport _transport = '')
    {
        if (!prmisDefault(_transport))
        {
            this.setField(fieldNum(PurchTable, Transport), _transport);
        }

        return purchTable.Transport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransportationDocument</Name>
				<Source><![CDATA[
    public TransportationDocumentRecId parmTransportationDocument(TransportationDocumentRecId _transportationDocument = 0)
    {
        if (!prmisdefault(_transportationDocument))
        {
            this.setField(fieldNum(PurchTable, TransportationDocument), _transportationDocument);
        }

        return purchTable.TransportationDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitedVATInvoice_LT</Name>
				<Source><![CDATA[
    public UnitedVATInvoice_LT parmUnitedVATInvoice_LT(UnitedVATInvoice_LT _unitedVATInvoice_LT = NoYes::No)
    {
        if (!prmisDefault(_unitedVATInvoice_LT))
        {
            this.setField(fieldNum(PurchTable, UnitedVATInvoice_LT), _unitedVATInvoice_LT);
        }

        return purchTable.UnitedVATInvoice_LT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmURL</Name>
				<Source><![CDATA[
    public URL parmURL(URL _url = '')
    {
        if (!prmisDefault(_url))
        {
            this.setField(fieldNum(PurchTable, url), _url);
        }

        return purchTable.url;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVATNum</Name>
				<Source><![CDATA[
    public VATNumJournal parmVATNum(VATNumJournal _vatNum = '')
    {
        if (!prmisDefault(_vatNum))
        {
            this.setField(fieldNum(PurchTable, vatNum), _vatNum);
        }

        return purchTable.vatNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVATNumRecId</Name>
				<Source><![CDATA[
    public RefRecId parmVATNumRecId(RefRecId _vatNumRecId = 0)
    {
        if (!prmisDefault(_vatNumRecId))
        {
            this.setField(fieldNum(PurchTable, vatNumRecId), _vatNumRecId);
        }

        return purchTable.vatNumRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVATNumTableType</Name>
				<Source><![CDATA[
    public TaxExemptNumberSourceType parmVATNumTableType(TaxExemptNumberSourceType _vatNumTableType = TaxExemptNumberSourceType::None)
    {
        if (!prmisDefault(_vatNumTableType))
        {
            this.setField(fieldNum(PurchTable, vatNumTableType), _vatNumTableType);
        }

        return purchTable.vatNumTableType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendGroup</Name>
				<Source><![CDATA[
    public VendGroupId parmVendGroup(VendGroupId _vendGroup = '')
    {
        if (!prmisDefault(_vendGroup))
        {
            this.setField(fieldNum(PurchTable, VendGroup), _vendGroup);
        }

        return purchTable.VendGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceDeclaration_IS</Name>
				<Source><![CDATA[
    public InvoiceDeclarationId_IS parmVendInvoiceDeclaration_IS(InvoiceDeclarationId_IS _invoiceDeclarationId = 0)
    {
        if (!prmisDefault(_invoiceDeclarationId))
        {
            this.setField(fieldNum(PurchTable, VendInvoiceDeclaration_IS), _invoiceDeclarationId);
        }

        return purchTable.VendInvoiceDeclaration_IS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendorShipCalendarId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal PurchVendorShipCalendarId parmVendorShipCalendarId(PurchVendorShipCalendarId _vendorShipCalendarId = '')
    {
        if (!prmisDefault(_vendorShipCalendarId))
        {
            this.setField(fieldNum(PurchTable, ShipCalendarId), _vendorShipCalendarId);
        }

        return purchTable.ShipCalendarId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendorRef</Name>
				<Source><![CDATA[
    public VendRef parmVendorRef(VendRef _vendorRef = '')
    {
        if (!prmisDefault(_vendorRef))
        {
            this.setField(fieldNum(PurchTable, VendorRef), _vendorRef);
        }

        return purchTable.VendorRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerPurchPlacer</Name>
				<Source><![CDATA[
    public PurchPlacer parmWorkerPurchPlacer(PurchPlacer _workerPurchPlacer = 0)
    {
        if (!prmisDefault(_workerPurchPlacer))
        {
            this.setField(fieldNum(PurchTable, WorkerPurchPlacer), _workerPurchPlacer);
        }

        return purchTable.WorkerPurchPlacer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymTermRecord</Name>
				<Source><![CDATA[
    public PaymTerm paymTermRecord(PaymTerm _paymTerm = null)
    {
        PaymTerm    paymTerm;

        if (!paymTermIdx)
        {
            paymTermIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_paymTerm))
        {
            this.tableCacheInsert(paymTermIdx, _paymTerm);
            paymTerm = _paymTerm;
        }
        else
        {
            if (this.tableCacheExist(paymTermIdx))
            {
                paymTerm = this.tableCacheLookup(paymTermIdx);
            }
            else
            {
                this.setPayment();
                paymTerm = PaymTerm::find(this.parmPayment());
                this.tableCacheInsert(paymTermIdx, paymTerm);
            }
        }

        return paymTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTableRecord</Name>
				<Source><![CDATA[
    public ProjTable projTableRecord(ProjTable _projTable = null)
    {
        ProjTable   projTable;

        if (!projTableIdx)
        {
            projTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_projTable))
        {
            this.tableCacheInsert(projTableIdx, _projTable);
            projTable = _projTable;
        }
        else
        {
            if (this.tableCacheExist(projTableIdx))
            {
                projTable = this.tableCacheLookup(projTableIdx);
            }
            else
            {
                this.setProjId();
                projTable = ProjTable::find(this.parmProjId());
                this.tableCacheInsert(projTableIdx, projTable);
            }
        }

        return projTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchAgreementHeaderDefaultRecord</Name>
				<Source><![CDATA[
    public PurchAgreementHeaderDefault purchAgreementHeaderDefaultRecord(PurchAgreementHeaderDefault _purchAagreementHeader = null)
    {
        PurchAgreementHeaderDefault     purchAgreementHeaderDefault;

        if (!purchAgreementHeaderDefaultIdx)
        {
            purchAgreementHeaderDefaultIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_purchAagreementHeader))
        {
            this.tableCacheInsert(purchAgreementHeaderDefaultIdx, _purchAagreementHeader);
            purchAgreementHeaderDefault = _purchAagreementHeader;
        }
        else
        {
            if (this.tableCacheExist(purchAgreementHeaderDefaultIdx))
            {
                purchAgreementHeaderDefault = this.tableCacheLookup(purchAgreementHeaderDefaultIdx);
            }
            else
            {
                if (purchTable.MatchingAgreement)
                {
                    purchAgreementHeaderDefault = PurchAgreementHeader::find(purchTable.MatchingAgreement).purchAgreementHeaderDefault();
                    this.tableCacheInsert(purchAgreementHeaderDefaultIdx, purchAgreementHeaderDefault);
                }
            }
        }

        return purchAgreementHeaderDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchParametersRecord</Name>
				<Source><![CDATA[
    public PurchParameters purchParametersRecord(PurchParameters _purchParameters = null)
    {
        PurchParameters  purchParameters;

        if (!purchParametersIdx)
        {
            purchParametersIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_purchParameters))
        {
            this.tableCacheInsert(purchParametersIdx, _purchParameters);
            purchParameters = _purchParameters;
        }
        else
        {
            if (this.tableCacheExist(purchParametersIdx))
            {
                purchParameters = this.tableCacheLookup(purchParametersIdx);
            }
            else
            {
                purchParameters = PurchParameters::find();
                this.tableCacheInsert(purchParametersIdx, purchParameters);
            }
        }

        return purchParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTable</Name>
				<Source><![CDATA[
    public PurchTable purchTable(PurchTable _purchTable = purchTable)
    {
        if (!prmisDefault(_purchTable))
        {
            this.setCurrentRecordFromExternal(_purchTable);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountingDistributionTemplate</Name>
				<Source><![CDATA[
    protected void setAccountingDistributionTemplate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, AccountingDistributionTemplate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefRecId</Name>
				<Source><![CDATA[
    protected void setAddressRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, AddressRefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefTableId</Name>
				<Source><![CDATA[
    protected void setAddressRefTableId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, AddressRefTableId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAutoSummaryModuleType</Name>
				<Source><![CDATA[
    protected void setAutoSummaryModuleType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, AutoSummaryModuleType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBankCentralBankPurposeCode</Name>
				<Source><![CDATA[
    protected void setBankCentralBankPurposeCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, BankCentralBankPurposeCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBankCentralBankPurposeText</Name>
				<Source><![CDATA[
    protected void setBankCentralBankPurposeText()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, BankCentralBankPurposeText)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBankDocumentType</Name>
				<Source><![CDATA[
    protected void setBankDocumentType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, BankDocumentType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDisc</Name>
				<Source><![CDATA[
    protected void setCashDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, CashDisc)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmCashDisc(this.agreementHeaderDefaultRecord().CashDiscountCode);
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(PurchTable, InvoiceAccount)))
        {
            this.parmCashDisc(this.invoiceAccount_VendTableRecord().CashDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscPercent</Name>
				<Source><![CDATA[
    protected void setCashDiscPercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, CashDiscPercent)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmCashDiscPercent(this.agreementHeaderDefaultRecord().cashDiscPercent());
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmedDlv</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal protected void setConfirmedDlv()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ConfirmedDlv)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmedShipDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal protected void setConfirmedShipDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ConfirmedShipDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmingPO</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>ConfirmingPO</c> field of the <c>PurchTable</c> table.
    /// </summary>
    protected void setConfirmingPO()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ConfirmingPO)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConsTarget_JP</Name>
				<Source><![CDATA[
    protected void setConsTarget_JP()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ConsTarget_JP)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContactPersonId</Name>
				<Source><![CDATA[
    protected void setContactPersonId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ContactPersonId)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmContactPersonId(this.agreementHeaderDefaultRecord().ContactPerson);
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmContactPersonId(this.orderAccount_VendTableRecord().ContactPersonId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContractNum_SA</Name>
				<Source><![CDATA[
    protected void setContractNum_SA()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ContractNum_SA)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCovStatus</Name>
				<Source><![CDATA[
    protected void setCovStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, CovStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, CurrencyCode)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmCurrencyCode(this.orderAccount_VendTableRecord().Currency);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
    protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, DefaultDimension)))
        {
            return;
        }

        this.inventSiteDimensionLink().axSetDefaultDimension(this);

        if (this.projTableRecord())
        {
            if (this.isFieldSet(fieldNum(PurchTable, ProjId)))
            {
                this.parmDefaultDimension(this.currentRecord().mergeDimension(this.projTableRecord().DefaultDimension));
            }
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {            
            if (PurchTableInitFromDerivedDimensionFlight::instance().isEnabled())
            {
                this.setDefaultDimensionValue(this.currentRecord().mergeDimension(this.orderAccount_VendTableRecord().DefaultDimension));
            }
            else
            {
                this.parmDefaultDimension(this.currentRecord().mergeDimension(this.orderAccount_VendTableRecord().DefaultDimension));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>DefaultDimension</c> field on a buffer.
    /// </summary>
    /// <param name="_dimension">
    ///    The new dimension value.
    /// </param>
    /// <remarks>
    ///    This method is part of the <c>AxInventSiteDimensionable</c> interface and is called from the
    ///    <c>InventSiteDimensionLink</c> class.
    /// </remarks>
    public void setDefaultDimensionValue(DimensionDefault _dimension)
    {
        this.setField(fieldNum(PurchTable, DefaultDimension), _dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDate</Name>
				<Source><![CDATA[
    protected void setDeliveryDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, DeliveryDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryPostalAddress</Name>
				<Source><![CDATA[
    protected void setDeliveryPostalAddress()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, DeliveryPostalAddress)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryType</Name>
				<Source><![CDATA[
    protected void setDeliveryType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, DeliveryType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record.
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method so that all of the fields that are
    ///    entity specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldNum(PurchTable, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDiscPercent</Name>
				<Source><![CDATA[
    protected void setDiscPercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, DiscPercent)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvMode</Name>
				<Source><![CDATA[
    protected void setDlvMode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, DlvMode)))
        {
            return;
        }

            this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmDlvMode(this.agreementHeaderDefaultRecord().DeliveryMode);
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmDlvMode(this.orderAccount_VendTableRecord().DlvMode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvTerm</Name>
				<Source><![CDATA[
    protected void setDlvTerm()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, DlvTerm)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmDlvTerm(this.agreementHeaderDefaultRecord().DeliveryTerm);
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmDlvTerm(this.orderAccount_VendTableRecord().DlvTerm);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocumentStatus</Name>
				<Source><![CDATA[
    protected void setDocumentStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, DocumentStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEmail</Name>
				<Source><![CDATA[
    protected void setEmail()
    {
        LogisticsElectronicAddress electronicAddress;

        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, Email)))
        {
            return;
        }

        this.setContactPersonId();
        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, ContactPersonId)) ||
            this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            if (this.contactPersonRecord().email())
            {
                this.parmEmail(this.contactPersonRecord().email());
            }
            else
            {
                if (this.axDeliveryLocation().axAddress().addressTable())
                {
                    electronicAddress = LogisticsElectronicAddress::findByLocationAndType(this.axDeliveryLocation().parmRecId(), LogisticsElectronicAddressMethodType::Email);
                }
                else
                {
                    electronicAddress = DirParty::primaryElectronicAddress(this.companyInfoRecord().RecId, LogisticsElectronicAddressMethodType::Email);
                }

                this.parmEmail(electronicAddress ? electronicAddress.Locator : '');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEndDisc</Name>
				<Source><![CDATA[
    protected void setEndDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, EndDisc)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmEndDisc(this.orderAccount_VendTableRecord().EndDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnterpriseNumber</Name>
				<Source><![CDATA[
    protected void setEnterpriseNumber()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, EnterpriseNumber)))
        {
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(PurchTable, InvoiceAccount)))
        {
            this.parmEnterpriseNumber(this.invoiceAccount_VendTableRecord().getPrimaryRegistrationNumber(TaxRegistrationTypesList::UID));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFixedDueDate</Name>
				<Source><![CDATA[
    protected void setFixedDueDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, FixedDueDate)))
        {
            return;
        }

        this.setPayment();

        if (this.isFieldSet(fieldNum(PurchTable, Payment)))
        {
            this.parmFixedDueDate(dateNull());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFreightSlipType</Name>
				<Source><![CDATA[
    protected void setFreightSlipType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, FreightSlipType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFreightZone</Name>
				<Source><![CDATA[
    protected void setFreightZone()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, FreightZone)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInclTax</Name>
				<Source><![CDATA[
    protected void setInclTax()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InclTax)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmInclTax(this.orderAccount_VendTableRecord().InclTax);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyAllowIndirectCreation</Name>
				<Source><![CDATA[
    protected void setInterCompanyAllowIndirectCreation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanyAllowIndirectCreation)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyCompanyId</Name>
				<Source><![CDATA[
    protected void setInterCompanyCompanyId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanyCompanyId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyCustPurchOrderFormNum</Name>
				<Source><![CDATA[
    protected void setInterCompanyCustPurchOrderFormNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanyCustPurchOrderFormNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyDirectDelivery</Name>
				<Source><![CDATA[
    protected void setInterCompanyDirectDelivery()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanyDirectDelivery)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyOrder</Name>
				<Source><![CDATA[
    protected void setInterCompanyOrder()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanyOrder)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyOrigin</Name>
				<Source><![CDATA[
    protected void setInterCompanyOrigin()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanyOrigin)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyOriginalCustAccount</Name>
				<Source><![CDATA[
    protected void setInterCompanyOriginalCustAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanyOriginalCustAccount)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyOriginalSalesId</Name>
				<Source><![CDATA[
    protected void setInterCompanyOriginalSalesId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanyOriginalSalesId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanySalesId</Name>
				<Source><![CDATA[
    protected void setInterCompanySalesId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InterCompanySalesId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIntrastatFulfillmentDate_HU</Name>
				<Source><![CDATA[
    protected void setIntrastatFulfillmentDate_HU()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, IntrastatFulfillmentDate_HU)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    protected void setInventLocationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InventLocationId)))
        {
            return;
        }

        this.setOrderAccount();
        this.setInventSiteId();

        if (!this.parmInventSiteId() || this.parmInventSiteId() == this.orderAccount_VendTableRecord().InventSiteId)
        {
            if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
            {
                this.parmInventLocationId(this.orderAccount_VendTableRecord().InventLocation);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    protected void setInventSiteId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InventSiteId)))
        {
            return;
        }

        this.setInventLocationId();

        if (this.isFieldSet(fieldNum(PurchTable,InventLocationId)))
        {
            this.parmInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId);
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable,OrderAccount)))
        {
            this.parmInventSiteId(this.orderAccount_VendTableRecord().InventSiteId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceAccount</Name>
				<Source><![CDATA[
    protected void setInvoiceAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InvoiceAccount)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.purchAgreementHeaderDefaultRecord()
         && this.purchAgreementHeaderDefaultRecord().VendorInvoiceAccount
        )
        {
            this.parmInvoiceAccount(this.purchAgreementHeaderDefaultRecord().VendorInvoiceAccount);
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmInvoiceAccount(this.orderAccount_VendTableRecord().InvoiceAccount ? this.orderAccount_VendTableRecord().InvoiceAccount : this.orderAccount_VendTableRecord().AccountNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceAutoNumbering_LT</Name>
				<Source><![CDATA[
    protected void setInvoiceAutoNumbering_LT()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, InvoiceAutoNumbering_LT)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemBuyerGroupId</Name>
				<Source><![CDATA[
    protected void setItemBuyerGroupId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ItemBuyerGroupId)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.purchAgreementHeaderDefaultRecord())
        {
            this.parmItemBuyerGroupId(this.purchAgreementHeaderDefaultRecord().BuyerGroup);
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmItemBuyerGroupId(this.orderAccount_VendTableRecord().ItemBuyerGroupId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLanguageId</Name>
				<Source><![CDATA[
    protected void setLanguageId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, LanguageId)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmLanguageId(DirPartyTable::findRec(this.orderAccount_VendTableRecord().Party).LanguageId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    protected void setLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, LineDisc)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmLineDisc(this.orderAccount_VendTableRecord().LineDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setListCode</Name>
				<Source><![CDATA[
    protected void setListCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ListCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMarkupGroup</Name>
				<Source><![CDATA[
    protected void setMarkupGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, MarkupGroup)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmMarkupGroup(this.agreementHeaderDefaultRecord().MiscChargeGroup);
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmMarkupGroup(this.orderAccount_VendTableRecord().MarkupGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMatchingAgreement</Name>
				<Source><![CDATA[
    protected void setMatchingAgreement()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, MatchingAgreement)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLineDisc</Name>
				<Source><![CDATA[
    protected void setMultiLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, MultiLineDisc)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmMultiLineDisc(this.orderAccount_VendTableRecord().MultiLineDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNumberSequenceGroup</Name>
				<Source><![CDATA[
    protected void setNumberSequenceGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, NumberSequenceGroup)))
        {
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(PurchTable, InvoiceAccount)))
        {
            this.parmNumberSequenceGroup(this.invoiceAccount_VendTableRecord().NumberSequenceGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOneTimeVendor</Name>
				<Source><![CDATA[
    protected void setOneTimeVendor()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, OneTimeVendor)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrderAccount</Name>
				<Source><![CDATA[
    public void setOrderAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, OrderAccount)))
        {
            return;
        }

        this.setOneTimeVendor();

        if (this.parmOneTimeVendor() && !this.parmOrderAccount())
        {
            if (this.isFieldSet(fieldNum(PurchTable, OneTimeVendor)))
            {
                this.parmOrderAccount(VendTable::createOneTimeAccount(this.currentRecord()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPackingSlipAutoNumbering_LT</Name>
				<Source><![CDATA[
    protected void setPackingSlipAutoNumbering_LT()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PackingSlipAutoNumbering_LT)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPayment</Name>
				<Source><![CDATA[
    protected void setPayment()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, Payment)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmPayment(this.agreementHeaderDefaultRecord().PaymentTerms);
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(PurchTable, InvoiceAccount)))
        {
            this.parmPayment(this.invoiceAccount_VendTableRecord().PaymTermId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymentSched</Name>
				<Source><![CDATA[
    protected void setPaymentSched()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PaymentSched)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmPaymentSched(this.agreementHeaderDefaultRecord().PaymentSchedule);
            return;
        }

        this.setPayment();
        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(PurchTable, Payment))  ||
            this.isFieldSet(fieldNum(PurchTable, InvoiceAccount)))
        {
            if (this.invoiceAccount_VendTableRecord().PaymSched)
            {
                this.parmPaymentSched(this.invoiceAccount_VendTableRecord().PaymSched);
            }
            else
            {
                this.parmPaymentSched(this.paymTermRecord().PaymSched);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymMode</Name>
				<Source><![CDATA[
    protected void setPaymMode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PaymMode)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.purchAgreementHeaderDefaultRecord())
        {
            this.parmPaymMode(this.purchAgreementHeaderDefaultRecord().MethodOfPayment);
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(PurchTable, InvoiceAccount)))
        {
            this.parmPaymMode(this.invoiceAccount_VendTableRecord().PaymMode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymSpec</Name>
				<Source><![CDATA[
    protected void setPaymSpec()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PaymSpec)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.purchAgreementHeaderDefaultRecord())
        {
            this.parmPaymSpec(this.purchAgreementHeaderDefaultRecord().PaymentSpecification);
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(PurchTable, InvoiceAccount)))
        {
            this.parmPaymSpec(this.invoiceAccount_VendTableRecord().PaymSpec);
            return;
        }

        this.setPaymMode();

        if (this.isFieldSet(fieldNum(PurchTable, PaymMode)))
            this.parmPaymSpec('');
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPort</Name>
				<Source><![CDATA[
    protected void setPort()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, Port)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPostingProfile</Name>
				<Source><![CDATA[
    protected void setPostingProfile()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PostingProfile)))
        {
            return;
        }
        this.parmPostingProfile(VendParameters::find().PostingProfile);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceGroupId</Name>
				<Source><![CDATA[
    protected void setPriceGroupId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PriceGroupId)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmPriceGroupId(this.orderAccount_VendTableRecord().PriceGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjId</Name>
				<Source><![CDATA[
    protected void setProjId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ProjId)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmProjId(this.agreementHeaderDefaultRecord().Project);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchaseType</Name>
				<Source><![CDATA[
    protected void setPurchaseType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PurchaseType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchId</Name>
				<Source><![CDATA[
    protected void setPurchId()
    {
        NumberSequenceReference numberSequenceReference;

        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        if (this.isFieldSetExternally(fieldNum(PurchTable, PurchId)))
        {
            if (this.isSetMethodsCalledFromSave())
            {
                if (!this.purchTable())
                {
                    numberSequenceReference = PurchParameters::numRefPurchId();
                    this.checkNumber(numberSequenceReference.numberSequenceTable(),fieldNum(PurchTable,PurchId),this.parmPurchId());
                    if (numberSequenceReference.NumberSequenceId && numberSequenceReference.numberSequenceTable().Continuous)
                    {
                        NumberSeq::newReserveNum(numberSequenceReference).reserve(this.parmPurchId());
                    }
                }
            }
        }
        else
        {
            if (this.isFieldSet(fieldNum(PurchTable, PurchId)))
            {
                return;
            }

            if (!this.parmPurchId())
            {
                if (this.isSetMethodsCalledFromSave())
                {
                    this.parmPurchId(NumberSeq::newGetNum(PurchParameters::numRefPurchId()).num());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchName</Name>
				<Source><![CDATA[
    protected void setPurchName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PurchName)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmPurchName(this.orderAccount_VendTableRecord().name());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchPoolId</Name>
				<Source><![CDATA[
    protected void setPurchPoolId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PurchPoolId)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.purchAgreementHeaderDefaultRecord())
        {
            this.parmPurchPoolId(this.purchAgreementHeaderDefaultRecord().PurchasePool);
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            if (this.orderAccount_VendTableRecord().PurchPoolId)
            {
                this.parmPurchPoolId(this.orderAccount_VendTableRecord().PurchPoolId);
            }
            else
            {
                this.parmPurchPoolId(this.purchParametersRecord().PurchPoolId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchStatus</Name>
				<Source><![CDATA[
    protected void setPurchStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, PurchStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiptDateConfirmed</Name>
				<Source><![CDATA[
    protected void setReceiptDateConfirmed()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ReceiptDateConfirmed)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequestedShipDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal protected void setRequestedShipDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, RequestedShipDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequester</Name>
				<Source><![CDATA[
    protected void setRequester()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, Requester)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnItemNum</Name>
				<Source><![CDATA[
    protected void setReturnItemNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ReturnItemNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnReasonCodeId</Name>
				<Source><![CDATA[
    protected void setReturnReasonCodeId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ReturnReasonCodeId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnReplacementCreated</Name>
				<Source><![CDATA[
    protected void setReturnReplacementCreated()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ReturnReplacementCreated)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSettleVoucher</Name>
				<Source><![CDATA[
    protected void setSettleVoucher()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, SettleVoucher)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShippingDateConfirmed</Name>
				<Source><![CDATA[
    protected void setShippingDateConfirmed()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ShippingDateConfirmed)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShippingDateRequested</Name>
				<Source><![CDATA[
    protected void setShippingDateRequested()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ShippingDateRequested)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSkipUpdate</Name>
				<Source><![CDATA[
    protected void setSkipUpdate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, SkipUpdate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSourceDocumentHeader</Name>
				<Source><![CDATA[
    protected void setSourceDocumentHeader()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, SourceDocumentHeader)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSourceDocumentLine</Name>
				<Source><![CDATA[
    protected void setSourceDocumentLine()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, SourceDocumentLine)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatProcId</Name>
				<Source><![CDATA[
    protected void setStatProcId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, StatProcId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStorageDimField</Name>
				<Source><![CDATA[
    public void setStorageDimField(FieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldNum(PurchTable, InventSiteId):         this.setInventSiteId();         break;
            case fieldNum(PurchTable, InventLocationId):     this.setInventLocationId();     break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        // <GEEU>
        #ISOCountryRegionCodes
        // </GEEU>
        super();

        useMapPolicy = false;

        this.setPurchId();
        this.setPurchName();
        this.setOrderAccount();
        this.setInvoiceAccount();
        this.setFreightZone();
        this.setEmail();

        if (PurchParameters::find().IsSupplierShipmentDatesEnabled)
        {
            this.setVendorShipCalendarId();
            this.setRequestedShipDate();
            this.setConfirmedShipDate();
        }

        this.setDeliveryDate();
        this.setDeliveryType();
        this.setAddressRefRecId();
        this.setAddressRefTableId();
        this.setCurrencyCode();
        this.setPayment();
        this.setCashDisc();
        this.setCashDiscPercent();
        this.setWorkerPurchPlacer();
        this.setVendGroup();
        this.setLineDisc();
        this.setDiscPercent();
        this.setDefaultDimension();
        this.setPriceGroupId();
        this.setMultiLineDisc();
        this.setEndDisc();
        this.setDeliveryPostalAddress();
        this.setTaxGroup();
        this.setDlvTerm();
        this.setDlvMode();
        this.setPurchStatus();
        this.setMarkupGroup();
        this.setPurchaseType();
        this.setURL();
        this.setPostingProfile();
        this.setTransactionCode();
        this.setSettleVoucher();
        this.setCovStatus();
        this.setPaymentSched();
        this.setOneTimeVendor();
        this.setReturnItemNum();
        this.setFreightSlipType();
        this.setDocumentStatus();
        this.setContactPersonId();
        this.setInventLocationId();
        this.setItemBuyerGroupId();
        this.setProjId();
        this.setPurchPoolId();
        this.setVATNum();
        this.setPort();
        this.setInclTax();
        this.setNumberSequenceGroup();
        this.setLanguageId();
        this.setAutoSummaryModuleType();
        this.setTransport();
        this.setPaymMode();
        this.setPaymSpec();
        this.setFixedDueDate();
        this.setStatProcId();
        this.setVendorRef();
        this.setInterCompanyCompanyId();
        this.setInterCompanySalesId();
        this.setInterCompanyOrder();
        this.setInterCompanyCustPurchOrderFormNum();
        this.setInterCompanyDirectDelivery();
        this.setSkipUpdate();
        this.setReceiptDateConfirmed();
        this.setShippingDateRequested();
        this.setShippingDateConfirmed();
        this.setEnterpriseNumber();
        this.setInterCompanyAllowIndirectCreation();
        this.setInterCompanyOriginalCustAccount();
        this.setInterCompanyOriginalSalesId();
        this.setInterCompanyOrigin();
        this.setInventSiteId();
        this.setReturnReasonCodeId();
        this.setReturnReplacementCreated();
        this.setMatchingAgreement();

        if (PurchTable_W::isExtensionEnabled())
        {
            this.axPurchTable_W().setTableFields();
        }

        // <GJP>
        if (VendConsInvoiceType_JP::isVendConsInvoiceEnabled())
        {
            this.setConsTarget_JP();
        }
        // </GJP>
        this.setVendInvoiceDeclaration_IS();
        this.setAccountingDistributionTemplate();
        this.setBankDocumentType();

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            this.axPurchTable_BR().setTableFields();
        }
        // </GBR>
        // <GEEU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoLV]))
        {
            this.setInvoiceAutoNumbering_LT();
            this.setPackingSlipAutoNumbering_LT();
        }
        // </GEEU>
        this.setTAMVendRebateGroupId();
        this.setListCode();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFieldsForce</Name>
				<Source><![CDATA[
    void setTableFieldsForce()
    {
        this.setTableFields();

        this.setDimensionEntitySpecifiers();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTAMVendRebateGroupId</Name>
				<Source><![CDATA[
    protected void setTAMVendRebateGroupId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, TAMVendRebateGroupId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxGroup</Name>
				<Source><![CDATA[
    protected void setTaxGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, TaxGroup)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmTaxGroup(this.orderAccount_VendTableRecord().TaxGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionCode</Name>
				<Source><![CDATA[
    protected void setTransactionCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, TransactionCode)))
        {
            return;
        }

        if (this.projTableRecord())
        {
            if (this.isFieldSet(fieldNum(PurchTable, ProjId)))
            {
                this.parmTransactionCode(this.projTableRecord().projInvoice().TransactionCodeId);
            }
            return;
        }

        this.setPurchaseType();

        if (this.parmPurchaseType() == PurchaseType::ReturnItem)
        {
            if (this.isFieldSet(fieldNum(PurchTable, PurchaseType)))
            {
                this.parmTransactionCode(IntrastatParameters::find().DefaultCreditNote);
            }
            return;
        }
        this.parmTransactionCode(IntrastatParameters::find().DefaultSalePurchase);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransport</Name>
				<Source><![CDATA[
    protected void setTransport()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, Transport)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setURL</Name>
				<Source><![CDATA[
    protected void setURL()
    {
        LogisticsElectronicAddress electronicAddress;

        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, url)))
        {
            return;
        }

        if (this.axDeliveryLocation().axAddress().addressTable())
        {
            electronicAddress = LogisticsElectronicAddress::findByLocationAndType(this.axDeliveryLocation().parmRecId(), LogisticsElectronicAddressMethodType::URL);
        }
        else
        {
            electronicAddress = DirParty::primaryElectronicAddress(this.companyInfoRecord().RecId, LogisticsElectronicAddressMethodType::URL);
        }

        this.parmURL(electronicAddress ? electronicAddress.Locator : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVATNum</Name>
				<Source><![CDATA[
    protected void setVATNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, vatNum)))
        {
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(PurchTable, InvoiceAccount)))
        {
            this.parmVATNum(this.invoiceAccount_VendTableRecord().vatNum);
            this.parmVATNumRecId(this.invoiceAccount_VendTableRecord().vatNumRecId);
            this.parmVATNumTableType(this.invoiceAccount_VendTableRecord().vatNumTableType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendGroup</Name>
				<Source><![CDATA[
    protected void setVendGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, VendGroup)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmVendGroup(this.orderAccount_VendTableRecord().VendGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendInvoiceDeclaration_IS</Name>
				<Source><![CDATA[
    protected void setVendInvoiceDeclaration_IS()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, VendInvoiceDeclaration_IS)))
        {
            return;
        }

        this.setOrderAccount();

        if (this.isFieldSet(fieldNum(PurchTable, OrderAccount)))
        {
            this.parmVendInvoiceDeclaration_IS(this.orderAccount_VendTableRecord().VendInvoiceDeclaration_IS);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendorRef</Name>
				<Source><![CDATA[
    protected void setVendorRef()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, VendorRef)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendorShipCalendarId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal protected void setVendorShipCalendarId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, ShipCalendarId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchReceivedNow</Name>
				<Source><![CDATA[
    [SysObsolete('Method is not valid, referencing a PurchLine field', false, 04\04\2023)]
    protected void setPurchReceivedNow()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchLine, PurchReceivedNow)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkerPurchPlacer</Name>
				<Source><![CDATA[
    protected void setWorkerPurchPlacer()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchTable, WorkerPurchPlacer)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Saves the record.
    /// </summary>
    protected void write()
    {
        void packExtension(AxInternalBase _extAxTable)
        {
            SysExtensionSerializerExtensionMap sysExtensionSerializerExtensionMap = _extAxTable.currentRecord();

            purchTable.SysExtensionSerializerMap::packExtensionTable(sysExtensionSerializerExtensionMap);
        }

        void saveExtension(AxPurchTableExtensions _extAxTable, Common _retrivedRecord, int axExtTableIdx)
        {
            if ((_extAxTable.parmPurchTable() == 0 && _retrivedRecord.RecId) ||
                (_extAxTable.parmPurchTable() != 0 && _retrivedRecord.recVersion != _extAxTable.currentRecord().recVersion))
            {
                this.classCacheDelete(axExtTableIdx);
            }
            else
            {
                if (_extAxTable.parmPurchTable() == 0)
                {
                    _extAxTable.parmPurchTable(this.parmRecId());
                }
                _extAxTable.save();
            }
        }

        // <GEERU>
        if (axPurchTableIdx_RU)
        {
            packExtension(this.axPurchTable_RU());
        }
        // </GEERU>
        // <GBR>
        if (axPurchTableIdx_BR)
        {
            packExtension(this.axPurchTable_BR());
        }
        // </GBR>
        if (axPurchTableIdx_W)
        {
            packExtension(this.axPurchTable_W());
        }

        super();

        // <GEERU>
        if (axPurchTableIdx_RU)
        {
            saveExtension(this.axPurchTable_RU(), purchTable.purchTable_RU(), axPurchTableIdx_RU);
        }
        // </GEERU>
        // <GBR>
        if (axPurchTableIdx_BR)
        {
            saveExtension(this.axPurchTable_BR(), purchTable.purchTable_BR(), axPurchTableIdx_BR);
        }
        // </GBR>
        if (axPurchTableIdx_W)
        {
            saveExtension(this.axPurchTable_W(), purchTable.purchTable_W(), axPurchTableIdx_W);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxPurchTable construct()
    {
        return new AxPurchTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructValidateInput</Name>
				<Source><![CDATA[
    static AxPurchTable constructValidateInput(PurchTable _purchTable)
    {
        AxPurchTable axPurchTable = AxPurchTable::newValidateInput();
        axPurchTable.purchTable(_purchTable);

        return axPurchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchTable</Name>
				<Source><![CDATA[
    public static AxPurchTable newPurchTable(PurchTable _purchTable)
    {
        AxPurchTable axPurchTable = AxPurchTable::construct();
        axPurchTable.purchTable(_purchTable);

        return axPurchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newValidateInput</Name>
				<Source><![CDATA[
    static AxPurchTable newValidateInput()
    {
        AxPurchTable axPurchTable = new AxPurchTable();
        axPurchTable.validateInput(true);
        return axPurchTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>