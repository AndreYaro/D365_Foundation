<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchPurchaseOrderDPOrderLineQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchPurchaseOrderDPOrderLineQuery</c> builds the query used to retrieve purchase order lines in the <c>PurchPurchaseOrderDP</c> class.
/// </summary>
public class PurchPurchaseOrderDPOrderLineQuery extends SysCommonCollectionQuery
{
    private QueryBuildDataSource    purchLineAllVersions;
    private QueryBuildDataSource    purchLineAllVersionInventDim;
    private QueryBuildDataSource    purchLineHistoryUpdated;
    private QueryBuildDataSource    purchLineUpdated;

    private PurchPurchaseOrderDP    purchaseOrderDP;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds data sources to the order line query.
    /// </summary>
    /// <param name = "_query">
    /// The <c>Query</c> object where data sources will be added to.
    /// </param>
    protected void addDataSources(Query _query)
    {
        this.addPurchLineAllVersions(_query);
        this.addPurchLineAllVersionsInventDim(_query);
        this.addPurchLineHistoryUpdated(_query);
        this.addPurchLineUpdated(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPurchLineAllVersions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>PurchLineAllVersions</c> view as a data source to the order line query.
    /// </summary>
    /// <param name = "_query">
    /// The order line query object.
    /// </param>
    protected void addPurchLineAllVersions(Query _query)
    {
        purchLineAllVersions = _query.addDataSource(tableNum(PurchLineAllVersions));

        purchLineAllVersions.addRange(fieldNum(PurchLineAllVersions, PurchTableVersionRecId)).value(SysQuery::value(this.parmPurchaseOrderDP().parmPurchTableAllVersions().PurchTableVersionRecId));
        purchLineAllVersions.addRange(fieldNum(PurchLineAllVersions, LineDeliveryType)).value(SysQuery::valueNot(LineDeliveryType::OrderLineWithMultipleDeliveries));

        this.addReadableDataSource(purchLineAllVersions.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLineAllVersions</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmPurchLineAllVersions()
    {
        return purchLineAllVersions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPurchLineAllVersionsInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>InventDim</c> table associated with <c>PurchLineAllVersions</c> view as a data source to the order line query.
    /// </summary>
    /// <param name = "_query">
    /// The order line query object.
    /// </param>
    protected void addPurchLineAllVersionsInventDim(Query _query)
    {
        purchLineAllVersionInventDim = this.parmPurchLineAllVersions().addDataSource(tableNum(InventDim));

        purchLineAllVersionInventDim.joinMode(JoinMode::InnerJoin);
        purchLineAllVersionInventDim.fetchMode(QueryFetchMode::One2One);

        purchLineAllVersionInventDim.relations(false);
        purchLineAllVersionInventDim.addLink(fieldNum(PurchLineAllVersions, InventDimId), fieldNum(InventDim, inventDimId), this.parmPurchLineAllVersions().name());

        this.addReadableDataSource(purchLineAllVersionInventDim.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLineAllVersionsInventDim</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmPurchLineAllVersionsInventDim()
    {
        return purchLineAllVersionInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPurchLineHistoryUpdated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>PurchLineHistory</c> table associated with <c>PurchLineAllVersions</c> view as a data source to the order line query.
    /// </summary>
    /// <param name = "_query">
    /// The order line query object.
    /// </param>
    protected void addPurchLineHistoryUpdated(Query _query)
    {
        purchLineHistoryUpdated = this.parmPurchLineAllVersions().addDataSource(tableNum(PurchLineHistory));

        purchLineHistoryUpdated.addSelectionField(fieldNum(PurchLineHistory, RecId));

        purchLineHistoryUpdated.joinMode(JoinMode::OuterJoin);
        purchLineHistoryUpdated.fetchMode(QueryFetchMode::One2One);

        purchLineHistoryUpdated.relations(false);
        purchLineHistoryUpdated.addLink(fieldNum(PurchLineAllVersions, RecId1), fieldNum(PurchLineHistory, RecId), this.parmPurchLineAllVersions().name());
        purchLineHistoryUpdated.addLink(fieldNum(PurchLineAllVersions, VersionDateTime), fieldNum(PurchLineHistory, ValidFrom), this.parmPurchLineAllVersions().name());

        this.addReadableDataSource(purchLineHistoryUpdated.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLineHistoryUpdated</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmPurchLineHistoryUpdated()
    {
        return purchLineHistoryUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPurchLineUpdated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>PurchLine</c> table associated with <c>PurchLineAllVersions</c> view as a data source to the order line query.
    /// </summary>
    /// <param name = "_query">
    /// The order line query object.
    /// </param>
    protected void addPurchLineUpdated(Query _query)
    {
        purchLineUpdated = this.parmPurchLineAllVersions().addDataSource(tablenum(PurchLine));

        purchLineUpdated.addSelectionField(fieldNum(PurchLine, RecId));

        purchLineUpdated.joinMode(JoinMode::OuterJoin);
        purchLineUpdated.fetchMode(QueryFetchMode::One2One);

        purchLineUpdated.relations(false);
        purchLineUpdated.addLink(fieldNum(PurchLineAllVersions, RecId), fieldNum(PurchLineHistory, RecId), this.parmPurchLineAllVersions().name());
        
        purchLineUpdated.addRange(fieldNum(PurchLine, IsModified)).value(SysQuery::value(NoYes::Yes));

        this.addReadableDataSource(purchLineUpdated.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLineUpdated</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmPurchLineUpdated()
    {
        return purchLineUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDataProvider</Name>
				<Source><![CDATA[
    private void initializeDataProvider(PurchPurchaseOrderDP _purchaseOrderDP)
    {
        purchaseOrderDP = _purchaseOrderDP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchaseOrderDP</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public PurchPurchaseOrderDP parmPurchaseOrderDP()
    {
        return purchaseOrderDP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCommonCollection</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public SysICommonCollection createCommonCollection()
    {
        return PurchPurchaseOrderDPOrderLineQuerySelection::newFromOrderLineQuery(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a query to retrieve order lines.
    /// </summary>
    /// <param name = "_purchaseOrderDP">
    /// A <c>PurchPurchaseOrderDP</c> object to create the query for.
    /// </param>
    /// <returns>
    /// The instantiated <c>PurchPurchaseOrderDPOrderLineQuery</c> object.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    public static PurchPurchaseOrderDPOrderLineQuery newQuery(PurchPurchaseOrderDP _purchaseOrderDP)
    {
        PurchPurchaseOrderDPOrderLineQuery query = new PurchPurchaseOrderDPOrderLineQuery();
        
        query.initializeDataProvider(_purchaseOrderDP);
        query.buildQuery();

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>