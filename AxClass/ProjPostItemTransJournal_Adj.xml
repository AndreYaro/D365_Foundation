<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPostItemTransJournal_Adj</Name>
	<SourceCode>
		<Declaration><![CDATA[
class   ProjPostItemTransJournal_Adj extends ProjPostItemTrans
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>adjustmentLedgerSalesAmount</Name>
				<Source><![CDATA[
        protected AmountCur adjustmentLedgerSalesAmount()
    {
        return this.parmAdjustmentLedgerSalesAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkEnterSalesAccrued</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the accrued sales amount has been entered and is expected to be posted.
    /// </summary>
    /// <returns>
    /// true if the accrued sales amount is nonzero and the <c>parmEnterSalesAccrued</c> method returns
    /// true; otherwise, false.
    /// </returns>
    protected boolean checkEnterSalesAccrued()
    {
        return  this.parmEnterSalesAccrued() && projTrans.transTurnover();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTransCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a transaction posting.
    /// </summary>
    /// <remarks>
    /// This method is called by the <c>postTrans</c> method before the
    /// <c>ledgerTransActionsCreate</c>method when the <c>parmCreateTrans</c> method is true.
    /// </remarks>
    public void projTransCreate()
    {
        ProjItemTrans       locProjItemTrans;
        ProjItemTransSale   locProjItemTransSale;

        locProjItemTrans.clear();

        if (this.parmAdjustBuffer())
        {
            locProjItemTrans.ProjId            = this.parmAdjustBuffer().ProjId;
            locProjItemTrans.CategoryId        = this.parmAdjustBuffer().CategoryId;
            locProjItemTrans.TaxItemGroupId    = this.parmAdjustBuffer().TaxItemGroupId;
            locProjItemTrans.TaxGroupId        = this.parmAdjustBuffer().TaxgroupId;
            locProjItemTrans.Txt               = this.parmAdjustBuffer().Txt;
            locProjItemTrans.LinePropertyId    = this.parmAdjustBuffer().LinePropertyId;
            locProjItemTrans.CurrencyId        = this.parmAdjustBuffer().CurrencyId;
            locProjItemTrans.DefaultDimension  = this.parmAdjustBuffer().DefaultDimension;

            locProjItemTrans.Qty               = projItemTrans.Qty;
            locProjItemTrans.InventTransId     = projItemTrans.InventTransId;
            locProjItemTrans.ProjAdjustRefId   = projItemTrans.ProjAdjustRefId;
            locProjItemTrans.TransactionOrigin = projItemTrans.TransactionOrigin;
            locProjItemTrans.ItemId            = projItemTrans.ItemId;
            locProjItemTrans.TransDate         = projItemTrans.TransDate;
            locProjItemTrans.InventDimId       = projItemTrans.InventDimId;
        }
        else
        {
            locProjItemTrans.ProjId               = projItemTrans.ProjId;
            locProjItemTrans.CategoryId           = projItemTrans.CategoryId;
            locProjItemTrans.LinePropertyId       = projItemTrans.LinePropertyId;
            locProjItemTrans.TransDate            = projItemTrans.TransDate;
            locProjItemTrans.Txt                  = projItemTrans.Txt;

            locProjItemTrans.Qty                  = -projItemTrans.Qty;

            locProjItemTrans.DefaultDimension     = projItemTrans.DefaultDimension;
            locProjItemTrans.CurrencyId           = projItemTrans.CurrencyId;
            locProjItemTrans.TaxItemGroupId       = projItemTrans.TaxItemGroupId;
            locProjItemTrans.TaxGroupId           = projItemTrans.TaxGroupId;

            locProjItemTrans.ItemId               = projItemTrans.ItemId;
            locProjItemTrans.TransactionOrigin    = projItemTrans.TransactionOrigin;
            locProjItemTrans.SalesUnit            = projItemTrans.SalesUnit;

            locProjItemTrans.InventDimId          = projItemTrans.InventDimId;
        }

        if (! locProjItemTrans.ProjTransId)
        {
            locProjItemTrans.ProjTransId  = ProjParameters::newTransId();
        }

        if (! locProjItemTrans.validateWrite())
        {
            throw error("@SYS21628");
        }

        locProjItemTrans.insert();

        locProjItemTransSale.ProjTransId = locProjItemTrans.ProjTransId;
        if (this.parmadjustBufferSale())
        {
            locProjItemTransSale.SalesPrice        = this.parmadjustBufferSale().SalesPrice;
            locProjItemTransSale.LedgerSalesPosted = this.checkEnterSalesAccrued();
            locProjItemTransSale.FundingSource     = this.parmadjustBufferSale().FundingSource;
            locProjItemTransSale.LineAmount        = PriceDisc::price2Amount(locProjItemTransSale.SalesPrice,
                                                 locProjItemTrans.inventTable().salesPriceUnit(),
                                                 0,
                                                 locProjItemTrans.Qty,
                                                 0,
                                                 0,
                                                 0,
                                                 locProjItemTrans.CurrencyId,
                                                 0,
                                                 false);
            if (this.checkEnterSalesAccrued() && ProjFundingSource::isExternalFunding(locProjItemTransSale.FundingSource))
            {
                locProjItemTransSale.LedgerSalesPosted = true;
                locProjItemTransSale.LedgerSalesAmount = projTrans.transTurnoverMST();
            }
        }
        else
        {
            locProjItemTransSale.SalesPrice           = projItemTrans.salesPrice();
            locProjItemTransSale.LineAmount           = -projItemTrans.lineAmount();
            locProjItemTransSale.TransStatus          = ProjTransStatus::Adjusted;
        }

        if (! locProjItemTransSale.validateWrite())
        {
            throw error("@SYS21628");
        }

        locProjItemTransSale.insert();

        projTrans   = ProjTrans::newProjItemTrans(locProjItemTrans);

        if (this.parmAdjustBuffer())
        {
            this.parmTransIdCost(locProjItemTrans.ProjTransId);
            this.parmTransIdSales(locProjItemTrans.ProjTransId);
        }
        else
        {
            this.parmTransIdCost(projItemTrans.ProjTransId);
            this.parmTransIdSales(projItemTrans.ProjTransId);
        }

        if (ProjPost::checkCreateProjCost(projItemTrans.ItemId,projItemTrans.ProjId))
        {
            this.updateProjItemTransCost(projItemTrans, '');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmountMST</Name>
				<Source><![CDATA[
        protected AmountMST salesAmountMST()
    {
        return this.parmSalesAmountMST();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>