<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchFinalizeInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class PurchFinalizeInstrumentationActivities
{
    private const str ActivityNamePrefix = 'PurchFinalize.';
    private const str TaskRun = 'TaskRun';
    private const str ServiceRun = 'ServiceRun';
    private const str FinalizeHeader = 'FinalizeHeader';
    private const str FinalizeLine = 'FinalizeLine';
    private const str CanFinalizeHeader = 'CanFinalizeHeader';
    private const str CanFinalizeLine = 'CanFinalizeLine';
    private const str DoTransitionFinalize = 'DoTransitionFinalize';

    private const str IsInvoicedProperty = 'IsInvoiced';
    private const str EntireOrderProperty = 'EntireOrder';
    private const str CheckAccountDateProperty = 'CheckAccountDate';
    private const str CheckAdvanceRemainingProperty = 'CheckAdvanceRemaining';
    private const str IsCanceledProperty = 'IsCanceled';
    private const str IsDeletedProperty = 'IsDeleted';
    private const str IsFinalizedProperty = 'IsFinalized';
    private const str CheckHeaderProperty = 'CheckHeader';
    private const str DocumentStateProperty = 'DocumentState';
    private const str PurchStatusProperty = 'PurchStatus';
    private const str ClosingDateProperty = 'ClosingDate';
    private const str FinalizeHeaderProperty = 'FinalizeHeader';
    private const str OnlyCompletedLineProperty = 'OnlyCompletedLine';
    private const str OnlyEntireOrderProperty = 'OnlyEntireOrder';
    private const str AccountingStatusProperty = 'AccountingStatusProperty';

    private PurchInstrumentationLogger logger;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(PurchInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static PurchFinalizeInstrumentationActivities newFromLogger(PurchInstrumentationLogger _logger)
    {
        return new PurchFinalizeInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taskRun</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext taskRun(
        PurchTable  _purchTable,
        boolean     _entireOrder,
        boolean     _checkAccountDate,
        boolean     _checkAdvanceRemaining)
    {
        SysInstrumentationActivityContext currentActivityContext = logger.activityContext(ActivityNamePrefix + TaskRun);

        currentActivityContext.addCustomProperty(tableStr(PurchTable), int642Str(_purchTable.RecId));
        currentActivityContext.addCustomProperty(EntireOrderProperty, int2Str(_entireOrder));
        currentActivityContext.addCustomProperty(CheckAccountDateProperty, int2Str(_checkAccountDate));
        currentActivityContext.addCustomProperty(CheckAdvanceRemainingProperty, int2Str(_checkAdvanceRemaining));

        return currentActivityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>serviceRun</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext serviceRun(PurchFinalizeContract _dataContract)
    {
        SysInstrumentationActivityContext currentActivityContext = logger.activityContext(ActivityNamePrefix + ServiceRun);

        currentActivityContext.addCustomProperty(ClosingDateProperty, date2Str(_dataContract.parmClosingDate(), 321, 2, 0, 2, 0, 2, DateFlags::None));
        currentActivityContext.addCustomProperty(FinalizeHeaderProperty, int2Str(_dataContract.parmFinalizeHeader()));
        currentActivityContext.addCustomProperty(OnlyCompletedLineProperty, int2Str(_dataContract.parmOnlyCompletedLine()));
        currentActivityContext.addCustomProperty(OnlyEntireOrderProperty, int2Str(_dataContract.parmOnlyEntireOrder()));

        return currentActivityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>finalizeHeader</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext finalizeHeader(PurchTable _purchTable)
    {
        SysInstrumentationActivityContext currentActivityContext = logger.activityContext(ActivityNamePrefix + FinalizeHeader);

        currentActivityContext.addCustomProperty(tableStr(PurchTable), int642Str(_purchTable.RecId));

        return currentActivityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>finalizeLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext finalizeLine(PurchLine _purchLine)
    {
        SysInstrumentationActivityContext currentActivityContext = logger.activityContext(ActivityNamePrefix + FinalizeLine);

        currentActivityContext.addCustomProperty(tableStr(PurchLine), int642Str(_purchLine.RecId));
        currentActivityContext.addCustomProperty(IsDeletedProperty, int2Str(_purchLine.IsDeleted));
        currentActivityContext.addCustomProperty(IsFinalizedProperty, int2Str(_purchLine.IsFinalized));
        currentActivityContext.addCustomProperty(PurchStatusProperty, enum2Symbol(enumNum(PurchStatus), _purchLine.PurchStatus));

        return currentActivityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canFinalizeHeader</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext canFinalizeHeader(
        PurchTable   _purchTable,
        boolean     _isInvoiced,
        boolean     _isCanceled)
    {
        SysInstrumentationActivityContext currentActivityContext = logger.activityContext(ActivityNamePrefix + CanFinalizeHeader);

        currentActivityContext.addCustomProperty(tableStr(PurchTable), int642Str(_purchTable.RecId));
        currentActivityContext.addCustomProperty(IsInvoicedProperty, int2Str(_isInvoiced));
        currentActivityContext.addCustomProperty(IsCanceledProperty, int2Str(_isCanceled));
        currentActivityContext.addCustomProperty(DocumentStateProperty, enum2Symbol(enumNum(VersioningDocumentState), _purchTable.DocumentState));

        return currentActivityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canFinalizeLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext canFinalizeLine(
        PurchLine   _purchLine,
        boolean     _isInvoiced,
        boolean     _isCanceled,
        boolean     _checkHeader)
    {
        SysInstrumentationActivityContext currentActivityContext = logger.activityContext(ActivityNamePrefix + CanFinalizeLine);

        currentActivityContext.addCustomProperty(tableStr(PurchLine), int642Str(_purchLine.RecId));
        currentActivityContext.addCustomProperty(IsInvoicedProperty, int2Str(_isInvoiced));
        currentActivityContext.addCustomProperty(IsCanceledProperty, int2Str(_isCanceled));
        currentActivityContext.addCustomProperty(CheckHeaderProperty, int2Str(_checkHeader));
        currentActivityContext.addCustomProperty(IsDeletedProperty, int2Str(_purchLine.IsDeleted));
        currentActivityContext.addCustomProperty(IsFinalizedProperty, int2Str(_purchLine.IsFinalized));
        currentActivityContext.addCustomProperty(DocumentStateProperty, enum2Symbol(enumNum(VersioningDocumentState), _purchLine.purchTable().DocumentState));

        return currentActivityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doTransitionFinalize</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext doTransitionFinalize(
        PurchLine           _purchLine,
        SourceDocumentLine  _sourceDocumentLine)
    {
        SysInstrumentationActivityContext currentActivityContext = logger.activityContext(ActivityNamePrefix + DoTransitionFinalize);

        currentActivityContext.addCustomProperty(tableStr(PurchLine), int642Str(_purchLine.RecId));
        currentActivityContext.addCustomProperty(IsDeletedProperty, int2Str(_purchLine.IsDeleted));
        currentActivityContext.addCustomProperty(IsFinalizedProperty, int2Str(_purchLine.IsFinalized));
        currentActivityContext.addCustomProperty(PurchStatusProperty, enum2Symbol(enumNum(PurchStatus), _purchLine.PurchStatus));
        currentActivityContext.addCustomProperty(tableStr(SourceDocumentLine), int642Str(_sourceDocumentLine.RecId));
        currentActivityContext.addCustomProperty(AccountingStatusProperty, enum2Symbol(enumNum(SourceDocumentLineAccountingStatus), _sourceDocumentLine.AccountingStatus));
        currentActivityContext.addCustomProperty(DocumentStateProperty, enum2Symbol(enumNum(VersioningDocumentState), _purchLine.purchTable().DocumentState));
                                        
        return currentActivityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>