<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumDateDim</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventSumDateDim  extends InventSumDate
{
    InventDim       inventDimCriteria;
    InventDimParm   inventDimParm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventDim</Name>
				<Source><![CDATA[
    InventDim parmInventDim(InventDim _inventDimCriteria = inventDimCriteria)
    {
        inventDimCriteria = _inventDimCriteria;
        return inventDimCriteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimParm</Name>
				<Source><![CDATA[
    InventDimParm parmInventDimParm(InventDimParm _inventDimParm = inventDimParm)
    {
        inventDimParm = _inventDimParm;
        return inventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventSum</Name>
				<Source><![CDATA[
    protected void selectInventSum()
    {
        this.addInventSum(InventSum::findSumQty(itemId,inventDimCriteria,inventDimParm));
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransPostingFinancial</Name>
				<Source><![CDATA[
    protected void selectInventTransPostingFinancial()
    {
        InventTransPosting  inventTransPostingFinancial;
        InventTrans         inventTrans;
        InventDim           inventDim;

        while select TableId
            from inventTransPostingFinancial
            where  inventTransPostingFinancial.ItemId                   == itemId
                && inventTransPostingFinancial.InventTransPostingType   == InventTransPostingType::Financial
                && inventTransPostingFinancial.TransDate                > perDate
            join sum(Qty), sum(PdsCWQty)
            from inventTrans
            group by StatusIssue, StatusReceipt, PackingSlipReturned
            where inventTrans.Voucher                       == inventTransPostingFinancial.Voucher
                && inventTrans.DateFinancial                == inventTransPostingFinancial.TransDate
                && inventTrans.InventTransOrigin            == inventTransPostingFinancial.InventTransOrigin
        #inventDimExistsJoin(inventTrans.InventDimId, inventDim, inventDimCriteria, inventDimParm)
        {
            this.addInventTransFinancial(inventTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventTransPostingPhysical</Name>
				<Source><![CDATA[
    protected void selectInventTransPostingPhysical()
    {
        InventTrans                 inventTrans;
        InventTransPosting          inventTransPostingPhysical;
        InventDim                   inventDim;

        while select TableId
            from inventTransPostingPhysical
            where  inventTransPostingPhysical.ItemId                    == itemId
                && inventTransPostingPhysical.InventTransPostingType    == InventTransPostingType::Physical
                && inventTransPostingPhysical.TransDate                 > perDate
            join sum(Qty), sum(PdsCWQty) from inventTrans
            group by StatusIssue, StatusReceipt
            where  inventTrans.VoucherPhysical              == inventTransPostingPhysical.Voucher
                && inventTrans.DatePhysical                 == inventTransPostingPhysical.TransDate
                && inventTrans.InventTransOrigin            == inventTransPostingPhysical.InventTransOrigin
        #inventDimExistsJoin(inventTrans.InventDimId, inventDim, InventDimCriteria, inventDimParm)
        {
            this.addInventTransPhysical(inventTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
    static InventSumDateDim newParameters(
        TransDate       _perDate,
        ItemId          _itemId,
        InventDim       _inventDimCriteria,
        InventDimParm   _inventDimParm
        )
    {
        InventSumDateDim inventSumDateDim = new InventSumDateDim();

        inventSumDateDim.parmItemId(_itemId);
        inventSumDateDim.parmPerDate(_perDate);
        inventSumDateDim.parmInventDim(_inventDimCriteria);
        inventSumDateDim.parmInventDimParm(_inventDimParm);

        inventSumDateDim.init();

        return inventSumDateDim;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>