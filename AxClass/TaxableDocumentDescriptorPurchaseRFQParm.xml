<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxableDocumentDescriptorPurchaseRFQParm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Represents the tax document bundler for Purchase request for quotation.
/// </summary>
[TaxableDocumentDescriptorAttribute("Purchase request for quotation accept of entry", "PurchaseRFQParm")]
public class TaxableDocumentDescriptorPurchaseRFQParm extends TaxableDocumentDescriptorBase
    implements TaxableDocumentTypeDefinitionPurchaseRFQAccept
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDataProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data provider.
    /// </summary>
    /// <returns>
    /// The data provider instance.
    /// </returns>
    public ITaxableDocumentDataProvider getDataProvider()
    {
        return new TaxableDocPurchRFQDataProvider(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDistributionSide</Name>
				<Source><![CDATA[
    public TaxAccountingPostingProfileDistributionSide getDistributionSide()
    {
        return TaxAccountingPostingProfileDistributionSide::Debit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceTaxableDocumentType</Name>
				<Source><![CDATA[
    public ClassName getSourceTaxableDocumentType()
    {
        return classStr(TaxableDocumentTypeDefinitionPurchaseRFQAccept);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxableDocumentRootTableId</Name>
				<Source><![CDATA[
    public TableId getTaxableDocumentRootTableId()
    {
        return tableNum(PurchRFQParmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxAdjustable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is tax adjustable for this transaction
    /// </summary>
    /// <returns>
    /// True if tax is adjustable; otherwise, false.
    /// </returns>
    public boolean isTaxAdjustable()
    {
        PurchParmTable purchParmTable = rootTable as PurchParmTable;
        if ((purchParmTable.Ordering == DocumentStatus::PackingSlip && InventParameters::find().PostPhysicalTax)
            || purchParmTable.Ordering == DocumentStatus::BillOfEntry_IN)
        {
            return true;
        }
        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>