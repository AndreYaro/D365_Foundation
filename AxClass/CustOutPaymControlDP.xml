<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustOutPaymControlDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustOutPaymcontrolDP</c> class is the report data provider class for the
///    <c>CustOutPaymControl</c> SQL Server Reporting Services report.
/// </summary>
/// <remarks>
///    This is the Report Data Provider class for the <c>CustOutPaymControl</c> SSRS report.
/// </remarks>
[
    SRSReportQueryAttribute(QueryStr(CustOutPaymControl)),
    SRSReportParameterAttribute(classStr(CustOutPaymControlContract))
]
class CustOutPaymControlDP extends SRSReportDataProviderBase
{
    CustVendOutTmp              custVendOutTmp;
    TmpAccountSum               tmpAccountSum;
    RecId                       recIdTableDataSet;
    RecId                       recIdSummaryDataSet;
    Query                       query;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAccountSummaryDS</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the data from the <c>TmpAccountSum</c> table.
    /// </summary>
    /// <returns>
    ///    The data from the <c>TmpAccountSum</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute('TmpAccountSumDS')
    ]
    public TmpAccountSum getAccountSummaryDS()
    {
        select * from tmpAccountSum;
        return tmpAccountSum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustOutPaymControlDS</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the records in the <c>CustVendOutTmp</c> table.
    /// </summary>
    /// <returns>
    ///    The data from the <c>CustVendOutTmp</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute('CustOutPaymControlDS')
    ]
    public CustVendOutTmp getCustOutPaymControlDS()
    {
        select * from custVendOutTmp;
        return custVendOutTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the SSRS report business logic.
    /// </summary>
    /// <remarks>
    ///    Provides the ability to write the report business logic.This method will be called by SSRS at
    ///    runtime.The method should compute data and populate the data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        SRSReportRunPermission permission;
        QueryRun queryRun;
        CustOutPaymControlContract contract;

        contract = this.parmDataContract() as CustOutPaymControlContract;
        // retrieve a handle to the base query
        query = new Query(this.parmQuery());

        // execute the base Query to establish session access permissions
        queryRun = new QueryRun(query);

        // retrieve the session parameters
        recIdTableDataSet = contract.parmTableDataRecId();
        recIdSummaryDataSet = contract.parmSummaryDataRecId();

        // temporarily enable access to data cache
        permission = new SRSReportRunPermission();
        permission.assert();

        // fill the temp table objects with data returned from SRSDataCarrier
        custVendOutTmp = SRSTmpTblMarshaller::getTmpTbl(recIdTableDataSet);
        tmpAccountSum = SRSTmpTblMarshaller::getTmpTbl(recIdSummaryDataSet);

        // delete data
        //SRSTmpTblMarshaller::deleteTmpTblData(recIdTableDataSet);
        //SRSTmpTblMarshaller::deleteTmpTblData(recIdSummaryDataSet);

        // revert code access permissions
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
