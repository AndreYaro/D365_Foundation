<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationCaseActivitiesProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Plug in for case activities
/// </summary>
[ExportMetadataAttribute('CaseIActivities', tableStr(SalesQuotationTable)), ExportAttribute('Dynamics.AX.Application.CaseIActivities')]
class SalesQuotationCaseActivitiesProvider implements CaseIActivities
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCommon</Name>
				<Source><![CDATA[
    public smmActivityParentType initFromCommon(smmActivities _activities, Common _table)
    {
        SalesQuotationTable salesQuotationTable = _table;

        this.initFromQuotationParameters(_activities, salesQuotationTable);

        if (salesQuotationTable.QuotationType == QuotationType::Project)
        {
            _activities.Purpose = salesQuotationTable.QuotationName;
        }
        
        return smmActivityParentType::Quotation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parentRecId</Name>
				<Source><![CDATA[
    public RefRecId parentRecId(Common _table)
    {
        return _table.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCommonUsingTemplate</Name>
				<Source><![CDATA[
    public smmActivityParentType initFromCommonUsingTemplate(smmActivities _activities, Common _table, smmActivities _templateActivity)
    {
        return smmActivityParentType::Quotation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateExternalMemo</Name>
				<Source><![CDATA[
    public smmOutlookMemo updateExternalMemo(RefRecId _parentLink)
    {
        SalesQuotationTable salesQuotationTable = SalesQuotationTable::findRec(_parentLink);
        str tail;

        const str colonspace = ': ';
        const str colon = ':';
        const str newline = '\n';

        tail += newline + newline + "@SYS5864" + colonspace + salesQuotationTable.QuotationId;

        return tail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldActivityBeCreated</Name>
				<Source><![CDATA[
    public CaseYesNoPrompt shouldActivityBeCreated(Common _table, boolean _isBatch)
    {
        if (_isBatch)
        {
            return (smmParametersTable::find().RunBaseBatchCreateActivity == smmRunBaseBatchCreateActivity::Yes) ? (CaseYesNoPrompt::Yes) : (CaseYesNoPrompt::No);
        }
        else
        {
            return smmActivities::shouldActivityBeCreatedGeneric(smmParametersTable::find().QuotationCreateActivity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromQuotationParameters</Name>
				<Source><![CDATA[
    private void initFromQuotationParameters(smmActivities _activities, SalesQuotationTable _quotation)
    {
        smmParametersTable  parameters = smmParametersTable::find();

        _activities.initValue(parameters.QuotationActivityCategory);

        // Get default values from CRM parameters
        _activities.PhaseId                = parameters.QuotationActivityPhaseId;
        _activities.TypeId                 = parameters.QuotationActivityTypeId;
        _activities.Purpose                = parameters.QuotationActivityPurpose;

        // Copy values from quotation to activity
        _activities.setStartDate(_quotation.QuotationFollowUpDate);
        _activities.setEndDate(_quotation.QuotationExpiryDate);
        _activities.setReminderDate(_quotation.QuotationFollowUpDate);

        if (_quotation.WorkerSalesResponsible)
        {
            _activities.ResponsibleWorker    = _quotation.WorkerSalesResponsible;
        }
        else
        {
            _activities.ResponsibleWorker    = _quotation.WorkerSalesTaker;
        }

        _activities.initFromWorkerTable(_activities.ResponsibleWorker);

        if (_activities.ReminderMinutes > 0)
        {
            _activities.ReminderActive     = NoYes::Yes;
        }
        else
        {
            _activities.ReminderActive     = NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParentReferenceFieldNum</Name>
				<Source><![CDATA[
    public FieldId getParentReferenceFieldNum(TableId _tableId, smmActivityParentRefTableId _parentTableId)
    {
        FieldId fieldId;

        switch (_parentTableId)
        {
            case tableNum(smmBusRelTable) :
                fieldId = fieldNum(SalesQuotationTable,BusRelAccount);
                break;

            case tableNum(CustTable) :
                fieldId = fieldNum(SalesQuotationTable,CustAccount);
                break;

            case tableNum(ProjTable) :
                fieldId = fieldNum(SalesQuotationTable,ProjIdRef);
                break;

            case tableNum(ContactPerson) :
                fieldId = fieldNum(SalesQuotationTable,ContactPersonId);
                break;

            case tableNum(SalesTable) :
                fieldId = fieldNum(SalesQuotationTable,SalesIdRef);
                break;

            case tableNum(smmOpportunityTable) :
                fieldId = fieldNum(SalesQuotationTable,OpportunityId);
                break;
        }
        return fieldId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>