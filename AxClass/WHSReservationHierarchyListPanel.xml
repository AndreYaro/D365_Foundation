<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReservationHierarchyListPanel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSReservationHierarchyListPanel</c> class is to handle list panels used for creation of reservation hierarchies.
/// </summary>
public class WHSReservationHierarchyListPanel extends SysListPanel
{
    List  hierarchyList;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the data from the argument.
    /// </summary>
    /// <param name="_data">
    /// A container with the data to add.
    /// </param>
    public void addData(container _data)
    {
        int i, cLen;

        cLen = conlen(_data);

        for (i=1; i <= cLen; i++)
        {
            hierarchyList.addEnd(conpeek(_data,i));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a container which holds two containers, one with data for the left list panel and one with data for the right list panel.
    /// </summary>
    /// <returns>
    /// A container which holds two containers, one with data for the left list panel and one with data for the right list panel.
    /// </returns>
    /// <remarks>
    /// The data for the right panel is the empty container.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected container buildData()
    {
        container       selectedData, availableData;

        ListEnumerator le = hierarchyList.getEnumerator();

        while (le.moveNext())
        {
            FieldId fieldId = le.current();

            selectedData += [[fieldId, fieldId2pname(tableNum(InventDim),fieldId),fieldId2pname(tableNum(InventDim),fieldId)]];
        }

        availableData = conNull();

        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildListFromLeftView</Name>
				<Source><![CDATA[
    private List buildListFromLeftView()
    {
        Counter         i, countOfItemsLeft;

        List listLeftView = new List(Types::Integer);
        countOfItemsLeft = this.parmViewSelected().getCount();

        for (i = 0; i < countOfItemsLeft; i++)
        {
            FormListItem formListItem = this.parmViewSelected().getItem(i);
            listLeftView.addEnd(formListItem.data());
        }

        return listLeftView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a container which holds two containers, one with data for the left list panel and one with data for the right list panel.
    /// </summary>
    /// <returns>
    /// A container which holds two containers, one with data for the left list panel and one with data for the right list panel.
    /// </returns>
    /// <remarks>
    /// The data for the right panel is the empty container.
    /// </remarks>
    public container getData()
    {
        return this.buildData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHierarchyListOfFieldIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a list that represents the reservation hierarchy.
    /// </summary>
    /// <returns>
    /// A list that represents the reservation hierarchy.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List getHierarchyListOfFieldIds()
    {
        return this.buildListFromLeftView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHierarchyList</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List  parmHierarchyList(List _hierarchyList = hierarchyList)
    {
        hierarchyList = _hierarchyList;

        return hierarchyList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes elements from the hierarchy based on the id's in the container.
    /// </summary>
    /// <param name="_data">
    /// A container with the Id's of the elements that should be removed.
    /// </param>
    public void removeData(container _data)
    {
        int             i;

        int cLen = conLen(_data);

        if (cLen == 0)
        {
            return;
        }

        Set  setOfRemovedids  = new Set(Types::Integer);
        List newHierarchyList = new List(Types::Integer);

        //build a set so we can lookup the deleted ones
        for (i=cLen;i;i--)
        {
            setOfRemovedids.add(conPeek(_data,i));
        }

        ListEnumerator le = hierarchyList.getEnumerator();

        //determine what should be removed from the hierarchy
        while (le.moveNext())
        {
            FieldId fieldId = le.current();

            //should still be in list
            if (!setOfRemovedids.in(fieldId))
            {
                newHierarchyList.addEnd(fieldId);
            }
        }

        hierarchyList = newHierarchyList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sortMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the sorting for the list panels.
    /// </summary>
    /// <returns>
    /// FormListSort::NoSort since no sorting should be done by the controls since the data is already sorted.
    /// </returns>
    protected FormListSort sortMethod()
    {
        return FormListSort::NoSort;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static WHSReservationHierarchyListPanel construct()
    {
        return new WHSReservationHierarchyListPanel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of the <c>WHSReservationHierarchyListPanel</c> class.
    /// </summary>
    /// <param name="_formRun">
    /// A formrun that should have the list panels added.
    /// </param>
    /// <param name="_parentId">
    /// Id of the parent element.
    /// </param>
    /// <param name="_captionSelected">
    /// The selected side caption.
    /// </param>
    /// <param name="_captionAvailable">
    /// The available side caption.
    /// </param>
    /// <param name="_validateMethodName">
    /// The name of the method on the form that should be called when items are added or removed.
    /// </param>
    /// <param name="_hierarchyList">
    /// A list of the hierarchy that will be used to populate the left panel.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WHSReservationHierarchyListPanel</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static WHSReservationHierarchyListPanel newFromForm(
        FormRun     _formRun,
        int         _parentId,
        Caption     _captionSelected,
        Caption     _captionAvailable,
        MethodName  _validateMethodName,
        List        _hierarchyList)
    {
        WHSReservationHierarchyListPanel panel = WHSReservationHierarchyListPanel::construct();

        panel.parmFormRun(_formRun);
        panel.parmParentId(_parentId);
        panel.parmCaptionAvailable(_captionAvailable);
        panel.parmCaptionSelected(_captionSelected);
        panel.parmHasUpDownButton(true);
        panel.parmUseImageListOverlay(false);
        panel.parmValidateMethod(_validateMethodName);
        panel.parmHierarchyList(_hierarchyList);
        panel.build();
        return panel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
