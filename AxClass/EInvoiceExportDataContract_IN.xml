<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceExportDataContract_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceExportDataContract_IN</c> is contract class to export E-Invoices.
/// </summary>
[DataContract]
public class EInvoiceExportDataContract_IN implements SysOperationValidatable
{
    private Query query;
    private Filename fileName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFileName</Name>
				<Source><![CDATA[
    [DataMember]
    public Filename parmFileName(Filename _fileName = fileName)
    {
        fileName = _fileName;
        return fileName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [DataMember]
    public Query parmQuery(Query _query = query)
    {
        query = _query;
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an initial query. The method is called from the controller class.
    /// </summary>
    public void initQuery()
    {
        query = this.initDefaultQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a query with default ranges.
    /// </summary>
    /// <returns>The default query.</returns>
    protected Query initDefaultQuery()
    {
        Query defaultQuery = new Query();

        QueryBuildDataSource qbdsEInvoice = defaultQuery.addDataSource(tableNum(EInvoice_IN));
        qbdsEInvoice.addRange(fieldNum(EInvoice_IN, Status)).value(SysQuery::valueNot(int2Str(enum2int(EInvoiceStatus_IT::SendOK))));

        return defaultQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean isValid = true;

        if (!EInvoiceParameters_IT::find().ERExportFormatMapping)
        {
            isValid = checkFailed("@Tax_INOnlineInvoicing:ExportFormatIsNotSelected");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>