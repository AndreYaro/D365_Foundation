<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransGlobalInitializerDataCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxTransGlobalInitializerDataCache</c> class caches source table information
/// linked to the current <c>TaxTrans</c> table buffer.
/// </summary>
internal class TaxTransGlobalInitializerDataCache
{
    private static Common sourceLineTable;
    private static Common sourceHeaderTable;

    private RefRecId sourceLineTableRecId;
    private RefTableId sourceLineTableId;
    private RefTableId headingTableId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TaxTransGlobalInitializerDataCache construct()
    {
        return new TaxTransGlobalInitializerDataCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceHeaderTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the source header table linked to the current <c>TaxTrans</c> table buffer.
    /// </summary>
    /// <returns>The source header table.</returns>
    public Common getSourceHeaderTable()
    {
        if (!sourceLineTableRecId || !sourceLineTableId || !headingTableId)
        {
            sourceHeaderTable.clear();

            return sourceHeaderTable;
        }

        Common sourceLineTableLocal = this.getSourceLineTable();

        switch (headingTableId)
        {
            case tableNum(ProjInvoiceJour):
                ProjInvoiceId projInvoiceId;
                TransDate invoiceDate;

                switch (sourceLineTableId)
                {
                    case tableNum(ProjInvoiceItem):
                        ProjInvoiceItem projInvoiceItemByRecId = sourceLineTableLocal as ProjInvoiceItem;

                        projInvoiceId = projInvoiceItemByRecId.ProjInvoiceId;
                        invoiceDate = projInvoiceItemByRecId.InvoiceDate;

                        break;
                    case tableNum(ProjInvoiceEmpl):
                        ProjInvoiceEmpl projInvoiceEmplByRecId = sourceLineTableLocal as ProjInvoiceEmpl;

                        projInvoiceId = projInvoiceEmplByRecId.ProjInvoiceId;
                        invoiceDate = projInvoiceEmplByRecId.InvoiceDate;

                        break;
                    case tableNum(ProjInvoiceCost):
                        ProjInvoiceCost projInvoiceCostByRecId = sourceLineTableLocal as ProjInvoiceCost;

                        projInvoiceId = projInvoiceCostByRecId.ProjInvoiceId;
                        invoiceDate = projInvoiceCostByRecId.InvoiceDate;

                        break;
                    case tableNum(ProjInvoiceRevenue):
                        ProjInvoiceRevenue projInvoiceRevenueByRecId = sourceLineTableLocal as ProjInvoiceRevenue;

                        projInvoiceId = projInvoiceRevenueByRecId.ProjInvoiceId;
                        invoiceDate = projInvoiceRevenueByRecId.InvoiceDate;

                        break;
                    case tableNum(ProjInvoiceOnAcc):
                        ProjInvoiceOnAcc projInvoiceOnAccByRecId = sourceLineTableLocal as ProjInvoiceOnAcc;

                        projInvoiceId = projInvoiceOnAccByRecId.ProjInvoiceId;
                        invoiceDate = projInvoiceOnAccByRecId.InvoiceDate;

                        break;
                }

                sourceHeaderTable = this.getProjInvoiceJourByInvoiceIdDate(projInvoiceId, invoiceDate);

                break;
            case tableNum(ProjProposalJour):
                ProjProposalId projProposalId;

                switch (sourceLineTableId)
                {
                    case tableNum(ProjProposalItem):
                        ProjProposalItem projProposalItemByRecId = sourceLineTableLocal as ProjProposalItem;
                        projProposalId = projProposalItemByRecId.ProposalId;

                        break;
                    case tableNum(ProjProposalEmpl):
                        ProjProposalEmpl projProposalEmplByRecId = sourceLineTableLocal as ProjProposalEmpl;
                        projProposalId = projProposalEmplByRecId.ProposalId;

                        break;
                    case tableNum(ProjProposalCost):
                        ProjProposalCost projProposalCostByRecId = sourceLineTableLocal as ProjProposalCost;
                        projProposalId = projProposalCostByRecId.ProposalId;

                        break;
                    case tableNum(ProjProposalRevenue):
                        ProjProposalRevenue projProposalRevenueByRecId = sourceLineTableLocal as ProjProposalRevenue;
                        projProposalId = projProposalRevenueByRecId.ProposalId;

                        break;
                    case tableNum(ProjProposalOnAcc):
                        ProjProposalOnAcc projProposalOnAccByRecId = sourceLineTableLocal as ProjProposalOnAcc;
                        projProposalId = projProposalOnAccByRecId.ProposalId;

                        break;
                }

                sourceHeaderTable = this.getProjProposalJourByProposalId(projProposalId);

                break;
            case tableNum(InventTransferTable):
                InventTransferId transeferId;
                if (sourceLineTableId == tableNum(InventTransferJourLine))
                {
                    InventTransferJourLine inventTransferJourLineByRecId = sourceLineTableLocal as InventTransferJourLine;
                    transeferId = inventTransferJourLineByRecId.TransferId;
                }
                else if (sourceLineTableId == tableNum(InventTransferLine))
                {
                    InventTransferLine inventTransferJourLineByRecId = sourceLineTableLocal as InventTransferLine;
                    transeferId = inventTransferJourLineByRecId.TransferId;
                }

                sourceHeaderTable = this.getInventTransferTableByTransferId(transeferId);

                break;
            case tableNum(CustInvoiceJour):
                if (sourceLineTableId == tableNum(CustTrans))
                {
                    CustTrans custTransBySourceRecId = sourceLineTableLocal as CustTrans;
                    sourceHeaderTable = this.getCustInvoiceJourBySourceTrans(
                        custTransBySourceRecId.Invoice,
                        custTransBySourceRecId.TransDate,
                        custTransBySourceRecId.AccountNum,
                        custTransBySourceRecId.Voucher);
                }
                else if (sourceLineTableId == tableNum(CustInvoiceJour))
                {
                    sourceHeaderTable = sourceLineTableLocal;
                }

                break;
            case tableNum(VendInvoiceJour):
                if (sourceLineTableId == tableNum(VendTrans))
                {
                    VendTrans vendTransBySourceRecId = sourceLineTableLocal as VendTrans;
                    sourceHeaderTable = this.getVendInvoiceJourWBySourceTrans(
                        vendTransBySourceRecId.Invoice,
                        vendTransBySourceRecId.TransDate,
                        vendTransBySourceRecId.AccountNum,
                        vendTransBySourceRecId.Voucher);
                }
                else if (sourceLineTableId == tableNum(VendInvoiceJour))
                {
                    sourceHeaderTable = sourceLineTableLocal;
                }

                break;
            case tableNum(SalesTable):
                SalesId salesId;
                if (sourceLineTableId == tableNum(SalesLine))
                {
                    SalesLine salesLineByRecId = sourceLineTableLocal as SalesLine;
                    salesId = salesLineByRecId.SalesId;
                }
                else if (sourceLineTableId == tableNum(CustInvoiceTrans))
                {
                    CustInvoiceTrans custInvoiceTransByRecId = sourceLineTableLocal as CustInvoiceTrans;
                    salesId = custInvoiceTransByRecId.SalesId;
                }

                sourceHeaderTable = this.getSalesTableBySourceSalesId(salesId);

                break;
            case tableNum(PurchTable):
                PurchId purchId;
                switch (sourceLineTableId)
                {
                    case tableNum(VendInvoiceTrans):
                        VendInvoiceTrans vendInvoiceTransByRecId = sourceLineTableLocal as VendInvoiceTrans;
                        purchId = vendInvoiceTransByRecId.PurchID;

                        break;
                    case tableNum(VendInvoiceInfoLine):
                        VendInvoiceInfoLine vendInvoiceInfoLineByRecId = sourceLineTableLocal as VendInvoiceInfoLine;
                        purchId = vendInvoiceInfoLineByRecId.OrigPurchId;

                        break;
                    case tableNum(PurchLine):
                        PurchLine purchLineByRecId = sourceLineTableLocal as PurchLine;
                        purchId = purchLineByRecId.PurchId;

                        break;
                }

                sourceHeaderTable = this.getPurchTableByPurchId(purchId);

                break;
            case tableNum(CustInvoiceTable):
                if (sourceLineTableId == tableNum(CustInvoiceLine))
                {
                    CustInvoiceLine custInvoiceLineBySourceRecId = sourceLineTableLocal as CustInvoiceLine;
                    sourceHeaderTable = this.getCustInvoiceTableBySourceLine(custInvoiceLineBySourceRecId.ParentRecId);
                }

                break;
        }

        return sourceHeaderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceLineTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the source line table linked to the current <c>TaxTrans</c> table buffer.
    /// </summary>
    /// <returns>The source line table.</returns>
    public Common getSourceLineTable()
    {
        if (!sourceLineTableRecId || !sourceLineTableId)
        {
            sourceLineTable.clear();

            return sourceLineTable;
        }

        switch (sourceLineTableId)
        {
            case tableNum(LedgerJournalTrans):
                sourceLineTable = this.getLedgerJournalTransBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(CustInvoiceJour):
                sourceLineTable = this.getCustInvoiceJourBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(VendInvoiceJour):
                sourceLineTable = this.getVendInvoiceJourWByJourRecId(sourceLineTableRecId);

                break;
            case tableNum(InventTransferLine):
                sourceLineTable = this.getInventTransferLineBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(InventTransferJourLine):
                sourceLineTable = this.getInventTransferJourLineBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(CustTrans):
                sourceLineTable = this.getCustTransBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(VendTrans):
                sourceLineTable = this.getVendTransBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjInvoiceItem):
                sourceLineTable = this.getProjInvoiceItemBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjInvoiceEmpl):
                sourceLineTable = this.getProjInvoiceEmplBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjInvoiceCost):
                sourceLineTable = this.getProjInvoiceCostBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjInvoiceRevenue):
                sourceLineTable = this.getProjInvoiceRevenueBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjInvoiceOnAcc):
                sourceLineTable = this.getProjInvoiceOnAccBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjProposalItem):
                sourceLineTable = this.getProjProposalItemBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjProposalEmpl):
                sourceLineTable = this.getProjProposalEmplBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjProposalCost):
                sourceLineTable = this.getProjProposalCostBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjProposalRevenue):
                sourceLineTable = this.getProjProposalRevenueBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(ProjProposalOnAcc):
                sourceLineTable = this.getProjProposalOnAccBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(PurchLine):
                sourceLineTable = this.getPurchLineBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(SalesLine):
                sourceLineTable = this.getSalesLineBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(CustInvoiceTrans):
                sourceLineTable = this.getCustInvoiceTransBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(VendInvoiceTrans):
                sourceLineTable = this.getVendInvoiceTransBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(VendInvoiceInfoLine):
                sourceLineTable = this.getVendInvoiceInfoLineBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(CustInvoiceLine):
                sourceLineTable = this.getCustInvoiceLineBySourceRecId(sourceLineTableRecId);

                break;
            case tableNum(MarkupTrans):
                sourceLineTable = this.getMarkupTransBySourceRecId(sourceLineTableRecId);

                break;
        }

        return sourceLineTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHeadingTableId</Name>
				<Source><![CDATA[
    public RefTableId parmHeadingTableId(RefTableId _headingTableId = headingTableId)
    {
        headingTableId = _headingTableId;

        return headingTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceLineTableId</Name>
				<Source><![CDATA[
    public RefTableId parmSourceLineTableId(RefTableId _sourceLineTableId = sourceLineTableId)
    {
        sourceLineTableId = _sourceLineTableId;

        return sourceLineTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceLineTableRecId</Name>
				<Source><![CDATA[
    public RefRecId parmSourceLineTableRecId(RefRecId _sourceLineTableRecId = sourceLineTableRecId)
    {
        sourceLineTableRecId = _sourceLineTableRecId;

        return sourceLineTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustInvoiceJourBySourceTrans</Name>
				<Source><![CDATA[
    private CustInvoiceJour getCustInvoiceJourBySourceTrans(
        InvoiceId _sourceInvoiceId,
        TransDate _sourceInvoiceDate,
        CustInvoiceAccount _sourceInvoiceAccount,
        Voucher _sourceVoucher)
    {
        CustInvoiceJour custInvoiceJourBySourceTrans;

        if (sourceHeaderTable is CustInvoiceJour)
        {
            custInvoiceJourBySourceTrans = sourceHeaderTable as CustInvoiceJour;
        }

        if (custInvoiceJourBySourceTrans.InvoiceId != _sourceInvoiceId
            || custInvoiceJourBySourceTrans.InvoiceDate != _sourceInvoiceDate
            || custInvoiceJourBySourceTrans.InvoiceAccount != _sourceInvoiceAccount
            || custInvoiceJourBySourceTrans.LedgerVoucher != _sourceVoucher)
        {
            select firstonly RecId, InvoiceId, InvoiceDate, InvoiceAccount, LedgerVoucher, ReasonTableRef from custInvoiceJourBySourceTrans
                where custInvoiceJourBySourceTrans.InvoiceId == _sourceInvoiceId
                    && custInvoiceJourBySourceTrans.LedgerVoucher == _sourceVoucher
                    && custInvoiceJourBySourceTrans.InvoiceDate == _sourceInvoiceDate
                    && custInvoiceJourBySourceTrans.InvoiceAccount == _sourceInvoiceAccount;
        }

        return custInvoiceJourBySourceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustInvoiceJourBySourceRecId</Name>
				<Source><![CDATA[
    private CustInvoiceJour getCustInvoiceJourBySourceRecId(RefRecId _custInvoiceJourRefRecId)
    {
        CustInvoiceJour custInvoiceJourBySourceRecId;

        if (sourceLineTable is CustInvoiceJour)
        {
            custInvoiceJourBySourceRecId = sourceLineTable as CustInvoiceJour;
        }

        if (custInvoiceJourBySourceRecId.RecId != _custInvoiceJourRefRecId)
        {
            select firstonly RecId, ReasonTableRef from custInvoiceJourBySourceRecId
                where custInvoiceJourBySourceRecId.RecId == _custInvoiceJourRefRecId;
        }

        return custInvoiceJourBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendInvoiceJourWByJourRecId</Name>
				<Source><![CDATA[
    private VendInvoiceJour_W getVendInvoiceJourWByJourRecId(RefRecId _vendInvoiceJourRefRecId)
    {
        VendInvoiceJour_W vendInvoiceJour_W_ByJourRecId;

        if (sourceLineTable is VendInvoiceJour_W)
        {
            vendInvoiceJour_W_ByJourRecId = sourceLineTable as VendInvoiceJour_W;
        }

        if (vendInvoiceJour_W_ByJourRecId.VendInvoiceJour != _vendInvoiceJourRefRecId)
        {
            select firstonly RecId, ReasonTableRef, VendInvoiceJour from vendInvoiceJour_W_ByJourRecId
                where vendInvoiceJour_W_ByJourRecId.VendInvoiceJour == _vendInvoiceJourRefRecId;
        }

        return vendInvoiceJour_W_ByJourRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendInvoiceJourWBySourceTrans</Name>
				<Source><![CDATA[
    private VendInvoiceJour_W getVendInvoiceJourWBySourceTrans(
        InvoiceId _sourceInvoiceId,
        TransDate _sourceInvoiceDate,
        CustInvoiceAccount _sourceInvoiceAccount,
        Voucher _sourceVoucher)
    {
        VendInvoiceJour vendInvoiceJourBySourceTrans;
        VendInvoiceJour_W vendInvoiceJour_W_BySourceTrans;

        if (sourceHeaderTable is VendInvoiceJour_W)
        {
            vendInvoiceJour_W_BySourceTrans = sourceHeaderTable as VendInvoiceJour_W;
        }

        if (vendInvoiceJourBySourceTrans.RecId != vendInvoiceJour_W_BySourceTrans.VendInvoiceJour
            || vendInvoiceJourBySourceTrans.InvoiceId != _sourceInvoiceId
            || vendInvoiceJourBySourceTrans.InvoiceDate != _sourceInvoiceDate
            || vendInvoiceJourBySourceTrans.InvoiceAccount != _sourceInvoiceAccount
            || vendInvoiceJourBySourceTrans.LedgerVoucher != _sourceVoucher)
        {
            select firstonly RecId, ReasonTableRef, VendInvoiceJour from vendInvoiceJour_W_BySourceTrans
                join RecId, InvoiceId, InvoiceDate, InvoiceAccount, LedgerVoucher from vendInvoiceJourBySourceTrans
                where vendInvoiceJourBySourceTrans.InvoiceId == _sourceInvoiceId
                    && vendInvoiceJourBySourceTrans.LedgerVoucher == _sourceVoucher
                    && vendInvoiceJourBySourceTrans.InvoiceDate == _sourceInvoiceDate
                    && vendInvoiceJourBySourceTrans.InvoiceAccount == _sourceInvoiceAccount
                    && vendInvoiceJourBySourceTrans.RecId == vendInvoiceJour_W_BySourceTrans.VendInvoiceJour;
        }

        return vendInvoiceJour_W_BySourceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLedgerJournalTransBySourceRecId</Name>
				<Source><![CDATA[
    private LedgerJournalTrans getLedgerJournalTransBySourceRecId(RefRecId _ledgerJournalTransRefRecId)
    {
        LedgerJournalTrans ledgerJournalTransBySourceRecId;

        if (sourceLineTable is LedgerJournalTrans)
        {
            ledgerJournalTransBySourceRecId = sourceLineTable as LedgerJournalTrans;
        }

        if (ledgerJournalTransBySourceRecId.RecId != _ledgerJournalTransRefRecId)
        {
            select firstonly RecId, ReasonRefRecID, VendTransId from ledgerJournalTransBySourceRecId
                where ledgerJournalTransBySourceRecId.RecId == _ledgerJournalTransRefRecId;
        }

        return ledgerJournalTransBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventTransferLineBySourceRecId</Name>
				<Source><![CDATA[
    private InventTransferLine getInventTransferLineBySourceRecId(RefRecId _inventTransferLineRefRecId)
    {
        InventTransferLine inventTransferLineBySourceRecId;

        if (sourceLineTable is InventTransferLine)
        {
            inventTransferLineBySourceRecId = sourceLineTable as InventTransferLine;
        }

        if (inventTransferLineBySourceRecId.RecId != _inventTransferLineRefRecId)
        {
            select RecId, TransferId from inventTransferLineBySourceRecId
                where inventTransferLineBySourceRecId.RecId == _inventTransferLineRefRecId;
        }

        return inventTransferLineBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventTransferJourLineBySourceRecId</Name>
				<Source><![CDATA[
    private InventTransferJourLine getInventTransferJourLineBySourceRecId(RefRecId _inventTransferJourLineRefRecId)
    {
        InventTransferJourLine inventTransferJourLineBySourceRecId;

        if (sourceLineTable is InventTransferJourLine)
        {
            inventTransferJourLineBySourceRecId = sourceLineTable as InventTransferJourLine;
        }

        if (inventTransferJourLineBySourceRecId.RecId != _inventTransferJourLineRefRecId)
        {
            select firstonly RecId, TransferId from inventTransferJourLineBySourceRecId
                where inventTransferJourLineBySourceRecId.RecId == _inventTransferJourLineRefRecId;
        }

        return inventTransferJourLineBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventTransferTableByTransferId</Name>
				<Source><![CDATA[
    private InventTransferTable getInventTransferTableByTransferId(InventTransferId _inventTransferId)
    {
        InventTransferTable inventTransferTableByTransferId;

        if (sourceHeaderTable is InventTransferTable)
        {
            inventTransferTableByTransferId = sourceHeaderTable as InventTransferTable;
        }

        if (inventTransferTableByTransferId.TransferId != _inventTransferId)
        {
            select firstonly RecId, ReasonTableRef, TransferId from inventTransferTableByTransferId
                where inventTransferTableByTransferId.TransferId == _inventTransferId;
        }

        return inventTransferTableByTransferId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjInvoiceItemBySourceRecId</Name>
				<Source><![CDATA[
    private ProjInvoiceItem getProjInvoiceItemBySourceRecId(RefRecId _projInvoiceItemRefRecId)
    {
        ProjInvoiceItem projInvoiceItemBySourceRecId;

        if (sourceLineTable is ProjInvoiceItem)
        {
            projInvoiceItemBySourceRecId = sourceLineTable as ProjInvoiceItem;
        }

        if (projInvoiceItemBySourceRecId.RecId != _projInvoiceItemRefRecId)
        {
            select firstonly RecId, InvoiceDate, ProjInvoiceId from projInvoiceItemBySourceRecId
                where projInvoiceItemBySourceRecId.RecId == _projInvoiceItemRefRecId;
        }

        return projInvoiceItemBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjInvoiceEmplBySourceRecId</Name>
				<Source><![CDATA[
    private ProjInvoiceEmpl getProjInvoiceEmplBySourceRecId(RefRecId _projInvoiceEmplRefRecId)
    {
        ProjInvoiceEmpl projInvoiceEmplBySourceRecId;

        if (sourceLineTable is ProjInvoiceEmpl)
        {
            projInvoiceEmplBySourceRecId = sourceLineTable as ProjInvoiceEmpl;
        }

        if (projInvoiceEmplBySourceRecId.RecId != _projInvoiceEmplRefRecId)
        {
            select firstonly RecId, InvoiceDate, ProjInvoiceId from projInvoiceEmplBySourceRecId
                where projInvoiceEmplBySourceRecId.RecId == _projInvoiceEmplRefRecId;
        }

        return projInvoiceEmplBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjInvoiceCostBySourceRecId</Name>
				<Source><![CDATA[
    private ProjInvoiceCost getProjInvoiceCostBySourceRecId(RefRecId _projInvoiceCostRefRecId)
    {
        ProjInvoiceCost projInvoiceCostBySourceRecId;

        if (sourceLineTable is ProjInvoiceCost)
        {
            projInvoiceCostBySourceRecId = sourceLineTable as ProjInvoiceCost;
        }

        if (projInvoiceCostBySourceRecId.RecId != _projInvoiceCostRefRecId)
        {
            select firstonly RecId, InvoiceDate, ProjInvoiceId from projInvoiceCostBySourceRecId
                where projInvoiceCostBySourceRecId.RecId == _projInvoiceCostRefRecId;
        }

        return projInvoiceCostBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjInvoiceRevenueBySourceRecId</Name>
				<Source><![CDATA[
    private ProjInvoiceRevenue getProjInvoiceRevenueBySourceRecId(RefRecId _projInvoiceRevenueRefRecId)
    {
        ProjInvoiceRevenue projInvoiceRevenueBySourceRecId;

        if (sourceLineTable is ProjInvoiceRevenue)
        {
            projInvoiceRevenueBySourceRecId = sourceLineTable as ProjInvoiceRevenue;
        }

        if (projInvoiceRevenueBySourceRecId.RecId != _projInvoiceRevenueRefRecId)
        {
            select firstonly RecId, InvoiceDate, ProjInvoiceId from projInvoiceRevenueBySourceRecId
                where projInvoiceRevenueBySourceRecId.RecId == _projInvoiceRevenueRefRecId;
        }

        return projInvoiceRevenueBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjInvoiceOnAccBySourceRecId</Name>
				<Source><![CDATA[
    private ProjInvoiceOnAcc getProjInvoiceOnAccBySourceRecId(RefRecId _projInvoiceOnAccRefRecId)
    {
        ProjInvoiceOnAcc projInvoiceOnAccBySourceRecId;

        if (sourceLineTable is ProjInvoiceOnAcc)
        {
            projInvoiceOnAccBySourceRecId = sourceLineTable as ProjInvoiceOnAcc;
        }

        if (projInvoiceOnAccBySourceRecId.RecId != _projInvoiceOnAccRefRecId)
        {
            select firstonly RecId, InvoiceDate, ProjInvoiceId from projInvoiceOnAccBySourceRecId
                where projInvoiceOnAccBySourceRecId.RecId == _projInvoiceOnAccRefRecId;
        }

        return projInvoiceOnAccBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjInvoiceJourByInvoiceIdDate</Name>
				<Source><![CDATA[
    private ProjInvoiceJour getProjInvoiceJourByInvoiceIdDate(ProjInvoiceId _projInvoiceId, TransDate _transDate)
    {
        ProjInvoiceJour projInvoiceJourByInvoiceIdDate;

        if (sourceHeaderTable is ProjInvoiceJour)
        {
            projInvoiceJourByInvoiceIdDate = sourceHeaderTable as ProjInvoiceJour;
        }

        if (projInvoiceJourByInvoiceIdDate.InvoiceDate != _transDate
            || projInvoiceJourByInvoiceIdDate.ProjInvoiceId != _projInvoiceId)
        {
            select firstonly RecId, ReasonTableRef, InvoiceDate, ProjInvoiceId, InvoiceAmount from projInvoiceJourByInvoiceIdDate
                where projInvoiceJourByInvoiceIdDate.InvoiceDate == _transDate
                    && projInvoiceJourByInvoiceIdDate.ProjInvoiceId == _projInvoiceId;
        }

        return projInvoiceJourByInvoiceIdDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjProposalItemBySourceRecId</Name>
				<Source><![CDATA[
    private ProjProposalItem getProjProposalItemBySourceRecId(RefRecId _projProposalItemRefRecId)
    {
        ProjProposalItem projProposalItemBySourceRecId;

        if (sourceLineTable is ProjProposalItem)
        {
            projProposalItemBySourceRecId = sourceLineTable as ProjProposalItem;
        }

        if (projProposalItemBySourceRecId.RecId != _projProposalItemRefRecId)
        {
            select firstonly RecId, ProposalId from projProposalItemBySourceRecId
                where projProposalItemBySourceRecId.RecId == _projProposalItemRefRecId;
        }

        return projProposalItemBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjProposalEmplBySourceRecId</Name>
				<Source><![CDATA[
    private ProjProposalEmpl getProjProposalEmplBySourceRecId(RefRecId _projProposalEmplRefRecId)
    {
        ProjProposalEmpl projProposalEmplBySourceRecId;

        if (sourceLineTable is ProjProposalEmpl)
        {
            projProposalEmplBySourceRecId = sourceLineTable as ProjProposalEmpl;
        }

        if (projProposalEmplBySourceRecId.RecId != _projProposalEmplRefRecId)
        {
            select firstonly RecId, ProposalId from projProposalEmplBySourceRecId
                where projProposalEmplBySourceRecId.RecId == _projProposalEmplRefRecId;
        }

        return projProposalEmplBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjProposalCostBySourceRecId</Name>
				<Source><![CDATA[
    private ProjProposalCost getProjProposalCostBySourceRecId(RefRecId _projProposalCostRefRecId)
    {
        ProjProposalCost projProposalCostBySourceRecId;

        if (sourceLineTable is ProjProposalCost)
        {
            projProposalCostBySourceRecId = sourceLineTable as ProjProposalCost;
        }

        if (projProposalCostBySourceRecId.RecId != _projProposalCostRefRecId)
        {
            select firstonly RecId, ProposalId from projProposalCostBySourceRecId
                where projProposalCostBySourceRecId.RecId == _projProposalCostRefRecId;
        }

        return projProposalCostBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjProposalRevenueBySourceRecId</Name>
				<Source><![CDATA[
    private ProjProposalRevenue getProjProposalRevenueBySourceRecId(RefRecId _projProposalRevenueRefRecId)
    {
        ProjProposalRevenue projProposalRevenueBySourceRecId;

        if (sourceLineTable is ProjProposalRevenue)
        {
            projProposalRevenueBySourceRecId = sourceLineTable as ProjProposalRevenue;
        }

        if (projProposalRevenueBySourceRecId.RecId != _projProposalRevenueRefRecId)
        {
            select firstonly RecId, ProposalId from projProposalRevenueBySourceRecId
                where projProposalRevenueBySourceRecId.RecId == _projProposalRevenueRefRecId;
        }

        return projProposalRevenueBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjProposalOnAccBySourceRecId</Name>
				<Source><![CDATA[
    private ProjProposalOnAcc getProjProposalOnAccBySourceRecId(RefRecId _projProposalOnAccRefRecId)
    {
        ProjProposalOnAcc projProposalOnAccBySourceRecId;

        if (sourceLineTable is ProjProposalOnAcc)
        {
            projProposalOnAccBySourceRecId = sourceLineTable as ProjProposalOnAcc;
        }

        if (projProposalOnAccBySourceRecId.RecId != _projProposalOnAccRefRecId)
        {
            select firstonly RecId, ProposalId from projProposalOnAccBySourceRecId
                where projProposalOnAccBySourceRecId.RecId == _projProposalOnAccRefRecId;
        }

        return projProposalOnAccBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjProposalJourByProposalId</Name>
				<Source><![CDATA[
    private ProjProposalJour getProjProposalJourByProposalId(ProjProposalId _projProposalId)
    {
        ProjProposalJour projProposalJourByProposalId;

        if (sourceHeaderTable is ProjProposalJour)
        {
            projProposalJourByProposalId = sourceHeaderTable as ProjProposalJour;
        }

        if (projProposalJourByProposalId.ProposalId != _projProposalId)
        {
            select firstonly RecId, ReasonTableRef, ProposalId from projProposalJourByProposalId
                where projProposalJourByProposalId.ProposalId == _projProposalId;
        }

        return projProposalJourByProposalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchLineBySourceRecId</Name>
				<Source><![CDATA[
    private PurchLine getPurchLineBySourceRecId(RefRecId _purchLineRefRecId)
    {
        PurchLine purchLineBySourceRecId;

        if (sourceLineTable is PurchLine)
        {
            purchLineBySourceRecId = sourceLineTable as PurchLine;
        }

        if (purchLineBySourceRecId.RecId != _purchLineRefRecId)
        {
            select firstonly RecId, PurchId from purchLineBySourceRecId
                where purchLineBySourceRecId.RecId == _purchLineRefRecId;
        }

        return purchLineBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchTableByPurchId</Name>
				<Source><![CDATA[
    private PurchTable getPurchTableByPurchId(PurchId _purchId)
    {
        PurchTable purchTableByPurchId;

        if (sourceHeaderTable is PurchTable)
        {
            purchTableByPurchId = sourceHeaderTable as PurchTable;
        }

        if (purchTableByPurchId.PurchId != _purchId)
        {
            select firstonly RecId, ReasonTableRef, PurchId from purchTableByPurchId
                where purchTableByPurchId.PurchId == _purchId;
        }

        return purchTableByPurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesLineBySourceRecId</Name>
				<Source><![CDATA[
    private SalesLine getSalesLineBySourceRecId(RefRecId _salesLineRefRecId)
    {
        SalesLine salesLineBySourceRecId;

        if (sourceLineTable is SalesLine)
        {
            salesLineBySourceRecId = sourceLineTable as SalesLine;
        }

        if (salesLineBySourceRecId.RecId != _salesLineRefRecId)
        {
            select firstonly RecId, CreditNoteReasonCode, SalesId from salesLineBySourceRecId
                where salesLineBySourceRecId.RecId == _salesLineRefRecId;
        }

        return salesLineBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustInvoiceTransBySourceRecId</Name>
				<Source><![CDATA[
    private CustInvoiceTrans getCustInvoiceTransBySourceRecId(RefRecId _custInvoiceTransRefRecId)
    {
        CustInvoiceTrans custInvoiceTransBySourceRecId;

        if (sourceLineTable is CustInvoiceTrans)
        {
            custInvoiceTransBySourceRecId = sourceLineTable as CustInvoiceTrans;
        }

        if (custInvoiceTransBySourceRecId.RecId != _custInvoiceTransRefRecId)
        {
            select firstonly RecId, ReasonRefRecId, SalesId from custInvoiceTransBySourceRecId
                where custInvoiceTransBySourceRecId.RecId == _custInvoiceTransRefRecId;
        }

        return custInvoiceTransBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTableBySourceSalesId</Name>
				<Source><![CDATA[
    private SalesTable getSalesTableBySourceSalesId(SalesId _sourceSalesId)
    {
        SalesTable salesTableBySourceSalesId;

        if (sourceHeaderTable is SalesTable)
        {
            salesTableBySourceSalesId = sourceHeaderTable as SalesTable;
        }

        if (salesTableBySourceSalesId.SalesId != _sourceSalesId)
        {
            select firstonly RecId, CreditNoteReasonCode, SalesId from salesTableBySourceSalesId
                where salesTableBySourceSalesId.SalesId == _sourceSalesId;
        }

        return salesTableBySourceSalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendInvoiceTransBySourceRecId</Name>
				<Source><![CDATA[
    private VendInvoiceTrans getVendInvoiceTransBySourceRecId(RefRecId _vendInvoiceTransRefRecId)
    {
        VendInvoiceTrans vendInvoiceTransBySourceRecId;

        if (sourceLineTable is VendInvoiceTrans)
        {
            vendInvoiceTransBySourceRecId = sourceLineTable as VendInvoiceTrans;
        }

        if (vendInvoiceTransBySourceRecId.RecId != _vendInvoiceTransRefRecId)
        {
            select firstonly RecId, ReasonTableRef, PurchID from vendInvoiceTransBySourceRecId
                where vendInvoiceTransBySourceRecId.RecId == _vendInvoiceTransRefRecId;
        }

        return vendInvoiceTransBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendInvoiceInfoLineBySourceRecId</Name>
				<Source><![CDATA[
    private VendInvoiceInfoLine getVendInvoiceInfoLineBySourceRecId(RefRecId _vendInvoiceInfoLineRefRecId)
    {
        VendInvoiceInfoLine vendInvoiceInfoLineBySourceRecId;

        if (sourceLineTable is VendInvoiceInfoLine)
        {
            vendInvoiceInfoLineBySourceRecId = sourceLineTable as VendInvoiceInfoLine;
        }

        if (vendInvoiceInfoLineBySourceRecId.RecId != _vendInvoiceInfoLineRefRecId)
        {
            select firstonly RecId, ReasonTableRef, OrigPurchId from vendInvoiceInfoLineBySourceRecId
                where vendInvoiceInfoLineBySourceRecId.RecId == _vendInvoiceInfoLineRefRecId;
        }

        return vendInvoiceInfoLineBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustInvoiceLineBySourceRecId</Name>
				<Source><![CDATA[
    private CustInvoiceLine getCustInvoiceLineBySourceRecId(RefRecId _custInvoiceLineRefRecId)
    {
        CustInvoiceLine custInvoiceLineBySourceRecId;

        if (sourceLineTable is CustInvoiceLine)
        {
            custInvoiceLineBySourceRecId = sourceLineTable as CustInvoiceLine;
        }

        if (custInvoiceLineBySourceRecId.RecId != _custInvoiceLineRefRecId)
        {
            select firstonly RecId, ParentRecId, ReasonRefRecId from custInvoiceLineBySourceRecId
                where custInvoiceLineBySourceRecId.RecId == _custInvoiceLineRefRecId;
        }

        return custInvoiceLineBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustInvoiceTableBySourceLine</Name>
				<Source><![CDATA[
    private CustInvoiceTable getCustInvoiceTableBySourceLine(RefRecId _custInvoiceTableRefRecId)
    {
        CustInvoiceTable custInvoiceTableBySourceLine;

        if (sourceHeaderTable is CustInvoiceTable)
        {
            custInvoiceTableBySourceLine = sourceHeaderTable as CustInvoiceTable;
        }

        if (custInvoiceTableBySourceLine.RecId != _custInvoiceTableRefRecId)
        {
            select firstonly RecId, CorrectionReasonCode from custInvoiceTableBySourceLine
                where custInvoiceTableBySourceLine.RecId == _custInvoiceTableRefRecId;
        }

        return custInvoiceTableBySourceLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTransBySourceRecId</Name>
				<Source><![CDATA[
    private CustTrans getCustTransBySourceRecId(RefRecId _custTransRefRecId)
    {
        CustTrans custTransBySourceRecId;

        if (sourceLineTable is CustTrans)
        {
            custTransBySourceRecId = sourceLineTable as CustTrans;
        }

        if (custTransBySourceRecId.RecId != _custTransRefRecId)
        {
            select firstonly RecId, ReasonRefRecId, Invoice, Voucher, AccountNum, TransDate from custTransBySourceRecId
                where custTransBySourceRecId.RecId == _custTransRefRecId;
        }

        return custTransBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendTransBySourceRecId</Name>
				<Source><![CDATA[
    private VendTrans getVendTransBySourceRecId(RefRecId _vendTransRefRecId)
    {
        VendTrans vendTransBySourceRecId;

        if (sourceLineTable is VendTrans)
        {
            vendTransBySourceRecId = sourceLineTable as VendTrans;
        }

        if (vendTransBySourceRecId.RecId != _vendTransRefRecId)
        {
            select firstonly RecId, ReasonRefRecId, Invoice, Voucher, AccountNum, TransDate from vendTransBySourceRecId
                where vendTransBySourceRecId.RecId == _vendTransRefRecId;
        }

        return vendTransBySourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMarkupTransBySourceRecId</Name>
				<Source><![CDATA[
    private MarkupTrans getMarkupTransBySourceRecId(RefRecId _markupTransRefRecId)
    {
        MarkupTrans markupTransBySourceRecId;

        if (sourceLineTable is MarkupTrans)
        {
            markupTransBySourceRecId = sourceLineTable as MarkupTrans;
        }

        if (markupTransBySourceRecId.RecId != _markupTransRefRecId)
        {
            select firstonly RecId, TransTableId, TransRecId from markupTransBySourceRecId
                where markupTransBySourceRecId.RecId == _markupTransRefRecId;
        }

        return markupTransBySourceRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>