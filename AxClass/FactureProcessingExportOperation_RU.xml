<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FactureProcessingExportOperation_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FactureProcessingExportOperation_RU extends FactureProcessingExport_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>end</Name>
				<Source><![CDATA[
        protected void end()
    {
        factureJourOrig.ProcessingType = this.newType();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTmpCursor</Name>
				<Source><![CDATA[
        protected void initTmpCursor()
    {
        select forupdate tmpFactureProcessing
            where tmpFactureProcessing.Mark           == NoYes::Yes                                 &&
                  tmpFactureProcessing.ProcessingType != tmpFactureProcessing.CurrentProcessingType &&
                  tmpFactureProcessing.ProcessingType != SalesBookFactureProcessingType_RU::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newType</Name>
				<Source><![CDATA[
        protected SalesBookFactureProcessingType_RU newType()
    {
        return tmpFactureProcessing.ProcessingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processingOperationType</Name>
				<Source><![CDATA[
        protected void processingOperationType()
    {
        SalesBookFactureProcessingType_RU newOperationType = tmpFactureProcessing.ProcessingType;

        switch (newOperationType)
        {
            case SalesBookFactureProcessingType_RU::VATZero:
                break;
            case SalesBookFactureProcessingType_RU::VATStandard:
                this.createFactureStandard(newOperationType);
                break;
            case SalesBookFactureProcessingType_RU::VATStandardCorrection:
                this.createFactureStandard(newOperationType);
                this.createCorrection(newOperationType);
                break;
            case SalesBookFactureProcessingType_RU::VATZeroCorrection:
                this.createCorrection(newOperationType);
                break;
            case SalesBookFactureProcessingType_RU::OverdueConfirmation:
                this.createCorrection(SalesBookFactureProcessingType_RU::OverdueConfirmation);
                this.createFactureStandard(newOperationType);
                this.createFactureStandard(SalesBookFactureProcessingType_RU::VATStandardCancellation);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>