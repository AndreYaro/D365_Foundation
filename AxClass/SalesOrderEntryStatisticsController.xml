<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesOrderEntryStatisticsController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesOrderEntryStatisticsController</c> class handles the business logic for the
/// <c>SalesOrderEntryStatistics_ItemCust</c> and <c>SalesOrderEntryStatistics_CustItem</c> reports.
/// </summary>
class SalesOrderEntryStatisticsController extends SRSReportRunController implements BatchRetryable
{
    str menuItemName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        #ISOCountryRegionCodes
        super();
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
            [#isoSA, GlobalizationConstants::FeatureReferenceSE00003] ],
            funcName()
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes and saves the query.
    /// </summary>
    /// <param name="_query">
    /// The query object.
    /// </param>
    public void initialize(Query _query)
    {
        // create the session's SRSReportRun object using the default view
        if (menuItemName == menuitemoutputstr(SalesOrderEntryStatistics_CustItem))
        {
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addRange(
                                            fieldnum(SalesOrderEntryStatistics, CustAccount));
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addRange(
                                            fieldnum(SalesOrderEntryStatistics, ItemId));
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addRange(
                                            fieldnum(SalesOrderEntryStatistics, WorkerSalesResponsible));
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addRange(
                                            fieldnum(SalesOrderEntryStatistics, TransDate)).status(rangeStatus::Hidden);
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addSortIndex(
                                            indexnum(SalesOrderEntryStatistics, CustItemIdx));
        }
        else if (menuItemName == menuitemoutputstr(SalesOrderEntryStatistics_ItemCust))
        {
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addRange(
                                            fieldnum(SalesOrderEntryStatistics, ItemId));
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addRange(
                                            fieldnum(SalesOrderEntryStatistics, CustAccount));
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addRange(
                                            fieldnum(SalesOrderEntryStatistics, WorkerSalesResponsible));
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addRange(
                                            fieldnum(SalesOrderEntryStatistics, TransDate)).status(rangeStatus::Hidden);
            _query.dataSourceTable(tablenum(SalesOrderEntryStatistics)).addSortIndex(
                                            indexnum(SalesOrderEntryStatistics, ItemCustIdx));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the ability to modify the report contract before the dialog is shown to the user.
    /// </summary>
    /// <remarks>
    /// Use this method to change the report contract. A common use case is to add or change a query.This
    /// method is called only during interactive scenario, which is before rendering the UI to user.For
    /// batch scenario, we do not invoke this method because there is no user interaction, and contract
    /// values are already saved in batch.Do not initialize any instance variables in this code that are
    /// used during the lifetime of the controller because these will fail in batch cases.
    /// </remarks>
    protected void prePromptModifyContract()
    {
        this.initialize(this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReportName</Name>
				<Source><![CDATA[
    public str setReportName(Args _args)
    {
        str name;

        if (_args.menuItemName() == menuitemoutputstr(SalesOrderEntryStatistics_CustItem))
        {
            menuItemName    = _args.menuItemName();
            name            = ssrsReportStr(SalesOrderEntryStatistics, CustItem);
        }
        else if (_args.menuItemName() == menuitemoutputstr(SalesOrderEntryStatistics_ItemCust))
        {
            menuItemName    = _args.menuItemName();
            name            = ssrsReportStr(SalesOrderEntryStatistics, ItemCust);
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the customized <c>SalesOrderEntryStatistics</c> SRS Report.
    /// </summary>
    /// <param name="_args">
    /// Dialog arguments.
    /// </param>
    public static void main(Args _args)
    {
        SalesOrderEntryStatisticsController controller = new SalesOrderEntryStatisticsController();

        controller.parmReportName(controller.setReportName(_args));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>