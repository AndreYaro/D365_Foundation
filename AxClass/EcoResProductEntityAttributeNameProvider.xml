<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityAttributeNameProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The product entity attribute name provider class.
/// </summary>
public class EcoResProductEntityAttributeNameProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
	/// <summary>
    /// Creates a new instance of the <c>EcoResProductEntityAttributeNameProvider</c> class.
    /// </summary>
    /// <returns>A new instance of the <c>EcoResProductEntityAttributeNameProvider</c> class.</returns>
    public static EcoResProductEntityAttributeNameProvider construct()
    {
        return new EcoResProductEntityAttributeNameProvider();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultAttributeName</Name>
				<Source><![CDATA[
	/// <summary>
    /// Gets the default attribute name for the specified table and table field ID.
    /// </summary>
    /// <param name = "_applicationTableId">The table ID.</param>
    /// <param name = "_applicationTableFieldId">The table field ID.</param>
    /// <returns>The default attribute name.</returns>
    public Name getDefaultAttributeName(TableId _applicationTableId, FieldId _applicationTableFieldId)
    {
        switch(_applicationTableId)
        {
            case tableNum(InventDim):
                InventProductDimension prodDim = InventDimension::singletonFromInventDimFieldId(_applicationTableFieldId) as InventProductDimension;
                if (prodDim)
                {
                    return prodDim.label();
                }
                break;
        }
        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>