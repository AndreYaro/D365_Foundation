<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLocationFormLauncher</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     This class chooses the Location screen to be displayed
///     based off the <c>WHSEnabled</c> field on the warehouse.
/// </summary>
public class WHSLocationFormLauncher
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fieldIdInventLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Looks for the relation from the args record to WMSLocation table to grab the InventLocationId.
    /// </summary>
    /// <param name="_tableId">
    ///     TableId for the args record.
    /// </param>
    /// <param name="_fieldIdWMSLocationId">
    ///     FieldId for the WMSLocationId on the args record.
    /// </param>
    /// <returns>
    ///     Field for the InventLocationId on the args record.
    /// </returns>
    protected FieldId fieldIdInventLocation(
        TableId _tableId,
        FieldId _fieldIdWMSLocationId)
    {
        FieldId fieldIdInventLocationId;
        int     i;

        DictField    fkField  = new DictField(_tableId,_fieldIdWMSLocationId);
        DictRelation relation = new DictRelation(_tableId);

        // relation from table or data type
        relation.loadFieldRelation(_fieldIdWMSLocationId);
        if (relation.externTable() == 0)
        {
            relation = fkField.relationObject();
        }

        // find the field Id that is not the wmsLocationId
        if (   relation
            && relation.externTable() == tableNum(WMSLocation))
        {
            while (   i < relation.lines()
                   && !fieldIdInventLocationId)
            {
                i++;

                FieldId fieldId = relation.lineTableValue(i);
                if (fieldId != _fieldIdWMSLocationId)
                {
                    fieldIdInventLocationId = fieldId;
                }
            }
        }

        return fieldIdInventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the InventLocationId for the location selected.
    /// </summary>
    /// <param name="_args">
    ///     Args object containing record used to view details on WMSLocationId.
    /// </param>
    /// <returns>
    ///     <c>InventLocationId</c> for the location selected.
    /// </returns>
    protected InventLocationId inventLocationId(Args _args)
    {
        InventLocationId        inventLocationId;

        if (_args)
        {
            FieldId refFieldId = _args.refField();
            Common  common     = _args.record();

            if (   refFieldId
                && common.TableId)
            {
                FieldId fieldIdInventLocationId = this.fieldIdInventLocation(common.TableId,refFieldId);

                if (fieldIdInventLocationId)
                {
                    inventLocationId = common.(fieldIdInventLocationId);
                }
            }
        }

        return inventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWHSEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if the warehouse associated with the location is WHSEnabled.
    /// </summary>
    /// <param name="_args">
    ///     Args object containing record used to view details on WMSLocationId.
    /// </param>
    /// <returns>
    ///     True if the warehouse is selected and is WHSEnabled.
    /// </returns>
    protected boolean isWHSEnabled(Args _args)
    {
        InventLocation      inventLocation;
        InventLocationId    inventLocationId;

        if (_args)
        {
            Common common = _args.record();

            if (common is InventLocation)
            {
                inventLocation   = common as inventLocation;
                inventLocationId = inventLocation.inventLocationId;
            }
            else
            {
                inventLocationId = this.inventLocationId(_args);
                if (inventLocationId)
                {
                    inventLocation = inventLocation::find(inventLocationId);
                }
            }
        }

        return    inventLocation
               && inventLocation.WHSEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[	/// <summary>
	/// Displays WHSLocation screen if warehouse is WHS enabled, otheriwse displays WMSLocation screen.
	/// </summary>
	/// <param name="_args">
	/// Args containing warehouse information.
	/// </param>
    protected void run(Args _args)
    {
        if (this.isWHSEnabled(_args))
        {
            new MenuFunction(menuitemDisplayStr(WHSLocation),MenuItemType::Display).run(_args);
        }
        else
        {
            new MenuFunction(menuitemDisplayStr(WMSLocation),MenuItemType::Display).run(_args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSLocationFormLauncher construct()
    {
        return new WHSLocationFormLauncher();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSLocationFormLauncher::construct().run(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
