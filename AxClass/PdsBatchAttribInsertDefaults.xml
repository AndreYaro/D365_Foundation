<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsBatchAttribInsertDefaults</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PdsBatchAttribInsertDefaults
{
    ItemId          itemId;
    InventBatchId   inventBatchId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildDefaultAttributes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds all batch attributes related to item and calls the insertAttribute
    /// method.
    /// </summary>
    protected void buildDefaultAttributes()
    {
        PdsBatchAttribByItem        byItem;
        PdsBatchAttribByAttribGroup byGroup;
        PdsBatchAttrib              byAll;

        while select PdsBatchAttribRelation
            from byItem
            where byItem.PdsBatchAttribCode    == TableGroupAll::Table
                && byItem.PdsBatchAttribItemId == this.parmItemId()
        {
            if (!PdsBatchAttributes::exist(this.parmItemId(), inventBatchId, byItem.PdsBatchAttribRelation))
            {
                this.insertAttribute(byItem.PdsBatchAttribRelation);
            }
        }

        while select PdsBatchAttribRelation
            from byItem
            where byItem.PdsBatchAttribCode    == TableGroupAll::GroupId
                && byItem.PdsBatchAttribItemId == this.parmItemId()
        {
            while select PdsBatchAttribAttribId
                from byGroup
                where byGroup.PdsBatchAttribGroupId == byItem.PdsBatchAttribRelation
            {
                if (!PdsBatchAttributes::exist(this.parmItemId(), inventBatchId, byGroup.PdsBatchAttribAttribId))
                {
                    this.insertAttribute(byGroup.PdsBatchAttribAttribId);
                }
            }
        }

        select firstonly RecId
            from byItem
            where byItem.PdsBatchAttribCode    == TableGroupAll::All
                && byItem.PdsBatchAttribItemId == this.parmItemId();

        if (byItem.RecId)
        {
            while select PdsBatchAttribId
                from byAll
            {
                if (!PdsBatchAttributes::exist(this.parmItemId(), inventBatchId, byAll.PdsBatchAttribId))
                {
                    this.insertAttribute(byAll.PdsBatchAttribId);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method inserts the attribute with the PdsBatchAttribId of _attribId
    /// into the PdsBatchAttributes table.
    /// </summary>
    /// <param name="_attribId">
    /// Id of attribute to be inserted.
    /// </param>
    protected void insertAttribute(PdsBatchAttribId _attribId)
    {
        PdsBatchAttributes pdsBatchAttributes;

        pdsBatchAttributes.clear();
        pdsBatchAttributes.InventBatchId = this.parmInventBatchId();
        pdsBatchAttributes.ItemId = this.parmItemId();
        pdsBatchAttributes.PdsBatchAttribId = _attribId;
        pdsBatchAttributes.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns new instance of PdsBatchAttribInsertDefaults class.
    /// </summary>
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventBatchId</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method gets or sets the inventBatchid parameter.
    /// </summary>
    /// <param name="_inventBatchId">
    /// Value to be set.
    /// </param>
    /// <returns>
    /// The inventBatchId parameter.
    /// </returns>
    protected InventBatchId parmInventBatchId(
        InventBatchId _inventBatchId = inventBatchId)
    {
        if (!prmisdefault(_inventBatchId))
        {
            inventBatchId = _inventBatchId;
        }

        return inventBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method gets or sets the itemId parameter.
    /// </summary>
    /// <param name="_itemId">
    /// Value to set.
    /// </param>
    /// <returns>
    /// ItemId parameter.
    /// </returns>
    protected ItemId parmItemId(ItemId _itemId = itemId)
    {
        if (!prmisdefault(_itemId))
        {
            itemId = _itemId;
        }

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Declares and returns a new instance of the PdsBatchAttribInsertDefaults
    /// class.
    /// </summary>
    /// <returns>
    /// New instance of the PdsBatchAttribInsertDefaults class.
    /// </returns>
    public static PdsBatchAttribInsertDefaults construct()
    {
        return new PdsBatchAttribInsertDefaults();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDefaultAttributes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the PdsBatchAttribInsertDefaults class using the
    /// newBuffer method, and inserts default values, callin
    /// build DefaultAttributes method.
    /// </summary>
    /// <param name="_itemId">
    /// ItemId used to initialize class.
    /// </param>
    /// <param name="_inventBatchId">
    /// InventBatchId used to initialize class.
    /// </param>
    public static void insertDefaultAttributes(
        ItemId        _itemId,
        InventBatchId _inventBatchId)
    {
        PdsBatchAttribInsertDefaults pdsBatchAttribInsertDefaults;

        pdsBatchAttribInsertDefaults
            = PdsBatchAttribInsertDefaults::newBuffer(_itemId, _inventBatchId);
        pdsBatchAttribInsertDefaults.buildDefaultAttributes();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new initialized instance of the PdsBatchAttribInsertDefaults
    /// class.
    /// </summary>
    /// <param name="_itemId">
    /// ItemId used to initialize class.
    /// </param>
    /// <param name="_inventBatchId">
    /// InventBatchId used to initialize class.
    /// </param>
    /// <returns>
    /// New instance of the PdsBatchAttribInsertDefaults class.
    /// </returns>
    public static PdsBatchAttribInsertDefaults newBuffer(
        ItemId        _itemId,
        InventBatchId _inventBatchId)
    {
        PdsBatchAttribInsertDefaults pdsBatchAttribInsertDefaults;

        pdsBatchAttribInsertDefaults = PdsBatchAttribInsertDefaults::construct();
        pdsBatchAttribInsertDefaults.parmItemId(_itemId);
        pdsBatchAttribInsertDefaults.parmInventBatchId(_inventBatchId);

        return pdsBatchAttribInsertDefaults;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>