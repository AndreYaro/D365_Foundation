<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjectWbsExportToProjectClient</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Create and upload the MS Project Client file with filename format of 
/// company_MSPFileSyncLinkType_RecordID_entityId_hierarchyId to permanent blob storage.
/// The Azure blob storage Id is also stored in ProjectWbsLockBox table along with the enitity Id and hierarchy Id 
/// </summary>
public class ProjectWbsExportToProjectClient
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exportMppFileForProjectClient</Name>
				<Source><![CDATA[
    /// <summary>
    /// Exports a selected project into a Project Client file.
    /// </summary>
    /// <param name = "projTable">Selected ProjTable record.</param>
    /// <returns>A URL string for the created Project Client mpp file.</returns>
    public str exportMppFileForProjectClient(ProjTable projTable)
    {
        ProjectWbsMppUploadStrategy uploadStrategy = new ProjectWbsMppUploadStrategy();
        ProjectWbsLockBox lockBox;   
        HierarchyIdBase hierarchyId = this.getHierarchyId(projTable.ProjId);
        str url;

        select firstonly forupdate lockBox where lockBox.HierarchyId == hierarchyId;

        if (lockBox.RecId == 0 || (lockBox.RecId != 0 && !lockBox.FileId))
        {
            ResourceName resourceName = resourceStr(ProjectWbsEmptyProject);

            var filePath = SysResource::saveToTempFile(SysResource::getResourceNode(resourceName), false);

            FileIOPermission fileIOPermission;
            #File

            // Assert permission.
            fileIOPermission = new FileIOPermission(filePath, #io_read);
            fileIOPermission.assert();

            str fileName = strFmt("%1_%2_%3_%4_%5.mpp", curExt(), enum2Str(MSPFileSyncLinkType::Project), projTable.RecId, projTable.ProjId, hierarchyId);
            
            using(System.IO.FileStream fs = System.IO.File::OpenRead(filePath))
            {
                ProjectWbsMppUploadResult uploadResult = uploadStrategy.uploadFile(fs, FileName, "", "", "", true);

                url = uploadResult.getResultUri();
            }
        }
        else
        {
            url = uploadStrategy.getUrlFromStorage(lockBox.FileId);
        }


        return url;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHierarchyId</Name>
				<Source><![CDATA[
    private HierarchyIdBase getHierarchyId(ProjIdBase _projId)
    {
        ProjPlanVersionDetail projPlanVersionDetail = ProjPlanVersionDetail::findProjectDraftVersion(_projId);

        return projPlanVersionDetail.HierarchyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        ProjectWbsExportToProjectClient proj = new ProjectWbsExportToProjectClient();
        ProjTable projTable = _args.record();
        Browser b = new Browser();

        b.navigate(proj.exportMppFileForProjectClient(projTable));
        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>