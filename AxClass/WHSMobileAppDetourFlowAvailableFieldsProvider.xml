<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppDetourFlowAvailableFieldsProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppDetourFlowAvailableFieldsProvider</c> class provides a way to retrieve the set of fields that can be used to pass context to and from detour mobile device flows.
/// </summary>
public class WHSMobileAppDetourFlowAvailableFieldsProvider
{
    #WHSWorkExecuteControlElements

    protected WHSMenuItemName menuItemName;

    protected Map fieldIdToNameMapCopyFrom = new Map(Types::Integer, Types::String);
    protected Map fieldNameToIdMapCopyFrom = new Map(Types::String, Types::Integer);

    protected Map fieldIdToNameMapPasteIn = new Map(Types::Integer, Types::String);
    protected Map fieldNameToIdMapPasteIn = new Map(Types::String, Types::Integer);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromMenuItemName</Name>
				<Source><![CDATA[
    private void initFromMenuItemName(WHSMenuItemName _menuItemName)
    {
        menuItemName = _menuItemName;

        fieldIdToNameMapCopyFrom = new Map(Types::Integer, Types::String);
        fieldNameToIdMapCopyFrom = new Map(Types::String, Types::Integer);
        fieldIdToNameMapPasteIn = new Map(Types::Integer, Types::String);
        fieldNameToIdMapPasteIn = new Map(Types::String, Types::Integer);

        this.initializeAvailableFieldsMaps();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeAvailableFieldsMaps</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the collections for fields available to copy from and paste in for the selected menu item.
    /// </summary>
    protected void initializeAvailableFieldsMaps()
    {
        Set availFields = WHSMobileAppFlowTable::getAvailableFields(menuItemName);
        SetEnumerator availFieldsEnumerator = availFields.getEnumerator();

        while (availFieldsEnumerator.moveNext())
        {
            var edt = availFieldsEnumerator.current();
            var field = WHSMobileAppField::findByExtendedType(edt);
            if (field)
            {
                var fieldName = field.name();
                
                fieldIdToNameMapCopyFrom.insert(edt, fieldName);
                fieldNameToIdMapCopyFrom.insert(fieldName, edt);

                fieldIdToNameMapPasteIn.insert(edt, fieldName);
                fieldNameToIdMapPasteIn.insert(fieldName, edt);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>availableFieldsCopyFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the set of fields that can be used for passing context from the flow for specified menu item.
    /// </summary>
    /// <returns>A collection of fields.</returns>
    [Hookable(false)]
    public Map availableFieldsCopyFrom()
    {
        return fieldIdToNameMapCopyFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>availableFieldsPasteIn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the set of fields that can be used for passing context to the flow for specified menu item.
    /// </summary>
    /// <returns>A collection of fields.</returns>
    [Hookable(false)]
    public Map availableFieldsPasteIn()
    {
        return fieldIdToNameMapPasteIn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>availableFieldNamesCopyFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the set of field namess that can be used for passing context from the flow for specified menu item.
    /// </summary>
    /// <returns>A collection of fields.</returns>
    [Hookable(false)]
    public Map availableFieldNamesCopyFrom()
    {
        return fieldNameToIdMapCopyFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>availableFieldNamesPasteIn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the set of field names that can be used for passing context to the flow for specified menu item.
    /// </summary>
    /// <returns>A collection of fields.</returns>
    [Hookable(false)]
    public Map availableFieldNamesPasteIn()
    {
        return fieldNameToIdMapPasteIn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCopyFromFieldIdFromControl</Name>
				<Source><![CDATA[
    public Integer getCopyFromFieldIdFromControl(container _control)
    {       
        return str2Int(conPeek(_control, #inputType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPasteInFieldIdFromControl</Name>
				<Source><![CDATA[
    public Integer getPasteInFieldIdFromControl(container _control)
    {
        return str2Int(conPeek(_control, #inputType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPasteInFieldIdFromButton</Name>
				<Source><![CDATA[
    public Integer getPasteInFieldIdFromButton(container _control)
    {
        #WHSRF

        int fieldId;

        str controlName = conPeek(_control, #name);
        if (controlName == WHSMobileAppControlNames::RFOK)
        {
            fieldId = extendedTypeNum(ProcessGuideSubmitPageType);
        }
        else if (controlName == WHSMobileAppControlNames::RFRefresh)
        {
            fieldId = extendedTypeNum(ProcessGuideRefreshPageType);
        }

        return fieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPasteInFieldIdFromControlOrButton</Name>
				<Source><![CDATA[
    internal Integer getPasteInFieldIdFromControlOrButton(container _control)
    {
        var fieldId = this.getPasteInFieldIdFromControl(_control);
        if (!fieldId)
        {
            fieldId = this.getPasteInFieldIdFromButton(_control);
        }

        return fieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Factory method for instantiating a detour available fields provider based on the mobile device menu item name.
    /// </summary>
    /// <param name = "_menuItemName">Mobile device menu item name.</param>
    /// <returns>A new instance of <c>WHSMobileAppDetourFlowAvailableFieldsProvider</c> class.</returns>
    [Hookable(false)]
    public static WHSMobileAppDetourFlowAvailableFieldsProvider getProvider(WHSMenuItemName _menuItemName)
    {
        var workExecuteMode = WHSRFMenuItemTable::getWHSWorkExecuteMode(WHSRFMenuItemTable::find(_menuItemName));
        var workExecuteModeAttribute = new WHSWorkExecuteModeAttribute(workExecuteMode);

        var provider = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(WHSMobileAppDetourFlowAvailableFieldsProvider), workExecuteModeAttribute);
        if (!provider)
        {
            provider = new WHSMobileAppDetourFlowAvailableFieldsProvider();
        }

        provider.initFromMenuItemName(_menuItemName);

        return provider;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>