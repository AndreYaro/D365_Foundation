<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSourceDocSublineItem_EmplAdvLine_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Overrides parent to expose zero amounts for reversed <c>EmplAdvTable_RU</c>.
/// It is need for pass amolunt check when viewing distributions on reversed expense report
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(SourceDocumentLine_EmplAdvReport_RU), SourceDocumentLine_EmplAdvReport_RU::EmplAdvReportTaxLine)]
class TaxSourceDocSublineItem_EmplAdvLine_RU extends TaxSourceDocSublineItem
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateSourceDocumentAmountMap</Name>
				<Source><![CDATA[
    protected SourceDocumentAmountMap calculateSourceDocumentAmountMap()
    {
        SourceDocumentAmountMap ret = super();
        if (this.isRejected())
        {
            this.setMapAmounts(ret, 0);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRejected</Name>
				<Source><![CDATA[
    /// <summary>
    /// Linked expense report is rejected
    /// </summary>
    /// <returns>true, if rejected</returns>
    protected boolean isRejected()
    {
        EmplAdvLine_RU advLine = this.parmParentSourceDocumentLineItem().parmSourceDocumentLine().getSourceDocumentLineImplementation();
        return advLine.advTable().Status == EmplAdvStatus_RU::Rejected;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMapAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets all amounts in _map to _value
    /// </summary>
    /// <param name="_map">map to process</param>
    /// <param name="_value">value to set</param>
    protected void setMapAmounts(SourceDocumentAmountMap _map, Amount _value)
    {
        SourceDocumentAmountMapEnumerator i = _map.getEnumerator();
        while (i.moveNext())
        {
            i.currentValue().parmAmount(_value);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>