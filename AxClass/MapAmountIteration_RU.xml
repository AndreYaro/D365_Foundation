<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MapAmountIteration_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class MapAmountIteration_RU
{
    Map         listAmount;
    MapIterator mapIterator;
    Types       typesKey;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        void add(anytype    _key,
             Amount     _amount,
             boolean    _overWrite = false)
    {
        Amount  amount;

        if (listAmount.exists(_key))
        {
            if (_overWrite)
            {
                listAmount.remove(_key);
                amount = _amount;
            }
            else
            {
                amount = listAmount.lookup(_key) + _amount;
            }
        }
        else
        {
            amount = _amount;
        }
        listAmount.insert(_key, amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>begin</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        void begin()
    {
        mapIterator = new MapIterator(listAmount);
        mapIterator.begin();
    }

]]></Source>
			</Method>
			<Method>
				<Name>count</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        int count()
    {
        return listAmount.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        boolean exists(int _key)
    {
        return listAmount.exists(_key);
    }

]]></Source>
			</Method>
			<Method>
				<Name>key</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        int key()
    {
        return mapIterator.key();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookUp</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        Amount lookUp(int _key)
    {
        return listAmount.lookup(_key);
    }

]]></Source>
			</Method>
			<Method>
				<Name>more</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        boolean more()
    {
        if (mapIterator)
            return mapIterator.more();

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        void new(Types _typesKey)
    {
        typesKey    = _typesKey;
        listAmount  = new Map(typesKey, Types::Real);
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        void next()
    {
        if (mapIterator) mapIterator.next();
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        boolean remove(int _key)
    {
        return listAmount.remove(_key);
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeAll</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        void removeAll()
    {
        listAmount = new Map(typesKey, Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>value</Name>
				<Source><![CDATA[
        #define.nullKey('$nullKey$')
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    Amount value(anytype _key = #nullKey)
    {
        if ((typeof(_key) == Types::String) && (_key == #nullKey))
        {
            return mapIterator.value();
        }
        else
        {
            if (this.exists(_key))
            {
                return this.lookUp(_key);
            }
        }
        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>