<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceTypesForSearch</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>PriceGroupTypeToPriceTypeMapping</c> handles the mapping of <c>PriceType</c>.
/// </summary>
public class PriceTypesForSearch
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>retrievingPriceTypesForModuleSalesPurch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for retrieving a set of <c>PriceType</c> values for the given <c>ModuleSalesPurch</c> value.
    /// </summary>
    /// <param name = "_module">The <c>ModuleSalesPurch</c> value.</param>
    /// <param name = "_priceTypes">The set into which the <c>PriceType</c> values should be added.</param>
    static delegate void retrievingPriceTypesForModuleSalesPurch(ModuleSalesPurch _module, Set _priceTypes)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrievingPriceTypesForModuleSalesPurchEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a set of <c>PriceType</c> values for the given <c>ModuleSalesPurch</c> value.
    /// </summary>
    /// <param name = "_module">The <c>ModuleSalesPurch</c> value.</param>
    /// <param name = "_priceTypes">The set into which the <c>PriceType</c> values should be added.</param>
    [SubscribesTo(classStr(PriceTypesForSearch), staticdelegateStr(PriceTypesForSearch, retrievingPriceTypesForModuleSalesPurch))]
    public static void retrievingPriceTypesForModuleSalesPurchEventHandler(ModuleSalesPurch _module, Set _priceTypes)
    {
        switch (_module)
        {
            case ModuleSalesPurch::Sales:
                _priceTypes.add(PriceType::EndDiscSales);
                _priceTypes.add(PriceType::LineDiscSales);
                _priceTypes.add(PriceType::MultiLineDiscSales);
                _priceTypes.add(PriceType::PriceSales);
                break;
            case ModuleSalesPurch::Purch:
                _priceTypes.add(PriceType::EndDiscPurch);
                _priceTypes.add(PriceType::LineDiscPurch);
                _priceTypes.add(PriceType::MultiLineDiscPurch);
                _priceTypes.add(PriceType::PricePurch);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrievePriceTypesForModuleSalesPurch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a set of the <c>PriceType</c> values for the given <c>ModuleSalesPurch</c> value.
    /// </summary>
    /// <param name = "_module">The <c>ModuleSalesPurch</c> value.</param>
    /// <returns>A set with the <c>PriceType</c> values.</returns>
    public static set retrievePriceTypesForModuleSalesPurch(ModuleSalesPurch _module)
    {
        Set priceTypes = new Set(Types::Enum); 

        PriceTypesForSearch::retrievingPriceTypesForModuleSalesPurch(_module, priceTypes);
 
        return priceTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrievePriceTypes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a set of <c>PriceType</c> values for all the modules in <c>ModuleSalesPurch</c>.
    /// </summary>
    /// <returns>A set with <c>PriceType</c> values</returns>
    public static Set retrievePriceTypes()
    {
        Set priceTypes = new Set(Types::Enum);

        PriceTypesForSearch::retrievingPriceTypesForModuleSalesPurch(ModuleSalesPurch::Sales, priceTypes);
        PriceTypesForSearch::retrievingPriceTypesForModuleSalesPurch(ModuleSalesPurch::Purch, priceTypes);
 
        return priceTypes;


    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>