<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlReleaseUpdateScriptController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetControlReleaseUpdateScriptController</c> class is responsible for perfoming budget control updates.
/// </summary>
internal static class BudgetControlReleaseUpdateScriptController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existByNames</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>ReleaseUpdateScriptsLog</c> table exists.
    /// </summary>
    /// <param name = "_className">The value of <c>ClassName</c> field.</param>
    /// <param name = "_methodName">The value of <c>MethodName</c> field.</param>
    /// <returns>true if the specified record exists; otherwise, false.</returns>
    internal static boolean existByNames(ClassName _className, MethodName _methodName)
    {
        return strLen(_className)
            && strLen(_methodName)
            && (select firstonly RecId from ReleaseUpdateScriptsLog
                where ReleaseUpdateScriptsLog.ClassName == _className
                    && ReleaseUpdateScriptsLog.MethodName == _methodName).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertByNames</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in the <c>ReleaseUpdateScriptsLog</c> table with provided values.
    /// </summary>
    /// <param name = "_className">The value of <c>ClassName</c> field.</param>
    /// <param name = "_methodName">The value of <c>MethodName</c> field.</param>
    internal static void insertByNames(ClassName _className, MethodName _methodName)
    {
        #OCCRetryCount
        try
        {
            if (!BudgetControlReleaseUpdateScriptController::existByNames(_className, _methodName))
            {
                ReleaseUpdateScriptsLog releaseUpdateScriptLog;
                releaseUpdateScriptLog.ClassName = _className;
                releaseUpdateScriptLog.MethodName = _methodName;
                releaseUpdateScriptLog.insert();
            }
            
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::currentRetryCount() < #RetryNum)
            {
                retry;
            }
        }
                
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>