<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventQualityOrderTableCaseAssociationProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Plug in for case associations.
/// </summary>
[ExportMetadataAttribute('CaseIAssociation', 'QualityOrder'), ExportAttribute('Dynamics.AX.Application.CaseIAssociation')]
class InventQualityOrderTableCaseAssociationProvider implements CaseIAssociation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertCaseAssociation</Name>
				<Source><![CDATA[
    public void insertCaseAssociation(CaseAssociation _caseAssociation)
    {
        InventQualityOrderTable inventQualityOrderTable;
        select crosscompany ItemId from inventQualityOrderTable where inventQualityOrderTable.RecId == _caseAssociation.RefRecId;

        if (inventQualityOrderTable)
        {
            InventQualityOrderTableCaseAssociationProvider::insertItemCaseAssociation(inventQualityOrderTable.ItemId, _caseAssociation);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedCompany</Name>
				<Source><![CDATA[
    public SelectableDataArea getLinkedCompany(RefRecId _parentRecId)
    {
        InventQualityOrderTable inventQualityOrderTable;
        select crosscompany DataAreaId from inventQualityOrderTable where inventQualityOrderTable.RecId == _parentRecId;

        return inventQualityOrderTable.company();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedId</Name>
				<Source><![CDATA[
    public CaseAssociationLinkId getLinkedId(RefRecId _parentRecId)
    {
        InventQualityOrderTable inventQualityOrderTable;
        select crosscompany QualityOrderId from inventQualityOrderTable where inventQualityOrderTable.RecId == _parentRecId;

        return inventQualityOrderTable.QualityOrderId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRecIdWithNaturalKey</Name>
				<Source><![CDATA[
    public RefRecId getRecIdWithNaturalKey(CaseAssociationLinkId _naturalKey)
    {
        InventQualityOrderTable inventQualityOrderTable;
        select RecId from inventQualityOrderTable where inventQualityOrderTable.QualityOrderId == _naturalKey;

        return inventQualityOrderTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedName</Name>
				<Source><![CDATA[
    public CaseLinkedName getLinkedName(RefRecId _parentRecId)
    {
        InventQualityOrderTable inventQualityOrderTable;
        select crosscompany ItemId from inventQualityOrderTable where inventQualityOrderTable.RecId == _parentRecId;

        return inventQualityOrderTable.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJumpRefMenuItem</Name>
				<Source><![CDATA[
    public str getJumpRefMenuItem(args _args, CaseAssociation _association)
    {
        InventQualityOrderTable inventQualityOrderTable;
        
        //We need this code in order not to lose the localization data in the opened form.
        InventQualityOrderTable inventQualityOrderTableCrossCompany;

        select firstonly crosscompany DataAreaId, RecId from inventQualityOrderTableCrossCompany
            where inventQualityOrderTableCrossCompany.RecId == _association.RefRecId;

        if (inventQualityOrderTableCrossCompany.Recid)
        {
            changecompany (inventQualityOrderTableCrossCompany.DataAreaId)
            {
                select firstonly inventQualityOrderTable where inventQualityOrderTable.RecId == _association.RefRecId;
            }
        }

        _args.record(inventQualityOrderTable);
        return menuitemdisplaystr(InventQualityOrderTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertItemCaseAssociation</Name>
				<Source><![CDATA[
    public static void insertItemCaseAssociation(ItemId _itemId, CaseAssociation _caseAssociation)
    {
        InventTable inventTable = inventTable::find(_itemId);

        _caseAssociation.insertCaseAssociation(CaseEntityType::Item, inventTable.RecId);

        if (CaseDetail::findRec(_caseAssociation.CaseRecId).caseCategory().CategoryType  == CaseCategoryType::EngineeringChange)
        {
            EcoResProduct ecoResProduct = EcoResProduct::find(inventTable.Product);
            if (!caseAssociation::find(ecoResProduct, _caseAssociation.CaseRecId).RecId)
            {
                _caseAssociation.insertCaseAssociation(CaseEntityType::Product, ecoResProduct.RecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookup</Name>
				<Source><![CDATA[
    public void performLookup(FormStringControl callerControl, CaseAssociation _caseAssociation)
    {
        SysTableLookup oSysTableLookup = SysTableLookup::newParameters(tablenum(InventQualityOrderTable), callerControl);

        Query oQuery = new Query();
        QueryBuildDataSource oqbds = oQuery.addDataSource(tablenum(InventQualityOrderTable));
        oqbds.addSortField(fieldnum(InventQualityOrderTable, QualityOrderId), SortOrder::Descending);

        oSysTableLookup.addLookupfield(fieldnum(InventQualityOrderTable, QualityOrderId));
        oSysTableLookup.addLookupfield(fieldnum(InventQualityOrderTable, ItemId));
        oSysTableLookup.addLookupfield(fieldnum(InventQualityOrderTable, ItemName));
        oSysTableLookup.addLookupfield(fieldnum(InventQualityOrderTable, OrderStatus));
        oSysTableLookup.parmQuery(oQuery);
        oSysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCaseEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the <c>CaseAssociation.getCaseEntityType()</c> event.
    /// </summary>
    /// <param name="_refTableId">
    /// The table ID of the table associated with the case.
    /// </param>
    /// <param name = "_eventArgs">
    /// The arguments for the event.
    /// </param>
    [SubscribesTo(tableStr(CaseAssociation), delegatestr(CaseAssociation, getCaseEntityType))]
    public static void getCaseEntityType(TableId _refTableId, CaseAssociationGetEntityTypeEventArgs _eventArgs)
    {
        if (_refTableId == tablenum(InventQualityOrderTable))
        {
            _eventArgs.parmEntityType(CaseEntityType::QualityOrder);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>