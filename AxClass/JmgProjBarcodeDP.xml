<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgProjBarcodeDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgProjBarcodeDP</c> class is the Report Data Provider class that supports the
///    <c>JmgProjBarcode</c> SSRS report.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(JmgProjBarcode))
]
public class JmgProjBarcodeDP extends SRSReportDataProviderBase
{
    JmgTmpProjBarcode   jmgTmpProjBarcode;
    JmgBarcodeHelper    barcodeHelper;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getJmgTmpProjBarcode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches data from JmgTmpProjBarcode Table.
    /// </summary>
    /// <returns>
    ///  JmgTmpProjBarcode Data for the report.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(JmgTmpProjBarcode))]
    public JmgTmpProjBarcode getJmgTmpProjBarcode()
    {
        select jmgTmpProjBarcode;
        return jmgTmpProjBarcode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Inserts data into the temporary table.
    /// </summary>
    /// <param name="_projTable">
    /// An <c>ProjTable</c> record.
    /// </param>
    /// <param name="_projActivity">
    /// An <c>ProjActivity</c> record.
    /// </param>
    /// <param name="_smmActivities">
    /// A <c>smmActivities</c> record.
    /// </param>
    protected void insertIntoTmp(
        ProjTable       _projTable,
        ProjActivity    _projActivity,
        smmActivities   _smmActivities)
    {
        // encode barcodes
        jmgTmpProjBarcode.ActivityBarcode  = barcodeHelper.encodeBarcode(_projActivity.JobId);
        jmgTmpProjBarcode.ProjTableBarcode     = barcodeHelper.encodeBarcode(_projTable.JobId);

        // project fields
        jmgTmpProjBarcode.ProjectId = _projTable.ProjId;
        jmgTmpProjBarcode.ProjectJobId = _projTable.JobId;
        jmgTmpProjBarcode.ProjectName = _projTable.Name;

        // project activity fields
        jmgTmpProjBarcode.ActivityNumber = _projActivity.ActivityNumber;
        jmgTmpProjBarcode.ActivityJobId = _projActivity.JobId;

        // Activity fields
        jmgTmpProjBarcode.ActivityDescription = _smmActivities.Purpose;

        jmgTmpProjBarcode.insert();
        jmgTmpProjBarcode.clear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    public void processReport()
    {
        QueryRun                queryRun = new QueryRun(this.parmQuery());
        ProjTable               projTable;
        ProjActivity            projActivity;
        smmActivities           smmActivities;
        QueryBuildDataSource    qbdsProjActivity;

        boolean hasRangeValues(QueryBuildDataSource _queryBuildDataSource)
        {
            int     i;
            boolean retVal;

            retVal = false;
            for (i = 1; i <= _queryBuildDataSource.rangeCount(); i++)
            {
                if (_queryBuildDataSource.range(i).value() != '')
                {
                    retVal = true;
                    break;
                }
            }
            return retVal;
        }

        barcodeHelper = JmgBarcodeHelper::construct();

        // If no value has been set for any ranges on projActivity, change the joinmode to outerjoin
        // If the query is defined as outerjoin from the start, no activity number is added to the sysquery form.
        qbdsProjActivity = queryRun.query().dataSourceTable(tableNum(ProjActivity));
        if (!hasRangeValues(qbdsProjActivity))
        {
            qbdsProjActivity.joinMode(JoinMode::OuterJoin);
        }

        while (queryRun.next())
        {
            projTable       = queryRun.get(tableNum(ProjTable));
            projActivity    = queryRun.get(tableNum(ProjActivity));
            smmActivities   = queryRun.get(tableNum(smmActivities));

            this.insertIntoTmp(projTable, projActivity, smmActivities);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
