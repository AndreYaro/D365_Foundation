<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveProcessingDataCleanupInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for wave processing data cleanup instrumentation logging.
/// </summary>
internal final class WHSWaveProcessingDataCleanupInstrumentationActivities
{
    private const str ActivityNamePrefix = 'WaveProcessingDataCleanup.';

    private WHSInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static WHSWaveProcessingDataCleanupInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSWaveProcessingDataCleanupInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadLineUpdate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext loadLineUpdate()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'loadLineUpdate'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryCleanupErroredWave</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext tryCleanupErroredWave()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'tryCleanupErroredWave'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logWhsLoadLineUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes information for wave processing data cleanup of update load line task.
    /// </summary>
    /// <param name = "_message">The log message.</param>
    /// <param name = "_loadLineRecId">The load line record id.</param>
    /// <param name = "_waveRecId">The wave record id.</param>
    /// <param name = "_waveExecutionId">The wave execution id.</param>
    public void logWhsLoadLineUpdate(
        str                     _message,
        RefRecId                _loadLineRecId,
        RefRecId                _waveRecId,
        WHSWaveExecutionID      _waveExecutionId)
    {
        logger.logInformation(
            strFmt('WHSWaveProcessingDataCleanup; Update load line; Skipped throwing error; Message: %1, LoadLineRecId %2, WaveRecId: %3, HashedWaveExecutionID: %4',
                _message,
                _loadLineRecId,
                _waveRecId,
                TextBuffer::strHashKey(_waveExecutionId)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>