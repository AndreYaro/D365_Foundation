<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjUpdReportedFinished</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjUpdReportedFinished extends ProjUpd
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateProject</Name>
				<Source><![CDATA[
    protected void updateProject()
    {
        VendDefaultAccounts                 vendDefaultAccounts;
        DimensionAttributeValueCombination  dimAttrValueCombo;

        projTable.Status    = ProjStatus::Completed;
        projTable.update();

        delete_from vendDefaultAccounts
            where vendDefaultAccounts.LedgerJournalACType == LedgerJournalACType::Project
            exists join dimAttrValueCombo where
                dimAttrValueCombo.RecId == vendDefaultAccounts.LedgerDimension &&
                dimAttrValueCombo.DisplayValue == projTable.ProjId;

        ResReservationFacade::releaseFinishedProj(projTable.ProjId, DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    protected boolean validate()
    {
        boolean      ret;
        SalesTable   salesTable;
        List         list = new List(Types::String);
        ListIterator li;

        ret = super();

        while select SalesId from salesTable
            where salesTable.ProjId         == projTable.ProjId &&
                  salesTable.SalesType      == SalesType::Subscription &&
                  salesTable.SalesStatus    == SalesStatus::Backorder
        {
            list.addEnd(salesTable.SalesId);
        }

        if (!list.empty())
        {
            warning("@SYS81667");
            li = new ListIterator(list);
            while (li.more())
            {
                info ("@SYS9694" + ': ' + li.value());
                li.next();
            }
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>