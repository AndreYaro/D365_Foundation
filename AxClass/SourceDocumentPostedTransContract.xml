<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocumentPostedTransContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SourceDocumentPostedTransContract</c> class is the data contract for the <c>SourceDocumentPostedTrans</c> report.
/// </summary>
[
    DataContractAttribute,
    SysOperationGroupAttribute(identifierStr(Date), "@SYS7402", '1'),
    SysOperationGroupAttribute(identifierStr(MainAccount), "@SYS333959", '2'),
    SysOperationGroupAttribute(identifierStr(SourceDocument), "@SYS127863", '3'),
    SysOperationGroupAttribute(identifierStr(Project), "@SYS80304", '4'),
    SysOperationGroupAttribute(identifierStr(Printout), "@SYS12608", '5'),
    SysOperationContractProcessingAttribute(classStr(SourceDocumentPostedTransUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class SourceDocumentPostedTransContract implements SysOperationValidatable
{
    boolean        showLedgerAccountTypesOnly;
    boolean        showFullLedgerAccount;
    boolean        showDimensions;
    TransDate      fromDate;
    TransDate      toDate;
    DateCode       dateCode;
    EnumName       sourceDocumentType;
    RefTableId     sourceDocumentRelationType;
    MainAccountNum fromMainAccount;
    MainAccountNum toMainAccount;
    Num            documentNumber;
    ProjId         projId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDateCode</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(DateCode)),
        SysOperationLabelAttribute(literalStr("@SYS22526")),
        SysOperationHelpTextAttribute(literalStr("@SYS60051")),
        SysOperationGroupMemberAttribute(identifierStr(Date)),
        SysOperationDisplayOrderAttribute('1')
    ]
    public DateCode parmDateCode(DateCode _dateCode = dateCode)
    {
        dateCode = _dateCode;
        return dateCode;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentNumber</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(DocumentNumber)),
        SysOperationGroupMemberAttribute(identifierStr(SourceDocument)),
        SysOperationLabelAttribute(literalStr("@SYS8434")),
        SysOperationHelpTextAttribute(literalStr("@SYS8434")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public Num parmDocumentNumber(Num _documentNumber = documentNumber)
    {
        documentNumber = _documentNumber;
        return documentNumber;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(FromDate)),
        SysOperationLabelAttribute(literalStr("@SYS5209")),
        SysOperationHelpTextAttribute(literalStr("@SYS67")),
        SysOperationGroupMemberAttribute(identifierStr(Date)),
        SysOperationDisplayOrderAttribute('2')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmFromMainAccount</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(FromMainAccount)),
        SysOperationGroupMemberAttribute(identifierStr(MainAccount)),
        SysOperationLabelAttribute(literalStr("@SPS2418")),
        SysOperationHelpTextAttribute(literalStr("@SYS4020056")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public MainAccountNum parmFromMainAccount(MainAccountNum _fromMainAccount = fromMainAccount)
    {
        fromMainAccount = _fromMainAccount;
        return fromMainAccount;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(Project)),
        SysOperationGroupMemberAttribute(identifierStr(Project)),
        SysOperationLabelAttribute(literalStr("@SYS80304"))
    ]
    public ProjId parmProjId(ProjId _projId = projId)
    {
        projId = _projId;
        return projId;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmShowDimensions</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ShowDimensions)),
        SysOperationLabelAttribute(literalStr("@SYS138491")),
        SysOperationHelpTextAttribute(literalStr("@SYS327423")),
        SysOperationGroupMemberAttribute(identifierStr(Printout)),
        SysOperationDisplayOrderAttribute('3')
    ]
    public boolean parmShowDimensions(boolean _showDimensions = showDimensions)
    {
        showDimensions = _showDimensions;
        return showDimensions;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmShowFullLedgerAccount</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ShowFullLedgerAccount)),
        SysOperationLabelAttribute(literalStr("@SYS8343")),
        SysOperationHelpTextAttribute(literalStr("@SYS327424")),
        SysOperationGroupMemberAttribute(identifierStr(Printout)),
        SysOperationDisplayOrderAttribute('2')
    ]
    public boolean parmShowFullLedgerAccount(boolean _showFullLedgerAccount = showFullLedgerAccount)
    {
        showFullLedgerAccount = _showFullLedgerAccount;
        return showFullLedgerAccount;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmShowLedgerAccountTypeOnly</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ShowLedgerAccountTypeOnly)),
        SysOperationLabelAttribute(literalStr("@SYS4000558")),
        SysOperationHelpTextAttribute(literalStr("@SYS77888")),
        SysOperationGroupMemberAttribute(identifierStr(Printout)),
        SysOperationDisplayOrderAttribute('1')
    ]
    public boolean parmShowLedgerAccountTypeOnly(boolean _showLedgerAccountTypesOnly = showLedgerAccountTypesOnly)
    {
        showLedgerAccountTypesOnly = _showLedgerAccountTypesOnly;
        return showLedgerAccountTypesOnly;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentRelationType</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public RefTableId parmSourceDocumentRelationType(RefTableId _sourceDocumentRelationType = sourceDocumentRelationType)
    {
        sourceDocumentRelationType = _sourceDocumentRelationType;
        return sourceDocumentRelationType;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentType</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(SourceDocumentType)),
        SysOperationGroupMemberAttribute(identifierStr(SourceDocument)),
        SysOperationLabelAttribute(literalStr("@SYS317515")),
        SysOperationHelpTextAttribute(literalStr("@SYS317488")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public EnumName parmSourceDocumentType(EnumName _sourceDocumentType = sourceDocumentType)
    {
        sourceDocumentType = _sourceDocumentType;
        return sourceDocumentType;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ToDate)),
        SysOperationLabelAttribute(literalStr("@SYS14656")),
        SysOperationHelpTextAttribute(literalStr("@SYS67")),
        SysOperationGroupMemberAttribute(identifierStr(Date)),
        SysOperationDisplayOrderAttribute('3')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmToMainAccount</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ToMainAccount)),
        SysOperationGroupMemberAttribute(identifierStr(MainAccount)),
        SysOperationLabelAttribute(literalStr("@SPS2419")),
        SysOperationHelpTextAttribute(literalStr("@SYS4020057")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public MainAccountNum parmToMainAccount(MainAccountNum _toMainAccount = toMainAccount)
    {
        toMainAccount = _toMainAccount;
        return toMainAccount;
    }
]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the <c>SourceDocumentPostedTrans</c> report parameters.
    /// </summary>
    /// <returns>
    /// True if all parameters are valid; otherwise false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!dateCode && (!fromDate || !toDate))
        {
            isValid = checkFailed("@SPS869");
        }

        if (fromDate && toDate && (fromDate > toDate))
        {
            isValid = checkFailed(
                        strFmt(
                            "@SYS55013",
                            date2StrUsr(fromDate, DateFlags::FormatAll),
                            date2StrUsr(toDate, DateFlags::FormatAll)));
        }

        if (fromMainAccount && toMainAccount && (toMainAccount < fromMainAccount))
        {
            isValid = checkFailed("@SPS1027");
        }
        else if (fromMainAccount || toMainAccount)
        {
            if (!fromMainAccount)
            {
                isValid = checkFailed(strFmt("@SYS331078", "@SPS2418"));
            }

            if (!toMainAccount)
            {
                isValid = checkFailed(strFmt("@SYS331078", "@SPS2419"));
            }
        }

        return isValid;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>