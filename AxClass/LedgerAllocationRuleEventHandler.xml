<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAllocationRuleEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerAllocationRuleEventHandler</c> class contains event handlers for the <c>LedgerAllocationRule</c> table and form.
/// </summary>
public static class LedgerAllocationRuleEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>LedgerAllocationRule_onValidatingField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for validating field.
    /// </summary>
    /// <param name="sender">The <c>LedgerAllocationRule</c> record.</param>
    /// <param name="e">The event arguments.</param>
    [DataEventHandler(tableStr(LedgerAllocationRule), DataEventType::ValidatingField)]
    public static void LedgerAllocationRule_onValidatingField(Common sender, DataEventArgs e)
    {
        LedgerAllocationRule ledgerAllocationRule = sender as LedgerAllocationRule;
        ValidateFieldEventArgs ve = e;
        FieldId fieldId = ve.parmFieldId();

        boolean returnValue = ve.parmValidateResult();

        switch (fieldId)
        {
            case fieldNum(LedgerAllocationRule, JournalName):
                if (ledgerAllocationRule.JournalName && !LedgerAllocationRule_Extension::isJournalValid(ledgerAllocationRule.JournalName))
                {
                    returnValue = checkFailed("@SYS106183");
                }
                break;
        }

        ve.parmValidateResult(returnValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>LedgerAllocationRule_JournalName_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a custom lookup for the <c>LedgerJournalName</c> reference, restricted by the journal type of 'Allocation'.
    /// </summary>
    /// <param name="sender">The <c>FormControl</c> reference.</param>
    /// <param name="e">The <c>FormControlEventArgs</c>.</param>
    [FormControlEventHandler(formControlStr(LedgerAllocationRule, LedgerAllocationRule_JournalName), FormControlEventType::Lookup)]
    public static void LedgerAllocationRule_JournalName_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        FormStringControl _ctrl = sender;
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(LedgerJournalName), _ctrl, true);
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(LedgerJournalName));
        QueryBuildRange queryBuildRangeJournalType = queryBuildDataSource.addRange(fieldnum(LedgerJournalName, JournalType));

        sysTableLookup.addLookupfield(fieldnum(LedgerJournalName, JournalName));
        sysTableLookup.addLookupfield(fieldnum(LedgerJournalName, Name));

        queryBuildRangeJournalType.value(enum2str(LedgerJournalType::Allocation));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>