<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustSalesAnalysisByInvoice_NADP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustSalesAnalysisByInvoice_NADP</c> class fetches records for the <c>CustSalesAnalysisByInvoice_NAV2</c> report.
/// </summary>
[SRSReportQueryAttribute(queryStr(CustSalesAnalysisByInvoice_NA))]
public final class CustSalesAnalysisByInvoice_NADP extends SrsReportDataProviderPreProcessTempDB
{
    private CustSalesAnalysisByInvoice_NATmp custSalesAnalysisByInvoice_NATmp;
    private CustInvoiceJour custInvoiceJour;
    private DirPartyTable dirPartyTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustSalesAnalysisByInvoice_NATmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the full data from the <c>CustSalesAnalysisByInvoice_NATmp</c> temporary table.
    /// </summary>
    /// <returns>
    /// The <c>CustSalesAnalysisByInvoice_NATmp</c> temporary table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(CustSalesAnalysisByInvoice_NATmp)),
        Hookable(false)
    ]
    public CustSalesAnalysisByInvoice_NATmp getCustSalesAnalysisByInvoice_NATmp()
    {
        select custSalesAnalysisByInvoice_NATmp;
        return custSalesAnalysisByInvoice_NATmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCustSalesAnalysisByInvoice_NATmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts records to <c>CustSalesAnalysisByInvoice_NATmp</c> temporary table.
    /// </summary>
    private void insertCustSalesAnalysisByInvoice_NATmp()
    {
        custSalesAnalysisByInvoice_NATmp.InvoiceAmountMST = custInvoiceJour.InvoiceAmountMST;        
        custSalesAnalysisByInvoice_NATmp.InvoiceDate = custInvoiceJour.InvoiceDate;
        custSalesAnalysisByInvoice_NATmp.InvoiceId = custInvoiceJour.InvoiceId;
        custSalesAnalysisByInvoice_NATmp.OrderAccount = custInvoiceJour.OrderAccount;
        custSalesAnalysisByInvoice_NATmp.SalesBalanceMST = custInvoiceJour.SalesBalanceMST;
        custSalesAnalysisByInvoice_NATmp.SumMarkupMST = custInvoiceJour.SumMarkupMST;
        custSalesAnalysisByInvoice_NATmp.SumTaxMST = custInvoiceJour.SumTaxMST;
        custSalesAnalysisByInvoice_NATmp.SalesId = custInvoiceJour.SalesId;
        custSalesAnalysisByInvoice_NATmp.CostValue = custInvoiceJour.costValue();
        custSalesAnalysisByInvoice_NATmp.Name = dirPartyTable.Name;

        custSalesAnalysisByInvoice_NATmp.insert();
        custSalesAnalysisByInvoice_NATmp.clear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Inserts records based on the parameters entered.
    /// </summary>
    [Hookable(false)]
    public void processReport()
    {
        QueryRun queryRun = new QueryRun(this.parmQuery());
        custSalesAnalysisByInvoice_NATmp.setConnection(this.parmUserConnection());

        while (queryRun.next())
        {
            custInvoiceJour = queryRun.get(tablenum(CustInvoiceJour));
            dirPartyTable = queryRun.get(tablenum(DirPartyTable));
            this.insertCustSalesAnalysisByInvoice_NATmp();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>