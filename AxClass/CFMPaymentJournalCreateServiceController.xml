<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentJournalCreateServiceController</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class cfmPaymentJournalCreateServiceController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        Object caller;

        CFMJournalTable journalTable;
        CFMPaymentJournalCreateContract dataContract;

        CFMPaymentJournalCreateServiceController serviceController = new CFMPaymentJournalCreateServiceController(
            classStr(CFMPaymentJournalCreateService),
            methodStr(CFMPaymentJournalCreateService, create));

        dataContract = serviceController.getDataContractObject() as CFMPaymentJournalCreateContract;

        if (dataContract == null || _args.caller() == null)
        {
            throw error(Error::missingParameter(null));
        }

        caller = _args.caller();

        if (caller != null && formHasMethod(caller, identifierStr(paymentJournal)))
        {
            journalTable = _args.caller().paymentJournal();
            dataContract.parmJournalTable(journalTable);
        }
        else
        {
            dataContract.parmJournalTable(null);
        }

        serviceController.parmExecutionMode(SysOperationExecutionMode::Synchronous);
        serviceController.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCaption</Name>
				<Source><![CDATA[
    protected ClassDescription defaultCaption()
    {
        return "@Cashflowmanagement:GeneratePaymentsForPaymSchedJournal";
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyDataContractQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds default dimensions from CFMParamters set
    /// </summary>
    /// <param name="_dataContract">
    /// Contract where query declared
    /// </param>
    private void modifyDataContractQuery(CFMPaymentJournalCreateContract _dataContract)
    {
        DimensionAttribute dimAttr;
        DimensionHierarchyLevel dimHierLevel;
        DimensionProvider dimensionProvider = new DimensionProvider();

        CFMParameters parameters = CFMParameters::findInCentralizedPaymentsCompany();
        DimensionHierarchy dimHier = DimensionHierarchy::find(parameters.DimensionSet);

        Query query = new Query(queryStr(CFMPaymentRequestJourPayment));

        QueryBuildDataSource qbds = query.dataSourceTable(tableNum(CFMPaymentRequestTable));

        while select Name from  dimAttr
        join DimensionAttribute, DimensionHierarchy from  dimHierLevel
            where dimHierLevel.DimensionAttribute == dimAttr.RecId
                && dimHierLevel.DimensionHierarchy == dimHier.RecId
        {
            dimensionProvider.addAttributeRangeToQuery(query, qbds.name(), fieldStr(CFMPaymentRequestTable, DefaultDimension), DimensionComponent::DimensionAttribute, SysQuery::valueEmptyString(), dimAttr.Name, true);
        }

        _dataContract.setQuery(query);
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>