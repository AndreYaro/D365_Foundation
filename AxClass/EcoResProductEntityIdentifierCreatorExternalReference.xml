<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityIdentifierCreatorExternalReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The product entity external reference identifier creator class.
/// </summary>
[EcoResProductEntityIdentifierCreatorAttribute(EcoResProductEntityIdentifierCodeType::ExternalReference)]
public class EcoResProductEntityIdentifierCreatorExternalReference extends EcoResProductEntityIdentifierCreator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createIdentifiers</Name>
				<Source><![CDATA[
    public void createIdentifiers()
    {
        ExtCodeTable            extCode;
        ExtCodeValueTable       extCodeValue;
        InventTable             inventTable;
        Map                     externalValueToLegalEntityMap = new Map(Types::String, Types::String);

        while select crosscompany extCodeValue
            exists join extCode
            where extCode.ExtCodeId == identifierCode.Id
                && extCode.ExtCodeTableId == extCodeValue.ExtCodeTableTableId
                && extCode.ExtCodeId == extCodeValue.ExtCodeId
            exists join inventTable
                where inventTable.Product == inventTableProduct
                    && inventTable.RecId == extCodeValue.ExtCodeRelationRecId
                    && inventTable.TableId == extCodeValue.ExtCodeRelationTableId
        {
            if (extCodeValue.ExtCodeValue)
            {
                externalValueToLegalEntityMap = this.updateMap(extCodeValue.ExtCodeValue, extCodeValue.DataAreaId, externalValueToLegalEntityMap);
            }

            this.createIdentifiersFromData(externalValueToLegalEntityMap);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>