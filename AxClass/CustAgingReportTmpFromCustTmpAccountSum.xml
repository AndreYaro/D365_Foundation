<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAgingReportTmpFromCustTmpAccountSum</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustAgingReportTmpFromCustTmpAccountSum</c> class copies values from the <c>CustTmpAccountSum</c> table into the <c>CustAgingReportTmp</c> table.
/// </summary>
public final class CustAgingReportTmpFromCustTmpAccountSum extends SysQueryInsertRecordSet
{
    private CustAgingReportDPParameters custAgingReportDPParameters;

    private int custTmpAccountSumDataSourceId;
    private int custVendTransAgingDataSourceId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustTmpAccountSumDataSourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data source ID for <c>CustTmpAccountSum</c> table.
    /// </summary>
    /// <returns>The unique ID.</returns>
    protected int getCustTmpAccountSumDataSourceId()
    {
        return custTmpAccountSumDataSourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustVendTransAgingDataSourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data source ID for <c>CustVendTransAging</c> table.
    /// </summary>
    /// <returns>The unique ID.</returns>
    protected int getCustVendTransAgingDataSourceId()
    {
        return custVendTransAgingDataSourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    protected void initFieldMapping()
    {
        if (custAgingReportDPParameters.reverseAmountsAndHeadings)
        {
            if (custAgingReportDPParameters.ledgerCurrencySelection == LedgerCurrencySelection::Accounting)
            {
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance01), fieldStr(CustAgingReportTmp, Balance01));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance07), fieldStr(CustAgingReportTmp, Balance02));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance06), fieldStr(CustAgingReportTmp, Balance03));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance05), fieldStr(CustAgingReportTmp, Balance04));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance04), fieldStr(CustAgingReportTmp, Balance05));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance03), fieldStr(CustAgingReportTmp, Balance06));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance02), fieldStr(CustAgingReportTmp, Balance07));
            }
            else if (custAgingReportDPParameters.ledgerCurrencySelection == LedgerCurrencySelection::Reporting)
            {
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance01ReportingCurrency), fieldStr(CustAgingReportTmp, Balance01));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance07ReportingCurrency), fieldStr(CustAgingReportTmp, Balance02));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance06ReportingCurrency), fieldStr(CustAgingReportTmp, Balance03));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance05ReportingCurrency), fieldStr(CustAgingReportTmp, Balance04));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance04ReportingCurrency), fieldStr(CustAgingReportTmp, Balance05));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance03ReportingCurrency), fieldStr(CustAgingReportTmp, Balance06));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance02ReportingCurrency), fieldStr(CustAgingReportTmp, Balance07));
            }

            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance01cur), fieldStr(CustAgingReportTmp, Balance01cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance07cur), fieldStr(CustAgingReportTmp, Balance02cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance06cur), fieldStr(CustAgingReportTmp, Balance03cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance05cur), fieldStr(CustAgingReportTmp, Balance04cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance04cur), fieldStr(CustAgingReportTmp, Balance05cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance03cur), fieldStr(CustAgingReportTmp, Balance06cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance02cur), fieldStr(CustAgingReportTmp, Balance07cur));
        }
        else
        {
            if (custAgingReportDPParameters.ledgerCurrencySelection == LedgerCurrencySelection::Accounting)
            {
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance01), fieldStr(CustAgingReportTmp, Balance01));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance02), fieldStr(CustAgingReportTmp, Balance02));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance03), fieldStr(CustAgingReportTmp, Balance03));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance04), fieldStr(CustAgingReportTmp, Balance04));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance05), fieldStr(CustAgingReportTmp, Balance05));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance06), fieldStr(CustAgingReportTmp, Balance06));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance07), fieldStr(CustAgingReportTmp, Balance07));
            }
            else if (custAgingReportDPParameters.ledgerCurrencySelection == LedgerCurrencySelection::Reporting)
            {
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance01ReportingCurrency), fieldStr(CustAgingReportTmp, Balance01));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance02ReportingCurrency), fieldStr(CustAgingReportTmp, Balance02));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance03ReportingCurrency), fieldStr(CustAgingReportTmp, Balance03));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance04ReportingCurrency), fieldStr(CustAgingReportTmp, Balance04));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance05ReportingCurrency), fieldStr(CustAgingReportTmp, Balance05));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance06ReportingCurrency), fieldStr(CustAgingReportTmp, Balance06));
                this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance07ReportingCurrency), fieldStr(CustAgingReportTmp, Balance07));
            }

            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance01cur), fieldStr(CustAgingReportTmp, Balance01cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance02cur), fieldStr(CustAgingReportTmp, Balance02cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance03cur), fieldStr(CustAgingReportTmp, Balance03cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance04cur), fieldStr(CustAgingReportTmp, Balance04cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance05cur), fieldStr(CustAgingReportTmp, Balance05cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance06cur), fieldStr(CustAgingReportTmp, Balance06cur));
            this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Balance07cur), fieldStr(CustAgingReportTmp, Balance07cur));
        }

        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, TransDate), fieldStr(CustAgingReportTmp, TransDate));
        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, InvoiceId), fieldStr(CustAgingReportTmp, InvoiceId));
        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Voucher), fieldStr(CustAgingReportTmp, Voucher));
        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, AccountNum), fieldStr(CustAgingReportTmp, AccountNum));
        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Name), fieldStr(CustAgingReportTmp, Name));
        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, Txt), fieldStr(CustAgingReportTmp, Txt));
        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, CurrencyCode), fieldStr(CustAgingReportTmp, Currency));
        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, GroupId), fieldStr(CustAgingReportTmp, CustGroup));
        this.mapField(custTmpAccountSumDataSourceId, fieldStr(CustTmpAccountSum, BillingClassification), fieldStr(CustAgingReportTmp, BillingClassification));

        this.mapField(custVendTransAgingDataSourceId, fieldStr(CustVendTransAging, SortOrder), fieldStr(CustAgingReportTmp, SortOrder));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected Query initQuery()
    {
        Query query = new Query();
        QueryBuildDataSource qbdsTmpAccountSum = query.addDataSource(tableNum(CustTmpAccountSum));
        qbdsTmpAccountSum.cursor(custAgingReportDPParameters.custTmpAccountSum);

        QueryBuildDataSource qbdsCustVendTransAging = qbdsTmpAccountSum.addDataSource(tableNum(CustVendTransAging));
        qbdsCustVendTransAging.addLink(fieldNum(CustTmpAccountSum, AccountNum), fieldNum(CustVendTransAging, AccountNum));
        qbdsCustVendTransAging.joinMode(JoinMode::InnerJoin);
        qbdsCustVendTransAging.cursor(custAgingReportDPParameters.custVendTransAging);

        query.clearAllFields();

        custTmpAccountSumDataSourceId = qbdsTmpAccountSum.uniqueId();
        custVendTransAgingDataSourceId = qbdsCustVendTransAging.uniqueId();

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onExecuted</Name>
				<Source><![CDATA[
    protected void onExecuted()
    {
        CustAgingReportTmp custAgingReportTmp = custAgingReportDPParameters.custAgingReportTmp;

        if (custAgingReportDPParameters.reverseAmountsAndHeadings)
        {
            update_recordset custAgingReportTmp
                setting AsOfDate = custAgingReportDPParameters.asOfDate,
                    HeadingAccount = custAgingReportDPParameters.headingAccount,
                    HeadingName = custAgingReportDPParameters.headingName,
                    HeadingDate = custAgingReportDPParameters.headingDate,
                    Heading1 = custAgingReportDPParameters.heading01,
                    Heading2DateValue = custAgingReportDPParameters.heading02,
                    Heading2 = custAgingReportDPParameters.heading07Text,
                    Heading3 = custAgingReportDPParameters.heading03,
                    Heading4 = custAgingReportDPParameters.heading04,
                    Heading5 = custAgingReportDPParameters.heading05,
                    Heading6 = custAgingReportDPParameters.heading06,
                    Heading7DateValue = custAgingReportDPParameters.heading07,
                    Heading7 = custAgingReportDPParameters.heading02Text,
                    Heading8 = custAgingReportDPParameters.heading011,
                    Heading9 = custAgingReportDPParameters.heading03,
                    Heading10 = custAgingReportDPParameters.heading031,
                    Heading11 = custAgingReportDPParameters.heading041,
                    Heading12 = custAgingReportDPParameters.heading051,
                    Heading13 = custAgingReportDPParameters.heading061,
                    Heading14 = custAgingReportDPParameters.heading061,
                    HeadingAgingBucketDescription02 = custAgingReportDPParameters.headingAgingBucketDescription02,
                    HeadingAgingBucketDescription03 = custAgingReportDPParameters.headingAgingBucketDescription03,
                    HeadingAgingBucketDescription04 = custAgingReportDPParameters.headingAgingBucketDescription04,
                    HeadingAgingBucketDescription05 = custAgingReportDPParameters.headingAgingBucketDescription05,
                    HeadingAgingBucketDescription06 = custAgingReportDPParameters.headingAgingBucketDescription06,
                    HeadingAgingBucketDescription07 = custAgingReportDPParameters.headingAgingBucketDescription07,
                    Balance = custAgingReportDPParameters.balance,
                    CustAccount = custAgingReportTmp.AccountNum;
        }
        else
        {
            update_recordset custAgingReportTmp
                setting AsOfDate = custAgingReportDPParameters.asOfDate,
                    HeadingAccount = custAgingReportDPParameters.headingAccount,
                    HeadingName = custAgingReportDPParameters.headingName,
                    HeadingDate = custAgingReportDPParameters.headingDate,
                    Heading1 = custAgingReportDPParameters.heading01,
                    Heading2DateValue = custAgingReportDPParameters.heading02,
                    Heading2 = custAgingReportDPParameters.heading02Text,
                    Heading3 = custAgingReportDPParameters.heading03,
                    Heading4 = custAgingReportDPParameters.heading04,
                    Heading5 = custAgingReportDPParameters.heading05,
                    Heading6 = custAgingReportDPParameters.heading06,
                    Heading7DateValue = custAgingReportDPParameters.heading07,
                    Heading7 = custAgingReportDPParameters.heading07Text,
                    Heading8 = custAgingReportDPParameters.heading011,
                    Heading9 = custAgingReportDPParameters.heading021,
                    Heading10 = custAgingReportDPParameters.heading031,
                    Heading11 = custAgingReportDPParameters.heading041,
                    Heading12 = custAgingReportDPParameters.heading051,
                    Heading13 = custAgingReportDPParameters.heading061,
                    Heading14 = custAgingReportDPParameters.heading071,
                    HeadingAgingBucketDescription02 = custAgingReportDPParameters.headingAgingBucketDescription02,
                    HeadingAgingBucketDescription03 = custAgingReportDPParameters.headingAgingBucketDescription03,
                    HeadingAgingBucketDescription04 = custAgingReportDPParameters.headingAgingBucketDescription04,
                    HeadingAgingBucketDescription05 = custAgingReportDPParameters.headingAgingBucketDescription05,
                    HeadingAgingBucketDescription06 = custAgingReportDPParameters.headingAgingBucketDescription06,
                    HeadingAgingBucketDescription07 = custAgingReportDPParameters.headingAgingBucketDescription07,
                    Balance = custAgingReportDPParameters.balance,
                    CustAccount = custAgingReportTmp.AccountNum;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    protected Common initTargetCursor()
    {
        CustAgingReportTmp custAgingReportTmp = custAgingReportDPParameters.custAgingReportTmp;

        custAgingReportTmp.skipDataMethods(true);

        return custAgingReportTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CustAgingReportTmpFromCustTmpAccountSum construct()
    {
        return new CustAgingReportTmpFromCustTmpAccountSum();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromCustAgingReportDP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>VendTmpAccountSumFromVendAgingReportTmp</c> class.
    /// </summary>
    /// <param name = "_custAgingReportDPParameters">
    /// An instance of <c>CustAgingReportDPParameters</c> object.
    /// </param>
    /// <returns>
    /// The instantiated <c>CustTmpAccountSumFromCustAgingReportTmp</c> object.
    /// </returns>
    public static CustAgingReportTmpFromCustTmpAccountSum newFromCustAgingReportDP(CustAgingReportDPParameters _custAgingReportDPParameters)
    {
        CustAgingReportTmpFromCustTmpAccountSum instance = CustAgingReportTmpFromCustTmpAccountSum::construct();
        instance.custAgingReportDPParameters = _custAgingReportDPParameters;
        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>