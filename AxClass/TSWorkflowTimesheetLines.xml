<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TSWorkflowTimesheetLines</Name>
	<SourceCode>
		<Declaration><![CDATA[
class TsWorkflowTimesheetLines extends WorkflowDocument
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQueryName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the query name for this workflow document.
    /// </summary>
    /// <returns>
    ///    The query name from the AOT.
    /// </returns>
    queryName getQueryName()
    {
        if (Dynamics.AX.Application.FeatureStateProvider::isFeatureEnabled(ProjEnableTSTimesheetLineForIntercompanyResourceFeature::instance()))
        {
            return querystr(TSWorkflowTimesheetLinesV2);
        }
        else
        {
            return querystr(TSWorkflowTimesheetLines);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalWeekHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to specify conditions on total number of hours while setting up the configuration for timesheet line workflow.
    /// </summary>
    /// <param name="_companyId">
    /// Present Company Id supplied by framework.
    /// </param>
    /// <param name="_tableId">
    /// Table Id supplied by framework.
    /// </param>
    /// <param name="_recId">
    /// Record Id of the timesheetline for which total number of hours is required.
    /// </param>
    /// <returns>
    /// Total number of hours in the timesheet line.
    /// </returns>
    public TSHoursTotal parmTotalWeekHours(
        CompanyId _companyId,
        TableId   _tableId,
        RecId     _recId)
    {
        TSHoursTotal    tsHoursTotal;
        TSTimesheetLine tsTimesheetLine = TSTimesheetLine::findRecId(_recId);

        if (tsTimesheetLine.RecId != 0)
        {
            tsHoursTotal = tsTimesheetLine.totalWeekHours();
        }
        else
        {
            throw error(strFmt("@SYS113080", _recId, tableId2name(_tableId)));
        }

        return tsHoursTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTimesheetLineFromWeek</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the timesheet line record for a given timesheet line week record.
    /// </summary>
    /// <param name = "_timesheetLineWeek">
    ///    The timesheet line week record.
    /// </param>
    /// <param name = "_forUpdate">
    ///    A Boolean value that indicates if the record must be selected for update; optional.
    /// </param>
    /// <returns>
    ///    The The <c>TSTimesheetLine</c> record; otherwise, an empty table buffer.
    /// </returns>
    public static Common getTimesheetLineFromWeek(
        TSTimesheetLineWeek _timesheetLineWeek,
        boolean             _forUpdate = false)
    {
        return _timesheetLineWeek.timesheetLine(_forUpdate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>