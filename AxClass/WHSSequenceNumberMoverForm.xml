<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSSequenceNumberMoverForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class WHSSequenceNumberMoverForm
{
    private WHSSequenceNumberMoverBase mover;
    private FormDataSource dataSource;
    private FormButtonControl moveUpButton;
    private FormButtonControl moveDownButton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromDataSource</Name>
				<Source><![CDATA[
    public static WHSSequenceNumberMoverForm newFromDataSource(FormDataSource _dataSource, FieldName _sequenceNumberFieldName, container _sequenceNumberSearchFieldNames)
    {
        WHSSequenceNumberMoverForm formMover = WHSSequenceNumberMoverForm::buildMoverForm(_dataSource);
        formMover.mover = WHSSequenceNumberMover::newFromTableName(tableId2Name(_dataSource.table()), _sequenceNumberFieldName, _sequenceNumberSearchFieldNames);

        return formMover;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromDataSourceAndQuery</Name>
				<Source><![CDATA[
    public static WHSSequenceNumberMoverForm newFromDataSourceAndQuery(FormDataSource _dataSource, FieldName _sequenceNumberFieldName)
    {
        WHSSequenceNumberMoverForm formMover = WHSSequenceNumberMoverForm::buildMoverForm(_dataSource);
        formMover.mover = WHSSequenceNumberMoverFromQuery::newFromTableNameAndQuery(_dataSource, _sequenceNumberFieldName);

        return formMover;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onMoved</Name>
				<Source><![CDATA[
    delegate void onMoved()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initNewButtons</Name>
				<Source><![CDATA[
    public void initNewButtons(FormButtonGroupControl _buttonGroup, FormControl _insertAfter = null)
    {
        FormButtonControl moveUp = this.addMoveUpButton(_buttonGroup, _insertAfter);
        FormButtonControl moveDown = this.addMoveDownButton(_buttonGroup, moveUp);
        this.initExistingButtons(moveUp, moveDown);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initExistingButtons</Name>
				<Source><![CDATA[
    public void initExistingButtons(FormButtonControl _moveUpButton, FormButtonControl _moveDownButton)
    {
        moveUpButton = _moveUpButton;
        moveUpButton.OnClicked += eventhandler(this.onMoveUpClicked);

        moveDownButton = _moveDownButton;
        moveDownButton.OnClicked += eventhandler(this.onMoveDownClicked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addMoveUpButton</Name>
				<Source><![CDATA[
    private FormButtonControl addMoveUpButton(FormButtonGroupControl _buttonGroup, FormControl _insertAfter)
    {
        FormControlName moveUpButtonName = WHSSequenceNumberMoverForm::moveUpButtonNameByTableName(dataSource.name());
        FormButtonControl moveUp = this.addButton(_buttonGroup, moveUpButtonName, _insertAfter);
        moveUp.text("@SYS74619");
        moveUp.normalImage(ImageReferenceSymbol::Up);

        return moveUp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addMoveDownButton</Name>
				<Source><![CDATA[
    private FormButtonControl addMoveDownButton(FormButtonGroupControl _buttonGroup, FormControl _insertAfter)
    {
        FormControlName moveDownButtonName = WHSSequenceNumberMoverForm::moveDownButtonNameByTableName(dataSource.name());
        FormButtonControl moveDown = this.addButton(_buttonGroup, moveDownButtonName, _insertAfter);
        moveDown.text("@SYS74620");
        moveDown.normalImage(ImageReferenceSymbol::Down);

        return moveDown;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addButton</Name>
				<Source><![CDATA[
    private FormButtonControl addButton(FormButtonGroupControl _buttonGroup, FormControlName _name, FormControl _insertAfter)
    {
        FormButtonControl button = _buttonGroup.addControl(FormControlType::Button, _name, _insertAfter);
        button.buttonDisplay(ButtonDisplay::TextWithImageLeft);
        button.imageLocation(SysImageLocation::Symbol);
        button.neededPermission(NeededPermission::Delete);
        button.needsRecord(1);
        button.heightMode(FormHeight::Auto);
        button.widthMode(FormWidth::Auto);
        return button;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildMoverForm</Name>
				<Source><![CDATA[
    private static WHSSequenceNumberMoverForm buildMoverForm(FormDataSource _dataSource)
    {
        WHSSequenceNumberMoverForm formMover = new WHSSequenceNumberMoverForm();
        formMover.dataSource = _dataSource;
        
        _dataSource.OnActivated += eventhandler(formMover.onDataSourceActivated);

        return formMover;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUpButtonNameByTableName</Name>
				<Source><![CDATA[
    [Hookable(false)] // supposed to be used only by tests
    internal static FormControlName moveUpButtonNameByTableName(TableName _tableName)
    {
        FormControlName name = strFmt('%1_%2', _tableName, 'MoveUpButton');
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDownButtonNameByTableName</Name>
				<Source><![CDATA[
    [Hookable(false)] // supposed to be used only by tests
    internal static FormControlName moveDownButtonNameByTableName(TableName _tableName)
    {
        FormControlName name = strFmt('%1_%2', _tableName, 'MoveDownButton');
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDataSourceActivated</Name>
				<Source><![CDATA[
    private void onDataSourceActivated(FormDataSource _, FormDataSourceEventArgs __)
    {
        if (!moveUpButton || !moveDownButton)
        {
            return;
        }
        
        Common row = dataSource.cursor();
        this.updateButtonsEnabled(row);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateButtonsEnabled</Name>
				<Source><![CDATA[
    private void updateButtonsEnabled(Common _row)
    {
        moveUpButton.enabled(mover.canMoveUp(_row));
        moveDownButton.enabled(mover.canMoveDown(_row));
    }

]]></Source>
			</Method>
			<Method>
				<Name>onMoveUpClicked</Name>
				<Source><![CDATA[
    private void onMoveUpClicked(FormControl _, FormControlEventArgs __)
    {
        Common row = dataSource.cursor();
        mover.moveUp(row);

        this.onMoved();
    }

]]></Source>
			</Method>
			<Method>
				<Name>onMoveDownClicked</Name>
				<Source><![CDATA[
    private void onMoveDownClicked(FormControl _, FormControlEventArgs __)
    {
        Common row = dataSource.cursor();
        mover.moveDown(row);

        this.onMoved();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>