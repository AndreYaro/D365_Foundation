<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanningAccountDimensionResolver</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanningDimensionAccountResolver</c> class resolves budget planning account dimension values.
/// </summary>
public class BudgetPlanningAccountDimensionResolver extends DimensionResolver
{
    Name                    accountStructure;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newResolver</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>BudgetPlanningDimensionAccountResolver</c> class.
    /// </summary>
    /// <param name="_dimensionValues">
    /// A string of the display values of the dimension separated by the chart of accounts delimiter character of the system.
    /// </param>
    /// <param name="_accountStructure">
    /// The account structure name.
    /// </param>
    /// <returns>
    /// The new instance of the <c>BudgetPlanningDimensionAccountResolver</c> class.
    /// </returns>
    public static BudgetPlanningAccountDimensionResolver newResolver(
        DefaultDimensionIntegrationValues   _dimensionValues,
        Name                                _accountStructure)
    {
        BudgetPlanningAccountDimensionResolver budgetPlanningAccountDimensionResolver =
            new BudgetPlanningAccountDimensionResolver();

        budgetPlanningAccountDimensionResolver.parmDimensionFormat(
            budgetPlanningAccountDimensionResolver.getDimensionAttributeFormat());
        budgetPlanningAccountDimensionResolver.parmDimensionValues(_dimensionValues);
        budgetPlanningAccountDimensionResolver.parmAccountStructure(_accountStructure);

        return budgetPlanningAccountDimensionResolver;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountStructure</Name>
				<Source><![CDATA[
    public Name parmAccountStructure(Name _accountStructure = accountStructure)
    {
        accountStructure = _accountStructure;
        return accountStructure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildDimensionContractValueList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the dimension contract from the dimension names and values, setting the account structure.
    /// </summary>
    protected void buildDimensionContractValueList()
    {
        super();
        BudgetPlanningContract budgetPlanningAccountContract = this.getDimensionContract();
        budgetPlanningAccountContract.parmAccountStructure(this.parmAccountStructure());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionNameValueListServiceProvider</Name>
				<Source><![CDATA[
    protected DimensionNameValueListServiceProvider getDimensionNameValueListServiceProvider(
        DimensionNameValueListContract _dimensionNameValueListContract)
    {
        BudgetPlanningContract budgetPlanningAccountContract = _dimensionNameValueListContract;

        if (!budgetPlanningAccountContract)
        {
            throw error("@SYS326400", DimensionServiceFaults::DimensionContractIsNotInitialized);
        }

        return BudgetPlanningDimensionCombinationServiceProvider::newForBudgetPlanningAccountContract(
            budgetPlanningAccountContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStorageResultValidationMessages</Name>
				<Source><![CDATA[
    protected List getStorageResultValidationMessages(DimensionStorageResult _result)
    {
        List validationMessages;

        switch (_result.parmStatus())
        {
            case DimensionStorageResultStatus::InvalidPrimaryStructure:
                BudgetPlanningContract budgetAccountContract = _result.getDimensionNameValueListContract();
                validationMessages = new List(Types::String);

                if (budgetAccountContract.parmAccountStructure())
                {
                    validationMessages.addEnd(strFmt("@SYS342561", budgetAccountContract.parmAccountStructure()));
                }
                else
                {
                    validationMessages.addEnd("@SYS317163");
                }
                break;

            default:
                validationMessages = super(_result);
                break;
        }

        return validationMessages;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructDimensionContract</Name>
				<Source><![CDATA[
    protected DimensionNameValueListContract constructDimensionContract()
    {
        return new BudgetPlanningContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionAttributeFormat</Name>
				<Source><![CDATA[
    protected DefaultDimensionIntegrationStructureDisplay getDimensionAttributeFormat()
    {
        DefaultDimensionIntegrationStructureDisplay dimensionAttributesFormat;

        dimensionAttributesFormat = DimensionHierarchy::getDisplayStringDimensionIntegrationStructure(
            DimensionDataEntityStructureType::DataEntityBudgetPlanningDimensionFormat);

        return dimensionAttributesFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtendedDataTypeName</Name>
				<Source><![CDATA[
    protected ExtendedDataTypeName getExtendedDataTypeName()
    {
        return extendedtypestr(LedgerDimensionBudgetPlanning);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnumValue</Name>
				<Source><![CDATA[
    protected DimensionAccountType getEnumValue()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionHierarchyName</Name>
				<Source><![CDATA[
    protected Name getDimensionHierarchyName()
    {
        return accountStructure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionHierarchyType</Name>
				<Source><![CDATA[
    protected DimensionHierarchyType getDimensionHierarchyType()
    {
        return DimensionHierarchyType::DataEntityBudgetPlanningDimensionFormat;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>