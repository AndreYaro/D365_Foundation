<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankModernReconciliationUpgradeWizard</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankModernReconciliationUpgradeWizard</c> class handles the data upgrade for the Bank Modern Reconciliation feature.
/// </summary>
internal final class BankModernReconciliationUpgradeWizard extends SysWizard
{
    private const int IntroductionTabIndex = 1;
    private const int UpgradeMarkAsNewTabIndex = 2;
    private const int UpgradeMatchingRuleTabIndex = 3;
    private const int GenerateMatchingIdTabIndex = 4;
    private const int ReviewTabIndex = 5;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
    public FormName formName()
    {
        return formStr(BankModernReconciliationUpgradeWizard);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@Bank:BankModernReconciliationUpgradeWizardHeader";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        BankModernReconciliationUpgradeWizard wizard = new BankModernReconciliationUpgradeWizard();

        if (wizard.prompt())
        {
            wizard.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the wizard can be clicked next in each tab.
    /// </summary>
    public void next()
    {
        super();

        switch (this.curTab())
        {
            case IntroductionTabIndex:
            case UpgradeMarkAsNewTabIndex:
            case UpgradeMatchingRuleTabIndex:
                this.nextEnabled(true);
                break;
            case GenerateMatchingIdTabIndex:
                this.nextEnabled(formRun.validateUpgradeAfterDate());
                break;
            case ReviewTabIndex:
                formRun.addDataAreaForUpgradeMatchedTransactions();
                this.finishEnabled(true);
                break;
            default:
                throw error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>finish</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finishes the wizard and processes the upgrade in batch.
    /// </summary>
    protected void finish()
    {
        if (formRun.validateFinish())
        {
            formRun.processUpgrade();
            Info("@Bank:BankModernReconciliationUpgradeWizardProcessInfo");
            super();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>