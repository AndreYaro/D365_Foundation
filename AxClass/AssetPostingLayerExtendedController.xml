<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetPostingLayerExtendedController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class manages the extended and standard posting layer controls.
/// </summary>
public class AssetPostingLayerExtendedController
{
    #isoCountryRegionCodes

    private static Map postingLayerValueCtrlIndexMap = AssetPostingLayerExtendedController::createPostingLayerValueCtrlIndexMap();

    AssetIPostingLayerExtended postingLayerExtended;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createPostingLayerValueCtrlIndexMap</Name>
				<Source><![CDATA[
    private static Map createPostingLayerValueCtrlIndexMap()
    {
        Map map = new Map(Types::Integer, Types::Integer);

        DictEnum dictEnum = new DictEnum(enumNum(CurrentOperationsTax));

        int idx = 0;

        for (int i = 0; i < dictEnum.values(); i++)
        {
            if (   (isConfigurationkeyEnabled(dictEnum.index2ConfigurationKey(i))
                 || dictEnum.index2ConfigurationKey(i) == configurationKeyNum(AssetPostingLayerExtended))
                && (dictEnum.index2CountryRegionCodes(i) == conNull()
                 || SysCountryRegionCode::isLegalEntityInCountryRegion(dictEnum.index2CountryRegionCodes(i))))
            {
                map.insert(dictEnum.index2Value(i), idx);
                idx++;
            }
        }

        return map;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeExtendedControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the extended control with the standard and extended values.
    /// </summary>
    public void initializeExtendedControl()
    {
        postingLayerExtended.postingLayerExtendedControl().visible(false);

        DictEnum dictEnum = new DictEnum(enumNum(CurrentOperationsTax));
        MapEnumerator mapEnumerator = postingLayerValueCtrlIndexMap.getEnumerator();

        postingLayerExtended.postingLayerExtendedControl().items(postingLayerValueCtrlIndexMap.elements());

        while (mapEnumerator.moveNext())
        {
            int value = mapEnumerator.currentKey();
            int ctrlIndex = mapEnumerator.currentValue();

            postingLayerExtended.postingLayerExtendedControl().item(ctrlIndex + 1);
            postingLayerExtended.postingLayerExtendedControl().text(dictEnum.value2Name(value));
        }

        postingLayerExtended.postingLayerExtendedControl().label(dictEnum.label());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExtendedControlValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set posting layer value from the record to the extended control.
    /// </summary>
    public void setExtendedControlValue()
    {
        int value = enum2int(postingLayerExtended.getPostingLayerValue());
        int ctrlIndex = postingLayerValueCtrlIndexMap.lookup(value);

        postingLayerExtended.postingLayerExtendedControl().selection(ctrlIndex);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPostingLayerValueFromExtendedControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set posting layer value from the extended control to the record.
    /// </summary>
    public void setPostingLayerValueFromExtendedControl()
    {
        MapEnumerator mapEnumerator = postingLayerValueCtrlIndexMap.getEnumerator();

        while (mapEnumerator.moveNext())
        {
            CurrentOperationsTax value = mapEnumerator.currentKey();
            int ctrlIndex = mapEnumerator.currentValue();

            if (ctrlIndex == postingLayerExtended.postingLayerExtendedControl().selection())
            {
                postingLayerExtended.setPostingLayerValue(value);
                return;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPostingLayerValueDefaultIfNoneAndConditionIsFalse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set default posting layer value when the condition changes and posting layer is equal to None.
    /// </summary>
    public void setPostingLayerValueDefaultIfNoneAndConditionIsFalse()
    {
        if (postingLayerExtended.getPostingLayerValue() == CurrentOperationsTax::None &&
            postingLayerExtended.postingLayerControlSwitchCondition() == false)
        {
            postingLayerExtended.setPostingLayerValue(CurrentOperationsTax::Current);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>switchControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hide one control and show another one depending on condition.
    /// </summary>
    public void switchControls()
    {
        postingLayerExtended.postingLayerExtendedControl().visible(postingLayerExtended.postingLayerControlSwitchCondition());
        postingLayerExtended.postingLayerStandardControl().visible(!postingLayerExtended.postingLayerControlSwitchCondition());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayerExtended</Name>
				<Source><![CDATA[
    public AssetIPostingLayerExtended parmPostingLayerExtended(AssetIPostingLayerExtended _postingLayerExtended = postingLayerExtended)
    {
        postingLayerExtended = _postingLayerExtended;

        return postingLayerExtended;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the <c>AssetPostingLayerExtendedControlEventHandler</c> class.
    /// </summary>
    /// <param name = "_postingLayerExtended">
    /// The object that implements the <c>AssetIPostingLayerExtended</c> interface.
    /// </param>
    /// <returns>
    /// An instance of the <c>AssetPostingLayerExtendedControlEventHandler</c> class.
    /// </returns>
    public static AssetPostingLayerExtendedController construct(AssetIPostingLayerExtended _postingLayerExtended)
    {
        if (!_postingLayerExtended)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        AssetPostingLayerExtendedController postingLayerExtendedController = new AssetPostingLayerExtendedController();

        postingLayerExtendedController.parmPostingLayerExtended(_postingLayerExtended);

        return postingLayerExtendedController;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>