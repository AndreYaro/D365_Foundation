<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceWorkflowHistoryDialogContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Vendor invoice implementation of the workflow history dialog contract.
/// </summary>
internal final class VendInvoiceWorkflowHistoryDialogContract
{
    private Common workflowEnabledRecord;
    private VendInvoiceWorkflowHistoryDialogContext dialogContext;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(Common _workflowEnabledRecord)
    {
        workflowEnabledRecord = _workflowEnabledRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForWorkflowEnabledRecord</Name>
				<Source><![CDATA[
    internal static VendInvoiceWorkflowHistoryDialogContract newForWorkflowEnabledRecord(Common _workflowEnabledRecord)
    {
        return new VendInvoiceWorkflowHistoryDialogContract(_workflowEnabledRecord);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForVendorInvoice</Name>
				<Source><![CDATA[
    internal static VendInvoiceWorkflowHistoryDialogContract newForVendorInvoice(VendInvoiceInfoTable _vendorInvoice)
    {
        VendInvoiceWorkflowHistoryDialogContract vendorInvoiceWorkflowHistoryDialogContract = new VendInvoiceWorkflowHistoryDialogContract(_vendorInvoice);

        if (_vendorInvoice)
        {
            WorkflowTrackingStatusTable vendorInvoiceWorkflowTrackingStatus = Workflow::findTrackingStatusForDocument(_vendorInvoice);

            if (vendorInvoiceWorkflowTrackingStatus)
            {
                vendorInvoiceWorkflowHistoryDialogContract.dialogContext = strFmt(
                    "@AccountsPayable:VendInvoiceWorkflowHistoryDialogContext", 
                    _vendorInvoice.Num,
                    vendorInvoiceWorkflowTrackingStatus.InstanceNumber);
            }
        }

        return vendorInvoiceWorkflowHistoryDialogContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDialogContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string value used to provide contextual information regarding the workflow history being displayed.
    /// </summary>
    /// <param name = "_dialogContext">The contextual information.</param>
    /// <returns>A <c>WorkflowHistoryDialogContract</c> instance.</returns>
    internal VendInvoiceWorkflowHistoryDialogContext parmDialogContext(VendInvoiceWorkflowHistoryDialogContext _dialogContext = dialogContext)
    {
        dialogContext =_dialogContext;
        return dialogContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkflowEnabledRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the workflow enabled record for which workflow history is being shown.
    /// </summary>
    /// <returns>A table record.</returns>
    internal Common getWorkflowEnabledRecord()
    {
        return workflowEnabledRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDialogContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the dialog contract, ensuring necessary data is set.
    /// </summary>
    /// <returns>True if all necessary data is populated in the contract; else, false.</returns>
    internal final boolean isValidDialogContract()
    {
        return workflowEnabledRecord.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>