<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferCalcTax_Parm_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>InventTransferCalcTax_Parm_BR</c> provides functions to calculate taxes for Invent transfer order update.
/// </summary>
class InventTransferCalcTax_Parm_BR extends InventTransferCalcTax_BR
{
    InventTransferParmTable inventTransferParmTable;
    InventTransferParmLine  inventTransferParmLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(Common _record)
    {
        super(_record);

        inventTransferParmTable = source;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLine</Name>
				<Source><![CDATA[
        public boolean nextLine()
    {
        inventTransferParmLine = null;
        inventTransferLine = null;

        while (queryTransact.next())
        {
            inventTransferLine = this.queryGet();

            if (inventTransferLine)
            {
                if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
                {
                    inventTransferParmLine.QtyShipNow  = inventTransferParmLine.QtyShipNow;
                }
                else if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Receive)
                {
                    inventTransferParmLine.QtyShipNow  = inventTransferParmLine.QtyReceiveNow;
                }
                break;
            }
        }

        return inventTransferLine != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
        protected QueryRun queryBuild()
    {
        return new QueryRun(SysQuery::queryFromTableRelation(inventTransferParmTable, tableNum(InventTransferParmLine)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGet</Name>
				<Source><![CDATA[
        public Common queryGet()
    {
        if (queryTransact.changed(tableNum(InventTransferParmLine)))
        {
            inventTransferParmLine = queryTransact.get(tableNum(InventTransferParmLine));

            inventTransferLine = inventTransferParmLine.inventTransferLine();

            if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
            {
                inventTransferLine.QtyShipNow  = inventTransferParmLine.QtyShipNow;
            }
            else
            {
                inventTransferLine.QtyShipNow  = inventTransferParmLine.QtyReceiveNow;
            }
        }

        return inventTransferLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxationOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the taxation origin of the current parm line
    /// </summary>
    /// <returns>
    /// A taxation origin
    /// </returns>
    public FITaxationOrigin_BR taxationOrigin()
    {
        FITaxationOrigin_BR         taxationOrigin;
        ImportedContentPerItem_BR   importedContentPerItem;

        if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
        {
            FiscalDocumentType_BR fiscalDocumentType = FiscalDocumentType_BR::findRecId(inventTransferLine.inventTransferTable().inventTransferTableFiscalInfo_BR().ShipFiscalDocumentType_BR);
            importedContentPerItem = FciIdentifier_BR::getFciAndTaxationOrigin(fiscalDocumentType.fiscalEstablishment().FiscalEstablishmentId,
                                                                               fiscalDocumentType.FiscalDocumentModel,
                                                                               FiscalDocumentIssuer_BR::OwnEstablishment,
                                                                               FiscalDocDirection_BR::Outgoing,
                                                                               inventTransferParmTable.TransDate,
                                                                               CFOPTable_BR::find(inventTransferLine.inventTransferLineFiscalInfo_BR().ShipCFOPTable_BR).CFOPId,
                                                                               inventTransferLine.ItemId);
        }

        if (importedContentPerItem)
        {
            taxationOrigin = importedContentPerItem.TaxationOrigin;
        }
        else
        {
            taxationOrigin = InventTable::find(inventTransferLine.ItemId).TaxationOrigin_BR;
        }

        return taxationOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLineAmount</Name>
				<Source><![CDATA[
        public AmountCur transLineAmount()
    {
        if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
        {
            return inventTransferLine.inventTransferLineFiscalInfo_BR().ShipPrice * inventTransferParmLine.QtyShipNow;
        }

        return inventTransferLine.inventTransferLineFiscalInfo_BR().ReceivePrice * inventTransferParmLine.QtyReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxGroup</Name>
				<Source><![CDATA[
        public TaxGroup transTaxGroup()
    {
        if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
        {
            return inventTransferLine.inventTransferLineFiscalInfo_BR().ShipTaxGroup;
        }

        return inventTransferLine.inventTransferLineFiscalInfo_BR().ReceiveTaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxItemGroup</Name>
				<Source><![CDATA[
        public TaxItemGroup transTaxItemGroup()
    {
        if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
        {
            return inventTransferLine.inventTransferLineFiscalInfo_BR().ShipTaxItemGroup;
        }

        return inventTransferLine.inventTransferLineFiscalInfo_BR().ReceiveTaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTransId</Name>
				<Source><![CDATA[
        public InventTransId transTransId()
    {
        return inventTransferLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateType</Name>
				<Source><![CDATA[
        public InventTransferUpdateType updateType()
    {
        return inventTransferParmTable.UpdateType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transdate of the invent transfer
    /// </summary>
    /// <returns>
    /// A transdate
    /// </returns>
    public TransDate invoiceDate()
    {
        TransDate ret;
    
        ret = inventTransferParmTable.TransDate;
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>