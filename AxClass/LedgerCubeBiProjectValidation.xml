<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCubeBiProjectValidation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerCubeBiProjectValidation</c> class manages the validation of elements that are needed
/// to generate and process a BI Cube based on the <c>LedgerCubePerspectiveName</c> value.
/// </summary>
/// <remarks>
/// By registering this class by using the BI project validation process, the <c>validate</c> method of
/// this class will be invoked automatically during BI project validation.Registration is achieved by
/// adding code to the <c>BiProjectValidationEngine.registerValidationClasses</c> method.
/// </remarks>
class LedgerCubeBiProjectValidation extends BiProjectValidationBase
{
    #define.LedgerCubePerspectiveName('LedgerCube')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isLedgerCubePerspectiveUsed</Name>
				<Source><![CDATA[
        private boolean isLedgerCubePerspectiveUsed()
    {
        boolean         perspectiveUsed;
        TreeNode        currentNode;
        ListEnumerator  enumerator;

        perspectiveUsed = false;

        if (this.projectPerspectiveTreeNodes() != null)
        {
            enumerator = this.projectPerspectiveTreeNodes().getEnumerator();

            while (! perspectiveUsed && enumerator.moveNext())
            {
                currentNode = enumerator.current();
                perspectiveUsed = currentNode.AOTname() == #LedgerCubePerspectiveName;
            }
        }

        return perspectiveUsed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs validation of the elements that are associated with the <c>LedgerCube</c> perspective.
    /// </summary>
    /// <remarks>
    /// This method is invoked by the BI project cube validation process.
    /// </remarks>
    public void validate()
    {
        boolean errorsExist;

        // only run this validation if the LedgerCube perspective is include in the BI project
        if (this.isLedgerCubePerspectiveUsed())
        {
            errorsExist = this.validateLedgerHasFiscalCalendar();
        }

        if (!errorsExist)
        {
            this.addProjectValidationResult(BiProjectValidationStatus::Pass);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLedgerHasFiscalCalendar</Name>
				<Source><![CDATA[
        private boolean validateLedgerHasFiscalCalendar()
    {
        Ledger      ledger;
        CompanyInfo companyInfo;
        boolean     errorsExist = false;
        boolean     isFirstError = true;

        // find any ledger that does not have fiscal calendar assigned and report its associated LegalEntity

        while select PrimaryForLegalEntity from ledger
            join DataArea from companyInfo
            where companyInfo.RecId == ledger.PrimaryForLegalEntity &&
                  ledger.FiscalCalendar == 0
        {
            if (isFirstError)
            {
                // log the header message
                this.addProjectValidationResult(BiProjectValidationStatus::Warning, "@SYS340837");
                isFirstError = false;
            }

            // log the specific message
            this.addProjectValidationResult(BiProjectValidationStatus::Warning, strFmt("  " + "@SYS340838", companyInfo.DataArea));

            errorsExist = true;
        }

        return errorsExist;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>