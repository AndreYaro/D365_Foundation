<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayTblEmplQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class creates query for select applicable employees for timesheet updating based on <c>RPayTblContext</c>.
/// </summary>
class RPayTblEmplQuery
{
    RPayTblContext tblContext;
    Query   query;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyPeriodDimension</Name>
				<Source><![CDATA[
        private void applyPeriodDimension(RPayTblContext _tblContext)
    {
        QueryBuildDataSource qbdsEmplTable, qbdsPayHistory, qbdsEmplParameters;
        str deptExtRange;

        qbdsEmplTable      = this.query().dataSourceTable(tableNum(RHRMEmplTable));
        qbdsPayHistory     = this.query().dataSourceTable(tableNum(RPayHistory));
        qbdsEmplParameters = this.query().dataSourceTable(tableNum(RPayEmplParameters));

        if (_tblContext.parmEmpId())
        {
            findOrCreateRange_W(qbdsEmplTable, fieldNum(RHRMEmplTable, EmployeeId), _tblContext.parmEmpId());
        }

        if (_tblContext.initialDimension().parmPayFormType())
        {
            findOrCreateRange_W(qbdsEmplTable, fieldNum(RHRMEmplTable, PayFormType), _tblContext.initialDimension().parmPayFormType());
        }

        if (_tblContext.initialDimension().parmOrganizationId())
        {
            deptExtRange = strFmt("(((%1.%2 >= %3) && (%1.%2 <= %4) && (%1.%5 == %6)) || ((%1.%7 == %6) && (%1.%2 <= %4)))",
                                     qbdsPayHistory.name(),
                                     fieldStr(RPayHistory, StartDate),
                                     date2StrXpp(_tblContext.parmStartDate()),
                                     date2StrXpp(_tblContext.parmEndDate()),
                                     fieldStr(RPayHistory, LastOrganizationId),
                                     "\"" + _tblContext.initialDimension().parmOrganizationId() + "\"",
                                     fieldStr(RPayHistory, HRMOrganizationId));

            findOrCreateRange_W(qbdsPayHistory, fieldnum(RPayHistory, RecId), deptExtRange);
        }

        findOrCreateRange_W(qbdsEmplParameters, fieldNum(RPayEmplParameters, PayPeriod), SysQuery::range(_tblContext.parmEndDate() + 1, dateMax()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
        private void initQuery(RPayTblContext _tblContext)
    {
        query = new Query(queryStr(RPayTblEmplQuery));

        this.applyPeriodDimension(_tblContext);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>query</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets constructed query.
    /// </summary>
    /// <returns>
    /// query.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Query query()
    {
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// created an instance of <c>RPayTblEmplQuery</c> and init them.
    /// </summary>
    /// <param name="_tblContext">
    /// time context.
    /// </param>
    /// <returns>
    /// created <c>RPayTblEmplQuery</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public RPayTblEmplQuery construct(RPayTblContext _tblContext)
    {
        RPayTblEmplQuery    emplQuery = new RPayTblEmplQuery();

        emplQuery.initQuery(_tblContext);

        return emplQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>