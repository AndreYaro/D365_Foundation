<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustQRBillQRCodeCreator_CH</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>CustQRBillQRCodeCreator_CH</c> is responcible for creating QR code for QR-Bill.
/// </summary>
using Microsoft.Dynamics.ApplicationSuite.QRCode;
using Microsoft.Dynamics365.LocalizationFramework;
public class CustQRBillQRCodeCreator_CH
{
    private GiroReportTmp giroReportTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGiroReportTmp</Name>
				<Source><![CDATA[
    public GiroReportTmp parmGiroReportTmp(GiroReportTmp _giroReportTmp = giroReportTmp)
    {
        giroReportTmp = _giroReportTmp;
        return giroReportTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromGiroTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates an object of the class <c>CustQRBillQRCodeCreator_CH</c> by the <paramref name = "_giroReportTmp"/>.
    /// </summary>
    /// <param name = "_giroReportTmp">The buffer of the table <c>GiroReportTmp</c>.</param>
    /// <returns>An object of the class <c>CustQRBillQRCodeCreator_CH</c> by the <paramref name = "_giroReportTmp"/>.</returns>
    public static CustQRBillQRCodeCreator_CH newFromGiroTable(GiroReportTmp _giroReportTmp)
    {
        CustQRBillQRCodeCreator_CH creator = new CustQRBillQRCodeCreator_CH();
        creator.parmGiroReportTmp(_giroReportTmp);
        return creator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateQRCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates QR code.
    /// </summary>
    /// <returns>The picture of QR code.</returns>
    public Bitmap generateQRCode()
    {
        this.replaceNotPermittedCharacters();

        return this.generateQRCodeFromStr(this.getQRInputStr());
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateQRCodeFromStr</Name>
				<Source><![CDATA[
    private Bitmap generateQRCodeFromStr(str _inputStr)
    {
        Bitmap qrCode;

        EFDocQRCode_BR generateQR = new EFDocQRCode_BR();
        generateQR.parmErrorCorrectionLevel(QRCodeErrorCorrectionLevel::Medium);

        try
        {
            const int swissCrossLogoSizeXY = 7;
            const int swissQRCodeSizeXY = 46;

            generateQR.parmIconRatio(swissCrossLogoSizeXY / swissQRCodeSizeXY);
            
            using (System.Drawing.Bitmap bitmapSwissCross = new System.Drawing.Bitmap(Binary::constructFromContainer(
                        BinData::loadFromBase64(CustQRBillQRCodeCreator_CH::getBase64SwissCross()))
                            .getMemoryStream() as System.IO.MemoryStream))
            {
                generateQR.parmIcon(bitmapSwissCross);
                qrCode = generateQR.generateQRCode(_inputStr);
            }
        }
        catch (Exception::CLRError)
        {
            throw error(AifUtil::getClrErrorMessage());
        }

        return qrCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQRInputStr</Name>
				<Source><![CDATA[
    private str getQRInputStr()
    {
        CustQRBillQRCode_CH qrCode = CustQRBillQRCode_CH::construct();
        qrCode.parmIBAN(giroReportTmp.IBAN);
        qrCode.parmCreditorName(giroReportTmp.CompanyName);
        
        qrCode.parmCreditorStreetOrAddrLine1(giroReportTmp.CompanyAddressLine1);
        qrCode.parmCreditorBuildingNumberOrAddrLine2(giroReportTmp.CompanyAddressLine2);
        qrCode.parmCreditorCountry(LogisticsAddressCountryRegion::find(CompanyInfo::find().postalAddress().CountryRegionId).ISOcode);
        
        qrCode.parmAmount(giroReportTmp.InvoiceAmount);
        qrCode.parmCurrencyCode(giroReportTmp.currencyCodeISO_CH);

        qrCode.parmUltimateDebtorName(giroReportTmp.InvoiceName);
        qrCode.parmUltimateDebtorStreetOrAddrLine1(giroReportTmp.InvoiceAddressLine1);
        qrCode.parmUltimateDebtorBuildingNumberOrAddrLine2(giroReportTmp.InvoiceAddressLine2);
        qrCode.parmUltimateDebtorCountry(LogisticsAddressCountryRegion::find(giroReportTmp.InvoiceCountryRegionId).ISOcode);

        qrCode.parmReferenceType(CustQRBillQRCodeCreator_CH::isQRReferenceType(giroReportTmp.OcrField)
            ? 'QRR'
            : (giroReportTmp.OcrField == ''
                ? 'NON'
                : 'SCOR'));
        qrCode.parmReference(giroReportTmp.OcrField);
        qrCode.parmBillInformation(giroReportTmp.BillInformation);

        return qrCode.getQRString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isQRReferenceType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Identifies if the Payment Id is a QR reference.
    /// </summary>
    /// <param name = "_paymId">The Payment Id.</param>
    /// <returns>true if the Payment Id is a QR reference; otherwise, false.</returns>
    /// <remarks>An empty Payment Id is considered as not a QR reference.</remarks>
    public static boolean isQRReferenceType(PaymId _paymId)
    {
        return _paymId != '' && !strStartsWith(_paymId, 'RF');
    }

]]></Source>
			</Method>
			<Method>
				<Name>date2StrForBillInformation</Name>
				<Source><![CDATA[
    private static str date2StrForBillInformation(date _date)
    {
        return date2Str(_date, 321, 2, DateSeparator::None, 2, DateSeparator::None, 2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>num2StrForBillInformation</Name>
				<Source><![CDATA[
    private static str num2StrForBillInformation(real _value)
    {
        return num2Str(_value, -1, 2, DecimalSeparator::Dot, ThousandSeparator::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBillInformation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates Bill information for QR-Bill.
    /// </summary>
    /// <param name = "_jour">The buffer of the main document table.</param>
    /// <param name = "_tmpTaxWorkTrans">The temporary table with tax transactions.</param>
    /// <returns>The string of Bill information for QR-Bill.</returns>
    /// <exception cref="Exception::Error">
    /// The unknown type of the main document.
    /// </exception>
    [Replaceable]
    public static str getBillInformation(Common _jour, TmpTaxWorkTrans _tmpTaxWorkTrans = null)
    {
        FieldId custAccountFieldId;
        switch (_jour.TableId)
        {
            case tableNum(CustInvoiceJour):
                custAccountFieldId = fieldNum(CustInvoiceJour, InvoiceAccount);
                break;

            case tableNum(ProjInvoiceJour):
                custAccountFieldId = fieldNum(ProjInvoiceJour, InvoiceAccount);
                break;

            case tableNum(CustCollectionLetterJour):
                custAccountFieldId = fieldNum(CustCollectionLetterJour, AccountNum);
                break;

            case tableNum(CustInterestJour):
                custAccountFieldId = fieldNum(CustInterestJour, AccountNum);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
        
        ERFormatMappingId formatMappingId = CustGiroReportProcessingGroup_CH::findByCustAccount(_jour.(custAccountFieldId)).ERFormatMappingQRBillInfo;

        if (formatMappingId != 0)
        {
            var fileDestination = new ERFileDestinationMemory();

            TmpTaxWorkTrans tmpTaxWorkTrans;
            tmpTaxWorkTrans.setTmpData(_tmpTaxWorkTrans);
            select tmpTaxWorkTrans;

            ERModelDefinitionParamsUIActionComposite parameters = new ERModelDefinitionParamsUIActionComposite();

            parameters.Add(new ERModelDefinitionInputParametersAction()
                    .addParameter(ERPath::combine('model', '$JournalTableId'), _jour.tableId)
                    .addParameter(ERPath::combine('model', '$JournalRecId'), _jour.RecId));

            parameters.Add(new ERModelDefinitionDatabaseContext()
                .addTemporaryTable(tmpTaxWorkTrans));

            ERObjectsFactory::createFormatMappingRunByFormatMappingId(formatMappingId)
                .withFileDestination(fileDestination)
                .withParameter(parameters)
                .run();

            return fileDestination.GetContentAsString();
        }

        RefFieldId invoiceDateFieldId;
        RefFieldId cashDiscCodeFieldId;
        RefFieldId invoiceIdFieldId;
        RefFieldId paymIdFieldId;

        switch (_jour.TableId)
        {
            case tableNum(CustInvoiceJour):
                invoiceDateFieldId = fieldNum(CustInvoiceJour, InvoiceDate);
                cashDiscCodeFieldId = fieldNum(CustInvoiceJour, CashDiscCode);
                invoiceIdFieldId = fieldNum(CustInvoiceJour, InvoiceId);
                paymIdFieldId = fieldNum(CustInvoiceJour, PaymId);
                break;

            case tableNum(ProjInvoiceJour):
                invoiceDateFieldId = fieldNum(ProjInvoiceJour, InvoiceDate);
                cashDiscCodeFieldId = fieldNum(ProjInvoiceJour, CashDiscCode);
                invoiceIdFieldId = fieldNum(ProjInvoiceJour, ProjInvoiceId);
                paymIdFieldId = fieldNum(ProjInvoiceJour, PaymId);
                break;

            case tableNum(CustCollectionLetterJour):
                invoiceDateFieldId = fieldNum(CustCollectionLetterJour, CollectionLetterDate);
                invoiceIdFieldId = fieldNum(CustCollectionLetterJour, CollectionLetterNum);
                paymIdFieldId = fieldNum(CustCollectionLetterJour, PaymId);
                break;

            case tableNum(CustInterestJour):
                invoiceDateFieldId = fieldNum(CustInterestJour, ToDate);
                invoiceIdFieldId = fieldNum(CustInterestJour, InterestNote);
                paymIdFieldId = fieldNum(CustInterestJour, PaymId);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        TaxRegistration taxRegistration = TaxRegistration::getPrimaryAddressTaxRegistration(
                CompanyInfo::find(), TaxRegistrationTypesList::TAXID, _jour.(invoiceDateFieldId));

        TmpTaxWorkTrans tmpTaxWorkTrans; 
        tmpTaxWorkTrans = _tmpTaxWorkTrans ? _tmpTaxWorkTrans : tmpTaxWorkTrans;
        container vatDetails;

        while select tmpTaxWorkTrans group by TaxCode
        {
            vatDetails += TaxTable::find(tmpTaxWorkTrans.TaxCode).DescriptionQRBill_CH;
        }

        container vatValueAmount;
        Map taxValueTaxAmount = new Map(Types::Real, Types::Real);

        while select tmpTaxWorkTrans
        {
            TaxValue taxValue = tmpTaxWorkTrans.showTaxValue();
            TaxAmount taxAmount = taxValueTaxAmount.exists(taxValue)
                ? taxValueTaxAmount.lookup(taxValue)
                : 0;
            taxAmount += tmpTaxWorkTrans.SourceRegulateAmountCur;
            taxValueTaxAmount.insert(taxValue, taxAmount);
        }

        MapEnumerator me = taxValueTaxAmount.getEnumerator();
        while (me.moveNext())
        {
            vatValueAmount += CustQRBillQRCodeCreator_CH::num2StrForBillInformation(me.currentKey()) +
                ':' + CustQRBillQRCodeCreator_CH::num2StrForBillInformation(-me.currentValue());
        }

        container cashDiscounts;

        if (cashDiscCodeFieldId)
        {
            for (CashDisc cashDisc = CashDisc::find(_jour.(cashDiscCodeFieldId)); cashDisc; cashDisc = CashDisc::find(cashDisc.CashDiscCodeNext))
            {
                cashDiscounts += cashDisc.DescriptionQRBill_CH;
            }
        }

        const str delimiter = ';';

        str ret = '//S1' +
            '/10/' + (invoiceIdFieldId ? _jour.(invoiceIdFieldId) : '') +
            '/11/' + CustQRBillQRCodeCreator_CH::date2StrForBillInformation(_jour.(invoiceDateFieldId)) +
            '/20/' + (paymIdFieldId ? _jour.(paymIdFieldId) : '') +
            '/30/' + strKeep(taxRegistration.RegistrationNumber, '0123456789') +
            '/31/' + CustQRBillQRCodeCreator_CH::date2StrForBillInformation(taxRegistration.ValidFrom) +
                (taxRegistration.ValidTo != maxDate()
                    ? CustQRBillQRCodeCreator_CH::date2StrForBillInformation(taxRegistration.ValidTo)
                    : '') +
            '/32/' + con2Str(vatDetails, delimiter) +
            '/33/' + con2Str(vatValueAmount, delimiter) +
            '/40/' + con2Str(cashDiscounts, delimiter);

        return subStr(ret, 1, 140);
    }

]]></Source>
			</Method>
			<Method>
				<Name>replaceNotPermittedCharacters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Replaces characters in the QR-Bill that are not permitted by ISO20022 format in Switzerland.
    /// </summary>
    [Replaceable()]
    protected void replaceNotPermittedCharacters()
    {
        giroReportTmp.CompanyName = this.doReplaceNotPermittedCharacters(giroReportTmp.CompanyName);
        giroReportTmp.CompanyAddressLine1 = this.doReplaceNotPermittedCharacters(giroReportTmp.CompanyAddressLine1);
        giroReportTmp.CompanyAddressLine2 = this.doReplaceNotPermittedCharacters(giroReportTmp.CompanyAddressLine2);
        giroReportTmp.InvoiceName = this.doReplaceNotPermittedCharacters(giroReportTmp.InvoiceName);
        giroReportTmp.InvoiceAddressLine1 = this.doReplaceNotPermittedCharacters(giroReportTmp.InvoiceAddressLine1);
        giroReportTmp.InvoiceAddressLine2 = this.doReplaceNotPermittedCharacters(giroReportTmp.InvoiceAddressLine2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doReplaceNotPermittedCharacters</Name>
				<Source><![CDATA[
    private str doReplaceNotPermittedCharacters(str _value)
    {
        return CustVendOutPaym::str2SEPAstr(CustVendOutPaym::transliterateUmlauts(_value));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBase64SwissCross</Name>
				<Source><![CDATA[
    private static str getBase64SwissCross()
    {
        return 'iVBORw0KGgoAAAANSUhEUgAAAKYAAACmAQAAAAB488naAAAACXBIWXMAAFxGAABcRgEUlENBAAA4' +
            'MGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0w' +
            'TXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRh' +
            'LyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxMzIgNzkuMTU5Mjg0LCAyMDE2LzA0LzE5' +
            'LTEzOjEzOjQwICAgICAgICAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMu' +
            'b3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJk' +
            'ZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFw' +
            'LzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMv' +
            'MS4xLyIKICAgICAgICAgICAgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bo' +
            'b3Rvc2hvcC8xLjAvIgogICAgICAgICAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv' +
            'bS94YXAvMS4wL21tLyIKICAgICAgICAgICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5j' +
            'b20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgICAgICAgICAgeG1sbnM6dGlmZj0i' +
            'aHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0' +
            'dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIj4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5B' +
            'ZG9iZSBQaG90b3Nob3AgQ0MgMjAxNS41IChNYWNpbnRvc2gpPC94bXA6Q3JlYXRvclRvb2w+CiAg' +
            'ICAgICAgIDx4bXA6Q3JlYXRlRGF0ZT4yMDE3LTA2LTA3VDA5OjM2OjIyKzAyOjAwPC94bXA6Q3Jl' +
            'YXRlRGF0ZT4KICAgICAgICAgPHhtcDpNb2RpZnlEYXRlPjIwMTctMDYtMDdUMDk6NDM6MTArMDI6' +
            'MDA8L3htcDpNb2RpZnlEYXRlPgogICAgICAgICA8eG1wOk1ldGFkYXRhRGF0ZT4yMDE3LTA2LTA3' +
            'VDA5OjQzOjEwKzAyOjAwPC94bXA6TWV0YWRhdGFEYXRlPgogICAgICAgICA8ZGM6Zm9ybWF0Pmlt' +
            'YWdlL3BuZzwvZGM6Zm9ybWF0PgogICAgICAgICA8cGhvdG9zaG9wOkNvbG9yTW9kZT4wPC9waG90' +
            'b3Nob3A6Q29sb3JNb2RlPgogICAgICAgICA8eG1wTU06SW5zdGFuY2VJRD54bXAuaWlkOmQzN2Ey' +
            'Mzk0LTNmMjAtNDEzMC05ZmMyLTZjY2NhZWQ3YmI3ZjwveG1wTU06SW5zdGFuY2VJRD4KICAgICAg' +
            'ICAgPHhtcE1NOkRvY3VtZW50SUQ+eG1wLmRpZDpkMzdhMjM5NC0zZjIwLTQxMzAtOWZjMi02Y2Nj' +
            'YWVkN2JiN2Y8L3htcE1NOkRvY3VtZW50SUQ+CiAgICAgICAgIDx4bXBNTTpPcmlnaW5hbERvY3Vt' +
            'ZW50SUQ+eG1wLmRpZDpkMzdhMjM5NC0zZjIwLTQxMzAtOWZjMi02Y2NjYWVkN2JiN2Y8L3htcE1N' +
            'Ok9yaWdpbmFsRG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkhpc3Rvcnk+CiAgICAgICAgICAg' +
            'IDxyZGY6U2VxPgogICAgICAgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNl' +
            'Ij4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmFjdGlvbj5jcmVhdGVkPC9zdEV2dDphY3Rpb24+' +
            'CiAgICAgICAgICAgICAgICAgIDxzdEV2dDppbnN0YW5jZUlEPnhtcC5paWQ6ZDM3YTIzOTQtM2Yy' +
            'MC00MTMwLTlmYzItNmNjY2FlZDdiYjdmPC9zdEV2dDppbnN0YW5jZUlEPgogICAgICAgICAgICAg' +
            'ICAgICA8c3RFdnQ6d2hlbj4yMDE3LTA2LTA3VDA5OjM2OjIyKzAyOjAwPC9zdEV2dDp3aGVuPgog' +
            'ICAgICAgICAgICAgICAgICA8c3RFdnQ6c29mdHdhcmVBZ2VudD5BZG9iZSBQaG90b3Nob3AgQ0Mg' +
            'MjAxNS41IChNYWNpbnRvc2gpPC9zdEV2dDpzb2Z0d2FyZUFnZW50PgogICAgICAgICAgICAgICA8' +
            'L3JkZjpsaT4KICAgICAgICAgICAgPC9yZGY6U2VxPgogICAgICAgICA8L3htcE1NOkhpc3Rvcnk+' +
            'CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgICAg' +
            'IDx0aWZmOlhSZXNvbHV0aW9uPjYwMDAwMDAvMTAwMDA8L3RpZmY6WFJlc29sdXRpb24+CiAgICAg' +
            'ICAgIDx0aWZmOllSZXNvbHV0aW9uPjYwMDAwMDAvMTAwMDA8L3RpZmY6WVJlc29sdXRpb24+CiAg' +
            'ICAgICAgIDx0aWZmOlJlc29sdXRpb25Vbml0PjI8L3RpZmY6UmVzb2x1dGlvblVuaXQ+CiAgICAg' +
            'ICAgIDxleGlmOkNvbG9yU3BhY2U+NjU1MzU8L2V4aWY6Q29sb3JTcGFjZT4KICAgICAgICAgPGV4' +
            'aWY6UGl4ZWxYRGltZW5zaW9uPjE2NjwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxl' +
            'eGlmOlBpeGVsWURpbWVuc2lvbj4xNjY8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAgICA8L3Jk' +
            'ZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg' +
            'ICAgICAKPD94cGFja2V0IGVuZD0idyI/Ppj9uUIAAAAgY0hSTQAAhwoAAIwNAAEFtwAAgOgAAFIF' +
            'AAEVWwAANq8AAB9BAtDcaQAAALlJREFUeNrsl0sOwjAMRG2HfY+Uq3OkcoB0WPBpEd4Mg1mgZBU9' +
            'WXYynriqw5IVGdxS6ilFHutENSI2p4OpZljfYAdRLVcniFgQ+jJ5TaYh6+BEBi/Sd8+7ADh/4l/G' +
            'fSltRDXGfZDfZvupU032L3MLK1JyEHmb3OObOguA1cz63cONOJk+S4K4xVbUId07VdPIi84wiF58' +
            'YXo+v4WHOdkhqx5FnZ900pd1emwuPtWZtIzKfyh/Qq8DAImrQRMAgIVTAAAAAElFTkSuQmCC';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>