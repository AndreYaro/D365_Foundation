<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCImportXmlDocumentHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PCImportXmlDocumentHandler extends PCImportModelNodeHandler
{
    #define.DocumentNodeName("#document")

    Map                         importedTableConstraintDefinitions;
    Map                         importedTableConstraintColumns;
    Map                         importedAttributeTypes;
    Map                         importedComponents;

    Set                         selectedLegalEntities;

    internal boolean isPriceModelSelectionCriteriaImportExportEnabled = PCPriceModelSelectionCriteria::isImportExportEnabled();

    PCProductConfigurationModel productConfigurationModel;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>importData</Name>
				<Source><![CDATA[
    protected void importData()
    {
        importedTableConstraintDefinitions  = new Map(Types::String, Types::Int64);
        importedTableConstraintColumns      = new Map(Types::Int64, Types::Class);
        importedAttributeTypes              = new Map(Types::String, Types::Int64);
        importedComponents                  = new Map(Types::String, Types::Int64);
    }

]]></Source>
			</Method>
			<Method>
				<Name>importedAttributeTypes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the map of imported attribute type names to their IDs.
    /// </summary>
    /// <returns>
    /// A map from string to int64.
    /// </returns>
    public Map importedAttributeTypes()
    {
        return importedAttributeTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>importedComponents</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the map of imported component names to their IDs.
    /// </summary>
    /// <returns>
    /// A map from string to int64.
    /// </returns>
    public Map importedComponents()
    {
        return importedComponents;
    }

]]></Source>
			</Method>
			<Method>
				<Name>importedTableConstraintColumns</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the map of imported table constraint definition RecIDs to maps of their column names and IDs.
    /// </summary>
    /// <returns>
    /// A map from int64 to objects.
    /// </returns>
    public Map importedTableConstraintColumns()
    {
        return importedTableConstraintColumns;
    }

]]></Source>
			</Method>
			<Method>
				<Name>importedTableConstraintDefinitions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the map of imported table constraint definition names to their IDs.
    /// </summary>
    /// <returns>
    /// A map from string to int64.
    /// </returns>
    public Map importedTableConstraintDefinitions()
    {
        return importedTableConstraintDefinitions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>importModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Imports the model from XML. In case of any error aborts the transaction and does not create anything in the DB.
    /// </summary>
    /// <param name="_legalEntities">
    /// The container representing a packed set of selected legal entities.
    /// </param>
    /// <param name="_modelXml">
    /// The string with the XML of the model.
    /// </param>
    public void importModel(container _legalEntities, str _modelXml)
    {
        XmlDocument document = new XmlDocument();

        document.loadXml(_modelXml);

        this.setLegalEntities(_legalEntities);

        ttsBegin;

        this.processNode(document);

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nodeType</Name>
				<Source><![CDATA[
    public str nodeType()
    {
        return #DocumentNodeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductConfigurationModel</Name>
				<Source><![CDATA[
    public PCProductConfigurationModel parmProductConfigurationModel(PCProductConfigurationModel _productConfigurationModel = productConfigurationModel)
    {
        productConfigurationModel = _productConfigurationModel;

        return productConfigurationModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedLegalEntities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the set of selected legal entities.
    /// </summary>
    /// <returns>
    /// The set of RecIds.
    /// </returns>
    public Set selectedLegalEntities()
    {
        return selectedLegalEntities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLegalEntities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the selected legal entities.
    /// </summary>
    /// <param name="_legalEntities">
    /// A container representing a packed int64 set of the legal entity RecIds.
    /// </param>
    public void setLegalEntities(container _legalEntities)
    {
        selectedLegalEntities = Set::create(_legalEntities);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCImportXmlDocumentHandler construct()
    {
        return new PCImportXmlDocumentHandler();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>