<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInboundLoadFromLoadCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSInboundLoadFromLoadCreator
{
    private WHSLoadTable load;
    private WHSLoadTable origLoad;
    private RecordInsertList loadLines;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertNewLoad</Name>
				<Source><![CDATA[
    private void insertNewLoad()
    {
        if (load.validateWrite())
        {
            ttsbegin;

            load.insert();
            
            ttscommit;
        }
        else
        {
            throw Error(strFmt("@WAX:LoadDeliveryPolicy_AdjustAndCreateNewLoadForRemainingQty_LoadInsertError", origLoad.LoadId, load.LoadId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initNewLoadFromOrigLoad</Name>
				<Source><![CDATA[
    private void initNewLoadFromOrigLoad()
    {
        load.initFromLoad(origLoad);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLoadLines</Name>
				<Source><![CDATA[
    private void initLoadLines()
    {
        loadLines = new RecordInsertList(tableNum(WHSLoadLine));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrigLoad</Name>
				<Source><![CDATA[
    private void setOrigLoad(WHSLoadTable _origLoad)
    {
        origLoad = _origLoad;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromOrigLoad</Name>
				<Source><![CDATA[
    public static WHSInboundLoadFromLoadCreator constructFromOrigLoad(WHSLoadTable _origLoad)
    {
        WHSInboundLoadFromLoadCreator instance = new WHSInboundLoadFromLoadCreator();
        instance.setOrigLoad(_origLoad);
        instance.initNewLoadFromOrigLoad();
        instance.initLoadLines();

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addNewLoadLineWithNewQuantitiesFromOrigLoadLine</Name>
				<Source><![CDATA[
    public void addNewLoadLineWithNewQuantitiesFromOrigLoadLine(WHSLoadLine _origLoadLine, Qty _newQty, InventQty _newInventQty)
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(strFmt("@SCM:TransactionExpected", funcName()));
        }
        
        if (!load)
        {
            this.insertNewLoad();
        }

        WHSLoadLine newLoadLine;
            
        buf2buf(_origLoadLine, newLoadLine);
        
        newLoadLine.WorkCreatedQty = 0;
        newLoadLine.Qty            = _newQty;
        newLoadLine.InventQty      = _newInventQty;
        newLoadLine.LoadId         = load.LoadId;
        newLoadLine.setPackingQty();

        newLoadLine.LoadClosedUTCDateTime    = utcDateTimeNull();
        newLoadLine.LoadInProcessUTCDateTime = utcDateTimeNull();

        newLoadLine.VolumeQty_BR  = 0;
        newLoadLine.VolumeType_BR = '';

        load.addLoadLineToShipment(newLoadLine);

        this.tryAddLoadLine(newLoadLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryInsertNewLoadLines</Name>
				<Source><![CDATA[
    public boolean tryInsertNewLoadLines()
    {
        try
        {
            ttsbegin;

            loadLines.insertDatabase();

            ttscommit;

            info(strFmt("@WAX:LoadDeliveryPolicy_AdjustAndCreateNewLoadForRemainingQty_Info", origLoad.LoadId, load.LoadId));
            
            return true;
        }
        catch
        {
            return checkFailed(strFmt("@WAX:LoadDeliveryPolicy_AdjustAndCreateNewLoadForRemainingQty_LoadLineInsertError", load.LoadId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryAddLoadLine</Name>
				<Source><![CDATA[
    private void tryAddLoadLine(WHSLoadLine _loadLine)
    {
        if (!_loadLine.validateWrite())
        {
            throw Error(strFmt("@WAX:LoadDeliveryPolicy_AdjustAndCreateNewLoadForRemainingQty_LoadLineValidationError", load.LoadId));
        }

        loadLines.add(_loadline);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>