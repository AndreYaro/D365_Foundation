<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSQualityCheckInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for quality check instrumentation logging.
/// </summary>
internal final class WHSQualityCheckInstrumentationActivities
{
    private const str ActivityNamePrefix = 'QualityCheck.';

    private WHSInstrumentationLogger logger;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static WHSQualityCheckInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSQualityCheckInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>verifyQualityCheckWithCatchWeightItem</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext verifyQualityCheckWithCatchWeightItem()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'VerifyQualityCheckWithCatchWeightItem'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>verifiedQualityCheckWithCatchWeightItem</Name>
				<Source><![CDATA[
    public void verifiedQualityCheckWithCatchWeightItem(SysInstrumentationActivityContext _activityContext, boolean _isCatchWeightItemIncluded)
    {
        _activityContext.addCustomProperty('QualityCheck.IsCatchWeightItemIncluded', any2Str(_isCatchWeightItemIncluded));
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyAcceptancePolicy</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext applyAcceptancePolicy(WHSQualityCheckAcceptancePolicy _acceptancePolicy)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'ApplyAcceptancePolicy');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty('QualityCheckTemplate.AcceptancePolicy', any2Str(_acceptancePolicy));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>approveQualityCheck</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext approveQualityCheck()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'ApproveQualityCheck'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>rejectQualityCheck</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext rejectQualityCheck()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'RejectQualityCheck'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveQualityCheckResult</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext saveQualityCheckResult(WHSAcceptReject _result)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'SaveQualityCheckResult');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty('QualityCheck.Result', any2Str(_result));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>savedQualityCheckResult</Name>
				<Source><![CDATA[
    public void savedQualityCheckResult(
        SysInstrumentationActivityContext   _activityContext,
        int                                 _qualityCheckedWorkLines)
    {
        _activityContext.addCustomProperty('QualityCheck.QualityCheckedWorkLines', any2Str(_qualityCheckedWorkLines));
    }

]]></Source>
			</Method>
			<Method>
				<Name>cancelWorkLinesAfterRejectedQualityCheck</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext cancelWorkLinesAfterRejectedQualityCheck()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'CancelWorkLinesAfterRejectedQualityCheck'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>cancelledWorkLinesAfterRejectedQualityCheck</Name>
				<Source><![CDATA[
    public void cancelledWorkLinesAfterRejectedQualityCheck(
        SysInstrumentationActivityContext   _activityContext,
        int                                 _cancelledWorkLines)
    {
        _activityContext.addCustomProperty('QualityCheck.CancelledWorkLines', any2Str(_cancelledWorkLines));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createQualityOrders</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext createQualityOrders(WHSQualityProcessingPolicy _processingPolicy)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + 'CreateQualityOrders');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty('QualityCheckTemplate.ProcessingPolicy', any2Str(_processingPolicy));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createdQualityOrders</Name>
				<Source><![CDATA[
    public void createdQualityOrders(
        SysInstrumentationActivityContext   _activityContext,
        int                                 _createdQualityOrders)
    {
        _activityContext.addCustomProperty('QualityCheck.CreatedQualityOrders', any2Str(_createdQualityOrders));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>