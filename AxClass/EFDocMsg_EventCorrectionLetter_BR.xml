<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocMsg_EventCorrectionLetter_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Processes CC-e event messages.
/// </summary>
class EFDocMsg_EventCorrectionLetter_BR extends EFDocEventMsgBase_BR
{
    EFDocWebServiceParameters_BR parameters;
    IEFEventDocMsgFormat_BR     formatClass;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEncoderType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the Encoder type of the event web service.
    /// </summary>
    /// <param name="_fiscalEstablishment">
    /// The <c>FiscalEstablishment_BR</c> record that defines NF-e parameters.
    /// </param>
    /// <returns>
    /// The web service Encoder type.
    /// </returns>
    public EFDocEncoderType getEncoderType(FiscalEstablishment_BR _fiscalEstablishment)
    {
        this.initParameters(_fiscalEstablishment);

        if (parameters)
        {
            return parameters.EncoderType;
        }

        throw Error(strfmt("@GLS62697", EFDocWebService_BR::Events));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormat</Name>
				<Source><![CDATA[
    private IEFEventDocMsgFormat_BR getFormat(FiscalEstablishment_BR _fiscalEstablishment)
    {
        this.initParameters(_fiscalEstablishment);

        if (parameters)
        {
            this.defineFormatClass(_fiscalEstablishment);
            return formatClass;
        }

        throw Error(strfmt("@GLS62697", EFDocWebService_BR::Events));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReceiveFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the an instance of the format class.
    /// </summary>
    /// <param name="_fiscalEstablishment">
    /// Fiscal establishment related to the message.
    /// </param>
    /// <returns>
    /// An instance of the format class.
    /// </returns>
    public IEFEventDocMsgFormat_BR getReceiveFormat(FiscalEstablishment_BR _fiscalEstablishment)
    {
        return this.getFormat(_fiscalEstablishment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSendFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the an instance of the format class.
    /// </summary>
    /// <param name="_fiscalEstablishment">
    /// Fiscal establishment related to the message.
    /// </param>
    /// <returns>
    /// An instance of the format class.
    /// </returns>
    public IEFEventDocMsgFormat_BR getSendFormat(FiscalEstablishment_BR _fiscalEstablishment)
    {
        return this.getFormat(_fiscalEstablishment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSendWebService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the webservice to be used.
    /// </summary>
    /// <returns>
    /// The webservice.
    /// </returns>
    protected EFDocWebService_BR getSendWebService()
    {
        return EFDocWebService_BR::Events;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSoapVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the SOAP version of the event web service.
    /// </summary>
    /// <param name="_fiscalEstablishment">
    /// The <c>FiscalEstablishment_BR</c> record that defines NF-e parameters.
    /// </param>
    /// <returns>
    /// The web service SOAP version.
    /// </returns>
    public EFDocSoapVersion getSoapVersion(FiscalEstablishment_BR _fiscalEstablishment)
    {
        this.initParameters(_fiscalEstablishment);

        if (parameters)
        {
            return parameters.SoapVersion;
        }

        throw Error(strfmt("@GLS62697", EFDocWebService_BR::Events));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getURL</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the URL of the event web service.
    /// </summary>
    /// <param name="_fiscalEstablishment">
    /// The <c>FiscalEstablishment_BR</c> record that defines NF-e parameters.
    /// </param>
    /// <returns>
    /// The web service URl.
    /// </returns>
    public URL getURL(FiscalEstablishment_BR _fiscalEstablishment)
    {
        this.initParameters(_fiscalEstablishment);

        if (parameters)
        {
            return parameters.URL;
        }

        throw Error(strfmt("@GLS62697", EFDocWebService_BR::Events));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParameters</Name>
				<Source><![CDATA[
    private void initParameters(FiscalEstablishment_BR _fiscalEstablishment)
    {
        EFDocAuthorityId_BR     authorityId;

        if (!parameters)
        {
            authorityId = this.getAuthority(_fiscalEstablishment);

            select parameters
                where parameters.Environment == _fiscalEstablishment.EFDocEnvironment &&
                        parameters.WebService  == EFDocWebService_BR::Events &&
                        parameters.Authority   == authorityId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveMsg</Name>
				<Source><![CDATA[
    /// <summary>
    /// It saves the XML Doc sent and accepted by the government requesting approval of Fiscal Doc (NF-e)
    /// </summary>
    /// <param name="_eFDocument">
    /// Fiscal Document
    /// </param>
    /// <param name="_sendStream">
    /// Send stream used to read message content
    /// </param>
    /// <param name="_returnStream">
    /// Receive stream used to read message content
    /// </param>
    /// <param name="_returnInfo">
    /// Code that indicates the XML Doc was accepted by the government
    /// </param>
    protected void saveMsg(EFDocument_BR                 _eFDocument,
                           IEFDocMsgStream_BR            _sendStream,
                           IEFDocMsgStream_BR            _returnStream,
                           EFiscalDocumentReturnInfo_BR  _returnInfo)
    {
        EFDocCorrectionLetter_BR    correctionLetter;
        EFDocEventStatus_BR         eventStatus;

        eventStatus  = EFDocEventReturnCode_BR::getStatusFromReturnCode(_returnInfo.parmReturnCodeStatus());

        ttsBegin;

        correctionLetter                        = EFDocCorrectionLetter_BR::findRefRecId(_efDocument.RefRecId,true);

        switch (eventStatus)
        {
            case EFDocEventStatus_BR::Approved:
                correctionLetter.Status = EFDocCorrectionLetterStatus_BR::Approved;
                break;
            case EFDocEventStatus_BR::Rejected:
                correctionLetter.Status = EFDocCorrectionLetterStatus_BR::Rejected;
                break;
            case EFDocEventStatus_BR::Error:
                correctionLetter.Status = EFDocCorrectionLetterStatus_BR::Created;
                break;
        }

        if (correctionLetter.Status != EFDocCorrectionLetterStatus_BR::Created)
        {
            correctionLetter.ProtocolNumber         = _returnInfo.parmProtocolNumber();
            correctionLetter.EventDateTime          = _returnInfo.parmProcessDateTime();
            correctionLetter.XmlDocSent             = _sendStream.toString();
            correctionLetter.XmlDocReceived         = _returnStream.toString();
        }

        correctionLetter.ReturnCodeDescription  = _returnInfo.parmReturnCodeDescription();
        correctionLetter.ReturnCode             = _returnInfo.parmReturnCodeStatus();

        correctionLetter.update();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static EFDocMsg_EventCorrectionLetter_BR construct()
    {
        return new EFDocMsg_EventCorrectionLetter_BR();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defineFormatClass</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines format class based on NF-e version.
    /// </summary>
    /// <param name = "_fiscalEstablishment">
    /// <c>FiscalEstablishment_BR</c> record.
    /// </param>
    [Replaceable]
    protected void defineFormatClass(FiscalEstablishment_BR _fiscalEstablishment)
    {
        if (!this.defineFormatClassEFiscalDocVersionSwitch(_fiscalEstablishment))
        {
            throw Error(strfmt("@GLS62697", EFDocWebService_BR::Events));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defineFormatClassEFiscalDocVersionSwitch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines format class based on NF-e version.
    /// </summary>
    /// <param name = "_fiscalEstablishment">
    /// <c>FiscalEstablishment_BR</c> record.
    /// </param>
    protected boolean defineFormatClassEFiscalDocVersionSwitch(FiscalEstablishment_BR _fiscalEstablishment)
    {
        boolean ret = false;
        #EFDocConstants_BR

        switch (_fiscalEstablishment.EFDocVersion)
        {
            case EFiscalDocVersion_BR::V4:
                formatClass = new EFEventDocMsgFormat_CorrectionLetter_BR();
                ret = true;
                break;

            case EFiscalDocVersion_BR::V31:
            case EFiscalDocVersion_BR::V40:
                switch (parameters.Version)
                {
                    case #EFDocLayoutVersion100:
                        formatClass = new EFEventDocMsgFormat_CorrectionLetteV3_BR();
                        ret = true;
                        break;

                    case #EFDocLayoutVersion200:
                        formatClass = new EFEventDocMsgFormat_CorrLettV3_WS2_BR();
                        ret = true;
                        break;

                    case #EFDocLayoutVersion310:
                        formatClass = new EFEventDocMsgFormat_CorrLettV3_WS3_BR();
                        ret = true;
                        break;

                    default:
                        throw error(Error::wrongUseOfFunction(funcName()));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAuthority</Name>
				<Source><![CDATA[
    private EFDocAuthorityId_BR getAuthority(FiscalEstablishment_BR _fiscalEstablishment)
    {
        EFDocAuthorityId_BR authorityId = _fiscalEstablishment.EFDocAuthority;

        authorityId = _fiscalEstablishment.EFDocAuthority;

        return authorityId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>