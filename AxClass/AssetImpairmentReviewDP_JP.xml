<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetImpairmentReviewDP_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetImpairmentReviewDP_JP</c> class is the Report Data Provider class for the<c>AssetImpairmentReviewRpt_JP</c> Overview Report.
/// </summary>
/// <remarks>
/// This is the RDP class for the <c>AssetImpairmentReviewRpt_JP</c> SRS Report.
/// </remarks>
[
    SRSReportParameterAttribute(classStr(AssetImpairmentReviewContract_JP))
]
public class AssetImpairmentReviewDP_JP extends SRSReportDataProviderBase
{
    AssetImpairmentTempCarryingAmount_JP      tempCarryingAmount;
    AssetImpairmentTempTransAnalysis_JP       tempTransAnalysis;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetImpairmentTempCarryingAmount_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves data from the <c>AssetImpairmentReviewTempCA_JP</c> table.
    /// </summary>
    /// <returns>
    /// The data from the <c>AssetImpairmentReviewTempCA_JP</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(AssetImpairmentTempCarryingAmount_JP))
    ]
    public AssetImpairmentTempCarryingAmount_JP getAssetImpairmentTempCarryingAmount_JP()
    {
        select tempCarryingAmount;
        return tempCarryingAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssetImpairmentTempTransAnalysis_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves data from the <c>AssetImpairmentReviewTempTA_JP</c> table.
    /// </summary>
    /// <returns>
    /// The data from the <c>AssetImpairmentReviewTempTA_JP</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(AssetImpairmentTempTransAnalysis_JP))
    ]
    public AssetImpairmentTempTransAnalysis_JP getAssetImpairmentTempTransAnalysis_JP()
    {
        select tempTransAnalysis;
        return tempTransAnalysis;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    public void processReport()
    {
        AssetImpairmentReviewContract_JP    contract;
        SRSReportRunPermission              runReport;

        contract = this.parmDataContract();

        runReport = new SRSReportRunPermission();
        runReport.assert();
        if (contract.parmTempCarryingAmountRecId())
        {
            delete_from tempCarryingAmount;
            tempCarryingAmount  = SRSTmpTblMarshaller::getTmpTbl(contract.parmTempCarryingAmountRecId());
            SRSTmpTblMarshaller::deleteTmpTblData(contract.parmTempCarryingAmountRecId());
        }

        if (contract.parmTempTransAnalysisRecId())
        {
            delete_from tempTransAnalysis;
            tempTransAnalysis  = SRSTmpTblMarshaller::getTmpTbl(contract.parmTempTransAnalysisRecId());
            SRSTmpTblMarshaller::deleteTmpTblData(contract.parmTempTransAnalysisRecId());
        }

        CodeAccessPermission::revertAssert();

        contract.parmTempCarryingAmountRecId(0);
        contract.parmTempTransAnalysisRecId(0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>