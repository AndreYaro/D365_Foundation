<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAdj_RU_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
#ISOCountryRegionCodes
[ExtensionOf(classStr(InventAdj))]
internal final class InventAdj_RU_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>useAdjRoundAccount_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determinates if rounding account can be used for the operation.
    /// </summary>
    /// <returns>true if rounding account can be used for the operation; otherwise false.</returns>
    public static boolean useAdjRoundAccount_RU()
    {
        InventAdjErrorPostingOperationsContext inventAdjErrorPostingOperationsContext = InventAdjErrorPostingOperationsContext::instance();

        if ((!inventAdjErrorPostingOperationsContext ||
            !inventAdjErrorPostingOperationsContext.parmDoNotUseRoundingPosting()) &&
            InventParameters::find().UseAdjRoundingAccounts)
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildItemLedgerDimensionParameterForOperations</Name>
				<Source><![CDATA[
    protected static InventPostingItemLedgerDimensionParameters buildItemLedgerDimensionParameterForOperations(
        CostAmount  _costAmount,
        ItemId      _itemId,
        ItemGroupId _itemGroupId,
        InventDim   _inventDim_RU)
    {
        InventPostingItemLedgerDimensionParameters searchParameters = next buildItemLedgerDimensionParameterForOperations(
            _costAmount,
            _itemId,
            _itemGroupId,
            _inventDim_RU);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            searchParameters.InventDim_RU = _inventDim_RU;

            if (InventAdj::useAdjRoundAccount_RU())
            {
                searchParameters.AccountType = _costAmount >= 0 ? InventAccountType::InventRoundingProfit_RU : InventAccountType::InventRoundingLoss_RU;
            }
        }

        return searchParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorPostingOperations</Name>
				<Source><![CDATA[
    static LedgerPostingType errorPostingOperations(CostAmount _costAmount)
    {
        LedgerPostingType errorPostingOperationsType = next errorPostingOperations(_costAmount);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) &&
            InventAdj::useAdjRoundAccount_RU())
        {
            if (_costAmount >= 0)
            {
                errorPostingOperationsType = LedgerPostingType::InventRoundingProfit_RU;
            }
            else
            {
                errorPostingOperationsType = LedgerPostingType::InventRoundingLoss_RU;
            }
        }
        
        return errorPostingOperationsType;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>