<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendPaymFileAnalyze_NO_TP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CustVendPaymFileAnalyze_NO_TP extends CustVendPaymFileAnalyze implements CustVendBankPaymFormat
{
    Counter     recordPart;
    str         record;
    int         prevAhTransSeqNo;

    boolean     readRecordStart;
    boolean     readRecordEnd;
    int         capLen;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>errorText</Name>
				<Source><![CDATA[
        public str errorText(Counter statusCode)
    {
        switch (statusCode)
        {
            case 00: return 'Avvisningsretur, men ingen feil i denne recorden..'; //'Filen er avvist, men ingen feil i denne record.';

            case 01: return 'Mottaksretur';
            case 02: return 'Avregningsretur';

            case 10: return 'Feil  i foretaksnummer.';
            case 11: return 'Endring/sletting ikke tillatt.';
            case 12: return 'Totalsum fakturaer/kreditnotaer må ikke være mindre en 0.';
            case 13: return 'Løpenummer finnes ikke eller ugyldig.';
            case 14: return 'Transaksjonstype kan ikke endres i BETFOR21.';
            case 15: return 'Manglende debet/kredit kode.';
            case 16: return 'Blanding av strukturert og ustrukturert meldingsinformasjon ikke mulig.';
            case 17: return 'Feil bruk av KID / ugyldig KID.';
            case 18: return 'Mottaker krever gyldig KID.';
            case 19: return 'Kredit kontonummer ikke gyldig.';
            case 20: return 'Debet kontonummer ikke gyldig.';
            case 21: return 'Feil i betalingsdato.';
            case 22: return 'Ref.nummer finnes ikke eller ugyldig.';
            case 25: return 'Utløpt passord (passord for gammelt)';
            case 26: return 'Operatør sperret.';
            case 27: return 'Feil passord.';
            case 28: return 'Operatør ikke autorisert.';
            case 29: return 'Ugyldig operatørnummer.';
            case 30: return 'Ugyldig versjonsnummer i Betfor00.';
            case 34: return 'Feil i navn/adresse felt.';
            case 35: return 'Feil valutasort.';

            case 36: return 'Feil i avtalt kurs/terminkurs';
            case 37: return 'Feil i sjekk kode.';
            case 38: return 'Feil i omkostningskode.';
            case 39: return 'Feil i varslingsanvisning.';
            case 40: return 'Feil i prioritetskode.';

            case 41: return 'Feil i myndighetsrapporteringskode.';
            case 42: return 'Feil i beløp.';
            case 43: return 'Myndighetsrapporteringskode \"Myndighetsrapporteringstekst\" må fylles ut.';
            case 44: return 'Feil mottagers landkode.';
            case 45: return 'SWIFT-adresse feil utfylt.';
            case 47: return 'Feil i produksjonsdato.';

            case 80: return 'Feil i sekvenskontrollfelt.';
            case 81: return 'Feil oppbygd batch.';
            case 82: return 'Ugyldig transaksjonskode.';
            case 83: return 'Seglfeil.';
            case 84: return 'Ny Sigillnøkkel mangler.';
            case 85: return 'Feil oppbygd oppdrag.';
            case 86: return 'BETFOR etterfølges ikke av tilstrekkelig antall records.';
            case 87: return 'Mangler/feil i BETFOR99.';
            case 88: return 'Mangler/feil i BETFOR00.';
            case 89: return 'Summeringsfeil av antall records innenfor en batch (BETFOR99).';
            case 90: return 'Sekvensfeil i AH-sekvens (applikasjonsheader)';
            case 91: return 'Ukjent AH-RUTINE-ID.';
            case 92: return 'Feil i AH-TRANS-DATO.';
            case 95: return 'Ugyldig divisjon.';
        }

        return 'Ukjent feil';
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatTxt</Name>
				<Source><![CDATA[
        public void formatTxt(int _pos, int _fromPos, int _toPos, str _name, str _record, str _descr = '')
    {
        str value = substr(_record,_fromPos,_toPos-_fromPos+1);
        str recordStr;

        recordStr =
        num2Str0(_pos,2)+': '+
        num2Str0(_fromPos,3)+'-'+
        num2Str0(_toPos,3)+', '+
        num2Str0(_toPos-_fromPos+1,3)+' '+
        strLFix(_name,capLen,'.')+': '+
        value +
        (_descr ? ' '+ _descr : '');

        this.write(recordStr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>interfaceName</Name>
				<Source><![CDATA[
        public ClassName interfaceName()
    {
        return 'TelePay 2.01 (NO)';
    }

]]></Source>
			</Method>
			<Method>
				<Name>processRecord</Name>
				<Source><![CDATA[
        public void processRecord(container _record)
    {
        int                 ahStatusCode;
        Counter             ahTransSeqNo;
        str 8               transCode;

        capLen = 40; //length of caption

        // Sumup logical record from 4 physical records
        recordPart  += 1;
        record      += conpeek(_record,1);

        this.record(_record);   //write the record line

        if (recordPart == 4) // Records are physical divided into 4 lines in the file
        {
            ahStatusCode = str2int(substr(record,  4, 2));
            ahTransSeqNo = str2int(substr(record, 14, 6));
            transCode    =         substr(record, 41, 8);              //BETFORxx

            // Check for continuity in the sequence number
            if (prevAhTransSeqNo && (prevAhTransSeqNo+1 != ahTransSeqNo))
            {
                this.write('----> Brudd i sekvensnummerserien i filen. <----');
            }

            // Check for start and end records
            if (transCode != 'BETFOR00')
            {
                if (!readRecordStart)
                {
                    this.write('----> Feil i startrecord. <----');
                }

                if (readRecordEnd)
                {
                    this.write('----> Feil i sluttrecord. <----');
                }
            }

            switch (transCode)
            {
                case 'BETFOR00': // Startrecord
                    readRecordStart = true;
                    readRecordEnd   = false;
                    setprefix('BETFOR00');
                    this.recordBetfor00();
                    break;
                case 'BETFOR01': // Utland, Overførselsrecord
                    setprefix('BETFOR01');
                    this.recordBetfor01();
                    break;
                case 'BETFOR02': // Utland, Bankforbindelsesrecord
                    this.recordBetfor02();
                    break;
                case 'BETFOR03': // Utland, Mottakerrecord
                    this.recordBetfor03();
                    break;
                case 'BETFOR04': // Utland, Fakturarecord
                    this.recordBetfor04();
                    break;
                case 'BETFOR21': // Innland, Overførselsrecord
                    this.recordBetfor21();
                    break;
                case 'BETFOR22': // Innland, MasseOverførselrecord
                    this.recordBetfor22();
                    break;
                case 'BETFOR23': // Innland, Fakturarecord
                    this.recordBetfor23();
                    break;
                case 'BETFOR99': // Avslutningsrecord
                    this.recordBetfor99();
                    readRecordEnd   = true;
                    break;
                default:
                    this.write(strfmt('----> Ukjent transaksjonskode: \"%1\"',transCode)+ ' <----');
            }

            // Cleanup for next record
            recordPart = 0;
            record     = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>record</Name>
				<Source><![CDATA[
        public void record(container _record)
    {
        if (conpeek(_record,1))
        {
            if (recordPart ==1)
            {
                this.write(' ');
                this.write(' ');
                this.write('Record');
            }
            this.write(strfmt('Linje %1: %2',recordPart, conpeek(_record,1)));  //the line that is read
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordApplHeader</Name>
				<Source><![CDATA[
        public void recordApplHeader()
    {
        this.write('');
        this.write('TelePay ---> '+substr(record,41,8)+ ' <---');

        this.formatTxt(1, 1, 3,'O/F       ' + 'AH-ID+Ver:'         ,record);
        this.formatTxt(2, 4, 5,'O/V       ' + 'AH-RETURKODE:'      ,record, this.errorText(str2int(substr(record,4,2))));
        this.formatTxt(3, 6, 9,'O/V       ' + 'AH-RUTINE-ID:'      ,record);
        this.formatTxt(4,10,13,'          ' + 'AH-TRANSDATO:'      ,record);
        this.formatTxt(5,14,19,'O/V       ' + 'AH-TRANS-SEKVNR:'   ,record);
        this.formatTxt(6,20,27,'          ' + 'AH-TRANSKODE:'      ,record);
        this.formatTxt(7,28,38,'          ' + 'AH-BRUKERID:'       ,record);
        this.formatTxt(8,39,40,'O/F       ' + 'AH-ANTALL A 80:'    ,record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor00</Name>
				<Source><![CDATA[
        public void recordBetfor00()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKTIONSKODE:',    record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',      record);
        this.formatTxt(11, 60, 70,'          ' + 'DIVISJON:',            record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLFELT:',  record);
        this.formatTxt(13, 75, 80,'          ' + 'RESERVERT:',           record);
        this.formatTxt(14, 81, 84,'O/V       ' + 'PRODUKSJONDATO:',      record);
        this.formatTxt(15, 85, 94,'          ' + 'PASSORD(-):',          record);
        this.formatTxt(16, 95,104,'O/F       ' + 'RUTINE VERSJON:',      record);
        this.formatTxt(17,105,114,'          ' + 'NYTT PASSORD(-):',     record);
        this.formatTxt(18,115,125,'          ' + 'OPERATØRNUMMER(-):',   record);
        this.formatTxt(19,126,126,'          ' + 'SIGILL: SEGL-BRUK:',   record);
        this.formatTxt(20,127,132,'          ' + 'SIGILL: SEGL-DATO:',   record);
        this.formatTxt(21,133,152,'          ' + 'SIGILL: DEL-NØKKEL:',  record);
        this.formatTxt(22,153,153,'          ' + 'SIGILL: SEGL HVORDAN:',record);
        this.formatTxt(23,154,296,'          ' + 'RESERVERT:',           record);
        this.formatTxt(24,297,311,'          ' + 'EGENREFERANSE:',       record);
        this.formatTxt(25,312,320,'          ' + 'RESERVERT:',           record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor01</Name>
				<Source><![CDATA[
        public void recordBetfor01()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKSJONSKODE:',       record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',         record);
        this.formatTxt(11, 60, 70,'O/V       ' + 'KONTONUMMER:',            record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLLFELT:',    record);
        this.formatTxt(13, 75, 80,'R1/R2/O/V ' + 'REFERANSENUMMER:',        record);

        this.formatTxt(14, 81, 86,'O/V       ' + 'BETALINGSDATO:',                      record);
        this.formatTxt(15, 87,116,'          ' + 'EGENREF. OPPDRAG:',                   record);
        this.formatTxt(16,117,119,'          ' + 'BETALINGSVALUTASORT:',                record);
        this.formatTxt(17,120,122,'O/V       ' + 'FAKTURAVALUTASORT:',                  record);
        this.formatTxt(18,123,125,'          ' + 'OMKOSTNINGER I UTLAND:',              record);
        this.formatTxt(19,126,128,'          ' + 'OMKOSTNINGER I NORGE:',               record);
        this.formatTxt(20,129,158,'          ' + 'VARSLINGSANVISNINGER:',               record);
        this.formatTxt(21,159,159,'          ' + 'PRIORITET:',                          record);
        this.formatTxt(22,160,167,'          ' + 'AVTALT KURS:',                        record);
        this.formatTxt(23,168,173,'          ' + 'TERMINKONTRAKTSNUMMER:',              record);
        this.formatTxt(24,174,181,'          ' + 'TERMINKONTRAKTSKURS:',                record);
        this.formatTxt(25,182,182,'          ' + 'SJEKKODE:',                           record);
        this.formatTxt(26,183,188,'          ' + 'VALUTERING MOTTAK.BANK (ÅÅMMDD):',    record);
        this.formatTxt(27,189,190,'          ' + 'RESERVERT:',                          record);
        this.formatTxt(28,191,202,'R2        ' + 'REELL KURS:',                         record);
        this.formatTxt(29,203,214,'R2        ' + 'EFFEKTUERINGSREF.2:',                 record);
        this.formatTxt(30,215,230,'R2        ' + 'BELASTET BELØP:',                     record);
        this.formatTxt(31,231,246,'R2        ' + 'OVERFØRT BELØP:',                     record);
        this.formatTxt(32,247,251,'          ' + 'KLIENT REFERANSE:',                   record);
        this.formatTxt(33,252,257,'R2        ' + 'EFFEKTURERINGSREF.1:',                record);
        this.formatTxt(34,258,263,'          ' + 'AVTALT MED:',                         record);
        this.formatTxt(35,264,264,'          ' + 'SLETTEKODE:',                         record);
        this.formatTxt(36,265,265,'          ' + 'CLEARINGKODE:',                       record);
        this.formatTxt(37,266,271,'R2        ' + 'VALUTERINGSDATO:',                    record);
        this.formatTxt(38,272,280,'R2        ' + 'PROVISJON:',                          record);
        this.formatTxt(39,281,292,'R2        ' + 'KURS MOT NOK:',                       record);
        this.formatTxt(40,293,293,'R2        ' + 'SLETTEÅRSAK:',                        record);
        this.formatTxt(41,294,309,'R2        ' + 'BESTILT OVERFØRT BELØP:',             record);
        this.formatTxt(42,310,310,'R2        ' + 'INFO.VEDR. PRISING:',                 record);
        this.formatTxt(43,311,320,'          ' + 'RESERVERT:',                          record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor02</Name>
				<Source><![CDATA[
        public void recordBetfor02()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKSJONSKODE:',       record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',         record);
        this.formatTxt(11, 60, 70,'O/V       ' + 'KONTONUMMER:',            record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLLFELT:',    record);
        this.formatTxt(13, 75, 80,'R1/R2/O/V ' + 'REFERANSENUMMER:',        record);

        this.formatTxt(14, 81, 91,'          ' + 'SWIFTADRESSE:',           record);
        this.formatTxt(15, 92,126,'  V       ' + 'BANKNAVN:',               record);
        this.formatTxt(16,127,161,'          ' + 'BANKADRESSE 1:',          record);
        this.formatTxt(17,162,196,'          ' + 'BANKADRESSE 2:',          record);
        this.formatTxt(18,197,231,'          ' + 'BANKADRESSE 3:',          record);
        this.formatTxt(19,232,242,'          ' + 'SWIFTADR. REMB. BANK:',   record);
        this.formatTxt(20,243,244,'O/V       ' + 'MOTTAKERS BANK LANDKODE:',record);
        this.formatTxt(21,245,259,'          ' + 'BANKKODE:',               record);
        this.formatTxt(22,260,294,'          ' + 'KONTONUMMER VED TBIO:',   record);
        this.formatTxt(22,295,320,'          ' + 'RESERVERT:',              record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor03</Name>
				<Source><![CDATA[
        public void recordBetfor03()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKSJONSKODE:',       record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',         record);
        this.formatTxt(11, 60, 70,'O/F       ' + 'KONTONUMMER:',            record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLLFELT:',    record);
        this.formatTxt(13, 75, 80,'R1/R2/O/V ' + 'REFERANSENUMMER:',        record);

        this.formatTxt(14, 81,115,'          ' + 'MOTTAKERS KONTONUMMER:',  record);
        this.formatTxt(15,116,150,'O         ' + 'MOTTAKERS NAVN:',         record);
        this.formatTxt(16,151,185,'          ' + 'ADRESSE 1:',              record);
        this.formatTxt(17,186,220,'          ' + 'ADRESSE 2:',              record);
        this.formatTxt(18,221,255,'          ' + 'ADRESSE 3:',              record);
        this.formatTxt(19,256,257,'O         ' + 'MOTTAKERS LANDKODE:',     record);
        this.formatTxt(20,258,258,'V         ' + 'TELEX/TELEFAX: (T/F)',    record);
        this.formatTxt(21,259,260,'V         ' + 'TELEX LANDKODE:',         record);
        this.formatTxt(22,261,278,'V         ' + 'TELEX/TELEFAX NR:',       record);
        this.formatTxt(23,279,298,'V         ' + 'ATTENTION:',              record);
        this.formatTxt(24,299,320,'          ' + 'RESERVERT:',              record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor04</Name>
				<Source><![CDATA[
        public void recordBetfor04()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKSJONSKODE:',                   record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',                     record);
        this.formatTxt(11, 60, 70,'O/V       ' + 'KONTONUMMER:',                        record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLLFELT:',                record);
        this.formatTxt(13, 75, 80,'R1/R2/O/V ' + 'REFERANSENUMMER:',                    record);

        this.formatTxt(14, 81,115,'          ' + 'MOTTAKER REF FAKTURA:',               record);
        this.formatTxt(15,116,150,'          ' + 'EGENREFERANSE:',                      record);
        this.formatTxt(16,151,165,'O/V       ' + 'FAKTURA BELØP:',                      record);
        this.formatTxt(17,166,166,'O/V       ' + 'DEBET/KREDIT KODE SLETTEKODE:',       record);
        this.formatTxt(18,167,172,'O/V       ' + 'MYNDIGHETSRAPPORTERINGSKODE:',        record);
        this.formatTxt(19,173,232,'O         ' + 'MYNDIGHETSRAPPORTERINGSTEKST:',       record);
        this.formatTxt(20,233,233,'          ' + 'TIL EGEN KONTO:',                     record);
        this.formatTxt(21,234,234,'R2        ' + 'SLETTEÅRSAK:',                        record);
        this.formatTxt(22,235,240,'O         ' + 'RESERVERT:',                          record);
        this.formatTxt(23,241,241,'O         ' + 'RESERVERT:',                          record);
        this.formatTxt(24,242,247,'O         ' + 'RESERVERT:',                          record);
        this.formatTxt(25,248,292,'          ' + 'RESERVERT:',                          record);
        this.formatTxt(26,293,293,'          ' + 'KID UTLAND:',                         record);
        this.formatTxt(27,294,296,'R2/O/V    ' + 'LØPENUMMER:',                         record);
        this.formatTxt(28,297,320,'          ' + 'RESERVERT:',                          record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor21</Name>
				<Source><![CDATA[
        public void recordBetfor21()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKSJONSKODE:',               record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',                 record);
        this.formatTxt(11, 60, 70,'O/V       ' + 'KONTONUMMER:',                    record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLLFELT:',            record);
        this.formatTxt(13, 75, 80,'R1/R2/O/V ' + 'REFERANSENUMMER:',                record);

        this.formatTxt(14, 81, 86,'O/V       ' + 'BETALINGSDATO (ÅÅMMDD):',         record);
        this.formatTxt(15, 87,116,'          ' + 'EGENREF OPPDRAG:',                record);
        this.formatTxt(16,117,117,'          ' + 'RESERVERT:',                      record);
        this.formatTxt(17,118,128,'O/V       ' + 'MOTTAGERS KONTONUMMER:',          record);
        this.formatTxt(18,129,158,'O/V       ' + 'MOTTAGERS NAVN:',                 record);
        this.formatTxt(19,159,188,'          ' + 'ADRESSE 1:',                      record);
        this.formatTxt(20,189,218,'          ' + 'ADRESSE 2:',                      record);
        this.formatTxt(21,219,222,'          ' + 'POSTNR:',                         record);
        this.formatTxt(22,223,248,'          ' + 'POSTSTED:',                       record);
        this.formatTxt(23,249,263,'          ' + 'BELØP TIL EGEN KONTO:',           record);
        this.formatTxt(24,264,266,'          ' + 'TEKSTKODE:',                      record);
        this.formatTxt(25,267,267,'O/V       ' + 'TRANSAKSJONSTYPE:',               record);
        this.formatTxt(26,268,268,'          ' + 'SLETTEKODE:',                     record);
        this.formatTxt(27,269,283,'R2        ' + 'TOTALBELØP:',                     record);
        this.formatTxt(28,284,288,'          ' + 'KLIENTREFERANSE:',                record);
        this.formatTxt(29,289,294,'R2        ' + 'VALUTERINGSDATO (ÅÅMMDD):',       record);
        this.formatTxt(30,295,300,'          ' + 'VALUTERING MOTT.BANK (ÅÅMMDD):',  record);
        this.formatTxt(31,301,301,'R2        ' + 'SLETTEÅRSAK:',                    record);
        this.formatTxt(32,302,310,'          ' + 'RESERVERT:',                      record);
        this.formatTxt(33,311,320,'          ' + 'BLANKETTNUMMER:',                 record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor22</Name>
				<Source><![CDATA[
        public void recordBetfor22()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKSJONSKODE:',        record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',          record);
        this.formatTxt(11, 60, 70,'O/V       ' + 'KONTONUMMER:',             record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLLFELT:',     record);
        this.formatTxt(13, 75, 80,'R1/R2/O/V ' + 'REFERANSENUMMER:',         record);

        this.formatTxt(14, 81, 91,'O/V       ' + 'MOTTAKERS KONTONUMMER:',   record);
        this.formatTxt(15, 92,121,'O/V       ' + 'MOTTAKERS NAVN:',          record);
        this.formatTxt(16,122,136,'O         ' + 'BELØP:',                   record);
        this.formatTxt(17,137,137,'          ' + 'SLETTEKODE',               record);
        this.formatTxt(18,138,172,'          ' + 'EGENREFERANSE 1:',         record);
        this.formatTxt(19,173,282,'          ' + 'RESERVERT:',               record);
        this.formatTxt(20,283,292,'          ' + 'EGENREFERANSE 2:',         record);
        this.formatTxt(21,293,296,'R1/R2     ' + 'LØPENUMMER:',              record);
        this.formatTxt(22,297,297,'R2        ' + 'SLETTEÅRSAK:',             record);
        this.formatTxt(23,298,320,'          ' + 'RESERVERT:',               record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor23</Name>
				<Source><![CDATA[
        public void recordBetfor23()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKSJONSKODE:',        record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',          record);
        this.formatTxt(11, 60, 70,'O/V       ' + 'KONTONUMMER:',             record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLLFELT:',     record);
        this.formatTxt(13, 75, 80,'R1/R2/O/V ' + 'REFERANSENUMMER:',         record);

        this.formatTxt(14, 81,120,'          ' + 'MELDING TIL MOTTAKER:',    record);
        this.formatTxt(15,121,160,'          ' + 'MELDING TIL MOTTAKER:',    record);
        this.formatTxt(16,161,200,'          ' + 'MELDING TIL MOTTAKER:',    record);
        this.formatTxt(17,201,227,'          ' + 'KUNDEID-FELT:',            record);
        this.formatTxt(18,228,257,'          ' + 'EGENREFERANSE FAKTURA:',   record);
        this.formatTxt(19,258,272,'O/V       ' + 'FAKTURABELØP:',            record);
        this.formatTxt(20,273,273,'O/V       ' + 'DEBET/KREDIT KODE:',       record);
        this.formatTxt(21,274,293,'          ' + 'SLETTEKODE:',              record);
        this.formatTxt(22,294,296,'R1/R2     ' + 'LØPENUMMER:',              record);
        this.formatTxt(23,297,297,'R2        ' + 'SLETTEÅRSAK:',             record);
        this.formatTxt(24,298,312,'          ' + 'KUNDENUMMER:',             record);
        this.formatTxt(25,313,320,'          ' + 'FAKTURADATO:',             record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBetfor99</Name>
				<Source><![CDATA[
        public void recordBetfor99()
    {
        this.recordApplHeader();

        this.formatTxt( 9, 41, 48,'O/F       ' + 'TRANSAKSJONSKODE:',        record);
        this.formatTxt(10, 49, 59,'O/F       ' + 'FORETAKSNUMMER:',          record);
        this.formatTxt(11, 60, 70,'          ' + 'RESERVERT:',               record);
        this.formatTxt(12, 71, 74,'O/V       ' + 'SEKVENSKONTROLLFELT:',     record);
        this.formatTxt(13, 75, 80,'          ' + 'RESERVERT:',               record);

        this.formatTxt(14, 81, 84,'O/V       ' + 'PRODUKSJONSDATO:',         record);
        this.formatTxt(15, 85, 88,'R2        ' + 'RESERVERT:',               record);
        this.formatTxt(16, 89,103,'R2        ' + 'RESERVERT:',               record);
        this.formatTxt(17,104,108,'O         ' + 'ANTALL RECORDS:',          record);
        this.formatTxt(18,109,271,'          ' + 'RESERVERT:',               record);

        this.formatTxt(27,272,275,'          ' + 'SIGILL: SECURITY:',        record);
        this.formatTxt(28,276,276,'          ' + 'SIGILL: LANGUAGE:',        record);
        this.formatTxt(29,277,277,'          ' + 'SIGILL: VERSJON:',         record);
        this.formatTxt(30,278,278,'          ' + 'SIGILL: INTERFACE:',       record);
        this.formatTxt(31,279,296,'          ' + 'SIGILL: KONTROLLFELT:',    record);
        this.formatTxt(32,297,312,'          ' + 'VERSJON SOFTWARE:',        record);
        this.formatTxt(33,313,320,'          ' + 'VERSJON BANK:',            record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordUnknown</Name>
				<Source><![CDATA[
        public void recordUnknown(str _record)
    {
        this.write('');
        this.write('UKJENT recordtyp');
        this.formatTxt(1,1,80,'Record',_record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePayments</Name>
				<Source><![CDATA[
        public void updatePayments()
    {
        if (!readRecordEnd)
        {
            throw error("@SYS119878");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public static ClassDescription description()
    {
        return new CustVendPaymFileAnalyze_NO_TP().interfaceName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        CustVendPaymFileAnalyze_NO_TP file = new CustVendPaymFileAnalyze_NO_TP();

        if (file.prompt())
        {
            file.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFileAnalyze</Name>
				<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedClass', 'PostR1AXLTODO')]
    public static void runFileAnalyze(Filename _filename)
    {
        CustVendPaymFileAnalyze_NO_TP file = new CustVendPaymFileAnalyze_NO_TP();
        //PostR1TODO
        //if (WinAPI::fileExists(_filename))
        //{
            file.setFileNames(_filename);

            if (file.parmFileName())
            {
                file.runOperation();
            }
        //}
    }

]]></Source>
			</Method>
			<Method>
				<Name>configurationKey</Name>
				<Source><![CDATA[
    // Inheriting classes generating output for electronic banking should return the configurationkey for Electronic Banking
    public configurationKeyId configurationKey()
    {
        return configurationKeyNum(Bank);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>