<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_KanbanJob_TransReceipt</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventMov_KanbanJob_TransReceipt extends InventMov_KanbanJob_Transfer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates the relationship between the inventory transactions originator and the owner.
    /// </summary>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public void createOriginOwnerRelationship()
    {
        InventTransOriginId originId = this.inventTransOriginId();

        if (originId && kanbanJob.RecId)
        {
            InventTransOriginKanbanJobTrsReceipt::writeOriginOwnerRelationship(kanbanJob.RecId, originId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the relationship between the inventory transactions originator and the owner that
    ///    corresponds.
    /// </summary>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public void deleteOriginOwnerRelationship()
    {
        if (kanbanJob)
        {
            InventTransOriginKanbanJobTrsReceipt::deleteOwnerRelationship(kanbanJob.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the ID of the inventory transaction originator that corresponds to the movement.
    /// </summary>
    /// <param name="_inventTransOriginId">
    ///    The new value of the ID of the inventory transaction originator.
    /// </param>
    /// <returns>
    ///    The ID of the inventory transaction originator that corresponds to the movement.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventTransOriginId inventTransOriginId(InventTransOriginId _inventTransOriginId = inventTransOriginId)
    {
        if (_inventTransOriginId != inventTransOriginId)
        {
            inventTransOriginId = _inventTransOriginId;
        }
        else
        {
            if (!inventTransOriginId)
            {
                inventTransOriginId = InventTransOriginKanbanJobTrsReceipt::findInventTransOriginId(kanbanJob.RecId);
            }
        }

        return inventTransOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_Orig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an inventory movement from the original <c>KanbanJob</c> table buffer.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>InventMovement</c> class if the <c>KanbanJob</c> record has been inserted;
    ///    otherwise, null.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventMovement newMovement_Orig()
    {
        return kanbanJob.RecId ? new InventMov_KanbanJob_TransReceipt(kanbanJob.orig(),kanbanJob.orig().type()) : null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_TransferIssue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a new instance of the <c>InventMovement</c> class that is constructed based on the
    ///    <c>KanbanJob</c> buffer of this movement.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>InventMovement</c> class that is constructed based on the <c>KanbanJob</c>
    ///    buffer of this movement.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventMovement newMovement_TransferIssue()
    {
        return InventMovement::construct(this.buffer());
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_TransferReceipt</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves an instance of the inventory movement.
    /// </summary>
    /// <returns>
    ///    The specified instance of the <c>InventMovement</c> class.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventMovement newMovement_TransferReceipt()
    {
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingBalanceSheet</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the balance sheet ledger posting type for the movement.
    /// </summary>
    /// <returns>
    ///    A <c>LedgerPostingType</c> enumeration value.
    /// </returns>
    /// <remarks>
    ///    This method overrides a base class method. Use a value of <c>LedgerPostingType::InventReceipt</c>
    ///    for posting.
    /// </remarks>
    public LedgerPostingType postingBalanceSheet()
    {
        return LedgerPostingType::InventReceipt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingOperations</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the operations ledger posting type for the movement.
    /// </summary>
    /// <returns>
    ///    A <c>LedgerPostingType</c> enumeration value.
    /// </returns>
    /// <remarks>
    ///    This method overrides a base class method. Use a value of
    ///    <c>LedgerPostingType::InventInterUnitPayable</c> for posting.
    /// </remarks>
    public LedgerPostingType postingOperations()
    {
        return LedgerPostingType::InventInterUnitPayable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferDirection</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the direction of the transfer movements.
    /// </summary>
    /// <returns>
    ///    The direction of the transfer movements.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventDirection transferDirection()
    {
        return InventDirection::Receipt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the ID of the transfer counterpart inventory transaction originator that corresponds to
    ///    the movement.
    /// </summary>
    /// <returns>
    ///    The ID of a transfer counterpart inventory transaction originator that corresponds to the movement.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventTransOriginId transferInventTransOriginId()
    {
        return InventTransOriginKanbanJobTrsIssue::findInventTransOriginId(kanbanJob.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transSign</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the transaction sign for the movement.
    /// </summary>
    /// <returns>
    ///    Always returns one.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public Integer transSign()
    {
        return 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the transaction type of the movement.
    /// </summary>
    /// <returns>
    ///    An <c>InventTransType</c> enumeration value.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventTransType transType()
    {
        return InventTransType::KanbanJobTransferReceipt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromKanbanJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventMov_KanbanJob_TransReceipt</c> class based on the
    ///    specified record.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    The record from the <c>KanbanJob</c> table for which the class is instantiated.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventMov_KanbanJob_TransReceipt</c> class.
    /// </returns>
    public static InventMov_KanbanJob_TransReceipt newFromKanbanJob(KanbanJob _kanbanJob)
    {
        return new InventMov_KanbanJob_TransReceipt(_kanbanJob);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>