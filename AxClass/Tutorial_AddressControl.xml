<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tutorial_AddressControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Sample control that demonstrates the composition of child controls and using a data-contract as a property
/// </summary>
/// <remarks>
/// This control uses a specialized view-model in order to achieve the binding between its data-contracts and
/// the contained child view-models. However it uses the standard "Group" view for rendering the children.
/// </remarks>
[FormControlAttribute("Group", "", classStr(Tutorial_BuildAddressControl))]
public class Tutorial_AddressControl extends FormContainerControl
{
    FormPropertySet properties;
    FormProperty addressProperty;

    FormStringControl streetControl;
    FormStringControl stateControl;
    FormStringControl cityControl;
    FormStringControl countryControl;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyBuild</Name>
				<Source><![CDATA[
    public void applyBuild()
    {
        Tutorial_BuildAddressControl build;

        super();

        build = this.build();
        if (build)
        {
            // Attached the address from the build to the run class
            this.parmAddress(build.parmAddress());

            // Here we add four child string edit controls for four fields
            streetControl =  this.addControl(FormControlType::String, this.name() + "_street");
            cityControl =  this.addControl(FormControlType::String, this.name() + "_city");
            stateControl = this.addControl(FormControlType::String, this.name() + "_state");
            countryControl = this.addControl(FormControlType::String, this.name() + "_country");

            // Setup the component controls
            streetControl.label("Street:");
            streetControl.allowEdit(false);
            cityControl.label("City:");
            cityControl.allowEdit(false);
            stateControl.label("State:");
            stateControl.allowEdit(false);
            countryControl.label("Country:");
            countryControl.allowEdit(false);

            // Apply the values from the data contract
            Tutorial_AddressContract address = this.parmAddress();
            streetControl.text(address.parmStreet());
            cityControl.text(address.parmCity());
            stateControl.text(address.parmState());
            countryControl.text(address.parmCountry());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FormBuildControl _build, FormRun _formRun)
    {
        super(_build, _formRun);

        this.setTemplateId("Group");
        this.setResourceBundleName("");

        properties = new FormPropertySet(this.changeTracker());

        // Create the address property
        addressProperty = properties.addProperty(methodStr(Tutorial_AddressControl, parmAddress), Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddress</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, "Address", true /* readonly*/ )]
    public Tutorial_AddressContract parmAddress(Tutorial_AddressContract _value = addressProperty.parmValue())
    {
        if (!prmisDefault(_value))
        {
            addressProperty.parmValue(_value);
        }
        return _value;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>