<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SigRouteVersionActivateProcedure</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>SIGRouteVersionActivateProcedure</c> class handles the route version activation process.
/// </summary>
class SigRouteVersionActivateProcedure extends SIGBOMRouteVersionActivateProcedure
{
    RouteVersion    version;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAuditFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets a list of signature-controlled fields for this procedure.
    /// </summary>
    /// <returns>
    ///    The list of fields that are required for this BOM-approval procedure.
    /// </returns>
    public container getAuditFieldList()
    {
        return [
                [DatabaseLogType::Update,tablenum(RouteVersion),fieldnum(RouteVersion,Active)]
                ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRouteVersion</Name>
				<Source><![CDATA[
    public RouteVersion parmRouteVersion(RouteVersion _version = null)
    {
        SIGBaseDocument doc;

        if (!prmisdefault(_version))
        {
            version = RouteVersion::findRecId(_version.RecId);
            docList = new List(Types::Class);
            if (version.Active)
            {
                version.Active      = false;
            }
            else
            {
                version.Active      = true;
            }
            doc = SIGBaseDocument::newDatabaseLog(DatabaseLogType::Update,version);
            docList.addEnd(doc);
        }

        return version;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Signs the documents.
    /// </summary>
    public void run()
    {
        RouteVersionActivate   activate;

        super();

        if (signed)
        {
            activate = new RouteVersionActivate();
            activate.parmRecId(version.RecId);

            try
            {
                activate.runOperation();
            }
            catch
            {
                SIGBaseDocument::clearAllFromCache();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SIGRouteVersionActivateProcedure construct()
    {
        return new SIGRouteVersionActivateProcedure();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@SYS103388";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newRouteVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Create a new instance of this class by using a <c>RouteVersion</c> record.
    /// </summary>
    /// <param name="_version">
    ///    The record from which to create the instance.
    /// </param>
    /// <returns>
    ///    The new instance.
    /// </returns>
    public static SIGRouteVersionActivateProcedure newRouteVersion(
        RouteVersion _version)
    {
        SIGRouteVersionActivateProcedure  procedure = SIGRouteVersionActivateProcedure::construct();

        procedure.parmRouteVersion(_version);

        return procedure;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>