<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeCDSSendQuotationMessageType</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysMessageTypeFactoryAttribute(SysMessageType::SalesD365SalesSendQuotation)]
internal class TradeCDSSendQuotationMessageType extends SysMessageTypeMetadata
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAllowedMessageStateTransitions</Name>
				<Source><![CDATA[
    internal Enumerator getAllowedMessageStateTransitions()
    {
        return SysMessageStateTransition::getProcessedCancelledStateTransitions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDependencies</Name>
				<Source><![CDATA[
    internal List getDependencies(SysMessage _message)
    {
        List dependencies = new List(Types::Record);

        return dependencies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMessageQueue</Name>
				<Source><![CDATA[
    internal SysMessageQueue getMessageQueue()
    {
        return SysMessageQueue::SalesD365SalesIntegration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processMessageStateTransition</Name>
				<Source><![CDATA[
    internal void processMessageStateTransition(SysMessage _message, SysMessageStateTransition _messageStateTransition)
    {
        if (_messageStateTransition.isEqual(SysMessageStateTransition::newFromStates(SysMessageState::Queued, SysMessageState::Processed)))
        {
            TradeCDSSendQuotationContract contract = FormJsonSerializer::deserializeObject(classNum(TradeCDSSendQuotationContract), _message.Content);
            TradeCDSSendQuotationMessageType::processQuotation(contract.parmSalesQuotationId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processQuotation</Name>
				<Source><![CDATA[
    internal static void processQuotation(SalesQuotationId _quotationId)
    {
        SalesQuotationTable salesQuotationTable = SalesQuotationTable::find(_quotationId);

        if (salesQuotationTable)
        {
            ttsbegin;

            salesQuotationTable.IsIntegration = TradeIntegrationType::Dynamics365Sales;

            new SalesQuotationEditLinesForm_Sales_Send().update(salesQuotationTable);

            salesQuotationTable.updateSalesQuotationLinesDynamics365Sales(SalesQuotationStatus::Created);

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSendMessage</Name>
				<Source><![CDATA[
    internal boolean canSendMessage(SysMessageQueue _messageQueue, SysMessageTargetRecId _messageTarget, SysMessageTargetRecId _sourceMessageTarget)
    {
        return _messageQueue == SysMessageQueue::SalesD365SalesIntegration;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>