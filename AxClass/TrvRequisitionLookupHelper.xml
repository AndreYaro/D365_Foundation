<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvRequisitionLookupHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Helper class for travel requisition related lookups.
/// </summary>
public static class TrvRequisitionLookupHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createRequisitionLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the travel requisition lookup.
    /// </summary>
    /// <param name = "_formControl">
    ///     The caller form control.
    /// </param>
    /// <param name = "_legalEntity">
    ///     The company for which all the travel requisitions are to be shown. Defaulted to current legal entity.
    /// </param>
    /// <param name = "_creatingWorker">
    ///     The worker for which all the travel requisitions are to be shown. Defaulted to current worker.
    /// </param>
    public static void createRequisitionLookup(FormControl _formControl, LegalEntity _legalEntity = CompanyInfo::current(), TrvHcmWorkerRecId _creatingWorker = HcmWorkerLookup::currentWorker())
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tablenum(TrvRequisitionTable), _formControl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        
        sysTableLookup.addLookupField(fieldNum(TrvRequisitionTable, RequisitionNumber), true);
        sysTableLookup.addLookupField(fieldNum(TrvRequisitionTable, TravelPurpose));
        sysTableLookup.addLookupField(fieldNum(TrvRequisitionTable, RequisitionDate));

        queryBuildDataSource = query.addDataSource(tableNum(TrvRequisitionTable));
        queryBuildDataSource.addOrderByField(fieldNum(TrvRequisitionTable, RequisitionNumber), SortOrder::Descending);

        QueryBuildRange queryBuildRangeLegal = queryBuildDataSource.addRange(fieldNum(TrvRequisitionTable, LegalEntity));
        queryBuildRangeLegal.value(SysQuery::value(_legalEntity));
        queryBuildRangeLegal.status(RangeStatus::Hidden);

        QueryBuildRange queryBuildRangeApprovalStatus = queryBuildDataSource.addRange(fieldNum(TrvRequisitionTable, ApprovalStatus));
        queryBuildRangeApprovalStatus.value(SysQuery::value(TrvRequisitionApprovalStatus::Approved));
        queryBuildRangeApprovalStatus.status(RangeStatus::Hidden);
        
        QueryBuildRange queryBuildRangeLegalReconStatus = queryBuildDataSource.addRange(fieldNum(TrvRequisitionTable, ReconciliationStatus));
        queryBuildRangeLegalReconStatus.value(SysQuery::value(TrvRequisitionReconciliationStatus::Open));
        queryBuildRangeLegalReconStatus.status(RangeStatus::Hidden);

        TrvListPageHelper::addWorkerRange(query, _creatingWorker);

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRequisitionCategoryLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the requisition expense line category lookup for travel requisition.
    /// </summary>
    /// <param name = "_formControl">
    ///     The caller form control.
    /// </param>
    /// <param name = "_trvReqTable">
    ///     The record id of the travel requisition.
    /// </param>
    /// <param name = "_costType">
    ///     The cost type to filter.
    /// </param>
    /// <param name = "_legalEntity">
    ///     The company for which all the requisition expense line categories are to be shown. Defaulted to current legal entity.
    /// </param>
    /// <returns>
    ///     Returns the data for the lookup.
    /// </returns>
    /// <param name = "_creatingWorker">
    ///     The worker for which all the travel requisitions are to be shown. Defaulted to current worker.
    /// </param>
    public static Common createRequisitionCategoryLookup(FormControl _formControl, RefRecId _trvReqTable, TrvCostTypeEDT _costType, LegalEntity _legalEntity = CompanyInfo::current(), TrvHcmWorkerRecId _creatingWorker = HcmWorkerLookup::currentWorker())
    {
        SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tablenum(TrvRequisitionLine), _formControl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        
        sysTableLookup.addLookupField(fieldNum(TrvRequisitionLine, EstimatedDate));
        sysTableLookup.addLookupField(fieldNum(TrvRequisitionLine, Category));
        sysTableLookup.addLookupField(fieldNum(TrvRequisitionLine, AccountingCurrencyAmount));
        sysTableLookup.addLookupMethod(tableMethodStr(TrvRequisitionLine, amountToBeReconciled));

        queryBuildDataSource = query.addDataSource(tableNum(TrvRequisitionLine));
        queryBuildDataSource.addOrderByField(fieldNum(TrvRequisitionLine, EstimatedDate), SortOrder::Descending);
        
        QueryBuildRange queryBuildRangeLegal = queryBuildDataSource.addRange(fieldNum(TrvRequisitionLine, LegalEntity));
        queryBuildRangeLegal.value(SysQuery::value(_legalEntity));
        queryBuildRangeLegal.status(RangeStatus::Hidden);

        QueryBuildRange queryBuildRangeReqTable = queryBuildDataSource.addRange(fieldNum(TrvRequisitionLine, TrvRequisitionTable));
        queryBuildRangeReqTable.value(SysQuery::value(_trvReqTable));
        queryBuildRangeReqTable.status(RangeStatus::Hidden);

        QueryBuildRange queryBuildRangeCategory = queryBuildDataSource.addRange(fieldNum(TrvRequisitionLine, Category));
        queryBuildRangeCategory.value(SysQuery::value(_costType));
        queryBuildRangeCategory.status(RangeStatus::Hidden);

        TrvListPageHelper::addWorkerRange(query, _creatingWorker);

        sysTableLookup.parmQuery(query);
        return sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTrvReqLineExpCategoryLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a lookup for expense categories for given worker record identifier and legal entity.
    /// </summary>
    /// <param name = "_formControl">The control on which the lookup is to be performed.</param>
    /// <param name = "_lookupType">The <c>TrvLookupType</c> corresponding to the lookup query to build.</param>
    /// <param name = "_workerRecId">The record identier for the worker.</param>
    /// // <param name = "_legalEntityRecId">The record identier for the worker.</param>
    public static void createTrvReqLineExpCategoryLookup(FormControl _formControl, TrvCategoryLookupType _lookupType, HcmWorkerRecId _workerRecId, LegalEntityRecId _legalEntityRecId)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(TrvCostType), _formControl);
        sysTableLookup.addLookupField(fieldNum(TrvCostType, CostType));
        sysTableLookup.addLookupField(fieldNum(TrvCostType, CostTxt));

        //Build query based on given worker record identifier and legal entity.
        Query query = TrvExpenseLookupHelper::buildResourceCategoryLookupQuery(_lookupType, _workerRecId, _legalEntityRecId);

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>