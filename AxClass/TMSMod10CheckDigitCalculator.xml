<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSMod10CheckDigitCalculator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TMSMod10CheckDigitCalculator</c> class creates a sample check digit sequence using an algorithm based on Modulus of 10.
/// </summary>
public class TMSMod10CheckDigitCalculator implements TMSICheckDigitEngine
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the engine using the <c>TMSGenericEngine</c> record passed to it.
    /// </summary>
    /// <param name = "_genericEngine">The <c>TMSGenericEngine</c> record passed.</param>
    public void Initialize(TMSGenericEngine _genericEngine)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>Calculate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the check digit value, given the string on which to calculate it, using an algorithm based on Modulus of 10.
    /// </summary>
    /// <param name = "_data">The data for which the check digit needs to be calculated for.</param>
    /// <returns>The check digit sequence from the given <c>WHSProNum</c> data.</returns>
    public WHSProNum Calculate(WHSProNum _data)
    {
        int oddsum = 0;
        int evensum = 0;
        int strLength = strLen(_data);

        for (int i = 0; i < strLength; ++i)
        {
            int value = str2Int(subStr(_data, i + 1, 1));
            if (i mod 2 == 0)
            {
                oddsum += value;
            }
            else
            {
                evensum += value;
            }
        }

        oddsum = oddsum * 3;

        return strFmt("%1", (10 - ((evensum + oddsum) mod 10)) mod 10);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>