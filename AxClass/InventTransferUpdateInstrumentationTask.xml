<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferUpdateInstrumentationTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
using ApplicationEventSource = Microsoft.Dynamics.Application.Instrumentation.ApplicationEventSource;
using Stopwatch = System.Diagnostics.Stopwatch;

/// <summary>
/// The <c>InventTransferUpdateInstrumentationTask</c> class posts instrumentation events for inventory transfer order updates.
/// </summary>
internal final class InventTransferUpdateInstrumentationTask implements System.IDisposable
{
    private readonly InventTransferUpdateType   updateType;
    private readonly InventTransferUpd          inventTransferUpd;

    private Stopwatch stopwatch;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(InventTransferUpd _inventTransferUpd)
    {
        inventTransferUpd = _inventTransferUpd;

        InventTransferParmTable parmTable = inventTransferUpd.parmParmBuffer();
        updateType = parmTable.UpdateType;

        stopwatch = Stopwatch::StartNew();
    }

]]></Source>
			</Method>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    public void Dispose()
    {
        stopwatch.Stop();

        ApplicationEventSource::EventWriteInventTransferUpdate(
            enum2Symbol(enumNum(InventTransferUpdateType), updateType),
            inventTransferUpd.parmParmLineCount(),
            inventTransferUpd.parmParmLineCloseCount(),
            inventTransferUpd.parmTransferLineCount(),
            stopwatch.ElapsedMilliseconds);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>