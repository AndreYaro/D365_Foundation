<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxableDocPurchTableRowDataProvider_IN_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(TaxableDocPurchTableRowDataProvider))]
final class TaxableDocPurchTableRowDataProvider_IN_Extension
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillInFields</Name>
				<Source><![CDATA[
    public void fillInFields(TaxableDocumentLineObject _lineObj)
    {
        next fillInFields(_lineObj);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            if (purchTableW)
            {
                this.addFieldValue(_lineObj, TaxEngineModelFields::IsImportOrder, purchTableW.CustomsImportOrder_IN);
                this.addFieldValue(_lineObj, TaxEngineModelFields::WithIGSTPayment, purchTableW.WithIGSTPayment_IN);
            }

            this.addFieldValue(_lineObj, TaxEngineModelFields::IsTaxAsPerOriginalInvoice, this.isTaxAsPerOriginalInvoice_IN());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValidFields</Name>
				<Source><![CDATA[
    protected void initValidFields()
    {
        next initValidFields();

        validFields.add(TaxEngineModelFields::IsImportOrder, Types::Enum, enumNum(NoYes));
        validFields.add(TaxEngineModelFields::IsTaxAsPerOriginalInvoice, Types::Enum, enumNum(NoYes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxAsPerOriginalInvoice_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine if the tax is as per original invoice.
    /// </summary>
    /// <returns>
    /// True if the tax is as per original invoice; otherwise, false.
    /// </returns>
    // <GIN>
    private NoYes isTaxAsPerOriginalInvoice_IN()
    {
        PurchLine       purchLine;
        PurchLine_IN    purchLineIN;

        if (purchTable)
        {
            select firstOnly RecId, TaxAsPerOriginalInvoice from purchLineIN
                join RecId from purchLine
                    where purchLineIN.PurchLine == purchLine.RecId
                        && purchLine.PurchId == purchTable.PurchId;

            if (purchLineIN.RecId)
            {
                return purchLineIN.TaxAsPerOriginalInvoice;
            }
        }

        return NoYes::No;
    }
    // </GIN>

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>