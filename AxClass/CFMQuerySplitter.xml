<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMQuerySplitter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Split query into parts by record range
/// </summary>
public class CFMQuerySplitter
{
    Query sourceQuery;
    Query sortedQuery;
    QueryRun queryRun;
    TableId dataSourceTableId;
    FieldId recIdField;
    int totalPiecesNumber;
    int currentPiece;
    int totalRecordsNumber;
    int totalRecordsProcessed;

    RecId recIdStart;
    RecId recIdEnd;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CFMQuerySplitter construct(Query _query, TableId _dataSourceTableId, int _piecesNumber)
    {
        CFMQuerySplitter querySplitter = new CFMQuerySplitter();

        querySplitter.initialize(_query, _dataSourceTableId, _piecesNumber);

        return querySplitter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIntervalQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get Query with interval records
    /// </summary>
    /// <returns> Query with interval records </returns>
    public Query getIntervalQuery()
    {
        Query intervalQuery = new Query(sourceQuery);

        QueryBuildDataSource qbds = intervalQuery.dataSourceTable(dataSourceTableId);
        QueryBuildRange qbr = qbds.addRange(recIdField);
        qbr.value(SysQuery::range(recIdStart, recIdEnd));

        return intervalQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(Query _query, TableId _dataSourceTableId, int _piecesNumber)
    {
        DictTable dictTable = new DictTable(_dataSourceTableId);

        sourceQuery = _query;
        sortedQuery = new Query(sourceQuery);
        dataSourceTableId = _dataSourceTableId;
        recIdField = fieldName2id(dataSourceTableId, fieldStr(Common, RecId));
        totalPiecesNumber = _piecesNumber ? _piecesNumber : 1;
        currentPiece = 1;

        QueryBuildDataSource qbds = sortedQuery.dataSourceTable(dataSourceTableId);
        qbds.addSortField(recIdField, SortOrder::Ascending);
        qbds.addSelectionField(recIdField);

        queryRun = new QueryRun(sortedQuery);

        totalRecordsNumber = SysQuery::countLoops(queryRun);
        totalRecordsProcessed = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextInterval</Name>
				<Source><![CDATA[
    public boolean nextInterval()
    {
        int currentRecordsNumberLimit = real2int((totalRecordsNumber * currentPiece) / totalPiecesNumber);
        boolean success = false;
        boolean firstRecord = true;
        RecId currentRecId;

        while (queryRun.next())
        {
            success = true;
            currentRecId = queryRun.get(dataSourceTableId).RecId;
            totalRecordsProcessed++;

            if (firstRecord)
            {
                firstRecord = false;
                recIdStart = currentRecId;
            }

            if (totalRecordsProcessed >= currentRecordsNumberLimit)
            {
                break;
            }
        }

        if (success)
        {
            recIdEnd = currentRecId;
            currentPiece++;
        }

        return success;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>