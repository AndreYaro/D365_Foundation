<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailButtonDesignerHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailButtonDesignerHelper</c> class is a helper class for getting information to support retail button designer flow.
/// </summary>
public class RetailButtonDesignerHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>operationDesignerLayout</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a map which will group all the actions as per their layout.
    /// </summary>
    public static Map operationDesignerLayout()
    {
        Map operations = new Map(Types::Integer, Types::Enum);

        // These are POS Operation number from <c>RetailPOSOperations</c> table, here we are grouping similar operations into one retail designer layout.
        operations.insert(100, RetailButtonSetupLayoutType::ProductSale);
        operations.insert(101, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(102, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(103, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(104, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(105, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(106, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(108, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(109, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(114, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(115, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(117, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(121, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(122, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(127, RetailButtonSetupLayoutType::OverrideName);
        operations.insert(129, RetailButtonSetupLayoutType::OverrideName);
        operations.insert(131, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(132, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(134, RetailButtonSetupLayoutType::OverrideName);
        operations.insert(135, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(136, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(137, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(138, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(139, RetailButtonSetupLayoutType::Payment);
        operations.insert(140, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(141, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(142, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(143, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(200, RetailButtonSetupLayoutType::Payment);
        operations.insert(201, RetailButtonSetupLayoutType::Payment);
        operations.insert(202, RetailButtonSetupLayoutType::Payment);
        operations.insert(203, RetailButtonSetupLayoutType::Payment);
        operations.insert(204, RetailButtonSetupLayoutType::Payment);
        operations.insert(206, RetailButtonSetupLayoutType::Payment);
        operations.insert(207, RetailButtonSetupLayoutType::Payment);
        operations.insert(211, RetailButtonSetupLayoutType::Payment);
        operations.insert(213, RetailButtonSetupLayoutType::Payment);
        operations.insert(214, RetailButtonSetupLayoutType::Payment);
        operations.insert(215, RetailButtonSetupLayoutType::Payment);
        operations.insert(300, RetailButtonSetupLayoutType::Discount);
        operations.insert(301, RetailButtonSetupLayoutType::Discount);
        operations.insert(302, RetailButtonSetupLayoutType::Discount);
        operations.insert(303, RetailButtonSetupLayoutType::Discount);
        operations.insert(305, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(310, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(400, RetailButtonSetupLayoutType::Menu);
        operations.insert(401, RetailButtonSetupLayoutType::Menu);
        operations.insert(501, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(502, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(503, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(504, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(511, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(512, RetailButtonSetupLayoutType::Payment);
        operations.insert(513, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(515, RetailButtonSetupLayoutType::FulfillmentType);
        operations.insert(516, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(517, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(518, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(519, RetailButtonSetupLayoutType::Payment);
        operations.insert(520, RetailButtonSetupLayoutType::Payment);
        operations.insert(521, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(600, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(602, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(603, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(609, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(612, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(614, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(615, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(620, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(621, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(622, RetailButtonSetupLayoutType::Search);
        operations.insert(623, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(624, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(625, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(627, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(629, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(630, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(631, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(632, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(633, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(635, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(636, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(637, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(638, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(639, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(640, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(641, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(642, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(643, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(644, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(701, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(703, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(707, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(708, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(709, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(710, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(711, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(801, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(802, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(803, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(912, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(913, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(914, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(915, RetailButtonSetupLayoutType::BlankOperation);
        operations.insert(916, RetailButtonSetupLayoutType::Path);
        operations.insert(917, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(918, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(919, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(920, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(921, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(922, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(923, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(926, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(927, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(928, RetailButtonSetupLayoutType::DeliveryMode);
        operations.insert(1000, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1003, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1004, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1052, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1053, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1054, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1055, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1056, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1057, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1058, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1059, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1100, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1200, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1201, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1210, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1211, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1212, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1213, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1214, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1215, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1216, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1218, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1219, RetailButtonSetupLayoutType::URL);
        operations.insert(1220, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1300, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1301, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1302, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(1303, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(2000, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(2001, RetailButtonSetupLayoutType::ActionOnly);
        operations.insert(6000, RetailButtonSetupLayoutType::OperationParameter);

        return operations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupActionPropety</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the lookup for the given <c>FormControl</c> instance based on retail button designer layout.
    /// </summary>
    /// <param name="_formControl">
    /// The <c>FormControl</c> control that the lookup will be attached to.
    /// </param>
    /// <param name="_retailButtonSetupLayoutType">
    /// A <c>RetailButtonSetupLayoutType</c> value that determines what type of data in the lookup.
    /// </param>
    public static void lookupActionPropety(FormControl _formControl, RetailButtonSetupLayoutType _retailButtonSetupLayoutType)
    {
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource;
        SysTableLookup lookup;
        QueryBuildRange queryBuildRange;

        switch (_retailButtonSetupLayoutType)
        {
            case RetailButtonSetupLayoutType::Payment:
                queryBuildDataSource = query.addDataSource(tableNum(RetailTenderTypeTable));

                lookup = SysTableLookup::newParameters(tableNum(RetailTenderTypeTable), _formControl);

                lookup.addLookupfield(fieldNum(RetailTenderTypeTable, Name));
                break;

            case RetailButtonSetupLayoutType::DeliveryMode:
                queryBuildDataSource = query.addDataSource(tableNum(RetailDeliveryMode));

                lookup = SysTableLookup::newParameters(tableNum(RetailDeliveryMode), _formControl);

                lookup.addLookupfield(fieldNum(RetailDeliveryMode, DeliveryModeName));
                break;

            case RetailButtonSetupLayoutType::Menu:
                queryBuildDataSource = query.addDataSource(tableNum(RetailButtonGrid));
                queryBuildDataSource.addSortField(fieldNum(RetailButtonGrid, Name));

                lookup = SysTableLookup::newParameters(tableNum(RetailButtonGrid), _formControl);

                lookup.addLookupfield(fieldNum(RetailButtonGrid, ButtonGridId));
                lookup.addLookupfield(fieldNum(RetailButtonGrid, Name));
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        lookup.parmQuery(query);
        lookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getConcatenatedValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method will divide concatenate action property into separate values.
    /// </summary>
    /// <returns>Separated values from action property.</returns>
    public static Array getConcatenatedValues(str actionProperty)
    {
        Array splittedActionPropertyValues = new Array(Types::String);
        List actionPropertyList = new List(Types::String);
        ListIterator iterator;
        const str splitchar = ';';
        int i = 1;

        actionPropertyList = strSplit(actionProperty, splitchar);
        iterator = new ListIterator(actionPropertyList);

        while (iterator.more())
        {
            splittedActionPropertyValues.value(i, iterator.value());
            iterator.next();
            i++;
        }

        return splittedActionPropertyValues;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>