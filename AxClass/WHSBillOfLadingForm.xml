<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSBillOfLadingForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Controller class for the <c>WHSBillOfLading</c> form.
/// </summary>
class WHSBillOfLadingForm
{
    FormDataSource  dataSource;
    Common          record;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildMasterBOL</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a master BOL and updates the shipment's BOLs with the new master BOL Id.
    /// </summary>
    /// <param name="_loadId">
    /// The load Id that is used to create the master BOL.
    /// </param>
    public void buildMasterBOL(WHSLoadId _loadId)
    {
        WHSBillOfLading         bol;
        WHSShipmentTable        shipment;

        WHSLoadTable loadTable = WHSLoadTable::find(_loadId);

        ttsBegin;

        // If load doesn't have a BOL Id yet, need to populate it before creating the master BOL.
        if (!loadTable.BillOfLadingId)
        {
            loadTable.selectForUpdate(true);
            loadTable.BillOfLadingId = WHSNumberSeqExt::newGetNum(WHSParameters::numRefWHSBillOfLadingId()).num(WHSNumberSeqExtParameters::emptyParameters());
            loadTable.update();
        }
        else if (WHSBillOfLading::exist(loadTable.BillOfLadingId))
        {
            bol = WHSBillOfLading::find(loadTable.BillOfLadingId, true);
            bol.delete();
        }

        this.populateMasterBOL(loadTable);

        update_recordSet bol
            setting MasterBillOfLadingId = loadTable.BillOfLadingId
            exists join shipment
                where shipment.ShipmentId   == bol.ShipmentId
                &&    shipment.LoadId       == loadTable.LoadId
                &&    bol.MasterBOLFlag     == NoYes::No;

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a query range value on the given load ID.
    /// </summary>
    /// <param name="_loadId">
    /// The load we want to find all relating BOLs.
    /// </param>
    /// <returns>
    /// A query range value.
    /// </returns>
    private str loadFilter(WHSLoadId _loadId)
    {
        WHSShipmentTable    shipmentTable;
        str                 ret;

        while select ShipmentId from shipmentTable
            where shipmentTable.LoadId == _loadId
        {
            if (!ret)
            {
                ret = shipmentTable.ShipmentId;
            }
            else
            {
                ret += ',' + shipmentTable.ShipmentId;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateMasterBOL</Name>
				<Source><![CDATA[
    private void populateMasterBOL(WHSLoadTable _loadTable)
    {
        WHSBillOfLading     billOfLading;
        TMSCarrier          carrier = TMSCarrier::find(_loadTable.CarrierCode);
        WHSParameters       whsParameters = WHSParameters::find();
        WHSShipmentTable    shipment;

        select firstOnly ShipmentId, DlvTermId from shipment
            where shipment.LoadId == _loadTable.LoadId;

        if (shipment.ShipmentId)
        {
            // Populate general master BOL information.
            billOfLading.billOfLadingId             = _loadTable.BillOfLadingId;
            billOfLading.MasterBOLFlag              = NoYes::Yes;
            billOfLading.shipmentId                 = shipment.ShipmentId;
            billOfLading.inventLocationId           = _loadTable.InventLocationId;
            billOfLading.CustAccount                = _loadTable.AccountNum;
            billOfLading.ShippingPostalAddress      = _loadTable.OriginPostalAddress;
            billOfLading.DeliveryPostalAddress      = _loadTable.DestinationPostalAddress;
            billOfLading.ThirdPartyPostalAddress    = LogisticsPostalAddress::findByLocation(carrier.getLocationFromRole(TMSParameters::find().BOLCarrierRoleRecId).RecId).RecId;
            billOfLading.CarrierCode                = carrier.CarrierCode;
            billOfLading.carrierName                = carrier.Name;
            billOfLading.CarrierServiceCode         = _loadTable.CarrierServiceCode;
            billOfLading.TrailerNumber              = _loadTable.TrailerNumber;
            billOfLading.SealNum                    = this.retrieveSealNums(_loadTable.LoadId);
            billOfLading.SCAC                       = carrier.SCAC;
            billOfLading.ProNum                     = _loadTable.ProNum;
            billOfLading.FreightChargeTerms         = DlvTerm::find(shipment.DlvTermId).FreightChargeTerm;
            billOfLading.TrailerLoaded              = whsParameters.DefaultTrailerLoaded;
            billOfLading.FreightCounted             = whsParameters.DefaultFreightCounted;
            billOfLading.insert();
        }
        else
        {
            throw error(strFmt("@WAX:ErrorNoShipmentForMasterBOL", _loadTable.LoadId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSealNums</Name>
				<Source><![CDATA[
    private WHSSealNums retrieveSealNums(WHSLoadId _loadId)
    {
        TMSLoadSeal     tmsLoadSeal;
        WHSSealNum      sealNums;

        while select SealNum from tmsLoadSeal
            where tmsLoadSeal.LoadId == _loadId
        {
            if (sealNums)
            {
                sealNums += ", " + tmsLoadSeal.SealNum;
            }
            else
            {
                sealNums = tmsLoadSeal.sealNum;
            }
        }

        return sealNums;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds and sets a filter on the form data source.
    /// </summary>
    public void setFilter()
    {
        switch (record.TableId)
        {
            case tableNum(WHSLoadTable):
                dataSource.query().dataSourceTable(tableNum(WHSBillOfLading)).addRange(fieldNum(WHSBillOfLading, ShipmentId)).value(this.loadFilter(record.(fieldNum(WHSLoadTable, LoadId))));
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static WHSBillOfLadingForm construct()
    {
        return new WHSBillOfLadingForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecord</Name>
				<Source><![CDATA[
    public Common parmRecord(Common _record = record)
    {
        record = _record;

        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmDataSource(FormDataSource _dataSource = dataSource)
    {
        dataSource = _dataSource;

        return dataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBOL</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance to add filtering for bill of lading.
    /// </summary>
    /// <param name = "_common">
    /// The record that is calling the form.
    /// </param>
    /// <param name = "_dataSource">
    /// The datasource to add the filtering too.
    /// </param>
    /// <returns>
    /// A new instance of the class.
    /// </returns>
    public static WHSBillOfLadingForm newFromBOL(
        Common          _common,
        FormDataSource  _dataSource)
    {
        WHSBillOfLadingForm whsBillOfLadingForm = WHSBillOfLadingForm::construct();

        whsBillOfLadingForm.parmRecord(_common);
        whsBillOfLadingForm.parmDataSource(_dataSource);

        return whsBillOfLadingForm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>