<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPostRevenueEstimate_Cost</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjPostRevenueEstimate_Cost extends ProjPostRevenueEstimate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkEnterAccruedCredit</Name>
				<Source><![CDATA[
        boolean checkEnterAccruedCredit()
    {
        if (! projControlCalc)
        {
            this.initProjControlCalc();
        }

        return projControlCalc.WIPAccruedCostCredit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkEnterAccruedDebit</Name>
				<Source><![CDATA[
        boolean checkEnterAccruedDebit()
    {
        if (! projControlCalc)
        {
            this.initProjControlCalc();
        }

        return projControlCalc.WIPAccruedCostDebit(this.projControlPeriodTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>creditAccountSalesAccruedLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ledger dimension that is used for posting the accrued sales amounts.
    /// </summary>
    /// <param name="_fundingSourceId">
    ///    The funding source that is associated with the project contract to be used by this transaction.
    /// </param>
    /// <returns>
    ///    The ledger dimension for posting the accrued sales amounts.
    /// </returns>
    public LedgerDimensionDefaultAccount creditAccountSalesAccruedLedgerDimension(ProjFundingSourceRefId _fundingSourceId)
    {
        if (! projControlCalc)
        {
            this.initProjControlCalc();
        }

        return projControlCalc.WIPAccruedCostCreditLedgerDimension(_fundingSourceId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>debitAccountSalesAccruedLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ledger dimension that is used for the debit side of posting an on-account transaction.
    /// </summary>
    /// <param name="_fundingSourceId">
    ///    The funding source that is associated with the project contract used by this transaction.
    /// </param>
    /// <returns>
    ///    The posting dimension for the debit amounts of on-account transactions.
    /// </returns>
    /// <remarks>
    ///    This method must be overridden by the class that extends this class; otherwise, an exception message will be thrown when the method is called.
    /// </remarks>
    public LedgerDimensionDefaultAccount debitAccountSalesAccruedLedgerDimension(ProjFundingSourceRefId _fundingSourceId)
    {
        if (! projControlCalc)
        {
            this.initProjControlCalc();
        }

        return projControlCalc.WIPAccruedCostDebitLedgerDimension(_fundingSourceId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingTypeOffsetTurnoverAccrued</Name>
				<Source><![CDATA[
        LedgerPostingType postingTypeOffsetTurnoverAccrued()
    {
        if (! projControlCalc)
        {
            this.initProjControlCalc();
        }

        return projControlCalc.postingTypeWIPOffsetCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingTypeTurnoverAccrued</Name>
				<Source><![CDATA[
        LedgerPostingType postingTypeTurnoverAccrued()
    {
        if (! projControlCalc)
        {
            this.initProjControlCalc();
        }

        return projControlCalc.postingTypeWIPCost();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>