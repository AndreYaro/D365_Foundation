<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocumentSplitDistributionPostHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class SourceDocumentSplitDistributionPostHelper
{
    BatchHeader batchHeader;
    SourceDocumentDistributionTaskProcessor sourceDocumentDistributionTaskProcessorController;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(SourceDocumentHeaderRecId _sourceDocumentHeaderRecId, DataAreaId _dataAreaId, str _batchJobCaption)
    {
        batchHeader = BatchHeader::construct();
        batchHeader.parmCaption(_batchJobCaption ? _batchJobCaption : SourceDocumentSplitDistributionPostHelper::defaultCaption());
        batchHeader.parmStartDateTime(DateTimeUtil::getSystemDateTime());
        batchHeader.parmCritical(NoYes::Yes);
        batchHeader.parmLogLevel(BatchLogLevel::Error);
        batchHeader.parmRetriesOnFailure(-1);

        // Add distribution task
        sourceDocumentDistributionTaskProcessorController = SourceDocumentDistributionTaskProcessor::createAccountingFrameworkProcessorForDistributionTask();
        SourceDocumentDistributionTaskContract sourceDocumentDistributionTaskContract = sourceDocumentDistributionTaskProcessorController.getDataContractObject() as SourceDocumentDistributionTaskContract;

        sourceDocumentDistributionTaskContract.parmDocumentDataAreaId(_dataAreaId);
        sourceDocumentDistributionTaskContract.parmSourceDocumentAccountingStatus(SourceDocumentAccountingStatus::InProcess);
        sourceDocumentDistributionTaskContract.parmSourceDocumentHeaderRecId(_sourceDocumentHeaderRecId);
       
        batchHeader.addTask(sourceDocumentDistributionTaskProcessorController);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SourceDocumentSplitDistributionPostHelper construct(SourceDocumentHeaderRecId _sourceDocumentHeaderRecId, DataAreaId _dataAreaId = curExt(), str _batchJobCaption = '')
    {
        return new SourceDocumentSplitDistributionPostHelper(_sourceDocumentHeaderRecId, _dataAreaId, _batchJobCaption);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addTask</Name>
				<Source><![CDATA[
    public void addTask(Batchable _batchTask)
    {
        batchHeader.addTask(_batchTask);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDependency</Name>
				<Source><![CDATA[
    public void addDependency(Batchable _batchTaskToRun, Batchable _dependedBatchTask, BatchDependencyStatus _status = BatchDependencyStatus::Finished)
    {
        batchHeader.addDependency(_batchTaskToRun, _dependedBatchTask, _status);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDependencyOnDistributionTask</Name>
				<Source><![CDATA[
    public void addDependencyOnDistributionTask(Batchable _batchTaskToRun, BatchDependencyStatus _status = BatchDependencyStatus::Finished)
    {
        batchHeader.addDependency(_batchTaskToRun, sourceDocumentDistributionTaskProcessorController, _status);
    }

]]></Source>
			</Method>
			<Method>
				<Name>submitToBatch</Name>
				<Source><![CDATA[
    public void submitToBatch()
    {
        batchHeader.save();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCaption</Name>
				<Source><![CDATA[
    public static str defaultCaption()
    {
        return "@SourceDocumentAccountingFramework:SourceDocumentDistributionBatchJobCaption";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceDocumentDistributionTaskProcessor</Name>
				<Source><![CDATA[
    internal SourceDocumentDistributionTaskProcessor getSourceDocumentDistributionTaskProcessor()
    {
        return sourceDocumentDistributionTaskProcessorController;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>