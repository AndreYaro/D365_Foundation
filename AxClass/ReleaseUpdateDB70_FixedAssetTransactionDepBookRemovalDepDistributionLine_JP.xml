<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetTransactionDepBookRemovalDepDistributionLine_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrades data in <c>AssetDepDistributionLine_JP</c> table. Populate temporary table pre-sync and upgrade the
/// data post-sync because we need to pick up the TableId's pre-sync but we can't upgrade data until post-sync since
///  we need the AssetDepBookTrans upgrade to be completed.
/// </summary>
class ReleaseUpdateDB70_FixedAssetTransactionDepBookRemovalDepDistributionLine_JP extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncUpgradeAssetDepDistributionLineJP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates <c>AssetDepDistributionLineJPUpgradeTmp</c> table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),     
     UpgradeScriptTableAttribute(tableStr(AssetDepDistributionLine_JP), false, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpgradeAssetDepDistributionLineJP()
    {
        // Drop the AssetDepDistributionLineJPUpgradeTmp table if it exists.
        this.executeSqlStatement(this.getSQLDropAssetDepDistributionLineJPUpgradeTmp());

        // Create temp upgrade table.
        this.executeSqlStatement(this.getSQLCreateAssetDepDistributionLineJPUpgradeTmp());

        // Move AssetDepDistributionLine_JP rows to temp table.
        this.executeSqlStatement(this.getSQLInsertAssetDepDistributionLineJPUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpgradeAssetDepDistributionLineJP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>AssetDepDistributionLine_JP</c> data from the temporary table into AssetDepDistributionLine_JP table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetTransactionDepBookRemovalDepBookTrans), methodStr(ReleaseUpdateDB70_FixedAssetTransactionDepBookRemovalDepBookTrans, postSyncUpgradeAssetDepBookTrans)),
     UpgradeScriptTableAttribute(tableStr(AssetDepDistributionLine_JP), false, true, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpgradeAssetDepDistributionLineJP()
    {
        this.executeSqlStatement(this.getSQLUpdateAssetDepDistributionLineJP());

        // drop temporary upgrade table
        this.executeSqlStatement(this.getSQLDropAssetDepDistributionLineJPUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDropAssetDepDistributionLineJPUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLDropAssetDepDistributionLineJPUpgradeTmp()
    {
        str sqlStatement = @"
        IF OBJECT_ID ( 'dbo.ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP', 'U') IS NOT NULL
            DROP TABLE ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLCreateAssetDepDistributionLineJPUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLCreateAssetDepDistributionLineJPUpgradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP', 'U') IS NULL
                CREATE TABLE [dbo].[ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP](
                    [REFRESERVERECID] [bigint] NOT NULL,
                    [REFRESERVETABLEID] [int] NOT NULL,
                    [DATAAREAID] [nvarchar](4) NOT NULL,
                    [PARTITION] [bigint] NOT NULL,
                    [RECID] [bigint] NOT NULL,
                CONSTRAINT [I_11775ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP] PRIMARY KEY CLUSTERED
                (
                    [RECID] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                ) ON [PRIMARY]
            ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetDepDistributionLineJPUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetDepDistributionLineJPUpgradeTmp()
    {
        str sqlStatement = @"
            INSERT INTO [dbo].[ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP]
                       ([REFRESERVERECID]
                       ,[REFRESERVETABLEID]
                       ,[DATAAREAID]
                       ,[PARTITION]
                       ,[RECID])
                SELECT
                      [ASSETDEPDISTRIBUTIONLINE_JP].[REFRESERVERECID]
                      ,[ASSETDEPDISTRIBUTIONLINE_JP].[REFRESERVETABLEID]
                      ,[ASSETDEPDISTRIBUTIONLINE_JP].[DATAAREAID]
                      ,[ASSETDEPDISTRIBUTIONLINE_JP].[PARTITION]
                      ,[ASSETDEPDISTRIBUTIONLINE_JP].[RECID]
                FROM [dbo].[ASSETDEPDISTRIBUTIONLINE_JP]
                JOIN [dbo].[SQLDICTIONARY] ON [SQLDICTIONARY].[SQLNAME] = 'ASSETDEPBOOKTRANS'
                    AND [SQLDICTIONARY].[FIELDID] = 0
                WHERE [ASSETDEPDISTRIBUTIONLINE_JP].[REFRESERVETABLEID] = [SQLDICTIONARY].[TABLEID]
                    AND NOT EXISTS
                    (SELECT RECID FROM [dbo].[ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP]
                    WHERE [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[RECID] = [ASSETDEPDISTRIBUTIONLINE_JP].[RECID]
                        AND [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[DATAAREAID] = [ASSETDEPDISTRIBUTIONLINE_JP].[DATAAREAID]
                        AND [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[PARTITION] = [ASSETDEPDISTRIBUTIONLINE_JP].[PARTITION])

            ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLUpdateAssetDepDistributionLineJP</Name>
				<Source><![CDATA[
    private str getSQLUpdateAssetDepDistributionLineJP()
    {
        str sqlStatement = strFmt(@"
            UPDATE [dbo].[ASSETDEPDISTRIBUTIONLINE_JP]
                SET [REFRESERVERECID] = [ASSETTRANSASSETDEPBOOKTRANSLINKUPGRADETMP].[ASSETTRANSRECID],
                    [REFRESERVETABLEID] = %1
                FROM [dbo].[ASSETDEPDISTRIBUTIONLINE_JP]
                JOIN [dbo].[ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP] ON [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[REFRESERVERECID] = [ASSETDEPDISTRIBUTIONLINE_JP].REFRESERVERECID
                    AND [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[REFRESERVETABLEID] = [ASSETDEPDISTRIBUTIONLINE_JP].[REFRESERVETABLEID]
                    AND [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[DATAAREAID] = [ASSETDEPDISTRIBUTIONLINE_JP].[DATAAREAID]
                    AND [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[PARTITION] = [ASSETDEPDISTRIBUTIONLINE_JP].[PARTITION]
                JOIN [dbo].[ASSETTRANSASSETDEPBOOKTRANSLINKUPGRADETMP] ON [ASSETTRANSASSETDEPBOOKTRANSLINKUPGRADETMP].[ASSETDEPBOOKTRANSRECID] = [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[REFRESERVERECID]
                    AND [ASSETTRANSASSETDEPBOOKTRANSLINKUPGRADETMP].[DATAAREAID] = [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[DATAAREAID]
                    AND [ASSETTRANSASSETDEPBOOKTRANSLINKUPGRADETMP].[PARTITION] = [ASSETDEPDISTRIBUTIONLINEJPUPGRADETMP].[PARTITION]
            ", tableNum(AssetTrans));

        return sqlStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>