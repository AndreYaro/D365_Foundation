<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RCashTransListController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RCashTransListController</c> is the controller class for associated SSRS report.
/// </summary>
public class RCashTransListController extends SrsReportRunController implements BatchRetryable
{
    private const str ParamFromDate = 'FromDate';
    private const str ParamToDate = 'ToDate';
    private const str ParamCashAccount = 'RCashAccount';
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        TransDate dateFrom;
        TransDate dateTo;
        RCashAccount cashAccount;

        SrsReportRdlDataContract rdlContract = this.parmReportContract().parmRdlContract() as SrsReportRdlDataContract;

        Query reportQuery = this.getFirstQuery();

        if (rdlContract)
        {
            cashAccount = rdlContract.getValue(ParamCashAccount);

            if (rdlContract.getValue(ParamFromDate))
            {
                dateFrom = rdlContract.getValue(ParamFromDate);
            }

            if (rdlContract.getValue(ParamToDate))
            {
                dateTo = rdlContract.getValue(ParamToDate);
            }
        }

        QueryBuildRange qbr = SysQuery::findOrCreateRange(reportQuery.dataSourceTable(tablenum(RCashTrans)),fieldnum(RCashTrans, TransDate));

        if (dateFrom || dateTo)
        {
            qbr.value(queryRange(dateFrom, dateTo));
        }
        else
        {
            qbr.value(SysQuery::valueUnlimited());
        }

        qbr = SysQuery::findOrCreateRange(reportQuery.dataSourceTable(tablenum(RCashTable)), fieldnum(RCashTable, AccountNum));

        if (cashAccount)
        {
            qbr.value(queryValue(cashAccount));
        }
        else
        {
            qbr.value(SysQuery::valueUnlimited());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        #isoCountryRegionCodes
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([ [#isoRU, GlobalizationConstants::FeatureReferenceRU00039] ], funcName());

        SrsReportRunController controller = new RCashTransListController();

        controller.parmArgs(_args);
        controller.parmReportName(ssrsReportStr(RCashTransList, Report));
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>