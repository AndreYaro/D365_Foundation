<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerInsertGeneralJournalAccountEntryRelatedDetailNonSummarizedQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SubledgerInsertGeneralJournalAccountEntryRelatedDetailNonSummarizedQuery</c> class creates queries related to the
/// <c>SubledgerJournalTransferCommand</c>.
/// </summary>
public final class SubledgerInsertGeneralJournalAccountEntryRelatedDetailNonSummarizedQuery
{
    private GeneralJournalAccountEntry generalJournalAccountEntry;
    private SubLedgerJournalAccountEntryView subLedgerJournalAccountEntryView;
    private SubLedgerJournalTransferNumberSeqTmp tmpNumberSeqGen;
    private SubledgerVoucherGeneralJournalEntry subLedgerVoucherGeneralJournalEntry;
    private RefRecId transferIdVal;
    private GeneralJournalEntry generalJournalEntry;
    private NoYes isCreditValue;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts non-summarized records into the <c>GeneralJournalAccountEntry</c> table
    /// </summary>
    /// <param name = "_transferIdVal">The reference transfer Id</param>
    /// <param name = "_isCreditValue">Specifies if there is credit value</param>
    static internal void insert(
        RefRecId _transferIdVal,
        NoYes _isCreditValue)
    {
        var subledgerInsertGeneralJournalAccountEntryRelatedDetailNonSummarizedQuery = new SubledgerInsertGeneralJournalAccountEntryRelatedDetailNonSummarizedQuery();

        subledgerInsertGeneralJournalAccountEntryRelatedDetailNonSummarizedQuery.initialize(
            _transferIdVal,
            _isCreditValue);

        var generalJournalAccountEntryQueryObject = subledgerInsertGeneralJournalAccountEntryRelatedDetailNonSummarizedQuery.getGeneralJournalAccountEntryQueryObject();
        var generalJournalAccountEntryInsertObject = subledgerInsertGeneralJournalAccountEntryRelatedDetailNonSummarizedQuery.getGeneralJournalAccountEntryInsertObject();
        generalJournalAccountEntryInsertObject.query(generalJournalAccountEntryQueryObject);

        var generalJournalAccountEntryInsertStatement = new SysDaInsertStatement();

        generalJournalAccountEntryInsertStatement.insert(generalJournalAccountEntryInsertObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(
        RefRecId _transferIdVal,
        NoYes _isCreditValue)
    {
        transferIdVal = _transferIdVal;
        isCreditValue = _isCreditValue;

        generalJournalAccountEntry.skipDataMethods(true);
        generalJournalAccountEntry.skipDatabaseLog(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGeneralJournalAccountEntryInsertObject</Name>
				<Source><![CDATA[
    private SysDaInsertObject getGeneralJournalAccountEntryInsertObject()
    {
        var generalJournalAccountEntryInsertObject = new SysDaInsertObject(generalJournalAccountEntry);

        generalJournalAccountEntryInsertObject = this.addSubLedgerJournalAccountEntryViewFieldsToInsertObject(generalJournalAccountEntryInsertObject);
        generalJournalAccountEntryInsertObject = this.addLiteralFieldsToInsertObject(generalJournalAccountEntryInsertObject);
        generalJournalAccountEntryInsertObject = this.addGeneralJournalEntryFieldsToInsertObject(generalJournalAccountEntryInsertObject);

        return generalJournalAccountEntryInsertObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSubLedgerJournalAccountEntryViewFieldsToInsertObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>SubLedgerJournalAccountEntryView</c> table fields to an Insert object.
    /// </summary>
    /// <param name = "_generalJournalAccountEntryInsertObject">
    /// The Insert object to add the fields to.
    /// </param>
    /// <returns>
    /// The passed in Insert object with the fields added.
    /// </returns>
    protected SysDaInsertObject addSubLedgerJournalAccountEntryViewFieldsToInsertObject(SysDaInsertObject _generalJournalAccountEntryInsertObject)
    {
        _generalJournalAccountEntryInsertObject.fields().add(fieldStr(GeneralJournalAccountEntry, Text))
            .add(fieldStr(GeneralJournalAccountEntry, LedgerDimension))
            .add(fieldStr(GeneralJournalAccountEntry, FinTag))
            .add(fieldStr(GeneralJournalAccountEntry, LedgerAccount))
            .add(fieldStr(GeneralJournalAccountEntry, MainAccount))
            .add(fieldStr(GeneralJournalAccountEntry, TransactionCurrencyCode))
            .add(fieldStr(GeneralJournalAccountEntry, IsCorrection))
            .add(fieldStr(GeneralJournalAccountEntry, PostingType))
            .add(fieldStr(GeneralJournalAccountEntry, HistoricalExchangeRateDate))
            .add(fieldStr(GeneralJournalAccountEntry, TransactionCurrencyAmount))
            .add(fieldStr(GeneralJournalAccountEntry, AccountingCurrencyAmount))
            .add(fieldStr(GeneralJournalAccountEntry, ReportingCurrencyAmount));

        return _generalJournalAccountEntryInsertObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addGeneralJournalEntryFieldsToInsertObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>GeneralJournalEntry</c> table fields to an Insert object.
    /// </summary>
    /// <param name = "_generalJournalAccountEntryInsertObject">
    /// The Insert object to add the fields to.
    /// </param>
    /// <returns>
    /// The passed in Insert object with the fields added.
    /// </returns>
    protected SysDaInsertObject addGeneralJournalEntryFieldsToInsertObject(SysDaInsertObject _generalJournalAccountEntryInsertObject)
    {
        _generalJournalAccountEntryInsertObject.fields().add(fieldStr(GeneralJournalAccountEntry, GeneralJournalEntry));

        return _generalJournalAccountEntryInsertObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLiteralFieldsToInsertObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds literal fields of <c>SubLedgerJournalAccountEntryView</c> to an Insert object.
    /// </summary>
    /// <param name = "_generalJournalAccountEntryInsertObject">
    /// The Insert object to add the fields to.
    /// </param>
    /// <returns>
    /// The passed in Insert object with the fields added.
    /// </returns>
    protected SysDaInsertObject addLiteralFieldsToInsertObject(SysDaInsertObject _generalJournalAccountEntryInsertObject)
    {
        _generalJournalAccountEntryInsertObject.fields().add(fieldStr(GeneralJournalAccountEntry, IsCredit));

        return _generalJournalAccountEntryInsertObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGeneralJournalAccountEntryQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject getGeneralJournalAccountEntryQueryObject()
    {
        var subLedgerJournalAccountEntryViewQueryObject = this.getSubLedgerJournalAccountEntryViewQueryObject();
        subLedgerJournalAccountEntryViewQueryObject = this.addLiteralFieldsToQueryObjectProjection(subLedgerJournalAccountEntryViewQueryObject);
        var generalJournalEntryObject = this.getGeneralJournalEntryObjectQueryObject();

        var subLedgerVoucherGeneralJournalEntryObject = new SysDaQueryObject(subLedgerVoucherGeneralJournalEntry);

        var subLedgerVoucherGeneralJournalEntryWhereClause = new SysDaAndExpression(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(subLedgerVoucherGeneralJournalEntry, fieldStr(SubledgerVoucherGeneralJournalEntry, SubledgerJournalEntry)),
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, SubledgerJournalEntry))),
            new SysDaEqualsExpression(
                new SysDaFieldExpression(subLedgerVoucherGeneralJournalEntry, fieldStr(SubledgerVoucherGeneralJournalEntry, TransferId)),
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, TransferId))));

        subLedgerVoucherGeneralJournalEntryObject.whereClause(subLedgerVoucherGeneralJournalEntryWhereClause);
        subLedgerJournalAccountEntryViewQueryObject.joinClause(SysDaJoinKind::InnerJoin, subLedgerVoucherGeneralJournalEntryObject);

        //Join GeneralJournalEntry
        var generalJournalEntryWhereClause = new SysDaAndExpression(
            new SysDaEqualsExpression(new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, RecId)),
                new SysDaFieldExpression(subLedgerVoucherGeneralJournalEntry, fieldStr(SubLedgerVoucherGeneralJournalEntry, GeneralJournalEntry))),                
            new SysDaEqualsExpression(new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, PostingLayer)),
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, PostingLayer))))
        .and(new SysDaAndExpression(
            new SysDaEqualsExpression(new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, Ledger)),
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, Ledger))),
            new SysDaEqualsExpression(new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, TransferId)),
                new SysDaValueExpression(transferIdVal))));

        generalJournalEntryObject.whereClause(generalJournalEntryWhereClause);

        subLedgerVoucherGeneralJournalEntryObject.joinClause(SysDaJoinKind::InnerJoin, generalJournalEntryObject);

        return subLedgerJournalAccountEntryViewQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSubLedgerJournalAccountEntryViewQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject getSubLedgerJournalAccountEntryViewQueryObject()
    {        
        var subLedgerJournalAccountEntryViewQueryObject = new SysDaQueryObject(subLedgerJournalAccountEntryView);

        subLedgerJournalAccountEntryViewQueryObject = this.addSubLedgerJournalAccountEntryViewFieldsToQueryObjectProjection(subLedgerJournalAccountEntryViewQueryObject);
        subLedgerJournalAccountEntryViewQueryObject = this.addSubLedgerJournalAccountEntryViewFieldsToQueryObjectWhereClause(subLedgerJournalAccountEntryViewQueryObject);
            
        return subLedgerJournalAccountEntryViewQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSubLedgerJournalAccountEntryViewFieldsToQueryObjectProjection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>SubLedgerJournalAccountEntryViewFields</c> fields to the projection of a query object.
    /// </summary>
    /// <param name = "_subLedgerJournalAccountEntryViewQueryObject">
    /// The query object to add the fields to.
    /// </param>
    /// <returns>
    /// The passed in query object with the fields added.
    /// </returns>
    protected SysDaQueryObject addSubLedgerJournalAccountEntryViewFieldsToQueryObjectProjection(SysDaQueryObject _subLedgerJournalAccountEntryViewQueryObject)
    {        
        _subLedgerJournalAccountEntryViewQueryObject.projection().add(fieldStr(SubLedgerJournalAccountEntryView, TransTxt))
            .add(fieldStr(SubLedgerJournalAccountEntryView, LedgerDimension))
            .add(fieldStr(SubLedgerJournalAccountEntryView, FinTag))
            .add(fieldStr(SubLedgerJournalAccountEntryView, LedgerAccount))
            .add(fieldStr(SubLedgerJournalAccountEntryView, MainAccount))
            .add(fieldStr(SubLedgerJournalAccountEntryView, TransactionCurrencyCode))
            .add(fieldStr(SubLedgerJournalAccountEntryView, IsCorrection))
            .add(fieldStr(SubLedgerJournalAccountEntryView, PostingType))
            .add(fieldStr(SubLedgerJournalAccountEntryView, HistoricalExchangeRateDate))
            .add(fieldStr(SubLedgerJournalAccountEntryView, TransactionCurrencyAmount))
            .add(fieldStr(SubLedgerJournalAccountEntryView, AccountingCurrencyAmount))
            .add(fieldStr(SubLedgerJournalAccountEntryView, SecondaryCurrencyAmount));

        return _subLedgerJournalAccountEntryViewQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSubLedgerJournalAccountEntryViewFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>SubLedgerJournalAccountEntryView</c> where clause expression to a query object.
    /// </summary>
    /// <param name = "_subLedgerJournalAccountEntryViewQueryObject">
    /// The query object to add the where clauses to.
    /// </param>
    /// <returns>
    /// The passed in query object with the where clause added.
    /// </returns>
    protected SysDaQueryObject addSubLedgerJournalAccountEntryViewFieldsToQueryObjectWhereClause(SysDaQueryObject _subLedgerJournalAccountEntryViewQueryObject)
    {
        var subLedgerJournalAccountEntryViewWhereClause = new SysDaAndExpression(
            new SysDaEqualsExpression(new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, TransferId)),
                new SysDaValueExpression(transferIdVal)),
            new SysDaEqualsExpression(new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, IsTransferredInDetail)),
                new SysDaValueExpression(TransferPolicy::TransferIndividual)))
            .and(new SysDaAndExpression(
                new SysDaEqualsExpression(new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, TransferId)),
                    new SysDaValueExpression(transferIdVal)),
                new SysDaEqualsExpression(new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, Status)),
                    new SysDaValueExpression(SubledgerJournalEntryStatus::TransferInProcess))));

        _subLedgerJournalAccountEntryViewQueryObject.whereClause(subLedgerJournalAccountEntryViewWhereClause);

        return _subLedgerJournalAccountEntryViewQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLiteralFieldsToQueryObjectProjection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds literal fields to the projection of a query object.
    /// </summary>
    /// <param name = "_literalsQueryObject">
    /// The query object to add the fields to.
    /// </param>
    /// <returns>
    /// The passed in query object with the fields added.
    /// </returns>
    protected SysDaQueryObject addLiteralFieldsToQueryObjectProjection(SysDaQueryObject _literalsQueryObject)
    {
        _literalsQueryObject.Projection().AddValue(isCreditValue);

        return _literalsQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGeneralJournalEntryObjectQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject getGeneralJournalEntryObjectQueryObject()
    {
        var generalJournalEntryQueryObject = new SysDaQueryObject(generalJournalEntry);
        generalJournalEntryQueryObject = this.addGeneralJournalEntryFieldsToQueryObjectProjection(generalJournalEntryQueryObject);

        return generalJournalEntryQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addGeneralJournalEntryFieldsToQueryObjectProjection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>GeneralJournalEntry</c> fields to the projection of a query object.
    /// </summary>
    /// <param name = "_generalJournalEntryQueryObject">
    /// The query object to add the fields to.
    /// </param>
    /// <returns>
    /// The passed in query object with the fields added.
    /// </returns>
    protected SysDaQueryObject addGeneralJournalEntryFieldsToQueryObjectProjection(SysDaQueryObject _generalJournalEntryQueryObject)
    {
        _generalJournalEntryQueryObject.projection().add(fieldStr(GeneralJournalEntry, RecId));

        return _generalJournalEntryQueryObject;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>