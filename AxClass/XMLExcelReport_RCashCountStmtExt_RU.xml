<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>XmlExcelReport_RCashCountStmtExt_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class performs output to excel for cash count statement supplement
/// </summary>
public class XmlExcelReport_RCashCountStmtExt_RU extends XMLExcelReport_RU implements BatchRetryable, ERIReportPostProcessingSupported
{
    TmpRCashCountStatementTable sourceTable;
    TransDate toDate;
    int statementNum;

    protected const str ReportHeader = 'REPORTHEADER';
    protected const str Line = 'LINE';
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcRangeHeight</Name>
				<Source><![CDATA[
    protected real calcRangeHeight(Bookmark _bookmark)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReport</Name>
				<Source><![CDATA[
    protected void createReport()
    {
        curWorksheetNum = 1;

        const int widthCols_RCashCountStmtExt_RU = 8;
        widthCols = widthCols_RCashCountStmtExt_RU;

        document.setWorksheetSpans(widthCols);

        this.initSectionMap();

        this.execute(ReportHeader);

        while select sourceTable
        {
            this.execute(Line);
        }

        this.setPrintArea();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fileName</Name>
				<Source><![CDATA[
    protected Filename fileName()
    {
        return 'RCashCountStatementExtension';
    }

]]></Source>
			</Method>
			<Method>
				<Name>fileNamePostfix</Name>
				<Source><![CDATA[
    protected Filename fileNamePostfix()
    {
        return '_' + int2str(statementNum) + '_'+ date2str(toDate, 321, 2, 0, 2, 0, 2, DateFlags::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillData</Name>
				<Source><![CDATA[
    protected void fillData(MSOfficeBookMark_RU _bookmark)
    {
        switch (_bookmark)
        {
            case ReportHeader:
                this.fillReportHeader();
                break;
            case Line:
                this.fillLine();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills report Line with data
    /// </summary>
    private void fillLine()
    {
        const int exchRateBase = 100;

        this.insertValueToSection('StatementType', strFmt("@GLS106745", sourceTable.CashCountStatementType));
        this.insertValueToSection('Currency', strFmt("@GLS106745", sourceTable.Currency));
        this.insertValueToSection('CountedAmountCur', strFmt("@GLS106745", sourceTable.CountedAmountCur));
        this.insertValueToSection('ExchRate', strFmt("@GLS106745", sourceTable.ExchRate / exchRateBase));
        this.insertValueToSection('CountedAmountMST', strFmt("@GLS106745", sourceTable.CountedAmountMST));
        this.insertValueToSection('PostedAmountCur', strFmt("@GLS106745", sourceTable.PostedAmountCur));
        this.insertValueToSection('PostedAmountTotal', strFmt("@GLS106745", sourceTable.PostedAmountMST + sourceTable.ExchAdj));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillReportHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills report header section with data
    /// </summary>
    private void fillReportHeader()
    {
        this.insertValueToSection('CashStatementNoDate', strFmt("@GLS102243", statementNum, toDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSectionMap</Name>
				<Source><![CDATA[
    protected void initSectionMap()
    {
        this.addSection(ReportHeader);
        this.addSection(Line);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes report object with data
    /// </summary>
    /// <param name="_sourceTable">
    /// Temporary table with data
    /// </param>
    /// <param name="_todate">
    /// Date to which report is created
    /// </param>
    /// <param name="_statementNum">
    /// Number of report statement
    /// </param>
    public void setValue(
        TmpRCashCountStatementTable _sourceTable,
        TransDate _todate,
        int _statementNum)
    {
        sourceTable = _sourceTable;
        todate = _todate;
        statementNum = _statementNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateName</Name>
				<Source><![CDATA[
    protected Filename templateName()
    {
        return 'RCashCountStatementExt_xlsx';
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalCells</Name>
				<Source><![CDATA[
    protected Counter totalCells()
    {
        const int cellsBody = 7;
        const int cellsOther = 1;

        TmpRCashCountStatementTable sourceTableLoc;
        sourceTableLoc.setTmpData(sourceTable);

        select count(RecId) from sourceTableLoc;

        return cellsOther + cellsBody * int642int(sourceTableLoc.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static XMLExcelReport_RCashCountStmtExt_RU construct()
    {
        return new XMLExcelReport_RCashCountStmtExt_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportFileName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the report file.
    /// </summary>
    /// <returns>
    /// The name of the report file.
    /// </returns>
    public str getReportFileName()
    {
        return this.fileName() + this.fileNamePostfix();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the report.
    /// </summary>
    /// <returns>
    /// Name of the report.
    /// </returns>
    public str getReportName()
    {
        return 'CashCountStatementSupplement';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>