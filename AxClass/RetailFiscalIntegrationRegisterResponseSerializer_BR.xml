<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalIntegrationRegisterResponseSerializer_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

/// <summary>
/// The <c>RetailFiscalIntegrationRegisterResponseSerializer_BR</c> class is a serializer for fiscal integration register response.
/// </summary>
internal final class RetailFiscalIntegrationRegisterResponseSerializer_BR
{
    private JObject jObject;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deserialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deserializes the response.
    /// </summary>
    /// <param name = "_response">The response string.</param>
    /// <returns>The response object.</returns>
    public static RetailFiscalIntegrationRegisterResponse_BR deserialize(str _response)
    {
        RetailFiscalIntegrationRegisterResponseSerializer_BR serializer = new RetailFiscalIntegrationRegisterResponseSerializer_BR();
        serializer.jObject = JsonConvert::DeserializeObject(_response);

        RetailFiscalIntegrationRegisterResponse_BR fiscalIntegrationResponse = new RetailFiscalIntegrationRegisterResponse_BR();

        if (serializer.jObject)
        {
            fiscalIntegrationResponse.parmAccessKey(serializer.getAccessKey());
            fiscalIntegrationResponse.parmDocumentId(serializer.getDocumentId());
            fiscalIntegrationResponse.parmDocumentState(serializer.getDocumentState());
            fiscalIntegrationResponse.parmProtocolDateTime(serializer.getProtocolDateTime());
            fiscalIntegrationResponse.parmProtocolNumber(serializer.getProtocolNumber());
            fiscalIntegrationResponse.parmResponseDetails(serializer.getResponseDetails());
            fiscalIntegrationResponse.parmStatusCode(serializer.getStatusCode());
            fiscalIntegrationResponse.parmIsSkipAllowed(serializer.getIsSkipAllowed());
        }

        return fiscalIntegrationResponse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>serialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes the response.
    /// </summary>
    /// <param name = "fiscalIntegrationResponse">The response object.</param>
    /// <returns>The response string.</returns>
    [Hookable(false)]
    public static str serialize(RetailFiscalIntegrationRegisterResponse_BR fiscalIntegrationResponse)
    {
        JObject jObj = new JObject();
        jObj.Add(RetailFiscalIntegrationRegisterResponse_BR::AccessKeyToken, fiscalIntegrationResponse.parmAccessKey());
        jObj.Add(RetailFiscalIntegrationRegisterResponse_BR::DocumentIdToken, guid2str(fiscalIntegrationResponse.parmDocumentId()));
        jObj.Add(RetailFiscalIntegrationRegisterResponse_BR::DocumentStateToken, enum2str(fiscalIntegrationResponse.parmDocumentState()));
        jObj.Add(RetailFiscalIntegrationRegisterResponse_BR::ProtocolDateTimeToken, utcDateTime2SystemDateTime(fiscalIntegrationResponse.parmProtocolDateTime()).ToString());
        jObj.Add(RetailFiscalIntegrationRegisterResponse_BR::ProtocolNumberToken, fiscalIntegrationResponse.parmProtocolNumber());
        jObj.Add(RetailFiscalIntegrationRegisterResponse_BR::ResponseDetailsToken, fiscalIntegrationResponse.parmResponseDetails().parmResponseDetails());
        jObj.Add(RetailFiscalIntegrationRegisterResponse_BR::StatusCodeToken, fiscalIntegrationResponse.parmStatusCode());
        jObj.Add(RetailFiscalIntegrationRegisterResponse_BR::IsSkipAllowedToken, fiscalIntegrationResponse.parmIsSkipAllowed());

        return jObj.ToString(Formatting::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccessKey</Name>
				<Source><![CDATA[
    private EFDocAccessKey_BR getAccessKey()
    {
        JToken accessKeyToken = jObject.SelectToken(RetailFiscalIntegrationRegisterResponse_BR::AccessKeyToken);
        return accessKeyToken == null ? '' : accessKeyToken.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentId</Name>
				<Source><![CDATA[
    private Guid getDocumentId()
    {
        JToken documentToken = jObject.SelectToken(RetailFiscalIntegrationRegisterResponse_BR::DocumentIdToken);
        return documentToken == null ? emptyGuid() : str2Guid(documentToken.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentState</Name>
				<Source><![CDATA[
    private BusinessDocumentState getDocumentState()
    {
        BusinessDocumentState documentState;
        JToken documentStateToken = jObject.SelectToken(RetailFiscalIntegrationRegisterResponse_BR::DocumentStateToken);
        return documentStateToken ==  null ? BusinessDocumentState::Scheduled : str2enum(documentState, documentStateToken.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProtocolDateTime</Name>
				<Source><![CDATA[
    private TransDateTime getProtocolDateTime()
    {
        JToken protocolDateTimeToken = jObject.SelectToken(RetailFiscalIntegrationRegisterResponse_BR::ProtocolDateTimeToken);

        if (protocolDateTimeToken == null)
        {
            return DateTimeUtil::minValue();
        }

        return clrSystemDateTime2UtcDateTime(protocolDateTimeToken);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProtocolNumber</Name>
				<Source><![CDATA[
    private EFDocProtocolNumber_BR getProtocolNumber()
    {
        JToken protocolNumberToken = jObject.SelectToken(RetailFiscalIntegrationRegisterResponse_BR::ProtocolNumberToken);
        return protocolNumberToken ==  null ? '' : protocolNumberToken.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseDetails</Name>
				<Source><![CDATA[
    private RetailFiscalIntegrationRegisterResponseDetails_BR getResponseDetails()
    {
        RetailFiscalIntegrationRegisterResponseDetails_BR responseDetails = new RetailFiscalIntegrationRegisterResponseDetails_BR();
        JToken responseDetailsToken = jObject.SelectToken(RetailFiscalIntegrationRegisterResponse_BR::ResponseDetailsToken);
        responseDetails.parmResponseDetails(responseDetailsToken ? responseDetailsToken.ToString() : '');
        return responseDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStatusCode</Name>
				<Source><![CDATA[
    private str getStatusCode()
    {
        JToken statusCodeToken = jObject.SelectToken(RetailFiscalIntegrationRegisterResponse_BR::StatusCodeToken);
        return statusCodeToken ? statusCodeToken.ToString() : '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsSkipAllowed</Name>
				<Source><![CDATA[
    private boolean getIsSkipAllowed()
    {
        JToken isSkipAllowedToken = jObject.SelectToken(RetailFiscalIntegrationRegisterResponse_BR::IsSkipAllowedToken);
        return isSKipAllowedToken == null ? false : isSkipAllowedToken;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>