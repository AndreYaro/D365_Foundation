<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntgrExportDocumentOperatorAction_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntgrExportDocumentOperatorAction_CN</c> handles the action item of the export document operation.
/// </summary>
class TaxIntgrExportDocumentOperatorAction_CN
{
    FormDataSource                          exportDocumentRelationViewDS;
    TaxIntgrExportDocumentOperationType_CN  operationType;

    Set             setOfSourceRecId;
    Set             setOfDocumentId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSetOfDocumentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets set of export document id.
    /// </summary>
    /// <returns>
    /// The set of export document id.
    /// </returns>
    protected Set getSetOfDocumentId()
    {
        return setOfDocumentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSetOfSourceRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets set of source record id.
    /// </summary>
    /// <returns>
    /// Set of source record id.
    /// </returns>
    protected Set getSetOfSourceRecId()
    {
        return setOfSourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>operate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perfroms operations from the data source.
    /// </summary>
    /// <returns>
    /// True if the operation succeeds; otherwise, false.
    /// </returns>
    protected boolean operate()
    {
        TaxIntgrExportDocumentOperationView_CN exportDocumentOperation;
        boolean isMarked;

        setOfSourceRecId = new Set(Types::Int64);
        setOfDocumentId = new Set(Types::String);

        if (exportDocumentRelationViewDS.anyMarked())
        {
            exportDocumentOperation = exportDocumentRelationViewDS.getFirst(1);
            isMarked = true;
        }
        else
        {
            exportDocumentOperation = exportDocumentRelationViewDS.cursor();
            isMarked = false;
        }

        while (exportDocumentOperation)
        {
            setOfSourceRecId.add(exportDocumentOperation.TaxIntgrExportDocumentSource_CN);
            setOfDocumentId.add(exportDocumentOperation.ExportDocumentId);

            if (!isMarked)
            {
                break;
            }

            exportDocumentOperation = exportDocumentRelationViewDS.getNext();
        }

        return TaxIntgrExportDocumentOperator_CN::operateExportDocument(
            operationType,
            setOfSourceRecId.pack(),
            setOfDocumentId.pack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportDocumentRelationViewDS</Name>
				<Source><![CDATA[
    public FormDataSource parmExportDocumentRelationViewDS(FormDataSource _exportDocumentRelationViewDS = exportDocumentRelationViewDS)
    {
        exportDocumentRelationViewDS = _exportDocumentRelationViewDS;

        return exportDocumentRelationViewDS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOperationType</Name>
				<Source><![CDATA[
    public TaxIntgrExportDocumentOperationType_CN parmOperationType(TaxIntgrExportDocumentOperationType_CN _operationType = operationType)
    {
        operationType = _operationType;

        return operationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FormDataSource                              formDataSource;
        TaxIntgrExportDocumentOperatorAction_CN     operatorAction;
        RefRecId                                    result;

        if (!_args
            || !_args.record()
            || _args.record().TableId != tableNum(TaxIntgrExportDocumentOperationView_CN)
            || !FormDataUtil::getFormDataSource(_args.record()))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        formDataSource = FormDataUtil::getFormDataSource(_args.record());
        operatorAction = new TaxIntgrExportDocumentOperatorAction_CN();
        operatorAction.parmExportDocumentRelationViewDS(formDataSource);
        operatorAction.parmOperationType(_args.parmEnum());
        result = operatorAction.operate();

        if (result)
        {
            formDataSource.research();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>