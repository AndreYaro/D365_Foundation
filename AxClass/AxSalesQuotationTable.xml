<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxSalesQuotationTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxSalesQuotationTable extends AxApplicationBase implements AxInventSiteDimensionable
{
    SalesQuotationTable         salesQuotationTable;

    int                         zipCodeIdx;
    int                         custAccount_CustTableIdx;
    int                         invoiceAccount_CustTableIdx;
    int                         smmBusRelTableIdx;
    int                         projTableIdx;
    int                         axLogisticsLocationIdx;

    int                         contactPersonIdx;
    int                         projInvoiceTableIdx;
    int                         salesQuotationTotalsIdx;
    InventSiteDimensionLink     inventSiteDimensionLink;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axLogisticsLocation</Name>
				<Source><![CDATA[
    public AxLogisticsLocation  axLogisticsLocation(AxLogisticsLocation  _axLogisticsLocation = null)
    {
        AxLogisticsLocation     axLogisticsLocation;
        LogisticsPostalAddress  logisticsPostalAddress;

        if (! axLogisticsLocationIdx)
        {
            axLogisticsLocationIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axLogisticsLocation))
        {
            this.classCacheInsert(axLogisticsLocationIdx, _axLogisticsLocation);
            axLogisticsLocation = _axLogisticsLocation;
        }
        else
        {
            if (this.classCacheExist(axLogisticsLocationIdx))
            {
                axLogisticsLocation = this.classCacheLookup(axLogisticsLocationIdx);
            }
            else
            {
                this.setDeliveryPostalAddress();
                logisticsPostalAddress = LogisticsPostalAddress::findRecId(this.parmDeliveryPostalAddress());

                if (logisticsPostalAddress.RecId)
                {
                    axLogisticsLocation = AxLogisticsLocation::newLogisticsLocation(LogisticsLocation::find(logisticsPostalAddress.Location));
                }

                this.classCacheInsert(axLogisticsLocationIdx, axLogisticsLocation);
            }
        }

        return axLogisticsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>contactPersonRecord</Name>
				<Source><![CDATA[
    public ContactPerson contactPersonRecord(ContactPerson _contactPerson = null)
    {
        ContactPerson    contactPerson;

        if (!contactPersonIdx)
        {
            contactPersonIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_contactPerson))
        {
            this.tableCacheInsert(contactPersonIdx, _contactPerson);
            contactPerson = _contactPerson;
        }
        else
        {
            if (this.tableCacheExist(contactPersonIdx))
            {
                contactPerson = this.tableCacheLookup(contactPersonIdx);
            }
            else
            {
                this.setContactPersonId();
                contactPerson = ContactPerson::find(this.parmContactPersonId());
                this.tableCacheInsert(contactPersonIdx, contactPerson);
            }
        }

        return contactPerson;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _salesQuotationTable = salesQuotationTable)
    {
        if (!prmisDefault(_salesQuotationTable))
        {
            super(_salesQuotationTable);
            salesQuotationTable = _salesQuotationTable as SalesQuotationTable;
        }
        else
        {
            super();
        }

        return salesQuotationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custAccount_CustTableRecord</Name>
				<Source><![CDATA[
    public CustTable custAccount_CustTableRecord(CustTable _custTable = null)
    {
        CustTable   custTable;

        if (!custAccount_CustTableIdx)
        {
            custAccount_CustTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_custTable))
        {
            this.tableCacheInsert(custAccount_CustTableIdx, _custTable);
            custTable = _custTable;
        }
        else
        {
            if (this.tableCacheExist(custAccount_CustTableIdx))
            {
                custTable = this.tableCacheLookup(custAccount_CustTableIdx);
            }
            else
            {
                this.setCustAccount();
                custTable = CustTable::find(this.parmCustAccount());
                this.tableCacheInsert(custAccount_CustTableIdx, custTable);
            }
        }

        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryDateTime</Name>
				<Source><![CDATA[
    TransDateTime deliveryDateTime()
    {
        return DateTimeUtil::newDateTime(this.parmShippingDateRequested(), 0 , DateTimeUtil::getCompanyTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>SalesQuotationTable</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>SalesQuotationTable</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        SalesQuotationTable localSalesQuotationTable;

        return localSalesQuotationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodStr(AxSalesQuotationTable,parmQuotationId));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesQuotationTable,parmCurrencyCode));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesQuotationTable,parmLanguageId));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesQuotationTable,parmShippingDateRequested));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteDimensionLink</Name>
				<Source><![CDATA[
    protected InventSiteDimensionLink inventSiteDimensionLink()
    {
        return InventSiteDimensionLink::newDimensionTables(this.salesQuotationTable(), this.salesQuotationTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccount_CustTableRecord</Name>
				<Source><![CDATA[
    public CustTable invoiceAccount_CustTableRecord(CustTable _custTable = null)
    {
        CustTable   custTable;

        if (!invoiceAccount_CustTableIdx)
        {
            invoiceAccount_CustTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_custTable))
        {
            this.tableCacheInsert(invoiceAccount_CustTableIdx, _custTable);
            custTable = _custTable;
        }
        else
        {
            if (this.tableCacheExist(invoiceAccount_CustTableIdx))
            {
                custTable = this.tableCacheLookup(invoiceAccount_CustTableIdx);
            }
            else
            {
                this.setInvoiceAccount();
                custTable = CustTable::find(this.parmInvoiceAccount());
                this.tableCacheInsert(invoiceAccount_CustTableIdx, custTable);
            }
        }

        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStorageDimFieldSet</Name>
				<Source><![CDATA[
    public boolean isStorageDimFieldSet(FieldId _fieldId)
    {
        return this.isFieldSet(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefRecId</Name>
				<Source><![CDATA[
    public AddressRefRecId parmAddressRefRecId(AddressRefRecId _addressRefRecId = 0)
    {
        if (!prmisDefault(_addressRefRecId))
        {
            this.setField(fieldNum(SalesQuotationTable, AddressRefRecId), _addressRefRecId);
        }

        return salesQuotationTable.AddressRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefTableId</Name>
				<Source><![CDATA[
    public AddressRefTableId parmAddressRefTableId(AddressRefTableId _addressRefTableId = 0)
    {
        if (!prmisDefault(_addressRefTableId))
        {
            this.setField(fieldNum(SalesQuotationTable, AddressRefTableId), _addressRefTableId);
        }

        return salesQuotationTable.AddressRefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankDocumentType</Name>
				<Source><![CDATA[
    public BankLGDocumentType parmBankDocumentType(BankLGDocumentType _bankDocumentType = BankLGDocumentType::None)
    {
        if (!prmisDefault(_bankDocumentType))
        {
            this.setField(fieldNum(SalesQuotationTable, BankDocumentType), _bankDocumentType);
        }

        return salesQuotationTable.BankDocumentType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBusRelAccount</Name>
				<Source><![CDATA[
    public smmBusRelAccount parmBusRelAccount(smmBusRelAccount _busRelAccount = '')
    {
        if (!prmisDefault(_busRelAccount))
        {
            this.setField(fieldNum(SalesQuotationTable, BusRelAccount), _busRelAccount);
        }

        return salesQuotationTable.BusRelAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallListID</Name>
				<Source><![CDATA[
    public smmTMCallListID parmCallListID(smmTMCallListID _callListID = '')
    {
        if (!prmisDefault(_callListID))
        {
            this.setField(fieldNum(SalesQuotationTable, CallListID), _callListID);
        }

        return salesQuotationTable.CallListID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCampaignId</Name>
				<Source><![CDATA[
    public smmCampaignId parmCampaignId(smmCampaignId _campaignId = '')
    {
        if (!prmisDefault(_campaignId))
        {
            this.setField(fieldNum(SalesQuotationTable, CampaignId), _campaignId);
        }

        return salesQuotationTable.CampaignId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDisc</Name>
				<Source><![CDATA[
    public CustCashDiscCode parmCashDisc(CustCashDiscCode _cashDisc = '')
    {
        if (!prmisDefault(_cashDisc))
        {
            this.setField(fieldNum(SalesQuotationTable, CashDisc), _cashDisc);
        }

        return salesQuotationTable.CashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmCashDiscPercent(DiscPct _cashDiscPercent = 0.0)
    {
        if (!prmisDefault(_cashDiscPercent))
        {
            this.setField(fieldNum(SalesQuotationTable, CashDiscPercent), _cashDiscPercent);
        }

        return salesQuotationTable.CashDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCommissionGroup</Name>
				<Source><![CDATA[
    public CommissCustomerGroup parmCommissionGroup(CommissCustomerGroup _commissionGroup = '')
    {
        if (!prmisDefault(_commissionGroup))
        {
            this.setField(fieldNum(SalesQuotationTable, CommissionGroup), _commissionGroup);
        }

        return salesQuotationTable.CommissionGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmDate</Name>
				<Source><![CDATA[
    public TransDate parmConfirmDate(TransDate _confirmDate = dateNull())
    {
        if (!prmisDefault(_confirmDate))
        {
            this.setField(fieldNum(SalesQuotationTable, ConfirmDate), _confirmDate);
        }

        return salesQuotationTable.ConfirmDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactPersonId</Name>
				<Source><![CDATA[
    public ContactPersonId parmContactPersonId(ContactPersonId _contactPersonId = '')
    {
        if (!prmisDefault(_contactPersonId))
        {
            this.setField(fieldNum(SalesQuotationTable, ContactPersonId), _contactPersonId);
        }

        return salesQuotationTable.ContactPersonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountyOrigDest</Name>
				<Source><![CDATA[
    public AddressCountyOrigDest parmCountyOrigDest(AddressCountyOrigDest   _countyOrigDest = '')
    {
        if (!prmisDefault(_countyOrigDest))
        {
            this.setField(fieldNum(SalesQuotationTable, CountyOrigDest), _countyOrigDest);
        }

        return salesQuotationTable.CountyOrigDest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCovStatus</Name>
				<Source><![CDATA[
    public CovStatus parmCovStatus(CovStatus _covStatus = 0)
    {
        if (!prmisDefault(_covStatus))
        {
            this.setField(fieldNum(SalesQuotationTable, CovStatus), _covStatus);
        }

        return salesQuotationTable.CovStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;
        if (!prmisDefault(_currencyCode))
        {
            dictField = new DictField(tableNum(SalesQuotationTable),fieldNum(SalesQuotationTable,CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode,dictField);

            if (this.valueMappingInbound())
            {
                _currencyCode = this.axCurrencyCode(_currencyCode);
            }

            this.setField(fieldNum(SalesQuotationTable, CurrencyCode), _currencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(salesQuotationTable.CurrencyCode);
        }
        else
        {
            return salesQuotationTable.CurrencyCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
    public str parmCustAccount(str _custAccount = '')
    {
        DictField   dictField;
        if (!prmisDefault(_custAccount))
        {
            dictField = new DictField(tableNum(SalesQuotationTable),fieldNum(SalesQuotationTable,CustAccount));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_custAccount,dictField,this.mapPolicy().xMLMapCustAccount());
                _custAccount = this.axCustAccount(_custAccount);
            }
            else
            {
                this.validateInboundString(_custAccount,dictField);
            }
            this.setField(fieldNum(SalesQuotationTable, CustAccount), _custAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCustAccount(salesQuotationTable.CustAccount);
        }
        else
        {
            return salesQuotationTable.CustAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustFinalUser_BR</Name>
				<Source><![CDATA[
    public CustVendFinalUser_BR parmCustFinalUser_BR(CustVendFinalUser_BR _custFinalUser = NoYes::No)
    {
        if (!prmisDefault(_custFinalUser))
        {
            this.setField(fieldNum(SalesQuotationTable, CustFinalUser_BR), _custFinalUser);
        }

        return salesQuotationTable.CustFinalUser_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerRef</Name>
				<Source><![CDATA[
    public CustRef parmCustomerRef(CustRef _customerRef = '')
    {
        if (!prmisDefault(_customerRef))
        {
            this.setField(fieldNum(SalesQuotationTable, CustomerRef), _customerRef);
        }

        return salesQuotationTable.CustomerRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustPurchaseOrder</Name>
				<Source><![CDATA[
    public CustPurchaseOrder parmCustPurchaseOrder(CustPurchaseOrder _custPurchaseOrder = '')
    {
        if (!prmisDefault(_custPurchaseOrder))
        {
            this.setField(fieldNum(SalesQuotationTable, CustPurchaseOrder), _custPurchaseOrder);
        }

        return salesQuotationTable.CustPurchaseOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.inventSiteDimensionLink().axParmDefaultDimensionSet(this, _defaultDimension);
        }

        return salesQuotationTable.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDateControlType</Name>
				<Source><![CDATA[
    public SalesDeliveryDateControlType parmDeliveryDateControlType(SalesDeliveryDateControlType _deliveryDateControlType = SalesDeliveryDateControlType::None)
    {
        if (!prmisDefault(_deliveryDateControlType))
        {
            this.setField(fieldNum(SalesQuotationTable, DeliveryDateControlType), _deliveryDateControlType);
        }

        return salesQuotationTable.DeliveryDateControlType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public CustName parmDeliveryName(CustName _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(SalesQuotationTable, DeliveryName), _deliveryName);
        }

        return salesQuotationTable.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryPostalAddress = 0)
    {
        if (!prmisDefault(_deliveryPostalAddress))
        {
            this.setField(fieldNum(SalesQuotationTable, DeliveryPostalAddress), _deliveryPostalAddress);
        }

        return salesQuotationTable.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscPercent</Name>
				<Source><![CDATA[
    public SalesEndDiscPct parmDiscPercent(SalesEndDiscPct _discPercent = 0)
    {
        if (!prmisDefault(_discPercent))
        {
            this.setField(fieldNum(SalesQuotationTable, DiscPercent), _discPercent);
        }

        return salesQuotationTable.DiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvMode</Name>
				<Source><![CDATA[
    public str parmDlvMode(str _dlvMode = '')
    {
        DictField   dictField;
        if (!prmisDefault(_dlvMode))
        {
            dictField = new DictField(tableNum(SalesQuotationTable),fieldNum(SalesQuotationTable,DlvMode));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvMode,dictField,this.mapPolicy().xMLMapDlvMode());
                _dlvMode = this.axDlvModeId(_dlvMode);
            }
            else
            {
                this.validateInboundString(_dlvMode,dictField);
            }
            this.setField(fieldNum(SalesQuotationTable, DlvMode), _dlvMode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvModeId(salesQuotationTable.DlvMode);
        }
        else
        {
            return salesQuotationTable.DlvMode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvReason</Name>
				<Source><![CDATA[
    public DlvReasonId parmDlvReason(DlvReasonId _dlvReason = '')
    {
        if (!prmisDefault(_dlvReason))
        {
            this.setField(fieldNum(SalesQuotationTable, DlvReason), _dlvReason);
        }

        return salesQuotationTable.DlvReason;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvTerm</Name>
				<Source><![CDATA[
    public str parmDlvTerm(str _dlvTerm = '')
    {
        DictField   dictField;
        if (!prmisDefault(_dlvTerm))
        {
            dictField = new DictField(tableNum(SalesQuotationTable),fieldNum(SalesQuotationTable,DlvTerm));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvTerm,dictField,this.mapPolicy().xMLMapDlvTerm());
                _dlvTerm = this.axDlvTermId(_dlvTerm);
            }
            else
            {
                this.validateInboundString(_dlvTerm,dictField);
            }
            this.setField(fieldNum(SalesQuotationTable, DlvTerm), _dlvTerm);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvTermId(salesQuotationTable.DlvTerm);
        }
        else
        {
            return salesQuotationTable.DlvTerm;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocuConclusion</Name>
				<Source><![CDATA[
    public smmQuotationDocuConclusionText parmDocuConclusion(smmQuotationDocuConclusionText _docuConclusion = '')
    {
        if (!prmisDefault(_docuConclusion))
        {
            this.setField(fieldNum(SalesQuotationTable, DocuConclusion), _docuConclusion);
        }

        return salesQuotationTable.DocuConclusion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocuIntro</Name>
				<Source><![CDATA[
    public smmQuotationDocuIntroText parmDocuIntro(smmQuotationDocuIntroText _docuIntro = '')
    {
        if (!prmisDefault(_docuIntro))
        {
            this.setField(fieldNum(SalesQuotationTable, DocuIntro), _docuIntro);
        }

        return salesQuotationTable.DocuIntro;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocuTitle</Name>
				<Source><![CDATA[
    public smmQuotationDocuTitle parmDocuTitle(smmQuotationDocuTitle _docuTitle = '')
    {
        if (!prmisDefault(_docuTitle))
        {
            this.setField(fieldNum(SalesQuotationTable, DocuTitle), _docuTitle);
        }

        return salesQuotationTable.DocuTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmail</Name>
				<Source><![CDATA[
    public Email parmEmail(Email _email = '')
    {
        if (!prmisDefault(_email))
        {
            this.setField(fieldNum(SalesQuotationTable, Email), _email);
        }

        return salesQuotationTable.Email;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDisc</Name>
				<Source><![CDATA[
    public CustEndDiscCode parmEndDisc(CustEndDiscCode _endDisc = '')
    {
        if (!prmisDefault(_endDisc))
        {
            this.setField(fieldNum(SalesQuotationTable, EndDisc), _endDisc);
        }

        return salesQuotationTable.EndDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnterpriseNumber</Name>
				<Source><![CDATA[
    public TaxEnterpriseNumber parmEnterpriseNumber(TaxEnterpriseNumber _enterpriseNumber = '')
    {
        if (!prmisDefault(_enterpriseNumber))
        {
            this.setField(fieldNum(SalesQuotationTable, EnterpriseNumber), _enterpriseNumber);
        }

        return salesQuotationTable.EnterpriseNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEstimate</Name>
				<Source><![CDATA[
    public SalesEstimateGross parmEstimate(SalesEstimateGross _estimate = 0)
    {
        if (!prmisDefault(_estimate))
        {
            this.setField(fieldNum(SalesQuotationTable, Estimate), _estimate);
        }

        return salesQuotationTable.Estimate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportReason</Name>
				<Source><![CDATA[
    public SalesExportReason parmExportReason(SalesExportReason _exportReason = '')
    {
        if (!prmisDefault(_exportReason))
        {
            this.setField(fieldNum(SalesQuotationTable, ExportReason), _exportReason);
        }

        return salesQuotationTable.ExportReason;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFineCode_BR</Name>
				<Source><![CDATA[
    public CustFineCode_BR parmFineCode_BR(CustFineCode_BR _fineCode = '')
    {
        if (!prmisdefault(_fineCode))
        {
            this.setField(fieldnum(SalesQuotationTable, FineCode_BR), _fineCode);
        }

        return salesQuotationTable.FineCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedDueDate</Name>
				<Source><![CDATA[
    public SalesFixedDueDate parmFixedDueDate(SalesFixedDueDate _fixedDueDate = dateNull())
    {
        if (!prmisDefault(_fixedDueDate))
        {
            this.setField(fieldNum(SalesQuotationTable, FixedDueDate), _fixedDueDate);
        }

        return salesQuotationTable.FixedDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedExchRate</Name>
				<Source><![CDATA[
    public SalesFixedExchRate parmFixedExchRate(SalesFixedExchRate _fixedExchRate = 0)
    {
        if (!prmisDefault(_fixedExchRate))
        {
            this.setField(fieldNum(SalesQuotationTable, FixedExchRate), _fixedExchRate);
        }

        return salesQuotationTable.FixedExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightSlipType</Name>
				<Source><![CDATA[
    public CustFreightSlipType parmFreightSlipType(CustFreightSlipType _freightSlipType = FreightSlipType::None)
    {
        if (!prmisDefault(_freightSlipType))
        {
            this.setField(fieldNum(SalesQuotationTable, FreightSlipType), _freightSlipType);
        }

        return salesQuotationTable.FreightSlipType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightZone</Name>
				<Source><![CDATA[
    public CustFreightZoneId parmFreightZone(CustFreightZoneId _freightZone = '')
    {
        if (!prmisDefault(_freightZone))
        {
            this.setField(fieldNum(SalesQuotationTable, FreightZone), _freightZone);
        }

        return salesQuotationTable.FreightZone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTax</Name>
				<Source><![CDATA[
    public InclTax parmInclTax(InclTax _inclTax = NoYes::No)
    {
        if (!prmisDefault(_inclTax))
        {
            this.setField(fieldNum(SalesQuotationTable, InclTax), _inclTax);
        }

        return salesQuotationTable.InclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestCode_BR</Name>
				<Source><![CDATA[
    public CustInterestCode_BR parmInterestCode_BR(CustInterestCode_BR _interestCode = '')
    {
        if (!prmisdefault(_interestCode))
        {
            this.setField(fieldnum(SalesQuotationTable, FineCode_BR), _interestCode);
        }

        return salesQuotationTable.InterestCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocationId</Name>
				<Source><![CDATA[
    public SalesInventLocationId parmInventLocationId(SalesInventLocationId _inventLocationId = '')
    {
        if (!prmisDefault(_inventLocationId))
        {
            this.setField(fieldNum(SalesQuotationTable, InventLocationId), _inventLocationId);
        }

        return salesQuotationTable.InventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventSiteId</Name>
				<Source><![CDATA[
    public InventSiteId parmInventSiteId(InventSiteId _inventSiteId = '')
    {
        if (!prmisDefault(_inventSiteId))
        {
            this.setField(fieldNum(SalesQuotationTable, InventSiteId), _inventSiteId);
        }

        return salesQuotationTable.InventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    public str parmInvoiceAccount(str _invoiceAccount = '')
    {
        DictField   dictField;
        if (!prmisDefault(_invoiceAccount))
        {
            dictField = new DictField(tableNum(SalesQuotationTable),fieldNum(SalesQuotationTable,InvoiceAccount));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_invoiceAccount,dictField,this.mapPolicy().xMLMapCustAccount());
                _invoiceAccount = this.axCustAccount(_invoiceAccount);
            }
            else
            {
                this.validateInboundString(_invoiceAccount,dictField);
            }
            this.setField(fieldNum(SalesQuotationTable, InvoiceAccount), _invoiceAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCustAccount(salesQuotationTable.InvoiceAccount);
        }
        else
        {
            return salesQuotationTable.InvoiceAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLanguageId</Name>
				<Source><![CDATA[
    public LanguageId parmLanguageId(LanguageId _languageId = '')
    {
        if (!prmisDefault(_languageId))
        {
            this.setField(fieldNum(SalesQuotationTable, LanguageId), _languageId);
        }

        return salesQuotationTable.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    public CustLineDiscCode parmLineDisc(CustLineDiscCode _lineDisc = '')
    {
        if (!prmisDefault(_lineDisc))
        {
            this.setField(fieldNum(SalesQuotationTable, LineDisc), _lineDisc);
        }

        return salesQuotationTable.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmListcode</Name>
				<Source><![CDATA[
    public ListcodeId parmListcode(ListcodeId _listcode = Listcode::IncludeNot)
    {
        if (!prmisDefault(_listcode))
        {
            this.setField(fieldNum(SalesQuotationTable, Listcode), _listcode);
        }

        return salesQuotationTable.Listcode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmManualEntryChangepolicy</Name>
				<Source><![CDATA[
    public PriceDiscPolicyManual parmManualEntryChangepolicy(PriceDiscPolicyManual _manualEntryChangepolicy = 0)
    {
        if (!prmisdefault(_manualEntryChangepolicy))
        {
            this.setField(fieldNum(SalesQuotationTable, ManualEntryChangepolicy), _manualEntryChangepolicy);
        }

        return salesQuotationTable.ManualEntryChangepolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkupGroup</Name>
				<Source><![CDATA[
    public CustMarkupGroupId parmMarkupGroup(CustMarkupGroupId _markupGroup = '')
    {
        if (!prmisDefault(_markupGroup))
        {
            this.setField(fieldNum(SalesQuotationTable, MarkupGroup), _markupGroup);
        }

        return salesQuotationTable.MarkupGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModelId</Name>
				<Source><![CDATA[
    public ForecastModelId parmModelId(ForecastModelId _modelId = '')
    {
        if (!prmisDefault(_modelId))
        {
            this.setField(fieldNum(SalesQuotationTable, ModelId), _modelId);
        }

        return salesQuotationTable.ModelId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLineDisc</Name>
				<Source><![CDATA[
    public CustMultiLineDiscCode parmMultiLineDisc(CustMultiLineDiscCode _multiLineDisc = '')
    {
        if (!prmisDefault(_multiLineDisc))
        {
            this.setField(fieldNum(SalesQuotationTable, MultiLineDisc), _multiLineDisc);
        }

        return salesQuotationTable.MultiLineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumberSequenceGroup</Name>
				<Source><![CDATA[
    public NumberSequenceGroupId parmNumberSequenceGroup(NumberSequenceGroupId _numberSequenceGroup = '')
    {
        if (!prmisDefault(_numberSequenceGroup))
        {
            this.setField(fieldNum(SalesQuotationTable, NumberSequenceGroup), _numberSequenceGroup);
        }

        return salesQuotationTable.NumberSequenceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOpportunityId</Name>
				<Source><![CDATA[
    public smmOpportunityId parmOpportunityId(smmOpportunityId _opportunityId = '')
    {
        if (!prmisDefault(_opportunityId))
        {
            this.setField(fieldNum(SalesQuotationTable, OpportunityId), _opportunityId);
        }

        return salesQuotationTable.OpportunityId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigQuotationId</Name>
				<Source><![CDATA[
    public QuotationIdBase parmOrigQuotationId(QuotationIdBase _origQuotationId = '')
    {
        if (!prmisDefault(_origQuotationId))
        {
            this.setField(fieldNum(SalesQuotationTable, OrigQuotationId), _origQuotationId);
        }

        return salesQuotationTable.OrigQuotationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayment</Name>
				<Source><![CDATA[
    public CustPaymTermId parmPayment(CustPaymTermId _payment = '')
    {
        if (!prmisDefault(_payment))
        {
            this.setField(fieldNum(SalesQuotationTable, Payment), _payment);
        }

        return salesQuotationTable.Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public CustPaymMode parmPaymMode(CustPaymMode _paymMode = '')
    {
        if (!prmisDefault(_paymMode))
        {
            this.setField(fieldNum(SalesQuotationTable, PaymMode), _paymMode);
        }

        return salesQuotationTable.PaymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymSpec</Name>
				<Source><![CDATA[
    public CustPaymTermId parmPaymSpec(CustPaymTermId _paymSpec = '')
    {
        if (!prmisDefault(_paymSpec))
        {
            this.setField(fieldNum(SalesQuotationTable, PaymSpec), _paymSpec);
        }

        return salesQuotationTable.PaymSpec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPort</Name>
				<Source><![CDATA[
    public IntrastatPortId parmPort(IntrastatPortId _port = '')
    {
        if (!prmisDefault(_port))
        {
            this.setField(fieldNum(SalesQuotationTable, Port), _port);
        }

        return salesQuotationTable.Port;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile</Name>
				<Source><![CDATA[
    public CustPostingProfile parmPostingProfile(CustPostingProfile _postingProfile = '')
    {
        if (!prmisDefault(_postingProfile))
        {
            this.setField(fieldNum(SalesQuotationTable, PostingProfile), _postingProfile);
        }

        return salesQuotationTable.PostingProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceGroupId</Name>
				<Source><![CDATA[
    public CustPriceGroup parmPriceGroupId(CustPriceGroup _priceGroupId = '')
    {
        if (!prmisDefault(_priceGroupId))
        {
            this.setField(fieldNum(SalesQuotationTable, PriceGroupId), _priceGroupId);
        }

        return salesQuotationTable.PriceGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjIdRef</Name>
				<Source><![CDATA[
    public ProjId parmProjIdRef(ProjId _projIdRef = '')
    {
        if (!prmisDefault(_projIdRef))
        {
            this.setField(fieldNum(SalesQuotationTable, ProjIdRef), _projIdRef);
        }

        return salesQuotationTable.ProjIdRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjInvoiceProjId</Name>
				<Source><![CDATA[
    public ProjInvoiceProjId parmProjInvoiceProjId(ProjInvoiceProjId _projInvoiceProjId = '')
    {
        if (!prmisDefault(_projInvoiceProjId))
        {
            this.setField(fieldNum(SalesQuotationTable, ProjInvoiceProjId), _projInvoiceProjId);
        }

        return salesQuotationTable.ProjInvoiceProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPSAEstdProjDuration</Name>
				<Source><![CDATA[
    public RealBase parmPSAEstdProjDuration(RealBase _duration = 0)
    {
        if (!prmisDefault(_duration))
        {
            this.setField(fieldNum(SalesQuotationTable, psaEstdProjDuration), _duration);
        }

        return salesQuotationTable.psaEstdProjDuration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPSAEstProjEndDate</Name>
				<Source><![CDATA[
    public EndDate parmPSAEstProjEndDate(EndDate _endDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        if (!prmisDefault(_endDate))
        {
            this.setField(fieldNum(SalesQuotationTable, psaEstProjEndDate), _endDate);
        }

        return salesQuotationTable.psaEstProjEndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPSAEstProjStartDate</Name>
				<Source><![CDATA[
    public StartDate parmPSAEstProjStartDate(StartDate _startDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        if (!prmisDefault(_startDate))
        {
            this.setField(fieldNum(SalesQuotationTable, psaEstProjStartDate), _startDate);
        }

        return salesQuotationTable.psaEstProjStartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPSAExternalDescription</Name>
				<Source><![CDATA[
    public Notes parmPSAExternalDescription(Notes _externalDescription = '')
    {
        if (!prmisDefault(_externalDescription))
        {
            this.setField(fieldNum(SalesQuotationTable, psaExternalDescription), _externalDescription);
        }

        return salesQuotationTable.psaExternalDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPSAInternalDescription</Name>
				<Source><![CDATA[
    public Notes parmPSAInternalDescription(Notes _internalDescription = '')
    {
        if (!prmisDefault(_internalDescription))
        {
            this.setField(fieldNum(SalesQuotationTable, psaInternalDescription), _internalDescription);
        }

        return salesQuotationTable.psaInternalDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPSASchedCalendarId</Name>
				<Source><![CDATA[
    public CalendarId parmPSASchedCalendarId(CalendarId _calendarId = '')
    {
        if (!prmisDefault(_calendarId))
        {
            this.setField(fieldNum(SalesQuotationTable, psaSchedCalendarId), _calendarId);
        }

        return salesQuotationTable.psaSchedCalendarId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPSAWizardNotOk</Name>
				<Source><![CDATA[
    public NoYes parmPSAWizardNotOk(NoYes _psaWizardNotOk = NoYes::No)
    {
        if (!prmisDefault(_psaWizardNotOk))
        {
            this.setField(fieldNum(SalesQuotationTable, psaWizardNotOk), _psaWizardNotOk);
        }

        return salesQuotationTable.psaWizardNotOk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationCategory</Name>
				<Source><![CDATA[
    public SalesQuotationTypeId parmQuotationCategory(SalesQuotationTypeId _quotationCategory = '')
    {
        if (!prmisDefault(_quotationCategory))
        {
            this.setField(fieldNum(SalesQuotationTable, QuotationCategory), _quotationCategory);
        }

        return salesQuotationTable.QuotationCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationExpiryDate</Name>
				<Source><![CDATA[
    public QuotationExpiryDate parmQuotationExpiryDate(QuotationExpiryDate _quotationExpiryDate = dateNull())
    {
        if (!prmisDefault(_quotationExpiryDate))
        {
            this.setField(fieldNum(SalesQuotationTable, QuotationExpiryDate), _quotationExpiryDate);
        }

        return salesQuotationTable.QuotationExpiryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationFollowupActivity</Name>
				<Source><![CDATA[
    public smmQuotationFollowupActivity parmQuotationFollowupActivity(smmQuotationFollowupActivity _quotationFollowupActivity = '')
    {
        if (!prmisDefault(_quotationFollowupActivity))
        {
            this.setField(fieldNum(SalesQuotationTable, QuotationFollowupActivity), _quotationFollowupActivity);
        }

        return salesQuotationTable.QuotationFollowupActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationFollowUpDate</Name>
				<Source><![CDATA[
    public smmQuotationFollowUpDate parmQuotationFollowUpDate(smmQuotationFollowUpDate _quotationFollowUpDate = dateNull())
    {
        if (!prmisDefault(_quotationFollowUpDate))
        {
            this.setField(fieldNum(SalesQuotationTable, QuotationFollowUpDate), _quotationFollowUpDate);
        }

        return salesQuotationTable.QuotationFollowUpDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationId</Name>
				<Source><![CDATA[
    public QuotationIdBase parmQuotationId(QuotationIdBase _quotationId = '')
    {
        if (!prmisDefault(_quotationId))
        {
            this.setField(fieldNum(SalesQuotationTable, QuotationId), _quotationId);
        }

        return salesQuotationTable.QuotationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationName</Name>
				<Source><![CDATA[
    public QuotationName parmQuotationName(QuotationName _quotationName = '')
    {
        if (!prmisDefault(_quotationName))
        {
            this.setField(fieldNum(SalesQuotationTable, QuotationName), _quotationName);
        }

        return salesQuotationTable.QuotationName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationStatus</Name>
				<Source><![CDATA[
    public SalesQuotationStatus parmQuotationStatus(SalesQuotationStatus _quotationStatus = SalesQuotationStatus::Created)
    {
        if (!prmisDefault(_quotationStatus))
        {
            this.setField(fieldNum(SalesQuotationTable, QuotationStatus), _quotationStatus);
        }

        return salesQuotationTable.QuotationStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationType</Name>
				<Source><![CDATA[
    public QuotationType parmQuotationType(QuotationType _quotationType = QuotationType::Sales)
    {
        if (!prmisDefault(_quotationType))
        {
            this.setField(fieldNum(SalesQuotationTable, QuotationType), _quotationType);
        }

        return salesQuotationTable.QuotationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonId</Name>
				<Source><![CDATA[
    public smmQuotationReasonId parmReasonId(smmQuotationReasonId _reasonId = '')
    {
        if (!prmisDefault(_reasonId))
        {
            this.setField(fieldNum(SalesQuotationTable, ReasonId), _reasonId);
        }

        return salesQuotationTable.ReasonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiptDateRequested</Name>
				<Source><![CDATA[
    public SalesReceiptDateRequested parmReceiptDateRequested(SalesReceiptDateRequested _receiptDateRequested = dateNull())
    {
        if (!prmisDefault(_receiptDateRequested))
        {
            this.setField(fieldNum(SalesQuotationTable, ReceiptDateRequested), _receiptDateRequested);
        }

        return salesQuotationTable.ReceiptDateRequested;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesGroup</Name>
				<Source><![CDATA[
    public CommissSalesGroup parmSalesGroup(CommissSalesGroup _salesGroup = '')
    {
        if (!prmisDefault(_salesGroup))
        {
            this.setField(fieldNum(SalesQuotationTable, SalesGroup), _salesGroup);
        }

        return salesQuotationTable.SalesGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesIdRef</Name>
				<Source><![CDATA[
    public SalesId parmSalesIdRef(SalesId _salesIdRef = '')
    {
        if (!prmisDefault(_salesIdRef))
        {
            this.setField(fieldNum(SalesQuotationTable, SalesIdRef), _salesIdRef);
        }

        return salesQuotationTable.SalesIdRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesOriginId</Name>
				<Source><![CDATA[
    public SalesOriginId parmSalesOriginId(SalesOriginId _salesOriginId = '')
    {
        if (!prmisDefault(_salesOriginId))
        {
            this.setField(fieldNum(SalesQuotationTable, SalesOriginId), _salesOriginId);
        }

        return salesQuotationTable.SalesOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPoolId</Name>
				<Source><![CDATA[
    public SalesPoolId parmSalesPoolId(SalesPoolId _salesPoolId = '')
    {
        if (!prmisDefault(_salesPoolId))
        {
            this.setField(fieldNum(SalesQuotationTable, SalesPoolId), _salesPoolId);
        }

        return salesQuotationTable.SalesPoolId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchOperationType_BR</Name>
				<Source><![CDATA[
    public SalesPurchOperationTypeRecId_BR parmSalesPurchOperationType_BR(SalesPurchOperationTypeRecId_BR _salesPurchOperationTypeRecId = 0)
    {
        if (!prmisDefault(_salesPurchOperationTypeRecId))
        {
            this.setField(fieldNum(SalesQuotationTable, SalesPurchOperationType_BR), _salesPurchOperationTypeRecId);
        }

        return salesQuotationTable.SalesPurchOperationType_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesUnitId</Name>
				<Source><![CDATA[
    public smmSalesUnitId parmSalesUnitId(smmSalesUnitId _salesUnitId = '')
    {
        if (!prmisDefault(_salesUnitId))
        {
            this.setField(fieldNum(SalesQuotationTable, SalesUnitId), _salesUnitId);
        }

        return salesQuotationTable.SalesUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmServiceId</Name>
				<Source><![CDATA[
    public SMAAgreementId parmServiceId(SMAAgreementId _serviceId = '')
    {
        if (!prmisDefault(_serviceId))
        {
            this.setField(fieldNum(SalesQuotationTable, ServiceId), _serviceId);
        }

        return salesQuotationTable.ServiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettleVoucher</Name>
				<Source><![CDATA[
    public SalesSettlementType parmSettleVoucher(SalesSettlementType _settleVoucher = SettlementType::None)
    {
        if (!prmisDefault(_settleVoucher))
        {
            this.setField(fieldNum(SalesQuotationTable, SettleVoucher), _settleVoucher);
        }

        return salesQuotationTable.SettleVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShippingDateRequested</Name>
				<Source><![CDATA[
    public SalesShippingDateRequested parmShippingDateRequested(SalesShippingDateRequested _shippingDateRequested = dateNull())
    {
        if (!prmisDefault(_shippingDateRequested))
        {
            this.setField(fieldNum(SalesQuotationTable, ShippingDateRequested), _shippingDateRequested);
        }

        return salesQuotationTable.ShippingDateRequested;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatProcId</Name>
				<Source><![CDATA[
    public IntrastatProcId parmStatProcId(IntrastatProcId _statProcId = '')
    {
        if (!prmisDefault(_statProcId))
        {
            this.setField(fieldNum(SalesQuotationTable, StatProcId), _statProcId);
        }

        return salesQuotationTable.StatProcId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSystemEntryChangePolicy</Name>
				<Source><![CDATA[
    public PriceDiscPolicySystem parmSystemEntryChangePolicy(PriceDiscPolicySystem _systemEntryChangePolicy = 0)
    {
        if (!prmisdefault(_systemEntryChangePolicy))
        {
            this.setField(fieldNum(SalesQuotationTable, SystemEntryChangePolicy), _systemEntryChangePolicy);
        }

        return salesQuotationTable.SystemEntryChangePolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSystemEntrySource</Name>
				<Source><![CDATA[
    public PriceDiscSystemSource parmSystemEntrySource(PriceDiscSystemSource _systemEntrySource = PriceDiscSystemSource::None)
    {
        if (!prmisdefault(_systemEntrySource))
        {
            this.setField(fieldNum(SalesQuotationTable, SystemEntrySource), _systemEntrySource);
        }

        return salesQuotationTable.SystemEntrySource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
        if (!prmisDefault(_taxGroup))
        {
            this.setField(fieldNum(SalesQuotationTable, TaxGroup), _taxGroup);
        }

        return salesQuotationTable.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOverrideSalesTax</Name>
				<Source><![CDATA[
    public NoYes parmOverrideSalesTax(NoYes _overrideSalesTax = NoYes::No)
    {
        if (!prmisDefault(_overrideSalesTax))
        {
            this.setField(fieldNum(SalesQuotationTable, OverrideSalesTax), _overrideSalesTax);
        }

        return salesQuotationTable.OverrideSalesTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTemplateActive</Name>
				<Source><![CDATA[
    public QuotationTemplateActive parmTemplateActive(QuotationTemplateActive _templateActive = NoYes::No)
    {
        if (!prmisDefault(_templateActive))
        {
            this.setField(fieldNum(SalesQuotationTable, TemplateActive), _templateActive);
        }

        return salesQuotationTable.TemplateActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTemplateGroupId</Name>
				<Source><![CDATA[
    public SalesQuotationTemplateGroupId parmTemplateGroupId(SalesQuotationTemplateGroupId _templateGroupId = '')
    {
        if (!prmisDefault(_templateGroupId))
        {
            this.setField(fieldNum(SalesQuotationTable, TemplateGroupId), _templateGroupId);
        }

        return salesQuotationTable.TemplateGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTemplateName</Name>
				<Source><![CDATA[
    public QuotationTemplateName parmTemplateName(QuotationTemplateName _templateName = '')
    {
        if (!prmisDefault(_templateName))
        {
            this.setField(fieldNum(SalesQuotationTable, TemplateName), _templateName);
        }

        return salesQuotationTable.TemplateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalBalance</Name>
				<Source><![CDATA[
    public AmountCur parmTotalBalance(AmountCur _amountCur = 0)
    {
        return this.salesQuotationTotals().totalBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalCashDiscount</Name>
				<Source><![CDATA[
    public DiscAmount parmTotalCashDiscount(DiscAmount _discAmount = 0)
    {
        return this.salesQuotationTotals().totalCashDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalInvoice</Name>
				<Source><![CDATA[
    public AmountCur parmTotalInvoice(AmountCur _amountCur = 0)
    {
        if (TaxParameters::canApplyCashDiscOnInvoice_ES())
        {
            return this.salesQuotationTotals().totalAmountCashDiscOnInvoice(true);
        }
        else
        {
            return this.salesQuotationTotals().totalAmount();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalMiscCharges</Name>
				<Source><![CDATA[
    public MarkupAmount parmTotalMiscCharges(MarkupAmount _markupAmount = 0)
    {
        return this.salesQuotationTotals().totalMarkup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalSalesTax</Name>
				<Source><![CDATA[
    public TaxAmountCur parmTotalSalesTax(TaxAmountCur _taxAmountCur = 0)
    {
        return this.salesQuotationTotals().totalTaxAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTouched</Name>
				<Source><![CDATA[
    public TradeTouched parmTouched(TradeTouched _touched = NoYes::No)
    {
        if (!prmisDefault(_touched))
        {
            this.setField(fieldNum(SalesQuotationTable, Touched), _touched);
        }

        return salesQuotationTable.Touched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCode</Name>
				<Source><![CDATA[
    public IntrastatTransactionCodeId parmTransactionCode(IntrastatTransactionCodeId _transactionCode = '')
    {
        if (!prmisDefault(_transactionCode))
        {
            this.setField(fieldNum(SalesQuotationTable, TransactionCode), _transactionCode);
        }

        return salesQuotationTable.TransactionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferredToForecast</Name>
				<Source><![CDATA[
    public SalesQuotationTransferred parmTransferredToForecast(SalesQuotationTransferred _transferredToForecast = NoYes::No)
    {
        if (!prmisDefault(_transferredToForecast))
        {
            this.setField(fieldNum(SalesQuotationTable, TransferredToForecast), _transferredToForecast);
        }

        return salesQuotationTable.TransferredToForecast;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferredToItemReq</Name>
				<Source><![CDATA[
    public SalesQuotationTransferredItemReq parmTransferredToItemReq(SalesQuotationTransferredItemReq _transferredToItemReq = NoYes::No)
    {
        if (!prmisDefault(_transferredToItemReq))
        {
            this.setField(fieldNum(SalesQuotationTable, TransferredToItemReq), _transferredToItemReq);
        }

        return salesQuotationTable.TransferredToItemReq;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransport</Name>
				<Source><![CDATA[
    public IntrastatTransport parmTransport(IntrastatTransport _transport = '')
    {
        if (!prmisDefault(_transport))
        {
            this.setField(fieldNum(SalesQuotationTable, Transport), _transport);
        }

        return salesQuotationTable.Transport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmURL</Name>
				<Source><![CDATA[
    public URL parmURL(URL _url = '')
    {
        if (!prmisDefault(_url))
        {
            this.setField(fieldNum(SalesQuotationTable, url), _url);
        }

        return salesQuotationTable.url;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVATNum</Name>
				<Source><![CDATA[
    public VATNumJournal parmVATNum(VATNumJournal _vatNum = '')
    {
        if (!prmisDefault(_vatNum))
        {
            this.setField(fieldNum(SalesQuotationTable, vatNum), _vatNum);
        }

        return salesQuotationTable.vatNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerSalesResponsible</Name>
				<Source><![CDATA[
    public WorkerSalesResponsible parmWorkerSalesResponsible(WorkerSalesResponsible _workerSalesResponsible = 0)
    {
        if (!prmisDefault(_workerSalesResponsible))
        {
            this.setField(fieldNum(SalesQuotationTable, WorkerSalesResponsible), _workerSalesResponsible);
        }

        return salesQuotationTable.WorkerSalesResponsible;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerSalesTaker</Name>
				<Source><![CDATA[
    public SalesTaker parmWorkerSalesTaker(SalesTaker _workerSalesTaker = 0)
    {
        if (!prmisDefault(_workerSalesTaker))
        {
            this.setField(fieldNum(SalesQuotationTable, WorkerSalesTaker), _workerSalesTaker);
        }

        return salesQuotationTable.WorkerSalesTaker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projInvoiceTableRecord</Name>
				<Source><![CDATA[
    public ProjInvoiceTable projInvoiceTableRecord(ProjInvoiceTable _projInvoiceTable = null)
    {
        ProjInvoiceTable    projInvoiceTable;

        if (!projInvoiceTableIdx)
        {
            projInvoiceTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_projInvoiceTable))
        {
            this.tableCacheInsert(projInvoiceTableIdx, _projInvoiceTable);
            projInvoiceTable = _projInvoiceTable;
        }
        else
        {
            if (this.tableCacheExist(projInvoiceTableIdx))
            {
                projInvoiceTable = this.tableCacheLookup(projInvoiceTableIdx);
            }
            else
            {
                this.setProjIdRef();
                projInvoiceTable = ProjInvoiceTable::find(this.projTableRecord().ProjInvoiceProjId);
                this.tableCacheInsert(projInvoiceTableIdx, projInvoiceTable);
            }
        }

        return projInvoiceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTableRecord</Name>
				<Source><![CDATA[
    public ProjTable projTableRecord(ProjTable _projTable = null)
    {
        ProjTable   projTable;

        if (!projTableIdx)
        {
            projTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_projTable))
        {
            this.tableCacheInsert(projTableIdx, _projTable);
            projTable = _projTable;
        }
        else
        {
            if (this.tableCacheExist(projTableIdx))
            {
                projTable = this.tableCacheLookup(projTableIdx);
            }
            else
            {
                this.setProjIdRef();
                projTable = ProjTable::find(this.parmProjIdRef());
                this.tableCacheInsert(projTableIdx, projTable);
            }
        }

        return projTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesQuotationTable</Name>
				<Source><![CDATA[
    public SalesQuotationTable salesQuotationTable(SalesQuotationTable _salesQuotationTable = salesQuotationTable)
    {
        if (!prmisDefault(_salesQuotationTable))
        {
            this.setCurrentRecordFromExternal(_salesQuotationTable);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesQuotationTotals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets or gets the <c>SalesQuotationTotals</c> object used for the <c>salesQuotationTotals</c>
    /// variable.
    /// </summary>
    /// <param name="_salesQuotationTotals">
    /// A <c>SalesQuotationTotals</c> object to set the <c>salesQuotationTotals</c> variable to be.
    /// </param>
    /// <returns>
    /// The <c>salesQuotationTotals</c> variable.
    /// </returns>
    public SalesQuotationTotals  salesQuotationTotals(SalesQuotationTotals  _salesQuotationTotals = null)
    {
        SalesQuotationTotals  salesQuotationTotals;

        if (! salesQuotationTotalsIdx)
        {
            salesQuotationTotalsIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_salesQuotationTotals))
        {
            this.classCacheInsert(salesQuotationTotalsIdx, _salesQuotationTotals);
            salesQuotationTotals = _salesQuotationTotals;
        }
        else
        {
            if (this.classCacheExist(salesQuotationTotalsIdx))
            {
                salesQuotationTotals = this.classCacheLookup(salesQuotationTotalsIdx);
            }
            else
            {
                salesQuotationTotals = SalesQuotationTotals::construct(salesQuotationTable,SalesUpdate::All);
                salesQuotationTotals.calc();
                this.classCacheInsert(salesQuotationTotalsIdx, salesQuotationTotals);
            }
        }

        return salesQuotationTotals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefRecId</Name>
				<Source><![CDATA[
    protected void setAddressRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, AddressRefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefTableId</Name>
				<Source><![CDATA[
    protected void setAddressRefTableId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, AddressRefTableId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBankDocumentType</Name>
				<Source><![CDATA[
    protected void setBankDocumentType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, BankDocumentType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBusRelAccount</Name>
				<Source><![CDATA[
    protected void setBusRelAccount()
    {
        CustAccount custAccount;
        VendAccount vendAccount;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            return;
        }
        this.setContactPersonId();
        if (this.isFieldSet(fieldNum(SalesQuotationTable,ContactPersonId)))
        {
            custAccount = CustTable::findByPartyRecId(this.contactPersonRecord().Party).AccountNum;
            vendAccount = VendTable::findByPartyRecId(this.contactPersonRecord().Party).AccountNum;

            if (custAccount)
            {
                this.parmBusRelAccount(smmBusRelTable::findCust(custAccount).BusRelAccount);
            }
            else
            {
                if (vendAccount)
                {
                    this.parmBusRelAccount(smmBusRelTable::findVend(vendAccount).BusRelAccount);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCallListID</Name>
				<Source><![CDATA[
    protected void setCallListID()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CallListID)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCampaignId</Name>
				<Source><![CDATA[
    protected void setCampaignId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CampaignId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDisc</Name>
				<Source><![CDATA[
    protected void setCashDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CashDisc)))
        {
            return;
        }
        this.setInvoiceAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable,InvoiceAccount)))
        {
            this.parmCashDisc(this.invoiceAccount_CustTableRecord().CashDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscPercent</Name>
				<Source><![CDATA[
    protected void setCashDiscPercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CashDiscPercent)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCommissionGroup</Name>
				<Source><![CDATA[
    protected void setCommissionGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CommissionGroup)))
        {
            return;
        }
        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmCommissionGroup(this.custAccount_CustTableRecord().CommissionGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmDate</Name>
				<Source><![CDATA[
    protected void setConfirmDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ConfirmDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContactPersonId</Name>
				<Source><![CDATA[
    protected void setContactPersonId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ContactPersonId)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmContactPersonId(this.custAccount_CustTableRecord().ContactPersonId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCountyOrigDest</Name>
				<Source><![CDATA[
    protected void setCountyOrigDest()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CountyOrigDest)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCovStatus</Name>
				<Source><![CDATA[
    protected void setCovStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CovStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CurrencyCode)))
        {
            return;
        }

        this.setProjIdRef();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, ProjIdRef)))
        {
            this.parmCurrencyCode(this.projInvoiceTableRecord().CurrencyId);
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                this.parmCurrencyCode(this.custAccount_CustTableRecord().Currency);
                return;
            }
        }

        this.setBusRelAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmCurrencyCode(this.smmBusRelTableRecord().Currency);
            return;
        }

        this.parmCurrencyCode(Ledger::accountingCurrency());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustAccount</Name>
				<Source><![CDATA[
    public void setCustAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CustAccount)))
        {
            return;
        }
        this.setProjIdRef();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, ProjIdRef)))
        {
            this.parmCustAccount(this.projTableRecord().CustAccount);
            return;
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmCustAccount(this.smmBusRelTableRecord().custAccount());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustFinalUser_BR</Name>
				<Source><![CDATA[
    protected void setCustFinalUser_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CustFinalUser_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustomerRef</Name>
				<Source><![CDATA[
    protected void setCustomerRef()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CustomerRef)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustPurchaseOrder</Name>
				<Source><![CDATA[
    protected void setCustPurchaseOrder()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, CustPurchaseOrder)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
    protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DefaultDimension)))
        {
            return;
        }

        this.inventSiteDimensionLink().axSetDefaultDimension(this);

        this.setProjIdRef();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, ProjIdRef)))
        {
            this.parmDefaultDimension(this.currentRecord().mergeDimension(this.projTableRecord().DefaultDimension));
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                this.parmDefaultDimension(this.currentRecord().mergeDimension(this.custAccount_CustTableRecord().DefaultDimension));
                return;
            }
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmDefaultDimension(this.currentRecord().mergeDimension(this.smmBusRelTableRecord().DefaultDimension));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>DefaultDimension</c> field on a buffer.
    /// </summary>
    /// <param name="_dimension">
    ///    The new dimension value.
    /// </param>
    /// <remarks>
    ///    This method is part of the <c>AxInventSiteDimensionable</c> interface and is called from the
    ///    <c>InventSiteDimensionLink</c> class.
    /// </remarks>
    public void setDefaultDimensionValue(DimensionDefault _dimension)
    {
        this.setField(fieldNum(SalesQuotationTable, DefaultDimension), _dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDateControl</Name>
				<Source><![CDATA[
    protected void setDeliveryDateControl()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DeliveryDateControlType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    protected void setDeliveryName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DeliveryName)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                this.parmDeliveryName(this.custAccount_CustTableRecord().name());
                return;
            }
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmDeliveryName(this.smmBusRelTableRecord().name());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryPostalAddress</Name>
				<Source><![CDATA[
    protected void setDeliveryPostalAddress()
    {
        LogisticsLocation       location;
        LogisticsLocationEntity locationEntity;
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DeliveryPostalAddress)))
        {
            return;
        }

        this.setProjIdRef();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, ProjIdRef)))
        {
            this.parmDeliveryPostalAddress(this.projInvoiceTableRecord().invoiceAddress().RecId);
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                location = LogisticsLocationDefault::findSimpleDefault(this.custAccount_CustTableRecord(),
                            LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery));
                if (location)
                {
                    locationEntity = LogisticsLocationEntity::constructFromLocationRecId(location.RecId);
                    this.parmDeliveryPostalAddress(locationEntity.getPostalAddress().RecId);
                }
                return;
            }
        }

        this.setBusRelAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmDeliveryPostalAddress(this.smmBusRelTableRecord().postalAddress().RecId);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record.
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method so that all of the fields that are
    ///    entity specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldNum(SalesQuotationTable, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDiscPercent</Name>
				<Source><![CDATA[
    protected void setDiscPercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DiscPercent)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvMode</Name>
				<Source><![CDATA[
    protected void setDlvMode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DlvMode)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmDlvMode(this.custAccount_CustTableRecord().DlvMode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvReason</Name>
				<Source><![CDATA[
    protected void setDlvReason()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DlvReason)))
        {
            return;
        }
        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmDlvReason(this.custAccount_CustTableRecord().DlvReason);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvTerm</Name>
				<Source><![CDATA[
    protected void setDlvTerm()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DlvTerm)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmDlvTerm(this.custAccount_CustTableRecord().DlvTerm);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocuConclusion</Name>
				<Source><![CDATA[
    protected void setDocuConclusion()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DocuConclusion)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocuIntro</Name>
				<Source><![CDATA[
    protected void setDocuIntro()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DocuIntro)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocuTitle</Name>
				<Source><![CDATA[
    protected void setDocuTitle()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DocuTitle)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEmail</Name>
				<Source><![CDATA[
    protected void setEmail()
    {
        LogisticsLocationEntity location;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, Email)))
        {
            return;
        }

        this.setContactPersonId();
        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, ContactPersonId)) ||
            this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.contactPersonRecord().email())
            {
                this.parmEmail(this.contactPersonRecord().email());
            }
            else
            {
                if (this.axLogisticsLocation())
                {
                    location = LogisticsLocationEntity::constructFromLocationRecId(this.axLogisticsLocation().parmRecId());

                    if (location)
                    {
                        this.parmEmail(location.getEmail());
                    }
                }
                if (!this.parmURL())
                {
                    this.parmEmail(this.custAccount_CustTableRecord().email());
                }
            }
            return;
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmEmail(this.smmBusRelTableRecord().email());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEndDisc</Name>
				<Source><![CDATA[
    protected void setEndDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, EndDisc)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmEndDisc(this.custAccount_CustTableRecord().EndDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnterpriseNumber</Name>
				<Source><![CDATA[
    protected void setEnterpriseNumber()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, EnterpriseNumber)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmEnterpriseNumber(this.custAccount_CustTableRecord().getPrimaryRegistrationNumber(TaxRegistrationTypesList::UID, this.parmConfirmDate()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEstimate</Name>
				<Source><![CDATA[
    protected void setEstimate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, Estimate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExportReason</Name>
				<Source><![CDATA[
    protected void setExportReason()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ExportReason)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFixedDueDate</Name>
				<Source><![CDATA[
    protected void setFixedDueDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, FixedDueDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFixedExchRate</Name>
				<Source><![CDATA[
    protected void setFixedExchRate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, FixedExchRate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFreightSlipType</Name>
				<Source><![CDATA[
    protected void setFreightSlipType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, FreightSlipType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFreightZone</Name>
				<Source><![CDATA[
    protected void setFreightZone()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, FreightZone)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmFreightZone(this.custAccount_CustTableRecord().FreightZone);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInclTax</Name>
				<Source><![CDATA[
    protected void setInclTax()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, InclTax)))
        {
            return;
        }

        this.setQuotationType();
        if ( this.parmQuotationType() == QuotationType::Sales)
        {
            this.setCustAccount();
            if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
            {
                this.parmInclTax(this.custAccount_CustTableRecord().InclTax);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    protected void setInventLocationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, InventLocationId)))
        {
            return;
        }

        this.setCustAccount();
        this.setInventSiteId();

        if (!this.parmInventSiteId() || this.parmInventSiteId() == this.custAccount_CustTableRecord().InventSiteId)
        {
            if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
            {
                this.parmInventLocationId(this.custAccount_CustTableRecord().InventLocation);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    protected void setInventSiteId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, InventSiteId)))
        {
            return;
        }

        this.setCustAccount();
        this.setInventLocationId();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmInventSiteId(this.custAccount_CustTableRecord().InventSiteId);
        }
        else if (this.isFieldSet(fieldNum(SalesQuotationTable, InventLocationId)))
        {
            this.parmInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceAccount</Name>
				<Source><![CDATA[
    protected void setInvoiceAccount()
    {
        CustTable           custTable;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, InvoiceAccount)))
        {
            return;
        }

        if (this.projTableRecord())
        {
            if (this.isFieldSet(fieldNum(SalesQuotationTable, ProjIdRef)))
            {
                custTable   = CustTable::find(ProjFundingSource::findCustAccount(this.projTableRecord().projInvoice().ProjInvoiceProjId).CustAccount);
                this.parmInvoiceAccount(custTable.InvoiceAccount ? custTable.InvoiceAccount : custTable.AccountNum);
            }
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmInvoiceAccount(this.custAccount_CustTableRecord().InvoiceAccount ? this.custAccount_CustTableRecord().InvoiceAccount : this.custAccount_CustTableRecord().AccountNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLanguageId</Name>
				<Source><![CDATA[
    protected void setLanguageId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, LanguageId)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                this.parmLanguageId(DirPartyTable::findRec(this.custAccount_CustTableRecord().Party).LanguageId);
                return;
            }
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmLanguageId(DirPartyTable::findRec(this.smmBusRelTableRecord().Party).LanguageId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    protected void setLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, LineDisc)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmLineDisc(this.custAccount_CustTableRecord().LineDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setListcode</Name>
				<Source><![CDATA[
    protected void setListcode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, Listcode)))
        {
            return;
        }

        if (this.projTableRecord())
        {
            if (this.isFieldSet(fieldNum(SalesQuotationTable, ProjIdRef)))
            {
                this.parmListcode(this.projTableRecord().projInvoice().ListCodeId);
            }
            return;
        }
        this.setDeliveryPostalAddress();
        this.setInvoiceAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, DeliveryPostalAddress))  ||
            this.isFieldSet(fieldNum(SalesQuotationTable, InvoiceAccount)))
        {
            this.parmListcode(EUSalesList::resolveListCodeByCountryState(salesQuotationTable.deliveryAddress()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMarkupGroup</Name>
				<Source><![CDATA[
    protected void setMarkupGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, MarkupGroup)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmMarkupGroup(this.custAccount_CustTableRecord().MarkupGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setModelId</Name>
				<Source><![CDATA[
    protected void setModelId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ModelId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLineDisc</Name>
				<Source><![CDATA[
    protected void setMultiLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, MultiLineDisc)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmMultiLineDisc(this.custAccount_CustTableRecord().MultiLineDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNumberSequenceGroup</Name>
				<Source><![CDATA[
    protected void setNumberSequenceGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, NumberSequenceGroup)))
        {
            return;
        }

        this.setInvoiceAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, InvoiceAccount)))
        {
            this.parmNumberSequenceGroup(this.invoiceAccount_CustTableRecord().NumberSequenceGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrigQuotationId</Name>
				<Source><![CDATA[
    protected void setOrigQuotationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, OrigQuotationId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPayment</Name>
				<Source><![CDATA[
    protected void setPayment()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, Payment)))
        {
            return;
        }

        this.setInvoiceAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, InvoiceAccount)))
        {
            this.parmPayment(this.invoiceAccount_CustTableRecord().PaymTermId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymMode</Name>
				<Source><![CDATA[
    protected void setPaymMode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, PaymMode)))
        {
            return;
        }

        this.setInvoiceAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, InvoiceAccount)))
        {
            this.parmPaymMode(this.invoiceAccount_CustTableRecord().PaymMode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymSpec</Name>
				<Source><![CDATA[
    protected void setPaymSpec()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, PaymSpec)))
        {
            return;
        }

        this.setInvoiceAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, InvoiceAccount)))
        {
            this.parmPaymSpec(this.invoiceAccount_CustTableRecord().PaymSpec);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPort</Name>
				<Source><![CDATA[
    protected void setPort()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, Port)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPostingProfile</Name>
				<Source><![CDATA[
    protected void setPostingProfile()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, PostingProfile)))
        {
            return;
        }

        this.parmPostingProfile(CustParameters::find().PostingProfile);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceGroupId</Name>
				<Source><![CDATA[
    protected void setPriceGroupId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, PriceGroupId)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmPriceGroupId(this.custAccount_CustTableRecord().PriceGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjIdRef</Name>
				<Source><![CDATA[
    protected void setProjIdRef()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ProjIdRef)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjInvoiceProjId</Name>
				<Source><![CDATA[
    protected void setProjInvoiceProjId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ProjInvoiceProjId)))
        {
            return;
        }

        this.setProjIdRef();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, ProjIdRef)))
        {
            this.parmProjInvoiceProjId(this.projTableRecord().ProjInvoiceProjId);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationCategory</Name>
				<Source><![CDATA[
    protected void setQuotationCategory()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, QuotationCategory)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmQuotationCategory(SalesParameters::find().CustQuotationTypeId);
            return;
        }

        this.setProjIdRef();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationExpiryDate</Name>
				<Source><![CDATA[
    protected void setQuotationExpiryDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, QuotationExpiryDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationFollowupActivity</Name>
				<Source><![CDATA[
    protected void setQuotationFollowupActivity()
    {
        smmActivities       smmActivities;
        SalesQuotationTable localSQT;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, QuotationFollowupActivity)))
        {
            return;
        }
        this.setBusRelAccount();
        this.setWorkerSalesResponsible();
        this.setQuotationExpiryDate();
        localSQT = this.salesQuotationTable();
        if (localSQT.BusRelAccount && localSQT.WorkerSalesResponsible && localSQT.QuotationExpiryDate)
        {
            smmActivities = smmActivityCreate::createActivity(localSQT);
            if (smmActivities)
            {
                this.parmQuotationFollowupActivity(smmActivities.ActivityNumber);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationFollowUpDate</Name>
				<Source><![CDATA[
    protected void setQuotationFollowUpDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, QuotationFollowUpDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveQuotationIdNumberSequenceReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the number sequence reference for sales quotation Id. 
    /// </summary>
    /// <returns>
    /// A record of the <c>NumberSequenceReference</c> table.
    /// </returns>
    protected NumberSequenceReference retrieveQuotationIdNumberSequenceReference()
    {
        return SalesParameters::numRefSalesQuotationId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationId</Name>
				<Source><![CDATA[
    protected void setQuotationId()
    {
        NumberSequenceReference numberSequenceReference;

        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        if (this.isSetMethodsCalledFromSave())
        {
            if (this.isFieldSetExternally(fieldNum(SalesQuotationTable, QuotationId)))
            {
                if (!this.salesQuotationTable())
                {
                    numberSequenceReference = this.retrieveQuotationIdNumberSequenceReference();
                    this.checkNumber(numberSequenceReference.numberSequenceTable(), fieldNum(SalesQuotationTable,QuotationId),this.parmQuotationId());
                    if (numberSequenceReference.NumberSequenceId && numberSequenceReference.numberSequenceTable().Continuous)
                    {
                        NumberSeq::newReserveNum(numberSequenceReference).reserve( this.parmQuotationId());
                    }
                }
            }
            else
            {
                if (this.isFieldSet(fieldNum(SalesQuotationTable, QuotationId)))
                {
                    return;
                }

                if (!this.parmQuotationId())
                {
                    this.parmQuotationId(NumberSeq::newGetNum(this.retrieveQuotationIdNumberSequenceReference()).num());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationName</Name>
				<Source><![CDATA[
    protected void setQuotationName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, QuotationName)))
        {
            return;
        }
        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                this.parmQuotationName(this.custAccount_CustTableRecord().name());
                return;
            }
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmQuotationName(this.smmBusRelTableRecord().name());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationStatus</Name>
				<Source><![CDATA[
    protected void setQuotationStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, QuotationStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationType</Name>
				<Source><![CDATA[
    protected void setQuotationType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, QuotationType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReasonId</Name>
				<Source><![CDATA[
    protected void setReasonId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ReasonId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiptDateRequested</Name>
				<Source><![CDATA[
    protected void setReceiptDateRequested()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ReceiptDateRequested)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesGroup</Name>
				<Source><![CDATA[
    protected void setSalesGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, SalesGroup)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.parmSalesGroup(this.custAccount_CustTableRecord().SalesGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesIdRef</Name>
				<Source><![CDATA[
    protected void setSalesIdRef()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, SalesIdRef)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesOriginId</Name>
				<Source><![CDATA[
    protected void setSalesOriginId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, SalesOriginId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesPoolId</Name>
				<Source><![CDATA[
    protected void setSalesPoolId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, SalesPoolId)))
        {
            return;
        }
        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.custAccount_CustTableRecord().SalesPoolId)
            {
                this.parmSalesPoolId(this.custAccount_CustTableRecord().SalesPoolId);
            }
            else
            {
                this.parmSalesPoolId(SalesParameters::find().SalesPoolId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesUnitId</Name>
				<Source><![CDATA[
    protected void setSalesUnitId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, SalesUnitId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setServiceId</Name>
				<Source><![CDATA[
    protected void setServiceId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ServiceId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSettleVoucher</Name>
				<Source><![CDATA[
    protected void setSettleVoucher()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, SettleVoucher)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShippingDateRequested</Name>
				<Source><![CDATA[
    protected void setShippingDateRequested()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, ShippingDateRequested)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatProcId</Name>
				<Source><![CDATA[
    protected void setStatProcId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, StatProcId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStorageDimField</Name>
				<Source><![CDATA[
    public void setStorageDimField(FieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldNum(SalesQuotationTable, InventSiteId):         this.setInventSiteId();         break;
            case fieldNum(SalesQuotationTable, InventLocationId):     this.setInventLocationId();     break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setQuotationId();
        this.setQuotationName();
        this.setQuotationExpiryDate();
        this.setQuotationType();
        this.setConfirmDate();
        this.setQuotationStatus();
        this.setQuotationCategory();
        this.setDeliveryName();
        this.setDeliveryPostalAddress();
        this.setDlvMode();
        this.setDlvTerm();
        this.setWorkerSalesResponsible();
        this.setSalesGroup();
        this.setSalesUnitId();
        this.setSalesPoolId();
        this.setCommissionGroup();
        this.setMarkupGroup();
        this.setCurrencyCode();
        this.setTaxGroup();
        this.setVATNum();
        this.setInclTax();
        this.setLineDisc();
        this.setMultiLineDisc();
        this.setEndDisc();
        this.setDiscPercent();
        this.setPayment();
        this.setPaymMode();
        this.setPaymSpec();
        this.setCashDisc();
        this.setListcode();
        this.setFreightSlipType();
        this.setFreightZone();
        this.setInventLocationId();
        this.setInventSiteId();
        this.setDefaultDimension();
        this.setCustAccount();
        this.setBusRelAccount();
        this.setReceiptDateRequested();
        this.setPostingProfile();
        this.setCustomerRef();
        this.setContactPersonId();
        this.setEmail();
        this.setURL();
        this.setNumberSequenceGroup();
        this.setLanguageId();
        this.setReasonId();
        this.setSalesIdRef();
        this.setProjIdRef();
        this.setServiceId();
        this.setCampaignId();
        this.setCallListID();
        this.setDocuIntro();
        this.setDocuConclusion();
        this.setDocuTitle();
        this.setCustPurchaseOrder();
        this.setWorkerSalesTaker();
        this.setSalesOriginId();
        this.setQuotationFollowUpDate();
        this.setQuotationFollowupActivity();
        this.setTouched();
        this.setAddressRefTableId();
        this.setInvoiceAccount();
        this.setFixedExchRate();
        this.setTransactionCode();
        this.setTransport();
        this.setPort();
        this.setStatProcId();
        this.setSettleVoucher();
        this.setCovStatus();
        this.setFixedDueDate();
        this.setEstimate();
        this.setPriceGroupId();
        this.setTemplateGroupId();
        this.setTemplateName();
        this.setTemplateActive();
        this.setProjInvoiceProjId();
        this.setModelId();
        this.setTransferredToForecast();
        this.setAddressRefRecId();
        this.setShippingDateRequested();
        this.setDeliveryDateControl();
        this.setExportReason();
        this.setDlvReason();
        this.setEnterpriseNumber();
        this.setCountyOrigDest();
        this.setTransferredToItemReq();
        this.setCashDiscPercent(); 
        this.setBankDocumentType();

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            this.setCustFinalUser_BR();
        }
        // </GBR>

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxGroup</Name>
				<Source><![CDATA[
    protected void setTaxGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, TaxGroup)))
        {
            return;
        }

        this.setProjIdRef();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, ProjIdRef)))
        {
            this.parmTaxGroup(ProjParameters::taxGroupInvoice(this.parmProjIdRef()));
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                if (this.axLogisticsLocation())
                {
                    this.parmTaxGroup(TaxSales::custTaxGroup(this.custAccount_CustTableRecord().DlvTerm,this.custAccount_CustTableRecord().TaxGroup,
                                                             this.axLogisticsLocation().parmRecId()));
                }
                else
                {
                    this.parmTaxGroup(TaxSales::custTaxGroup(this.custAccount_CustTableRecord().DlvTerm,this.custAccount_CustTableRecord().TaxGroup));
                }
                return;
            }
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            if (this.axLogisticsLocation())
            {
                this.parmTaxGroup(TaxSales::custTaxGroup(this.smmBusRelTableRecord().DlvTerm,this.smmBusRelTableRecord().TaxGroup,
                                                         this.axLogisticsLocation().parmRecId()));
            }
            else
            {
                this.parmTaxGroup(TaxSales::custTaxGroup(this.smmBusRelTableRecord().DlvTerm,this.smmBusRelTableRecord().TaxGroup));
            }
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTemplateActive</Name>
				<Source><![CDATA[
    protected void setTemplateActive()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, TemplateActive)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTemplateGroupId</Name>
				<Source><![CDATA[
    protected void setTemplateGroupId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, TemplateGroupId)))
        {
            return;
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmTemplateGroupId('');
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTemplateName</Name>
				<Source><![CDATA[
    protected void setTemplateName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, TemplateName)))
        {
            return;
        }

        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmTemplateName('');
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTouched</Name>
				<Source><![CDATA[
    protected void setTouched()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, Touched)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionCode</Name>
				<Source><![CDATA[
    protected void setTransactionCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, TransactionCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransferredToForecast</Name>
				<Source><![CDATA[
    protected void setTransferredToForecast()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, TransferredToForecast)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransferredToItemReq</Name>
				<Source><![CDATA[
    protected void setTransferredToItemReq()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, TransferredToItemReq)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransport</Name>
				<Source><![CDATA[
    protected void setTransport()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, Transport)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setURL</Name>
				<Source><![CDATA[
    protected void setURL()
    {
        LogisticsLocationEntity location;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, url)))
        {
            return;
        }
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, DeliveryPostalAddress)))
        {
            return;
        }
        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                if (this.axLogisticsLocation())
                {
                    location = LogisticsLocationEntity::constructFromLocationRecId(this.axLogisticsLocation().parmRecId());
                    if (location)
                    {
                        this.parmURL(location.getURL());
                    }
                }
                if (!this.parmURL())
                {
                    this.parmURL(this.custAccount_CustTableRecord().url());
                }
                return;
            }
        }
        this.setBusRelAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, BusRelAccount)))
        {
            this.parmURL(this.smmBusRelTableRecord().url());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVATNum</Name>
				<Source><![CDATA[
    protected void setVATNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, vatNum)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.custAccount_CustTableRecord().copyPrimaryRegistrationNumberToVATMap(this.salesQuotationTable(), this.parmConfirmDate());
            this.parmVATNum(this.salesQuotationTable().VATNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkerSalesResponsible</Name>
				<Source><![CDATA[
    protected void setWorkerSalesResponsible()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, WorkerSalesResponsible)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkerSalesTaker</Name>
				<Source><![CDATA[
    protected void setWorkerSalesTaker()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationTable, WorkerSalesTaker)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>smmBusRelTableRecord</Name>
				<Source><![CDATA[
    public smmBusRelTable smmBusRelTableRecord(smmBusRelTable _smmBusRelTable = null)
    {
        smmBusRelTable  smmBusRelTable;

        if (!smmBusRelTableIdx)
        {
            smmBusRelTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_smmBusRelTable))
        {
            this.tableCacheInsert(smmBusRelTableIdx, _smmBusRelTable);
            smmBusRelTable = _smmBusRelTable;
        }
        else
        {
            if (this.tableCacheExist(smmBusRelTableIdx))
            {
                smmBusRelTable = this.tableCacheLookup(smmBusRelTableIdx);
            }
            else
            {
                smmBusRelTable = smmBusRelTable::find(this.parmBusRelAccount());
                this.tableCacheInsert(smmBusRelTableIdx, smmBusRelTable);
            }
        }

        return smmBusRelTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxSalesQuotationTable construct()
    {
        return new AxSalesQuotationTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructValidateInput</Name>
				<Source><![CDATA[
    public static AxSalesQuotationTable constructValidateInput(SalesQuotationTable _salesQuotationTable)
    {
        AxSalesQuotationTable axSalesQuotationTable = AxSalesQuotationTable::newValidateInput();
        axSalesQuotationTable.salesQuotationTable(_salesQuotationTable);

        return axSalesQuotationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSalesQuotationTable</Name>
				<Source><![CDATA[
    public static AxSalesQuotationTable newSalesQuotationTable(SalesQuotationTable _salesQuotationTable)
    {
        AxSalesQuotationTable axSalesQuotationTable = AxSalesQuotationTable::construct();
        axSalesQuotationTable.salesQuotationTable(_salesQuotationTable);

        return axSalesQuotationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newValidateInput</Name>
				<Source><![CDATA[
    public static AxSalesQuotationTable newValidateInput()
    {
        AxSalesQuotationTable axSalesQuotationTable = new AxSalesQuotationTable();

        axSalesQuotationTable.validateInput(true);
        return axSalesQuotationTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>