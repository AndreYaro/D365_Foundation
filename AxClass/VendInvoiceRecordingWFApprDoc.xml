<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceRecordingWFApprDoc</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>VendInvoiceRecordingWFApprDoc</c> class is the workflow document class for
///    <c>VendInvoiceRecording</c> journals.
/// </summary>
/// <remarks>
///    This class is required in order to provide a unique workflow document for each journal.
/// </remarks>
public class VendInvoiceRecordingWFApprDoc extends LedgerJournalWFApprovalDocument
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAreAllRequestersTheSame</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the requester is the same for the <c>PurchaseOrder</c> object associated to each
    /// <c>LedgerJournalTrans</c> record of the corresponding <c>LedgerJournal</c> objects.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// A <c>Yes</c> enumeration value if the requester is the same for the <c>PurchaseOrder</c> object
    /// that is associated to each <c>LedgerJournalTrans</c> record; otherwise, the <c>No</c> enumeration
    /// value.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID must refer to a <c>LedgerJournalTable</c> table.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// The table ID must refer to a <c>LedgerJournalTable</c> table. The record ID cannot be zero.
    /// </exception>
    public LedgerJournalAreAllRequestersSame parmAreAllRequestersTheSame(CompanyId _companyId, tableId _tableId, RecId _recId)
    {
        return this.areAllRequestersTheSame(_companyId, _tableId, _recId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetCheckResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>BudgetSourceCheckResult</c> value for all the vouchers that are associated with the
    /// <c>LedgerJournalTable</c> record.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The <c>BudgetSourceCheckResult</c> for all the vouchers that are associated with the
    /// <c>LedgerJournalTable</c> record.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID must be a <c>LedgerJournalTable</c> record.
    /// </exception>
    public BudgetSourceCheckResult parmBudgetCheckResult(CompanyId _companyId, tableId _tableId, RecId _recId)
    {
        LedgerJournalTable ledgerJournalTable;
        BudgetSourceCheckResult budgetSourceCheckResult;

        if (_tableId != tablenum(LedgerJournalTable))
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        Debug::assert(_companyId != '');

        changecompany(_companyId)
        {
            ledgerJournalTable = LedgerJournalTable::findByRecId(_recId);

            if (ledgerJournalTable)
            {
                budgetSourceCheckResult = BudgetSourceLedgerJournalTable::findBudgetCheckResult(ledgerJournalTable.RecId);
            }
        }

        return budgetSourceCheckResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendInvoiceRecordingWFApprDoc construct()
    {
        return new VendInvoiceRecordingWFApprDoc();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>