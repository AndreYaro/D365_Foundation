<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUpdateOnhandGlobal</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventUpdateOnhandGlobal
{
    Map inventUpdateOnhandMap;  // Mapping DataAreaId -> instance of the InventUpdateOnhand class
    Set activatedDataAreaId;    // Set containing dataAreaId's for which the corresponding InventUpdateOnhand instance need to be invoked upon ttsCommit

    private static InventUpdateOnhandGlobal singleton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activateDataAreaId</Name>
				<Source><![CDATA[
    void activateDataAreaId(
        DataAreaId _dataAreaId = curext()
        )
    {
        if (!activatedDataAreaId.in(_dataAreaId))
            activatedDataAreaId.add(_dataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventUpdateOnhand</Name>
				<Source><![CDATA[
    public InventUpdateOnhand inventUpdateOnhand(
        DataAreaId _dataAreaId = curext()
        )
    {
        if (!inventUpdateOnhandMap.exists(_dataAreaId))
             inventUpdateOnhandMap.insert(_dataAreaId,InventUpdateOnhand::construct(_dataAreaId));
        return inventUpdateOnhandMap.lookup(_dataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        this.reset();
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets any cached values.
    /// </summary>
    public void reset()
    {
        inventUpdateOnhandMap = new Map(Types::String,Types::Class);
        activatedDataAreaId = new Set(Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ttsNotifyAbort</Name>
				<Source><![CDATA[
    public void ttsNotifyAbort()
    {
        MapEnumerator       me = inventUpdateOnhandMap.getEnumerator();

        activatedDataAreaId = new Set(Types::String);

        while (me.moveNext())
        {
            InventUpdateOnhand inventUpdateOnhand = me.currentValue();
            inventUpdateOnhand.ttsNotifyAbort(); // ChangeCompany not necessary because this is only a reset of internal variables
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ttsNotifyPostBegin</Name>
				<Source><![CDATA[
    public void ttsNotifyPostBegin()
    {
        MapEnumerator           me = inventUpdateOnhandMap.getEnumerator();

        activatedDataAreaId = new Set(Types::String);

        while (me.moveNext())
        {
            InventUpdateOnhand inventUpdateOnhand = me.currentValue();
            inventUpdateOnhand.ttsNotifyPostBegin(); // ChangeCompany not necessary because this is only a reset of internal variables
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ttsNotifyPreCommit</Name>
				<Source><![CDATA[
    public void ttsNotifyPreCommit()
    {
        SetEnumerator       se = activatedDataAreaId.getEnumerator();
        InventUpdateOnhand  inventUpdateOnhand;

        while (se.moveNext())
        {
            DataAreaId newExt = se.current();
            if (newExt != curext())
            {
                changecompany(newExt)
                {
                    inventUpdateOnhand = inventUpdateOnhandMap.lookup(newExt);
                    inventUpdateOnhand.ttsNotifyPreCommit();
                }
            }
            else
            {
                inventUpdateOnhand = inventUpdateOnhandMap.lookup(newExt);
                inventUpdateOnhand.ttsNotifyPreCommit();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>InventUpdateOnhandGlobal</c> singleton instance.
    /// </summary>
    /// <returns>The <c>InventUpdateOnhandGlobal</c> instance.</returns>
    public static InventUpdateOnhandGlobal instance()
    {
        if (singleton == null)
        {
            singleton = InventUpdateOnhandGlobal::construct();
        }
        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static InventUpdateOnhandGlobal construct()
    {
        return new InventUpdateOnhandGlobal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustAddInventSumDeltaOnhand</Name>
				<Source><![CDATA[
    public static boolean mustAddInventSumDeltaOnhand(ItemId _itemId)
    {
        return InventUpdateOnhandGlobal::instance().inventUpdateOnhand().mustAddInventSumDeltaOnhand(_itemId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>