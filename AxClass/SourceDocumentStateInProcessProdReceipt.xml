<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocumentStateInProcessProdReceipt</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SourceDocumentStateInProcessVendInvoice</c> class is an in-process source document state for
/// a vendor invoice.
/// </summary>
[SourceDocumentClassExtensionAttribute(tableStr(VendPackingSlipJour))]
public class SourceDocumentStateInProcessProdReceipt extends SourceDocumentStateInProcess
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>optimizeTransitionSourceDocLinesUpdate</Name>
				<Source><![CDATA[
    protected boolean optimizeTransitionSourceDocLinesUpdate()
    {
        boolean optimizeTransitionSourceDocLinesUpdate;

        if (targetSourceDocumentAccountingStatus == SourceDocumentAccountingStatus::Completed)
        {
            optimizeTransitionSourceDocLinesUpdate = true;
        }

        return optimizeTransitionSourceDocLinesUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStateContainerValuesToNullForProcessedLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method clears the source document state line state container field to null after processing of document
    /// </summary>
    protected void updateStateContainerValuesToNullForProcessedLine()
    {
        //cannot clear the state container as this document support correction so we need to keep the state container values
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBusinessEvent</Name>
				<Source><![CDATA[
    protected BusinessEventsBase getBusinessEvent()
    {
        PurchaseOrderReceivedBusinessEvent businessEvent;

        if (targetSourceDocumentAccountingStatus == SourceDocumentAccountingStatus::Completed)
        {
            VendPackingSlipJour vendPackingSlipJour = VendPackingSlipJour::findBySourceDocumentHeader(sourceDocumentHeader.RecId);
            PurchTable purchTable = PurchTable::find(vendPackingSlipJour.PurchId);

            businessEvent = PurchaseOrderReceivedBusinessEvent::construct(vendPackingSlipJour, purchTable);
        }

        return businessEvent;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>