<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementSettle_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>AgreementSettle_RU</c> is used to show documents with agreement.
/// </summary>
abstract class AgreementSettle_RU
{
    AgreementHeaderExt_RU agreementHeaderExt;
    FormRun               formRun;
    Args                  args;
    FormDataSource        formDataSource;
    QueryBuildDataSource  queryBuildDataSource;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs the instance of the <c>AgreementSettle_RU</c> class.
    /// </summary>
    /// <param name="_agreementHeaderExt">
    ///     The record of the <c>AgreementHeaderExt_RU</c> table.
    /// </param>
    protected void new(AgreementHeaderExt_RU _agreementHeaderExt)
    {
        agreementHeaderExt = _agreementHeaderExt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Runs a form.
    /// </summary>
    abstract public void run()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs the instance of one of the derived from <c>AgreementSettle_RU</c> class.
    /// </summary>
    /// <param name="_agreementHeaderExt">
    ///     The record of the <c>AgreementHeaderExt_RU</c> table.
    /// </param>
    /// <param name="_freeInvoice">
    ///     True if the nstance of the <c>AgreementSettle_CustFreeInvoice_RU</c> should be created; otherwise
    ///     the instance of the <c>AgreementSettle_SalesTable_RU</c> should be created; optional.
    /// </param>
    /// <returns>
    ///     The instance of the <c>AgreementSettle_RU</c> class.
    /// </returns>
    /// <remarks>
    ///     This class is used to show documents with agreement.
    /// </remarks>
    /// <exception cref="Exception::Error">
    ///     Throws this exception if it is not clear what type of class should be instantiated.
    /// </exception>
    public static AgreementSettle_RU construct(AgreementHeaderExt_RU _agreementHeaderExt,
                                               boolean               _freeInvoice = false)
    {
        switch (_agreementHeaderExt.InstanceRelationType)
        {
            case tableNum(SalesAgreementHeaderExt_RU):
                if (_freeInvoice)
                {
                    return new AgreementSettle_CustFreeInvoice_RU(_agreementHeaderExt);
                }
                return new AgreementSettle_SalesTable_RU(_agreementHeaderExt);

            case tableNum(PurchAgreementHeaderExt_RU):
                return new AgreementSettle_PurchTable_RU(_agreementHeaderExt);
        }

        throw error(Error::wrongUseOfFunction(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        AgreementSettle_RU agreementSettle;

        if (!_args.dataset())
        {
            return;
        }

        if (_args.record().TableId != tablenum(SalesAgreementHeaderExt_RU) &&
            _args.record().TableId != tablenum(PurchAgreementHeaderExt_RU))
        {
            return;
        }

        agreementSettle = AgreementSettle_RU::construct(_args.record(), _args.parmEnum());
        if (agreementSettle)
        {
            agreementSettle.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>