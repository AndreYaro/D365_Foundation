<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppStepFieldDataExtractorInquiryList</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class WHSMobileAppStepFieldDataExtractorInquiryList extends WHSMobileAppStepFieldDataExtractor
{
    private const int NotFound = -1;
    protected int selectedControlIndex;
    protected container selectedControl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>extract</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal Map extract(Set _fields, container _formContainer)
    {
        selectedControlIndex = 0;
        selectedControl = conNull();

        Map fieldsData = new Map(Types::Integer, Types::String);

        SetEnumerator se = _fields.getEnumerator();
        while (se.moveNext())
        {
            var typeId = se.current();
            str data = this.extractFieldVaule(typeId, _formContainer);
            if (data)
            {
                fieldsData.insert(typeId, data);
            }
         }
        
        return fieldsData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>extractFieldVaule</Name>
				<Source><![CDATA[
    public abstract str extractFieldVaule(ExtendedTypeId _typeId, container _formContainer)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    protected str getData(container _formContainer, int _position)
    {
        this.getSelectedControl(_formContainer);
        
        if (conLen(selectedControl) > 0)
        {
            str label = conPeek(selectedControl, #label);
            container con = str2con(label, '\n', false);
            var len = conLen(con);
            if (len >= _position)
            {
                str info = conPeek(con, _position);
                con = str2con(info, ': ', false);
                len = conLen(con);
                if (len > 1)
                {
                    return conPeek(con, len);
                }
            }
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedControl</Name>
				<Source><![CDATA[
    protected void getSelectedControl(container _formContainer)
    {
        if (!selectedControlIndex)
        {
            var length = conLen(_formContainer);

            for (int i = #FieldControlStartLoc; i <= length; ++i)
            {
                container controlCon = conPeek(_formContainer, i);

                var controlType = conPeek(controlCon, #controlType);
                if (controlType == #RFLabel && conLen(controlCon) > #instructionControl)
                {
                    selectedControlIndex = i;
                    selectedControl = controlCon;
                    return;
                }
            }

            selectedControlIndex = NotFound;
            selectedControl = conNull();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataFromLabelAttr</Name>
				<Source><![CDATA[
    protected str getDataFromLabelAttr(container _controlCon)
    {
        str label = conPeek(_controlCon, #label);
        container con;
        
        con = str2con(label, ': ', false);
                
        var length = conLen(con);
        if (length > 0)
        {
            return conPeek(con, length);
        }
       
        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>