<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBIncomingOutgoingBookUIBuilder_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FBIncomingOutgoingBookUIBuilder_BR</c> class is responsible for building an input dialog for the incoming and outgoing book reports.
/// </summary>
class FBIncomingOutgoingBookUIBuilder_BR extends SrsReportDataContractUIBuilder
{
    DialogField                         fiscalEstablishmentIdField;
    DialogField                         fiscalEstablishmentDataAreaField;
    DialogField                         fromDateField;
    DialogField                         toDateField;
    FormRun                             formRun;

    FBincomingOutgoingBookContract_BR   contract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the UI of the report input dialog.
    /// </summary>
    public void build()
    {
        contract = this.dataContractObject() as FBincomingOutgoingBookContract_BR;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalEstablishmentLookup</Name>
				<Source><![CDATA[
    private void fiscalEstablishmentLookup(FormControl _formControl)
    {
        Args                args            = new Args(formStr(FBBookingPeriodLookup_BR));
        FormStringControl   stringControl   = _formControl;

        formRun = classFactory::formRunClassOnClient(args);
        formRun.init();

        stringControl.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalEstablishmentModified</Name>
				<Source><![CDATA[
    private boolean fiscalEstablishmentModified(FormControl _formControl = null)
    {
        Common              common;
        FBBookingPeriod_BR  bookingPeriod;

        if (formRun)
        {
            common = formRun.selectRecordModeSelectedRecord();

            if (common.TableId == tableNum(FBBookingPeriod_BR))
            {
                bookingPeriod = common;

                fiscalEstablishmentIdField.value        (bookingPeriod.FiscalEstablishmentId);
                fiscalEstablishmentDataAreaField.value  (bookingPeriod.FiscalEstablishmentDataArea);
                fromDateField.value                     (bookingPeriod.periodFrom());
                toDateField.value                       (bookingPeriod.periodTo());

                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the input dialog caption and changes the dimension focus dialog field to appear as lookup.
    /// </summary>
    public void postBuild()
    {
        fiscalEstablishmentIdField = this.bindInfo().getDialogField(this.dataContractObject(), methodstr(FBincomingOutgoingBookContract_BR, parmFiscalEstablishmentId));
        fiscalEstablishmentIdField.lookupButton(2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides this method in order to register the dialog field methods to capture events.
    /// </summary>
    public void postRun()
    {
        Dialog dialogLocal = this.dialog();

        super();

        // This method should be called in order to handle events on dialogs.
        dialogLocal.dialogForm().formRun().controlMethodOverload(false);

        fiscalEstablishmentIdField       = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(FBincomingOutgoingBookContract_BR, parmFiscalEstablishmentId));
        fiscalEstablishmentDataAreaField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(FBincomingOutgoingBookContract_BR, parmFiscalEstablishmentDataArea));
        fromDateField                    = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(FBincomingOutgoingBookContract_BR, parmFromDate));
        toDateField                      = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(FBincomingOutgoingBookContract_BR, parmToDate));

        fiscalEstablishmentIdField.registerOverrideMethod(methodStr(FormStringControl, lookup), methodStr(FBIncomingOutgoingBookUIBuilder_BR, fiscalEstablishmentLookup), this);
        fiscalEstablishmentIdField.registerOverrideMethod(methodStr(FormStringControl, modified), methodStr(FBIncomingOutgoingBookUIBuilder_BR, fiscalEstablishmentModified), this);
        FiscalEstablishmentIdField.label("@GLS220103");

        fiscalEstablishmentDataAreaField.allowEdit(false);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>