<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgSetOpeningFlexBalance</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    When run, this class sets the opening flex balance on an employee.
/// </summary>
/// <remarks>
///    The class must be called with a <see cref="T:JmgEmployee" /> record.
/// </remarks>
class JmgSetOpeningFlexBalance extends RunBase
{
    JmgSeconds          openingBalance;
    NoYes               recalculateFlexBalance;
    JmgWorkerRecId      jmgWorkerRecId;
    DialogField         dfOpeningBalance;
    DialogField         dfRecalculateFlexBalance;

    #DEFINE.CurrentVersion(2)

    #LOCALMACRO.CurrentList
        openingBalance,
        recalculateFlexBalance,
        jmgWorkerRecId
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods described by the <see cref="T:RunBaseDialogable" />
    ///    interface.
    /// </summary>
    /// <param name="dialog">
    ///    An already initialized dialog can be passed.
    /// </param>
    /// <param name="forceOnClient">
    ///    Specifies if the dialog must be instantiated on the client.
    /// </param>
    /// <returns>
    ///    The class that contains the methods described by the <see cref="T:RunBaseDialogable" /> interface.
    /// </returns>
    /// <remarks>
    ///    The <c>JmgSetOpeningFlexBalance</c> class adds an Opening balance field and a Recalculate flex
    ///    balance field to the dialog.
    /// </remarks>
    public Object dialog(DialogRunbase dialog = null, boolean forceOnClient = false)
    {
        Dialog ret;

        ret = this.dialogInternal(dialog, forceOnClient);

        ret.caption("@SYS39858");

        dfOpeningBalance            = ret.addField(extendedtypestr(JmgLabelOpeningFlexBalance));
        dfRecalculateFlexBalance    = ret.addField(enumstr(NoYes), "@SYS38534");

        dfOpeningBalance.value(JmgProfileSeconds::formattedSeconds(openingBalance, JmgSecondPresentationEnum::Centitime));
        dfRecalculateFlexBalance.value(recalculateFlexBalance);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS39858";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves entered values for the <c>openingBalance</c> and <c>recalculateFlexBalance</c> variables
    ///    defined in the <c>JmgSetOpeningFlexBalance.classDeclaration</c> method.
    /// </summary>
    /// <returns>
    ///    A Boolean value.
    /// </returns>
    /// <remarks>
    ///    This method is called after the dialog is closed. It must assign the dialog values to the internal
    ///    variables.When inheriting from this method remember always to call <c>super</c>().
    /// </remarks>
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        openingBalance          = JmgProfileSeconds::unFormattedSeconds(dfOpeningBalance.value(), JmgSecondPresentationEnum::Centitime);
        recalculateFlexBalance  = dfRecalculateFlexBalance.value();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJmgPayRateRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the JmgWorkerRecId.
    /// </summary>
    /// <param name="_jmgWorkerRecId">
    /// The JmgWorkerRecId.
    /// </param>
    private void setJmgPayRateRecId(JmgWorkerRecId _jmgWorkerRecId)
    {
        jmgWorkerRecId = _jmgWorkerRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>JmgSetOpeningFlexBalance</c> class
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>JmgSetOpeningFlexBalance</c> class.
    /// </returns>
    public static JmgSetOpeningFlexBalance construct()
    {
        return new JmgSetOpeningFlexBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        container ret;
        ret = [#CurrentVersion, #CurrentList];

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the <see cref="T:JmgEmployee" /> record with the entered flex balance.
    /// </summary>
    /// <remarks>
    ///    If indicated by the user, the flex balance for the employee is recalculated.
    /// </remarks>
    public void run()
    {
        super();

        ttsbegin;
        JmgEmployee jmgEmployee = JmgEmployee::find(jmgWorkerRecId, true);
        jmgEmployee.OpeningFlexBalanceSeconds = openingBalance;
        jmgEmployee.update();

        if (recalculateFlexBalance == NoYes::Yes)
        {
            JmgFlex::sumEmployee(jmgEmployee);
        }
        ttscommit;

        if (FormDataUtil::getFormDataSource(jmgEmployee))
        {
            FormDataUtil::getFormDataSource(jmgEmployee).reread();
            FormDataUtil::getFormDataSource(jmgEmployee).refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        boolean ret;
        int     version = conpeek(packedClass, 1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = packedClass;
                ret = true;
                break;
            default:
                ret = false;
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        JmgEmployee                 jmgEmployee;
        HcmWorker                   hcmWorker;
        switch (_args.dataset())
        {
            case tablenum(JmgEmployee):
                jmgEmployee = _args.record();
                break;
            case tablenum(HcmWorker):
                hcmWorker   = _args.record();
                jmgEmployee = JmgEmployee::find(hcmWorker.RecId);
                if (!jmgEmployee)
                {
                    throw error(strfmt("@SYS38368", hcmWorker.PersonnelNumber));
                }
                break;
            default:
                throw error(Error::missingRecord(classstr(JmgSetOpeningFlexBalance)));
        }

        JmgSetOpeningFlexBalance    jmgSetOpeningFlexBalance = JmgSetOpeningFlexBalance::construct();
        jmgSetOpeningFlexBalance.getLast();
        jmgSetOpeningFlexBalance.setJmgPayRateRecId(jmgEmployee.Worker);

        if (jmgSetOpeningFlexBalance.prompt())
        {
            jmgSetOpeningFlexBalance.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>