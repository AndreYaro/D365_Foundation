<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SettlementWriteOffCustQueryGenerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>SettlementWriteOffCustQueryGenerator</c> generates the customer query for settlement write off.
/// </summary>
/// <remarks>
/// The query generated must obey settlement priority when that feature is active.
/// </remarks>
[ExportAttribute(identifierStr(Dynamics.AX.Application.SettlementWriteOffQueryGenerator)),
    ExportMetadata(enumStr(ModuleCustVend), enumLiteralStr(ModuleCustVend, Cust))]
internal final class SettlementWriteOffCustQueryGenerator extends SettlementWriteOffQueryGenerator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCustVendTransOpenDatasource</Name>
				<Source><![CDATA[
    internal protected QueryBuildDataSource addCustVendTransOpenDatasource(QueryBuildDataSource _specTransDS)
    {
        QueryBuildDataSource custTransOpenDS = _specTransDS.addDataSource(tableNum(CustTransOpen));
        custTransOpenDS.addLink(fieldNum(SpecTrans, RefCompany), fieldNum(CustTransOpen, DataAreaId));
        custTransOpenDS.addLink(fieldNum(SpecTrans, RefTableId), fieldNum(CustTransOpen, TableId));
        custTransOpenDS.addLink(fieldNum(SpecTrans, RefRecId), fieldNum(CustTransOpen, RecId));

        return custTransOpenDS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createMatchSettleOrderClause</Name>
				<Source><![CDATA[
    internal protected void createMatchSettleOrderClause(Query _matchQuery)
    {
        if (this.isSettlementPriorityActive())
        {
            this.addDataSourcesForSettlementPriority(_matchQuery);

            CustSettlementPriority custSettlementPriority;
            CustSettlementPriorityProcessingQueryRangeGenerator queryRangeGenerator = CustSettlementPriorityProcessingQueryRangeGenerator::construct();

            while select Attribute, Direction from custSettlementPriority
                order by Priority desc
                where custSettlementPriority.Enabled == NoYes::Yes
            {
                queryRangeGenerator.updateQueryFieldSortOrderForCustSettlementPriority(_matchQuery, custSettlementPriority);
            }
        }
        else
        {
            this.createMatchSettleOrderClauseDefault(_matchQuery.dataSourceTable(tableNum(CustTransOpen)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>restrictMatchQueryToCreditOrDebitBalances</Name>
				<Source><![CDATA[
    internal protected void restrictMatchQueryToCreditOrDebitBalances(Query _matchQuery)
    {
        str BalanceGreaterThanZeroRange = strFmt('((%1 > 0))', fieldStr(SpecTrans, Balance01));

        QueryBuildDataSource specTransDS = _matchQuery.dataSourceTable(tableNum(SpecTrans));
        specTransDS.addRange(fieldNum(SpecTrans, Balance01)).value(BalanceGreaterThanZeroRange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>restrictSpecTransToPayments</Name>
				<Source><![CDATA[
    internal protected void restrictSpecTransToPayments(Query _query)
    {
        str SpecTransPaymentsRange = strFmt('((%1 < 0))', fieldStr(SpecTrans, Balance01));

        QueryBuildDataSource specTransDS = _query.dataSourceTable(tableNum(SpecTrans));
        specTransDS.addRange(fieldNum(SpecTrans, Balance01)).value(SpecTransPaymentsRange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSettlementPriorityActive</Name>
				<Source><![CDATA[
    private boolean isSettlementPriorityActive()
    {
        return CustParameters::find().UseSettlementPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createMatchSettleOrderClauseDefault</Name>
				<Source><![CDATA[
    private void createMatchSettleOrderClauseDefault(QueryBuildDataSource _custVendTransOpenDS)
    {
        _custVendTransOpenDS.addOrderByField(fieldNum(CustTransOpen, CashDiscDate));
        _custVendTransOpenDS.addOrderByField(fieldNum(CustTransOpen, DueDate));
        _custVendTransOpenDS.addOrderByField(fieldNum(CustTransOpen, RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDataSourcesForSettlementPriority</Name>
				<Source><![CDATA[
    private void addDataSourcesForSettlementPriority(Query _matchQuery)
    {
        QueryBuildDataSource custTransOpenDS = _matchQuery.dataSourceTable(tableNum(CustTransOpen));

        QueryBuildDataSource custTransDS = custTransOpenDS.addDataSource(tableNum(CustTrans));
        custTransDS.addLink(fieldNum(CustTransOpen, RefRecId), fieldNum(CustTrans, RecId), custTransOpenDS.name());
        custTransDS.joinMode(JoinMode::InnerJoin);

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            QueryBuildDataSource custBillingClassificationDS = custTransDS.addDataSource(tableNum(CustBillingClassification));
            custBillingClassificationDS.addLink(fieldNum(CustTrans, CustBillingClassification), fieldNum(CustBillingClassification, RecId), custTransDS.name());
            custBillingClassificationDS.joinMode(JoinMode::OuterJoin);
            custBillingClassificationDS.fetchMode(QueryFetchMode::One2One);
        }

        QueryBuildDataSource custLedgerTransTypeMappingDS = custTransDS.addDataSource(tableNum(CustLedgerTransTypeMapping));
        custLedgerTransTypeMappingDS.addLink(fieldNum(CustTrans, TransType), fieldNum(CustLedgerTransTypeMapping, LedgerTransType), custTransDS.name());
        custLedgerTransTypeMappingDS.joinMode(JoinMode::OuterJoin);
        custLedgerTransTypeMappingDS.fetchMode(QueryFetchMode::One2One);

        QueryBuildDataSource custSettlementTransactionPriorityDS = custLedgerTransTypeMappingDS.addDataSource(tableNum(CustSettlementTransactionPriority));
        custSettlementTransactionPriorityDS.addLink(fieldNum(CustLedgerTransTypeMapping, CustSettleTransType), fieldNum(CustSettlementTransactionPriority, TransactionType), custLedgerTransTypeMappingDS.name());
        custSettlementTransactionPriorityDS.joinMode(JoinMode::OuterJoin);
        custSettlementTransactionPriorityDS.addRange(fieldNum(CustSettlementTransactionPriority, Company)).value(queryValue(curExt()));
        custSettlementTransactionPriorityDS.fetchMode(QueryFetchMode::One2One);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new ()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>