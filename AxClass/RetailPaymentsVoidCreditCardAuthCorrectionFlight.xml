<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPaymentsVoidCreditCardAuthCorrectionFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When invoicing or posting packing slip for a sales order, the credit card authorization paid for the sales order may already expire.
/// When this happens, the expired authorization will be voided and a new authorization will be generated.
/// However, due to a bug in the code, the original authorization that has been voided is not marked as "void" sometimes.
/// This flight is to correct the code so that the original authorization will be mared as "void" after it's voided.
/// </summary>
internal final class RetailPaymentsVoidCreditCardAuthCorrectionFlight extends Flight
{
    private static RetailPaymentsVoidCreditCardAuthCorrectionFlight instance = new RetailPaymentsVoidCreditCardAuthCorrectionFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static RetailPaymentsVoidCreditCardAuthCorrectionFlight instance()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>