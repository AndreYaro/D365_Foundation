<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSControlLPAdjustIn</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSControlLPAdjustIn</c> class is responsible for handling the licensePlateId values
/// during adjustment in process.
/// </summary>
#WHSRF
[WhsControlFactory(#LPAdjustIn)]
public class WHSControlLPAdjustIn extends WhsControlLicensePlateId
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    public boolean process()
    {
        super();

        WMSLocation location = WMSLocation::find(pass.lookupStr(#WMSLocationId),
                                                pass.lookupStr(#InventLocationId));

        WHSLicensePlateId licensePlateId = this.parmData();

        if (!WHSLicensePlate::exist(licensePlateId))
        {
            if (!controlData.validateLicensePlateQty(licensePlateId) || WMSLocation::exist(licensePlateId, pass.lookupStr(#InventLocationId)))
            {
                return this.fail("@WAX1168");
            }
        }

        if (WHSLicensePlate::isParentLicensePlate(licensePlateId))
        {
            return this.fail("@WAX3934");
        }

        if (!controlData.validateLicensePlateInLocation(licensePlateId, true))
        {
            if (!controlData.validateLicensePlateQty(licensePlateId))
            {
                return this.fail("@WAX1168");
            }
        }
        else
        {
            pass.parmLicensePlateId(pass.lookupStr(#LicensePlateId));
            pass.parmItemId(pass.lookupStr(#ItemId));
            pass.insert(#ContainerType, WHSLicensePlate::find(pass.parmLicensePlateId()).ContainerTypeCode);
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>