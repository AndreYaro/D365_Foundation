<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRMarginAlertInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRMarginAlertInstrumentationActivities</c> class provides activities for margin alert instrumentation logging.
/// </summary>
internal final class MCRMarginAlertInstrumentationActivities
{
    private const str ActivityNamePrefix = 'MarginAlert';
    private const str CalcMarginActivity = 'CalcMargin';
    private const str CalcCostPricePcsActivity = 'CalcCostPricePcs';
    private const str CalcEstimatedSalesPriceActivity = 'CalcEstimatedSalesPrice';
    private const str CalcExtendedUnitDiscountActivity = 'CalcExtendedUnitDiscount';
    private const str CalcExtendedUnitPriceActivity = 'CalcExtendedUnitPrice';
    private const str CalcTotalBillbackAmountActivity = 'CalcTotalBillbackAmount';
    private const str CalcTotalBrokerAmountActivity = 'CalcTotalBrokerAmount';
    private const str CalcTotalPdsRebateAmountActivity = 'CalcTotalPdsRebateAmount';
    private const str CalcTotalRoyaltyAmountActivity = 'CalcTotalRoyaltyAmount';

    private MCRMarginInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(MCRMarginInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static MCRMarginAlertInstrumentationActivities newFromLogger(MCRMarginInstrumentationLogger _logger)
    {
        return new MCRMarginAlertInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return logger.activityContext(logger.activity(strFmt('%1.%2', ActivityNamePrefix, _activityName)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcMargin</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcMargin()
    {
        return this.activityContext(CalcMarginActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcCostPricePcs</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcCostPricePcs()
    {
        return this.activityContext(CalcCostPricePcsActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcEstimatedSalesPrice</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcEstimatedSalesPrice()
    {
        return this.activityContext(CalcEstimatedSalesPriceActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcExtendedUnitDiscount</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcExtendedUnitDiscount()
    {
        return this.activityContext(CalcExtendedUnitDiscountActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcExtendedUnitPrice</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcExtendedUnitPrice()
    {
        return this.activityContext(CalcExtendedUnitPriceActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotalBillbackAmount</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcTotalBillbackAmount()
    {
        return this.activityContext(CalcTotalBillbackAmountActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotalBrokerAmount</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcTotalBrokerAmount()
    {
        return this.activityContext(CalcTotalBrokerAmountActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotalPdsRebateAmount</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcTotalPdsRebateAmount()
    {
        return this.activityContext(CalcTotalPdsRebateAmountActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotalRoyaltyAmount</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcTotalRoyaltyAmount()
    {
        return this.activityContext(CalcTotalRoyaltyAmountActivity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>