<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCatchWeightTelemetryWorkLine_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Performs specific warehouse management catch weight telemetry logging.
/// </summary>
[ExtensionOf(tableStr(WHSWorkLine))]
public final class WHSCatchWeightTelemetryWorkLine_Extension
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cancelLineMultiPick</Name>
				<Source><![CDATA[
    protected static void cancelLineMultiPick(
        ItemId              _itemId,
        Qty                 _inventQty,
        boolean             _decrementLoadLine,
        WHSWorkLine         _cancelWorkLine,
        UnitOfMeasureSymbol _inventUnitId,
        WHSWorkLine         _firstPutLine,
        boolean             _decrementLoadLineWorkCreatedQty)
    {
        WHSCatchWeightTelemetryLogger::logExpectedCatchWeightUnit(funcName(), _itemId, _inventUnitId);

        next cancelLineMultiPick(_itemId, _inventQty, _decrementLoadLine, _cancelWorkLine, _inventUnitId, _firstPutLine, _decrementLoadLineWorkCreatedQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cancelLinePartial</Name>
				<Source><![CDATA[
    protected static void cancelLinePartial(
        WHSWorkLine         _cancelWorkLine,
        ItemId              _itemId,
        boolean             _unReserved,
        Qty                 _inventQty,
        boolean             _decrementLoadLine,
        UnitOfMeasureSymbol _inventUnitId,
        WHSWorkLine         _firstPutLine,
        boolean             _canUpdateLineStatus)
    {
        WHSCatchWeightTelemetryLogger::logExpectedCatchWeightUnit(funcName(), _itemId, _inventUnitId);

        next cancelLinePartial(_cancelWorkLine, _itemId, _unReserved, _inventQty, _decrementLoadLine, _inventUnitId, _firstPutLine, _canUpdateLineStatus);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>