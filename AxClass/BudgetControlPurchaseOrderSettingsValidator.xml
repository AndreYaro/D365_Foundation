<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlPurchaseOrderSettingsValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BudgetControlPurchaseOrderSettingsValidator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canUpdatedAccountingDateAffectNextYearBudgetSource</Name>
				<Source><![CDATA[
    internal static boolean canUpdatedAccountingDateAffectNextYearBudgetSource(AccountingDate _accountingDate, SelectableDataArea _dataArea)
    {
        // If there are no more open periods in the current fiscal year,
        // source document framework will move the accounting date to a new fiscal year.
        // If budget control is enabled, do not allow the PO to be changed until it has been move to the new fiscal year.
        Ledger ledger = Ledger::findByLegalEntity(CompanyInfo::findDataArea(_dataArea).RecId);

        return Ledger::isLedgerBudgetControlEnabled(ledger.RecId)
                && BudgetControlConfiguration::isSourceIntegratorEnabled(ledger.RecId, BudgetControlSourceIntegrator::PurchaseOrder)
                && LedgerFiscalCalendar::findFirstOpenPeriodInYear(ledger.FiscalCalendar, _accountingDate).RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUpdatedAccountingDateAffectBudget</Name>
				<Source><![CDATA[
    internal static boolean canUpdatedAccountingDateAffectBudget(PurchTable _purchTable)
    {
        return _purchTable
               && BudgetSourceCollectionIntegrator::isDocumentBudgetTracked(_purchTable)
               && BudgetControlPurchaseOrderSettingsValidator::canUpdatedAccountingDateAffectNextYearBudgetSource(_purchTable.AccountingDate, _purchTable.DataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUpdatedAccountingDateAffectBudgetForDraftPO</Name>
				<Source><![CDATA[
    internal static boolean canUpdatedAccountingDateAffectBudgetForDraftPO(RefRecId _sourceDocumentHeaderRecId, AccountingDate _accountingDate, SelectableDataArea _dataArea)
    {
        return BudgetControlPurchaseOrderSettingsValidator::canUpdatedAccountingDateAffectNextYearBudgetSource(_accountingDate, _dataArea)
            && BudgetControlPurchaseOrderSettingsValidator::isPurchaseOrderLedgerDimensionBudgetControlled(_sourceDocumentHeaderRecId, _dataArea);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPurchaseOrderLedgerDimensionBudgetControlled</Name>
				<Source><![CDATA[
    private static boolean isPurchaseOrderLedgerDimensionBudgetControlled(SourceDocumentHeaderRecId _sourceDocumentHeaderRecId, SelectableDataArea _dataArea)
    {
        AccountingDistribution accountingDistribution;
        Ledger ledger = Ledger::findByLegalEntity(CompanyInfo::findDataArea(_dataArea).RecId);

        while select LedgerDimension from accountingDistribution
            group by LedgerDimension
            where _sourceDocumentHeaderRecId == accountingDistribution.SourceDocumentHeader
        {
            if (BudgetControlLedgerDimensionHelper::isLedgerDimensionEnabledForBudgetControl(Ledger::current(), accountingDistribution.LedgerDimension))
            {
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>