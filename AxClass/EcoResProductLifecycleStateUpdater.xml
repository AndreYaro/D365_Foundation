<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductLifecycleStateUpdater</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class for handling updates to product lifecycle states.
/// </summary>
public class EcoResProductLifecycleStateUpdater
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateStateOnVariantsInSandbox</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the product lifecycle state on released product variants using SandBox. 
    /// </summary>
    /// <param name = "_itemId">The item to update for.</param>
    /// <param name = "_fromStateId">The state to update from.</param>
    /// <param name = "_toStateId">The state to update to.</param>
    public static void updateStateOnVariantsInSandbox(ItemId _itemId, EcoResProductLifecycleStateId _fromStateId, EcoResProductLifecycleStateId _toStateId)
    {
        SysOperationSandbox::callStaticMethod(classnum(EcoResProductLifecycleStateUpdater), staticMethodStr(EcoResProductLifecycleStateUpdater, updateStateOnVariants), [_itemId, _fromStateId, _toStateId], "@SCM:ProductLifecycleStateSandboxMessage");
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStateOnVariants</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the product lifecycle state on released product variants.
    /// </summary>
    /// <param name = "_callerParams">A container with the parameters, that should be in the form of [The itemId to update for, The state to update from, The state to update to].</param>
    public static void updateStateOnVariants(container _callerParams)
    {
        if (conlen(_callerParams) != 3)
        {
            throw error(Error::wrongUseOfFunction(staticMethodStr(EcoResProductLifecycleStateUpdater, updateStateOnVariants)));
        }
        
        ItemId itemId = conPeek(_callerParams, 1);
        EcoResProductLifecycleStateId fromStateId = conPeek(_callerParams, 2);
        EcoResProductLifecycleStateId toStateId = conPeek(_callerParams, 3);        
        
        InventDimCombination inventDimCombination;

        ttsbegin;

        update_recordset inventDimCombination
            setting ProductLifecycleStateId = toStateId
            where inventDimCombination.ItemId == itemId
               && inventDimCombination.ProductLifecycleStateId == fromStateId;

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>