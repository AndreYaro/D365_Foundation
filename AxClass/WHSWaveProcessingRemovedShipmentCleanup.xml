<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveProcessingRemovedShipmentCleanup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWaveProcessingRemovedShipmentCleanup</c> class is used to run batch job for deleting wave processing removed shipment table records.
/// </summary>
internal final class WHSWaveProcessingRemovedShipmentCleanup extends SysOperationServiceController implements BatchRetryable
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSWaveProcessingRemovedShipmentCleanup controller = WHSWaveProcessingRemovedShipmentCleanup::construct();
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSWaveProcessingRemovedShipmentCleanup construct(SysOperationExecutionMode _mode = SysOperationExecutionMode::Synchronous)
    {
        WHSWaveProcessingRemovedShipmentCleanup controller =
            new WHSWaveProcessingRemovedShipmentCleanup(classStr(WHSWaveProcessingRemovedShipmentCleanupService),
                                                     methodStr(WHSWaveProcessingRemovedShipmentCleanupService, execute),
                                                     _mode);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return "@WAX:WHSWaveProcessingRemovedShipmentCleanup";
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDialogCaption</Name>
				<Source><![CDATA[
    public LabelType parmDialogCaption(LabelType _dialogCaption = dialogCaption)
    {
        return this.caption();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>