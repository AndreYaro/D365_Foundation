<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CurrencyExchangeHelper_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CurrencyExchangeHelper_W</c> class contains the logic of currency conversion for particular cases of amount calculation.
/// </summary>
internal class CurrencyExchangeHelper_W
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mstAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Wraps standard method in order to make it callable from ER.
    /// </summary>
    /// <param name = "_amountCur">The amount to convert.</param>
    /// <param name = "_currencyCode">The currency to convert from.</param>
    /// <param name = "_exchRateDate">The date to pick exchange rate for.</param>
    /// <param name = "_exchRate">The exact exchange rate.</param>
    /// <param name = "_rounding">The request for value rounding.</param>
    /// <param name = "_exchRateSecond">Secondary exchange rate.</param>
    /// <returns>The value of transaction amount in master currency.</returns>
    public static AmountMST mstAmount(
        AmountCur _amountCur,
        CurrencyCode _currencyCode,
        TransDate _exchRateDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        ExchRate _exchRate = 0,
        boolean _rounding = false,
        ExchRate _exchRateSecond = 0)
    {
        return CurrencyExchangeHelper::mstAmount(
            _amountCur,
            _currencyCode,
            _exchRateDate,
            UnknownNoYes::Unknown,
            _exchRate,
            _exchRateSecond,
            _rounding);

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>