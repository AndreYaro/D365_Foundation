<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesFormletterServiceBatchTaskManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesFormletterServiceBatchTaskManager extends FormletterServiceBatchTaskManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static SalesFormletterServiceBatchTaskManager construct()
    {
        return new SalesFormletterServiceBatchTaskManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParm</Name>
				<Source><![CDATA[
    public static SalesFormletterServiceBatchTaskManager newFromParm(DocumentStatus      _documentStatus,
                                                                     FormletterType      _formletterType)
    {
        if (_formletterType == FormletterType::Sales
            && (_documentStatus == DocumentStatus::Confirmation
                || _documentStatus == DocumentStatus::PickingList
                || _documentStatus == DocumentStatus::PackingSlip
                || _documentStatus == DocumentStatus::Invoice))
        {
            return SalesFormletterServiceBatchTaskManager::construct();
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSumUpLines</Name>
				<Source><![CDATA[
    internal boolean canSumUpLines(QueryRun _lateSelectionQueryRun)
    {
        return _lateSelectionQueryRun.query().dataSourceTable(tablenum(SalesTable))
            && _lateSelectionQueryRun.query().dataSourceTable(tablenum(SalesLine))
            && _lateSelectionQueryRun.query().dataSourceTable(tablenum(SalesLine)).joinMode() == JoinMode::InnerJoin
            && _lateSelectionQueryRun.query().dataSourceTable(tablenum(SalesLine)).parentDataSource() == _lateSelectionQueryRun.query().dataSourceTable(tablenum(SalesTable));       
    }

]]></Source>
			</Method>
			<Method>
				<Name>collectParmTableRecordAndParmLineCountMaps</Name>
				<Source><![CDATA[
    internal Map collectParmTableRecordAndParmLineCountMaps(ParmId _parmId)
    {
        Map parmTableRecordMap = new Map(Types::Int64, Types::Record);
        Map parmLineRecordCountMap = new Map(Types::Int64, Types::Integer);
        SalesParmTable salesParmTable;
        SalesParmTable previousSaleParmTable;
        SalesParmLine  salesParmLine;
        Counter salesParmLineCount;
        boolean firstIteration = true;

        while select salesParmTable
            order by salesParmTable.SalesId
            where salesParmTable.ParmId == _parmId
               && salesParmTable.ParmJobStatus == ParmJobStatus::Waiting
        join RecId from salesParmLine
            where salesParmLine.ParmId == salesParmTable.ParmId
               && salesParmLine.TableRefId == salesParmTable.tableRefId
        {
            if (firstIteration)
            {
                previousSaleParmTable.data(salesParmTable);
                firstIteration = false;
            }
            
            if (previousSaleParmTable.RecId != salesParmTable.RecId)
            {
                parmTableRecordMap.insert(parmTableRecordMap.elements(), previousSaleParmTable);
                parmLineRecordCountMap.insert(previousSaleParmTable.RecId, salesParmLineCount);
                previousSaleParmTable.data(salesParmTable);
                salesParmLineCount = 0;
            }
            
            salesParmLineCount++;
        }

        parmTableRecordMap.insert(parmTableRecordMap.elements(), previousSaleParmTable);
        parmLineRecordCountMap.insert(previousSaleParmTable.RecId, salesParmLineCount);

        Map tablesMap = new Map(Types::String, Types::Class);
        tablesMap.insert(tableStr(FormletterParmTable), parmTableRecordMap);
        tablesMap.insert(tableStr(FormletterParmLine), parmLineRecordCountMap);
        return tablesMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>