<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalDocDateWithTimeZoneHelper_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Calculates the generated fiscal document date and time
///     with timezone in the moment that the fiscal document is posted.
/// </summary>
public class FiscalDocDateWithTimeZoneHelper_BR
{
    FiscalDocumentDateTime_BR        fiscalDocumentDateTime;
    FiscalDocumentDateTimeOffset_BR  fiscalDocumentDateTimeOffset;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateDateTimeAndOffset</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculate the fiscal document date time and date time offset from timezone based on
    ///     the fiscal document informed date.
    /// </summary>
    /// <param name="_fiscalDocumentDate">
    ///     The fiscal document posting date.
    /// </param>
    /// <param name="_fiscalDocumentFiscalEstablishmentId">
    ///     The fiscal document fiscal establishment id.
    /// </param>
    /// <remarks>
    ///     The calculated time will be the current time when this method is called if the document date is equals to today,
    ///     or the last second (23:59:59) from the document date if it is a past date.
    ///
    ///     The datetime offset will be the difference in seconds between the fiscal document date time in UTC and the fiscal document date time
    ///     in the fiscal establishment timezone.
    /// </remarks>
    protected void calculateDateTimeAndOffset(FiscalDocumentDate_BR _fiscalDocumentDate, FiscalEstablishmentId_BR _fiscalDocumentFiscalEstablishmentId)
    {
        TimeZone                          fiscalEstablishmentTimeZone;
        UtcDateTime                       fiscalDocDateWithTimeZone;
        UtcDateTime                       fiscalDocDateWithoutTimeZone;

        fiscalEstablishmentTimeZone = FiscalEstablishment_BR::findById(_fiscalDocumentFiscalEstablishmentId).getTimezone();

        fiscalDocumentDateTime       = DateTimeUtil::utcNow();

        fiscalDocDateWithTimeZone    = DateTimeUtil::applyTimeZoneOffset(fiscalDocumentDateTime, fiscalEstablishmentTimeZone);
        fiscalDocumentDateTimeOffset = DateTimeHelper_BR::getDateTimezoneOffset(fiscalDocumentDateTime, fiscalEstablishmentTimeZone);

        if (DateTimeUtil::date(fiscalDocDateWithTimeZone) > _fiscalDocumentDate)
        {
            fiscalDocumentDateTime = DateTimeHelper_BR::getDateTimeWhereTimeIsLastSecond(_fiscalDocumentDate, fiscalEstablishmentTimeZone);

            fiscalDocDateWithoutTimeZone = DateTimeHelper_BR::getDateTimeWhereTimeIsLastSecondInUTC(_fiscalDocumentDate);

            fiscalDocumentDateTimeOffset = DateTimeUtil::getDifference(fiscalDocDateWithoutTimeZone, fiscalDocumentDateTime);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalDocumentDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the fiscal document posting date and time in UTC time
    /// </summary>
    /// <returns>
    ///     A FiscalDocumentDateTime_BR with the document posting date and time
    /// </returns>
    public FiscalDocumentDateTime_BR getFiscalDocumentDateTime()
    {
        return fiscalDocumentDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalDocumentDateTimeOffset</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the offset between the fiscal document posting date and time in UTC timezone and in issuer's site timezone
    /// </summary>
    /// <returns>
    ///     A FiscalDocumentDateTimeOffset_BR with the offset in seconds
    /// </returns>
    /// <remarks>
    ///     Example: If fiscal document date time is 21:00 in UTC, and site timezone is -3h,
    ///     then the returned offset is -10800 seconds (that represents the 3 hours offset)
    /// </remarks>
    public FiscalDocumentDateTimeOffset_BR getFiscalDocumentDateTimeOffset()
    {
        return fiscalDocumentDateTimeOffset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromFiscalDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the datetime and timezone offset for the specified fiscal document.
    /// </summary>
    /// <param name="fiscalDocument">
    /// The fiscal document to have it's date and time calculated.
    /// </param>
    /// <returns>
    /// The instance of the class containing the calculated values.
    /// </returns>
    /// <remarks>
    /// The calculated datetime and offset will be avaiable by the
    /// getter methods of this class.
    /// </remarks>
    public static FiscalDocDateWithTimeZoneHelper_BR newFromFiscalDocument(FiscalDocument_BR fiscalDocument)
    {
        FiscalDocDateWithTimeZoneHelper_BR fiscalDocDateWithTimeZone_BR = new FiscalDocDateWithTimeZoneHelper_BR();

        fiscalDocDateWithTimeZone_BR.calculateDateTimeAndOffset(
                                            fiscalDocument.FiscalDocumentDate,
                                            fiscalDocument.FiscalEstablishment);

        return fiscalDocDateWithTimeZone_BR;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>