<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCImportNodeHandlerWithPath</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Represents a handler operating in a context of a particular attribute path.
/// </summary>
abstract class PCImportNodeHandlerWithPath extends PCImportModelNodeHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>componentContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the ID of the component from where the path should be built by the child handlers.
    /// </summary>
    /// <returns>
    /// The RecId of the component.
    /// </returns>
    abstract RefRecId componentContext()
    {
    }
]]></Source>
			</Method>
			<Method>
				<Name>lookupChild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Due to recursive definition of the attribute path part of the model, handlers
    /// operating in its context may be instantiated numerous times and thus the tree need to build itself
    /// up to the needed depth in runtime. The newly created instances have no children assigned,
    /// so they need to be created before the lookup.
    /// </summary>
    /// <param name="_nodeType">
    /// The string type of the XML node to be handled.
    /// </param>
    /// <returns>
    /// The newly created child handler.
    /// </returns>
    protected PCImportModelNodeHandler lookupChild(str _nodeType)
    {
        if (_nodeType == #SubComponent)
        {
            this.addChild(#SubComponent, PCImportAttrPathSubComponentHandler::construct());
        }

        if (_nodeType == #Attribute)
        {
            this.addChild(#Attribute, PCImportAttrPathAttributeHandler::construct());
        }

        return super(_nodeType);
    }
]]></Source>
			</Method>
			<Method>
				<Name>path</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the list of records representing the currently being imported attribute path.
    /// </summary>
    /// <returns>
    /// The list initialized by the <c>PCImportConstraintBindingHandler</c> up in the handler tree.
    /// </returns>
    public List path()
    {
        PCImportNodeHandlerWithPath parent = this.parent();

        return parent.path();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>