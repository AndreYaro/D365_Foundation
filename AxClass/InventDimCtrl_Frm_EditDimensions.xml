<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimCtrl_Frm_EditDimensions</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventDimCtrl_Frm_EditDimensions extends InventDimCtrl_Frm_Editable
{
    InventTrans         inventTransReceipt;
    InventTrans         inventTransIssue;

    InventModelType     inventModelType;
    InventParameters    inventParameters;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formActiveSetup</Name>
				<Source><![CDATA[
        public void formActiveSetup(
        InventDimGroupSetup         _inventDimGroupSetup = null,
        InventTrans                 _inventTransReceipt = null,
        InventTrans                 _inventTransIssue   = null)
    {
        inventTransReceipt  = _inventTransReceipt;
        inventTransIssue    = _inventTransIssue;

        if (inventTransReceipt.ItemId)
        {
            inventModelType = InventTable::modelGroupByItemId(inventTransReceipt.ItemId).inventModelType();
        }
        else
        {
            if (inventTransIssue.ItemId)
            {
                inventModelType = InventTable::modelGroupByItemId(inventTransIssue.ItemId).inventModelType();
            }
            else
            {
                inventModelType = null;
            }
        }

        super(_inventDimGroupSetup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustEnableControl</Name>
				<Source><![CDATA[
        protected boolean mustEnableControl(InventDimFormControlInterface _fc, InventDimParm _dimParmEnabled = dimParmEnabled)
    {
        if (inventDimControls.datasourceName(_fc) == identifierStr(InventDimReceipt))
        {
            return super(_fc) && inventTransReceipt.canEditDimensions();
        }

        if (inventDimControls.datasourceName(_fc) == identifierStr(InventDimIssue))
        {
            return super(_fc) && inventTransIssue.canEditDimensions();
        }

        return super(_fc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustEnableField</Name>
				<Source><![CDATA[
    protected NoYes mustEnableField(
        fieldId         _dimFieldId,
        InventDimParm   _dimParmEnabled = dimParmEnabled)
    {
        if (!super(_dimFieldId))
        {
            return NoYes::No;
        }

        if (_dimFieldId == fieldnum(InventDim, InventSiteId) && inventParameters.MultiSiteDimensionLink == InventMultiSiteDimensionLink::Locked)
        {
            return NoYes::No;
        }

        InventDimGroupFieldSetup inventDimGroupFieldSetup = this.getFieldSetup(_dimFieldId);

        if (inventDimGroupFieldSetup.isFinancialInventoryEnabled() && inventModelType && inventModelType.stdCostBased())
        {
            return NoYes::No;
        }

        // <GEERU>
        if (_dimFieldId == fieldnum(InventDim, InventProfileId_RU))
        {
            return NoYes::No;
        }
        // </GEERU>

        return NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();

        inventParameters = InventParameters::find();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventDimCtrl_Frm_EditDimensions construct()
    {
        return new InventDimCtrl_Frm_EditDimensions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and initializes an instance of this class to be used in Forms.
    /// </summary>
    /// <param name="_formRun">
    ///    The Form where controls are maintained.
    /// </param>
    /// <returns>
    ///    An instance of this class to be used in a Form.
    /// </returns>
    public static InventDimCtrl_Frm_EditDimensions newFromForm(FormRun _formRun)
    {
        InventDimCtrl_Frm_EditDimensions    inventDimCtrl = InventDimCtrl_Frm_EditDimensions::construct();
        InventDimAxFormAdapter adapter = InventDimAxFormAdapter::newFromForm(_formRun);

        inventDimCtrl.parmCallingElement(adapter);
        inventDimCtrl.init();
        return inventDimCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
