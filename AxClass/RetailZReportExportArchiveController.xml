<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailZReportExportArchiveController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///   The <c>RetailZReportExportArchiveController</c> class is the controller class which is used
///   to export the Retail Z-Report archive file.
/// </summary>
internal final class RetailZReportExportArchiveController extends ERFormatMappingRunBaseController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static void main(Args _args)
    {
        if (!_args || _args.record().TableId != tableNum(RetailPosBatchTable))
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        RetailZReportExportArchiveController controller = RetailZReportExportArchiveController::constructFromRetailPosBatchTable(_args.record());

        controller.parmDialogCaption("@RetailXZReportsShiftTotals:RetailExportZReport");
        controller.parmShowDialog(true);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromRetailPosBatchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the class instance from the POS batch (shift) table record.
    /// </summary>
    /// <param name = "_posBatchTable">The pos batch table.</param>
    /// <returns>The class instance.</returns>
    [Hookable(false)]
    public static RetailZReportExportArchiveController constructFromRetailPosBatchTable(RetailPosBatchTable _posBatchTable)
    {
        RetailZReportExportArchiveController controller = new RetailZReportExportArchiveController(
            classStr(RetailZReportExportArchiveService),
            methodStr(RetailZReportExportArchiveService, run),
            SysOperationExecutionMode::Synchronous);

        RetailZReportExportArchiveContract contract = controller.getDataContractObject() as RetailZReportExportArchiveContract;

        contract.initFromRetailPosBatchTable(_posBatchTable);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>