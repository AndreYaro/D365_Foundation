<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SuppItemCreate_Sales</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SuppItemCreate_Sales extends SuppItemCreate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS58282";
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAllowCreate</Name>
				<Source><![CDATA[
    protected boolean checkAllowCreate()
    {
        SalesTable  salesTable = salesPurchTable;

        boolean ret = super();

        if (ret)
        {
            ret = salesTable.checkUpdate();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLine</Name>
				<Source><![CDATA[
    protected void createLine(TmpSuppItem _tmpSuppItem)
    {
        SalesLine newSalesLine;
        SalesLine baseSalesLine = SalesLine::findInventTransId(_tmpSuppItem.InventTransId);;
        
        this.initSalesLine(newSalesLine, _tmpSuppItem, baseSalesLine);

        newSalesLine.createLine(true,false,false,false,true,!_tmpSuppItem.SuppItemFree,newSalesLine.Reservation == ItemReservation::Automatic);
        SupplementarySalesLineRef::createSupplementarySalesLineRef(newSalesLine.RecId, baseSalesLine.RecId);
        
        this.updateSalesLine(newSalesLine, baseSalesLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>SalesLine</c> record to be created.
    /// </summary>
    /// <param name = "_salesLine">
    /// The <c>SalesLine</c> record to be initialized.
    /// </param>
    /// <param name = "_tmpSuppItem">
    /// The <c>TmpSuppItem</c> record to initialize from.
    /// </param>
    /// <param name = "_baseSalesLine">
    /// The base <c>SalesLine</c> record to initialize from.
    /// </param>
    protected void initSalesLine(SalesLine _salesLine, TmpSuppItem _tmpSuppItem, SalesLine _baseSalesLine)
    {
        InventDim inventDim;
        InventDim baseInventDim;
        LineNum   nextLineNumber;

        SalesLine_BR newSalesLine_BR;
        #ISOCountryRegionCodes

        baseInventDim = _baseSalesLine.inventDim();

        _salesLine.initFromSalesTable(salesPurchTable);
        inventDim = _salesLine.inventDim();

        #InventDimDevelop

        inventDim.InventLocationId  = baseInventDim.InventLocationId;
        inventDim.InventSiteId      = baseInventDim.InventSiteId;

        _salesLine.setInventDimIdFromInventDim(inventDim);

        _salesLine.initFromTmpSuppItem(_tmpSuppItem);

        // If the sales line is project-related, project category is mandatory.
        // If we were unable to find a category on the item or sales category, get the default from project parameters.
        if (_salesLine.ProjId && !_salesLine.ProjCategoryId)
        {
            _salesLine.ProjCategoryId = ProjParameters::find().ItemCategory;
        }

        if (_baseSalesLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries)
        {
            _salesLine.LineNum = this.getLastDeliveryLineNumber(_baseSalesLine.InventTransId);
            // we want supp items AFTER the last delivery line related to this commercial line
            // and before next line in the SO
            nextLineNumber                         = _salesLine.nextLineNum();
            if (nextLineNumber)
            {
                _salesLine.LineNum  += (nextLineNumber - _salesLine.LineNum) / 2;
            }
            else
            {
                _salesLine.LineNum  += 1.0;
            }
        }

        if (isCountryRegion_IN)
        {
            _salesLine.initFromSalesLine_IN(_baseSalesLine);
        }

        if (BrazilParameters::isEnabled())
        {
            newSalesLine_BR = _salesLine.salesLine_BR();
            newSalesLine_BR.cfopTable_BR = _baseSalesLine.salesLine_BR().cfopTable_BR;
            newSalesLine_BR.SuframaDiscount_BR = _baseSalesLine.salesLine_BR().SuframaDiscount_BR;
            newSalesLine_BR.DeliveryCFOPTable_BR = _baseSalesLine.salesLine_BR().DeliveryCFOPTable_BR;
            _salesLine.packSalesLine_BR(newSalesLine_BR);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the created <c>SalesLine</c> record.
    /// </summary>
    /// <param name = "_salesLine">
    /// The <c>SalesLine</c> record to be updated.
    /// </param>
    /// <param name = "_baseSalesLine">
    /// The base <c>SalesLine</c> record to initialize the date fields from.
    /// </param>
    protected void updateSalesLine(SalesLine _salesLine, SalesLine _baseSalesLine)
    {
        _salesLine.updateRetailDiscounts();

        // Intercompany may have changed the new sales line.
        _salesLine.reread();

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
        {
            TaxServiceTariff::insertTaxServiceTariffForNewParent(salesPurchTable.TableId, salesPurchTable.RecId, _salesLine.TableId, _salesLine.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastDeliveryLineNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the last delivery line for given commercial line and returns its line number.
    /// </summary>
    /// <param name="_orderLine">
    /// Commercial line's InventTransId.
    /// </param>
    /// <returns>
    /// Line number of the last delivery line for given commercial line.
    /// </returns>
    private LineNum getLastDeliveryLineNumber(InventTransId _orderLine)
    {
        SalesLine salesLine;
        SalesDeliverySchedule salesDeliverySchedule;

        select maxOf(LineNum)
            from salesLine
            exists join OrderLine, DeliveryLine from salesDeliverySchedule
            where salesDeliverySchedule.OrderLine == _orderLine
               && salesLine.InventTransId == salesDeliverySchedule.DeliveryLine;

        return salesLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SuppItemCreate_Sales construct()
    {
        return new SuppItemCreate_Sales();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>