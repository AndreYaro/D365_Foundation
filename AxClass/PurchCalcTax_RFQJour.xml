<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCalcTax_RFQJour</Name>
	<SourceCode>
		<Declaration><![CDATA[
[PurchCalcTaxFactoryAttribute(tableStr(VendRFQJour))]
class       PurchCalcTax_RFQJour
extends     PurchCalcTax_RFQ
{
    VendRFQJour         vendRFQJour;
    VendRFQTrans        vendRFQTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    CurrencyCode currencyCode()
    {
        return vendRFQJour.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchRFQLine</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void getPurchRFQLine()
    {
        PurchRFQLine rfqLine;
        purchRFQLineMap = rfqLine;
        select purchRFQLineMap where purchRFQLineMap.InventTransId == this.transTransId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCursor</Name>
				<Source><![CDATA[
    void  initCursor()
    {
        select nofetch forupdate vendRFQTrans
            where   vendRFQTrans.rfqId         == vendRFQJour.rfqId           &&
                    vendRFQTrans.InternalRFQId == vendRFQJour.InternalRFQId   &&
                    vendRFQTrans.rfqDate       == vendRFQJour.rfqDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxIncluded</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether tax is included in the item price for the purchase RFQ journal document.
    /// </summary>
    /// <returns>
    ///    true if tax is included in the item price; otherwise, false.
    /// </returns>
    public boolean isTaxIncluded()
    {
        return vendRFQJour.InclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupAmount</Name>
				<Source><![CDATA[
    MarkupAmount  markupAmount()
    {
        return markupTrans.CalculatedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupDefaultDimension</Name>
				<Source><![CDATA[
    DimensionDefault markupDefaultDimension()
    {
        if (purchRFQLineMap)
            return purchRFQLineMap.DefaultDimension;
        else
            return vendRFQJour.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void  new(VendRFQJour _vendRFQJour)
    {
        super(_vendRFQJour);

        vendRFQJour         = _vendRFQJour;
        purchRFQTableMap    = vendRFQJour.purchRFQTable();
        update              = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLine</Name>
				<Source><![CDATA[
    Common nextLine()
    {
        next vendRFQTrans;
        this.getPurchRFQLine();
        this.initCursorMarkupLine(vendRFQTrans.TableId, vendRFQTrans.RecId);
        return vendRFQTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTax</Name>
				<Source><![CDATA[
    void  setTax(TaxWriteCode   _taxWriteCode,
                 AmountCur      _amountCur)
    {
        vendRFQTrans.TaxWriteCode    = _taxWriteCode;
        vendRFQTrans.TaxAmount       = _amountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transItemId</Name>
				<Source><![CDATA[
    public ItemId transItemId()
    {
        return vendRFQTrans.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLineAmount</Name>
				<Source><![CDATA[
    AmountCur  transLineAmount()
    {
        return vendRFQTrans.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLineAmountInclTax</Name>
				<Source><![CDATA[
    AmountCur  transLineAmountInclTax()
    {
        return vendRFQTrans.lineAmountInclTax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transPurchUnit</Name>
				<Source><![CDATA[
    PurchUnit transPurchUnit()
    {
        return vendRFQTrans.PurchUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transQty</Name>
				<Source><![CDATA[
    PurchQty    transQty()
    {
        return vendRFQTrans.PurchQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxGroup</Name>
				<Source><![CDATA[
    TaxGroup transTaxGroup()
    {
        return vendRFQTrans.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxItemGroup</Name>
				<Source><![CDATA[
    TaxItemGroup transTaxItemGroup()
    {
        return vendRFQTrans.TaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTransId</Name>
				<Source><![CDATA[
    InventTransId transTransId()
    {
        return vendRFQTrans.InventTransId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>