<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimCtrl_InventPhysQtySumAdapter_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This <c>InventDimCtrl_InventPhysQtySumAdapter_CN</c> class is adapter of <c>InventDimCtrl</c> class for <c>classInventPhysQtySumFormDimCtrl_CN</c> class.
/// </summary>

class InventDimCtrl_InventPhysQtySumAdapter_CN extends InventDimCtrl_Frm
{
    InventPhysQtySumFormDimCtrl_CN inventDimCtrl;
    boolean useSave;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formSetControlsRightClick</Name>
				<Source><![CDATA[
    /// <summary>
    /// The event handler of the right click event.
    /// </summary>
    /// <param name="lockForm">
    /// Sets true if the form is locked.
    /// </param>
    /// <param name="resizeGrid">
    /// Sets true if the grid can be resized.
    /// </param>
    /// <param name="args">
    /// The arguments information.
    /// </param>
    void formSetControlsRightClick(
        boolean lockForm,
        boolean resizeGrid = false,
        Args    args = null)

    {
        super(lockForm,resizeGrid,args);
        callingElement.formObject().rightClickModifyQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes this class.
    /// </summary>
    public void init()
    {
        //default: enable save setup
        this.parmUseSave(true);
        super();
        inventDimCtrl = InventPhysQtySumFormDimCtrl_CN::newFromForm(callingElement.formObject());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUseSave</Name>
				<Source><![CDATA[
        public boolean parmUseSave(boolean _useSave = useSave)
    {
        useSave = _useSave;

        return useSave;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControls</Name>
				<Source><![CDATA[
        void updateControls()
    {
        inventDimCtrl.parmDimParmVisible(this.parmDimParmVisibleGrid());
        inventDimCtrl.updateControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSysLastValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Use sys last value.
    /// </summary>
    /// <returns>
    /// Returns true if the operation is successfully.
    /// </returns>
    boolean useSysLastValue()
    {
        return this.parmUseSave();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventDimCtrl_InventPhysQtySumAdapter_CN construct()
    {
        return new InventDimCtrl_InventPhysQtySumAdapter_CN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an <c>InventDimCtrl_InventPhysQtySumAdapter_CN</c> class instance for a form.
    /// </summary>
    /// <param name="_formRun">
    /// A form.
    /// </param>
    /// <returns>
    /// An InventDimCtrl_InventPhysQtySumAdapter_CN class instance for the form.
    /// </returns>

    public static InventDimCtrl_InventPhysQtySumAdapter_CN newFromForm(FormRun _formRun)
    {
        InventDimCtrl_InventPhysQtySumAdapter_CN inventDimCtrl_Frm = InventDimCtrl_InventPhysQtySumAdapter_CN::construct();
        InventDimAxFormAdapter adapter = InventDimAxFormAdapter::newFromForm(_formRun);

        inventDimCtrl_Frm.parmCallingElement(adapter);
        inventDimCtrl_Frm.init();
        return inventDimCtrl_Frm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>