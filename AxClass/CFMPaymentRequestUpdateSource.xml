<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestUpdateSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class updates payment request source when payment request is modified.
/// </summary>
public abstract class CFMPaymentRequestUpdateSource
{
    CFMPaymentRequestTable paymentRequestTable; 
    protected CFMPaymentRequestTable paymentRequestTableOriginal;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates instance of <c>CFMPaymentRequestUpdateSource</c> class.
    /// </summary>
    /// <param name="_paymentRequestTable">
    /// The payment request.
    /// </param>
    /// <returns>
    /// Instance of <c>CFMPaymentRequestUpdateSource</c> class.
    /// </returns>
    public static CFMPaymentRequestUpdateSource construct(CFMPaymentRequestTable _paymentRequestTable)
    {
        CFMPaymentRequestSourceTypeAttribute extensionAttribute = new CFMPaymentRequestSourceTypeAttribute(_paymentRequestTable.SourceType);

        CFMPaymentRequestUpdateSource paymentRequestUpdateSource = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(CFMPaymentRequestUpdateSource), extensionAttribute);

        if (paymentRequestUpdateSource)
        {
            paymentRequestUpdateSource.initialize(_paymentRequestTable);
        }

        return paymentRequestUpdateSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSourceUsingOriginalRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates payment request source using the original record of payment request.
    /// </summary>
    /// <param name="_paymentRequestTable">
    /// The payment request.
    /// </param>
    /// <param name="_paymentRequestTableOriginal">
    /// The payment request original record.
    /// </param>
    internal static void updateSourceUsingOriginalRecord(
        CFMPaymentRequestTable _paymentRequestTable, 
        CFMPaymentRequestTable _paymentRequestTableOriginal)
    {
        CFMPaymentRequestUpdateSource sourceUpdater = CFMPaymentRequestUpdateSource::construct(_paymentRequestTable);

        if (sourceUpdater)
        {
            sourceUpdater.initializeOriginal(_paymentRequestTableOriginal);
            sourceUpdater.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates payment request field value.
    /// </summary>
    /// <param name="_paymentRequestTable">
    /// The payment request.
    /// </param>
    /// <param name="_fieldId">
    /// Payment request field identifier.
    /// </param>
    /// <returns>
    /// True if validation is passed; otherwise False.
    /// </returns>
    public static boolean validateSourceField(CFMPaymentRequestTable _paymentRequestTable, FieldId _fieldId)
    {
        boolean ret = true;

        CFMPaymentRequestUpdateSource sourceUpdater = CFMPaymentRequestUpdateSource::construct(_paymentRequestTable);

        if (sourceUpdater)
        {
            ret = sourceUpdater.validateField(_fieldId);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs payment request source update.
    /// </summary>
    protected abstract void doUpdate()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>doValidateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs payment request field value validation.
    /// </summary>
    /// <param name="_fieldId">
    /// Payment request field identifier.
    /// </param>
    /// <returns>
    /// True if validation is passed; otherwise False.
    /// </returns>
    protected boolean doValidateField(FieldId _fieldId)
    {
        boolean ret = true;

        switch(_fieldId)
        {
            case fieldNum(CFMPaymentRequestTable, PaymentAccountNum):
                if (paymentRequestTable.PaymentAccountType == CFMPaymentAccountType::Bank &&
                    paymentRequestTable.PaymentAccountNum  != ''                          &&
                    !BankAccountTable::exist(paymentRequestTable.PaymentAccountNum))
                {
                    ret = checkFailed(strFmt("@Cashflowmanagement:SpecifiedValueDoesNotExistSourceCompanyPaymRequest", paymentRequestTable.PaymentAccountNum));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes class instance from payment request.
    /// </summary>
    /// <param name="_paymentRequestTable">
    /// The payment request.
    /// </param>
    protected void initialize(CFMPaymentRequestTable _paymentRequestTable)
    {
        paymentRequestTable = _paymentRequestTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeOriginal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes original payment request record.
    /// </summary>
    /// <param name="_paymentRequestTableOriginal">
    /// The payment request original record.
    /// </param>
    /// <remarks>
    /// This class uses .orig() record for its work. In certain cases (running this class after super() method in update())
    /// we need to pass the original record as a separate parameter.
    /// </remarks>
    protected void initializeOriginal(CFMPaymentRequestTable _paymentRequestTableOriginal)
    {
        paymentRequestTableOriginal = _paymentRequestTableOriginal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUpdateRequired</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if payment request source needs to be updated.
    /// </summary>
    /// <returns>
    /// True if update is required; otherwise False.
    /// </returns>
    protected boolean isUpdateRequired()
    {
        if (!paymentRequestTableOriginal)
        {
            paymentRequestTableOriginal = paymentRequestTable.orig();
        }

        boolean ret = paymentRequestTable.PaymMode != paymentRequestTableOriginal.PaymMode
            || paymentRequestTable.PaymSpec != paymentRequestTableOriginal.PaymSpec
            || paymentRequestTable.RecepientBankAccountId != paymentRequestTableOriginal.RecepientBankAccountId
            || paymentRequestTable.PaymentAccountNum != paymentRequestTableOriginal.PaymentAccountNum
            || paymentRequestTable.PaymentDate != paymentRequestTableOriginal.PaymentDate;

        // No source - no sync
        ret = ret && paymentRequestTable.SourceRefRecId != 0;

        // Do not sync back source changes taken from source
        ret = ret && (paymentRequestTable.Outdated == paymentRequestTableOriginal.Outdated);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates payment request source if necessary.
    /// </summary>
    public void update()
    {
        if (this.isUpdateRequired())
        {
            changeCompany(paymentRequestTable.SourceDataAreaId)
            {
                this.doUpdate();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates payment request field value is allowed in source company.
    /// </summary>
    /// <param name="_fieldId">
    /// Payment request field identifier.
    /// </param>
    /// <returns>
    /// True if validation is passed; otherwise False.
    /// </returns>
    protected boolean validateField(FieldId _fieldId)
    {
        changeCompany(paymentRequestTable.SourceDataAreaId)
        {
            return this.doValidateField(_fieldId);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>