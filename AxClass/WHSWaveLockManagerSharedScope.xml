<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveLockManagerSharedScope</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWaveLockManagerSharedScope</c> class simplifies use of a shared <c>WHSWaveLockManager</c> class instance
/// as part of wave processing. Through use of the shared scope, we can ensure that the wave lock manager instance
/// is not cleaned up after use unless necessary.
/// </summary>
internal class WHSWaveLockManagerSharedScope implements System.IDisposable
{
    private boolean disposeWaveLockManager;
    private WHSWaveLockManager waveLockManager;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromContextOrDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSWaveLockManagerSharedScope newFromContextOrDefault()
    {
        WHSWaveLockManagerSharedScope scope = new WHSWaveLockManagerSharedScope();

        var context = WHSWaveLockManagerContext::instance();
        if (context && context.parmWaveLockManager())
        {
            scope.disposeWaveLockManager = false; // We do not want to dispose of the shared wave lock manager
            scope.waveLockManager = context.parmWaveLockManager();
        }
        else
        {
            scope.disposeWaveLockManager = true;
            scope.waveLockManager = WHSWaveLockManager::newStandard();
        }

        return scope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void Dispose()
    {
        if (disposeWaveLockManager && waveLockManager)
        {
            waveLockManager.dispose();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSWaveLockManager current()
    {
        return waveLockManager;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>