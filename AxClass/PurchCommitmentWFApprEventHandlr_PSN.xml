<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCommitmentWFApprEventHandlr_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchCommitmentWFApprEventHandler_PSN</c> class is the event handler class
/// for managing the workflow approval events.
/// </summary>
class PurchCommitmentWFApprEventHandlr_PSN implements
    WorkflowElementCompletedEventHandler,
    WorkflowElementCanceledEventHandler,
    WorkflowElementReturnedEventHandler,
    WorkflowElementStartedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>WorkflowApprovalState</c> field on the <c>PurchCommitmentHeader_PSN</c> table to the
    /// <c>PurchCommitmentWorkflowApprovalState_PSN::NotSubmitted</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from workflow framework when the approval element is canceled.
    /// </remarks>
    public void canceled(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        PurchCommitmentHeader_PSN::setWorkflowState(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            PurchCommitmentWorkflowApprovalState_PSN::NotSubmitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements the <c>Approve</c> outcome for the <c>PurchCommitmentApproval_PSN</c>
    /// approval element of the commitment document workflow.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the approval element is completed.
    /// It contains no code because this action does not change the state of the workflow but it
    /// must be here or else the approve workflow action will not be present for the user.
    /// </remarks>
    public void completed(WorkflowElementEventArgs _workflowElementEventArgs)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>WorkflowApprovalState</c> field on the <c>PurchCommitmentHeader_PSN</c> table to the
    /// <c>PurchCommitmentWorkflowApprovalState_PSN::Returned</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the approval element is returned.
    /// </remarks>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        PurchCommitmentHeader_PSN::setWorkflowState(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            PurchCommitmentWorkflowApprovalState_PSN::Rejected);
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements the <c>started</c> method of the <c>PurchCommitmentApproval_PSN</c>
    /// approval element of the commitment document workflow.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the approval element is started.
    /// It contains no code because this action does not change the state of the workflow but it
    /// must be here or else the approval will not be started.
    /// </remarks>
    public void started(WorkflowElementEventArgs _workflowElementEventArgs)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>