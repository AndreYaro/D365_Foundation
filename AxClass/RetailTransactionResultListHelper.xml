<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionResultListHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Collections.ObjectModel;
using CRT = Microsoft.Dynamics.Commerce.Runtime;

/// <summary>
/// The <c>RetailTranactionResultListHelper</c> class contains methods for returning serialized transaction related data in various formats such as XML and JSON.
/// </summary>
public class RetailTransactionResultListHelper
{
    RetailTransactionServiceResultFormat format;

    // list properties for xml
    List xmlList;
    XmlElement xmlListEntry;
    XmlDocument xmlParent;

    // list properties for json data-contracts
    System.Collections.IList contractList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a new helper in the specified format.
    /// </summary>
    /// <param name = "_format">The type of <c>RetailTransactionServiceResultFormat</c> that the helper is to be initialized with.</param>
    public void new(RetailTransactionServiceResultFormat _format)
    {
        this.format = _format;

        switch (this.format)
        {
            case RetailTransactionServiceResultFormat::Json:
                contractList = new System.Collections.ArrayList();
                break;

            case RetailTransactionServiceResultFormat::Xml:
                xmlList = new List(Types::Class);
                xmlParent = XmlDocument::newBlank('utf-16LE');
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>AddSalesTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a Sales Transaction to the results collection.
    /// </summary>
    /// <param name = "_transactionTable">The <c>RetailTransactionTable</c> entity to add to the current list instance.</param>
    /// <param name = "_partyTable">The <c>DirPartyTable</c> entry for the customer associated with the <c>RetailTransactionTable</c> entry.</param>
    /// <param name = "_includeDetails">Whether or not to include full line details for the <c>RetailTransactionTable</c> entry.</param>
    /// <param name = "_includeDiscountLines">Whether or not to include the full sub-collection of discount line details for the given <c>RetailTransactionTable</c> entry.</param>
    public void AddSalesTransaction(
        RetailTransactionTable _transactionTable,
        DirPartyTable _partyTable,
        boolean _includeDetails,
        boolean _includeDiscountLines = true)
    {
        switch (this.format)
        {
            case RetailTransactionServiceResultFormat::Xml:
                RetailTransactionServiceTransactions::addTransactionToResultMap(
                    xmlList,
                    xmlParent,
                    _transactionTable,
                    _partyTable,
                    _includeDetails);
                break;

            case RetailTransactionServiceResultFormat::Json:
                RetailTransactionServiceTransactionsJson::addTransactionToList(
                    contractList,
                    _transactionTable,
                    _partyTable,
                    _includeDetails,
                    true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>AddSalesOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a Sales order to the results collection.
    /// </summary>
    /// <param name = "_salesTable">The <c>SalesTable</c> entity to add to the current list instance.</param>
    /// <param name = "_rsoTable">The <c>REtailSalesTable</c> associated with the given <c>SalesTable</c> entity.</param>
    /// <param name = "_custTable">The <c>CustTable</c> entity associated with the given <c>SalesTable</c> entity.</param>
    /// <param name = "_transactionTable">The <c>RetailTransactionTable</c> entity which represents the associated POS activity for the given <c>SalesTable</c> entity.</param>
    /// <param name = "_includeDetails">Whether or not to include line-level details for the given <c>SalesTable</c>.</param>
    /// <param name = "_includeDiscount">Whether or not to include dicount-line-level details for the given <c>SalesTable</c>.</param>
    public void AddSalesOrder(
        SalesTable _salesTable,
        RetailSalesTable _rsoTable,
        CustTable _custTable,
        RetailTransactionTable _transactionTable,
        boolean _includeDetails,
        boolean _includeDiscount = false)
    {
        switch (this.format)
        {
            case RetailTransactionServiceResultFormat::Xml:
                xmlListEntry =
                    RetailTransactionServiceTransactions::fillSalesOrderDetails(
                        _salesTable,
                        _rsoTable,
                        _custTable,
                        _transactionTable,
                        _includeDetails,
                        xmlParent,
                        false // includeDiscountLines
                );
                xmlList.AddEnd(xmlListEntry);
                break;

            case RetailTransactionServiceResultFormat::Json:
                if (RetailTransactionResultListHelperIncludeDiscInAddSalesOrderFlight::instance().isEnabled())
                {
                    RetailTransactionServiceTransactionsJson::addSalesOrderToListExtended(
                        contractList,
                        _salesTable,
                        _rsoTable,
                        _custTable,
                        _transactionTable,
                        _includeDetails,
                        _includeDiscount);
                }
                else
                {
                    RetailTransactionServiceTransactionsJson::addSalesOrderToListExtended(
                        contractList,
                        _salesTable,
                        _rsoTable,
                        _custTable,
                        _transactionTable,
                        _includeDetails,
                        true);   // include discount lines
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>AddSalesOrderBasic</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a Sales order to the results collection with minimal initial details.  Additional details will be retrieved automatically.
    /// </summary>
    /// <param name = "_salesTable">The <c>SalesTable</c> entity to add to the current list instance.</param>
    /// <param name = "_partyTable">The <c>DirPartyTable</c> entry for the customer associated with the <c>SalesTable</c> entity.</param>
    /// <param name = "_includeDetails">Whether or not to include line-level details for the <c>SalesTable</c> entity.</param>
    public void AddSalesOrderBasic(
        SalesTable _salesTable,
        DirPartyTable _partyTable,
        boolean _includeDetails)
    {
        switch (this.format)
        {
            case RetailTransactionServiceResultFormat::Xml:

                RetailTransactionServiceTransactions::addSalesOrderToResultMap(
                    xmlList,
                    xmlParent,
                    _salesTable,
                    _partyTable,
                    _includeDetails,
                    true); //Include Discount Lines
                break;

            case RetailTransactionServiceResultFormat::Json:
                RetailTransactionServiceTransactionsJson::addSalesOrderToList(
                    contractList,
                    _salesTable,
                    _partyTable,
                    _includeDetails,
                    true,   // include discount lines
                    true);  // skip orders without transactions
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>AddSalesQuotation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a Sales quotation to the results collection.
    /// </summary>
    /// <param name = "_salesQuotationTable">The <c>SalesQuotationTable</c> entity to add to the current list instance.</param>
    /// <param name = "_rsqTable">The <c>RetailSalesQuotationTable</c> that is associated with the given <c>SalesQuatationTable</c> entity.</param>
    /// <param name = "_custTable">The <c>CustTable</c> entity that is associated with the given <c>SalesQuatationTable</c> entity.</param>
    /// <param name = "_includeDetails">Whether or not to include line-level details for the <c>SalesQuotationTable</c> entity.</param>
    public void AddSalesQuotation(
        SalesQuotationTable _salesQuotationTable,
        RetailSalesQuotationTable _rsqTable,
        CustTable _custTable,
        boolean _includeDetails)
    {
        switch (this.format)
        {
            case RetailTransactionServiceResultFormat::Xml:
                xmlListEntry =
                    RetailTransactionServiceTransactions::fillQuoteDetails(
                        _salesQuotationTable, // SalesTable
                        _rsqTable, // RetailSalesQuotationTable
                        _custTable,
                        _includeDetails,
                        xmlParent);
                xmlList.AddEnd(xmlListEntry);
                break;

            case RetailTransactionServiceResultFormat::Json:
                RetailTransactionServiceTransactionsJson::addSalesQuoteToListExtended(
                    contractList,
                    _salesQuotationTable,
                    _rsqTable,
                    _custTable,
                    _includeDetails,
                    true);   // include discount lines
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>AddSalesQuotationBasic</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a Sales quotation to the results collection with minimal initial details.  Additional details will be retrieved automatically.
    /// </summary>
    /// <param name = "_salesQuotationTable">The <c>SalesQuotationTable</c> entity to add to the current list instance.</param>
    /// <param name = "_partyTable">The <c>DirPartyTable</c> entry for the customer associated with the <c>SalesQuotationTable</c> entity.</param>
    /// <param name = "_includeDetails">Whether or not to include line-level details for the <c>SalesQuotationTable</c> entity.</param>
    public void AddSalesQuotationBasic(
        SalesQuotationTable _salesQuotationTable,
        DirPartyTable _partyTable,
        boolean _includeDetails)
    {
        switch (this.format)
        {
            case RetailTransactionServiceResultFormat::Xml:
                RetailTransactionServiceTransactions::addSalesQuoteToResultMap(
                    xmlList,
                    xmlParent,
                    _salesQuotationTable,
                    _partyTable,
                    _includeDetails,
                    true, //include discount lines
                    '', // element name
                    true); // skip quotes without transactions

                break;

            case RetailTransactionServiceResultFormat::Json:
                RetailTransactionServiceTransactionsJson::addSalesQuoteToList(
                    contractList,
                    _salesQuotationTable,
                    _partyTable,
                    _includeDetails,
                    true,   // include discount lines
                    true);  // skip quotes without transactions (ie, pending p-job sync)
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>Serialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serialize the results collection using the defined format.
    /// </summary>
    /// <returns>
    /// The serialized collection.
    /// </returns>
    public str Serialize()
    {
        str result;

        switch (this.format)
        {
            case RetailTransactionServiceResultFormat::Xml:
                // Generate xml document.
                xmlParent = RetailTransactionServiceTransactions::AppendSalesOrdersToXmlDocument(
                    xmlParent,
                    xmlList);

                // Serialize the document.
                result = xmlParent.toString();
                break;

            case RetailTransactionServiceResultFormat::Json:
                // Generate type list
                CRT.DataModel.DataContractSurrogates.SalesOrderSurrogate sog = new CRT.DataModel.DataContractSurrogates.SalesOrderSurrogate();
                System.Type[] typeArray = new System.Type[1](); //System.Type::GetTypeArray(objArray);
                typeArray.SetValue(sog.GetType(), 0);

                // Serialize the data-contract list using the specified type list.
                result = RetailTransactionServiceJsonHelper::SerializeToJson(contractList, typeArray);
                break;
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>