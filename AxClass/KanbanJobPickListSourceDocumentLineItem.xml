<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanJobPickListSourceDocumentLineItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>KanbanJobPickListSourceDocumentLineItem</c> class provides information that is related to a
/// kanban job picking list line item in a kanban job <c>SourceDocument</c> object.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(SourceDocumentLine_Kanban), SourceDocumentLine_Kanban::KanbanJobPickingList)]
public class KanbanJobPickListSourceDocumentLineItem extends SourceDocumentLineItem
{
    KanbanJobPickingList    kanbanJobPickingList;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the default dimension for the line.
    /// </summary>
    /// <returns>
    /// The default dimension for the line.
    /// </returns>
    /// <remarks>
    /// This value is cached in the <c>SourceDocumentLineItem</c> class by the <c>parmDefaultDimension</c>
    /// method. Use that method to retrieve the default dimension, because it will call this method as
    /// necessary.
    /// </remarks>
    protected DimensionDefault calculateDefaultDimension()
    {
        return kanbanJobPickingList.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateLegalEntityRecId</Name>
				<Source><![CDATA[
    protected LegalEntityRecId calculateLegalEntityRecId()
    {
        return kanbanJobPickingList.legalEntity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateSourceDocumentAmountMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the amount map for the line.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>SourceDocumentAmountMap</c> class.
    /// </returns>
    /// <remarks>
    /// This map is cached in the <c>SourceDocumentLineItem</c> class by the
    /// <c>parmSourceDocumentAmountMap</c> method. Use that method to retrieve the map, because it will
    /// call this method as necessary.
    /// </remarks>
    protected SourceDocumentAmountMap calculateSourceDocumentAmountMap()
    {
        return SourceDocumentAmountMap::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentsBusinessEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the business event documented by the source document line.
    /// </summary>
    /// <returns>
    /// An instance of the <c>BusinessEvent</c> class.
    /// </returns>
    public BusinessEvent documentsBusinessEvent()
    {
        BusinessEvent businessEvent = new BusinessEvent(enumNum(BusinessEvent_Kanban),BusinessEvent_Kanban::PostPickingList);

        return businessEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance variables.
    /// </summary>
    /// <param name="_sourceDocumentLineImplementation">
    /// A record in the <c>SourceDocumentLineImplementation</c> table.
    /// </param>
    /// <param name="_additionalInformation">
    /// A map to hold buffers of pre initiliazed objects need by the framework to the source document.
    /// </param>
    protected void initializeImplementation(SourceDocumentLineImplementation _sourceDocumentLineImplementation, Map _additionalInformation = null)
    {
        kanbanJobPickingList = _sourceDocumentLineImplementation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmTransactionCurrencyCode()
    {
        return Ledger::accountingCurrency(kanbanJobPickingList.legalEntity());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
