<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqProcessState</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Singleton used to determine if a rolldown of header updates to lines or a purchase requisition header or line budget check is in process.
/// Used by downstream processes to determine context they are being called in.
/// </summary>
internal class PurchReqProcessState
{
    private static PurchReqProcessState instance;
    private static boolean isHeaderToLinesUpdateInProcess;
    private static boolean isHeaderPerformBudgetCheckInProcess;
    private static int lineProcessCount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new PurchReqProcessState();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>PurchOrderHeaderToLineProcessState</c> instance.</returns>
    public static PurchReqProcessState instance()
    {
        return PurchReqProcessState::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsHeaderPerformBudgetCheckInProcess</Name>
				<Source><![CDATA[
    public boolean parmIsHeaderPerformBudgetCheckInProcess(boolean _isHeaderPerformBudgetCheckInProcess = isHeaderPerformBudgetCheckInProcess)
    {
        isHeaderPerformBudgetCheckInProcess = _isHeaderPerformBudgetCheckInProcess;

        return isHeaderPerformBudgetCheckInProcess;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsHeaderToLinesUpdateInProcess</Name>
				<Source><![CDATA[
    public boolean parmIsHeaderToLinesUpdateInProcess(boolean _isHeaderToLinesUpdateInProcess = isHeaderToLinesUpdateInProcess)
    {
        isHeaderToLinesUpdateInProcess = _isHeaderToLinesUpdateInProcess;

        return isHeaderToLinesUpdateInProcess;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsLinePerformBudgetCheckInProcess</Name>
				<Source><![CDATA[
    public boolean parmIsLinePerformBudgetCheckInProcess()
    {
        return lineProcessCount > 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startLinePerformBudgetCheckInProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Signal that the purchase requisition line starts perform budget check.
    /// </summary>
    public void startLinePerformBudgetCheckInProcess()
    {
        lineProcessCount++;
    }

]]></Source>
			</Method>
			<Method>
				<Name>completeLinePerformBudgetCheckInProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Signal that the purchase requisition line completes perform budget check.
    /// </summary>
    public void completeLinePerformBudgetCheckInProcess()
    {
        lineProcessCount--;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>