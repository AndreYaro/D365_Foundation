<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetInstrumentationLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class AssetInstrumentationLogger
{
    private SysInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLogger</Name>
				<Source><![CDATA[
    internal static AssetInstrumentationLogger createLogger(str _name)
    {
        AssetInstrumentationLogger logger = new AssetInstrumentationLogger();
        logger.instrumentationLogger = SysInstrumentationLoggerFactory::CreateLogger(_name);

        return logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logOneVoucherScenario</Name>
				<Source><![CDATA[
    internal void logOneVoucherScenario(str _scenario, boolean _isOneVoucherFeatureUsed)
    {
        AssetInstrumentationOneVoucherScenariosData oneVoucherFeatureLog = new AssetInstrumentationOneVoucherScenariosData();
        oneVoucherFeatureLog.scenario(_scenario);
                
        if (_isOneVoucherFeatureUsed)
        {
            oneVoucherFeatureLog.isOneVoucherFeatureUsed(true);
        }
        else
        {
            oneVoucherFeatureLog.isOneVoucherFeatureUsed(false);
        }

        instrumentationLogger.logInformation(FormJsonSerializer::serializeClass(oneVoucherFeatureLog));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logPositiveDepreciationUsed</Name>
				<Source><![CDATA[
    internal void logPositiveDepreciationUsed(boolean _isPositiveDepreciation)
    {
        if (_isPositiveDepreciation)
        {
            instrumentationLogger.logInformation(AssetInstrumentationConstants::AssetPositiveDepreciationIsUsed);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>