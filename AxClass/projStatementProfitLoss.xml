<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjStatementProfitLoss</Name>
	<SourceCode>
		<Declaration><![CDATA[
class   ProjStatementProfitLoss
extends projStatement
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total amount that is posted as cost for the project.
    /// </summary>
    /// <returns>
    /// The total amount posted as cost for a project.
    /// </returns>
    AmountMST costAmount()
    {
        return this.A300_Total_Cost(false,ProjListStateType::ProfitLoss);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerAccruedCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether <c>ProjAccruedCost</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// Returns true so that <c>ProjAccruedCost</c> ledger postings are included in the calculations. This
    /// method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerAccruedCost()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerAccruedRevenueOnAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjAccruedRevenueOnAccount</c> ledger postings are included in the
    /// calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerAccruedRevenueOnAccount()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerAccruedRevenueSubscription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that subscription ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerAccruedRevenueSubscription()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerAccruedTurnoverProd</Name>
				<Source><![CDATA[
        boolean ledgerAccruedTurnoverProd()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerAccruedTurnoverProfit</Name>
				<Source><![CDATA[
        boolean ledgerAccruedTurnoverProfit()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjCost</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// false.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerCost()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerOffsetAccountItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjOffsetAccountItem</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerOffsetAccountItem()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerOnAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true so that <c>ProjOnAccount</c> ledger postings are included in the calculations.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method can be overridden to change the default behavior.
    /// </remarks>
    boolean ledgerOnAccount()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerSalesvalue</Name>
				<Source><![CDATA[
        boolean ledgerSalesvalue()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerTurnover</Name>
				<Source><![CDATA[
        boolean ledgerTurnover()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total revenue for the project.
    /// </summary>
    /// <returns>
    /// The total revenue for the project.
    /// </returns>
    AmountMST salesAmount()
    {
        return this.A100_Total_Revenue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transListQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total number of hours that are posted as cost for hour transaction types for the
    /// project.
    /// </summary>
    /// <returns>
    /// The total number of hours posted as cost for hours transaction types for a project.
    /// </returns>
    ProjQty transListQty()
    {
        return this.A310_Cost_Hour_Qty();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>