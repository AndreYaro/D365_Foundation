<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTaxDeclarationInfoItemizedExcel_HU</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

/// <summary>
/// This class prints Itemized VAT statement for Hungary to Excel.
/// </summary>
public class SalesTaxDeclarationInfoItemizedExcel_HU extends SysOperationServiceController implements BatchRetryable
{
    private TmpTaxReport_HU  tmpTable;
    private int      counter;
    private str      currentYear;
    private FromDate fromDate;

    SalesTaxDeclarationInfoReportContract contract;
    SalesTaxDeclarationInformationReportService dataProvider;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNumberOfPartners_Header</Name>
				<Source><![CDATA[
    private int getNumberOfPartners_Header()
    {
        return this.getNumberOfPartners([0], false, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfPartners_1365A_01_05_1</Name>
				<Source><![CDATA[
    private int getNumberOfPartners_1365A_01_05_1()
    {
        return this.getNumberOfPartners([1], true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfPartners_1365A_01_05_2</Name>
				<Source><![CDATA[
    private int getNumberOfPartners_1365A_01_05_2()
    {
        return this.getNumberOfPartners([2], true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfPartners_1365A_01_05_12</Name>
				<Source><![CDATA[
    private int getNumberOfPartners_1365A_01_05_12()
    {
        return this.getNumberOfPartners([1,2], true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfPartners_1365A_01_05_3</Name>
				<Source><![CDATA[
    private int getNumberOfPartners_1365A_01_05_3()
    {
        return this.getNumberOfPartners([3], true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfPartners_1365A_01_05_4</Name>
				<Source><![CDATA[
    private int getNumberOfPartners_1365A_01_05_4()
    {
        return this.getNumberOfPartners([4], true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfPartners_1365A_01_05_5</Name>
				<Source><![CDATA[
    private int getNumberOfPartners_1365A_01_05_5()
    {
        return this.getNumberOfPartners([3,4], false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfPartners_1365A_01_05_345</Name>
				<Source><![CDATA[
    private int getNumberOfPartners_1365A_01_05_345()
    {
        return this.getNumberOfPartners([3,4], false, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes main logic of the report.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void createReport()
    {
        this.getNumberOfPartners_Header();
        this.getNumberOfPartners_1365A_01_05_1();
        this.getNumberOfPartners_1365A_01_05_2();
        this.getNumberOfPartners_1365A_01_05_12();
        this.getNumberOfPartners_1365A_01_05_3();
        this.getNumberOfPartners_1365A_01_05_4();
        this.getNumberOfPartners_1365A_01_05_5();
        this.getNumberOfPartners_1365A_01_05_345();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfPartners</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates number of partners.
    /// </summary>
    /// <param name="_sectionNoCon">
    ///     Container with numbers of pages to analyze.
    /// </param>
    /// <param name="_exceedsTheLimit">
    ///     Parameter showing whether to include data which exceeds or doesn't exceed the limit, defined in the tax parameters.
    /// </param>
    /// <param name="_all">
    ///     Parameter showing whether to include all data (both which exceeds and doesn't exceed the limit). If it is = true, "_exceedsTheLimit" parameter is ignored.
    /// </param>
    /// <returns>
    ///     The quantity of partners.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    int getNumberOfPartners(container   _sectionNoCon,
                            boolean     _exceedsTheLimit = false,
                            boolean     _all = false)
    {
        int     i, sectionNo;
        Set     set = new Set(Types::Int64);
        for (i = 1; i <= conlen(_sectionNoCon); i++)
        {
            sectionNo = conpeek(_sectionNoCon, i);

            while select tmpTable
                group by DirPartyRecId
                where (tmpTable.SectionNo           == sectionNo || !sectionNo)
                   && (tmpTable.ExceedsTheLimit     == _exceedsTheLimit || _all)
                   && tmpTable.TransDate            >= fromDate
                   && tmpTable.ExcludeFromTotals    == NoYes::No
            {
                set.add(tmpTable.DirPartyRecId);
            }
        }

        return set.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContract</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public SalesTaxDeclarationInfoReportContract parmContract(SalesTaxDeclarationInfoReportContract _contract = contract)
    {
        contract = _contract;
        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prepares data and inserts them to the temporary table.
    /// </summary>
    private void prepareData(SalesTaxDeclarationInfoReportContract _contract)
    {
        dataProvider = new SalesTaxDeclarationInformationReportService();

        dataProvider.parmContract(_contract);
        dataProvider.processReport();

        tmpTable.setTmpData(dataProvider.getTmpTaxReport());

        fromDate = _contract.parmTaxReportPeriodFromDate();

        this.createReport();

        this.runER();
    }

]]></Source>
			</Method>
			<Method>
				<Name>printReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Entry point for the report.
    /// </summary>
    /// <param name="_contract">
    ///     Contract class which contains the data used to print the report.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void printReport(SalesTaxDeclarationInfoReportContract _contract)
    {
        SalesTaxDeclarationInfoItemizedExcel_HU report = new SalesTaxDeclarationInfoItemizedExcel_HU();
        report.parmContract(_contract);
        report.prepareData(_contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runER</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called by service controller.
    /// </summary>
    private void runER()
    {
        // Call ER to generate the report.
        ERFormatMappingTable eRFormatMappingTable;
        select RecId from eRFormatMappingTable where eRFormatMappingTable.Name == "Sales tax declaration info Itemized Excel for HU";
        ERFormatMappingId formatMapping = eRFormatMappingTable.RecId;

        ERObjectsFactory::createFormatMappingRunByFormatMappingId(formatMapping)
            .withFileDestination(ERObjectsFactory::createFileDestinationBrowser())
                .withParameter(this.createParameters())
                        .withCreatingObjectParameter(SalesTaxDeclarationInfoReportContract::parmERModelname(),
                                                     classStr(SalesTaxDeclarationInfoReportContract),
                                                     contract).run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get user input parameters.
    /// </summary>
    /// <returns></returns>
    private ERIModelDefinitionParamsAction createParameters()
    {
        ERIModelDefinitionParamsAction parameters = new ERModelDefinitionParamsUIActionComposite()
                    .add(
                        new ERModelDefinitionDatabaseContext()
                            .addTemporaryTable(dataProvider.getTmpTaxReport()))
                    .add(
                        new ERModelDefinitionDatabaseContext()
                            .addValue(tableNum(CompanyInfo), fieldNum(CompanyInfo, DataArea), curext()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('ParameterGenerateFile',contract.parmGenerateFile()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/ParameterFromDateRange',contract.parmTaxReportPeriodFromDate()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/ParameterToDateRange', contract.parmTaxReportPeriodToDate()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                              .addParameter('model/NumberOfPartners', this.getNumberOfPartners_Header()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/NumberOfPartners_1365A_01_05_1', this.getNumberOfPartners_1365A_01_05_1()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/NumberOfPartners_1365A_01_05_2', this.getNumberOfPartners_1365A_01_05_2()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/NumberOfPartners_1365A_01_05_12', this.getNumberOfPartners_1365A_01_05_12()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/NumberOfPartners_1365A_01_05_3', this.getNumberOfPartners_1365A_01_05_3()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/NumberOfPartners_1365A_01_05_4', this.getNumberOfPartners_1365A_01_05_4()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/NumberOfPartners_1365A_01_05_5', this.getNumberOfPartners_1365A_01_05_5()))
                    .add(
                        new ERModelDefinitionInputParametersAction()
                            .addParameter('model/NumberOfPartners_1365A_01_05_345', this.getNumberOfPartners_1365A_01_05_345()));
        return parameters;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>