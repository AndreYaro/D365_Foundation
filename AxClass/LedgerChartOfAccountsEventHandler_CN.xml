<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerChartOfAccountsEventHandler_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Event handlers for <c>LedgerChartOfAccounts</c> related events.
/// </summary>
public class LedgerChartOfAccountsEventHandler_CN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>LedgerChartOfAccounts_Post_isTreeStructureEnabled_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event isTreeStructureEnabled_CN post handler.
    /// </summary>
    /// <param name = "_args">The event arguments</param>
    [PostHandlerFor(tableStr(LedgerChartOfAccounts), tableStaticMethodStr(LedgerChartOfAccounts, isTreeStructureEnabled_CN))]
    public static void LedgerChartOfAccounts_Post_isTreeStructureEnabled_CN(XppPrePostArgs _args)
    {
        boolean     ret = false;

        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN]))
        {
            RefRecId ledgerChartOfAccountsRecId = _args.getArg(identifierstr(_ledgerChartOfAccounts));

            // If the chart of accounts has not been specified, look it up
            if (!ledgerChartOfAccountsRecId)
            {
                ledgerChartOfAccountsRecId = LedgerChartOfAccounts::current();
            }

            if (LedgerChartOfAccountsTree_CN::findByLedgerChartOfAccounts(ledgerChartOfAccountsRecId).RecId)
            {
                ret = true;
            }
        }

        _args.setReturnValue(ret);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>