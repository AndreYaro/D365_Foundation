<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomsInvoiceRegistrateForm_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the customer invoice registrate form.
/// </summary>
class CustomsInvoiceRegistrateForm_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the customs of invoice registration journal.
    /// </summary>
    /// <param name="_customsInvoiceRegnJournalTable">
    /// The customs of invoice registration journal.
    /// </param>
    /// <exception cref="Exception::Error">
    /// The invoice number is not given.
    /// </exception>
    public void  validateWrite(CustomsInvoiceRegnJournalTable_IN   _customsInvoiceRegnJournalTable)
    {
        if (_customsInvoiceRegnJournalTable
            && (!_customsInvoiceRegnJournalTable.CustomsImportInvoiceNumberTable || !_customsInvoiceRegnJournalTable.OrderId))
        {
            throw error(strfmt("@SYS26332", "@GLS5744"));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcReceiveQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates received Qty.
    /// </summary>
    /// <param name="_purchLine">
    /// The instance of the <c>PurchLine</c> class.
    /// </param>
    /// <returns>
    /// The received customs Qty.
    /// </returns>
    public static CustomsQty_IN calcReceiveQty(PurchLine _purchLine)
    {
        CustomsInvoiceRegnJournalLine_IN    customsInvoiceRegnJournalLineLoc;
        CustomsInvoiceRegnTrans_IN          customsInvoiceRegnTrans;
        boolean                             flag;
        CustomsQty_IN                       receiveQty;

        while select sum(Receive) from customsInvoiceRegnTrans
            join  RecId, PurchLineRecId from customsInvoiceRegnJournalLineLoc
            where customsInvoiceRegnTrans.CustomsInvoiceRegnJournalLineRecId == customsInvoiceRegnJournalLineLoc.RecId
               && customsInvoiceRegnJournalLineLoc.PurchLineRecId            == _purchLine.RecId
        {
                receiveQty = (_purchLine.PurchQty < 0) ? (_purchLine.PurchQty - customsInvoiceRegnTrans.Receive) : (_purchLine.PurchQty - abs(customsInvoiceRegnTrans.Receive));
                flag = true;
        }
        if (!customsInvoiceRegnTrans && !flag)
        {
            receiveQty = _purchLine.PurchQty;
        }
        return receiveQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the <c>CustomsInvoiceRegistrateForm_IN</c> object.
    /// </summary>
    /// <returns>
    /// The isntance of the <c>CustomsInvoiceRegistrateForm_IN</c> class.
    /// </returns>
    public static CustomsInvoiceRegistrateForm_IN  construct()
    {
        return new CustomsInvoiceRegistrateForm_IN();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>