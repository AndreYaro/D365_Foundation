<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimListPageInteractionAdapter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventDimListPageInteractionAdapter</c> class is the list page adapter for the
///    <c>InventDim</c> framework.
/// </summary>
/// <remarks>
///    This class adapts a list page to be manipulated by the <c>InventDim</c> framework.
/// </remarks>
public class InventDimListPageInteractionAdapter implements InventDimFormInterface
{
    ListPageInteraction listPageInteraction;
    Args convertedArgs;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>args</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>Args</c> object that is associated with the underlying list page.
    /// </summary>
    /// <returns>
    /// An instance of the <c>Args</c> class.
    /// </returns>
    public Args args()
    {
        if (convertedArgs == null)
        {
            convertedArgs = InventDimListPageInteractionAdapter::convertListPageArgsToArgs(listPageInteraction.listPage().listPageArgs());
        }

        Debug::assert(convertedArgs != null);
        return convertedArgs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data source at the specified index.
    /// </summary>
    /// <param name="dataSourceIndex">
    /// The index of the data source.
    /// </param>
    /// <returns>
    /// An instance of the <c>FormDataSource</c> class.
    /// </returns>
    public FormDataSource dataSource(int dataSourceIndex)
    {
        throw error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dataSourceCount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the number of data sources in the form.
    /// </summary>
    /// <returns>
    ///    The number of data sources in the form.
    /// </returns>
    public int dataSourceCount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the underlying list page object.
    /// </summary>
    /// <returns>
    /// A list page interaction object.
    /// </returns>
    /// <remarks>
    /// Callers should only use this object to call a custom method that may be defined for a specific form
    /// and only after checking that the method exists by using the <c>hasMethod</c> method.
    /// </remarks>
    public Object formObject()
    {
        return listPageInteraction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the underlying list page implements the specified method.
    /// </summary>
    /// <param name="methodName">
    /// The name of the method.
    /// </param>
    /// <returns>
    /// Always returns false.
    /// </returns>
    public boolean hasMethod(IdentifierName methodName)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lock</Name>
				<Source><![CDATA[
    /// <summary>
    /// Locks the form.
    /// </summary>
    public void lock()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of the underlying list page.
    /// </summary>
    /// <returns>
    /// The name of the underlying form.
    /// </returns>
    public IdentifierName name()
    {
        return listPageInteraction.listPage().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmListPageInteractionObject</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The property for the list page interaction object of this adapter.
    /// </summary>
    /// <param name="_listPageInteraction">
    ///    The list page interaction object to set.
    /// </param>
    /// <returns>
    ///    The list page interaction object.
    /// </returns>
    public ListPageInteraction parmListPageInteractionObject(ListPageInteraction _listPageInteraction = listPageInteraction)
    {
        listPageInteraction = _listPageInteraction;
        return listPageInteraction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetSize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the size of the underlying form.
    /// </summary>
    public void resetSize()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>unLock</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unlocks the list page.
    /// </summary>
    public void unLock()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the list page interaction adapter.
    /// </summary>
    /// <returns>
    ///    The constructed InventDim list page interaction adapter.
    /// </returns>
    public static InventDimListPageInteractionAdapter construct()
    {
        return new InventDimListPageInteractionAdapter();
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertListPageArgsToArgs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Converts the list page arguments to arguments.
    /// </summary>
    /// <param name="listPageArgs">
    ///    The list page arguments.
    /// </param>
    /// <returns>
    ///    The arguments object.
    /// </returns>
    public static Args convertListPageArgsToArgs(ListPageArgs listPageArgs)
    {
        Args args = new Args();

        args.menuItemName(listPageArgs.menuItemName());
        args.record(listPageArgs.externalRecord());

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromListPageInteraction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>InventDimListPageInteractionAdapter</c> class from a list page
    /// interaction object.
    /// </summary>
    /// <param name="_listPageInteraction">
    /// The list page interaction object.
    /// </param>
    /// <returns>
    /// A new instance of the <c>InventDimListPageInteractionAdapter</c> class.
    /// </returns>
    public static InventDimListPageInteractionAdapter newFromListPageInteraction(ListPageInteraction _listPageInteraction)
    {
        InventDimListPageInteractionAdapter adapter = InventDimListPageInteractionAdapter::construct();

        adapter.parmListPageInteractionObject(_listPageInteraction);
        return adapter;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>