<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPeriodCreatePeriod</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjPeriodCreatePeriod extends ProjPeriodCreate
{
    /// <summary>
    /// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    /// in the Application Object Tree (AOT).
    /// </remarks>

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase dialog = super();

        dialog.caption("@SYS50118");

        dialog.addGroup("@SYS40"); //Period

        this.createUpdateWorkerPeriodControlInDialog(dialog);
        
        dialogPeriodStartDate = dialog.addFieldValue(extendedTypeStr(ProjPeriodFrom),startDate,"@SYS57856");

        if (this.timeFrequency() == PerDayWeekMthQtYr::Unlimited)
        {
            dialogPeriodToDate = dialog.addFieldValue(extendedTypeStr(ProjPeriodTo),stopDate,"@SYS22882");
        }

        if ((select firstfast projPeriodLine where projPeriodLine.PeriodId == projPeriodId).RecId)
        {
            dialogPeriodStartDate.value(this.lastDateInPeriod(projPeriodLine)+1);
            dialogPeriodStartDate.enabled(NoYes::No);
        }

        dialogPeriodLengthGroup   = dialog.addGroup('');
        dialogPeriodLengthGroup.columns(RangeStatus::Hidden);

        this.createNumberOfPeriodsControlInDialog(dialog);

        dialogPeriodUnit    = dialog.addFieldValue(enumStr(PerDayWeekMthQtYr),this.timeFrequency(),"@SYS11959","@SYS10128");

        dialogPeriodQty.enabled(!(this.timeFrequency() == PerDayWeekMthQtYr::Unlimited));
        dialogPeriodUnit.enabled(NoYes::No);

        this.createUtilizationNormGroupInDialog(dialog);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertProjPeriodLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the project period lines.
    /// </summary>
    protected void insertProjPeriodLines()
    {
        switch (this.timeFrequency())
        {
            case PerDayWeekMthQtYr::Period      :      this.projPeriodPeriod();  break;
            case PerDayWeekMthQtYr::Day         :      this.projPeriodDay();     break;
            case PerDayWeekMthQtYr::Week        :      this.projPeriodWeek();    break;
            case PerDayWeekMthQtYr::Month       :      this.projPeriodMonth();   break;
            case PerDayWeekMthQtYr::Quarter     :      this.projPeriodQuarter(); break;
            case PerDayWeekMthQtYr::Year        :      this.projPeriodYear();    break;
            case PerDayWeekMthQtYr::Unlimited   :      this.projUnlimited();     break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeClass</Name>
				<Source><![CDATA[
    protected void executeClass()
    {
        progress.setCaption("@Res:UpdatingResourcePeriods");

        progressCounter++;
        progress.setCount(progressCounter);
        progress.setText(strFmt("@SYS70862",projPeriodId));

        this.insertProjPeriodLines();

        if (createEmplPeriod == NoYes::Yes)
        {
            this.resourcePeriod();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        if (dialogPeriodStartDate.value())
        {
            this.parmStartDate(dialogPeriodStartDate.value());
        }
        else
        {
            this.parmStartDate(this.lastDateInPeriod(projPeriodLine)+1);
        }
        if (this.timeFrequency() == PerDayWeekMthQtYr::Unlimited)
        {
            this.parmStopDate(dialogPeriodToDate.value());
        }
        else
        {
            this.parmStopDate(startDate);
        }
        this.parmPeriodQty(dialogPeriodQty.value());
		
		if (CEIntegrationEnabled)
		{
			this.parmCreateEmplPeriod(NoYes::No);
		}
		else
		{
            this.parmCreateEmplPeriod(dialogCreateResource.value());
            this.parmNormBillable(dialogNormBillable.value());
            this.parmNormEfficiency(dialogNormEfficiency.value());
		}
        
        this.calcStopDate();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    private static ClassDescription description()
    {
        return "@SYS50765";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>