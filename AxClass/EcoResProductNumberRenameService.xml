<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductNumberRenameService</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductNumberRenameService
{
    EcoResProductRecId  productRecId;
    EcoResProductNumber productNumber;
    EcoResProductNumber newProductNumber;
    boolean             updateVariants;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewProductNumber</Name>
				<Source><![CDATA[
    public EcoResProductNumber parmNewProductNumber(EcoResProductNumber _newProductNumber = newProductNumber)
    {
        newProductNumber = _newProductNumber;

        return newProductNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductNumber</Name>
				<Source><![CDATA[
    public EcoResProductNumber parmProductNumber(EcoResProductNumber _productNumber = productNumber)
    {
        productNumber = _productNumber;

        return productNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductRecId</Name>
				<Source><![CDATA[
    public EcoResProductRecId parmProductRecId(EcoResProductRecId _productRecId = productRecId)
    {
        productRecId = _productRecId;

        return productRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateVariants</Name>
				<Source><![CDATA[
    public boolean parmUpdateVariants(boolean _updateVariants = updateVariants)
    {
        updateVariants = _updateVariants;

        return updateVariants;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rename</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes the rename operation of a product number.
    /// </summary>
    public void rename()
    {
        if (this.validate())
        {
            ttsbegin;

            this.updateProductIdentifier();

            if (this.parmUpdateVariants())
            {
                this.updateProductVariants();
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProductIdentifier</Name>
				<Source><![CDATA[
    protected void updateProductIdentifier()
    {
        EcoResProductIdentifier productIdentifier = EcoResProductIdentifier::findByProduct(this.parmProductRecId(), true);
        if (productIdentifier)
        {
            productIdentifier.ProductNumber = this.parmNewProductNumber();

            if (EcoResProductIdentifier::findByProductNumber(productIdentifier.ProductNumber))
            {
                throw error(strFmt("@SYS331036", productIdentifier.ProductNumber));
            }

            productIdentifier.update();
        }

        EcoResProduct product = EcoResProduct::find(this.parmProductRecId(), true);
        if (product)
        {
            var builder = EcoResProductNumberBuilder::newFromProductNumber(this.parmNewProductNumber());

            product.DisplayProductNumber = builder.buildDisplayProductNumber();
            product.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProductVariants</Name>
				<Source><![CDATA[
    protected void updateProductVariants()
    {
        EcoResDistinctProductVariant        productVariant;
        EcoResDistinctProductVariant        productVariantOrigin;
        EcoResProductMaster                 productMaster = EcoResProductMaster::find(this.parmProductRecId());

        while select forupdate productVariant
            where productVariant.ProductMaster == productMaster.RecId
        {
            container productDimensions = EcoResProductVariantDimValue::getDimensionContainerByProductVariant(productVariant.RecId);
            EcoResProductNumberBuilderVariant builder = EcoResProductNumberBuilderVariant::newFromProductMasterAndDimensions(productMaster, productDimensions);

            productVariant.DisplayProductNumber = builder.buildDisplayProductNumber();

            select firstonly productVariantOrigin
            where productVariantOrigin.DisplayProductNumber == productVariant.DisplayProductNumber;

            if (productVariantOrigin)
            {
                throw error(strFmt("@SYS331036", productVariant.DisplayProductNumber));
            }

            productVariant.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    protected boolean validate()
    {
        boolean ret = true;

        if (this.parmNewProductNumber() == "")
        {
            ret = checkFailed("@SYS331035");
        }
        else
        if (this.parmNewProductNumber() == this.parmProductNumber())
        {
            ret = checkFailed(strFmt("@SYS331037", this.parmProductNumber(),this.parmNewProductNumber()));
        }
        else
        if (EcoResProductIdentifier::findByProductNumber(this.parmNewProductNumber()))
        {
            ret = checkFailed(strFmt("@SYS331036", this.parmNewProductNumber()));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static EcoResProductNumberRenameService construct()
    {
        return new EcoResProductNumberRenameService();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromProduct</Name>
				<Source><![CDATA[
    public static EcoResProductNumberRenameService newFromProduct(
        EcoResProductRecId  _productRecId,
        EcoResProductNumber _productNumber,
        EcoResProductNumber _newProductNumber,
        boolean             _updateVariants)
    {
        EcoResProductNumberRenameService ecoResProductNumberRenameService = EcoResProductNumberRenameService::construct();

        if (_productRecId)
        {
            ecoResProductNumberRenameService.parmProductRecId(_productRecId);
            ecoResProductNumberRenameService.parmProductNumber(_productNumber);
            ecoResProductNumberRenameService.parmNewProductNumber(_newProductNumber);
            ecoResProductNumberRenameService.parmUpdateVariants(_updateVariants);
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        return ecoResProductNumberRenameService;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
