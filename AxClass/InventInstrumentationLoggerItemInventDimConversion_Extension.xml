<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInstrumentationLoggerItemInventDimConversion_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventInstrumentationLoggerItemInventDimConversion_Extension</c> class adds activities for item inventory dimension conversion to the inventory instrumentation logging.
/// </summary>
[ExtensionOf(classStr(InventInstrumentationLogger))]
internal final class InventInstrumentationLoggerItemInventDimConversion_Extension
{
    private InventItemInventDimConversionInstrumentationActivities itemInventDimConversionActivities;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>itemInventDimConversion</Name>
				<Source><![CDATA[
    final internal InventItemInventDimConversionInstrumentationActivities itemInventDimConversion()
    {
        if (!itemInventDimConversionActivities)
        {
            itemInventDimConversionActivities = InventItemInventDimConversionInstrumentationActivities::newFromLogger(this);
        }

        return itemInventDimConversionActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logMissingHandler</Name>
				<Source><![CDATA[
    final internal void logMissingHandler(TableId _tableId, FieldId _fieldId)
    {
        SysInstrumentationEventDataJsonSerializer serializer = new SysInstrumentationEventDataJsonSerializer();

        var properties = this.properties();

        serializer
            .setValue('ErrorLabelId', '@ItemDimensionConversion:'+'Error_MissingInventDimIdFieldDiscoveryEventHandling')
            .setNameAndValue(properties.propertyByTableFieldId(_tableId, _fieldId));

        instrumentationLogger.logInformation(serializer.toString());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>