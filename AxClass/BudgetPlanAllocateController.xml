<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanAllocateController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanAllocateController</c> class is the controller class for the budget plan allocation service.
/// </summary>
public class BudgetPlanAllocateController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the allocations should allow for batch processing.
    /// </summary>
    /// <returns> A false boolean value. </returns>
    /// <remarks> This ensures the SysOperation framework does not apply the batch tab to the form. </remarks>
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the form used to get the user input.
    /// </summary>
    /// <returns> The name of the form. </returns>
    public FormName templateForm()
    {
        return formStr(BudgetPlanAllocate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a controller object.
    /// </summary>
    /// <param name="_args"> An instance of the <c>Args</c> class. </param>
    /// <returns> An instance of the <c>BudgetPlanAllocateController</c> class. </returns>
    public static BudgetPlanAllocateController createController(Args _args)
    {
        if (!_args)
        {
            throw error(strfmt("@Budget:IncorrectFunctionUsage", funcname()));
        }

        BudgetPlanAllocateController budgetPlanAllocateController;
        IdentifierName               className, methodName;
        SysOperationExecutionMode    mode;

        [className, methodName, mode] = SysOperationServiceController::parseServiceInfo(_args);
        budgetPlanAllocateController  = new BudgetPlanAllocateController(className, methodName, mode);
        budgetPlanAllocateController.parmLoadFromSysLastValue(false);
        budgetPlanAllocateController.parmArgs(_args);

        return budgetPlanAllocateController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        BudgetPlanAllocateController budgetPlanAllocateController;

        budgetPlanAllocateController = BudgetPlanAllocateController::createController(_args);
        budgetPlanAllocateController.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>