<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgConsistencyCheck_data</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgConsistencyCheck_data</c> class performs the consistency check for transaction data in
///    the shop floor control module.
/// </summary>
public class JmgConsistencyCheck_data extends SysConsistencyCheck implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>configurationKey</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the configuration key, which should be enabled for the consistency check to be run,
    ///    which is Jmg.
    /// </summary>
    /// <returns>
    ///    The ID of the configuration key.
    /// </returns>
    configurationKeyId configurationKey()
    {
        return configurationkeynum(Jmg);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executionOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an integer that represents the order of the consistency check to execute.
    /// </summary>
    /// <returns>
    ///    An integer that represents the order of execution.
    /// </returns>
    Integer executionOrder()
    {
        return 40;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    /// <remarks>
    ///    This method executes a consistency check for the following tables:
    ///    <list type="bullet">
    ///       <item>
    ///          <description>
    ///             <c>JmgTimecardTable</c>
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             <c>JmgTimecardTrans</c>
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             <c>JmgAbsenceCalendar</c>
    ///          </description>
    ///       </item>
    ///    </list>
    /// </remarks>
    public void run()
    {
        // JmgAbsenceCalendar
        this.kernelCheckTable(tablenum(JmgAbsenceCalendar));

        // JmgAssistance
        this.kernelCheckTable(tablenum(JmgAssistance));

        // JmgBulletinBoard
        this.kernelCheckTable(tablenum(JmgBulletinBoard));

        // JmgBulletinBoardRecipient
        this.kernelCheckTable(tablenum(JmgBulletinBoardRecipient));

        // JmgEventCtrl
        this.kernelCheckTable(tablenum(JmgEventCtrl));

        // JmgFlexCorrection
        this.kernelCheckTable(tablenum(JmgFlexCorrection));

        // JmgGroupSigningTable
        this.kernelCheckTable(tablenum(JmgGroupSigningTable));

        // JmgGroupSigningLine
        this.kernelCheckTable(tablenum(JmgGroupSigningLine));

        // JmgIpcLedgerJournal
        this.kernelCheckTable(tablenum(JmgIpcLedgerJournal));

        // JmgIpcLedgerTrans
        this.kernelCheckTable(tablenum(JmgIpcLedgerTrans));

        // JmgOvertimeSlize
        this.kernelCheckTable(tablenum(JmgOvertimeSlize));

        // JmgProfileCalendar
        this.kernelCheckTable(tablenum(JmgProfileCalendar));

        // JmgProfileOverride
        this.kernelCheckTable(tablenum(JmgProfileOverride));

        // JmgProfileOverrideSpec
        this.kernelCheckTable(tablenum(JmgProfileOverrideSpec));

        // JmgScheduledLoan
        this.kernelCheckTable(tablenum(JmgScheduledLoan));

        // JmgStampJournalTable
        this.kernelCheckTable(tablenum(JmgStampJournalTable));

        // JmgStampJournalTrans
        this.kernelCheckTable(tablenum(JmgStampJournalTrans));

        // JmgStampTrans
        this.kernelCheckTable(tablenum(JmgStampTrans));

        // JmgTermReg
        this.kernelCheckTable(tablenum(JmgTermReg));

        // JmgTimecardTable
        this.kernelCheckTable(tablenum(JmgTimecardTable));

        // JmgTimecardTrans
        this.kernelCheckTable(tablenum(JmgTimecardTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the batch task is run on the server or on a client.
    /// </summary>
    /// <returns>
    ///    true if the task is run on the server; otherwise, false.
    /// </returns>
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeParentClassId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the class ID of the parent class in the consistency check hierarchy, which is
    ///    <c>JmgConsistencyCheck</c>.
    /// </summary>
    /// <returns>
    ///    The class ID of the parent class.
    /// </returns>
    classId treeParentClassId()
    {
        return classnum(JmgConsistencyCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS7403";
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpText</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the help text that is associated with this consistency check.
    /// </summary>
    /// <returns>
    ///    The help text that is associated with the consistency check.
    /// </returns>
    static HelpTxt helpText()
    {
        return "@SYS40050";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        SysConsistencyCheckJob      consistencyCheckJob;

        consistencyCheckJob = new SysConsistencyCheckJob(classnum(JmgConsistencyCheck));

        if (! consistencyCheckJob.prompt())
        {
            return;
        }
        consistencyCheckJob.runOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>