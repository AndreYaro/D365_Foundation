<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceContext_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Establishes the current Italian electronic invoice processing context.
/// </summary>
internal class EInvoiceContext_IT implements System.IDisposable
{
    private static EInvoiceContext_IT instance;
    private boolean checkERDestinationExists = true;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    public static EInvoiceContext_IT instance()
    {
        if (!instance)
        {
            instance = new EInvoiceContext_IT();
        }

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current instance.
    /// </summary>
    /// <returns>The current instance.</returns>
    public static EInvoiceContext_IT current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCheckERDestinationExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or set the indicator of ER destination existence check should be performed.
    /// </summary>
    /// <param name = "_checkERDestinationExists">New indicator value.</param>
    /// <returns>Current indicator value.</returns>
    public boolean parmCheckERDestinationExists(boolean _checkERDestinationExists = checkERDestinationExists)
    {
        checkERDestinationExists = _checkERDestinationExists;
        return checkERDestinationExists;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>