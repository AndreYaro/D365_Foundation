<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransDetails_ES</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustVendTransDetails_ES</c> class is used to calculate amounts that are used
///    in the <c>DueDateCompliance_ES</c> report.
/// </summary>
public class CustVendTransDetails_ES extends CustVendTransDetails
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fetchCustVendSettlementSum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills <c>CustVendSettlement</c> record with summary data for the current <c>CustVendTrans</c> record
    /// and saves it in the RecordSortedList or retrieves this record from the RecordSortedList if it has already been filled before.
    /// </summary>
    void fetchCustVendSettlementSum()
    {
        CustVendTrans custVendTransOffset,
                      custVendTransBOE,
                      custVendTransBOELoc;
        CustVendSettlement custVendSettlementBOE;
        CustVendNegInstSeqNum seqNum;

        custVendSettlementSum.TransRecId = custVendTrans.RecId;

        if (custVendTrans.RecId)
        {
            if (!selectedSettlementSum.lookup(custVendTrans.RecId))
            {
                custVendTransOffset     = custVendTrans.data();
                custVendTransBOE        = custVendTrans.data();
                custVendTransBOELoc     = custVendTrans.data();
                custVendSettlementBOE   = custVendSettlementSum.data();

                select RecId, TransDate, TransRecId, minof(DueDate),
                       minof(CashDiscDate), maxof(LastInterestDate),
                       sum(SettleAmountCur), sum (SettleAmountMST), sum(ExchAdjustment),
                       sum(UtilizedCashDisc) from custVendSettlementSum
                    where custVendSettlementSum.TransRecId == custVendTrans.RecId &&
                          custVendSettlementSum.TransDate  <= transDate
                exists join custVendTransOffset
                    where custVendTransOffset.RecId         == custVendSettlementSum.OffsetRecId &&
                         (custVendTransOffset.NegInstStatus == CustVendNegInstStatus::None       ||
                          custVendTransOffset.NegInstStatus == CustVendNegInstStatus::Invoiced);

                while select custVendTransOffset
                    where custVendTransOffset.NegInstStatus         != CustVendNegInstStatus::None      &&
                          custVendTransOffset.NegInstStatus         != CustVendNegInstStatus::Invoiced  &&
                          custVendTransOffset.LastSettleVoucher     == custVendTrans.Voucher            &&
                          custVendTransOffset.LastSettleAccountNum  == custVendTrans.AccountNum         &&
                          custVendTransOffset.LastSettleCompany     == custVendTrans.dataAreaId
                        outer join custVendTransBOELoc
                            where custVendTransBOELoc.AccountNum    == custVendTransOffset.AccountNum           &&
                                  custVendTransBOELoc.NegInstId     == custVendTransOffset.NegInstId            &&
                                  custVendTransBOELoc.NegInstStatus == CustVendNegInstStatus::Honored

                {
                    select maxof(NegInstSeqNum) from custVendTransBOE
                        where custVendTransBOE.AccountNum == custVendTransOffset.AccountNum &&
                              custVendTransBOE.NegInstId  == custVendTransOffset.NegInstId  &&
                              custVendTransBOE.TransDate  <= transDate;

                    seqNum = custVendTransBOE.NegInstSeqNum;
                    select firstonly custVendTransBOE
                        where custVendTransBOE.AccountNum     == custVendTransOffset.AccountNum  &&
                              custVendTransBOE.NegInstId      == custVendTransOffset.NegInstId   &&
                              custVendTransBOE.NegInstSeqNum  == seqNum                          &&
                              custVendTransBOE.NegInstStatus  == CustVendNegInstStatus::Honored  &&
                              custVendTransBOE.TransDate      <= transDate &&
                              custVendTransBOE.LastSettleVoucher == custVendTransBOELoc.LastSettleVoucher;

                    if (custVendTransBOE)
                    {
                        select RecId, TransDate, TransRecId, minof(DueDate),
                               minof(CashDiscDate), maxof(LastInterestDate),
                               sum(SettleAmountCur), sum(SettleAmountMST), sum(ExchAdjustment),
                               sum(UtilizedCashDisc) from custVendSettlementBOE
                            where custVendSettlementBOE.OffsetRecId == custVendTransBOE.RecId &&
                                  custVendSettlementBOE.TransDate   <= transDate;

                        custVendSettlementSum.DueDate            = min(custVendSettlementSum.DueDate, custVendSettlementBOE.DueDate);
                        custVendSettlementSum.CashDiscDate       = min(custVendSettlementSum.CashDiscDate, custVendSettlementBOE.CashDiscDate);
                        custVendSettlementSum.LastInterestDate   = max(custVendSettlementSum.LastInterestDate, custVendSettlementBOE.LastInterestDate);
                        custVendSettlementSum.SettleAmountCur   += custVendSettlementBOE.SettleAmountCur;
                        custVendSettlementSum.SettleAmountMST   += custVendSettlementBOE.SettleAmountMST;
                        custVendSettlementSum.ExchAdjustment    += custVendSettlementBOE.ExchAdjustment;
                        custVendSettlementSum.UtilizedCashDisc  += custVendSettlementBOE.UtilizedCashDisc;
                    }
                }

                custVendSettlement.TransRecId = custVendTrans.RecId;
                selectedCustVendSettlementSum.ins(custVendSettlementSum);

                selectedSettlementSum.insert(custVendTrans.RecId, true);
            }
            else
            {
                selectedCustVendSettlementSum.find(custVendSettlementSum);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>