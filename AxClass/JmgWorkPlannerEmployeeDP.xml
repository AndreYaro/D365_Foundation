<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgWorkPlannerEmployeeDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgWorkPlannerEmployeeDP</c> class is the Report Data Provider class for the work schedule
///    SSRS reports.
/// </summary>
[
    SRSReportParameterAttribute(classstr(JmgWorkPlannerEmployeeRDPContract)),
    SRSReportQueryAttribute(querystr(JmgWorkPlanner_Employee))
]
public class JmgWorkPlannerEmployeeDP extends SRSReportDataProviderBase
{
    JmgWorkPlannerEmployeeTmp   jmgWorkPlannerEmployeeTmp;
    JmgWorkPlannerDPHelper      helper;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getJmgWorkPlannerEmployeeTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts data into the <c>JmgWorkPlannerEmployeeTmp</c> temporary table.
    /// </summary>
    /// <returns>
    /// The data from the <c>JmgWorkPlannerEmployeeTmp</c> temporary table.
    /// </returns>
    [
        SRSReportDataSetAttribute('JmgWorkPlannerEmployee')
    ]
    public JmgWorkPlannerEmployeeTmp getJmgWorkPlannerEmployeeTmp()
    {
        select * from jmgWorkPlannerEmployeeTmp;
        return jmgWorkPlannerEmployeeTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the specified record to the database.
    /// </summary>
    /// <param name="_common">
    /// The record to insert.
    /// </param>
    protected void insert(Common _common)
    {
        _common.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new()
    {
        super();
        helper = new JmgWorkPlannerDPHelper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateFrom</Name>
				<Source><![CDATA[
        public date parmDateFrom()
    {
        return this.parmDataContract().parmDateFrom();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateTo</Name>
				<Source><![CDATA[
        public date parmDateTo()
    {
        return this.parmDataContract().parmDateTo();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateEmployeeDataAllWeeks</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Populates the internal temporary buffer with data for the specified worker and profile group.
    /// </summary>
    /// <param name="_personnelNumber">
    ///    The personnel number of the worker for which to populate data.
    /// </param>
    /// <param name="_jmgProfileGroupId">
    ///    The profile group for which to populate data.
    /// </param>
    protected void populateEmployeeDataAllWeeks(HcmPersonnelNumberId _personnelNumber, str _jmgProfileGroupId)
    {
        JmgProfileDate startWeekDate   = JmgWorkPlannerDPHelper::getFirstDayOfTheWeek(this.parmDateFrom());
        JmgProfileDate dateTo = this.parmDateTo();

        while (startWeekDate <= dateTo)
        {
            this.populateEmployeeDataOneWeek(_personnelNumber, _jmgProfileGroupId, startWeekDate);
            startWeekDate += 7;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateEmployeeDataOneWeek</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Populates the internal temporary buffer with data for the specified worker, profile group, and date.
    /// </summary>
    /// <param name="_personnelNumber">
    ///    The personnel number of the worker for which to populate data.
    /// </param>
    /// <param name="_jmgProfileGroupId">
    ///    The profile group for which to populate data.
    /// </param>
    /// <param name="_startWeekDate">
    ///    The start date of the week for which to populate data.
    /// </param>
    protected void populateEmployeeDataOneWeek(HcmPersonnelNumberId _personnelNumber, str _jmgProfileGroupId, date _startWeekDate)
    {
        jmgWorkPlannerEmployeeTmp.Monday    = helper.getProfile(_personnelNumber, _jmgProfileGroupId, _startWeekDate);
        jmgWorkPlannerEmployeeTmp.Tuesday   = helper.getProfile(_personnelNumber, _jmgProfileGroupId, _startWeekDate + 1);
        jmgWorkPlannerEmployeeTmp.Wednesday = helper.getProfile(_personnelNumber, _jmgProfileGroupId, _startWeekDate + 2);
        jmgWorkPlannerEmployeeTmp.Thursday  = helper.getProfile(_personnelNumber, _jmgProfileGroupId, _startWeekDate + 3);
        jmgWorkPlannerEmployeeTmp.Friday    = helper.getProfile(_personnelNumber, _jmgProfileGroupId, _startWeekDate + 4);
        jmgWorkPlannerEmployeeTmp.Saturday  = helper.getProfile(_personnelNumber, _jmgProfileGroupId, _startWeekDate + 5);
        jmgWorkPlannerEmployeeTmp.Sunday    = helper.getProfile(_personnelNumber, _jmgProfileGroupId, _startWeekDate + 6);
        jmgWorkPlannerEmployeeTmp.WeekNumber     = JmgWorkPlannerDPHelper::generateWeekHeader(_startWeekDate);
        jmgWorkPlannerEmployeeTmp.PersonalNumber = _personnelNumber;
        this.insert(jmgWorkPlannerEmployeeTmp);
        jmgWorkPlannerEmployeeTmp.clear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateJmgWorkPlannerEmployeeTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the internal temporary <c>JmgWorkPlannerEmployeeTmp</c> buffer.
    /// </summary>
    protected void populateJmgWorkPlannerEmployeeTmp()
    {
        JmgEmployee     jmgEmployee;
        HcmWorker       hcmWorker;
        SysQueryRun     qr = new SysQueryRun(this.parmQuery());

        while (qr.next())
        {
            jmgEmployee = qr.get(tablenum(JmgEmployee));
            hcmWorker = qr.get(tablenum(HcmWorker));
            this.populateEmployeeDataAllWeeks(hcmWorker.PersonnelNumber, jmgEmployee.ProfileGroupId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    /// <remarks>
    /// Provides the ability to write the report business logic. This method will be called by the  at
    /// runtime. The method can compute data and populate the data tables that will be returned to the .
    /// Note that this is a framework class. Customizing this class can cause problems with future upgrades
    /// to the software.
    /// </remarks>
    public void processReport()
    {
        helper.loadProfileGroups(this.parmDateFrom(), this.parmDateTo());
        super();
        this.populateJmgWorkPlannerEmployeeTmp();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
