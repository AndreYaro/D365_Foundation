<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalPost_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(LedgerJournalPost))]
public final class LedgerJournalPost_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>post</Name>
				<Source><![CDATA[
    public static void post(
        Common _record,
        TableId _tableId,
        NoYes _transferErrors,
        boolean _splitLargeJournal,
        boolean _suppressClientMessages,
        str _callingFormName,
        LedgerJournalEngine _ledgerJournalEngine,
        boolean _skipIL_RU,
        LedgerJournalCheckPostResults _results_RU,
        boolean _progressBarHide)
    {
        next post(
            _record,
            _tableId,
            _transferErrors,
            _splitLargeJournal,
            _suppressClientMessages,
            _callingFormName,
            _ledgerJournalEngine,
            _skipIL_RU,
            _results_RU,
            _progressBarHide);

        if (_splitLargeJournal && FeatureStateProvider::isFeatureEnabled(GeneralLedgerSimulationsFeature::instance()))
        {
            LedgerJournalTable ledgerJournalTable;
            LedgerJournalTrans ledgerJournalTrans;

            switch (_record.TableId)
            {
                case tableNum(LedgerJournalTable) :
                    ledgerJournalTable = _record;
                    break;

                case tableNum(LedgerJournalTrans) :
                    ledgerJournalTrans = _record;
                    ledgerJournalTable = LedgerJournalTable::find(ledgerJournalTrans.JournalNum);
                    break;
            }

            if (ledgerJournalTable.isEligableForDistributionBeforePost())
            {
                RecordSortedList journalsToPost = ledgerJournalTable.distributeJournalLines(false);

                if (journalsToPost.len() > 0)
                {
                    SimulationJournalReOpen_IT simulationJournalReOpen;
                    simulationJournalReOpen = SimulationJournalReOpen_IT::construct(ledgerJournalTable.JournalNum);
                    simulationJournalReOpen.parmIsPostingLedger(true);
                    simulationJournalReOpen.run();
                    return;
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>