<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EssWorkspaceFormExtensionAppSuiteEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the AppSuite module form extension events for the EssWorkspace form.
/// </summary>
class EssWorkspaceFormExtensionAppSuiteEventHandler
{
    boolean initialized;
    FormRun element;

    // Extension controls
    FormRealControl DraftCount, InReviewCount, ReturnedCount, ApprovedCount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(FormRun _formRunInstance)
    {
        initialized = false;
        element = _formRunInstance;

        // Register this extension with the main form
        element.registerExtensionInstance(classStr(EssWorkspaceFormExtensionAppSuiteEventHandler), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes this form extension handler instance.
    /// </summary>
    private void init()
    {
        if (initialized)
        {
            return;
        }

        initialized = true;

        // Cache of the extension controls
        DraftCount = element.design().controlName(formControlStr(EssWorkspace, DraftCount)) as FormRealControl;
        InReviewCount = element.design().controlName(formControlStr(EssWorkspace, InReviewCount)) as FormRealControl;
        ReturnedCount = element.design().controlName(formControlStr(EssWorkspace, ReturnedCount)) as FormRealControl;
        ApprovedCount = element.design().controlName(formControlStr(EssWorkspace, ApprovedCount)) as FormRealControl;

        // Register overrides
        DraftCount.registerOverrideMethod(methodStr(FormRealControl, jumpRef), methodStr(EssWorkspaceFormExtensionAppSuiteEventHandler, onDraftCountJumpRef), this);
        InReviewCount.registerOverrideMethod(methodStr(FormRealControl, jumpRef), methodStr(EssWorkspaceFormExtensionAppSuiteEventHandler, onInReviewCountJumpRef), this);
        ReturnedCount.registerOverrideMethod(methodStr(FormRealControl, jumpRef), methodStr(EssWorkspaceFormExtensionAppSuiteEventHandler, onReturnedCountJumpRef), this);
        ApprovedCount.registerOverrideMethod(methodStr(FormRealControl, jumpRef), methodStr(EssWorkspaceFormExtensionAppSuiteEventHandler, onApprovedCountJumpRef), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>EssWorkspace_Pre_init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form OnInitializing event handler for EssWorkspace form extension.
    /// </summary>
    /// <param name="_args">The args for the event.</param>
    [PreHandlerFor(formStr(EssWorkspace), formMethodStr(EssWorkspace, init))]
    public static void EssWorkspace_Pre_init(XppPrePostArgs _args)
    {
        FormRun formRun = _args.getThis();
        EssWorkspaceFormExtensionAppSuiteEventHandler extensionInstance = new EssWorkspaceFormExtensionAppSuiteEventHandler(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>EssWorkspace_Post_init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form OnInitialized event handler for EssWorkspace form extension.
    /// </summary>
    /// <param name="_args">The args for the event.</param>
    [PostHandlerFor(formStr(EssWorkspace), formMethodStr(EssWorkspace, init))]
    public static void EssWorkspace_Post_init(XppPrePostArgs _args)
    {
        FormRun formRun = _args.getThis();
        EssWorkspaceFormExtensionAppSuiteEventHandler extensionInstance = formRun.getExtensionInstance(classStr(EssWorkspaceFormExtensionAppSuiteEventHandler));
        extensionInstance.init();

        EssWorkspaceFormExtensionAppSuiteEventHandler::setTimesheetFields(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>EssWorkspace_refreshingFormCallback</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the EssWorkspace form refresh on callback.
    /// </summary>
    /// <param name="_element">The EssWorkspace form instance that raised the event.</param>
    [SubscribesTo(formStr(EssWorkspace), delegateStr(EssWorkspace, refreshingFormCallback))]
    public static void EssWorkspace_refreshingFormCallback(FormRun _element)
    {
        EssWorkspaceFormExtensionAppSuiteEventHandler::setTimesheetFields(_element);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTimesheetFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the visibility on the timesheet card and set the values based on the current period
    /// </summary>
   /// <param name="_element">The EssWorkspace form instance.</param>
    private static void setTimesheetFields(FormRun _element)
    {
        real allHours, draftHours, submittedHours, approvedHours, returnedHours, readyHours, transferredHours, postedHours, inReviewHours;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project))
            && hasMenuItemAccess(menuItemDisplayStr(TSTimesheetCreateFromEss), MenuItemType::Display))
        {
            ResourceRecId resource = ResourceFacade::findByCurrentWorker();

            if (resource)
            {
                ProjPeriodLine period = TSTimesheetTable::getAnyValidResourcePeriod(resource, DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));

                if (period)
                {
                    [allHours,
                 draftHours,
                 submittedHours,
                 approvedHours,
                 returnedHours,
                 readyHours,
                 transferredHours,
                 postedHours,
                 inReviewHours] = TSTimesheetSummaryLine::GetCurrentHoursByApprovalStatus(resource, period);

                    FormStaticTextControl PeriodHeader = _element.design().controlName(formControlStr(EssWorkspace, PeriodHeader)) as FormStaticTextControl;
                    FormStaticTextControl DateHeader = _element.design().controlName(formControlStr(EssWorkspace, DateHeader)) as FormStaticTextControl;

                    PeriodHeader.text(strFmt("@Timesheet:TimeSheetHours", strFmt("'%1'", period.PeriodName)));
                    DateHeader.text(strFmt("@SYS54524", date2StrUsr(period.PeriodFrom, DateFlags::FormatAll), date2StrUsr(period.PeriodTo, DateFlags::FormatAll)));
                }
            }

            boolean timeSheetsFound = ((draftHours + returnedHours + inReviewHours + approvedHours + postedHours) > 0);
            FormStaticTextControl NoTimesheetsFound = _element.design().controlName(formControlStr(EssWorkspace, NoTimesheetsFound)) as FormStaticTextControl;
            FormGroupControl TimesheetHeader = _element.design().controlName(formControlStr(EssWorkspace, TimesheetHeader)) as FormGroupControl;
            FormGroupControl StatusCountGroup = _element.design().controlName(formControlStr(EssWorkspace, StatusCountGroup)) as FormGroupControl;
            FormRealControl DraftCount = _element.design().controlName(formControlStr(EssWorkspace, DraftCount)) as FormRealControl;
            FormRealControl ReturnedCount = _element.design().controlName(formControlStr(EssWorkspace, ReturnedCount)) as FormRealControl;
            FormRealControl InReviewCount = _element.design().controlName(formControlStr(EssWorkspace, InReviewCount)) as FormRealControl;
            FormRealControl ApprovedCount = _element.design().controlName(formControlStr(EssWorkspace, ApprovedCount)) as FormRealControl;

            NoTimesheetsFound.visible(!timeSheetsFound);
            TimesheetHeader.visible(timeSheetsFound);
            StatusCountGroup.visible(timeSheetsFound);
            DraftCount.realValue(draftHours);
            ReturnedCount.realValue(returnedHours);
            InReviewCount.realValue(inReviewHours);
            ApprovedCount.realValue(approvedHours + postedHours);
        }
        else
        {
            FormGroupControl Timesheets = _element.design().controlName(formControlStr(EssWorkspace, Timesheets)) as FormGroupControl;
            Timesheets.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runTimesheetMenuItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Execute the menu items needed to open timesheets so the callback works as expected.
    /// </summary>
    /// <param name="_element">The EssWorkspace form instance.</param>
    /// <param name="_menuItemName">The menuitem that need to be run.</param>
    private void runTimesheetMenuItems(FormRun _formRun, str _menuItemName)
    {
        Args args = new Args();
        args.menuItemName(_menuItemName);
        args.caller(_formRun);
        args.parm(ESSCommonHelper::EssWorkspace);

        new MenuFunction(_menuItemName, MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDraftCountJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Custom override method for handling the DraftCount control's jumpRef.
    /// </summary>
    /// <param name = "_sender">The control initiating the jumpRef.</param>
    private void onDraftCountJumpRef(FormRealControl _sender)
    {
        FormRun formRun = _sender.formRun();
        EssWorkspaceFormExtensionAppSuiteEventHandler extensionInstance = formRun.getExtensionInstance(classStr(EssWorkspaceFormExtensionAppSuiteEventHandler));
        extensionInstance.init();
        extensionInstance.runTimesheetMenuItems(formRun, menuItemDisplayStr(TSTimesheetEntryMyDraftTimesheets));
    }

]]></Source>
			</Method>
			<Method>
				<Name>onInReviewCountJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Custom override method for handling the InReview control's jumpRef.
    /// </summary>
    /// <param name = "_sender">The control initiating the jumpRef.</param>
    private void onInReviewCountJumpRef(FormRealControl _sender)
    {
        FormRun formRun = _sender.formRun();
        EssWorkspaceFormExtensionAppSuiteEventHandler extensionInstance = formRun.getExtensionInstance(classStr(EssWorkspaceFormExtensionAppSuiteEventHandler));
        extensionInstance.init();
        extensionInstance.runTimesheetMenuItems(formRun, menuItemDisplayStr(TSTimesheetEntryMyInReviewTimesheets));
    }

]]></Source>
			</Method>
			<Method>
				<Name>onReturnedCountJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Custom override method for handling the ReturnedCount control's jumpRef.
    /// </summary>
    /// <param name = "_sender">The control initiating the jumpRef.</param>
    private void onReturnedCountJumpRef(FormRealControl _sender)
    {
        FormRun formRun = _sender.formRun();
        EssWorkspaceFormExtensionAppSuiteEventHandler extensionInstance = formRun.getExtensionInstance(classStr(EssWorkspaceFormExtensionAppSuiteEventHandler));
        extensionInstance.init();
        extensionInstance.runTimesheetMenuItems(formRun, menuItemDisplayStr(TSTimesheetEntryMyReturnedTimesheets));
    }

]]></Source>
			</Method>
			<Method>
				<Name>onApprovedCountJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Custom override method for handling the ApprovedCount control's jumpRef.
    /// </summary>
    /// <param name = "_sender">The control initiating the jumpRef.</param>
    private void onApprovedCountJumpRef(FormRealControl _sender)
    {
        FormRun formRun = _sender.formRun();
        EssWorkspaceFormExtensionAppSuiteEventHandler extensionInstance = formRun.getExtensionInstance(classStr(EssWorkspaceFormExtensionAppSuiteEventHandler));
        extensionInstance.init();
        extensionInstance.runTimesheetMenuItems(formRun, menuItemDisplayStr(TSTimesheetEntryMyApprovedTimesheets));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>