<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseStatusChangeForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWarehouseStatusChangeForm</c> class contains the business logic of the <c>WHSWarehouseStatusChange</c> form.
/// </summary>
public class WHSWarehouseStatusChangeForm
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>btnChangeStatus</Name>
				<Source><![CDATA[
	/// <summary>
	/// Changes status of items with a specified status in a specified warehouse.
	/// </summary>
	/// <param name="_whsInventStatus">
	/// Current status of the items in warehouse.
	/// </param>
	/// <param name="_statusTo">
	/// Status of items to be changed to.
	/// </param>
	/// <param name="_inventSiteId">
	/// Site id.
	/// </param>
	/// <param name="_inventLocationId">
	/// Warehouse id.
	/// </param>
	/// <param name="_whsInventStatusId">
	/// Current status id.
	/// </param>
	/// <exception cref="Exception::Error">
	/// Exception is thrown when status is not selected.
	/// </exception>
	/// <exception cref="Exception::Error">
	/// Exception is thrown when to and from status are same.
	/// </exception>
    public void btnChangeStatus(WHSInventStatus    _whsInventStatus,
                                str                _statusTo,
                                InventSiteId       _inventSiteId,
                                InventLocationId   _inventLocationId,
                                WHSInventStatusId  _whsInventStatusId)
    {
        InventDim       inventDim;

        if (!_whsInventStatus || !_statusTo)
        {
            throw error("@WAX3365");
        }

        if (_whsInventStatus.InventStatusId == _statusTo)
        {
            throw error("@WAX3391");
        }

        DialogButton diagBtn = Box::yesNo(strfmt("@WAX3392", _whsInventStatus.InventStatusId, _statusTo),
                                          DialogButton::No);

        if (diagBtn == DialogButton::Yes)
        {
            inventDim.InventSiteId      = _inventSiteId;
            inventDim.InventLocationId  = _inventLocationId;
            inventDim.InventStatusId    = _whsInventStatusId;
            WHSinventStatus::convertStatus(inventDim, _statusTo);
            Info("@WAX3425");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>btnDetails_clicked</Name>
				<Source><![CDATA[
	/// <summary>
	/// Handles when details button is clicked.
	/// </summary>
	/// <param name="_whsInventStatus">
	/// Inventory status that is selected in form.
	/// </param>
	/// <param name="_statusTo">
	/// To status that is selected in form.
	/// </param>
	/// <param name="_inventSiteId">
	/// Site id that is selected in form.
	/// </param>
	/// <param name="_inventLocationId">
	/// Warehouse id that is selected in form.
	/// </param>
	/// <exception cref="Exception::Error">
	/// Exception is thrown if status is not selected.
	/// </exception>
	/// <exception cref="Exception::Error">
	/// Exception is thrown if to and from status are same.
	/// </exception>
    public void btnDetails_clicked( WHSInventStatus    _whsInventStatus,
                                    str                _statusTo,
                                    InventSiteId       _inventSiteId,
                                    InventLocationId   _inventLocationId)
    {
        InventDim   inventDim;
        Args        args = new Args();

        if (_whsInventStatus.InventStatusId == _statusTo)
        {
            throw error("@WAX:WHSWarehouseStatusChangeError");
        }

        if (!_whsInventStatus || !_statusTo)
        {
            throw error("@WAX3365");
        }

        inventDim.InventSiteId = _inventSiteId;
        inventDim.InventLocationId = _inventLocationId;
        inventDim.InventStatusId = _whsInventStatus.InventStatusId;
        inventDim = InventDim::findOrCreate(inventDim);

        args.name(formStr(WHSTmpStatusChangeDetails));
        args.record(inventDim);
        args.parm(_statusTo);

        FormRun formRun = classFactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.wait();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>