<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPurchInvoiceJournalPost_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchInvoiceJournalPost))]
public final class ProjPurchInvoiceJournalPost_Extension
{
    private boolean hasProjectLine = false;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postCustVendPostLedgerVoucherEnd</Name>
				<Source><![CDATA[
    protected void postCustVendPostLedgerVoucherEnd()
    {
        next postCustVendPostLedgerVoucherEnd();
                
        if (isConfigurationkeyEnabled(configurationKeyNum(Project)) && this.hasProjectLine)
        {
            if (this.purchTable)
            {
                ProjOpsFinancialsLogger logger = ProjOpsFinancialsLogger::createLogger(classStr(ProjPurchInvoiceJournalPost_Extension));
                logger.logInformation(strFmt('Posting project PO invoice to GL. PurchId: %1', this.purchTable.PurchId));
            }
            else if (this.vendInvoiceInfoTable)
            {
                ProjOpsFinancialsLogger logger = ProjOpsFinancialsLogger::createLogger(classStr(ProjPurchInvoiceJournalPost_Extension));
                logger.logInformation(strFmt('Posting project vendor invoice to GL. InvoiceNum: %1', this.vendInvoiceInfoTable.Num));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSingleLine</Name>
				<Source><![CDATA[
    protected void postSingleLine(boolean _countryRegion_RU,
                                  boolean _hasQualityOrder,
                                  boolean _isExciseEnableIN,
                                  boolean _isVATEnableIN,
                                  boolean _isCustomsEnableIN,
                                  boolean _isConfigurationkeyRetailEnabled)
    {
        next postSingleLine(_countryRegion_RU, _hasQualityOrder, _isExciseEnableIN, _isVATEnableIN, _isCustomsEnableIN, _isConfigurationkeyRetailEnabled);

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            if (this.purchLine && this.purchLine.ProjId)
            {
                this.hasProjectLine = true;
                ProjOpsFinancialsLogger logger = ProjOpsFinancialsLogger::createLogger(classStr(ProjPurchInvoiceJournalPost_Extension));

                logger.logInformation(strFmt('Posting project PO line invoice. PurchId: %1, LineNum: %2, ProjId: %3, TransId: %4',
                    this.purchLine.PurchId, this.purchLine.LineNumber, this.purchLine.ProjId, this.purchLine.ProjTransId));
            }
            else if (this.vendInvoiceInfoTable && this.vendInvoiceInfoLine)
            {
                VendInvoiceInfoLine_Project vendInvoiceInfoLine_Project = VendInvoiceInfoLine_Project::findByVendInvoiceInfoLineRefRecId(this.vendInvoiceInfoLine.RecId);
                if (vendInvoiceInfoLine_Project)
                {
                    this.hasProjectLine = true;
                    ProjOpsFinancialsLogger logger = ProjOpsFinancialsLogger::createLogger(classStr(ProjPurchInvoiceJournalPost_Extension));

                    logger.logInformation(strFmt('Posting project vendor invoice line. InvoiceNum: %1, LineNum: %2, ProjId: %3, TransId: %4',
                        this.vendInvoiceInfoTable.Num, this.vendInvoiceInfoLine.LineNum, vendInvoiceInfoLine_Project.ProjId, vendInvoiceInfoLine_Project.ProjTransId));
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>