<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchLineCancelManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PurchLineCancelManager</c> class is used for canceling a purchase line workflow.
/// </summary>
/// <remarks>
///    This class inherits from the <c>WorkflowCancelManager</c> class and handles the update of the
///    purchase line record when the Cancel button has been pressed. The default dialog box and cancel
///    functionality from the <c>WorkflowCancelManager</c> class is reused.
/// </remarks>
public class    PurchLineCancelManager
extends         WorkflowCancelManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        private void  new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDocument</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes business logic when the worflow is canceled.
    /// </summary>
    /// <param name="_args">
    ///    An instance of the <c>Args</c> class.
    /// </param>
    /// <remarks>
    ///    This method is implemented for partners to be easily able to extend the purchase order workflow if
    ///    they want specific code to be executed when a workflow is canceled.
    /// </remarks>
    public void updateDocument(Args _args)
    {
        super(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PurchLineCancelManager  construct()
    {
        return new PurchLineCancelManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void  main(Args _args)
    {
        PurchLineCancelManager   workflowCancelManager = PurchLineCancelManager::construct();

        workflowCancelManager.run(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>