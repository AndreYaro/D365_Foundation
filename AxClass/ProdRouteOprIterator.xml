<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdRouteOprIterator</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdRouteOprIterator
{
    container   routeQueue;
    int         qty;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        void insert(ProdRoute _prodRoute)
    {
        qty       += 1;
        routeQueue = conins(routeQueue,qty,[_prodRoute.RecId]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertOpr</Name>
				<Source><![CDATA[
        void insertOpr(
        ProdId _prodId,
        OprNum _oprNum)
    {
        ProdRoute    prodRoute;

        while select prodRoute
            order by OprPriority asc
            where prodRoute.ProdId == _prodId
               && prodRoute.OprNum == _oprNum
        {
            this.insert(prodRoute);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        void new(
        ProdId     _prodId,
        OprNum     _oprNum
        )
    {
        ProdRoute   prodRoute;
        boolean     oprVisited[,50];

        qty = 0;
        routeQueue            = connull();
        OprNum  nextOpr       = _oprNum;
        oprVisited[0] = false;

        prodRoute.recordLevelSecurity(false);
        while (nextOpr)
        {
            select OprNum, OprNumNext from prodRoute
                where prodRoute.ProdId      == _prodId
                   && prodRoute.OprNum      == nextOpr
                   && prodRoute.OprPriority == RouteOprPriority::Primary;

            if (oprVisited[prodRoute.OprNum])
            {
                throw Exception::Deadlock;
            }
            oprVisited[prodRoute.OprNum] = true;

            nextOpr = prodRoute.OprNumNext;
            this.insertOpr(_prodId,prodRoute.OprNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
        ProdRoute next()
    {
        ProdRoute   prodRoute;

        if (!qty)
        {
            throw error("@SYS19182");
        }

        RecId recId = conpeek(routeQueue,1);

        select firstonly prodRoute
            where prodRoute.RecId == recId;

        routeQueue  = condel(routeQueue,1,1);
        qty        -= 1;

        return prodRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
        int qty()
    {
        return qty;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
