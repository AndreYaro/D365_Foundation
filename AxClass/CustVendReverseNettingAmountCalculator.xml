<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendReverseNettingAmountCalculator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CustVendReverseNettingAmountCalculator implements INettingAmountCalculator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void calculate(NettingAmountDistribution _distribution)
    {
        CustVendNettingExecution execution = CustVendNettingExecution::find(_distribution.getExecutionRecId());
        CustTrans custTrans;
        CustTransOpen custTransOpen;

        changecompany(execution.CreditCompany)
        {
            custTrans = CustTrans::find(execution.CreditTransId);
            custTransOpen = CustTransOpen::findRefId(custTrans.RecId);
        }

        VendTrans vendTrans;
        VendTransOpen vendTransOpen;
        changecompany(execution.DebitCompany)
        {
            vendTrans = VendTrans::find(execution.DebitTransId);
            vendTransOpen = VendTransOpen::findRefId(vendTrans.RecId);
        }

        _distribution.setCreditTotalAmountCur(custTrans.AmountCur);
        _distribution.setDebitTotalAmountCur(-vendTrans.AmountCur);

        Map debitAmountDistribution = new Map(Types::Container, Types::Real);
        debitAmountDistribution.add([tableNum(VendTransOpen), vendTransOpen.RecId], vendTransOpen.AmountCur);

        Map creditAmountDistribution = new Map(Types::Container, Types::Real);
        creditAmountDistribution.add([tableNum(CustTransOpen), custTransOpen.RecId], custTransOpen.AmountCur);

        _distribution.setCreditDistribution(creditAmountDistribution);
        _distribution.setDebitDistribution(debitAmountDistribution);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>