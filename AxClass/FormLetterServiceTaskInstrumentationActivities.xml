<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormLetterServiceTaskInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FormLetterServiceTaskInstrumentationActivities</c> class provides activity contexts to the form letter parm data instrumentation logging.
/// </summary>
internal final class FormLetterServiceTaskInstrumentationActivities
{
    private const str CreateTasks = 'CreateTasks';
    private const str CreateFormletterParmDataTasks = 'CreateFormletterParmDataTasks';
    private const str CreateFormletterServiceTasks = 'CreateFormletterServiceTasks';
    private const str Run = 'Run';

    private const str ActivityPreFix = 'FormLetterServiceTask.';

    private const str EnableParallelismProperty = 'enableParallelism';
    private const str TaskSizeProperty = 'taskSize';
    private const str TaskSizeLinesProperty = 'taskSizeNoOfLines';
    private const str UseBatchTaskLineNumberProperty = 'useBatchTaskLineNumber';

    private FormLetterInstrumentationLogger logger;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(FormLetterInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static FormLetterServiceTaskInstrumentationActivities newFromLogger(FormLetterInstrumentationLogger _logger)
    {
        return new FormLetterServiceTaskInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return logger.activityContext(_activityName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTasks</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext createTasks(boolean _enableParallelism)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityPreFix + CreateTasks);
        
        activityContext
            .addCustomProperty(EnableParallelismProperty, int642Str(_enableParallelism));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFormletterParmDataTasks</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext createFormletterParmDataTasks(
        FormletterBatchTaskSize _taskSize,
        FormletterBatchTaskSizeLines _taskSizeNoOfLines,
        boolean _useBatchTaskLineNumber)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityPreFix + CreateFormletterParmDataTasks);
        
        activityContext
            .addCustomProperty(TaskSizeProperty, int2Str(_taskSize))
            .addCustomProperty(TaskSizeLinesProperty, int2Str(_taskSizeNoOfLines))
            .addCustomProperty(UseBatchTaskLineNumberProperty, int2Str(_useBatchTaskLineNumber));
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFormletterServiceTasks</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext createFormletterServiceTasks()
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityPreFix + CreateFormletterServiceTasks);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext run()
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityPreFix + Run);
        
        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>