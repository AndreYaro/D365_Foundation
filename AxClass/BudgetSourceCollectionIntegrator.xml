<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetSourceCollectionIntegrator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>BudgetSourceCollectionIntegrator</c> is an abstract class that defines the data management interface for a collection of <c>BudgetSource</c> table records.
/// </summary>
public abstract class BudgetSourceCollectionIntegrator
{
    RecId commonId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findBudgetSourceIds</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>BudgetSource</c> records that are associated with the common record specified by the
    ///    common record ID.
    /// </summary>
    /// <returns>
    ///    A set of IDs of the <c>BudgetSource</c> records that are associated with the common record
    ///    specified by the common record ID.
    /// </returns>
    public abstract Set findBudgetSourceIds()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetCheckResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>BudgetCheckResult</c> value that is associated with the specified <c>Common</c> record.
    /// </summary>
    /// <param name="_doCheckLedgerBudgetControlEnabled">
    /// A Boolean value that indicates whether to check that budget control is enabled on the primary
    /// ledger of the current legal entity before trying to get the <c>BudgetCheckResult</c> value;
    /// optional.
    /// </param>
    /// <returns>
    /// The <c>BudgetCheckResult</c> value of the <c>BudgetSource</c> record that is associated with the
    /// <c>Common</c> record.
    /// </returns>
    public abstract BudgetCheckResult getBudgetCheckResult(boolean _doCheckLedgerBudgetControlEnabled = true)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCommonId</Name>
				<Source><![CDATA[
    protected RecId parmCommonId(RecId _commonId = commonId)
    {
        commonId = _commonId;

        return commonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBudgetSourceCollectionIntegrator</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an instance of the <c>BudgetSourceCollectionIntegrator</c> subclass by using the
    ///    specified <c>Common</c> record.
    /// </summary>
    /// <param name="_common">
    ///    The <c>Common</c> record that is associated with the <c>BudgetSource</c> records.
    /// </param>
    /// <returns>
    ///    An instance of the <c>BudgetSourceCollectionIntegrator</c> subclass.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    An unsupported <c>Common</c> record was specified.
    /// </exception>
    public static BudgetSourceCollectionIntegrator newBudgetSourceCollectionIntegrator(Common _common)
    {
        BudgetSourceCollectionIntegrator budgetSourceCollectionIntegrator = BudgetSourceCollectionIntegrator::initializeNewBudgetSourceCollectionIntegrator(_common);

        if (!budgetSourceCollectionIntegrator)
        {
            // Not supported.
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        return budgetSourceCollectionIntegrator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeNewBudgetSourceCollectionIntegrator</Name>
				<Source><![CDATA[
    private static BudgetSourceCollectionIntegrator initializeNewBudgetSourceCollectionIntegrator(Common _common)
    {
        BudgetSourceCollectionIntegrator budgetSourceCollectionIntegrator;

        SysPluginMetadataCollection metadataCollection = new SysPluginMetadataCollection();
        metadataCollection.SetManagedValue(classStr(BudgetSourceIIntegratorResolver), tableId2Name(_common.tableId));

        BudgetSourceIIntegratorResolver resolver = SysPluginFactory::Instance(identifierStr(Dynamics.AX.Application), classStr(BudgetSourceIIntegratorResolver), metadataCollection);
        budgetSourceCollectionIntegrator = BudgetSourceCollectionIntegratorFactory::create(resolver, _common);

        return budgetSourceCollectionIntegrator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDocumentTracked</Name>
				<Source><![CDATA[
    internal boolean isDocumentTracked()
    {
        boolean isDocumentTracked;

        if (BudgetControlConfiguration::isControlConfigured())
        {
            var logger = BudgetControlInstrumentationLogger::createLogger(classStr(BudgetSourceCollectionIntegrator));

            using (var activityContext = logger.processing().isDocumentTracked())
            {
                Set budgetSourceIds = this.findBudgetSourceIds();

                if (budgetSourceIds != null && !budgetSourceIds.empty())
                {
                    SetEnumerator budgetSourceIdSetEnumerator = budgetSourceIds.getEnumerator();
                    while (!isDocumentTracked && budgetSourceIdSetEnumerator.moveNext())
                    {
                        BudgetSourceInquiryDetails budgetSourceInquiryDetails = BudgetSourceInquiryDetails::construct(budgetSourceIdSetEnumerator.current());

                        while (!isDocumentTracked && budgetSourceInquiryDetails.next())
                        {
                            isDocumentTracked = budgetSourceInquiryDetails.currentAmountTracked() != 0;
                        }
                    }

                    logger.logBucketizedCount(activityContext, budgetSourceIds.elements());
                }
            }
        }

        return isDocumentTracked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDocumentBudgetTracked</Name>
				<Source><![CDATA[
    internal static boolean isDocumentBudgetTracked(Common _common)
    {
        boolean isDocumentTracked;

        if (_common)
        {
            BudgetSourceCollectionIntegrator budgetSourceCollectionIntegrator = BudgetSourceCollectionIntegrator::newBudgetSourceCollectionIntegrator(_common);
            isDocumentTracked = budgetSourceCollectionIntegrator && budgetSourceCollectionIntegrator.isDocumentTracked();
        }

        return isDocumentTracked;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>