<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TSTimesheetCustomField</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TSTimesheetCustomField</c> class is the data contract class that represents information about a custom field for timesheet functionality.
/// </summary>
[DataContractAttribute]
public class TSTimesheetCustomField
{
    private Types                       fieldBaseType;
    private TSCustomFieldExtendedType   fieldExtendedType;
    private TSCustomFieldSection        fieldSection;
    private TableNameShort              tableName;
    private FieldNameShort              fieldName;
    
    private str     label;
    private NoYes   isEditable;
    private NoYes   isMandatory;

    private str     stringValue;
    private int     intValue;
    private int64   int64Value;
    private real    realValue;
    private boolean booleanValue;
    private guid    guidValue;
    private date    dateValue;

    private List    stringOptions;
    private int     stringLength;

    private int     numberOfDecimals;

    private int     orderSequence; // Lowest number appears first on consuming user interface.

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes a new <c>TSTimesheetCustomField</c> object.
    /// </summary>
    /// <param name="_tableId">
    ///     The <c>TableId</c> for the custom field.
    /// </param>
    /// <param name="FieldId">
    ///     The <c>_fieldId</c> for the custom field.
    /// </param>
    /// <returns>
    ///     A newly populated <c>TSTimesheetCustomField</c> object.
    /// </returns>
    public static TSTimesheetCustomField newFromMetadata(TableId _tableId, FieldId _fieldId)
    {
        TSTimesheetCustomField tsTimesheetCustomField = new TSTimesheetCustomField();

        SysDictField dict = new SysDictField(_tableId, _fieldId);
        tsTimesheetCustomField.parmFieldBaseType(dict.baseType());
        tsTimesheetCustomField.parmTableName(dict.tableName());
        tsTimesheetCustomField.parmFieldName(dict.name());
        tsTimesheetCustomField.parmLabel(dict.label());
        tsTimesheetCustomField.parmIsEditable(dict.allowEdit());
        tsTimesheetCustomField.parmIsMandatory(dict.mandatory());

        SysDictType sysDictType = new SysDictType(dict.typeId());

        if (sysDictType)
        {
            if (sysDictType.baseType() == Types::String)
            {
                tsTimesheetCustomField.parmStringLength(sysDictType.stringLen());
            }
            else if (sysDictType.baseType() == Types::Real)
            {
                tsTimesheetCustomField.parmNumberOfDecimals(sysDictType.noOfDecimals());
            }
        }

        return tsTimesheetCustomField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldBaseType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>fieldBaseType</c> parameter.
    /// </summary>
    /// <param name="_fieldBaseType">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>fieldBaseType</c> parameter.
    /// </returns>
    [DataMemberAttribute('fieldBaseType')]
    public Types parmFieldBaseType(Types _fieldBaseType = fieldBaseType)
    {
        fieldBaseType = _fieldBaseType;
        return fieldBaseType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldExtendedType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>fieldExtendedType</c> parameter.
    /// </summary>
    /// <param name="_fieldExtendedType">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>fieldExtendedType</c> parameter.
    /// </returns>
    [DataMemberAttribute('fieldExtendedType')]
    public TSCustomFieldExtendedType parmFieldExtendedType(TSCustomFieldExtendedType _fieldExtendedType = fieldExtendedType)
    {
        fieldExtendedType = _fieldExtendedType;
        return fieldExtendedType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldSection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>fieldSection</c> parameter.
    /// </summary>
    /// <param name="_fieldSection">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>fieldSection</c> parameter.
    /// </returns>
    [DataMemberAttribute('fieldSection')]
    public TSCustomFieldSection parmFieldSection(TSCustomFieldSection _fieldSection = fieldSection)
    {
        fieldSection = _fieldSection;
        return fieldSection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>fieldName</c> parameter.
    /// </summary>
    /// <param name="_fieldName">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>fieldName</c> parameter.
    /// </returns>
    [DataMemberAttribute('fieldName')]
    public FieldNameShort parmFieldName(FieldNameShort _fieldName = fieldName)
    {
        fieldName = _fieldName;
        return fieldName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>tableName</c> parameter.
    /// </summary>
    /// <param name="_tableName">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>tableName</c> parameter.
    /// </returns>
    [DataMemberAttribute('tableName')]
    public TableNameShort parmTableName(TableNameShort _tableName = tableName)
    {
        tableName = _tableName;
        return tableName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsEditable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>isEditable</c> parameter.
    /// </summary>
    /// <param name="_isEditable">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>isEditable</c> parameter.
    /// </returns>
    [DataMemberAttribute('isEditable')]
    public NoYes parmIsEditable(NoYes _isEditable = isEditable)
    {
        isEditable = _isEditable;
        return isEditable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>isMandatory</c> parameter.
    /// </summary>
    /// <param name="_isMandatory">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>isMandatory</c> parameter.
    /// </returns>
    [DataMemberAttribute('isMandatory')]
    public NoYes parmIsMandatory(NoYes _isMandatory = isMandatory)
    {
        isMandatory = _isMandatory;
        return isMandatory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>label</c> parameter.
    /// </summary>
    /// <param name="_label">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>label</c> parameter.
    /// </returns>
    [DataMemberAttribute('label')]
    public str parmLabel(str _label = label)
    {
        label = _label;
        return label;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBooleanValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>booleanValue</c> parameter.
    /// </summary>
    /// <param name="_booleanValue">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>booleanValue</c> parameter.
    /// </returns>
    [DataMemberAttribute('booleanValue')]
    public boolean parmBooleanValue(boolean _booleanValue = booleanValue)
    {
        booleanValue = _booleanValue;
        return booleanValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGuidValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>guidValue</c> parameter.
    /// </summary>
    /// <param name="_guidValue">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>guidValue</c> parameter.
    /// </returns>
    [DataMemberAttribute('guidValue')]
    public guid parmGuidValue(guid _guidValue = guidValue)
    {
        guidValue = _guidValue;
        return guidValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInt64Value</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>int64Value</c> parameter.
    /// </summary>
    /// <param name="_int64Value">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>int64Value</c> parameter.
    /// </returns>
    [DataMemberAttribute('int64Value')]
    public int64 parmInt64Value(int64 _int64Value = int64Value)
    {
        int64Value = _int64Value;
        return int64Value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>intValue</c> parameter.
    /// </summary>
    /// <param name="_intValue">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>intValue</c> parameter.
    /// </returns>
    [DataMemberAttribute('intValue')]
    public int parmIntValue(int _intValue = intValue)
    {
        intValue = _intValue;
        return intValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRealValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>realValue</c> parameter.
    /// </summary>
    /// <param name="_realValue">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>realValue</c> parameter.
    /// </returns>
    [DataMemberAttribute('realValue')]
    public real parmRealValue(real _realValue = realValue)
    {
        realValue = _realValue;
        return realValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStringValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>stringValue</c> parameter.
    /// </summary>
    /// <param name="_stringValue">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>stringValue</c> parameter.
    /// </returns>
    [DataMemberAttribute('stringValue')]
    public str parmStringValue(str _stringValue = stringValue)
    {
        stringValue = _stringValue;
        return stringValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>dateValue</c> parameter.
    /// </summary>
    /// <param name="_dateValue">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>dateValue</c> parameter.
    /// </returns>
    [DataMemberAttribute('dateValue')]
    public date parmDateValue(date _dateValue = dateValue)
    {
        dateValue = _dateValue;
        return dateValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStringOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>stringOptions</c> parameter.
    /// </summary>
    /// <param name="_stringOptions">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>stringOptions</c> parameter.
    /// </returns>
    [DataMemberAttribute('stringOptions'), AifCollectionTypeAttribute('return', Types::String)]
    public List parmStringOptions(List _stringOptions = stringOptions)
    {
        stringOptions = _stringOptions;
        return stringOptions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStringLength</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>stringLength</c> parameter.
    /// </summary>
    /// <param name="_stringLength">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>stringLength</c> parameter.
    /// </returns>
    [DataMemberAttribute('stringLength')]
    public int parmStringLength(int _stringLength = stringLength)
    {
        stringLength = _stringLength;
        return stringLength;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumberOfDecimals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>numberOfDecimals</c> parameter.
    /// </summary>
    /// <param name="_numberOfDecimals">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>numberOfDecimals</c> parameter.
    /// </returns>
    [DataMemberAttribute('numberOfDecimals')]
    public int parmNumberOfDecimals(int _numberOfDecimals = numberOfDecimals)
    {
        numberOfDecimals = _numberOfDecimals;
        return numberOfDecimals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>orderSequence</c> parameter.
    /// </summary>
    /// <param name="_orderSequence">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>orderSequence</c> parameter.
    /// </returns>
    [DataMemberAttribute('orderSequence')]
    public int parmOrderSequence(int _orderSequence = orderSequence)
    {
        orderSequence = _orderSequence;
        return orderSequence;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>