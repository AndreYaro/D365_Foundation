<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SuppItemCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class SuppItemCreate extends RunBase
{
    SuppItem        suppItem;
    SalesPurchTable salesPurchTable;
    container       packedTmpSuppItemList;
    Counter         progressCounter;
    boolean         isLineCreated;

    #DEFINE.CurrentVersion(3)

    #LOCALMACRO.CurrentList
        salesPurchTable,
        packedTmpSuppItemList,
        isLineCreated
    #ENDMACRO

    // <GIN>
    #ISOCountryRegionCodes
    boolean         isCountryRegion_IN;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcSuppItem</Name>
				<Source><![CDATA[
    protected void calcSuppItem(HeadingLine _headingLine)
    {
        suppItem        = SuppItem::newSuppItem(salesPurchTable, _headingLine);

        suppItem.createTmpSuppItem();
        packedTmpSuppItemList = suppItem.getPackedTmpSuppItemList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAllowCreate</Name>
				<Source><![CDATA[
    protected boolean checkAllowCreate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createExtensionLine_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the extension line.
    /// </summary>
    /// <param name="_transactionLine">
    /// The transaction line.
    /// </param>
    /// <param name="_extensionLine">
    /// The extension line.
    /// </param>
    protected void createExtensionLine_IN(
        SalesPurchJournalLine       _transactionLine,
        TaxModelDocLineExtensionIN  _extensionLine)
    {
        TaxModelDocLineExtensionIN extension;

        extension = TaxModelDocLineExtensionIN::findByBaseTable(_transactionLine.SourceTableId, _transactionLine.SourceRecId);

        extension.TaxModelDocLineExtensionIN::initFromBaseTable(_transactionLine);
        extension.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLine</Name>
				<Source><![CDATA[
    abstract protected void createLine(TmpSuppItem _tmpSuppItem)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog box can be either built by using the <c>Dialog</c> class or by using a class that is
    /// created in the Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        Args parameters = new Args();

        parameters.name(formStr(SuppItemEditItems));
        parameters.caller(this);

        FormRun suppItemEditItems = classfactory.formRunClass(parameters);

        return suppItemEditItems;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();

        // <GIN>
        isCountryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsLineCreated</Name>
				<Source><![CDATA[
    public boolean parmIsLineCreated(boolean _isLineCreated = isLineCreated)
    {
        isLineCreated = _isLineCreated;
        return isLineCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackedTmpSuppItemList</Name>
				<Source><![CDATA[
    public container parmPackedTmpSuppItemList(container _packedTmpSuppItemList = packedTmpSuppItemList)
    {
        packedTmpSuppItemList = _packedTmpSuppItemList;
        return packedTmpSuppItemList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchTable</Name>
				<Source><![CDATA[
    public SalesPurchTable parmSalesPurchTable(SalesPurchTable _salesPurchTable = salesPurchTable)
    {
        salesPurchTable = _salesPurchTable;
        return salesPurchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>progressUpdate</Name>
				<Source><![CDATA[
    protected void progressUpdate()
    {
        progressCounter++;
        progress.setCount(progressCounter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        List tmpSuppItemlist = List::create(packedTmpSuppItemList);

        this.progressInit("@SYS58779", tmpSuppItemlist.elements(), #Avifilemove);

        setPrefix("@SYS58779");

        if (this.checkAllowCreate())
        {
            ttsbegin;

            ListEnumerator listEnumerator = tmpSuppItemlist.getEnumerator();

            while (listEnumerator.moveNext())
            {
                TmpSuppItem tmpSuppItem = listEnumerator.current();

                setPrefix(#PreFixField(TmpSuppItem,ItemId));

                this.progressUpdate();

                this.createLine(tmpSuppItem);

                isLineCreated = true;

                info("@SYS58780");
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer     version     = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion :
                [version,#CurrentList] = _packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static public void main(Args _args)
    {
        Object              salesPurchTable_ds;
        SalesPurchTable     salesPurchTable;
        HeadingLine         headingLine;

        if (!_args || !_args.record())
        {
            throw error("@SYS25407");
        }

        salesPurchTable = _args.record();
        headingLine = _args.parmEnum();

        if (SuppItemCreate::mainOnserver(salesPurchTable, headingLine))
        {
            if (FormDataUtil::isFormDataSource(salesPurchTable))
            {
                salesPurchTable_ds = FormDataUtil::getFormDataSource(salesPurchTable);
            }

            if (salesPurchTable && salesPurchTable_ds)
            {
                salesPurchTable_ds.reRead();
                salesPurchTable_ds.reFresh();

                if (formDataSourceHasMethod(salesPurchTable_ds, identifierStr(editHeader)))
                {
                    salesPurchTable_ds.editHeader();
                }

                if (formDataSourceHasMethod(salesPurchTable_ds, identifierStr(reReadLines)))
                {
                    salesPurchTable_ds.reReadLines();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mainOnserver</Name>
				<Source><![CDATA[
    static public boolean mainOnserver(SalesPurchTable _salesPurchTable, HeadingLine _headingLine)
    {
        SuppItemCreate  suppItemCreate = SuppItemCreate::newSuppItemCreate(_salesPurchTable);

        suppItemCreate.calcSuppItem(_headingLine);

        if (suppItemCreate.prompt())
        {
            suppItemCreate.runOperation();
        }

        return suppItemCreate.parmIsLineCreated();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSuppItemCreateNoThrow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a <c>SuppItemCreate</c> object.
    /// </summary>
    /// <param name = "_salesPurchTable">
    /// A <c>SalesPurchTable</c> record to instantiate the object from.
    /// </param>
    /// <returns>
    /// The instantiated <c>SuppItemCreate</c> object.
    /// </returns>
    /// <remarks>
    /// The method does not throw in case an object could not be instantiated.
    /// </remarks>
    static protected SuppItemCreate newSuppItemCreateNoThrow(SalesPurchTable _salesPurchTable)
    {
        SuppItemCreate suppItemCreate;

        switch (_salesPurchTable.TableId)
        {
            case tableNum(SalesTable)   :
                suppItemCreate = SuppItemCreate_Sales::construct();
                break;

            case tableNum(PurchTable)   :
                suppItemCreate = SuppItemCreate_Purch::construct();
                break;

            case tableNum(SalesQuotationTable)   :
                suppItemCreate = SuppItemCreate_SalesQuotation::construct();
                break;
        }

        return suppItemCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSuppItemCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates and initializes a <c>SuppItemCreate</c> object.
    /// </summary>
    /// <param name = "_salesPurchTable">
    /// A <c>SalesPurchTable</c> record to instantiate the object from.
    /// </param>
    /// <returns>
    /// The instantiated <c>SuppItemCreate</c> object.
    /// </returns>
    static public SuppItemCreate newSuppItemCreate(SalesPurchTable _salesPurchTable)
    {
        SuppItemCreate suppItemCreate = SuppItemCreate::newSuppItemCreateNoThrow(_salesPurchTable);

        if (!suppItemCreate)
        {
            throw error(strFmt("@SYS19306",funcName()));
        }

        suppItemCreate.getLast();

        suppItemCreate.parmSalesPurchTable(_salesPurchTable);

        return suppItemCreate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>