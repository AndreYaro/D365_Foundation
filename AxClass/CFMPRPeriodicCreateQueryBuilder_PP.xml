<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPRPeriodicCreateQueryBuilder_PP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[CFMPaymentRequestSourceTypeAttribute(CFMPaymentRequestSourceType::PlannedPayment)]
public class CFMPRPeriodicCreateQueryBuilder_PP extends CFMPRPeriodicCreateQueryBuilder
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPaymentRequestSourceQuery</Name>
				<Source><![CDATA[
    public Query getPaymentRequestSourceQuery()
    {
        Query sourceQuery = new Query();

        if (VendParameters::find().UseVendAdvanceInvoice_RU)
        {
            return null;
        }

        QueryBuildDataSource qbds = sourceQuery.addDataSource(tableNum(CFMPlannedPaymentTable));

        QueryBuildRange qbr = qbds.addRange(fieldNum(CFMPlannedPaymentTable, Prepayment));
        qbr.value(queryValue(NoYes::Yes));

        qbr = qbds.addRange(fieldNum(CFMPlannedPaymentTable, DueDate));

        if (dateTo == dateNull())
        {
            qbr.value(SysQuery::range(dateFrom, maxDate()));
        }
        else
        {
            qbr.value(SysQuery::range(dateFrom, dateTo));
        }

        qbr = qbds.addRange(fieldNum(CFMPlannedPaymentTable, SourceType));
        qbr.value(queryValue(CFMPlannedPaymentSourceType::PurchTable));

        qbds = qbds.addDataSource(tableNum(PurchTable));
        qbds.addLink(fieldNum(CFMPlannedPaymentTable, SourceDataAreaId),  fieldNum(PurchTable, dataAreaId));
        qbds.addLink(fieldNum(CFMPlannedPaymentTable, SourceRecId),  fieldNum(PurchTable, RecId));

        qbr = qbds.addRange(fieldNum(PurchTable, PurchaseType));
        qbr.value(queryValue(PurchaseType::Purch));

        qbr = qbds.addRange(fieldNum(PurchTable, DocumentState));
        qbr.value(queryValue(VersioningDocumentState::Confirmed));

        qbr = qbds.addRange(fieldNum(PurchTable, DocumentState));
        qbr.value(queryValue(VersioningDocumentState::Finalized));

        qbds = qbds.addDataSource(tableNum(VendInvoicePurchLink));
        qbds.addLink(fieldNum(PurchTable, PurchId), fieldNum(VendInvoicePurchLink, OrigPurchId));
        qbds.joinMode(JoinMode::OuterJoin);

        qbds = qbds.addDataSource(tableNum(VendInvoiceJour));
        qbds.addLink(fieldNum(VendInvoicePurchLink, PurchId), fieldNum(VendInvoiceJour, PurchId));
        qbds.addLink(fieldNum(VendInvoicePurchLink, InvoiceId), fieldNum(VendInvoiceJour, InvoiceId));
        qbds.addLink(fieldNum(VendInvoicePurchLink, InternalInvoiceId), fieldNum(VendInvoiceJour, InternalInvoiceId));
        qbds.addLink(fieldNum(VendInvoicePurchLink, InvoiceDate), fieldNum(VendInvoiceJour, InvoiceDate));

        qbr = qbds.addRange(fieldNum(VendInvoiceJour, InvoiceType));
        qbr.value(queryValue(PurchInvoiceType::VendorAdvance));

        qbds.joinMode(JoinMode::NoExistsJoin);

        this.addQueryDataAreaFiltering(sourceQuery);

        return sourceQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryDataSourceTableId</Name>
				<Source><![CDATA[
    public TableId getQueryDataSourceTableId()
    {
        return tableNum(CFMPlannedPaymentTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>