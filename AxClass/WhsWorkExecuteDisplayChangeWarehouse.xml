<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWorkExecuteDisplayChangeWarehouse</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the logic behind the RF flow used to change warehouse.
/// </summary>
[SysObsolete('This class has been refactored. Refer class <c>WHSProcessGuideChangeWarehouseController</c> instead.', false, 30\06\2020),
WHSWorkExecuteMode(WHSWorkExecuteMode::ChangeWarehouse)]
class WhsWorkExecuteDisplayChangeWarehouse extends WHSWorkExecuteDisplay
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildGetWarehouse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds controls to form state for selecting warehouse by work user.
    /// </summary>
    /// <param name="_con">
    /// Container containing the form state before the controls are added.
    /// </param>
    /// <returns>
    /// Container containing the form state after the controls are added.
    /// </returns>
    container buildGetWarehouse(container _con)
    {
        WHSWorkUserWarehouse    userWarehouse;
        boolean                 first = true;
        container               ret = _con;
        str                     elements;

        while select userWarehouse
            where userWarehouse.UserId == userId
        {
            if (first)
            {
                elements = strFmt('%1', userWarehouse.InventLocationId);
                first = false;
            }
            else
            {
                elements = elements + '||' + strFmt('%1', userWarehouse.InventLocationId);
            }
        }

        ret += [this.buildControl(#RFCombobox, 'InventLocation', "@WAX1114", 1, elements, #WHSRFUndefinedDataType, '', 0, true, WHSWorkUserSession::find(userId).InventLocationId, WHSRFColorText::Default, extendedTypeNum(InventLocationId))];
        ret += [this.buildControl(#RFButton, #RFOK, "@SYS5473", 1, '', #WHSRFUndefinedDataType, '', 1)];

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayForm</Name>
				<Source><![CDATA[
    container displayForm(container _con, str _buttonClicked = '')
    {
        container               ret = conNull();
        container               con = _con;
        int                     hasError = 0;

        mode = WHSWorkExecuteMode::ChangeWarehouse;
        pass = WHSRFPassthrough::create(conPeek(_con, 2));

        hasError = this.hasError(_con);

        if (pass.exists(#UserId))
        {
            userId = pass.lookup(#UserId);
        }

        switch (step)
        {
            case 0:
                ret = this.buildGetWarehouse(ret);
                ret = this.addCancelButton(ret, 1, true);
                step = 1;
                break;

            case 1:
                pass.insert(#NewWarehouse, conPeek(conPeek(con, 3 + hasError), #data));
                if (!InventLocation::find(pass.lookup(#NewWarehouse)).whsEnabled)
                {
                    throw error(strFmt("@WAX1116", pass.lookup(#NewWarehouse)));
                }
                if (!WHSWorkUserWarehouse::exist(userId, pass.lookup(#NewWarehouse)))
                {
                    throw error(strFmt("@WAX5493", pass.lookup(#NewWarehouse), userId));
                }
                WHSWorkUserSession::updateWarehouse(userId, pass.lookup(#NewWarehouse));
                ret = this.addErrorLabel(ret, "@WAX1115", WHSRFColorText::Success);
                ret = this.addBackButton(ret, 1, 1);
                step = 2;

                if (WHSWarehouseInfoFlight::instance().isEnabled())
                {
                    pass.parmSendWarehouseInfo(true);
                }
                break;
        }

        ret = this.updateModeStepPass(ret, mode, step, pass);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>