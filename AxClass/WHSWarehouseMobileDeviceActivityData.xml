<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseMobileDeviceActivityData</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>WHSWarehouseMobileDeviceActivityData</c> class stores the information used for the WHS user activity telemetry events
/// </summary>
class WHSWarehouseMobileDeviceActivityData
{
    #WHSRF

    WhsUserGuid             whsUserGuid;
    guid                    workerSysUserRelationObjectId;
    str                     company;
    str                     warehouse;
    str                     site;
    guid                    deviceId;
    WHSWorkExecuteMode      workExecuteMode;
    int                     step;
    str                     buttonClicked;
    str                     requestXML;
    WHSWorkUserSessionId    whsUserSessionId;
    RecId                   workTableRecId;
    WHSWorkTransType        workTransType;
    RecId                   workLineRecId;
    WHSWorkType             workLineType;
    WHSUserActivityDuration durationInMilliSeconds;
    ClassName               processGuideStepName;
    private RecId           inventTableRecId;
    private boolean         isCWItem;
    private RecId           workLineWMSLocationRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs a <c>WHSWarehouseMobileDeviceActivityData</c> from the Id of the WHS user and the current state of the mobile interface
    /// </summary>
    /// <param name = "_userId">
    ///     Id of the WHS user
    /// </param>
    /// <param name = "_workExecuteMode">
    ///     Work execution mode
    /// </param>
    /// <param name = "_step">
    ///     Step of the work execution
    /// </param>
    /// <param name = "_buttonClicked">
    ///     Button clicked in the current action
    /// </param>
    /// <param name = "_requestXML">
    ///     The XML of the request. Optional.
    /// </param>
    /// <param name = "_pass">
    ///     The current RF pass through map. Optional.
    /// </param>
    /// <param name = "_durationInMilliSeconds">
    ///     The duration of the user activity in milliseconds. Optional.
    /// </param>
    public static WHSWarehouseMobileDeviceActivityData construct(
        WHSUserId               _userId, 
        WHSWorkExecuteMode      _workExecuteMode,
        int                     _step,
        str                     _buttonClicked,
        str                     _requestXML = '',
        WHSRFPassthrough        _pass = null,
        WHSUserActivityDuration _durationInMilliSeconds = 0)
    {
        WHSWarehouseMobileDeviceActivityData activityData = new WHSWarehouseMobileDeviceActivityData();
        WHSWorkUserSession userSession = WHSWorkUserSession::find(_userId);
        WHSWorkUser worker = WHSWorkUser::find(_userId);
        InventLocation warehouse = InventLocation::find(userSession.inventLocationId);

        activityData.whsUserGuid                    = worker.UserGuid;
        activityData.workerSysUserRelationObjectId  = worker.getWorkerSysUserRelationObjectId();
        activityData.company                        = int642Str(CompanyInfo::current(userSession.CompanyId));
        activityData.site                           = int642Str(warehouse.inventSite().RecId);
        activityData.warehouse                      = int642Str(warehouse.RecId);
        activityData.workExecuteMode                = _workExecuteMode;
        activityData.step                           = _step;
        activityData.buttonClicked                  = _buttonClicked;
        activityData.requestXML                     = _requestXML;
        activityData.whsUserSessionId               = userSession.UserSessionId;
        activityData.durationInMilliSeconds         = _durationInMilliSeconds;

        if (_pass)
        {
            activityData.deviceId = _pass.parmDeviceId();
            
            WHSWorkTable whsWorkTable = WHSWorkTable::find(_pass.lookupStr(#WorkId));
            if (whsWorkTable)
            {
                activityData.workTableRecId = whsWorkTable.RecId;
                activityData.workTransType = whsWorkTable.WorkTransType;

                WHSWorkLine whsWorkLine = WHSWorkLine::find(_pass.lookupStr(#WorkId), _pass.parmLineNum());
                if (whsWorkLine)
                {
                    activityData.workLineRecId = whsWorkLine.RecId;
                    activityData.workLineType = whsWorkLine.WorkType;

                    if (whsWorkLine.ItemId)
                    {
                        activityData.inventTableRecId = InventTable::find(whsWorkLine.ItemId).RecId;
                        activityData.isCWItem = PdsGlobal::pdsIsCWItem(whsWorkLine.ItemId);
                    }

                    if (whsWorkLine.WMSLocationId)
                    {
                        activityData.workLineWMSLocationRecId = WMSLocation::find(whsWorkLine.WMSLocationId, userSession.inventLocationId).RecId;
                    }

                }
            }
            activityData.processGuideStepName = _pass.lookupStr(#CurrentStep);
        }

        return activityData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkLineWMSLocationRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal RecId parmWorkLineWMSLocationRecId(RecId _workLineWMSLocationRecId = workLineWMSLocationRecId)
    {
        workLineWMSLocationRecId = _workLineWMSLocationRecId;
        return workLineWMSLocationRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWhsUserGuid</Name>
				<Source><![CDATA[
    public WhsUserGuid parmWhsUserGuid(WhsUserGuid _whsUserGuid = whsUserGuid)
    {
        whsUserGuid = _whsUserGuid;
        return whsUserGuid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerSysUserRelationObjectId</Name>
				<Source><![CDATA[
    public guid parmWorkerSysUserRelationObjectId(guid _workerSysUserRelationObjectId = workerSysUserRelationObjectId)
    {
        workerSysUserRelationObjectId = _workerSysUserRelationObjectId;
        return workerSysUserRelationObjectId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompany</Name>
				<Source><![CDATA[
    public str parmCompany(str _company = company)
    {
        company = _company;
        return company;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWarehouse</Name>
				<Source><![CDATA[
    public str parmWarehouse(str _warehouse = warehouse)
    {
        warehouse = _warehouse;
        return warehouse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSite</Name>
				<Source><![CDATA[
    public str parmSite(str _site = site)
    {
        site = _site;
        return site;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeviceId</Name>
				<Source><![CDATA[
    public guid parmDeviceId(guid _deviceId = deviceId)
    {
        deviceId = _deviceId;
        return deviceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMode</Name>
				<Source><![CDATA[
    public WHSWorkExecuteMode parmMode(WHSWorkExecuteMode _workExecuteMode = workExecuteMode)
    {
        workExecuteMode = _workExecuteMode;
        return workExecuteMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStep</Name>
				<Source><![CDATA[
    public int parmStep(int _step = step)
    {
        step = _step;
        return step;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonClicked</Name>
				<Source><![CDATA[
    public str parmButtonClicked(str _buttonClicked = buttonClicked)
    {
        buttonClicked = _buttonClicked;
        return buttonClicked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequestXML</Name>
				<Source><![CDATA[
    public str parmRequestXML(str _requestXML = requestXML)
    {
        requestXML = _requestXML;
        return requestXML;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWhsUserSessionId</Name>
				<Source><![CDATA[
    public WHSWorkUserSessionId parmWhsUserSessionId(WHSWorkUserSessionId _whsUserSessionId = whsUserSessionId)
    {
        whsUserSessionId = _whsUserSessionId;
        return whsUserSessionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkTableRecId</Name>
				<Source><![CDATA[
    public RecId parmWorkTableRecId(RecId _workTableRecId = workTableRecId)
    {
        workTableRecId = _workTableRecId;
        return workTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkTransType</Name>
				<Source><![CDATA[
    public WHSWorkTransType parmWorkTransType(WHSWorkTransType _workTransType = workTransType)
    {
        workTransType = _workTransType;
        return workTransType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkLineRecId</Name>
				<Source><![CDATA[
    public RecId parmWorkLineRecId(RecId _workLineRecId = workLineRecId)
    {
        workLineRecId = _workLineRecId;
        return workLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkLineType</Name>
				<Source><![CDATA[
    public WHSWorkType parmWorkLineType(WHSWorkType _workLineType = workLineType)
    {
        workLineType = _workLineType;
        return workLineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTableRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal RecId parmInventTableRecId(RecId _inventTableRecId = inventTableRecId)
    {
        inventTableRecId = _inventTableRecId;
        return inventTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCWItem</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean parmIsCWItem(boolean _isCWItem= isCWItem)
    {
        isCWItem = _isCWItem;
        return isCWItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDurationInMilliSeconds</Name>
				<Source><![CDATA[
    public WHSUserActivityDuration parmDurationInMilliSeconds(WHSUserActivityDuration _durationInMilliSeconds = durationInMilliSeconds)
    {
        durationInMilliSeconds = _durationInMilliSeconds;
        return durationInMilliSeconds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcessGuideStepName</Name>
				<Source><![CDATA[
    public ClassName parmProcessGuideStepName(ClassName _processGuideStepName = processGuideStepName)
    {
        processGuideStepName = _processGuideStepName;
        return processGuideStepName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>