<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferParmCleanUpService</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferParmCleanUpService extends SysOperationServiceBase
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Cleans up InventTransferParm tables.
    /// </summary>
    /// <param name = "_dataContract">The data contract</param>
    public void execute(InventTransferParmCleanUpContract _dataContract)
    {
        if (!this.validate(_dataContract))
        {
            return;
        }
        
        ttsbegin;

        this.deleteInventTransferParmTables(_dataContract);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteInventTransferParmTables</Name>
				<Source><![CDATA[
    protected void deleteInventTransferParmTables(InventTransferParmCleanUpContract _dataContract)
    {
        utcdatetime cleanUpDateTime = datetoendUtcDateTime(_dataContract.parmCleanUpDate(), DateTimeUtil::getUserPreferredTimeZone());

        InventTransferParmTable inventTransferParmTable;
        inventTransferParmTable.skipDataMethods(true);
        inventTransferParmTable.skipDeleteActions(true);
        if (_dataContract.parmCleanUpMode() == InventTransferParmCleanUpMode::Executed)
        {
            delete_from inventTransferParmTable
                where inventTransferParmTable.CreatedDateTime <= cleanUpDateTime
                    && inventTransferParmTable.JobStatus == ParmJobStatus::Executed;
        }
        else
        {
            delete_from inventTransferParmTable
                where inventTransferParmTable.CreatedDateTime <= cleanUpDateTime
                    && inventTransferParmTable.JobStatus == ParmJobStatus::Executed;

            delete_from inventTransferParmTable
                where inventTransferParmTable.CreatedDateTime <= cleanUpDateTime
                    && inventTransferParmTable.JobStatus == ParmJobStatus::ContainErrors;
        }

        boolean indianLocalizationActive = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        if (indianLocalizationActive)
        {
            InventTransferParmTable_IN inventTransferParmTable_IN;
            inventTransferParmTable_IN.skipDataMethods(true);
            inventTransferParmTable_IN.skipDeleteActions(true);
            delete_from inventTransferParmTable_IN
                notexists join inventTransferParmTable
                    where inventTransferParmTable.RecId == inventTransferParmTable_IN.InventTransferParmTable;
        }

        boolean brazilianLocalizationActive = BrazilParameters::isEnabled();
        if (brazilianLocalizationActive)
        {
            InventTransferParmTableFiscalInfo_BR inventTransferParmTableFiscalInfo_BR;
            inventTransferParmTableFiscalInfo_BR.skipDataMethods(true);
            inventTransferParmTableFiscalInfo_BR.skipDeleteActions(true);
            delete_from inventTransferParmTableFiscalInfo_BR
                notexists join inventTransferParmTable
                where inventTransferParmTable.RecId == inventTransferParmTableFiscalInfo_BR.InventTransferParmTable;

            InventTransferParmTableShipStat_BR inventTransferParmTableShipStat_BR;
            inventTransferParmTableShipStat_BR.skipDataMethods(true);
            inventTransferParmTableShipStat_BR.skipDeleteActions(true);
            delete_from inventTransferParmTableShipStat_BR
                notexists join inventTransferParmTableFiscalInfo_BR
                where inventTransferParmTableFiscalInfo_BR.RecId == inventTransferParmTableShipStat_BR.InventTransferParmTableFiscalInfo_BR;
        }

        InventTransferParmUpdate inventTransferParmUpdate;
        inventTransferParmUpdate.skipDataMethods(true);
        inventTransferParmUpdate.skipDeleteActions(true);

        if (InventTransferCleanUpConsiderParmUpdateCreatedDateFlight::instance().isEnabled())
        {
            delete_from inventTransferParmUpdate
                where inventTransferParmUpdate.CreatedDateTime <= cleanUpDateTime
                notexists join inventTransferParmTable
                    where inventTransferParmTable.ParmId == inventTransferParmUpdate.ParmId;
        }
        else
        {
            delete_from inventTransferParmUpdate
                notexists join inventTransferParmTable
                where inventTransferParmTable.ParmId == inventTransferParmUpdate.ParmId;
        }

        InventTransferParmLine inventTransferParmLine;
        inventTransferParmLine.skipDeleteActions(true);
        delete_from inventTransferParmLine
            notexists join inventTransferParmTable
                where inventTransferParmTable.ParmId == inventTransferParmLine.ParmId
                    && inventTransferParmTable.TransferId == inventTransferParmLine.TransferId;

        if (indianLocalizationActive)
        {
            InventTransferParmLine_IN inventTransferParmLine_IN;
            inventTransferParmLine_IN.skipDataMethods(true);
            inventTransferParmLine_IN.skipDeleteActions(true);
            delete_from inventTransferParmLine_IN
                notexists join inventTransferParmLine
                where inventTransferParmLine.RecId == inventTransferParmLine_IN.InventTransferParmLine;
        }

        if (brazilianLocalizationActive)
        {
            InventTransferParmLine_BR inventTransferParmLine_BR;
            inventTransferParmLine_BR.skipDataMethods(true);
            inventTransferParmLine_BR.skipDeleteActions(true);
            delete_from inventTransferParmLine_BR
                notexists join inventTransferParmLine
                where inventTransferParmLine.RecId == inventTransferParmLine_BR.InventTransferParmLine;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    protected boolean validate(InventTransferParmCleanUpContract _dataContract)
    {
        boolean ret = true;

        if (!_dataContract.parmCleanUpDate())
        {
            ret = checkFailed("@SYS24455");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>