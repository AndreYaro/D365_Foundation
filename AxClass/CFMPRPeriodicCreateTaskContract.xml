<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPRPeriodicCreateTaskContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data contract for the <c>CFMPRPeriodicCreateTaskContract</c> operation.
/// </summary>
[DataContractAttribute]
public class CFMPRPeriodicCreateTaskContract implements SysPackable
{
    CFMPaymentRequestSourceType sourceType;
    Query paymentRequestSourceQuery;
    TableId queryDataSourceTableId;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        sourceType
    #endmacro


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        container queryContainer;

        if (paymentRequestSourceQuery)
        {
            queryContainer = paymentRequestSourceQuery.pack();
        }

        return [#CurrentVersion, #CurrentList, tableid2name(queryDataSourceTableId), queryContainer];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentRequestSourceQuery</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Query parmPaymentRequestSourceQuery(Query _paymentRequestSourceQuery = paymentRequestSourceQuery)
    {
        paymentRequestSourceQuery = _paymentRequestSourceQuery;

        return paymentRequestSourceQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentRequestSourceType</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public CFMPaymentRequestSourceType parmPaymentRequestSourceType(CFMPaymentRequestSourceType _sourceType = sourceType)
    {
        sourceType = _sourceType;

        return sourceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQueryDataSourceTableId</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public TableId parmQueryDataSourceTableId(TableId _queryDataSourceTableId = queryDataSourceTableId)
    {
        queryDataSourceTableId = _queryDataSourceTableId;

        return queryDataSourceTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Version version = SysOperationHelper::getVersion(_packedClass);
        boolean ret = false;
        container queryContainer;
        TableName tableName;

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList, tableName, queryContainer] = _packedClass;

                queryDataSourceTableId = tableName2id(tableName);

                if (queryContainer != conNull())
                    paymentRequestSourceQuery = new Query(queryContainer);

                ret = true;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>