<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkProcessingTimeCalculator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class is responsible for calculation processing times for a <c>WHSWorkProcessingTimeSource</c> source based on a calculation strategy.
/// </summary>
internal class WHSWorkProcessingTimeCalculator
{
    private WHSWorkProcessingTimeCalculationStrategy calculationStrategy;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSWorkProcessingTimeCalculator construct()
    {
        return new WHSWorkProcessingTimeCalculator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromCalculationStrategy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of the class that will use the strategy for calculations.
    /// </summary>
    /// <param name = "_calculationStrategy">A calculation strategy.</param>
    /// <returns>A new instance of the class.</returns>
    [Hookable(false)]
    internal static WHSWorkProcessingTimeCalculator newFromCalculationStrategy(WHSWorkProcessingTimeCalculationStrategy _calculationStrategy)
    {
        var calculator = WHSWorkProcessingTimeCalculator::construct();
        
        calculator.calculationStrategy = _calculationStrategy;

        return calculator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateInProcessDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the in process date time. 
    /// </summary>
    /// <param name = "_source">The source to calculate the date time for.</param>
    /// <returns>The in process date time.</returns>
    public utcdatetime calculateInProcessDateTime(WHSWorkProcessingTimeSource _source)
    {
        if (this.mustCalculateNewInProgressTime(_source.workInProcessDateTime(), _source.workStatus()))
        {
            return calculationStrategy.calculateNewInProcessDateTime(_source);
        }

        return _source.workInProcessDateTime();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateClosedDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the closed date time.
    /// </summary>
    /// <param name = "_source">The source to calculate the date time for.</param>
    /// <returns>The closed date time.</returns>
    public utcdatetime calculateClosedDateTime(WHSWorkProcessingTimeSource _source)
    {
        if (this.mustCalculateNewClosedTime(_source.workClosedDateTime(), _source.workStatus()))
        {
            return calculationStrategy.calculateNewClosedDateTime(_source);
        }

        return _source.workClosedDateTime();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCalculateNewInProgressTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a new calculation for the in process time is needed.
    /// </summary>
    /// <param name = "_workInProcessUTCDateTime">The current in process time.</param>
    /// <param name = "_workStatus">The work status.</param>
    /// <returns>true if a new calculation is needed; otherwise, false.</returns>
    private boolean mustCalculateNewInProgressTime(
        utcdatetime     _workInProcessUTCDateTime,
        WHSWorkStatus   _workStatus)
    {
        return (!_workInProcessUTCDateTime && _workStatus == WHSWorkStatus::InProcess);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCalculateNewClosedTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a new calculation for the closed time is needed.
    /// </summary>
    /// <param name = "_workClosedUTCDateTime">The current closed time.</param>
    /// <param name = "_workStatus">The work status.</param>
    /// <returns>true if a new calculation is needed; otherwise, false.</returns>
    private boolean mustCalculateNewClosedTime(
        utcdatetime     _workClosedUTCDateTime,
        WHSWorkStatus   _workStatus)
    {
        return (!_workClosedUTCDateTime && _workStatus == WHSWorkStatus::Closed);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>