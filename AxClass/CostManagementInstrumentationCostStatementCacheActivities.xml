<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostManagementInstrumentationCostStatementCacheActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostManagementInstrumentationCostStatementCacheActivities</c> class provides activities for statement cache for cost management instrumentation logging.
/// </summary>
internal final class CostManagementInstrumentationCostStatementCacheActivities
{
    private const str ActivityNamePrefix = 'CostStatementCache.';

    private CostManagementInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(CostManagementInstrumentationLogger _instrumentationLogger)
    {
        instrumentationLogger = _instrumentationLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static CostManagementInstrumentationCostStatementCacheActivities newFromLogger(CostManagementInstrumentationLogger _instrumentationLogger)
    {
        return new CostManagementInstrumentationCostStatementCacheActivities(_instrumentationLogger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext clearCache()
    {
        return instrumentationLogger.activityContext(instrumentationLogger.activity(ActivityNamePrefix + tableStaticMethodStr(CostStatementCache, clearCache)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCache</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updateCache(
        int                     _daysToUpdate,
        SysDataCacheContextId   _contextId)
    {
        SysInstrumentationActivity activity = instrumentationLogger.activity(ActivityNamePrefix + tableStaticMethodStr(CostStatementCache, updateCache));
        SysInstrumentationActivityContext activityContext = instrumentationLogger.activityContext(activity);

        var properties = instrumentationLogger.properties();

        activityContext.addCustomProperty(properties.DaysToUpdate, int2Str(_daysToUpdate));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createBeginningBalancesOnDate</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext createBeginningBalancesOnDate(
        int                     _daysToUpdate,
        SysDataCacheContextId   _contextId)
    {
        SysInstrumentationActivity activity = instrumentationLogger.activity(ActivityNamePrefix + tableStaticMethodStr(CostStatementCache, createBeginnigBalancesOnDate));
        SysInstrumentationActivityContext activityContext = instrumentationLogger.activityContext(activity);

        var properties = instrumentationLogger.properties();

        activityContext.addCustomProperty(properties.DaysToUpdate, int2Str(_daysToUpdate));

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>