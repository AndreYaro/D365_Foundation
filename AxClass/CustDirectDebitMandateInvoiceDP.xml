<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustDirectDebitMandateInvoiceDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustDirectDebitMandateDP</c> class is the data provider class for the <c>CustDirectDebitMandate</c> report.
/// </summary>
[
    SRSReportParameterAttribute(classstr(CustDirectDebitMandateContract))
]
public class CustDirectDebitMandateInvoiceDP extends SRSReportDataProviderBase
{
    CustDirectDebitMandateInvoiceTmp custDirectDebitMandateInvoiceTmp;
    CustDirectDebitMandateInvoiceHeaderTmp custDirectDebitMandateInvoiceHeaderTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustDirectDebitMandateInvoiceHdrTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>CustDirectDebitMandateInvoiceHeaderTmp</c> table buffer.
    /// </summary>
    /// <returns>
    /// The <c>CustDirectDebitMandateInvoiceHeaderTmp</c> table buffer.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(CustDirectDebitMandateInvoiceHeaderTmp))]
    public CustDirectDebitMandateInvoiceHeaderTmp getCustDirectDebitMandateInvoiceHdrTmp()
    {
        select * from custDirectDebitMandateInvoiceHeaderTmp;
        return custDirectDebitMandateInvoiceHeaderTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustDirectDebitMandateInvoiceTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>CustDirectDebitMandateInvoiceTmp</c> table buffer.
    /// </summary>
    /// <returns>
    /// The <c>CustDirectDebitMandateInvoiceTmp</c> table buffer.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(CustDirectDebitMandateInvoiceTmp))]
    public CustDirectDebitMandateInvoiceTmp getCustDirectDebitMandateInvoiceTmp()
    {
        select * from custDirectDebitMandateInvoiceTmp;
        return custDirectDebitMandateInvoiceTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        CustDirectDebitMandateContract dataContract;
        CustMandateId mandateReference;

        CompanyInfo companyInfo = companyInfo::find();
        CustBankAccount custBankAccount;
        CustDirectDebitMandate custDirectDebitMandate;
        CustTable custTable;
        CustTrans custTrans;

        dataContract = this.parmDataContract();
        mandateReference = dataContract.parmMandateReference();

        ttsBegin;

        custDirectDebitMandateInvoiceHeaderTmp.clear();

        unchecked (Uncheck::TableSecurityPermission)
        {
            select firstOnly RecId, MandateReference
                from custDirectDebitMandate
                        where custDirectDebitMandate.MandateReference == mandateReference
                outer join BankIBAN, SWIFTNo from custBankAccount
                        where custBankAccount.AccountID == custDirectDebitMandate.BankAccount &&
                                custBankAccount.CustAccount == custDirectDebitMandate.CustAccount
                outer join Party from custTable
                        where custTable.AccountNum == custDirectDebitMandate.CustAccount;

            custDirectDebitMandateInvoiceHeaderTmp.CompanyDebitDirectId = BankAccountTable::findByCompany(companyInfo.DataArea, companyInfo.Bank).DebitDirectId;
        }

        custDirectDebitMandateInvoiceHeaderTmp.CompanyName = companyInfo.name();
        custDirectDebitMandateInvoiceHeaderTmp.SWIFTNo = custBankAccount.SWIFTNo;
        custDirectDebitMandateInvoiceHeaderTmp.CustTable_Name = custTable.name();

        custDirectDebitMandateInvoiceHeaderTmp.BankIBAN = hasFieldAccess(tableNum(CustBankAccount), fieldNum(CustBankAccount, BankIBAN)) ?
            custBankAccount.BankIBAN : "@AccountsReceivable:FiveAsterisk";

        custDirectDebitMandateInvoiceHeaderTmp.insert();

        while select AmountCur, CurrencyCode, DueDate, Invoice, TransDate from custTrans
                where custTrans.DirectDebitMandate == custDirectDebitMandate.RecId &&
                        custTrans.Closed == dateNull()
        {
            custDirectDebitMandateInvoiceTmp.clear();
            custDirectDebitMandateInvoiceTmp.AmountCur = custTrans.AmountCur;
            custDirectDebitMandateInvoiceTmp.CurrencyCode = custTrans.CurrencyCode;
            custDirectDebitMandateInvoiceTmp.DueDate = custTrans.DueDate;
            custDirectDebitMandateInvoiceTmp.Invoice = custTrans.Invoice;
            custDirectDebitMandateInvoiceTmp.TransDate = custTrans.TransDate;
            custDirectDebitMandateInvoiceTmp.insert();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
