<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventLedgerConflictLedgerTransVoucher</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    Calls the <c>LedgerTransVoucher</c> form with the <c>LedgerEntryReference</c> value as an argument.
/// </summary>
/// <remarks>
///    This class is activated through a menu item from the SRS report. A string that contains a
///    <c>LedgerEntryReference</c> reference is transferred in the parameter method of the arguments.
/// </remarks>
class InventLedgerConflictLedgerTransVoucher
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildArgs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Extracts a <c>GeneralJournalEntry</c> table buffer reference from the parameter property of the
    ///    specified arguments and builds a new arguments buffer.
    /// </summary>
    /// <param name="_args">
    ///    The argument buffer with which the class is called. It must contain a <c>GeneralJournalEntry</c>
    ///    table buffer reference as a string.
    /// </param>
    /// <returns>
    ///    A new argument buffer that contains the <c>GeneralJournalEntry</c> table buffer.
    /// </returns>
    /// <remarks>
    ///    The parameter property of the argument buffer must contain a string with the <c>TableId</c> type
    ///    and the <c>FieldId</c> type.
    /// </remarks>
    private static Args buildArgs(Args _args)
    {
        InventLedgerConflictLedgerTransVoucher  inventLedgerConflictLedgerTransVoucher = new InventLedgerConflictLedgerTransVoucher();

        #define.startBracket('%5B') // "["
        #define.EndBracket  ('%5D') // "]"
        #define.plus        ('+')
        #define.colon       (':')

        Args args = new Args(formStr(LedgerTransVoucher));
        args.caller(inventLedgerConflictLedgerTransVoucher);

        if (_args)
        {
            // Extract the recid from the parm string
            str parmStr   = _args.parm();
            int strLength = strLen(parmStr);
            int plusPos   = strFind(parmStr, #plus, 1, strLength);
            int startPos  = strFind(parmStr, #startBracket, 1, strLength);
            int endPos    = strFind(parmStr, #endBracket, 1, strLength);
            int colonPos  = strFind(parmStr, #colon, 1, strLength);

            if (strLength > 0 && plusPos > 0 && startPos > 0 && endPos > 0 && colonPos > 0)
            {
                // Extract tableid, fieldid and recid from the parm string.
                // the values must match the recid on GeneralJournalEntry
                int   tableId = str2int(subStr(parmStr, 1, plusPos - 1));
                int   fieldId = str2int(subStr(parmStr, startPos + strLen(#startBracket), colonPos - startPos + strLen(#startBracket)));
                RecId recId   = str2int64(subStr(parmStr, colonPos + 1, endPos - colonPos));

                if (tableId == tableNum(GeneralJournalEntry) &&
                    fieldId == fieldNum(GeneralJournalEntry, RecId) &&
                    recId > 0)
                {
                    GeneralJournalEntry generalJournalEntry = GeneralJournalEntry::find(recId);
                    args.record(generalJournalEntry);
                }
            }
        }

        // Add the LedgerTransVoucher menu item to the argument buffer
        args.menuItemName(menuitemDisplayStr(LedgerTransVoucher));
        args.menuItemType(MenuItemType::Display);
        args.parmEnum(AllChosen::Chosen);

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        // Build a new argument buffer with reference to a LedgerEntryReference table buffer
        // and the menu item LedgerTransVoucher. Run the LedgerTransVoucher form.
        Args args = InventLedgerConflictLedgerTransVoucher::buildArgs(_args);
        FormRun formRun = ClassFactory::formRunClassOnClient(args);
        formRun.init();
        formRun.run();
        formRun.detach();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
