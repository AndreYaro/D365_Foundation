<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResIProjTeamController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Project team manager.
/// </summary>
interface ResIProjTeamController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add new role or resource to project as resource.
    /// </summary>
    /// <param name = "resourceCategory">
    /// Resource Category.
    /// </param>
    /// <param name = "fromDate">
    /// From date.
    /// </param>
    /// <param name = "toDate">
    /// To Date.
    /// </param>
    /// <param name = "resource">
    /// Resource.
    /// </param>    
    /// <param name = "_updateRollUp">
    /// Whether <c>ResRollUp</c> table records will be updated.
    /// </param>
    /// <returns>
    /// Activity resource record ID.
    /// </returns>
    ActivityResourceRecId add(ResourceCategoryRecId resourceCategory, TransDate fromDate, TransDate toDate, ResourceRecId resource = 0, boolean _updateRollUp = true)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>release</Name>
				<Source><![CDATA[
    /// <summary>
    /// Release booked hour from activity resource.
    /// </summary>
    /// <param name = "activityResource">
    /// Activity Resource.
    /// </param>
    void release(ActivityResourceRecId activityResource)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
    /// <summary>
    /// Remove role/resource from project team.
    /// </summary>
    /// <param name = "activityResource">
    /// Activity resource.
    /// </param>
    void remove(ActivityResourceRecId activityResource)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProjId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return project id.
    /// </summary>
    /// <returns>
    /// Project id.
    /// </returns>
    ProjId ProjId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>ResourceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return resource category record id.
    /// </summary>
    /// <returns>
    /// Resource category record id.
    /// </returns>
    ResourceCategoryRecId ResourceCategory(ResourceCategoryRecId _resourceCategory = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>merge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Merge reservation from activity resource to activity resource and remove from activity resource.
    /// </summary>
    /// <param name = "mergefrom">
    /// Activity resource from.
    /// </param>
    /// <param name = "mergeTo">
    /// Activity resource to.
    /// </param>
    void merge(ActivityResourceRecId mergeFrom,  ActivityResourceRecId mergeTo)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateScheduleDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update schedule start/end date of activity resource and project.
    /// </summary>
    /// <param name = "_activityResource">Activity resource rec Id.</param>
    void updateScheduleDate(ActivityResourceRecId activityResource)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>assign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the specified resource to the planned resource
    /// </summary>
    /// <param name = "_activityResource">Planned resource to be fulfilled</param>
    /// <param name = "_resource">Resource record identifier</param>    
    /// <returns>TRUE when the planned resource assignment operation succeeds</returns>
    boolean assign(ActivityResourceRecId _activityResource, ResourceRecId _resource)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fulfill the specified resource to the planned resource.
    /// </summary>
    /// <param name = "_activityResource">Planned resource to be fulfilled.</param>
    /// <param name = "_resource">Resource record identifier.</param>
    /// <param name = "_syncSpecificTimeScale">true to update a specific time scale in synchronous and the rest to run asynchronous; otherwise all time scale will run synchronously.</param>
    /// <param name = "_syncTimeScaleType">The specific time scale which will be run synchronously and the rest will be run in asynchronous.</param>
    /// <returns>true when the planned resource assignment operation succeeds; otherwise, false.</returns>
    boolean assignV2(ActivityResourceRecId _activityResource, ResourceRecId _resource, boolean _syncSpecificTimeScale = false, AVTimeframeType _syncTimeScaleType = AVTimeframeType::Day)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>customAssign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fulfill the specified resource to the planned resource with activity and fulfill hours modification which specified in <c>ResTmpSpecifyResourceHours</c> table.
    /// </summary>
    /// <param name = "_plannedActivityResource">Planned activity resource record ID.</param>
    /// <param name = "_staffedResource">Staffed resource record ID.</param>
    /// <param name = "_specifyResourceHoursTable"><c>ResTmpSpecifyResourceHours</c> table buffer which contains the modification of fulfill activity and hours.</param>
    /// <param name = "_notification">Resource manager notification to project manager regarding to this extended fulfillment.</param>
    /// <param name = "_sendEmail">true to send email; otherwise, false.</param>
    /// <param name = "_projectManagerEmailAddress">Project manager email address.</param>
    /// <param name = "_syncSpecificTimeScale">true to update a specific time scale in synchronous and the rest to run asynchronous; otherwise all time scale will run synchronously.</param>
    /// <param name = "_syncTimeScaleType">The specific time scale which will be run synchronously and the rest will be run in asynchronous.</param>
    public void customAssign(ActivityResourceRecId _plannedActivityResource, ResourceRecId _staffedResource,
        ResTmpSpecifyResourceHours _specifyResourceHoursTable, ResExtendFulfillmentNotification _notification = '',
        boolean _sendEmail = false, LogisticsElectronicAddressLocator _projectManagerEmailAddress = '',
        boolean _syncSpecificTimeScale = false, AVTimeframeType _syncTimeScaleType = AVTimeframeType::Day)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>