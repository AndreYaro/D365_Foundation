<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetRecordDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetRecordDP</c> class is the data provider for the <c>AssetRecord</c> SSRS report.
/// </summary>
[SRSReportQueryAttribute(queryStr(AssetRecord))]
public class AssetRecordDP extends SrsReportDataProviderPreProcessTempDB
{
    AssetRecordTmp assetRecordTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetRecordTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the dataset of the report data provider.
    /// </summary>
    /// <returns>
    /// The dataset of the report data provider.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(AssetRecordTmp)), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AssetRecordTmp getAssetRecordTmp()
    {
        select assetRecordTmp;
        return assetRecordTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    public void processReport()
    {
        AssetBook assetBook;
        AssetDepreciationProfile assetDepreciationProfile;
        AssetTable assetTable;
        DirPartyTable dirPartyTable;
        OMOperatingUnit operatingUnit;
        AssetSumCalc_Trans assetSumCalc;
        Query query;
        QueryRun queryRun;
        boolean useAssetBookValues;

        #IsoCountryRegionCodes

        useAssetBookValues = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]);

        query = this.parmQuery();
        queryRun = new QueryRun(query);
        while (queryRun.next())
        {
            assetTable = queryRun.get(tableNum(AssetTable)) as AssetTable;
            assetBook = queryRun.get(tableNum(AssetBook)) as AssetBook;
            assetDepreciationProfile = queryRun.get(tableNum(AssetDepreciationProfile)) as AssetDepreciationProfile;
            dirPartyTable = queryRun.get(tableNum(DirPartyTable)) as DirPartyTable;
            operatingUnit = queryRun.get(tableNum(OMOperatingUnit)) as OMOperatingUnit;

            assetSumCalc = AssetSumCalc_Trans::newAssetYear(assetBook.AssetId, assetBook.BookId);

            assetRecordTmp.clear();
            assetRecordTmp.initFromAssetTable(!useAssetBookValues, assetTable, dirPartyTable, operatingUnit);
            assetRecordTmp.initFromAssetBook(useAssetBookValues, assetBook, assetDepreciationProfile);
            assetRecordTmp.initFromAssetSumCalc_Trans(assetSumCalc);
            assetRecordTmp.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>