<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CLMIntegrationOAuth2Provider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Net.Http;

/// <summary>
/// The <c>CLMIntegrationOAuth2Provider</c> class represents OAuth2 authentication provider for the CLM integration service client.
/// </summary>
[CLMIntegrationAuthentication(CLMIntegrationAuthenticationType::OAuth2)]
internal final class CLMIntegrationOAuth2Provider implements CLMIntegrationIAuthenticationProvider
{
    private CLMIntegrationIServiceOperation serviceOperation;
    private HttpRequestMessage httpRequestMessage;

    private const str AuthorizationHeaderKey = 'Authorization';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyAuthentication</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void applyAuthentication()
    {
        if (!serviceOperation)
        {
            throw error("@CLMIntegration:ServiceOperationNotSpecifiedError");
        }

        if (!httpRequestMessage)
        {
            throw error('@CLMIntegration:HttpRequestMessageNotSpecifiedError');
        }

        CLMIntegrationServiceInstance serviceInstance = serviceOperation.parmServiceInstance();

        if (serviceInstance.AuthorizationHeaderPrefix)
        {
            System.Net.Http.Headers.HttpRequestHeaders httpRequestHeaders = httpRequestMessage.Headers;

            httpRequestHeaders.Add(AuthorizationHeaderKey, strFmt('%1 %2', serviceInstance.AuthorizationHeaderPrefix, this.getAuthToken()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAuthToken</Name>
				<Source><![CDATA[
    private str getAuthToken()
    {
        CLMIntegrationServiceInstance serviceInstance = serviceOperation.parmServiceInstance();

        if (!serviceInstance.AccessToken || serviceInstance.AccessTokenExpiration < DateTimeUtil::addMinutes(DateTimeUtil::utcNow(), 10))
        {
            var authenticationClient = new Microsoft.Dynamics.Authentication.Client.AuthenticationClientHandler();

            var token = authenticationClient.AcquireTokenByClientSecret(
                serviceInstance.BaseURL,
                serviceInstance.AuthorizationURL,
                serviceInstance.getClientId(),
                serviceInstance.getClientSecret());

            ttsbegin;

            serviceInstance.selectForUpdate(true);
            serviceInstance.parmAccessToken(token.AccessToken);
            serviceInstance.AccessTokenExpiration = token.ExpiresOn.DateTime;
            serviceInstance.update();
            ttscommit;
        }

        return serviceInstance.parmAccessToken();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromServiceClient</Name>
				<Source><![CDATA[
    internal static CLMIntegrationOAuth2Provider newFromServiceClient(CLMIntegrationIServiceOperation _serviceOperation, HttpRequestMessage _httpRequestMessage)
    {
        return new CLMIntegrationOAuth2Provider(_serviceOperation, _httpRequestMessage);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(CLMIntegrationIServiceOperation _serviceOperation, HttpRequestMessage _httpRequestMessage)
    {
        serviceOperation = _serviceOperation;
        httpRequestMessage = _httpRequestMessage;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>