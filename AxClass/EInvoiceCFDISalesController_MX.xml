<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceCFDISalesController_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceSalesController_MX</c> is controller class for <c>EInvoiceReport_MX</c> report.
/// </summary>
public class EInvoiceCFDISalesController_MX extends EInvoiceControllerBase_MX implements BatchRetryable
{
    CustInvoiceJour custInvoiceJour;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initJournalList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the list of journals to be printed, from the arguments.
    /// </summary>
    protected void initJournalList()
    {
        if (this.parmArgs().dataset() == tableNum(WMSShipment))
        {
            WMSShipment wmsShipment = args.record();
            journalList = FormLetter::createJournalListCopy(ShipCarrierShipmentInvoice::custInvoiceJour(wmsShipment.ShipmentId));
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the document type for the print management.
    /// </summary>
    /// <returns>A <c>PrintMgmtDocumentType</c> option.</returns>
    protected PrintMgmtDocumentType getPrintMgmtDocumentType()
    {
        return PrintMgmtDocumentType::SalesOrderInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current invoice to be printed.
    /// </summary>
    /// <returns>A record of the transaction to be printed.</returns>
    protected Common getInvoiceJour()
    {
        return custInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>first</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the first invoice to be printed in invoiceJour.
    /// </summary>
    /// <returns>True if there are one invoice and it was load.</returns>
    protected boolean first()
    {
        return journalList.first(custInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the next invoice to be printed in invoiceJour.
    /// </summary>
    /// <returns>True if there are one more invoice and it was load.</returns>
    protected boolean next()
    {
        return journalList.next(custInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceLanguageId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the language id of the invoice transaction that is being printed.
    /// </summary>
    /// <returns>the language id.</returns>
    protected LanguageId getInvoiceLanguageId()
    {
        return custInvoiceJour.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCFDI</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines if the invoice to be printed is CFDI or CFD.
    /// </summary>
    /// <returns>True if the invoice is a CFDI, false if is CFD.</returns>
    protected boolean isCFDI()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtReferencedTable</Name>
				<Source><![CDATA[
    protected Common getPrintMgmtReferencedTable()
    {
        Common  printMgmtReferencedTable;

        // Determine where to start looking for Print Mgmt settings
        if (SalesParameters::find().DeleteHeading == NoYes::Yes)
        {
            // The original SalesTable record no longer exists, so skip that Print Mgmt level
            // and start with the customer instead.
            printMgmtReferencedTable = custInvoiceJour.custTable_InvoiceAccount();

            if (printMgmtReferencedTable == null)
            {
                printMgmtReferencedTable = custInvoiceJour.custTable_OrderAccount();
            }
        }
        else
        {
            printMgmtReferencedTable = custInvoiceJour.salesTable();
        }

        return printMgmtReferencedTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the <c>EInvoiceReport_MX</c> SRS Report.
    /// </summary>
    /// <param name="_args">Args object.</param>
    public static void main(Args _args)
    {
        EInvoiceControllerBase_MX controller = new EInvoiceCFDISalesController_MX();

        controller.initialize(_args);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>