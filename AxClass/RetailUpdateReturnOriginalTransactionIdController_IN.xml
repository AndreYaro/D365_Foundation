<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailUpdateReturnOriginalTransactionIdController_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailUpdateReturnOriginalTransactionIdController_IN</c> class to update return invoices with original transaction ids.
/// </summary>
public class RetailUpdateReturnOriginalTransactionIdController_IN extends SysOperationServiceController implements RetailIOperatingUnitPickerCaller, BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the controller.
    /// </summary>
    /// <param name="_args">The arguments that will be used.</param>
    public static void main(Args _args)
    {
        identifierName className;
        identifierName methodName;
        SysOperationExecutionMode executionMode;

        [className, methodName, executionMode] = SysOperationServiceController::parseServiceInfo(_args);
        RetailUpdateReturnOriginalTransactionIdController_IN controller = new RetailUpdateReturnOriginalTransactionIdController_IN(className, methodName, executionMode);

        if (_args)
        {
            RetailUpdateReturnOriginalTransactionIdController_IN::runController(controller, _args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogInit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <d>SysOperationDialog</d> class.
    /// </summary>
    /// <returns>An instance of <c>SysOperationDialog</c> class.</returns>
    protected IDialogable dialogInit()
    {
        return SysOperationDialog::newForm(this.parmDialogCaption(), this, new Form(formStr(RetailOperatingUnitPicker)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>SysOperationServiceController</c> class.
    /// </summary>
    /// <param name="_className">The class name of the service class.</param>
    /// <param name="_methodName">The method name of the service operation.</param>
    /// <param name="_executionMode">The execution mode to use when executing the service operation.</param>
    public void new(
        identifierName              _className = '',
        identifierName              _methodName = '',
        SysOperationExecutionMode   _executionMode = SysOperationExecutionMode::ReliableAsynchronous)
    {
        super(_className, _methodName, _executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    /// <param name="_controller">The controller that will be used.</param>
    /// <param name="_args">The arguments that will be used.</param>
    public static void runController(RetailUpdateReturnOriginalTransactionIdController_IN _controller, Args _args)
    {
        _controller.parmArgs(_args);
        _controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPickerInitParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the initial selection for the operating unit picker.
    /// </summary>
    /// <returns>The operating unit hierarchy element to initially select.</returns>
    public RetailOperatingUnitPickerData getPickerInitParameters()
    {
        RetailOperatingUnitPickerData pickerInitParameter = new RetailOperatingUnitPickerData();
        pickerInitParameter.hierarchyPurpose = HierarchyPurpose::RetailPOSPosting;

        pickerInitParameter.omInternalOrganizationRecIds = this.getDataContract().parmSelectedOMInternalOrgRecIds();

        return pickerInitParameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processOperatingUnitPickerData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the selection made by the user in the operating unit picker.
    /// The selection is used to find what stores are under that selection.
    /// </summary>
    /// <param name = "_operatingUnitPickerData">The operating unit selection made in the picker dialog.</param>
    public void processOperatingUnitPickerData(RetailOperatingUnitPickerData _operatingUnitPickerData)
    {
        this.getDataContract().parmSelectedOMInternalOrgRecIds(_operatingUnitPickerData.omInternalOrganizationRecIds);
        this.getDataContract().parmOMHierarchyRecId(_operatingUnitPickerData.omHierarchyTypeRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converting the data contract object to <c>RetailUpdateReturnOriginalTransactionIdContract_IN</c> class.
    /// </summary>
    /// <returns>Instance if conversion was successful; otherwise, null.</returns>
    protected RetailUpdateReturnOriginalTransactionIdContract_IN getDataContract()
    {
        return this.getDataContractObject() as RetailUpdateReturnOriginalTransactionIdContract_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>