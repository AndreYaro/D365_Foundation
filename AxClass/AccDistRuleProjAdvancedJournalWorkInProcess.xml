<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleProjAdvancedJournalWorkInProcess</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     An accounting distribution rule for project advanced journal source document.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProjAdvancedJournal), BusinessEvent_ProjAdvancedJournal::RecordProjectActivity, MonetaryAmount::WorkInProcess)]
public class AccDistRuleProjAdvancedJournalWorkInProcess extends AccountingDistributionRule
{
    ProjAdvancedJournal     projAdvancedJournal;
    ProjAdvancedJournalLine projAdvancedJournalLine;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the accounting rule.
    /// </summary>
    protected void initialize()
    {
        SourceDocumentLineImplementation sourceDocumentLineImplementation;

        sourceDocumentLineImplementation = sourceDocumentLineItem.parmSourceDocumentLine().getSourceDocumentLineImplementation();
        if (sourceDocumentLineImplementation.TableId != tableNum(ProjAdvancedJournalLine))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        projAdvancedJournalLine = sourceDocumentLineImplementation;
        projAdvancedJournal = projAdvancedJournalLine.getProjAdvancedJournal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        return LedgerPostingType::ProjSalesvalue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        if (this.parmAmount() >= 0)
        {
            return DebitCredit::Credit;
        }
        else
        {
            return DebitCredit::Debit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>