<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesFormLetterReport_PickingList</Name>
	<SourceCode>
		<Declaration><![CDATA[
[PrintMgmtDocumentTypeFactoryAttribute(PrintMgmtDocumentType::InventPickList)]
[DocumentStatusFactoryAttribute(DocumentStatus::PickingList)]
class SalesFormLetterReport_PickingList extends SalesFormLetterReport
{
    InventTransType transType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDefaultPrintJobSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default printer settings for the specified <c>PrintSetupOriginalCopy</c> enumeration value.
    /// </summary>
    /// <param name="_printCopyOriginal">
    /// The <c>PrintSetupOriginalCopy</c> enumeration value that specifies whether the Original
    /// or Copy destinations should be retrieved.
    /// </param>
    /// <returns>
    /// The default printer settings for the specified <c>PrintSetupOriginalCopy</c> enumeration value.
    /// </returns>
    /// <remarks>
    /// The general pattern for implementing this method is to use the printer destinations from the appropriate
    /// <c>FormLetter</c> class.  These printer destinations will be used if no Print Management destinations are
    /// found or used.
    /// </remarks>
    protected container getDefaultPrintJobSettings(PrintSetupOriginalCopy _printCopyOriginal)
    {
        return SalesFormLetter::getPrinterSettingsFormletter(DocumentStatus::PickingList, _printCopyOriginal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>PrintMgmtDocumentType</c> enumeration value that specifies what document this <c>FormLetterReport</c> class controls.
    /// </summary>
    /// <returns>
    /// The <c>PrintMgmtDocumentType</c> enumeration value that specifies what document this <c>FormLetterReport</c> class controls.
    /// </returns>
    /// <remarks>
    /// This value is used to retrieve the appropriate Print Management settings for the report.
    /// </remarks>
    public PrintMgmtDocumentType getPrintMgmtDocumentType()
    {
        return PrintMgmtDocumentType::InventPickList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtHierarchyType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>PrintMgmtHierarchyType</c> enumeration value that specifies what hierarchy this <c>FormLetterReport</c> class uses.
    /// </summary>
    /// <returns>
    /// The <c>PrintMgmtHierarchyType</c> enumeration value that specifies what hierarchy this <c>FormLetterReport</c> class uses.
    /// </returns>
    /// <remarks>
    /// This value is used to retrieve the appropriate Print Management settings for the report.
    /// </remarks>
    protected PrintMgmtHierarchyType getPrintMgmtHierarchyType()
    {
        return PrintMgmtHierarchyType::Invent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtNodeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>PrintMgmtNodeType</c> enumeration value that specifies what node this <c>FormLetterReport</c> class uses.
    /// </summary>
    /// <returns>
    /// The <c>PrintMgmtNodeType</c> enumeration value that specifies what node this <c>FormLetterReport</c> class uses.
    /// </returns>
    /// <remarks>
    /// This value is used to retrieve the appropriate Print Management settings for the report.
    /// </remarks>
    protected PrintMgmtNodeType getPrintMgmtNodeType()
    {
        if (transType == InventTransType::Sales)
        {
            // Hanlde picking lists for normal orders
            return PrintMgmtNodeType::SalesTable;
        }
        else if (transType == InventTransType::TransferOrderShip)
        {
            // Handle picking lists for transfer orders
            return PrintMgmtNodeType::InventTransferTable;
        }

        return PrintMgmtNodeType::Invent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPrintMgmtNodeTypeFromTransType</Name>
				<Source><![CDATA[
    public void setPrintMgmtNodeTypeFromTransType(InventTransType _transType)
    {
        transType = _transType;
        printMgmtReportRun.parmNodeType(this.getPrintMgmtNodeType());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>