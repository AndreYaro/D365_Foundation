<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IntentLetterCloseController_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>IntentLetterCloseController_IT</c> controller for start intent letter closing.
/// </summary>
public class IntentLetterCloseController_IT extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (_args && _args.caller() is FormRun)
        {
            Common record = _args.record();

            if (record.tableId == tablenum(IntentLetter_IT))
            {
                IntentLetterCloseController_IT controller = IntentLetterCloseController_IT::construct();
                controller.parmDialogCaption("@ExtendedItallianLocalization:CloseLetter");

                IntentLetterCloseDataContract_IT contract = controller.getDataContractObject();

                List intentLetterList = new List(Types::Record);
                MultiSelectionHelper multiselectionHelper = MultiSelectionHelper::createFromCaller(_args.caller());

                IntentLetter_IT intentLetter = multiselectionHelper.getFirst();
                    
                while (intentLetter)
                {
                    intentLetterList.addEnd(intentLetter);
                    intentLetter = multiselectionHelper.getNext();
                }

                contract.parmIntentLetterList(intentLetterList);

                controller.startOperation();

                _args.record().dataSource().reSearch(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static IntentLetterCloseController_IT construct()
    {
        IdentifierName className = classStr(IntentLetterCloseService_IT);
        IdentifierName methodName = methodStr(IntentLetterCloseService_IT, runProcessing);
        SysOperationExecutionMode mode = SysOperationExecutionMode::Synchronous;

        IntentLetterCloseController_IT controller = new IntentLetterCloseController_IT(className, methodName, mode);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>