<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationLineObject</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntegrationLineObject</c> class is an object class for lines or charges.
/// </summary>
public class TaxIntegrationLineObject extends TaxIntegrationAbstractRecordObject
{
    // new
    private Map chargeMap;
    private Map taxLineMap;
    private Map taxAdjustedLineMap;
    private Set taxCodeSet;
    private Set taxAdjustedCodeSet;

    private TaxIntegrationAddressObject shipmentOriginAddress;
    private TaxIntegrationAddressObject shipmentDestinationAddress;
    private TaxIntegrationInventoryObject inventory;

    // construct
    internal protected TaxIntegrationDocumentObject parentDocument;
    internal protected TaxIntegrationLineObject parentLine;

    private TaxIntegrationLineType lineType;
    private LineNum lineNum;

    private TaxGroup taxGroup;
    private TaxItemGroup taxItemGroup;
    private NoYes overrideSalesTax;

    private TransDate calculationDate;
    private TransDate deliveryDate;

    private ItemId itemId;
    private ItemType itemType;
    private ItemGroupId itemGroup;
    private RetailVariantId productVariant;
    private EcoResCategoryId categoryId;
    private EcoResCategoryName itemCategoryName;
    private IntrastatCommodityId intrastatCommodityId;
    private EcoResCategoryCommodityCode intrastatCommodityCode;

    private MCRDropShipment directDelivery;
    private DlvTermId deliveryTerm;

    private TaxQty quantity;
    private UnitOfMeasureSymbol unit;
    private TransactionTextLarge text;

    private CurrencyCode transactionCurrencyCode;
    private EUROTriangulation euroTriangulation;
    // The tax calculation api uses this value to calculate tax.
    private LineAmount transactionAmount;
    // It is the transaction line amount, which is before the total discount calculation.
    private LineAmount lineAmount;
    private LineAmount costAmount;

    private InventTransId inventoryTransactionId;
    private DimensionDefault ledgerDimension;
    private LedgerDimensionAccount operationLedgerDimension;
    private LedgerPostingType ledgerPostingType;
    private MainAccountNum generalLedgerAccount;

    private CurrencyCode chargeParentCurrencyCode;
    private MarkupType chargeDebitType;
    private MarkupType chargeCreditType;

    private TaxableLine taxableLine;
    private boolean taxable;
    private TaxRegistrationRecId taxId;

    private TaxAdjustmentStatus adjustmentStatus;
    private ProjId projectId;
    private ProjCategoryId projectCategory;
    private SelectableDataArea company;

    private boolean needUpdateRecord;

    // Output member
    private AmountCur baseAmount;
    private AmountCur cashDiscountAmountForBase;
    private TransDate requestedDate;
    private TransDate shipDate;
    private TransDate receiveDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationLineObject</c>.
    /// </summary>
    /// <param name = "_tableId">The table id.</param>
    /// <param name = "_recId">The rec id.</param>
    internal void new(RefTableId _tableId, RefRecId _recId)
    {
        super(_tableId, _recId);

        this.chargeMap = new Map(Types::String, Types::AnyType);
        this.taxLineMap = new Map(Types::String, Types::AnyType);
        this.taxAdjustedLineMap = new Map(Types::String, Types::AnyType);
        this.taxCodeSet = new Set(Types::String);
        this.taxAdjustedCodeSet = new Set(Types::String);
        this.shipmentOriginAddress = TaxIntegrationAddressObject::construct();
        this.shipmentDestinationAddress = TaxIntegrationAddressObject::construct();
        this.inventory = TaxIntegrationInventoryObject::construct();
        this.setTaxable(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructOnDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationLineObject</c>.
    /// </summary>
    /// <param name = "_tableId">The table id.</param>
    /// <param name = "_recId">The rec id.</param>
    /// <param name = "_parentDocument">The parent document.</param>
    /// <returns>The new <c>TaxIntegrationLineObject</c>.</returns>
    public static TaxIntegrationLineObject constructOnDocument(
        RefTableId _tableId,
        RefRecId _recId,
        TaxIntegrationDocumentObject _parentDocument)
    {
        var line = new TaxIntegrationLineObject(_tableId, _recId);
        line.parentDocument = _parentDocument;
        return line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructOnDocumentWithRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationLineObject</c>.
    /// </summary>
    /// <param name = "_record">The record.</param>
    /// <param name = "_parentDocument">The parent document.</param>
    /// <returns>The new <c>TaxIntegrationLineObject</c>.</returns>
    public static TaxIntegrationLineObject constructOnDocumentWithRecord(
        Common _record,
        TaxIntegrationDocumentObject _parentDocument)
    {
        var line = new TaxIntegrationLineObject(_record.TableId, _record.RecId);
        line.parentDocument = _parentDocument;
        line.setLocalRecord(_record);
        return line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructOnLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationLineObject</c>.
    /// </summary>
    /// <param name = "_tableId">The table id.</param>
    /// <param name = "_recId">The rec id.</param>
    /// <param name = "_parentLine">The parent line.</param>
    /// <returns>The new <c>TaxIntegrationLineObject</c>.</returns>
    public final static TaxIntegrationLineObject constructOnLine(
        RefTableId _tableId,
        RefRecId _recId,
        TaxIntegrationLineObject _parentLine)
    {
        var line = new TaxIntegrationLineObject(_tableId, _recId);
        line.parentLine = _parentLine;
        return line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructOnLineWithRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationLineObject</c>.
    /// </summary>
    /// <param name = "_record">The record.</param>
    /// <param name = "_parentLine">The parent line.</param>
    /// <returns>The new <c>TaxIntegrationLineObject</c>.</returns>
    public final static TaxIntegrationLineObject constructOnLineWithRecord(
        Common _record,
        TaxIntegrationLineObject _parentLine)
    {
        var line = new TaxIntegrationLineObject(_record.TableId, _record.RecId);
        line.parentLine = _parentLine;
        line.setLocalRecord(_record);
        return line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCharge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a charge.
    /// </summary>
    /// <param name = "_id">The id of the charge.</param>
    /// <returns>The charge.</returns>
    public final TaxIntegrationLineObject getCharge(TaxIntegrationLocalId _id)
    {
        return this.chargeMap.lookup(_id);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargeSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the charge set.
    /// </summary>
    /// <returns>The charge set.</returns>
    public final Set getChargeSet()
    {
        return this.chargeMap.valueSet();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCharge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a charge exists.
    /// </summary>
    /// <param name = "_id">The id of the charge.</param>
    /// <returns>Whether a charge exists.</returns>
    public final boolean checkCharge(TaxIntegrationLocalId _id)
    {
        return this.chargeMap.exists(_id);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCharge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a charge.
    /// </summary>
    /// <param name = "_charge">The charge.</param>
    /// <returns>Whether the operation is successful.</returns>
    public final boolean insertCharge(TaxIntegrationLineObject _charge)
    {
        TaxIntegrationLocalId id = _charge.getLocalId();
        return this.chargeMap.insert(id, _charge);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargeCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the count of the charges.
    /// </summary>
    /// <returns>The count of the charges.</returns>
    public final int getChargeCount()
    {
        return this.chargeMap.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a tax line.
    /// </summary>
    /// <param name = "_taxCode">The tax code.</param>
    /// <returns>The tax line.</returns>
    public final TaxIntegrationTaxLineObject getTaxLine(TaxCode _taxCode)
    {
        return this.taxLineMap.lookup(_taxCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxLineSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax line set.
    /// </summary>
    /// <returns>The tax line set.</returns>
    public final Set getTaxLineSet()
    {
        return this.taxLineMap.valueSet();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTaxLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a tax line exists.
    /// </summary>
    /// <param name = "_code">The tax code of the tax line.</param>
    /// <returns>Whether a tax line exists.</returns>
    public final boolean checkTaxLine(TaxCode _code)
    {
        return this.taxLineMap.exists(_code);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTaxLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a tax line.
    /// </summary>
    /// <param name = "_taxLine">The tax line.</param>
    /// <returns>Whether the operation is successful.</returns>
    public final boolean insertTaxLine(TaxIntegrationTaxLineObject _taxLine)
    {
        TaxCode taxCode = _taxLine.getTaxCode();
        return this.taxLineMap.insert(taxCode, _taxLine)
            && this.taxCodeSet.add(taxCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxLineCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the count of the tax lines.
    /// </summary>
    /// <returns>The count of the tax lines.</returns>
    public final int getTaxLineCount()
    {
        return this.taxLineMap.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxCodeSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax code set.
    /// </summary>
    /// <returns>The tax code set.</returns>
    public final Set getTaxCodeSet()
    {
        return this.taxCodeSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOriginAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the origin address.
    /// </summary>
    /// <returns>The origin address.</returns>
    [SysObsolete('This method is deprecated, use getShipmentOriginAddress instead.', true, 10\5\2021)]
    public final TaxIntegrationAddressObject getOriginAddress()
    {
        return this.getShipmentOriginAddress();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDestinationAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the destination address.
    /// </summary>
    /// <returns>The destination address.</returns>
    [SysObsolete('This method is deprecated, use getShipmentDestinationAddress instead.', true, 10\5\2021)]
    public final TaxIntegrationAddressObject getDestinationAddress()
    {
        return this.getShipmentDestinationAddress();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShipmentOriginAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the shipment origin address.
    /// </summary>
    /// <returns>The shipment origin address.</returns>
    public final TaxIntegrationAddressObject getShipmentOriginAddress()
    {
        return this.shipmentOriginAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShipmentDestinationAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the shipment destination address.
    /// </summary>
    /// <returns>The shipment destination address.</returns>
    public final TaxIntegrationAddressObject getShipmentDestinationAddress()
    {
        return this.shipmentDestinationAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the inventory.
    /// </summary>
    /// <returns>The inventory.</returns>
    public final TaxIntegrationInventoryObject getInventory()
    {
        return this.inventory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the parent record.
    /// </summary>
    /// <returns>The parent record.</returns>
    public final TaxIntegrationAbstractRecordObject getParentRecord()
    {
        if (this.parentDocument)
        {
            return this.parentDocument;
        }
        else
        {
            return this.parentLine;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAncestorDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ancestor document.
    /// </summary>
    /// <returns>The ancestor document.</returns>
    public final TaxIntegrationDocumentObject getAncestorDocument()
    {
        if (this.parentDocument)
        {
            return this.parentDocument;
        }
        else
        {
            return this.parentLine.getAncestorDocument();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLineType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets line type.
    /// </summary>
    /// <returns>The line type.</returns>
    public final TaxIntegrationLineType getLineType()
    {
        return this.lineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets line type.
    /// </summary>
    /// <param name = "_value">The line type.</param>
    public final void setLineType(TaxIntegrationLineType _value)
    {
        this.lineType = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets line number.
    /// </summary>
    /// <returns>The line number.</returns>
    public final LineNum getLineNum()
    {
        return this.lineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets line number.
    /// </summary>
    /// <param name = "_value">The line number.</param>
    public final void setLineNum(LineNum _value)
    {
        this.lineNum = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax group.
    /// </summary>
    /// <returns>The tax group.</returns>
    public final TaxGroup getTaxGroup()
    {
        return this.taxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the tax group.
    /// </summary>
    /// <param name = "_value">The tax group.</param>
    public final void setTaxGroup(TaxGroup _value)
    {
        this.taxGroup = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOverrideSalesTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the override sales tax.
    /// </summary>
    /// <returns>The override sales tax.</returns>
    public final NoYes getOverrideSalesTax()
    {
        return this.overrideSalesTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOverrideSalesTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the override sales tax.
    /// </summary>
    /// <param name = "_value">The override sales tax.</param>
    public final void setOverrideSalesTax(NoYes _value)
    {
        this.overrideSalesTax = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax item group.
    /// </summary>
    /// <returns>The tax item group.</returns>
    public final TaxItemGroup getTaxItemGroup()
    {
        return this.taxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the tax item group.
    /// </summary>
    /// <param name = "_value">The tax item group.</param>
    public final void setTaxItemGroup(TaxItemGroup _value)
    {
        this.taxItemGroup = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBaseAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the base amount. For case tax inclusive, this is amount excluding tax.
    /// </summary>
    /// <returns>The line base amount.</returns>
    public final AmountCur getBaseAmount()
    {
        return this.baseAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBaseAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the base amount. For case tax inclusive, this is amount excluding tax.
    /// </summary>
    /// <param name = "_value">The line base amount.</param>
    public final void setBaseAmount(AmountCur _value)
    {
        this.baseAmount = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCashDiscountAmountForBase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the discount amount for tax base calculation.
    /// </summary>
    /// <returns>The line cash discount amount.</returns>
    public final AmountCur getCashDiscountAmountForBase()
    {
        return this.cashDiscountAmountForBase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscountAmountForBase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the discount amount for tax base calculation.
    /// </summary>
    /// <param name = "_value">The line cash discount amount.</param>
    public final void setCashDiscountAmountForBase(AmountCur _value)
    {
        this.cashDiscountAmountForBase = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineCalculationDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the calculation date and copies to line.
    /// </summary>
    protected internal void determineCalculationDate()
    {
        TaxIntegrationDocumentObject document = this.getAncestorDocument();
        switch (document.getTaxIntegrationSetting().getCalculationDateType())
        {
            case TaxCalculationDateType::DeliveryDate:
                calculationDate = deliveryDate ? deliveryDate : document.getDeliveryDate();
                break;
            case TaxCalculationDateType::DocumentDate:
                calculationDate = document.getDocumentDate();
                break;
            default:
                calculationDate = document.getInvoiceDate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCalculationDateV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the calculation date.
    /// </summary>
    /// <returns>The calculation date.</returns>
    public final TransDate getCalculationDateV2()
    {
        return calculationDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCalculationDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the calculation date.
    /// </summary>
    /// <param name = "_value">The calculation date.</param>
    public final void setCalculationDate(TransDate _value)
    {
        this.calculationDate = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the delivery date.
    /// </summary>
    /// <returns>The delivery date.</returns>
    public final TransDate getDeliveryDate()
    {
        return this.deliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the delivery date.
    /// </summary>
    /// <param name = "_value">The delivery date.</param>
    public final void setDeliveryDate(TransDate _value)
    {
        this.deliveryDate = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the item id.
    /// </summary>
    /// <returns>The item id.</returns>
    public final ItemId getItemId()
    {
        return this.itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the item id.
    /// </summary>
    /// <param name = "_value">The item id.</param>
    public final void setItemId(ItemId _value)
    {
        this.itemId = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProductVariant</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product variant.
    /// </summary>
    /// <returns>The product variant.</returns>
    public final RetailVariantId getProductVariant()
    {
        return this.productVariant;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProductVariant</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the product variant.
    /// </summary>
    /// <param name = "_value">The product variant.</param>
    public final void setProductVariant(RetailVariantId _value)
    {
        this.productVariant = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the category id.
    /// </summary>
    /// <returns>The category id.</returns>
    public final EcoResCategoryId getCategoryId()
    {
        return this.categoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the category id.
    /// </summary>
    /// <param name = "_value">The category id.</param>
    public final void setCategoryId(EcoResCategoryId _value)
    {
        this.categoryId = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemCategoryName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the item category name.
    /// </summary>
    /// <returns>The item category name.</returns>
    public final EcoResCategoryName getItemCategoryName()
    {
        return this.itemCategoryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemCategoryName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the item category name.
    /// </summary>
    /// <param name = "_value">The item category name.</param>
    public final void setItemCategoryName(EcoResCategoryName _value)
    {
        this.itemCategoryName = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the item type.
    /// </summary>
    /// <returns>The item type.</returns>
    public final ItemType getItemType()
    {
        return this.itemType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the item type.
    /// </summary>
    /// <param name = "_value">The item type.</param>
    public final void setItemType(ItemType _value)
    {
        this.itemType = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIntrastatCommodityId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the intrastat commodity id.
    /// </summary>
    /// <returns>The intrastat commodity id.</returns>
    public final IntrastatCommodityId getIntrastatCommodityId()
    {
        return this.intrastatCommodityId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIntrastatCommodityId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the intrastat commodity id.
    /// </summary>
    /// <param name = "_value">The intrastat commodity id.</param>
    public final void setIntrastatCommodityId(IntrastatCommodityId _value)
    {
        this.intrastatCommodityId = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIntrastatCommodityCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the intrastat commodity code.
    /// </summary>
    /// <returns>The intrastat commodity code.</returns>
    public final EcoResCategoryCommodityCode getIntrastatCommodityCode()
    {
        return this.intrastatCommodityCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIntrastatCommodityCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the intrastat commodity code.
    /// </summary>
    /// <param name = "_value">The intrastat commodity code.</param>
    public final void setIntrastatCommodityCode(EcoResCategoryCommodityCode _value)
    {
        this.intrastatCommodityCode = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDirectDelivery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the direct delivery.
    /// </summary>
    /// <returns>The direct delivery.</returns>
    public final MCRDropShipment getDirectDelivery()
    {
        return this.directDelivery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDirectDelivery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the direct delivery.
    /// </summary>
    /// <param name = "_value">The direct delivery.</param>
    public final void setDirectDelivery(MCRDropShipment _value)
    {
        this.directDelivery = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeliveryTerm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets delivery term.
    /// </summary>
    /// <returns>The delivery term</returns>
    public final DlvTermId getDeliveryTerm()
    {
        return this.deliveryTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryTerm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets delivery term.
    /// </summary>
    /// <param name = "_value">The delivery term.</param>
    public final void setDeliveryTerm(DlvTermId _value)
    {
        this.deliveryTerm = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the quantity.
    /// </summary>
    /// <returns>The quantity.</returns>
    public final TaxQty getQuantity()
    {
        return this.quantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the quantity.
    /// </summary>
    /// <param name = "_value">The quantity.</param>
    public final void setQuantity(TaxQty _value)
    {
        this.quantity = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the unit.
    /// </summary>
    /// <returns>The unit.</returns>
    public final UnitOfMeasureSymbol getUnit()
    {
        return this.unit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the unit.
    /// </summary>
    /// <param name = "_value">The unit.</param>
    public final void setUnit(UnitOfMeasureSymbol _value)
    {
        this.unit = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the text.
    /// </summary>
    /// <returns>The text.</returns>
    public final TransactionTextLarge getText()
    {
        return this.text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the text.
    /// </summary>
    /// <param name = "_value">The text.</param>
    public final void setText(TransactionTextLarge _value)
    {
        this.text = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction currency code.
    /// </summary>
    /// <returns>The transaction currency code.</returns>
    public final CurrencyCode getTransactionCurrencyCode()
    {
        const str LoggerName = 'Tax Integration - Currency Conversion - Missing Line Transaction Currency Code';

        if (this.transactionCurrencyCode)
        {
            return this.transactionCurrencyCode;
        }
        using (var context = TaxIntegrationAbstractActivity::getActivityContextStatic(LoggerName))
        {
            if (this.parentLine)
            {
                if (this.parentLine.getTransactionCurrencyCode())
                {
                    return this.parentLine.getTransactionCurrencyCode();
                }
            }
            return this.getAncestorDocument().getTransactionCurrencyCode();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the transaction currency code.
    /// </summary>
    /// <param name = "_value">The transaction currency code.</param>
    public final void setTransactionCurrencyCode(CurrencyCode _value)
    {
        this.transactionCurrencyCode = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cost amount.
    /// </summary>
    /// <returns>The cost amount.</returns>
    public final LineAmount getCostAmount()
    {
        return this.costAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCostAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the cost amount.
    /// </summary>
    /// <param name = "_value">The cost amount.</param>
    public final void setCostAmount(LineAmount _value)
    {
        this.costAmount = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction amount.
    /// </summary>
    /// <returns>
    /// The transaction amount.
    /// </returns>
    /// <remarks>
    /// The tax calculation api uses this value to calculate tax.
    /// </remarks>
    public final LineAmount getTransactionAmount()
    {
        return this.transactionAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the transaction amount.
    /// </summary>
    /// <param name = "_value">The transaction amount.</param>
    /// <remarks>
    /// The tax calculation api uses this value to calculate tax.
    /// </remarks>
    public final void setTransactionAmount(LineAmount _value)
    {
        this.transactionAmount = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line amount.
    /// </summary>
    /// <returns>
    /// The line amount.
    /// </returns>
    /// <remarks>
    /// It is the transaction line amount, which is before the total discount calculation.
    /// </remarks>
    internal final AmountCur getLineAmount()
    {
        return this.lineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the line amount.
    /// </summary>
    /// <param name = "_value">
    /// The line line amount.
    /// </param>
    /// <remarks>
    /// It is the transaction line amount, which is before the total discount calculation.
    /// </remarks>
    internal final void setLineAmount(AmountCur _value)
    {
        this.lineAmount = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventoryTransactionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the inventory transaction id.
    /// </summary>
    /// <returns>The inventory transaction id.</returns>
    public final InventTransId getInventoryTransactionId()
    {
        return this.inventoryTransactionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventoryTransactionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the inventory transaction id.
    /// </summary>
    /// <param name = "_value">The inventory transaction id.</param>
    public final void setInventoryTransactionId(InventTransId _value)
    {
        this.inventoryTransactionId = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ledger dimension.
    /// </summary>
    /// <returns>The ledger dimension.</returns>
    public final DimensionDefault getLedgerDimension()
    {
        return this.ledgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the ledger dimension.
    /// </summary>
    /// <param name = "_value">The ledger dimension.</param>
    public final void setLedgerDimension(DimensionDefault _value)
    {
        this.ledgerDimension = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOperationLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the operation ledger dimension.
    /// </summary>
    /// <returns>The operation ledger dimension.</returns>
    public final LedgerDimensionAccount getOperationLedgerDimension()
    {
        return this.operationLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOperationLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the operation ledger dimension.
    /// </summary>
    /// <param name = "_value">The operation ledger dimension.</param>
    public final void setOperationLedgerDimension(LedgerDimensionAccount _value)
    {
        this.operationLedgerDimension = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLedgerPostingType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ledger posting type.
    /// </summary>
    /// <returns>The ledger posting type.</returns>
    public final LedgerPostingType getLedgerPostingType()
    {
        return this.ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerPostingType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the ledger posting type.
    /// </summary>
    /// <param name = "_value">The ledger posting type.</param>
    public final void setLedgerPostingType(LedgerPostingType _value)
    {
        this.ledgerPostingType = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGeneralLedgerAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the GL account.
    /// </summary>
    /// <returns>The GL account.</returns>
    public final MainAccountNum getGeneralLedgerAccount()
    {
        return this.generalLedgerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setGeneralLedgerAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the GL account.
    /// </summary>
    /// <param name = "_value">The GL account.</param>
    public final void setGeneralLedgerAccount(MainAccountNum _value)
    {
        this.generalLedgerAccount = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEUROTriangulation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the EURO triangulation.
    /// </summary>
    /// <returns>The EURO triangulation</returns>
    public EUROTriangulation getEUROTriangulation()
    {
        return this.euroTriangulation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEUROTriangulation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the EURO triangulation.
    /// </summary>
    /// <param name = "_value">The EURO triangulation.</param>
    public void setEUROTriangulation(EUROTriangulation _value)
    {
        this.euroTriangulation = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargeParentCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the currency code for the parent record related to the miscellaneous charges transaction.
    /// </summary>
    /// <returns>The currency code for the parent record related to the miscellaneous charges transaction.</returns>
    public final CurrencyCode getChargeParentCurrencyCode()
    {
        return this.chargeParentCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setChargeParentCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the currency code for the parent record related to the miscellaneous charges transaction.
    /// </summary>
    /// <param name = "_value">The currency code for the parent record related to the miscellaneous charges transaction.</param>
    public final void setChargeParentCurrencyCode(CurrencyCode _value)
    {
        this.chargeParentCurrencyCode = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargeDebitType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the debit type for charge code.
    /// </summary>
    /// <returns>The debit type for charge code.</returns>
    public final MarkupType getChargeDebitType()
    {
        return this.chargeDebitType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setChargeDebitType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the debit type for charge code.
    /// </summary>
    /// <param name = "_value">The debit type for charge code.</param>
    public final void setChargeDebitType(MarkupType _value)
    {
        this.chargeDebitType = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargeCreditType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the credit type for charge code.
    /// </summary>
    /// <returns>The credit type for charge code.</returns>
    public final MarkupType getChargeCreditType()
    {
        return this.chargeCreditType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setChargeCreditType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the credit type for charge code.
    /// </summary>
    /// <param name = "_value">The credit type for charge code.</param>
    public final void setChargeCreditType(MarkupType _value)
    {
        this.chargeCreditType = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets whether it is taxable.
    /// </summary>
    /// <returns>Whether it is taxable.</returns>
    public final boolean isTaxable()
    {
        return this.taxable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets whether it is taxable.
    /// </summary>
    /// <param name = "_value">Whether it is taxable.</param>
    public final void setTaxable(boolean _value)
    {
        this.taxable = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxAdjustedLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a tax adjusted line.
    /// </summary>
    /// <param name = "_taxCode">The tax code.</param>
    /// <returns>Tax adjusted line.</returns>
    public final TaxIntegrationTaxLineObject getTaxAdjustedLine(TaxCode _taxCode)
    {
        return this.taxAdjustedLineMap.lookup(_taxCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxAdjustedLineSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax adjusted line set.
    /// </summary>
    /// <returns>The tax adjusted line set.</returns>
    public final Set getTaxAdjustedLineSet()
    {
        return this.taxAdjustedLineMap.valueSet();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxAdjustedCodeSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax code set.
    /// </summary>
    /// <returns>The tax code set.</returns>
    public final Set getTaxAdjustedCodeSet()
    {
        return this.taxAdjustedCodeSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTaxAdjustedLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a tax adjusted line exists.
    /// </summary>
    /// <param name = "_code">The tax code.</param>
    /// <returns>>Whether a tax adjusted line exists.</returns>
    public final boolean checkTaxAdjustedLine(TaxCode _code)
    {
        return this.taxAdjustedLineMap.exists(_code);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTaxAdjustedLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a tax adjusted line.
    /// </summary>
    /// <param name = "_taxLine">The <c>TaxIntegrationTaxLineObject</c> tax adjusted line object. </param>
    /// <returns>Whether the operation is successful.</returns>
    public final boolean insertTaxAdjustedLine(TaxIntegrationTaxLineObject _taxLine)
    {
        TaxCode taxCode = _taxLine.getTaxCode();
        return this.taxAdjustedLineMap.insert(taxCode, _taxLine)
            && this.taxAdjustedCodeSet.add(taxCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdjustmentStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax adjustment status.
    /// </summary>
    /// <returns>The tax adjustment status.</returns>
    public final TaxAdjustmentStatus getAdjustmentStatus()
    {
        return this.adjustmentStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAdjustmentStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets tax adjustment status.
    /// </summary>
    /// <param name = "_value">The tax adjustment status.</param>
    public final void setAdjustmentStatus(TaxAdjustmentStatus _value)
    {
        this.adjustmentStatus = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemGroup</Name>
				<Source><![CDATA[
    public final ItemGroupId getItemGroup()
    {
        return this.itemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemGroup</Name>
				<Source><![CDATA[
    public final void setItemGroup(ItemGroupId _value)
    {
        this.itemGroup = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearTaxAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears line tax adjustment.
    /// </summary>
    public void clearTaxAdjustment()
    {
        SetEnumerator lineChargeSet = this.getChargeSet().getEnumerator();
        while (lineChargeSet.moveNext())
        {
            TaxIntegrationLineObject lineCharge = lineChargeSet.current();
            lineCharge.clearTaxAdjustment();
        }

        this.taxAdjustedLineMap = new Map(Types::String, Types::AnyType);
        this.taxAdjustedCodeSet = new Set(Types::String);

        TaxWorkRegulation::clearRegulation(this.getLocalTableId(), this.getLocalRecId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSendToTaxService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether line shoule be sent to tax service.
    /// </summary>
    /// <returns>True, if to send; otherwise, false.</returns>
    public boolean shouldSendToTaxService()
    {
        return this.isTaxable()
            && (this.getOverrideSalesTax() == NoYes::No
                || this.shouldSendAdjustmentGroupToTaxService());
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSendAdjustmentGroupToTaxService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether tax group and item tax group in adjustment should be sent to tax service.
    /// </summary>
    /// <returns>True, if to send; otherwise, false.</returns>
    public boolean shouldSendAdjustmentGroupToTaxService()
    {
        return this.getOverrideSalesTax() == NoYes::Yes
            && this.getTaxGroup()
            && this.getTaxItemGroup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjectId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the project Id.
    /// </summary>
    /// <param name = "_value">The project Id.</param>
    public final void setProjectId(ProjId _value)
    {
        this.projectId = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjectId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the project Id.
    /// </summary>
    /// <returns>The project Id.</returns>
    public final ProjId getProjectId()
    {
        return this.projectId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjectCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the project category.
    /// </summary>
    /// <param name = "_value">The project category.</param>
    public final void setProjectCategory(ProjCategoryId _value)
    {
        this.projectCategory = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjectCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the project category.
    /// </summary>
    /// <returns>The project category.</returns>
    public final ProjCategoryId getProjectCategory()
    {
        return this.projectCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNeedUpdateRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value if the object need to update value for database record.
    /// </summary>
    /// <param name = "_value">Whether the object need to update value for database record.</param>
    public final void setNeedUpdateRecord(boolean _value)
    {
        this.needUpdateRecord = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNeedUpdateRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value if the object need to update value for database record.
    /// </summary>
    /// <returns>The value if the object need to update value for database record.</returns>
    public final boolean getNeedUpdateRecord()
    {
        return this.needUpdateRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the company of line object.
    /// </summary>
    /// <returns>The company.</returns>
    public SelectableDataArea getCompany()
    {
        if (TaxIntegrationLineCompanyFlight::instance().isEnabled()
            && !this.company)
        {
            return curExt();
        }
        return this.company;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the company.
    /// </summary>
    /// <param name = "_company">The company.</param>
    public void setCompany(SelectableDataArea _company)
    {
        this.company = _company;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRequestedDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the requested date.
    /// </summary>
    /// <returns>The requested date.</returns>
    public final TransDate getRequestedDate()
    {
        return this.requestedDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequestedDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the requested date.
    /// </summary>
    /// <param name = "_value">The requested date.</param>
    public final void setRequestedDate(TransDate _value)
    {
        this.requestedDate = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShipDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the shipment date.
    /// </summary>
    /// <returns>The shipment date.</returns>
    public final TransDate getShipDate()
    {
        return this.shipDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the shipment date.
    /// </summary>
    /// <param name = "_value">The shipment date.</param>
    public final void setShipDate(TransDate _value)
    {
        this.shipDate = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReceiveDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the receive date.
    /// </summary>
    /// <returns>The receive date.</returns>
    public final TransDate getReceiveDate()
    {
        return this.receiveDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiveDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the receive date.
    /// </summary>
    /// <param name = "_value">The receive date.</param>
    public final void setReceiveDate(TransDate _value)
    {
        this.receiveDate = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxableLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the taxable line.
    /// </summary>
    /// <returns>The taxable line.</returns>
    public final TaxableLine getTaxableLine()
    {
        return this.taxableLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxableLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the taxable line.
    /// </summary>
    /// <param name = "_value">The taxable line.</param>
    public final void setTaxableLine(TaxableLine _value)
    {
        this.taxableLine = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax ID.
    /// </summary>
    /// <returns>The tax ID.</returns>
    public final TaxRegistrationRecId getTaxId()
    {
        return this.taxId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the tax ID.
    /// </summary>
    /// <param name = "_value">The tax ID</param>
    public final void setTaxId(TaxRegistrationRecId _value)
    {
        this.taxId = _value;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>