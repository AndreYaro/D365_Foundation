<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetTransferPost_CompanyIssue</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetTransferPost_CompanyIssue extends RAssetTransferPost implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkLine</Name>
				<Source><![CDATA[
        protected boolean checkLine(RAssetTransferTrans _assetTransferTrans)
    {
        RAssetOperationType  operationType;
        RAssetStandards      rAssetStandards;
        boolean              ret = true;

        while select AssetStandardId from rAssetStandards
            where rAssetStandards.AssetId == _assetTransferTrans.AccountNum &&
                  ! rAssetStandards.DisposalDate                            &&
                  rAssetStandards.Depreciation
        {
            operationType = RAssetOperationType::construct(RAssetTransType::CompanyIssue,
                                                           _assetTransferTrans,
                                                           assetTransferTable.TransDate,
                                                           rAssetStandards.AssetStandardId);
            ret = ret && operationType.check();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLine</Name>
				<Source><![CDATA[
        public void postLine(RAssetTransferTrans _assetTransferTrans)
    {
        RAssetMoveHistEngine rAssetMoveHistEngine;
        RAssetMoveHist       assetMoveHist;
        ;

        ttsbegin;

        assetMoveHist = this.initMoveHist(_assetTransferTrans, assetMoveHist);

        assetMoveHist.MoveType = RAssetMoveType::CompanyIssue;
        assetMoveHist.AssetId  = _assetTransferTrans.AssetId;
        assetMoveHist.Company  = _assetTransferTrans.Company;

        rAssetMoveHistEngine = RAssetMoveHistEngine::construct(assetMoveHist);

        if (! rAssetMoveHistEngine.validateWrite())
            throw error("@GLS101992");

        assetMoveHist.doInsert();

        rAssetMoveHistEngine.write();
        ttscommit;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>