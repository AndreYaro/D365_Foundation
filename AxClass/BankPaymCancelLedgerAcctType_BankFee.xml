<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankPaymCancelLedgerAcctType_BankFee</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankPaymCancelLedgerAcctType_BankFee</c> provides functionality specific to bank fees.
/// </summary>
class BankPaymCancelLedgerAcctType_BankFee extends BankPaymCancelLedgerAcctType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init(Common _common, BankAccountTrans _bankAccountTransToCancel)
    {
        bankAccountTransToCancel = _bankAccountTransToCancel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveCashGeneralJournalAccount</Name>
				<Source><![CDATA[
        public RecId retrieveCashGeneralJournalAccount()
    {
        return BankPaymCancelLedgerAcctType::findGenJourAcctEntryToCancel(bankAccountTransToCancel.Voucher,
            bankAccountTransToCancel.TransDate,
            bankAccountTransToCancel.DataAreaId,
            LedgerPostingType::Bank,
            bankAccountTransToCancel.PaymReference,
            bankAccountTransToCancel.BankTransAmountCur,
            bankAccountTransToCancel.BankTransCurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveOffsetToCancelGeneralJournal</Name>
				<Source><![CDATA[
        public RecId retrieveOffsetToCancelGeneralJournal()
    {
        TaxTrans taxTrans;
        AmountCur offSetAmountPosted;

        // If there are taxes they affect the offset amount so we need to calculate the adjustment
        select sum(SourceRegulateAmountCur) from taxTrans
            where taxTrans.SourceRecId == bankAccountTransToCancel.SourceRecId
            && taxTrans.SourceTableId == bankAccountTransToCancel.SourceTableId;

        if (taxTrans.SourceRegulateAmountCur)
        {
            offSetAmountPosted = -(bankAccountTransToCancel.BankTransAmountCur + taxTrans.SourceRegulateAmountCur);
        }
        else
        {
            offSetAmountPosted = -bankAccountTransToCancel.BankTransAmountCur;
        }

        return BankPaymCancelLedgerAcctType::findGenJourAcctEntryToCancel(bankAccountTransToCancel.Voucher,
            bankAccountTransToCancel.TransDate,
            bankAccountTransToCancel.dataAreaId,
            LedgerPostingType::LedgerJournal,
            bankAccountTransToCancel.PaymReference,
            offSetAmountPosted,
            bankAccountTransToCancel.BankTransCurrencyCode);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>