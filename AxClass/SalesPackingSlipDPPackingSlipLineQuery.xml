<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPackingSlipDPPackingSlipLineQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesPackingSlipDPPackingSlipLineQuery</c> builds the query used to retrieve packing slip lines in the <c>SalesPackingSlipDP</c> class.
/// </summary>
public class SalesPackingSlipDPPackingSlipLineQuery extends SysCommonCollectionQuery
{
    private QueryBuildDataSource    custPackingSlipTrans;
    private QueryBuildDataSource    custPackingSlipTransInventDim;
    private QueryBuildDataSource    custPackingSlipTransHistory;

    private SalesPackingSlipDP      packingSlipDP;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds data sources to the packing slip line query.
    /// </summary>
    /// <param name = "_query">
    /// The <c>Query</c> object where data sources will be added to.
    /// </param>
    protected void addDataSources(Query _query)
    {
        this.addCustPackingSlipTrans(_query);
        this.addCustPackingSlipTransInventDim(_query);

        if (this.parmPackingSlipDP().parmCustPackingSlipVersion().isArchived())
        {
            this.addCustPackingSlipTransHistory(_query);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustPackingSlipTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>CustPackingSlipTrans</c> table as a data source to the packing slip line query.
    /// </summary>
    /// <param name = "_query">
    /// The packing slip line query object.
    /// </param>
    protected void addCustPackingSlipTrans(Query _query)
    {
        custPackingSlipTrans = _query.addDataSource(tableNum(CustPackingSlipTrans));

        custPackingSlipTrans.addRange(fieldNum(CustPackingSlipTrans, SalesId)).value(SysQuery::value(this.parmPackingSlipDP().parmCustPackingSlipJour().SalesId));
        custPackingSlipTrans.addRange(fieldNum(CustPackingSlipTrans, PackingSlipId)).value(SysQuery::value(this.parmPackingSlipDP().parmCustPackingSlipJour().PackingSlipId));
        custPackingSlipTrans.addRange(fieldNum(CustPackingSlipTrans, DeliveryDate)).value(SysQuery::value(this.parmPackingSlipDP().parmCustPackingSlipJour().DeliveryDate));       

        custPackingSlipTrans.addSortField(fieldNum(CustPackingSlipTrans, OrigSalesId));

        this.addReadableDataSource(custPackingSlipTrans.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustPackingSlipTrans</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmCustPackingSlipTrans()
    {
        return custPackingSlipTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustPackingSlipTransInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>InventDim</c> table associated with <c>CustPackingSlipTrans</c> table as a data source to the packing slip line query.
    /// </summary>
    /// <param name = "_query">
    /// The packing slip line query object.
    /// </param>
    protected void addCustPackingSlipTransInventDim(Query _query)
    {
        custPackingSlipTransInventDim = this.parmCustPackingSlipTrans().addDataSource(tableNum(InventDim));

        custPackingSlipTransInventDim.joinMode(JoinMode::OuterJoin);
        custPackingSlipTransInventDim.fetchMode(QueryFetchMode::One2One);

        custPackingSlipTransInventDim.relations(false);
        custPackingSlipTransInventDim.addLink(fieldNum(CustPackingSlipTrans, InventDimId), fieldNum(InventDim, inventDimId), this.parmCustPackingSlipTrans().name());

        this.addReadableDataSource(custPackingSlipTransInventDim.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustPackingSlipTransInventDim</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmCustPackingSlipTransInventDim()
    {
        return custPackingSlipTransInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustPackingSlipTransHistory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>CustPackingSlipTransHistory</c> table associated with <c>CustPackingSlipTrans</c> table as a data source to the packing slip line query.
    /// </summary>
    /// <param name = "_query">
    /// The packing slip line query object.
    /// </param>
    protected void addCustPackingSlipTransHistory(Query _query)
    {
        _query.validTimeStateAsOfDateTime(this.parmPackingSlipDP().parmCustPackingSlipVersion().VersionDateTime);

        custPackingSlipTransHistory = this.parmCustPackingSlipTrans().addDataSource(tableNum(CustPackingSlipTransHistory));

        custPackingSlipTransHistory.relations(true);
        custPackingSlipTransHistory.joinMode(JoinMode::InnerJoin);
        custPackingSlipTransHistory.fetchMode(QueryFetchMode::One2One);
        custPackingSlipTransHistory.addRange(fieldNum(CustPackingSlipTransHistory, Qty)).value(SysQuery::valueNot(0));

        this.addReadableDataSource(custPackingSlipTransHistory.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustPackingSlipTransHistory</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public QueryBuildDataSource parmCustPackingSlipTransHistory()
    {
        return custPackingSlipTransHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDataProvider</Name>
				<Source><![CDATA[
    private void initializeDataProvider(SalesPackingSlipDP _packingSlipDP)
    {
        packingSlipDP = _packingSlipDP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackingSlipDP</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public SalesPackingSlipDP parmPackingSlipDP()
    {
        return packingSlipDP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCommonCollection</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public SysICommonCollection createCommonCollection()
    {
        return SalesPackingSlipDPPackingSlipLineQuerySelection::newFromPackingSlipLineQuery(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a query to retrieve order lines.
    /// </summary>
    /// <param name = "_packingSlipDP">
    /// A <c>SalesPackingSlipDP</c> object to create the query for.
    /// </param>
    /// <returns>
    /// The instantiated <c>SalesPackingSlipDPPackingSlipLineQuery</c> object.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    public static SalesPackingSlipDPPackingSlipLineQuery newQuery(SalesPackingSlipDP _packingSlipDP)
    {
        SalesPackingSlipDPPackingSlipLineQuery query = new SalesPackingSlipDPPackingSlipLineQuery();
        
        query.initializeDataProvider(_packingSlipDP);
        query.buildQuery();

        if (FeatureStateProvider::IsFeatureEnabled(KittingFeature::instance()))
        {
            QueryRun queryRun = query.getQueryRun();
            _packingSlipDP.kittingSetReportHandler(new KittingSrsReportDataProviderPreProcess());
            QueryRun kittingQueryRun = _packingSlipDP.kittingReportHandler().kittingGetQueryRun(queryRun, tableNum(CustPackingSlipJour));
            query.setQueryRun(kittingQueryRun);
        }

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>