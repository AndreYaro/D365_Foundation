<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPRPeriodicCreateTaskController</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CFMPRPeriodicCreateTaskController extends SysOperationServiceController implements BatchRetryable
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return "@Cashflowmanagement:PaymRequestCreationBaseOnRange";
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPaymentRequests</Name>
				<Source><![CDATA[
    public void createPaymentRequests(CFMPRPeriodicCreateTaskContract _dataContract)
    {
        Query sourceQuery = _dataContract.parmPaymentRequestSourceQuery();
        TableId sourceTableId = _dataContract.parmQueryDataSourceTableId();
        CFMPaymentRequestSourceType sourceType = _dataContract.parmPaymentRequestSourceType();
        Counter paymentRequestCreatedCount;

        QueryRun sourceQueryRun = new QueryRun(sourceQuery);

        while (sourceQueryRun.next())
        {
            Common sourceRecord = sourceQueryRun.get(sourceTableId);

            CFMPaymentRequestSource paymentRequestSource = CFMPaymentRequestSource::constructFromSource(sourceQueryRun.get(sourceTableId));

            if (paymentRequestSource)
            {
                paymentRequestSource.parmIsInBatch(true);
                CFMPaymentRequestTable paymentRequest = paymentRequestSource.getPaymentRequest();

                if (paymentRequest.RecId != 0)
                {
                    paymentRequestCreatedCount++;
                }
            }
        }

        if (paymentRequestCreatedCount == 0)
        {
            info("@Cashflowmanagement:NewPaymRequestsNotCreated");
        }
        else
        {
            info(strFmt("@Cashflowmanagement:PaymRequestsSuccessCreated", paymentRequestCreatedCount));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        this.parmClassName(classStr(CFMPRPeriodicCreateTaskController));
        this.parmMethodName(methodStr(CFMPRPeriodicCreateTaskController, createPaymentRequests));

        // this controller is meant to run from batch task so never needs to load
        // from sys last value
        this.parmLoadFromSysLastValue(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>