<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetEntityHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetEntityHelper</c> class is a helper for the entities associated with budget.
/// </summary>
public class BudgetEntityHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSerializedOfficeAppCustomLookupListResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the serialized string of the <c>OfficeAppCustomLookupListResult</c> object for the list of values.
    /// </summary>
    /// <param name = "_valueList">
    /// The list of values.
    /// </param>
    /// <returns>
    /// The serialized string of the <c>OfficeAppCustomLookupListResult</c> object for the list of values.
    /// </returns>
    public static str getSerializedOfficeAppCustomLookupListResult(List _valueList)
    {
        OfficeAppCustomLookupListResult result = new OfficeAppCustomLookupListResult();

        if (_valueList)
        {
            int counter = 1;
            ListEnumerator values = _valueList.getEnumerator();

            while (values.moveNext())
            {
                result.items().value(counter, values.current());
                counter++;
            }
        }

        return result.serialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOfficeAppCustomLookupFieldMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a <c>Map</c> instance containing the field and values for the specified entity instance.
    /// </summary>
    /// <param name = "_entityName">
    /// The entity name.
    /// </param>
    /// <param name = "_entityFields">
    /// The <c>Array</c> of entity fields and values on the instance performing the lookup.
    /// </param>
    /// <returns>
    /// A <c>Map</c> instance containing the field and values for the specified entity instance.
    /// </returns>
    public static Map getOfficeAppCustomLookupFieldMap(TableName _entityName, Array _entityFields)
    {
        return OfficeAppCustomLookupHelper::getFieldMap(_entityName, _entityFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLegalEntityIdOfficeAppCustomLookupFieldMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the legal entity ID from the specified field <c>Map</c> instance.
    /// </summary>
    /// <param name = "_fieldMap">
    /// A <c>Map</c> instance containing the field and values for the specified entity instance.
    /// </param>
    /// <param name = "_legalEntityFieldName">
    /// The legal entity field name.
    /// </param>
    /// <returns>
    /// The legal entity ID.
    /// </returns>
    public static LegalEntityDataAreaId getLegalEntityIdOfficeAppCustomLookupFieldMap(Map _fieldMap, FieldName _legalEntityFieldName)
    {
        LegalEntityDataAreaId legalEntityId;

        if (_fieldMap.exists(_legalEntityFieldName))
        {
            legalEntityId = _fieldMap.lookup(_legalEntityFieldName);
        }

        if (!legalEntityId)
        {
            legalEntityId = curExt();
        }

        return legalEntityId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLegalEntityIdFromOfficeAppCustomLookupFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// The legal entity ID from the specified entity instance.
    /// </summary>
    /// <param name = "_entityName">
    /// The entity name.
    /// </param>
    /// <param name = "_legalEntityFieldName">
    /// The legal entity field name.
    /// </param>
    /// <param name = "_entityFields">
    /// The <c>Array</c> of entity fields and values on the instance performing the lookup.
    /// </param>
    /// <returns>
    /// The legal entity ID.
    /// </returns>
    public static LegalEntityDataAreaId getLegalEntityIdFromOfficeAppCustomLookupFields(TableName _entityName, FieldName _legalEntityFieldName, Array _entityFields)
    {
        Map fieldMap = BudgetEntityHelper::getOfficeAppCustomLookupFieldMap(_entityName, _entityFields);

        return BudgetEntityHelper::getLegalEntityIdOfficeAppCustomLookupFieldMap(fieldMap, _legalEntityFieldName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrimaryLedgerFromOfficeAppCustomLookupFieldMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the primary ledger ID from the specified field <c>Map</c> instance.
    /// </summary>
    /// <param name = "_fieldMap">
    /// A <c>Map</c> instance containing the field and values for the specified entity instance.
    /// </param>
    /// <param name = "_legalEntityFieldName">
    /// The legal entity field name.
    /// </param>
    /// <returns>
    /// The primary ledger ID.
    /// </returns>
    public static LedgerRecId getPrimaryLedgerFromOfficeAppCustomLookupFieldMap(Map _fieldMap, FieldName _legalEntityFieldName)
    {
        LegalEntityDataAreaId legalEntityId = BudgetEntityHelper::getLegalEntityIdOfficeAppCustomLookupFieldMap(_fieldMap, _legalEntityFieldName);

        return Ledger::primaryLedger(CompanyInfo::current(legalEntityId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrimaryLedgerFromOfficeAppCustomLookupFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// The primary ledger ID from the specified entity instance.
    /// </summary>
    /// <param name = "_entityName">
    /// The entity name.
    /// </param>
    /// <param name = "_legalEntityFieldName">
    /// The legal entity field name.
    /// </param>
    /// <param name = "_entityFields">
    /// The <c>Array</c> of entity fields and values on the instance performing the lookup.
    /// </param>
    /// <returns>
    /// The primary ledger ID.
    /// </returns>
    public static LedgerRecId getPrimaryLedgerFromOfficeAppCustomLookupFields(TableName _entityName, FieldName _legalEntityFieldName, Array _entityFields)
    {
        Map fieldMap = BudgetEntityHelper::getOfficeAppCustomLookupFieldMap(_entityName, _entityFields);

        return BudgetEntityHelper::getPrimaryLedgerFromOfficeAppCustomLookupFieldMap(fieldMap, _legalEntityFieldName);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>