<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBContribAssetTransCreate_Recover_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FBContribAssetTransCreate_Recover_BR extends FBContribAssetTransCreate_BR
{
    FBContribAssetTable_BR  contribAssetTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public void create()
    {
        FBContribAssetTrans_BR  contribAssetTrans;

        if (!contribAssetTable)
        {
            return;
        }

        if (this.existsNonBookedFiscalDocuments())
        {
            return;
        }

        if (this.existsTransactionsOnALaterPeriod())
        {
            return;
        }

        FBContribAssetTransCreate_BR::decreaseRemainingInstallments(contribAssetTable);

        contribAssetTrans.FBBookingPeriod_BR = bookingPeriod.RecId;
        contribAssetTrans.FBContribAssetTable_BR = contribAssetTable.RecId;
        contribAssetTrans.TransType = FBContribAssetTransType_BR::InstallmentCredit;
        contribAssetTrans.TransDate = bookingPeriod.periodFrom();

        CurrencyCode currencyCode = Ledger::accountingCurrency();

        contribAssetTrans.PISInstallmentBaseAmount = CurrencyExchange::round(contribAssetTable.PISTaxBaseAmount / contribAssetTable.Installments, currencyCode);
        contribAssetTrans.PISTaxationCode = contribAssetTable.PISTaxationCode;
        contribAssetTrans.PISTaxValue = BrazilParameters::find().BasicTaxValuePISNonCumulative;
        contribAssetTrans.PISInstallmentAmount = FBCIAPCreditCalc_BR::calcInstallment(contribAssetTable.PISAmount, contribAssetTable.Installments);

        contribAssetTrans.COFINSInstallmentBaseAmount = CurrencyExchange::round(contribAssetTable.COFINSTaxBaseAmount / contribAssetTable.Installments, currencyCode);
        contribAssetTrans.COFINSTaxationCode = contribAssetTable.COFINSTaxationCode;
        contribAssetTrans.COFINSTaxValue = BrazilParameters::find().BasicTaxValueCOFINSNonCumulative;
        contribAssetTrans.COFINSInstallmentAmount = FBCIAPCreditCalc_BR::calcInstallment(contribAssetTable.COFINSAmount, contribAssetTable.Installments);

        contribAssetTrans.InstallmentNum = contribAssetTable.Installments - contribAssetTable.RemainingInstallments;

        if (contribAssetTrans.PISInstallmentAmount + contribAssetTrans.COFINSInstallmentAmount == 0)
        {
            throw error("@SYS4001798");
        }

        contribAssetTrans.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsNonBookedFiscalDocuments</Name>
				<Source><![CDATA[
    private boolean existsNonBookedFiscalDocuments()
    {
        FiscalDocument_BR                   fiscalDocument;
        FiscalDocumentLine_BR               fiscalDocumentLine;
        FBBookingPeriodFiscalDocument_BR    bookingPeriodFiscalDocument;

        select RecId from fiscalDocument
            where   fiscalDocument.AccountingDate >= bookingPeriod.periodFrom()
                &&  fiscalDocument.AccountingDate <= bookingPeriod.periodTo()
            exists join fiscalDocumentLine
                where   fiscalDocumentLine.FiscalDocument   == fiscalDocument.RecId
                    &&  fiscalDocumentLine.AssetId          == contribAssetTable.AssetTable
            notExists join bookingPeriodFiscalDocument
                where   bookingPeriodFiscalDocument.FiscalDocument_BR   == fiscalDocument.RecId
                    &&  bookingPeriodFiscalDocument.FBBookingPeriod_BR  == bookingPeriod.RecId;

        return fiscalDocument.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsTransactionsOnALaterPeriod</Name>
				<Source><![CDATA[
    private boolean existsTransactionsOnALaterPeriod()
    {
        FBBookingPeriod_BR      laterBookingPeriod;
        FBContribAssetTrans_BR  contribAssetTrans;

        select firstOnly RecId from contribAssetTrans
            where contribAssetTrans.FBContribAssetTable_BR == contribAssetTable.RecId
            exists join laterBookingPeriod
                where   laterBookingPeriod.RecId        == contribAssetTrans.FBBookingPeriod_BR
                    && (laterBookingPeriod.PeriodYear   > bookingPeriod.PeriodYear
                    || (laterBookingPeriod.PeriodYear   == bookingPeriod.PeriodYear && laterBookingPeriod.PeriodMonth > bookingPeriod.PeriodMonth));

        return contribAssetTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContribAssetTable</Name>
				<Source><![CDATA[
    public FBContribAssetTable_BR parmContribAssetTable(FBContribAssetTable_BR _contribAssetTable = contribAssetTable)
    {
        contribAssetTable = _contribAssetTable;

        return contribAssetTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>