<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResWBSValidateAssignmentDateContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Context class used to launch for <c>ResWBSValidateAssignmentDate</c> form and capture user feedback.
/// </summary>
class ResWBSValidateAssignmentDateContext
{
    private List leafNodeTaskChangesList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>leafNodeTaskChangesListParam</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set <c>ResWBSTaskDataChangeContext</c> class list which contains the leafe task date changes list upon WBS publishes.
    /// </summary>
    /// <param name = "_leafNodeTaskChangesList">A list of <c>ResWBSTaskDataChangeContext</c> class.</param>
    /// <returns>A list of <c>ResWBSTaskDataChangeContext</c> class.</returns>
    public List leafNodeTaskChangesListParam(List _leafNodeTaskChangesList = leafNodeTaskChangesList)
    {
        leafNodeTaskChangesList = _leafNodeTaskChangesList;
        return leafNodeTaskChangesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the <c>ResWBSValidateAssignmentDate</c> form.
    /// </summary>
    /// <returns>true represents form has been successfully launched; otherwise false.</returns>
    public boolean showForm()
    {
        Args formArgs = new Args();
        formArgs.caller(this);

        new MenuFunction(menuitemdisplaystr(ResWBSValidateAssignmentDateDisplayMenuItem),
            MenuItemType::Display).run(formArgs);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ResWBSValidateAssignmentDate_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of <c>ResWBSValidateAssignmentDate</c> form.
    /// </summary>
    [FormEventHandler(formstr(ResWBSValidateAssignmentDate), FormEventType::Closing)]
    public static void ResWBSValidateAssignmentDate_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        if (formRun && formRun.closedOk())
        {
            if (formHasMethod(formRun, formMethodStr(ResWBSValidateAssignmentDate, validateAssignmentDateContext)))
            {
                ResWBSValidateAssignmentDateContext context = formRun.validateAssignmentDateContext();
                context.selectionsReady(context);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionsReady</Name>
				<Source><![CDATA[
    /// <summary>
    /// Raised when <c>ResWBSValidateAssignmentDate</c> is ready.
    /// </summary>
    /// <param name = "_feedback">User feedback.</param>
    delegate void selectionsReady(ResWBSValidateAssignmentDateContext _feedback)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>ResWBSValidateAssignmentDateContext</c> class.
    /// </summary>
    /// <returns>Instance of <c>ResWBSValidateAssignmentDateContext</c>.</returns>
    public static ResWBSValidateAssignmentDateContext construct()
    {
        ResWBSValidateAssignmentDateContext context = new ResWBSValidateAssignmentDateContext();
        return context;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>