<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTableType_TimeMaterial</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjTableType_TimeMaterial extends ProjTableType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activeInTreeRevenue</Name>
				<Source><![CDATA[
        public boolean activeInTreeRevenue()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlBankDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the bank document control can be enabled for the specified document type, by
    /// using the specifeid current project type.
    /// </summary>
    /// <param name="_exceptedDocumentType">
    /// The excepted bank document type to select.
    /// </param>
    /// <returns>
    /// true if the bank document type control can be selected to excepted document type; otherwise, false.
    /// </returns>
    public boolean ctrlBankDocumentType(BankLGDocumentType _exceptedDocumentType)
    {
        boolean ret;

        // Gets the default value.
        ret = super(_exceptedDocumentType);

        switch (_exceptedDocumentType)
        {
            case BankLGDocumentType::LetterOfGuarantee:
                ret = true;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlCustOpenTrans</Name>
				<Source><![CDATA[
        public boolean ctrlCustOpenTrans()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlForecastTransferFromQuotation</Name>
				<Source><![CDATA[
        public boolean ctrlForecastTransferFromQuotation()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjPeriodicPostingCost</Name>
				<Source><![CDATA[
        public boolean ctrlProjPeriodicPostingCost()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjPeriodicPostingSales</Name>
				<Source><![CDATA[
        public boolean ctrlProjPeriodicPostingSales()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjSalesPriceRevenue</Name>
				<Source><![CDATA[
        public boolean ctrlProjSalesPriceRevenue()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjTransRevenueSubscription</Name>
				<Source><![CDATA[
        public boolean ctrlProjTransRevenueSubscription()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlPSAPreBill</Name>
				<Source><![CDATA[
        public boolean ctrlPSAPreBill()
    {
        return  true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSalesQuotationProjTable</Name>
				<Source><![CDATA[
        public boolean ctrlSalesQuotationProjTable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMAAccrueSubscription</Name>
				<Source><![CDATA[
        public boolean ctrlSMAAccrueSubscription()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMACreateSubscription</Name>
				<Source><![CDATA[
        public boolean ctrlSMACreateSubscription()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMAIndexSubscription</Name>
				<Source><![CDATA[
        public boolean ctrlSMAIndexSubscription()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMASalesPriceSubscription</Name>
				<Source><![CDATA[
        public boolean ctrlSMASalesPriceSubscription()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMASubscription</Name>
				<Source><![CDATA[
        public boolean ctrlSMASubscription()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransProjectRevenueTrans</Name>
				<Source><![CDATA[
        public boolean ctrlTransProjectRevenueTrans()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransProjTransOnAccView</Name>
				<Source><![CDATA[
        public boolean ctrlTransProjTransOnAccView()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransSalesLine</Name>
				<Source><![CDATA[
        public boolean ctrlTransSalesLine()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProjTable</Name>
				<Source><![CDATA[
        public void initProjTable(Common _buffer = null)
    {
        super();

        projTable.Status        = ProjStatusTypeRule::firstStage(ProjType::TimeMaterial);
        projTable.wipProject    = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        if (!projTable.ProjGroupId)
        {
            return checkFailed("@SYS50011");
        }

        if(!this.validateProjectContract(projTable))
        {
            return false;
        }

        if (projTable.Type  != ProjGroup::find(projTable.ProjGroupId).ProjType)
        {
            return checkFailed("@SYS55607");
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProjectContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is a replaceable method to be replaced for extensibility to validate if a project can be created with or without a contract.
    /// </summary>
    /// <param name = "_projTable">
    /// <c>ProjTable</c> table buffer.
    /// </param>
    /// <returns>
    /// true if project has a contract ID; otherwise, false.
    ///</returns>
    [Replaceable]
    protected boolean validateProjectContract(ProjTable _projTable)
    {
        return _projTable.ProjInvoiceProjId? true : checkFailed("@SYS53031");
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteBudgetOnAccount</Name>
				<Source><![CDATA[
        public boolean validateWriteBudgetOnAccount()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteBudgetRevenue</Name>
				<Source><![CDATA[
        public boolean validateWriteBudgetRevenue()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>