<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimDerJourRuleVendPayReqPurchChgeExtPric</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>DimDerJourRuleVendPayReqPurchChgeExtPric</c> class is a dimension derivation journalizing
/// rule extension for purchase order invoicing.
/// </summary>
[SourceDocumentClassExtensionAttribute(classStr(AccJourRuleVendPaymentReqExpProdExtPrice))]
public class DimDerJourRuleVendPayReqPurchChgeExtPric extends DimensionDerivationRuleExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifyDimAllocListForProject</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void modifyDimAllocListForProject(LedgerDimensionAllocationList _ledgerDimensionAllocationList)
    {
        LedgerDimensionAllocationList           newAllocationList;
        LedgerDimensionAllocation               newAllocation;
        LedgerDimensionAllocationList           allocationList = dimensionDerivationRule.parmLedgerDimensionAllocList();
        LedgerDimensionAllocationListEnumerator allocationListEnumerator = allocationList.getEnumerator();
        LedgerDimensionAllocation               currAllocation;
        LedgerDimensionDefaultAccount           defaultAccount;
        DimensionDefault                        defaultDimension;
        LedgerDimensionAccount                  mergedDimension;
        DimensionValuesToUseForSummaryAccount   dimensionValuesForSummaryAccount;

        newAllocationList = LedgerDimensionAllocationList::construct();

        while (allocationListEnumerator.moveNext())
        {
            currAllocation = allocationListEnumerator.current();
            defaultAccount = LedgerDefaultAccountHelper::getDefaultAccountFromLedgerDimension(currAllocation.parmLedgerDimension());

            dimensionValuesForSummaryAccount = LedgerParameters::find().DimensionValuesUsedForSummaryAccount;
            if (dimensionValuesForSummaryAccount == DimensionValuesToUseForSummaryAccount::AccountingDistributions)
            {
                defaultDimension = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(currAllocation.parmLedgerDimension());
            }
            else
            {
                VendorInvoiceLineSourceDocLineItem  vendorInvoiceLineSourceDocLineItem;
                vendorInvoiceLineSourceDocLineItem = dimensionDerivationRule.parmAccountingRule().parmSourceDocumentLineItem() as VendorInvoiceLineSourceDocLineItem;
                defaultDimension = vendorInvoiceLineSourceDocLineItem.parmDefaultDimension();
            }

            mergedDimension = LedgerDimensionFacade::serviceCreateLedgerDimension(defaultAccount, defaultDimension);

            newAllocation = LedgerDimensionAllocation::newFromParameters(
            mergedDimension,
                currAllocation.parmAllocationFactor(),
                currAllocation.parmSide(),
                currAllocation.parmOppositeAccount(),
                currAllocation.parmReferenceAccountingDistribution(),
                currAllocation.parmDistributionReferenceRole(),
                currAllocation.parmParentAccountingDistribution(),
                currAllocation.parmLedgerPostingType());
            newAllocationList.addEnd(newAllocation);
        }
        this.parmDimensionDerivationRule().parmLedgerDimensionAllocList(newAllocationList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    protected void subscribe()
    {
        VendorInvoiceLineSourceDocLineItem  vendInvoiceLineSourceDocLineItem;
        SourceDocumentLineItem              sourceDocLineItem = dimensionDerivationRule.parmAccountingRule().parmSourceDocumentLineItem();

        if (sourceDocLineItem is VendorInvoiceLineSourceDocLineItem)
        {
            vendInvoiceLineSourceDocLineItem = sourceDocLineItem;
            if (vendInvoiceLineSourceDocLineItem.parmProjectId())
            {
                dimensionDerivationRule.populatedDimAllocListEventHandler += eventhandler(this.modifyDimAllocListForProject);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>