<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcAdaptor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCAdaptor</c> class is the context class of the adapter data structure.
/// </summary>
class PcAdaptor
{
    PCAdaptorSourceDocumentLine         sourceDocumentLine;
    PCAdaptorProductConfigurationModel  productConfigurationModel;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>abort</Name>
				<Source><![CDATA[
    /// <summary>
    /// Aborts the back end configuration.
    /// </summary>
    /// <param name="_errorMessage">
    /// An error message.
    /// </param>
    public void abort(str _errorMessage)
    {
        throw  error(_errorMessage);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accept</Name>
				<Source><![CDATA[
    /// <summary>
    /// Accepts a <c>PCAdaptorVisitor</c> instance.
    /// </summary>
    /// <param name = "_visitor">A <c>PCAdaptorVisitor</c> instance.</param>
    public void accept(PCAdaptorVisitor _visitor)
    {
        this.parmProductConfigurationModel().accept(_visitor);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assign value to attribute.
    /// </summary>
    /// <param name = "_componentPath">Component path.</param>
    /// <param name = "_attributeName">Attribute solver name.</param>
    /// <param name = "_value">String value.</param>
    public void assignAttribute(container _componentPath, PCSolverName _attributeName, str _value)
    {
        this.parmProductConfigurationModel().getRootComponent().assignAttribute(_componentPath, _attributeName, _value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current extension ID.
    /// </summary>
    /// <returns>
    /// An extension ID.
    /// </returns>
    public LegalEntityDataAreaId getCompany()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the price.
    /// </summary>
    /// <returns>
    /// The price.
    /// </returns>
    public SalesPrice getPrice()
    {
        return this.parmSourceDocumentLine().parmPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceDocumentLineRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the source document line record buffer.
    /// </summary>
    /// <returns>
    /// A common record buffer.
    /// </returns>
    public Common getSourceDocumentLineRecord()
    {
        return this.parmSourceDocumentLine().getSourceDocumentLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isGenerationOfRouteNeeded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the generation of a route is needed.
    /// </summary>
    /// <returns>
    /// true if generation is needed; otherwise, false.
    /// </returns>
    public boolean isGenerationOfRouteNeeded()
    {
        return this.parmProductConfigurationModel().hasRouteOperations();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductConfigurationModel</Name>
				<Source><![CDATA[
    public PCAdaptorProductConfigurationModel parmProductConfigurationModel(PCAdaptorProductConfigurationModel _productConfiguraionModel = productConfigurationModel)
    {
        productConfigurationModel = _productConfiguraionModel;

        return productConfigurationModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentLine</Name>
				<Source><![CDATA[
    public PCAdaptorSourceDocumentLine parmSourceDocumentLine(PCAdaptorSourceDocumentLine _sourceDocumentLine = sourceDocumentLine)
    {
        sourceDocumentLine = _sourceDocumentLine;

        return sourceDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs any logic of the adapter class.
    /// </summary>
    public void run()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCAdaptor construct()
    {
        return new PCAdaptor();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>