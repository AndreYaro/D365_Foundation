<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQCloseVisibilityEPHelper_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchRFQCloseVisibilityEPHelper_PSN</c> is the helper class to set the visibility of EP controls.
/// </summary>
class PurchRFQCloseVisibilityEPHelper_PSN
{
    PurchRFQVisibilityTypeRecId purchRFQVisibilityTypeRecId;
    Set                         closeRFQVisibilitySet;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isFieldVisible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves if the field should be visible or not.
    /// </summary>
    /// <param name="_dataFieldName">
    /// The field name that is used in EP control.
    /// </param>
    /// <returns>
    /// true, if control should be visible, otherwise; false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isFieldVisible(Name _dataFieldName)
    {
        return !closeRFQVisibilitySet.in(_dataFieldName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>load</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the EP controls name and their visibility value.
    /// </summary>
    private void load()
    {
        PurchRFQCloseVisibilityType_PSN purchRFQCloseVisibilityType;

        if (purchRFQVisibilityTypeRecId)
        {
            purchRFQCloseVisibilityType = PurchRFQCloseVisibilityType_PSN::find(purchRFQVisibilityTypeRecId);

            if (!purchRFQCloseVisibilityType.IsAwardedVisible)
            {
                closeRFQVisibilitySet.add('isAwarded_PSN**');
                closeRFQVisibilitySet.add('awarded**');
                closeRFQVisibilitySet.add('PurchRFQTableHeader!awarded**');
            }

            if (!purchRFQCloseVisibilityType.IsCommentsOnReplyStatusVisible)
            {
                closeRFQVisibilitySet.add('PurchRFQReplyScoringStatus!Comment');
            }

            if (!purchRFQCloseVisibilityType.IsReplyLineCommentsVisible)
            {
                closeRFQVisibilitySet.add('PurchRFQReplyLine!Comment');
            }

            if (!purchRFQCloseVisibilityType.IsQuantityVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!PurchQty');
                closeRFQVisibilitySet.add('PurchRFQReplyLine!PurchQty');
            }

            if (!purchRFQCloseVisibilityType.IsUnitPriceVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!PurchPrice');
                closeRFQVisibilitySet.add('PurchRFQReplyLine!PurchPrice');
            }

            if (!purchRFQCloseVisibilityType.IsNetAmountVisible)
            {
                closeRFQVisibilitySet.add('PurchRFQReplyLine!LineAmount');
            }

            if (!purchRFQCloseVisibilityType.IsChargesOnPurchaseVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!PurchMarkup');
            }

            if (!purchRFQCloseVisibilityType.IsDiscountVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!LineDisc');
            }

            if (!purchRFQCloseVisibilityType.IsDiscountPercentVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!LinePercent');
            }

            if (!purchRFQCloseVisibilityType.IsTotalScoreVisible)
            {
                closeRFQVisibilitySet.add('PurchRFQReplyTable!TotalScore');
            }

            if (!purchRFQCloseVisibilityType.IsPartialCompleteReplyVisible)
            {
                closeRFQVisibilitySet.add('replyStatus**');
            }

            if (!purchRFQCloseVisibilityType.IsMultilineDiscountVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!MultiLnDisc');
            }

            if (!purchRFQCloseVisibilityType.IsMultilineDiscountPercentVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!MultiLnPercent');
            }

            if (!purchRFQCloseVisibilityType.IsLeadTimeVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!LeadTime');
            }

            if (!purchRFQCloseVisibilityType.IsWorkingDaysVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQReplyLine!CalendarDays');
            }

            if (!purchRFQCloseVisibilityType.IsEffectiveDateVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!ValidFrom');
            }

            if (!purchRFQCloseVisibilityType.IsExpirationDateVisible)
            {
                closeRFQVisibilitySet.add('LinesPurchRFQUnsealedReplyLine!ValidTo');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        closeRFQVisibilitySet = new Set(Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchRFQVisibilityTypeRecId</Name>
				<Source><![CDATA[
    private PurchRFQVisibilityTypeRecId parmPurchRFQVisibilityTypeRecId(PurchRFQVisibilityTypeRecId _purchRFQVisibilityTypeRecId = purchRFQVisibilityTypeRecId)
    {
        purchRFQVisibilityTypeRecId = _purchRFQVisibilityTypeRecId;

        return purchRFQVisibilityTypeRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructByCaseId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PurchRFQCloseVisibilityEPHelper_PSN constructByCaseId(PurchRFQCaseId _purchRFQCaseId)
    {
        PurchRFQCloseVisibilityEPHelper_PSN purchRFQCloseVisibilityEPHelper = new PurchRFQCloseVisibilityEPHelper_PSN();

        if (_purchRFQCaseId)
        {
            purchRFQCloseVisibilityEPHelper.parmPurchRFQVisibilityTypeRecId(PurchRFQCaseTable::find(_purchRFQCaseId).RFQCloseVisibilityType);
            purchRFQCloseVisibilityEPHelper.load();
        }

        return purchRFQCloseVisibilityEPHelper;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructByRFQId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PurchRFQCloseVisibilityEPHelper_PSN constructByRFQId(PurchRFQId _purchRFQId)
    {
        PurchRFQCloseVisibilityEPHelper_PSN purchRFQCloseVisibilityEPHelper = new PurchRFQCloseVisibilityEPHelper_PSN();
        PurchRFQCaseTable                   purchRFQCaseTable;
        PurchRFQTable                       purchRFQTable;

        if (_purchRFQId)
        {
            select firstOnly RFQCloseVisibilityType from purchRFQCaseTable
                exists join purchRFQTable
                where purchRFQTable.RFQCaseId == purchRFQCaseTable.RFQCaseId
                   && purchRFQTable.RFQId     == _purchRFQId;

            purchRFQCloseVisibilityEPHelper.parmPurchRFQVisibilityTypeRecId(purchRFQCaseTable.RFQCloseVisibilityType);
            purchRFQCloseVisibilityEPHelper.load();
        }

        return purchRFQCloseVisibilityEPHelper;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>