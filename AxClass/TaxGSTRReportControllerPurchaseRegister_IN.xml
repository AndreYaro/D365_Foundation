<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGSTRReportControllerPurchaseRegister_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Report controller class for Purchase Register report.
/// </summary>
public class TaxGSTRReportControllerPurchaseRegister_IN extends TaxGSTRReportControllerBase_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getControllerName</Name>
				<Source><![CDATA[
    public TaxGSTRReportingControllerName_IN getControllerName()
    {
        return '@TaxEngineGSTR:PurchaseRegister';
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fill data for Purchase Register report.
    /// </summary>
    /// <param name = "_fromDate">from date</param>
    /// <param name = "_todate">to date</param>
    /// <param name = "_regNum">reg number</param>
    public void fillData(date _fromDate, date _todate, TaxRegistrationNumber_IN _regNum)
    {
        TmpTaxGSTRReportTaxLine_IN tmpTaxGSTRReportTaxLine;

        dataProvider.parmIsForOfflineTool(true);
        dataProvider.parmTmpTaxGSTRReportTaxLine(tmpTaxGSTRReportTaxLine);

        if (NewGSTRReportOfflineToolFeature::isEnabled())
        {
            dataProvider.fillModelWithInwardSupplies(_fromDate, _todate, _regNum);

            TmpTaxGSTRReportTaxLine_IN::populateReportPurchaseRegister(tmpTaxGSTRReportTaxLine, dataProvider.parmTaxGSTRReportContractHeader());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillReportContractData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fill report contract data with report run contract.
    /// </summary>
    /// <param name = "_dataContract">Report run contract</param>
    public void fillReportContractData(TaxGSTRReportRunContract_IN _dataContract)
    {
        dataProvider.fillReportContractData(_dataContract);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>