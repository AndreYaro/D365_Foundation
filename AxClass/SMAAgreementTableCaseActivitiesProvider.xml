<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAAgreementTableCaseActivitiesProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Plug in for case activities
/// </summary>
[ExportMetadataAttribute('CaseIActivities', tableStr(SMAAgreementTable)), ExportAttribute('Dynamics.AX.Application.CaseIActivities')]
class SMAAgreementTableCaseActivitiesProvider implements CaseIActivities
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCommon</Name>
				<Source><![CDATA[
    public smmActivityParentType initFromCommon(smmActivities _activities, Common _table)
    {
        SMAAgreementTable smaAgreementTable = _table;
        this.initFromSMAAgreementParameters(_activities, smaAgreementTable);
        return smmActivityParentType::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parentRecId</Name>
				<Source><![CDATA[
    public RefRecId parentRecId(Common _table)
    {
        return _table.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCommonUsingTemplate</Name>
				<Source><![CDATA[
    public smmActivityParentType initFromCommonUsingTemplate(smmActivities _activities, Common _table, smmActivities _templateActivity)
    {
        return smmActivityParentType::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateExternalMemo</Name>
				<Source><![CDATA[
    public smmOutlookMemo updateExternalMemo(RefRecId _parentLink)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldActivityBeCreated</Name>
				<Source><![CDATA[
    public CaseYesNoPrompt shouldActivityBeCreated(Common _table, boolean _isBatch)
    {
        if (_isBatch)
        {
            return (smmParametersTable::find().RunBaseBatchCreateActivity == smmRunBaseBatchCreateActivity::Yes) ? (CaseYesNoPrompt::Yes) : (CaseYesNoPrompt::No);
        }
        else
        {
            return smmActivities::shouldActivityBeCreatedGeneric(smaParameters::find().ServiceOrderCreateActivity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParentReferenceFieldNum</Name>
				<Source><![CDATA[
    public FieldId getParentReferenceFieldNum(TableId _tableId, smmActivityParentRefTableId _parentTableId)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSMAAgreementParameters</Name>
				<Source><![CDATA[
    private void initFromSMAAgreementParameters(smmActivities _activities, SMAAgreementTable _smaAgreementTable)
    {
        SMAStageTable   stageTable;

        stageTable = SMAStageTable::find(SMAStageTable::firstStage());

        // Get default values from CRM parameters
        _activities.initFromSMAParameters();

        _activities.initValue();

        if (stageTable.StageActivityPhaseId)
        {
            _activities.PhaseId            = stageTable.StageActivityPhaseId;
        }

        _activities.ResponsibleWorker    = _smaAgreementTable.WorkerServiceResponsible;

        _activities.initFromWorkerTable(_activities.ResponsibleWorker);

        if (_activities.ReminderMinutes > 0)
        {
            _activities.ReminderActive     = NoYes::Yes;

            // we need to initialize also the ReminderDateTime
            _activities.ReminderDateTime = _activities.StartDateTime;
        }
        else
        {
            _activities.ReminderActive     = NoYes::No;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>