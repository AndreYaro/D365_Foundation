<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RLedgerTurnoverTypeCust</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RLedgerTurnoverTypeCust</c> class implements logic for customer turnover statements.
/// </summary>
class RLedgerTurnoverTypeCust extends RLedgerTurnoverTypeCustVend
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>counteragentName</Name>
				<Source><![CDATA[
    protected Name counteragentName(CustVendAC _custVendAccount)
    {
        return CustTable::find(_custVendAccount).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public ClassDescription description()
    {
        return "@GLS105053";
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldAccount</Name>
				<Source><![CDATA[
    protected fieldId fieldAccount()
    {
        return fieldnum(CustTrans, AccountNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldAmountCur</Name>
				<Source><![CDATA[
    protected fieldId fieldAmountCur()
    {
        return fieldnum(CustTrans, AmountCur);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldAmountMST</Name>
				<Source><![CDATA[
    protected fieldId fieldAmountMST()
    {
        return fieldnum(CustTrans, AmountMST);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldAmountMSTSec</Name>
				<Source><![CDATA[
    protected fieldId fieldAmountMSTSec()
    {
        return fieldnum(CustTrans, ReportingCurrencyAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldCorrection</Name>
				<Source><![CDATA[
    public container fieldCorrection(CurrencyType_RU _currencyType = CurrencyType_RU::Standard)
    {
        return _currencyType == CurrencyType_RU::Secondary ?
               [tableNum(CustTrans_W), fieldnum(CustTrans_W, CorrectReporting_RU)]    :
               [tableNum(CustTrans), fieldnum(CustTrans, Correct)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldCurrencyCode</Name>
				<Source><![CDATA[
    public container fieldCurrencyCode()
    {
        return [tablenum(CustTrans), fieldnum(CustTrans, CurrencyCode)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldDefaultDimension</Name>
				<Source><![CDATA[
    public container fieldDefaultDimension()
    {
        return [tablenum(CustTrans), fieldnum(CustTrans, DefaultDimension)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldInvoice</Name>
				<Source><![CDATA[
    protected FieldId fieldInvoice()
    {
        return fieldnum(CustTrans, Invoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldPostingProfile</Name>
				<Source><![CDATA[
    protected fieldId fieldPostingProfile()
    {
        return fieldnum(CustTrans, PostingProfile);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldSettleAmountCur</Name>
				<Source><![CDATA[
    protected FieldId fieldSettleAmountCur()
    {
        return fieldNum(CustSettlement, SettleAmountCur);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldSettleAmountMST</Name>
				<Source><![CDATA[
    protected FieldId fieldSettleAmountMST()
    {
        return fieldNum(CustSettlement, SettleAmountMST);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldSettleAmountMSTSec</Name>
				<Source><![CDATA[
    protected FieldId fieldSettleAmountMSTSec()
    {
        return fieldNum(CustSettlement, SettleAmountReporting);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldSettleExchAdj</Name>
				<Source><![CDATA[
    protected FieldId fieldSettleExchAdj()
    {
        return fieldNum(CustSettlement, ExchAdjustment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldSettleExchAdjSec</Name>
				<Source><![CDATA[
    protected FieldId fieldSettleExchAdjSec()
    {
        return fieldNum(CustSettlement, ExchAdjustmentReporting);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldSettlementDate</Name>
				<Source><![CDATA[
    public container fieldSettlementDate()
    {
        return [tablenum(CustSettlement), fieldnum(CustSettlement, TransDate)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldSettleTransRecId</Name>
				<Source><![CDATA[
    protected FieldId fieldSettleTransRecId()
    {
        return fieldNum(CustSettlement, TransRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldTransDate</Name>
				<Source><![CDATA[
    public container fieldTransDate()
    {
        return [tablenum(CustTrans), fieldnum(CustTrans, TransDate)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldTransType</Name>
				<Source><![CDATA[
    protected fieldId fieldTransType()
    {
        return fieldnum(CustTrans, TransType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldVoucher</Name>
				<Source><![CDATA[
    protected fieldId fieldVoucher()
    {
        return fieldnum(CustTrans, Voucher);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerPostingType</Name>
				<Source><![CDATA[
    protected container ledgerPostingType()
    {
        return [LedgerPostingType::CustBalance,
                LedgerPostingType::CustSettlement,
                LedgerPostingType::CustCollectionLetterFee];
    }

]]></Source>
			</Method>
			<Method>
				<Name>query</Name>
				<Source><![CDATA[
    public container query()
    {
        QueryBuildDataSource    qbds;
        QueryBuildDataSource    qbds_W;
        TableId                 tableIdCorrection;
        FieldId                 fieldIdCorrection;

        Query query = new Query();

        qbds = query.addDataSource(this.transTableId(), tableId2name(this.transTableId()));

        [tableIdCorrection, fieldIdCorrection]  = this.fieldCorrection(CurrencyType_RU::Secondary);

        if (tableIdCorrection != this.transTableId())
        {
            qbds_W = qbds.addDataSource(tableIdCorrection, tableId2name(tableIdCorrection));
            qbds_W.addLink(fieldNum(CustTrans, RecId), fieldNum(CustTrans_W, CustTrans));
            qbds_W.joinMode(JoinMode::OuterJoin);
            qbds_W.fetchMode(QueryFetchMode::One2One);
        }

        return query.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportType</Name>
				<Source><![CDATA[
    protected RLedgerTurnoverSheetType reportType()
    {
        return RLedgerTurnoverSheetType::CustTurnover;
    }

]]></Source>
			</Method>
			<Method>
				<Name>settlementTableId</Name>
				<Source><![CDATA[
    public TableId settlementTableId()
    {
        return tableNum(CustSettlement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transForm</Name>
				<Source><![CDATA[
    protected str transForm()
    {
        return formstr(CustTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTableId</Name>
				<Source><![CDATA[
    public tableId transTableId()
    {
        return tablenum(CustTrans);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>