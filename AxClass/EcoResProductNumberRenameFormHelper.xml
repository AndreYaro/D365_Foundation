<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductNumberRenameFormHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductNumberRenameFormHelper
{
    EcoResProductRecId          productRecId;
    EcoResProductNumber         productNumber;
    boolean                     isProductMaster;

    FormStringControl           productNumberCtrl;
    FormStringControl           productNumberOriginCtrl;
    FormCheckBoxControl         updateVariantsCtrl;
    FormCommandButtonControl    okButton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>callRename</Name>
				<Source><![CDATA[
    protected void callRename(EcoResProductNumberRenameService _service)
    {
        _service.rename();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButton</Name>
				<Source><![CDATA[
    protected void enableButton(boolean _enable)
    {
        if (okButton.enabled() != _enable)
        {
            okButton.enabled(_enable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProduct</Name>
				<Source><![CDATA[
    protected void initFromProduct(EcoResProduct _product)
    {
        productNumber = EcoResProductIdentifier::findByProduct(_product.RecId).ProductNumber;

        this.parmProductRecId(_product.RecId);
        this.parmProductNumber(productNumber);
        this.parmIsProductMaster(_product.isProductMaster());
    }

]]></Source>
			</Method>
			<Method>
				<Name>modified</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Maintains the form controls state as it responds to the modified event.
    /// </summary>
    public void modified()
    {
        str productNumberTmp = this.parmProductNumberCtrl().text();

        if (productNumberTmp == productNumber
            || productNumberTmp == ""
            || EcoResProductIdentifier::findByProductNumber(productNumberTmp).RecId)
        {
            this.enableButton(false);
        }
        else
        {
            this.enableButton(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsProductMaster</Name>
				<Source><![CDATA[
    public boolean parmIsProductMaster(boolean _isProductMaster = isProductMaster)
    {
        isProductMaster = _isProductMaster;

        return isProductMaster;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOkButton</Name>
				<Source><![CDATA[
    public FormCommandButtonControl parmOkButton(FormCommandButtonControl _okButton = okButton)
    {
        okButton = _okButton;

        return okButton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductNumber</Name>
				<Source><![CDATA[
    public EcoResProductNumber parmProductNumber(EcoResProductNumber _productNumber = productNumber)
    {
        productNumber = _productNumber;

        return productNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductNumberCtrl</Name>
				<Source><![CDATA[
    public FormStringControl parmProductNumberCtrl(FormStringControl _productNumberCtrl = productNumberCtrl)
    {
        productNumberCtrl = _productNumberCtrl;

        return productNumberCtrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductNumberOriginCtrl</Name>
				<Source><![CDATA[
    public FormStringControl parmProductNumberOriginCtrl(FormStringControl _productNumberOriginCtrl = productNumberOriginCtrl)
    {
        productNumberOriginCtrl = _productNumberOriginCtrl;

        return productNumberOriginCtrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductRecId</Name>
				<Source><![CDATA[
    public EcoResProductRecId parmProductRecId(EcoResProductRecId _productRecId = productRecId)
    {
        productRecId = _productRecId;

        return productRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateVariantsCtrl</Name>
				<Source><![CDATA[
    public FormCheckBoxControl parmUpdateVariantsCtrl(FormCheckBoxControl _updateVariantsCtrl = updateVariantsCtrl)
    {
        updateVariantsCtrl = _updateVariantsCtrl;

        return updateVariantsCtrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rename</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes the rename operation of a product number.
    /// </summary>
    public void rename()
    {
        EcoResProductNumberRenameService productNumberRenameService = EcoResProductNumberRenameService::newFromProduct(
            this.parmProductRecId(),
            this.parmProductNumber(),
            this.parmProductNumberCtrl().text(),
            this.parmUpdateVariantsCtrl().checked());

        this.callRename(productNumberRenameService);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlInitialState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the initial state of the controls.
    /// </summary>
    public void setControlInitialState()
    {
        this.parmProductNumberCtrl().text(this.parmProductNumber());

        this.parmProductNumberOriginCtrl().text(this.parmProductNumber());
        this.parmProductNumberOriginCtrl().enabled(false);

        this.parmOkButton().enabled(false);

        if (!this.parmIsProductMaster())
        {
            this.parmUpdateVariantsCtrl().enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static EcoResProductNumberRenameFormHelper construct()
    {
        return new EcoResProductNumberRenameFormHelper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromArgs</Name>
				<Source><![CDATA[
    public static EcoResProductNumberRenameFormHelper newFromArgs(
        Args                        _args,
        FormStringControl           _productNumberCtrl,
        FormCheckBoxControl         _updateVariantsCtrl,
        FormCommandButtonControl    _okButton,
        FormStringControl           _productNumberOriginCtrl)
    {
        EcoResProductNumberRenameFormHelper formHelper = EcoResProductNumberRenameFormHelper::construct();

        if (    _args == null
            ||  _productNumberCtrl == null
            ||  _updateVariantsCtrl == null
            ||  _okButton == null
            ||  _productNumberOriginCtrl == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        if (_args.record() is EcoResProduct)
        {
            formHelper.initFromProduct(_args.record() as EcoResProduct);
            formHelper.parmProductNumberCtrl(_productNumberCtrl);
            formHelper.parmUpdateVariantsCtrl(_updateVariantsCtrl);
            formHelper.parmOkButton(_okButton);
            formHelper.parmProductNumberOriginCtrl(_productNumberOriginCtrl);
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        return formHelper;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
