<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IntrastatCompressParametersForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
class IntrastatCompressParametersForm
{
    FormListControl     selected;
    FormListControl     notSelected;

    ImageListAppl_Query imageListAppl_Query;

    #resAppl

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addFields</Name>
				<Source><![CDATA[
        void addFields()
    {
        this.transferFields(notSelected, selected);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillNotSelected</Name>
				<Source><![CDATA[
        void fillNotSelected()
    {
        List            notSelectedFieldIdList;
        ListEnumerator  notSelectedEnumerator;
        FormListItem    formListItem;
        fieldId         fieldId;
        int             idx = 0;
        container       packedList = IntrastatCompressParameters::packedNotSelectedFieldIdList();
        ;
        notSelected.deleteAll();

        if (packedList)
        {
            notSelectedFieldIdList = List::create(packedList);

            notSelectedEnumerator = notSelectedFieldIdList.getEnumerator();

            while (notSelectedEnumerator.moveNext())
            {
                fieldId = notSelectedEnumerator.current();
                if (IntrastatCompressParametersForm::fieldInCurrentCountryContext(fieldId))
                {
                    formListItem = new FormListItem(IntrastatCompressParameters::fieldName(fieldId), imageListAppl_Query.image(#ImageField), fieldId);
                    formListItem.idx(idx);
                    notSelected.addItem(formListItem);
                }
                idx++;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillSelected</Name>
				<Source><![CDATA[
        void fillSelected()
    {
        List                    selectedFieldIdList;
        ListEnumerator          selectedEnumerator;
        FormListItem            formListItem;
        fieldId                 fieldId;
        int                     idx = 0;
        container               packedList = IntrastatCompressParameters::packedSelectedFieldIdList();
        ;
        selected.deleteAll();

        if (packedList)
        {
            selectedFieldIdList = List::create(packedList);
            selectedEnumerator  = selectedFieldIdList.getEnumerator();

            while (selectedEnumerator.moveNext())
            {
                fieldId = selectedEnumerator.current();
                if (IntrastatCompressParametersForm::fieldInCurrentCountryContext(fieldId))
                {
                    formListItem = new FormListItem(IntrastatCompressParameters::fieldName(fieldId), imageListAppl_Query.image(#ImageField), fieldId);
                    formListItem.idx(idx);
                    selected.addItem(formListItem);
                }
                idx++;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillViews</Name>
				<Source><![CDATA[
        void fillViews()
    {
        ;
        this.fillSelected();
        this.fillNotSelected();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        void new(FormListControl _selected, FormListControl _notSelected)
    {
        selected            = _selected;
        notSelected         = _notSelected;

        imageListAppl_Query = new ImageListAppl_Query();

        selected.addColumn(1,new FormListColumn("@SYS3852",1, 300));
        notSelected.addColumn(1,new FormListColumn("@SYS3852",1, 300));
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeFields</Name>
				<Source><![CDATA[
        void removeFields()
    {
        this.transferFields(selected, notSelected);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferFields</Name>
				<Source><![CDATA[
        private void transferFields(FormListControl _fromList, FormListControl _toList)
    {
        FormListItem            formListItem;
        int                     idx;
        int                     fieldId;
        ;
        idx = _fromList.getNextItem(FormListNext::Selected);

        while (idx != -1)
        {
            fieldId         = _fromList.getItem(idx).data();
            formListItem = new FormListItem(IntrastatCompressParameters::fieldName(fieldId), imageListAppl_Query.image(#ImageField), fieldId);
            formListItem.idx(_toList.getCount());
            _toList.addItem(formListItem);

            _fromList.delete(idx);
            idx = _fromList.getNextItem(FormListNext::Selected);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeFields</Name>
				<Source><![CDATA[
        void writeFields()
    {
        List    selectedFieldIdList = new List(Types::Integer);
        int     idx;

        idx = selected.getNextItem(FormListNext::All);

        while (idx != -1)
        {
            selectedFieldIdList.addEnd(selected.getItem(idx).data());
            idx = selected.getNextItem(FormListNext::All, idx);
        }

        IntrastatCompressParameters::writeFromPackedList(selectedFieldIdList.pack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static IntrastatCompressParametersForm construct(FormListControl _selected,
                                                     FormListControl _notSelected)
    {
        return new IntrastatCompressParametersForm(_selected, _notSelected);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldInCurrentCountryContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a field of the <c>Intrastat</c> table is under current country context.
    /// </summary>
    /// <param name="_fieldId">
    /// The ID of the field.
    /// </param>
    /// <returns>
    /// true if the field is under current country context; otherwise, false.
    /// </returns>
    public static boolean fieldInCurrentCountryContext(fieldId _fieldId)
    {
        DictField dictField = new DictField(tableNum(Intrastat), _fieldId);
        container con = dictField.getCountryRegionCodes();
        LogisticsAddressCountryRegionISOCode countryISOCode = SysCountryRegionCode::countryInfo();
        int i;

        if (!conLen(con))
        {
            //no country reigon code set on field means true
            return true;
        }
        else
        {
            for (i= 1; i <= conLen(con); i++)
            {
                if (conPeek(con, i) == countryISOCode)
                {
                    return true;
                }
            }
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>