<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25RegParametersEngine_TempDifference</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RTax25RegParametersEngine_TempDifference extends RTax25RegParametersEngine_Assets
{
    const int ParameterCode5 = 5;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkDeferralsGroup</Name>
				<Source><![CDATA[
    private boolean checkDeferralsGroup(NotesLine _parameter)
    {
        RDeferralsGroupId rDeferralsGroupId;
        boolean           ret = true;
        container         contain;
        Counter           containLen, i = 1;
        ;

        contain     = RTax25RegParametersEngine::parameters2Con(_parameter);
        containLen  = conlen(contain);
        do
        {
            rDeferralsGroupId = strltrim(strrtrim(conpeek(contain,i)));
            if (rDeferralsGroupId && ! RDeferralsGroup::find(rDeferralsGroupId))
            {
                ret = checkFailed("@SYS68284");
                break;
            }
            i++;
        }
        while (rDeferralsGroupId && i <= containLen);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    #define.ParameterCode1(1)
    #define.ParameterCode2(2)
    #define.ParameterCode3(3)
    #define.ParameterCode4(4)
    public void lookup(FormStringControl _lookupCtrl)
    {
        registerParameters = registerParametersDs.cursor();
        switch (registerParameters.ParameterCode)
        {
            case #ParameterCode1,#ParameterCode2:
                super(_lookupCtrl);
                break;
            case #ParameterCode3, ParameterCode5:
                _lookupCtrl.replaceOnLookup(true);
                _lookupCtrl.performTypeLookup(extendedtypenum(TaxCode));
                break;
            case #ParameterCode4:
                _lookupCtrl.replaceOnLookup(false);
                _lookupCtrl.hasChanged(false);
                RDeferralsGroup::lookupGroup(_lookupCtrl, RTax25Parameters::find().DeferralsBookId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    #define.ParameterCode1(1)
    #define.ParameterCode2(2)
    #define.ParameterCode3(3)
    #define.ParameterCode4(4)
    public boolean validateWrite()
    {
        boolean ret = true;

        registerParameters = registerParametersDs.cursor();

        if (! registerParameters.Parameter)
            return true;

        switch (registerParameters.ParameterCode)
        {
            case #ParameterCode1,#ParameterCode2:
                ret = super();
                break;
            case #ParameterCode3, ParameterCode5:
                ret = TaxTable::exist(strltrim(strrtrim(registerParameters.Parameter)));
                if (! ret)
                {
                    ret = checkFailed("@SYS68284");
                }
                break;
            case #ParameterCode4:
                ret = this.checkDeferralsGroup(registerParameters.Parameter);
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>