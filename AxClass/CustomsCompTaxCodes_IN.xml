<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomsCompTaxCodes_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles tax component and tax code.
/// </summary>
class CustomsCompTaxCodes_IN extends SysListPanel
{
    RefRecId taxComponentTableRecId;

    #ResAppl
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method inserts the tax component and tax code value from container to table.
    /// </summary>
    /// <param name="_data">
    /// The parameter _data is a container holding the tax component and tax code values.
    /// </param>
    /// <remarks>
    /// Container is inserted in the format [Id1, Id2, ...], Where Ids are the Ids given with getData()
    /// </remarks>
    public void addData(container _data)
    {
        int                         i;
        CustomsComponentTaxCodes_IN customsComponentTaxCodes;

        for (i = conlen(_data); i; i--)
        {
            customsComponentTaxCodes.TaxComponentTable = taxComponentTableRecId;
            customsComponentTaxCodes.TaxCode           = conpeek(_data, i);
            customsComponentTaxCodes.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method inserts the records into the containers fetched from the respective tables.
    /// </summary>
    /// <returns>
    /// Method returns the updated containers.
    /// </returns>
    /// <remarks>
    /// The conatiners must be in the format [[Id, column1, column2], [Id, column1, column2], ...],
    /// Where Id is the Ids used when adding and removing items.
    /// </remarks>
    public container getData()
    {
        container                   selectedData;
        container                   availableData;
        TaxTable                    taxTable;
        TaxCode                     changeTaxCode = '';
        CustomsComponentTaxCodes_IN customsComponentTaxCodes;

        while select TaxCode, TaxName
            from taxTable
            where taxTable.TaxType_IN == TaxType_IN::Excise
            notexists join customsComponentTaxCodes
                where customsComponentTaxCodes.TaxCode           == taxTable.TaxCode
                   && customsComponentTaxCodes.TaxComponentTable == taxComponentTableRecId
        {
            availableData += [[taxTable.TaxCode, taxTable.TaxCode, taxTable.TaxName]];
        }

        while select TaxCode
            from customsComponentTaxCodes
            order by TaxCode
            where customsComponentTaxCodes.TaxComponentTable == taxComponentTableRecId
        {
            if (changeTaxCode != customsComponentTaxCodes.TaxCode)
            {
                selectedData  += [[customsComponentTaxCodes.TaxCode, customsComponentTaxCodes.TaxCode, TaxTable::find(customsComponentTaxCodes.TaxCode).TaxName]];
            }

            changeTaxCode = customsComponentTaxCodes.TaxCode;
        }

        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfColumns</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of the column.
    /// </summary>
    /// <returns>
    /// The number of the the column.
    /// </returns>
    public int numOfColumns()
    {
        #define.numOfColumns(2)

        return #numOfColumns;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxComponentTableRecId</Name>
				<Source><![CDATA[
    public RefRecId parmTaxComponentTableRecId(RefRecId _taxComponentTableRecId = taxComponentTableRecId)
    {
        taxComponentTableRecId = _taxComponentTableRecId;

        return taxComponentTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes tax codes.
    /// </summary>
    /// <param name="_data">
    /// The instance of the <c>container</c> class that contains the tax codes.
    /// </param>
    public void removeData(container _data)
    {
        int                         i;
        TaxCode                     removeTaxCode;
        CustomsComponentTaxCodes_IN customsComponentTaxCodes;

        for (i = conlen(_data); i; i --)
        {
            removeTaxCode = conpeek(_data, i);
            ttsbegin;

            delete_from customsComponentTaxCodes
                where customsComponentTaxCodes.TaxComponentTable == taxComponentTableRecId
                   && customsComponentTaxCodes.TaxCode           == removeTaxCode;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CustomsCompTaxCodes_IN construct()
    {
        return new CustomsCompTaxCodes_IN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new form on the list panel.
    /// </summary>
    /// <param name="_formRun">
    /// The instance of the <c>FormRun</c> class.
    /// </param>
    /// <param name="_parentId">
    /// The id of the parent container.
    /// </param>
    /// <param name="_captionSelected">
    /// The caption on the selected side.
    /// </param>
    /// <param name="_captionAvailable">
    /// The caption on the available side.
    /// </param>
    /// <param name="_imageId">
    /// The id of the image.
    /// </param>
    /// <param name="_hasAddAllButton">
    /// If 'True', all buttons will be added on the panel.
    /// </param>
    /// <param name="_hasRemoveAllButton">
    /// If 'True', all buttons will be removed from the panel.
    /// </param>
    /// <returns>
    /// The instance of the <c>SysListPanel</c> class.
    /// </returns>
    public static SysListPanel newForm(FormRun     _formRun,
                                       int         _parentId,
                                       str         _captionSelected,
                                       str         _captionAvailable,
                                       int         _imageId            = #ImageDefault,
                                       boolean     _hasAddAllButton    = false,
                                       boolean     _hasRemoveAllButton = false)
    {
        SysListPanel sysListPanel = CustomsCompTaxCodes_IN::construct();

        sysListPanel.parmFormRun(_formRun);
        sysListPanel.parmParentId(_parentId);
        sysListPanel.parmCaptionAvailable(_captionAvailable);
        sysListPanel.parmCaptionSelected(_captionSelected);
        sysListPanel.parmImageId(_imageId);
        sysListPanel.parmHasAddAllButton(_hasAddAllButton);
        sysListPanel.parmHasRemoveAllButton(_hasRemoveAllButton);
        sysListPanel.build();

        return sysListPanel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>