<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ODBCImport_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ODBCImport_RU</c> is the base class for import data through ODBC connection.
/// </summary>
/// <remarks>
/// Implements logic for importing data through ODBC connection.
/// </remarks>
abstract class ODBCImport_RU extends RunBaseBatch
{
    #AviFiles
    #ISOCountryRegionCodes

    OdbcDsn_RU     dsn;
    DialogField    dialogDsn;

    LoginProperty  lp;
    OdbcConnection connection;
    Statement      statement;
    ResultSet      resultSet;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        Dsn
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
        public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatchJournal</Name>
				<Source><![CDATA[
        protected boolean canGoBatchJournal()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
        public Object dialog()
    {
        DialogRunbase dialog = super();

        dialogDsn = dialog.addFieldValue(extendedtypestr(OdbcDsn_RU), dsn);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Transfers data from the dialog into the class variable.
    /// </summary>
    /// <returns>
    /// true if transfered correct.
    /// </returns>
    public boolean getFromDialog()
    {
        dsn = dialogDsn.value();

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        return [ #CurrentVersion, #CurrentList ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>progressUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Increments the progress bar during an operation.
    /// </summary>
    final protected void progressUpdate()
    {
        progress.incCount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>readFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize connection to DSN.
    /// </summary>
    protected void readFile()
    {
        lp = new LoginProperty();
        lp.setDSN(dsn);

        connection = new OdbcConnection(lp);
        statement  = connection.createStatement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
        public void run()
    {
        this.readFile();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container _packedClass)
    {
        Integer version = conpeek(_packedClass, 1);

        switch (version)
        {
            case #CurrentVersion:
                [ version, #CurrentList ] = _packedClass;
                break;

            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the values of the parameters.
    /// </summary>
    /// <param name="_calledFrom">
    /// The object/form which calls the method.
    /// </param>
    /// <returns>
    /// true if all values are valid; otherwise, false.
    /// </returns>
    public boolean validate(Object _calledFrom = null)
    {
        boolean ret = super(_calledFrom);

        if (! dsn)
        {
            ret = checkFailed("@GLS105898");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>