<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesByStoreReportDiscountSalesDataProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Data;

/// <summary>
/// The <c>RetailSalesByStoreReportDiscountSalesDataProvider</c> class is the
/// data provider class for discount sales section in retail store summary report.
/// </summary>
[SRSReportParameterAttribute(classstr(RetailReportParametersDataContract))]
class RetailSalesByStoreReportDiscountSalesDataProvider extends RetailSrsReportDataProviderChannelBase
{
    RetailReportParametersDataContract dc;
    RetailSalesByStoreCategoryValueTable table;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTable</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute(tableStr(RetailSalesByStoreCategoryValueTable))]
    public RetailSalesByStoreCategoryValueTable getTable()
    {
        select table;
        return table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is called by the SSRS report framework to execute the report queries.
    /// </summary>
    public void processReport()
    {
        super();
        dc = this.parmDataContract();

        this.populateData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Run the query and insert data into temp table.
    /// </summary>
    void populateData()
    {
        try
        {
            SysQueryRun::ExecuteInManagedStack(true);

            this.InsertChannelsToTmpTable(dc.parmHierarchyRelationId());
            Query q = new Query();
            QueryBuildDataSource  qds = q.addDataSource(tableNum(RetailSalesByStoreReportDiscountsView));

            // Add fields.
            qds.addSelectionField(fieldnum(RetailSalesByStoreReportDiscountsView, Amount), SelectionField::Sum);
            qds.addSelectionField(fieldnum(RetailSalesByStoreReportDiscountsView, NetAmountBeforeDiscount), SelectionField::Sum);
            qds.addSelectionField(fieldnum(RetailSalesByStoreReportDiscountsView, DiscountRecId), SelectionField::Count);
            qds.addSelectionField(fieldnum(RetailSalesByStoreReportDiscountsView, MinDiscountPercent), SelectionField::Min);
            qds.addSelectionField(fieldnum(RetailSalesByStoreReportDiscountsView, MaxDiscountPercent), SelectionField::Max);

            //Add ranges.
            QueryBuildRange dateTimeRange = qds.addRange(fieldnum(RetailSalesByStoreReportDiscountsView, transDate));
            dateTimeRange.value(this.buildDateRangeForSpecifiedField(dc.parmFromDate(), dc.parmToDate(), fieldStr(RetailSalesByStoreReportDiscountsView, transDate)));

            //Add join with RetailReportChannelTable.
            this.JoinChannelFilter(qds, fieldNum(RetailSalesByStoreReportDiscountsView, Channel));

            QueryRun qRun = new QueryRun(q);
            RetailSalesByStoreReportDiscountsView row;

            // run the query and insert the query results into the temp table.
            if ( qRun.next() )
            {
                row = qRun.Get(tableNum(RetailSalesByStoreReportDiscountsView));
            }

            this.insertIntoTempTable("@Retail:ReportDiscountsCount", row.DiscountRecId, false);
            this.insertIntoTempTable("@Retail:ReportTotalAmount", row.Amount, false);
            this.insertIntoTempTable("@Retail:ReportHighestPercent", row.MaxDiscountPercent, true);
            this.insertIntoTempTable("@Retail:ReportLowestPercent", row.MinDiscountPercent, true);

            this.ClearChannelFilterTable();
        }
        finally
        {
            SysQueryRun::ExecuteInManagedStack(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTempTable</Name>
				<Source><![CDATA[
    private void insertIntoTempTable(str measureName,real value , boolean isPercent)
    {
        // Insert record into the ax table.
        table.MeasureName = measureName;
        table.Value = value;

        // 0 is true and 1 is false.
        table.IsPercent = isPercent?1:0;
        table.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>