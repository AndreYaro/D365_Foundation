<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqLineInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchReqReleaseInstrumentationActivities</c> class provides activities for purchase requistion line instrumentation logging.
/// </summary>
internal final class PurchReqLineInstrumentationActivities
{
    private PurchReqInstrumentationLogger logger;
    private const str SubmitSourceDocument = 'SubmitSourceDocument';
    private const str Totals = 'Totals';
    private const str CheckBudgetReservationBalance = 'CheckBudgetReservationBalance';
    private const str CompleteLinePerformBudgetCheckInProcess = 'CompleteCheckInProcess';
    private const str CreateCancelEventAndDistributions = 'CreateCancelEventAndDistributions';
    private const str Insert = 'Insert';
    private const str Update = 'Update';
    private const str Delete = 'Delete';
    private const str UpdateStatusCancelled = 'UpdateStatusCancelled';
    private const str UpdateStatusRejected = 'UpdateStatusRejected';
    private const str UpdateResetDistributions = 'UpdateResetDistributions';
    
    private const str SourceDocumentLineProperty = 'SourceDocumentLine';
    private const str HasUIProperty = 'HasUI';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(PurchReqInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static PurchReqLineInstrumentationActivities newFromLogger(PurchReqInstrumentationLogger _logger)
    {
        return new PurchReqLineInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createActivityContextReqisitionLine</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext createActivityContextReqisitionLine(str _activityName, PurchReqLine _purchReqLine)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(strFmt('%1.%2', tableStr(PurchReqLine), _activityName));

        activityContext.addCustomProperty(tableStr(PurchReqLine), int642Str(_purchReqLine.RecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>submitSourceDocument</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext submitSourceDocument(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(SubmitSourceDocument, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>totals</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext totals(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(Totals, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkBudgetReservationBalance</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext checkBudgetReservationBalance(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(CheckBudgetReservationBalance, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>completeLinePerformBudgetCheckInProcess</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext completeLinePerformBudgetCheckInProcess(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(CompleteLinePerformBudgetCheckInProcess, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCancelEventAndDistributions</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext createCancelEventAndDistributions(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(CreateCancelEventAndDistributions, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext insert(PurchReqLine _purchReqLine)
    {
        return logger.activityContext(strFmt('%1.%2', tableId2Name(_purchReqLine.tableId), Insert));
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext update(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(Update, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext delete(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(Delete, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatusCancelled</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updateStatusCancelled(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(UpdateStatusCancelled, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatusRejected</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updateStatusRejected(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(UpdateStatusRejected, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateResetDistributions</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updateResetDistributions(PurchReqLine _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(UpdateResetDistributions, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logRequisitionLine</Name>
				<Source><![CDATA[
    internal void logRequisitionLine(SysInstrumentationActivityContext _activityContext, PurchReqLine _purchReqLine)
    {
        if (TradeTableInstrumentationFlight::instance().isEnabled())
        {
            _activityContext
                .addCustomProperty(tableStr(PurchReqTable), int642Str(_purchReqLine.PurchReqTable))
                .addCustomProperty(SourceDocumentLineProperty, int642Str(_purchReqLine.SourceDocumentLine))
                .addCustomProperty(HasUIProperty, any2Str(FormDataUtil::isFormDataSource(_purchReqLine)));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>