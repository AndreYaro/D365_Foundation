<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLocationMixingConstrReceiptCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSLocationMixingConstrReceiptCache</c> class is responsible
/// for caching information about the last inventory receipt per warehouse location.
/// </summary>
/// <remarks>
/// The information that is stored in the cache allows to speed up the location mix check.
/// </remarks>
class WHSLocationMixingConstrReceiptCache
{
    Map map;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLastReceipt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the information about the last inventory receipt for the specified warehouse location.
    /// </summary>
    /// <param name="_wmsLocation">
    /// The warehouse location.
    /// </param>
    /// <returns>
    /// An instance of the <c>WHSLocationMixingConstrReceiptCacheValue</c> class if it exists in the cache; otherwise, null.
    /// </returns>
    public WHSLocationMixingConstrReceiptCacheValue getLastReceipt(WMSLocation _wmsLocation)
    {
        if (map.exists(_wmsLocation.RecId))
        {
            return map.lookup(_wmsLocation.RecId);
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        map = new Map(Types::Int64, Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLastReceipt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the information about the last receipt in the cache.
    /// </summary>
    /// <param name="_wmsLocation">
    /// The warehouse location.
    /// </param>
    /// <param name="_lastReceipt">
    /// The information about the last receipt.
    /// </param>
    public void setLastReceipt(WMSLocation _wmsLocation, WHSLocationMixingConstrReceiptCacheValue _lastReceipt)
    {
        map.insert(_wmsLocation.RecId, _lastReceipt);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static WHSLocationMixingConstrReceiptCache construct()
    {
        return new WHSLocationMixingConstrReceiptCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the reference to the common instance of the cache.
    /// </summary>
    /// <returns>
    /// An instance of the <c>WHSLocationMixingConstrReceiptCache</c>.
    /// </returns>
    /// <remarks>
    /// The method will always return the same instance of the cache within the same transaction scope.
    /// The cache will be cleared and replaced when a new transaction begins.
    /// </remarks>
    public static WHSLocationMixingConstrReceiptCache instance()
    {
        WHSLocationMixingConstrReceiptCache instance = SysTransactionScopeCache::get(classStr(WHSLocationMixingConstrReceiptCache), '', null);

        if (!instance)
        {
            instance = WHSLocationMixingConstrReceiptCache::construct();
            SysTransactionScopeCache::set(classStr(WHSLocationMixingConstrReceiptCache), '', instance);
        }

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>