<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionActionHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailTransactionActionHandler</c> class is used by the <c>RetailTransactionPicker</c> action menu item to open the transaction form approprite for the type of the buffer passed in arguments.
/// </summary>
class RetailTransactionActionHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args _args)
    {
        RetailTransactionTable retailTransactionTable;
        RetailChannelTable retailChannelTable;

        if (_args)
        {
            retailTransactionTable = _args.record();

            retailChannelTable = RetailChannelTable::findByRecId(retailTransactionTable.Channel);

            switch (retailChannelTable.ChannelType)
            {
                case RetailChannelType::RetailStore:
                    new MenuFunction(menuitemDisplayStr(RetailRetailStoreTransactionTable), MenuItemType::Display).run(_args);
                    break;

                case RetailChannelType::OnlineStore:
                    new MenuFunction(menuitemDisplayStr(RetailOnlineStoreTransactionTable), MenuItemType::Display).run(_args);
                    break;

                default:
                    EventHandlerResult result = new EventHandlerResult();
                    RetailTransactionActionHandler::mainDelegate(_args, result);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mainDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for opening the transaction form appropriate for the channel type of the transaction table buffer passed in arguments.
    /// </summary>
    /// <param name="_args">
    /// The buffer containing the current transaction table record.
    /// </param>
    /// <param name="_result">
    /// Subscribers can use this object to return result of the call.
    /// </param>
    static delegate void mainDelegate(Args _args, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>