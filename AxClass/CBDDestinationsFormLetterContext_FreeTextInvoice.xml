<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CBDDestinationsFormLetterContext_FreeTextInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
/// <summary>
/// The <c>CBDDestinationsFormLetterContext_FreeTextInvoice</c> class is an implementation of the
/// <c>CBDDestinationsFormLetterContextInterface</c> interface to support
/// runtime Electronic reporting destinations for Free text invoice document.
/// </summary>
[ExportMetadata(classStr(CBDDestinationsFormLetterContextInterface), PrintMgmtDocumentType::SalesFreeTextInvoice)]
[Export(identifierstr(Dynamics.AX.Application.CBDDestinationsFormLetterContextInterface))]
internal final class CBDDestinationsFormLetterContext_FreeTextInvoice implements CBDDestinationsFormLetterContextInterface, CBDDestinationsFormLetterContextQueryInterface
{
    private QueryRun queryRun;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCountReferences</Name>
				<Source><![CDATA[
    public NumberOfRecords getCountReferences(Object _formLetter)
    {
        return this.getCountReferencesWithLimit(_formLetter, maxInt());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReferenceBuffer</Name>
				<Source><![CDATA[
    public Common getReferenceBuffer(Object _formLetter)
    {
        CustPostInvoiceJob custPostInvoiceJob = _formLetter as CustPostInvoiceJob;

        if (!custPostInvoiceJob)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        queryRun = new QueryRun(custPostInvoiceJob.queryRun().pack());
        
        CustInvoiceTable custInvoiceTable;

        if (queryRun.next())
        {
            custInvoiceTable = queryRun.get(tableNum(CustInvoiceTable));
        }

        return custInvoiceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtRefTableBuffer</Name>
				<Source><![CDATA[
    public Common getPrintMgmtRefTableBuffer(Common _reference)
    {
        return _reference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryTableBuffer</Name>
				<Source><![CDATA[
    public Common getQueryTableBuffer(Common _reference, Object _formLetter)
    {
        CustInvoiceTable custInvoiceTable = _reference as CustInvoiceTable;

        if (!custInvoiceTable)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        CustPostInvoiceJob custPostInvoiceJob = _formLetter as CustPostInvoiceJob;

        if (!custPostInvoiceJob)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        CustInvoiceJour custInvoiceJour;

        custInvoiceJour.setTmp();
        custInvoiceJour.initValue();
        custInvoiceJour.initFromCustInvoiceTable(custInvoiceTable);
        custInvoiceJour.Proforma = NoYes::Yes;
        custInvoiceJour.doInsert();

        return custInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintContext</Name>
				<Source><![CDATA[
    public PrintMgmtPrintContext getPrintContext(Common _printMgmtReferencedTable, Common _queryTableBuffer)
    {
        PrintMgmtPrintContext printContext = new PrintMgmtPrintContext();
    
        printContext.parmDefaultOriginalPrintJobSettings(new SRSPrintDestinationSettings());
        printContext.parmDefaultCopyPrintJobSettings(new SRSPrintDestinationSettings());

        printContext.parmQueryTableBuffer(_queryTableBuffer);
        printContext.setHierarchyContext(
            PrintMgmtHierarchyType::Sales,
            PrintMgmtNodeType::CustInvoiceTable,
            PrintMgmtDocumentType::SalesFreeTextInvoice,
            _printMgmtReferencedTable.data());
        return printContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextReference</Name>
				<Source><![CDATA[
    public Common getNextReference()
    {
        if (!queryRun)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        CustInvoiceTable custInvoiceTable;

        if (queryRun.next())
        {
            custInvoiceTable = queryRun.get(tableNum(CustInvoiceTable));
        }

        return custInvoiceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCountReferencesWithLimit</Name>
				<Source><![CDATA[
    public NumberOfRecords getCountReferencesWithLimit(Object _formLetter, NumberOfRecords _maxRows)
    {
        CustPostInvoiceJob custPostInvoiceJob = _formLetter as CustPostInvoiceJob;

        if (!custPostInvoiceJob)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        return QueryRun::getQueryRowCount(custPostInvoiceJob.queryRun().query(), int642int(_maxRows));;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>