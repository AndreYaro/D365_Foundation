<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSRouteShipDateDialog</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TMSRouteShipDateDialog</c> class holds the dialog for entering ship dates for loads in a route.
/// </summary>
public final class TMSRouteShipDateDialog
{
    Dialog          dialog;
    TMSRouteCode    routeCode;
    container       loads;
    Map             shipDateMap;
    int             numberOfLoads;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newDialogFromLoads</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the TMS route ship date dialog for entering ship dates for the loads in a route.
    /// </summary>
    /// <param name = "_loads">A container with loads in the route.</param>
    /// <param name = "_routeCode">A route code value.</param>
    /// <returns>An instance of the TMS route ship date dialog.</returns>
    public static TMSRouteShipDateDialog newDialogFromLoads(container _loads, TMSRouteCode _routeCode)
    {
        TMSRouteShipDateDialog routeShipDateDialog = new TMSRouteShipDateDialog();

        int numberOfLoads = conLen(_loads);
        routeShipDateDialog.dialog = new Dialog(numberOfLoads > 1 ? strFmt("@TRX1571", _routeCode) : "@TRX661");
        routeShipDateDialog.loads = _loads;
        routeShipDateDialog.routeCode = _routeCode;
        routeShipDateDialog.numberOfLoads = numberOfLoads;

        return routeShipDateDialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDialogFromLoadsWithDifferentRoutes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the TMS route ship date dialog for entering ship dates for the loads.
    /// </summary>
    /// <param name = "_loads">A container with loads.</param>
    /// <returns>An instance of the TMS route ship date dialog.</returns>
    public static TMSRouteShipDateDialog newDialogFromLoadsWithDifferentRoutes(container _loads)
    {
        container loadsToConfirm;

        WHSShipConfirm shipConfirm = WHSShipConfirm::construct();

        for (int i = 1; i <= conLen(_loads); i++)
        {
            loadsToConfirm += shipConfirm.retrieveLoads(WHSLoadTable::find(conPeek(_loads, i)));
        }
        
        int numberOfLoads = conLen(loadsToConfirm);

        if(numberOfLoads > 0)
        {
            TMSRouteShipDateDialog routeShipDateDialog = new TMSRouteShipDateDialog();
            routeShipDateDialog.dialog = new Dialog("@TRX:Title_TMSRouteShipDateDialogForLoads");
            routeShipDateDialog.loads = loadsToConfirm;
            routeShipDateDialog.numberOfLoads = numberOfLoads;

            return routeShipDateDialog;
        }
        
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipDateMap</Name>
				<Source><![CDATA[
    public Map parmShipDateMap()
    {
        return shipDateMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runShipDatesDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the dialog for ship dates for loads in the route.
    /// </summary>
    /// <returns>true if clicking OK for the dialog; otherwise, false.</returns>
    [Hookable(false)]
    internal boolean runShipDatesDialog()
    {
        this.initializeDialog();
        
        dialog.run();

        boolean closedOk = dialog.closedOk();
        if (closedOk)
        {
            this.populateShipDateMap();
        }     
        
        return closedOk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the dialog.
    /// </summary>
    protected void initializeDialog()
    {
        // For each load, display load and Ship Date entry field
        for (int i = 1; i <= numberOfLoads; ++i)
        {
            DialogGroup dlgGroup = dialog.addGroup();
            dlgGroup.frameType(FormFrameType::None);
            dlgGroup.columns(2);

            DialogField dlgField = dialog.addField(extendedTypeStr(WHSLoadId));
            dlgField.allowEdit(false);
            dlgField.value(conPeek(loads, i));

            dlgField = dialog.addField(extendedTypeStr(WHSShipConfirmUTCDateTime), "@TRX1572");
            dlgField.value(utcdatetimenull());
        }

        dialog.allowUpdateOnSelectCtrl(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateShipDateMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the map with ship dates set by the user.
    /// </summary>
    protected void populateShipDateMap()
    {
        shipDateMap = new Map(Types::String, Types::UtcDateTime);

        Map         dynamicMap = dialog.name2dialogClass();
        int         loadNum;
        const int   ShipDatesFieldIndex = 2;

        // every two dialog fields is a ship date
        for (int i = ShipDatesFieldIndex; i <= numberOfLoads*ShipDatesFieldIndex; i += ShipDatesFieldIndex)
        {
            ++loadNum;

            DialogField dlgField;
            if (TMSRouteShipDateDialogLookupMapKeyUseFixedStringFlight::instance().isEnabled())
            {
                dlgField = dynamicMap.lookup(strFmt("Fld%1_1", i));
            }
            else
            {
                dlgField = dynamicMap.lookup(strFmt("@TRX1680", i));
            }

            if (!dlgField.value())
            {
                break;
            }

            shipDateMap.insert(conPeek(loads, loadNum), DateTimeUtil::removeTimeZoneOffset(dlgField.value(), DateTimeUtil::getUserPreferredTimeZone()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>