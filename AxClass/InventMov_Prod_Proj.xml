<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_Prod_Proj</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventMov_Prod_Proj extends InventMov_Prod
{
    ProdTableProj  prodTableProj;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountOperations</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount accountOperations()
    {
        if (! cacheAccountOperations)
        {
            if (prodTable.isProjMethodConsumed())
            {
                cacheAccountOperations = ProjPosting::getInventLedgerDimension(   ProjAccountType::CostAccount,
                                                                                this.projId(),
                                                                                this.projCategoryId());
            }
            else
            {
                cacheAccountOperations = super();
            }
        }

        return cacheAccountOperations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityNumber</Name>
				<Source><![CDATA[
        public ProjActivityNumber activityNumber()
    {
        return (prodTableProj.RecId ? prodTableProj.ActivityNumber : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustDoAutoLossProfitEstimate</Name>
				<Source><![CDATA[
        public boolean mustDoAutoLossProfitEstimate()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSetProjAdjustRefInventTrans</Name>
				<Source><![CDATA[
        public boolean mustSetProjAdjustRefInventTrans()
    {
        return ((prodTable.isProjMethodFinished() || prodTable.isProjMethodConsumed()) ? true : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new(
        ProdTable       _prodTable,
        InventType      _inventType = ProdTableType::construct(_prodTable))
    {
        super(_prodTable,_inventType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdTableProj</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public ProdTableProj parmProdTableProj(ProdTableProj _prodTableProj = prodTableProj)
    {
        prodTableProj = _prodTableProj;
        return prodTableProj;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingOperations</Name>
				<Source><![CDATA[
        public LedgerPostingType postingOperations()
    {
        return (prodTable.isProjMethodConsumed() ? LedgerPostingType::ProjCost : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCategoryId</Name>
				<Source><![CDATA[
        public ProjCategoryId projCategoryId()
    {
        return (prodTableProj.RecId ? prodTableProj.ProjCategoryId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projLedgerOrigin</Name>
				<Source><![CDATA[
        public ProjLedgerOrigin projLedgerOrigin()
    {
        if (prodTable.isProjMethodFinished())
        {
            return ProjOrigin::ProductionFinished;
        }

        if (prodTable.isProjMethodConsumed())
        {
            return ProjOrigin::ProductionConsumed;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projLinePropertyId</Name>
				<Source><![CDATA[
        public ProjLinePropertyId projLinePropertyId()
    {
        return (prodTableProj.RecId ? prodTableProj.ProjLinePropertyId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projSalesCurrencyId</Name>
				<Source><![CDATA[
        public ProjSalesCurrencyCode projSalesCurrencyId()
    {
        return (prodTableProj.RecId ? prodTableProj.ProjSalesCurrencyId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projSalesPrice</Name>
				<Source><![CDATA[
        public ProjSalesPriceCost projSalesPrice()
    {
        return (prodTableProj.RecId ? prodTableProj.ProjSalesPrice : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTaxGroupId</Name>
				<Source><![CDATA[
        public ProjTaxGroup projTaxGroupId()
    {
        return (prodTableProj.RecId ? prodTableProj.ProjTaxGroupId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTaxItemGroupId</Name>
				<Source><![CDATA[
        public ProjTaxItemGroup projTaxItemGroupId()
    {
        return (prodTableProj.RecId ? prodTableProj.ProjTaxItemGroupId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTransactionOrigin</Name>
				<Source><![CDATA[
        public ProjTransactionOrigin projTransactionOrigin()
    {
        if (prodTable.isProjMethodFinished())
        {
            return ProjOrigin::ProductionFinished;
        }

        if (prodTable.isProjMethodConsumed())
        {
            return ProjOrigin::ProductionConsumed;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTransId</Name>
				<Source><![CDATA[
        public ProjTransIdBase projTransId()
    {
        return (prodTableProj.RecId ? prodTableProj.ProjTransId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>transUnitId</Name>
				<Source><![CDATA[
        public UnitOfMeasureSymbol transUnitId()
    {
        return (prodTableProj.RecId ? prodTableProj.ProjSalesUnitId : super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromProdTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>InventMov_Prod_Proj</c> class based on the specified record.
    /// </summary>
    /// <param name="_prodTable">
    ///    The <c>ProdTable</c> record for which the class is instantiated.
    /// </param>
    /// <param name="_inventType">
    ///    The <c>InventType</c> class that is associated with the new instance.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventMov_Prod_Proj</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static InventMov_Prod_Proj newFromProdTable(
        ProdTable       _prodTable,
        InventType      _inventType = ProdTableType::construct(_prodTable))
    {
        return new InventMov_Prod_Proj(_prodTable, _inventType);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>