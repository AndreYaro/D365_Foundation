<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchFormLetter_Invoice4Paym_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class PurchFormLetter_Invoice4Paym_RU extends PurchFormLetter implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatchJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if operation can run in batch.
    /// </summary>
    /// <returns>True.</returns>
        public boolean canGoBatchJournal()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkFormLetterId</Name>
				<Source><![CDATA[
        public boolean checkFormLetterId()
    {
        boolean         ok = true;
        PurchParmUpdate purchParmUpdate = this.purchParmUpdate();

        if (! purchParmUpdate.Proforma)
        {
            ok = PurchSummary::checkFormletterIdServer(purchParmUpdate.SumBy,
                                                       purchParmUpdate.ParmId,
                                                       purchParmUpdate.SumPurchId,
                                                       this.documentStatus(),
                                                       this.parmNumber(),
                                                       this.missingNumber());
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets document status.
    /// </summary>
    /// <returns><c>DocumentStatus</c> object.</returns>
        public DocumentStatus documentStatus()
    {
        return DocumentStatus::Invoice4Paym_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>missingNumber</Name>
				<Source><![CDATA[
        public str missingNumber()
    {
        return "@GLS106715";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJournalTransList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets new transactions list.
    /// </summary>
    /// <returns><c>RecordSortedList</c> object.</returns>
        RecordSortedList newJournalTransList()
    {
        RecordSortedList journalTransList;
        journalTransList = new RecordSortedList(tableNum(VendInvoice4PaymTrans_RU));
        journalTransList.sortOrder(fieldNum(VendInvoice4PaymTrans_RU, RecId));
        return journalTransList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>printMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Identifies the print management document type.
    /// </summary>
    /// <returns>
    /// The print management document type for purchase order invoice for payment.
    /// </returns>
    protected PrintMgmtDocumentType printMgmtDocumentType()
    {
        return PrintMgmtDocumentType::PurchOrderInvoice4Paym_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets class description.
    /// </summary>
    /// <returns><c>ClassDescription</c> object.</returns>
        public static ClassDescription description()
    {
        return "@GLS106713";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInvoice4Paym</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates new <c>PurchFormLetter_Invoice4Paym_RU</c> instance.
    /// </summary>
    /// <param name="_className">
    ///     Class name for initializing; optional.
    /// </param>
    /// <param name="_methodName">
    ///     Method name for initializing; optional.
    /// </param>
    /// <param name="_executionMode">
    ///     <c>SysOperationExecutionMode</c> execution mode for method; optional.
    /// </param>
    /// <returns>
    ///     Created <c>PurchFormLetter_Invoice4Paym_RU</c> instance.
    /// </returns>
    static public PurchFormLetter_Invoice4Paym_RU newInvoice4Paym(
        identifierName            _className     = classStr(FormletterService),
        identifierName            _methodName    = methodStr(FormletterService, postPurchOrderInvoice4Paym_RU),
        SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        PurchFormLetter_Invoice4Paym_RU formletter = new PurchFormLetter_Invoice4Paym_RU(_className, _methodName, _executionMode);
        formletter.init();
        return formletter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorMessageHelpScopeShowLink</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean errorMessageHelpScopeShowLink()
    {
        if (PurchFormLetterErrorMessageHelpScopeInvoiceFlight::instance().isEnabled())
        {
            return super();
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>