<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCloseCluster</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class encapsulates the logic regarding closing a cluster.
/// </summary>
internal class WHSCloseCluster
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>closeClusterWithNoOpenOrInProcessWorkAfterCancellingWork</Name>
				<Source><![CDATA[
    /// <summary>
    /// Closes the cluster related to the passed cancelled work if the cluster no longer have any open or in process work.
    /// </summary>
    /// <param name = "_workId">The id of the work that was cancelled.</param>
    [Hookable(false)]
    internal static void closeClusterWithNoOpenOrInProcessWorkAfterCancellingWork(WHSWorkId _workId)
    {
        ttsbegin;

        WHSClusterId clusterId = WHSWorkClusterTable::findActiveClusterIdForWorkId(_workId);
        
        if (clusterId)
        {
            // A pessimistic lock is acquired to ensure the correct cluster status when having concurrent calls of this method
            WHSWorkClusterTable workCluster = WHSWorkClusterTable::findWithPessimisticLock(clusterId);

            if (workCluster && !workCluster.hasClusterOpenOrInProcessWork())
            {
                workCluster.updateStatus(WHSWorkClusterStatus::Closed);
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>