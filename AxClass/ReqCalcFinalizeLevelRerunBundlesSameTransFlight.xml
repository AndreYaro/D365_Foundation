<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqCalcFinalizeLevelRerunBundlesSameTransFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When <c> ReqCalcFinalizeLevelRerunBundlesSameTransFlight</c> flight is enabled, new bundles and related tasks in FinalizeLevel state 
/// are created in same transaction scope. 
/// It minimises impact of possible thread race conditions in case of multithreading batch run, when a bundle could be picked up by 
/// execution thread while no task has been created yet.
/// </summary>
internal final class ReqCalcFinalizeLevelRerunBundlesSameTransFlight extends Flight
{
    static private ReqCalcFinalizeLevelRerunBundlesSameTransFlight singleton = new ReqCalcFinalizeLevelRerunBundlesSameTransFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static ReqCalcFinalizeLevelRerunBundlesSameTransFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>