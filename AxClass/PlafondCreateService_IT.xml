<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlafondCreateService_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PlafondCreateService_IT</c> class gets actions for plafond creating.
/// </summary>
public class PlafondCreateService_IT extends SysOperationServiceBase
{
    public Plafond_IT plafond;
    public FromDate fromDate;
    public ToDate toDate;
    public AmountMST initialAmount, limitAmount;
    public Percent limitPercent;
    public PlafondLimitType_IT limitType;
    public TaxPeriod taxPeriod;
    public Description description;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>runCreation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs plafond creating opertaions.
    /// </summary>
    /// <param name = "_dataContract">The data contract to be used for creation.</param>
    public void runCreation(PlafondCreateDataContract_IT _dataContract)
    {
        ttsbegin;

        this.init(_dataContract);

        // No plafond can be created if there is one active in the same period.
        if (Plafond_IT::findPlafondInPeriod(fromDate, toDate))
        {
            throw error("@ExtendedItallianLocalization:NewPlafondCannotBeCreatedWithThisValidityPeriod");
        }

        Plafond_IT::createPlafond(
            fromDate,
            toDate,
            initialAmount,
            limitType,
            limitAmount,
            limitPercent,
            description,
            taxPeriod);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes class objects.
    /// </summary>
    /// <param name = "_dataContract">The data contract to be used for creation.</param>
    public void init(PlafondCreateDataContract_IT _dataContract)
    {
        plafond = _dataContract.parmPlafond();
        fromDate = _dataContract.parmFromDate();
        toDate = _dataContract.parmToDate();
        initialAmount = _dataContract.parmInitialAmount();
        limitAmount = _dataContract.parmLimitAmount();
        limitPercent = _dataContract.parmLimitPercent();
        limitType = _dataContract.parmLimitType();
        taxPeriod = _dataContract.parmTaxPeriod();
        description = _dataContract.parmTaxPeriod();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>