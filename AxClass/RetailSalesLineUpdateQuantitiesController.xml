<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesLineUpdateQuantitiesController</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.String;
internal class RetailSalesLineUpdateQuantitiesController extends RunBaseBatch implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustGoBatch</Name>
				<Source><![CDATA[
    public boolean mustGoBatch()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return '@Retail:RetailSalesLineUpdateQuantitiesControllerDescription';
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        this.createWorkers();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether batch task should retry in case of transient errors.
    /// </summary>
    /// <returns>true if task should be retried; otherwise, false.</returns>
    [Hookable(false)]
    public boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createWorkers</Name>
				<Source><![CDATA[
    private int createWorkers()
    {
        DataArea dataArea;
        int numberOfWorkersScheduled = 0;

        var batchJobId = this.parmCurrentBatch().BatchJobId;
        BatchHeader batchHeader = BatchHeader::construct(batchJobId);

        while select Id from dataArea
        {
            numberOfWorkersScheduled++;

            RetailSalesLineUpdateQuantitiesTask worker = RetailSalesLineUpdateQuantitiesTask::construct(dataArea.Id);

            batchHeader.addRuntimeTask(worker, this.parmCurrentBatch().RecId);
        }

        if (batchHeader)
        {
            batchHeader.save();
        }

        return numberOfWorkersScheduled;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>