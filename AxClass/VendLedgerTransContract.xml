<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendLedgerTransContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendLedgerTransContract</c> class is the data contract class for the
/// <c>VendLedgerTrans</c>Microsoft SQL Server Reporting Services report.
/// </summary>
[DataContractAttribute]
public class VendLedgerTransContract
{
    boolean totalsPerLedgerAccount;
    boolean mainAccountOnly;
    MainAccountNum mainAccountId;
    boolean showReportingCurrency = false;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmMainAccountId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter MainAccountId.
    /// </summary>
    /// <param name="_mainAccountId">
    /// The new value of the data contract parameter MainAccountId; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter MainAccountId.
    /// </returns>
    [DataMemberAttribute('MainAccountId'),
        SysOperationLabelAttribute(literalstr("@SYS135766")),
        SysOperationHelpTextAttribute(literalstr("@SYS135767"))]
    public MainAccountNum parmMainAccountId(MainAccountNum _mainAccountId = mainAccountId)
    {
        mainAccountId = _mainAccountId;
        return mainAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMainAccountOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter MainAccountOnly.
    /// </summary>
    /// <param name="_mainAccountOnly">
    /// The new value of the datacontract parameter MainAccountOnly, optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter MainAccountOnly
    /// </returns>
    [DataMemberAttribute('MainAccountOnly'),
        SysOperationLabelAttribute(literalstr("@SYS325919"))]
    public boolean parmMainAccountOnly(boolean _mainAccountOnly = mainAccountOnly)
    {
        mainAccountOnly = _mainAccountOnly;
        return mainAccountOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalsPerLedgerAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TotalsPerLedgerAccount.
    /// </summary>
    /// <param name="_totalsPerLedgerAccount">
    /// The new value of the datacontract parameter TotalsPerLedgerAccount; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TotalsPerLedgerAccount
    /// </returns>
    [DataMemberAttribute('TotalsPerLedgerAccount'),
        SysOperationLabelAttribute(literalstr("@SYS329989"))]
    public boolean parmTotalsPerLedgerAccount(boolean _totalsPerLedgerAccount = totalsPerLedgerAccount)
    {
        totalsPerLedgerAccount = _totalsPerLedgerAccount;
        return totalsPerLedgerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowReportingCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hidden parameter for reporting currency column visibility.
    /// </summary>
    /// <param name = "_showReportingCurrency">
    /// boolean value.
    /// </param>
    /// <returns>
    /// Returns True if the current ledger's reporting currency is not blank and it is not same as accounting currency.
    /// </returns>
    [
        DataMemberAttribute('ShowReportingCurrency'),
        SysOperationControlVisibilityAttribute(false)
    ]
    public boolean parmShowReportingCurrency(boolean _showReportingCurrency = showReportingCurrency)
    {
        if (Ledger::reportingCurrency() && Ledger::accountingCurrency() != Ledger::reportingCurrency())
        {
            showReportingCurrency = true;
        }
        else
        {
            showReportingCurrency = _showReportingCurrency;
        }

        return showReportingCurrency;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>