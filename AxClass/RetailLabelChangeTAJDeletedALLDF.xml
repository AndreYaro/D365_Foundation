<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailLabelChangeTAJDeletedALLDF</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RetailLabelChangeTAJDeletedALLDF extends RetailLabelChangeDataFetcherBase
{
    FromDate modifiedFromDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addSourceSpecificExistJoins</Name>
				<Source><![CDATA[
    protected Query addSourceSpecificExistJoins(Query _query)
    {
        QueryBuildDataSource qbds_exists;

        qbds_exists = _query.dataSourceNo(_query.dataSourceCount()).addDataSource(tableNum(PriceDiscAdmTable));
        qbds_exists.addLink(fieldNum(PriceDiscAdmTrans, JournalNum), fieldNum(PriceDiscAdmTable, JournalNum), _query.dataSourceTable(tableNum(PriceDiscAdmTrans)).name());
        qbds_exists.joinMode(JoinMode::ExistsJoin);
        qbds_exists.addRange(fieldNum(PriceDiscAdmTable, Posted)).value(queryValue(NoYes::Yes));

        return _query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSourceSpecificQuery</Name>
				<Source><![CDATA[
    protected Query createSourceSpecificQuery()
    {
        Query query = new Query();
        QueryBuildDataSource qbds;
        QueryBuildFieldList qbfl;

        // PriceDiscAdmTrans
        qbds = query.addDataSource(tableNum(PriceDiscAdmTrans));
        qbfl = qbds.fields();
        qbfl.clearFieldList();
        qbfl.addField(fieldNum(PriceDiscAdmTrans, ItemRelation), SelectionField::Database);
        qbfl.addField(fieldNum(PriceDiscAdmTrans, InventDimId), SelectionField::Database);
        qbds.addRange(fieldNum(PriceDiscAdmTrans, relation)).value(queryValue(PriceType::PriceSales));
        qbds.addRange(fieldNum(PriceDiscAdmTrans, ItemCode)).value(queryValue(PriceDiscProductCodeType::Table));
        qbds.addRange(fieldNum(PriceDiscAdmTrans, ItemRelation)).value(SysQuery::valueNotEmptyString());
        qbds.addRange(fieldNum(PriceDiscAdmTrans, AccountCode)).value(queryValue(PriceDiscPartyCodeType::All));
        qbds.addRange(fieldNum(PriceDiscAdmTrans, FromDate)).value(SysQuery::range(dateNull(), priceDate));
        // Extended query syntax
        qbds.addRange(fieldNum(PriceDiscAdmTrans, ToDate)).value(
            strFmt(
                '((%1 == %2) || (%1 >= %3))',
                fieldStr(PriceDiscAdmTrans, ToDate),
                date2StrXpp(dateNull()),
                date2StrXpp(priceDate)
                ));
        if (modifiedFromDate)
        {
            qbds.addRange(fieldNum(PriceDiscAdmTrans, modifiedDateTime)).value(queryRange(DateTimeUtil::newDateTime(modifiedFromDate, 0), DateTimeUtil::maxValue()));
        }
        qbds.addRange(fieldNum(PriceDiscAdmTrans, MustBeDeleted)).value(queryValue(NoYes::Yes));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemVariantId</Name>
				<Source><![CDATA[
    protected container getItemVariantId()
    {
        PriceDiscAdmTrans priceDiscAdmTrans;
        InventDimCombination inventDimCombination;

        priceDiscAdmTrans = qr.get(tableNum(PriceDiscAdmTrans));
        inventDimCombination = InventDimCombination::findByInventDim(priceDiscAdmTrans.ItemRelation, priceDiscAdmTrans.inventDim());

        return [priceDiscAdmTrans.ItemRelation, inventDimCombination.RetailVariantId];
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemFieldId</Name>
				<Source><![CDATA[
    protected FieldId itemFieldId()
    {
        return fieldNum(PriceDiscAdmTrans, ItemRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemTableId</Name>
				<Source><![CDATA[
    protected TableId itemTableId()
    {
        return tableNum(PriceDiscAdmTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FromDate _modifiedFromDate, PriceDate _priceDate, RefRecId _hierarchyRecId, OMOperatingUnitRefRecId _operatingUnitId, EcoResCategoryId _categoryId, RetailItemQtyFilter _itemQtyFilter, NoYes _initWithQtyOnHand)
    {
        modifiedFromDate = _modifiedFromDate;
        super(_priceDate, _hierarchyRecId, _operatingUnitId, _categoryId, _itemQtyFilter, _initWithQtyOnHand);
    }

]]></Source>
			</Method>
			<Method>
				<Name>productFieldId</Name>
				<Source><![CDATA[
    protected FieldId productFieldId()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>productTableId</Name>
				<Source><![CDATA[
    protected TableId productTableId()
    {
        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>