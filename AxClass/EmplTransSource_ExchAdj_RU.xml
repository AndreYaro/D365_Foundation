<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EmplTransSource_ExchAdj_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class EmplTransSource_ExchAdj_RU extends EmplTransSource_RU
{
    EmplTrans_RU    masterEmplTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillSourceData</Name>
				<Source><![CDATA[
    protected void fillSourceData()
    {
        sourceAmountCur        = masterEmplTrans.AmountCur;
        sourceAmountMST        = masterEmplTrans.AmountMST;
        sourceTaxAmountCur     = 0.0;
        sourceTaxAmountMST     = 0.0;
        sourceCurrencyCode     = masterEmplTrans.CurrencyCode;
        sourceDefaultDimension = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(masterEmplTrans.LedgerDimension);
        sourceName             = enum2str(EmplTransSourceType_RU::ExchAdj);
        sourceNum              = masterEmplTrans.Voucher;
        sourceRecId            = masterEmplTrans.RecId;
        sourceTableId          = tableNum(EmplTrans_RU);
        sourceTransDate        = masterEmplTrans.TransDate;
        sourceDescription      = masterEmplTrans.Txt;
        sourceType             = EmplTransSourceType_RU::ExchAdj;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSourceRecord</Name>
				<Source><![CDATA[
    protected void findSourceRecord()
    {
        EmplSettlement_RU   emplSettlement;

        select firstonly masterEmplTrans
            join TableId from emplSettlement
            where (masterEmplTrans.RecId        == emplSettlement.DebitRecId &&
                   emplSettlement.CreditRecId   == emplTrans.RecId) ||
                  (masterEmplTrans.RecId        == emplSettlement.CreditRecId &&
                   emplSettlement.DebitRecId    == emplTrans.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initOutputNames</Name>
				<Source><![CDATA[
    protected void initOutputNames()
    {
        ;
        formName    = formStr(EmplTrans_RU);
        itemOutputName  = menuitemOutputStr(EmplTransList_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns ledger dimension
    /// </summary>
    /// <returns>
    ///  <c>LedgerDimensionAccount</c>
    /// </returns>
    public LedgerDimensionAccount ledgerDimension()
    {
        return LedgerDimensionFacade::serviceCreateLedgerDimension(CustVendExchAdjParm_W::newFromParmEmpl(emplTrans, false, false, LedgerTransType::ExchAdjustment).ledgerDimension(emplTrans.AmountMST > 0.0 ? LedgerPostingType::ExchRateLoss : LedgerPostingType::ExchRateGain), sourceDefaultDimension);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>