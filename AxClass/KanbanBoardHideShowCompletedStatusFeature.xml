<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanBoardHideShowCompletedStatusFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>KanbanBoardHideShowCompletedStatusFeature</c> class
/// to add <c>HideCompletedJobs</c> control on the <c>KanbanBoard</c> form
/// and change the behavior of the <c>getActivities</c> method in the <c>KanbanBoardController</c> class
/// This feature lets users hide or show rows with Completed status on the Kanban board.
/// </summary>
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation;

[ExportAttribute(identifierstr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class KanbanBoardHideShowCompletedStatusFeature implements IFeatureMetadata, IFeatureLifecycle, IFeatureDependencies
{
    private static KanbanBoardHideShowCompletedStatusFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    private static void typeNew()
    {
        instance = new KanbanBoardHideShowCompletedStatusFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an instance of <c>KanbanBoardHideShowCompletedStatusFeature</c> class.
    /// </summary>
    /// <returns>An instance of <c>KanbanBoardHideShowCompletedStatusFeature</c></returns>
    [Hookable(false)]
    public static KanbanBoardHideShowCompletedStatusFeature instance()
    {
        return KanbanBoardHideShowCompletedStatusFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@SCM:KanbanBoardHideShowCompletedStatusLable");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::ProductionControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@SCM:KanbanBoardHideShowCompletedStatusSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://learn.microsoft.com/en-us/dynamics365/supply-chain/production-control/visual-scheduling-lean-manufacturing';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
        [Hookable(false)]
        public boolean isEnabledByDefault()
        {
            return true;
        }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
        [Hookable(false)]
        public boolean canDisable()
        {
            return true;
        }

]]></Source>
			</Method>
			<Method>
				<Name>isConfigurationKeyEnabled</Name>
				<Source><![CDATA[
        [Hookable(false)]
        internal boolean isConfigurationKeyEnabled()
        {
            return isConfigurationkeyEnabled(configurationKeyNum(WrkCtr));
        }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
        [Hookable(false)]
        public FeatureLifecycleStage FeatureStage()
        {
            return FeatureLifecycleStage::Released;
        }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAnyFeature</Name>
				<Source><![CDATA[
        public IFeature[] dependsOnAnyFeature()
        {
            return null;
        }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAllFeatures</Name>
				<Source><![CDATA[
        public IFeature[] dependsOnAllFeatures()
        {
            return null;
        }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
        [Hookable(false)]
        internal boolean isEnabled()
        {
            return Dynamics.AX.Application.FeatureStateProvider::isFeatureEnabled(this);
        }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>