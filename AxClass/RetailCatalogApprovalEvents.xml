<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCatalogApprovalEvents</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class <c>RetailCatalogApprovalEvents</c> is used to approve or reject the selected <c>WorkflowElementEventArgs</c>
/// </summary>
class RetailCatalogApprovalEvents implements WorkflowElementCompletedEventHandler, WorkflowElementReturnedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a catalog in <c>CatalogManager</c> and mark a catalog as approved.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// Instance of <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void completed(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        WorkflowContext context = _workflowElementEventArgs.parmWorkflowContext();
        RecId catalogRecId = context.parmRecId();
        CatalogManager catalogManager = CatalogManager::construct(catalogRecId);
        catalogManager.approve();
    }

]]></Source>
			</Method>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a catalog in <c>CatalogManager</c> usingand rejects a catalog submitted for approval.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// Instance of <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        WorkflowContext context = _workflowElementEventArgs.parmWorkflowContext();
        RecId catalogRecId = context.parmRecId();
        CatalogManager catalogManager = CatalogManager::construct(catalogRecId);
        catalogManager.reject();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>