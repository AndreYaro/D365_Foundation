<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMCalcData</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BOMCalcData</c> class contains data used for BOM Calculation.
/// </summary>
public class BOMCalcData
{
    Qty                     seriesSize;
    PdsCWInventQty          pdsCWSeriesSize;
    BOMMeasureHeight        height;
    BOMMeasureWidth         width;
    BOMMeasureDepth         depth;
    BOMMeasureDensity       density;
    InventUnitId            inventUnitId;
    private NoYes applyScrap = NoYes::Yes;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmApplyScrap</Name>
				<Source><![CDATA[
    public NoYes parmApplyScrap(NoYes _applyScrap = this.applyScrap)
    {

        this.applyScrap = _applyScrap;
        return this.applyScrap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>density</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the density.
    /// </summary>
    /// <returns>
    /// The density.
    /// </returns>
    BOMMeasureDensity    density()
    {
        return density;
    }

]]></Source>
			</Method>
			<Method>
				<Name>depth</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the depth.
    /// </summary>
    /// <returns>
    /// The depth.
    /// </returns>
    BOMMeasureDepth depth()
    {
        return depth;
    }

]]></Source>
			</Method>
			<Method>
				<Name>height</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the height.
    /// </summary>
    /// <returns>
    /// The height.
    /// </returns>
    BOMMeasureHeight height()
    {
        return height;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>BOMCalcData</c> class.
    /// </summary>
    /// <param name = "_seriesSize">The series size.</param>
    /// <param name = "_height">The height.</param>
    /// <param name = "_width">The width.</param>
    /// <param name = "_depth">The depth.</param>
    /// <param name = "_density">The density.</param>
    /// <param name = "_pdsCWSeriesSize">The catch weight series size; optional.</param>
    /// <param name = "_inventUnitId">The unit ID; optional.</param>
    public void new(
        Qty                    _seriesSize,
        BOMMeasureHeight       _height,
        BOMMeasureWidth        _width,
        BOMMeasureDepth        _depth,
        BOMMeasureDensity      _density,
        PdsCWInventQty         _pdsCWSeriesSize = 0,
        InventUnitId           _inventUnitId = '')
    {
        seriesSize         = _seriesSize;
        height             = _height;
        width              = _width;
        depth              = _depth;
        density            = _density;
        pdsCWSeriesSize    = _pdsCWSeriesSize;
        inventUnitId       = _inventUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWSeriesSize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the CW series size.
    /// </summary>
    /// <returns>
    /// The CW series size.
    /// </returns>
    public pdsCWInventQty pdsCWSeriesSize()
    {
        return pdsCWSeriesSize;
    }

]]></Source>
			</Method>
			<Method>
				<Name>seriesSize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the series size.
    /// </summary>
    /// <returns>
    /// The series size.
    /// </returns>
    Qty  seriesSize()
    {
        return seriesSize;
    }

]]></Source>
			</Method>
			<Method>
				<Name>width</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the width.
    /// </summary>
    /// <returns>
    /// The width.
    /// </returns>
    BOMMeasureWidth  width()
    {
        return width;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>BOMCalcData</c> class from a specified item.
    /// </summary>
    /// <param name = "seriesSize">The series size.</param>
    /// <param name = "inventTable">The record for the item.</param>
    /// <returns></returns>
    public static BOMCalcData newInventTable(
        Qty           seriesSize,
        InventTable   inventTable)
    {
        if (! inventTable.checkValid(inventTable.itemId))
            throw error("@SYS19457");

        return new BOMCalcData(
                        seriesSize,
                        inventTable.height,
                        inventTable.width,
                        inventTable.depth,
                        inventTable.density,
                        0,
                        inventTable.inventUnitId()
                        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProdTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>BOMCalcData</c> class from a specified production order.
    /// </summary>
    /// <param name = "seriesSize">The series size.</param>
    /// <param name = "prodTable">The production order record.</param>
    /// <param name = "_pdsCWSeriesSize">The catch weight series size; optional.</param>
    /// <returns></returns>
    public static BOMCalcData  newProdTable(
        Qty            seriesSize,
        ProdTable      prodTable,
        PdsCWInventQty _pdsCWSeriesSize = 0)
    {
        return new BOMCalcData(seriesSize,
                                 prodTable.height,
                                 prodTable.width,
                                 prodTable.depth,
                                 prodTable.density,
                                 _pdsCWSeriesSize,
                                 prodTable.inventUnitId()
                                );
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProdTableUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>BOMCalcData</c> class from a specified production order and unit ID.
    /// </summary>
    /// <param name = "_seriesSize">The series size.</param>
    /// <param name = "_prodTable">The production order record.</param>
    /// <param name = "_unitId">The unit used to convert the series size.</param>
    /// <returns>A new instance of the <c>BOMCalcData</c> class from a specified production order and unit ID.</returns>
    public static BOMCalcData newProdTableUnitId(
        Qty					_seriesSize,
        ProdTable			_prodTable,
		UnitofMeasureSymbol	_unitId)
    {
        return new BOMCalcData(_seriesSize,
                                _prodTable.height,
                                _prodTable.width,
                                _prodTable.depth,
                                _prodTable.density,
								0,
                                _unitId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the inventory unit ID.
    /// </summary>
    /// <returns>
    /// The unit ID.
    /// </returns>
    InventUnitId inventUnitId()
    {
        return inventUnitId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
