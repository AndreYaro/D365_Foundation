<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollPayStatementDeleteSelectedRecords</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PayrollPayStatementDeleteSelectedRecords</c> class is used to delete a set of selected records.
/// </summary>
class PayrollPayStatementDeleteSelectedRecords extends RunBase
{
    MultiSelectionContext   multiSelectionContext;
    PayrollPayStatement     record;
    boolean                 showConfirmation;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiSelectionContext</Name>
				<Source><![CDATA[
    public MultiSelectionContext parmMultiSelectionContext(MultiSelectionContext _multiSelectionContext = multiSelectionContext)
    {
        multiSelectionContext = _multiSelectionContext;
        return multiSelectionContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecord</Name>
				<Source><![CDATA[
    public Common parmRecord(Common _record = record)
    {
        record = _record;
        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowConfirmation</Name>
				<Source><![CDATA[
    public boolean parmShowConfirmation(boolean _showConfirmation = showConfirmation)
    {
        showConfirmation = _showConfirmation;
        return showConfirmation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the selected records.
    /// </summary>
    public void run()
    {
        PayrollPayStatement  multiSelectionRecord;
        boolean              isMultiSelection;
        SecurityRights       securityRights = SecurityRights::construct();
        str                  msg;
        boolean              errorMessageAlreadyRaised = false;
        boolean              confirmationResult = false;
        boolean              confirmationRaised = false;

        if (multiSelectionContext)
        {
            multiSelectionRecord = multiSelectionContext.getFirst();

            if (multiSelectionRecord)
            {
                msg = "@Payroll:AreYouSureYouWantToDeleteAllMarkedRecords";

                isMultiSelection = true;

                if (securityRights.tableAccessRight(tableId2name(multiSelectionRecord.TableId), multiSelectionRecord) == AccessRight::Delete)
                {
                    ttsbegin;
                    while (multiSelectionRecord)
                    {
                        multiSelectionRecord.selectForUpdate(true);

                        if (multiSelectionRecord.validateDelete())
                        {
                            if (showConfirmation)
                            {
                                if (!confirmationRaised)
                                {
                                    confirmationResult = Box::confirm(msg, "@SYS311259");
                                }
                                // Confirmation dialog already raised.
                                confirmationRaised = true;
                            }
                            else
                            {
                                // No confirmation dialog raised.
                                confirmationResult = true;
                            }

                            if (confirmationResult)
                            {
                                multiSelectionRecord.delete();
                            }
                        }
                        else if (!errorMessageAlreadyRaised)
                        {
                            info("@SYS4090122");
                            // we do not want to raise the message again.
                            errorMessageAlreadyRaised = true;
                        }

                        multiSelectionRecord = multiSelectionContext.getNext();
                    }
                    ttscommit;
                }
            }
        }

        if (!isMultiSelection && record)
        {
            msg = strFmt("@Payroll:YouAreAboutToDeleteARecordIn1DeleteRecord", tableId2pname(record.TableId));

            if (securityRights.tableAccessRight(tableId2name(record.TableId), record) == AccessRight::Delete)
            {
                ttsbegin;
                record.selectForUpdate(true);
                if (record.validateDelete())
                {
                    if (showConfirmation)
                    {
                        confirmationResult = Box::confirm(msg, "@SYS311259");
                    }
                    else
                    {
                        // No confirmation dialog raised.
                        confirmationResult = true;
                    }

                    if (confirmationResult)
                    {
                        record.delete();
                    }
                }
                else
                {
                    info("@SYS4090122");
                }
                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor to return a new default <c>PayrollPayStatementDeleteSelectedRecords</c>
    /// </summary>
    /// <returns>New instance of PayrollDeleteSelectedRecords</returns>
    static public PayrollPayStatementDeleteSelectedRecords construct()
    {
        PayrollPayStatementDeleteSelectedRecords payrollPayStatementDeleteSelectedRecords = new PayrollPayStatementDeleteSelectedRecords();
        payrollPayStatementDeleteSelectedRecords.parmShowConfirmation(true);

        return payrollPayStatementDeleteSelectedRecords;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the selected records in the <c>MultiSelectionContext</c> object.
    /// </summary>
    /// <param name="_args">
    ///    An argument that specifies the records to delete.
    /// </param>
    /// <param name="_showConfirmation">
    ///    Indicates whehter the confirmation message should be raised or not.
    /// </param>
    static public void main(Args _args, boolean _showConfirmation = true)
    {
        PayrollPayStatementDeleteSelectedRecords payrollDeleteSelectedRecords = PayrollPayStatementDeleteSelectedRecords::construct();
        payrollDeleteSelectedRecords.parmShowConfirmation(_showConfirmation);

        payrollDeleteSelectedRecords.parmMultiSelectionContext(_args.multiSelectionContext());
        payrollDeleteSelectedRecords.parmRecord(_args.record());
        payrollDeleteSelectedRecords.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>