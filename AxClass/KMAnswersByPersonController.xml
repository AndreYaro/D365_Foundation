<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KMAnswersByPersonController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>KMAnswersByPersonController</c> class is the controller class for the
///    <c>KMAnswersByPerson</c> report.
/// </summary>
class KMAnswersByPersonController extends SrsReportRunController implements BatchRetryable
{
    boolean parameterFlag;

    #define.parameterFlag('Flag')
    #define.parameterResultGroup('ResultGroup')
    #define.parameterAnswer('Answer')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getUIBuilderForDataContractInfo</Name>
				<Source><![CDATA[
    /// <summary>
    ///  internal use only.
    /// </summary>
    /// <param name="contractInfo">
    /// An instance of the <c>SysOperationDataContractInfo</c> class.
    /// </param>
    /// <returns>
    /// An instance of the <c>SysOperationUIBuilder</c> class.
    /// </returns>
    protected SysOperationUIBuilder getUIBuilderForDataContractInfo(SysOperationDataContractInfo contractInfo)
    {
        SysOperationUIBuilder ret;

        if (contractInfo is SrsReportRdlDataContractInfo)
        {
            ret = new KMAnswersByPersonUIBuilder(dialog, this, contractInfo.key());
        }
        else
        {
            ret = super(contractInfo);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the ability to modify the report contract before a dialog box is shown to the user.
    /// </summary>
    /// <remarks>
    /// Use this method to change the report contract.This method is called only during interactive
    /// scenario, before the UI is rendered to the user.For batch scenario, this method is not called
    /// because there is no user interaction and contract values are already saved in batch.Do not
    /// instantiate any instance variables in this code if they are used during the lifetime of controller.
    /// These will fail in batch cases.
    /// </remarks>
    public void prePromptModifyContract()
    {
        KMCollectionAnswerStatus    answerStatus;
        SrsReportRdlDataContract    contract = this.parmReportContract().parmRdlContract();

        if (this.parmArgs())
        {
            answerStatus = this.parmArgs().parmEnum();
            //Update the join mode if it is planned answer session
            if (answerStatus == KMCollectionAnswerStatus::Planned)
            {
                parameterFlag = true;
            }
            else if (answerStatus == KMCollectionAnswerStatus::Completed)
            {
                parameterFlag = false;
            }

            this.parmReportContract().parmRdlContract().setValue(#parameterFlag, parameterFlag);

            if (parameterFlag)
            {
                contract.getParameter(#parameterResultGroup).hidden(true);
                contract.getParameter(#parameterAnswer).hidden(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes the report contract before the report is ran.
    /// </summary>
    public void preRunModifyContract()
    {
        Query query = this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey());

        this.setRanges(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRanges</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the report query ranges.
    /// </summary>
    /// <param name="_query">
    ///    Gets or sets the query object.
    /// </param>
    /// <remarks>
    ///    Sets the ranges to query.
    /// </remarks>
    public void setRanges(Query _query)
    {
        QueryBuildRange             rangeStatus;
        KMCollectionAnswerStatus    answerStatus;
        SrsReportRdlDataContract    contract = this.parmReportContract().parmRdlContract();
        HcmPersonRecId              person;

        //Proceed with the following implementation if args are passed.
        if (this.parmArgs())
        {
            // Only apply Name filter if a value exists in Name parameter
            if (contract.getValue('Name'))
            {
                person = str2int64(contract.getValue('Name'));
                if (person)
                {
                    SysQuery::findOrCreateRange(_query.dataSourceTable(tablenum(DirPerson)), fieldNum(DirPerson, recId)).value(queryValue(person));
                }
            }

            //Set the status range value based on the args.
            rangeStatus = _query.dataSourceTable(tablenum(KMVirtualNetworkAnswerTable)).findRange(
                                            fieldnum(KMVirtualNetworkAnswerTable, Status));
            rangeStatus.value(queryValue(this.parmArgs().parmEnum()));
            answerStatus = this.parmArgs().parmEnum();

            //Update the join mode if it is planned answer session
            if (answerStatus == KMCollectionAnswerStatus::Planned)
            {
                _query.dataSourceTable(tablenum(KMVirtualNetworkAnswerLine)).joinMode(JoinMode::NoExistsJoin);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        KMAnswersByPersonController controller  = new KMAnswersByPersonController();
        controller.parmReportName(ssrsReportStr(KMAnswersByPerson, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>