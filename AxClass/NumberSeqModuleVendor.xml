<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleVendor</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class NumberSeqModuleVendor extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Configures all the data types that are being used by the module.
    /// </summary>

    /*
    Detailed description of how to setup references for number sequences can
    be found in method loadModule() on the 'father' class: NumberSeqApplicationModule.
    */
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        /* Setup Vendors numbers */

        datatype.parmDatatypeId(extendedTypeNum(VendAccount));
        datatype.parmConfigurationKeyId(configurationKeyNum(ledgerBasic));
        datatype.parmReferenceHelp(literalStr("@SYS53981"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(OneTimeSupplierAccount));
        datatype.parmConfigurationKeyId(configurationKeyNum(ledgerBasic));
        datatype.parmReferenceHelp(literalStr("@SYS53982"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup tax1099 number */

        datatype.parmDatatypeId(extendedTypeNum(Tax1099Num));
        datatype.parmReferenceHelp(literalStr("@SYS53936"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(3);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup posting numbers */

        datatype.parmDatatypeId(extendedTypeNum(VendPromissoryNoteID));
        datatype.parmReferenceHelp(literalStr("@SYS71454"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(4);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup voucher numbers */

        datatype.parmDatatypeId(extendedTypeNum(VendExchAdjVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS54013"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(130000000);
        datatype.parmWizardHighest(139999999);
        datatype.parmSortField(5);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(VendPaymVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53985"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(140000000);
        datatype.parmWizardHighest(149999999);
        datatype.parmSortField(6);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(VendCloseVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS54012"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(150000000);
        datatype.parmWizardHighest(159999999);
        datatype.parmSortField(7);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // remittance file numbering
        datatype.parmDatatypeId(extendedTypeNum(BankRemittanceFileIdVend));
        datatype.parmReferenceHelp(literalStr("@SYS73398"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(8);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // NumberSequences moved to Vendor module:
        // PurchInternalPackingSlipId, PurchInternalInvoiceId, PurchInternalCreditNoteId, PurchPackingSlipVoucher
        // PurchInvoiceVoucher, PurchaseOrderVoucher, PurchCreditNoteVoucher, PurchMarkupVoucher

        datatype.parmDatatypeId(extendedTypeNum(PurchInternalPackingSlipId));
        datatype.parmReferenceHelp(literalStr("@SYS333390"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(9);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchInternalInvoiceId));
        datatype.parmReferenceHelp(literalStr("@SYS53894"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(10);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchInternalCreditNoteId));
        datatype.parmReferenceHelp(literalStr("@SYS53897"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(11);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup voucher numbers

        datatype.parmDatatypeId(extendedTypeNum(PurchPackingSlipVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53963"));
        datatype.parmDatatypeSameAsId(extendedTypeNum(PurchInternalPackingSlipId));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(100000000);
        datatype.parmWizardHighest(109999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(12);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchInvoiceVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53962"));
        datatype.parmDatatypeSameAsId(extendedTypeNum(PurchInternalInvoiceId));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(110000000);
        datatype.parmWizardHighest(119999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(13);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        //Voucher for posting purchase order
        datatype.parmDatatypeId(extendedTypeNum(PurchaseOrderVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS135205"));

        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(110000000);
        datatype.parmWizardHighest(119999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(14);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchCreditNoteVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53961"));
        datatype.parmDatatypeSameAsId(extendedTypeNum(PurchInternalCreditNoteId));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(120000000);
        datatype.parmWizardHighest(129999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(15);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchMarkupVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS83325"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(130000000);
        datatype.parmWizardHighest(139999999);
        datatype.parmSortField(16);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchAdvanceVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS318454"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(140000);
        datatype.parmWizardHighest(149999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(17);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchAdvanceApplicationVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS318455"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(150000);
        datatype.parmWizardHighest(159999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(18);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(TaxWithholdSlipNum_TH));
        datatype.parmReferenceHelp(literalStr("@SYS320736"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(19);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // <GTH>
        datatype.parmDatatypeId(extendedTypeNum(TaxWithholdPND53Number));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Unique key for withholding tax PND 53 number.
        datatype.parmReferenceHelp(literalStr("@SYS4082545"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(TaxWithholdPND3Number));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Unique key for withholding tax PND 3 number.
        datatype.parmReferenceHelp(literalStr("@SYS4082547"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(21);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Reversal journal number
        datatype.parmDatatypeId(extendedTypeNum(VendUnrealizedRevId));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Select the number sequence to associate with the vendor unrealized tax reversal journal.
        datatype.parmReferenceHelp(literalStr("@SYS4082874"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(22);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GTH>

        // <GJP>
        // Consolidation Id
        datatype.parmDatatypeId(extendedTypeNum(VendConsId_JP));
        datatype.parmReferenceHelp(literalStr("@GLS62930"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GJP>
        // <GIN>
        //Goods receipt note
        datatype.parmDatatypeId(extendedTypeNum(GoodsReceiptNote_IN));
        datatype.parmReferenceHelp(literalStr("@GLS5571"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(17);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GIN>
        // <GEERU>
        // Number sequence for purch book
        datatype.parmDatatypeId(extendedTypeNum(PurchBookId_RU));
        datatype.parmReferenceLabel(literalStr("@GLS101149"));
        datatype.parmReferenceHelp(literalStr("@GLS101219"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(17);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchBookVATProcessVoucher_RU));
        datatype.parmReferenceHelp(literalStr("@GLS101191"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(570000000);
        datatype.parmWizardHighest(579999999);
        datatype.parmSortField(18);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Unique key for invoice number of amountdiff
        datatype.parmDatatypeId(extendedTypeNum(VendAmountDiffFactureId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS101281"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(19);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Number reference for payment orders
        datatype.parmDatatypeId(extendedTypeNum(BankPaymentOrder_Vend_RU));
        datatype.parmReferenceHelp(literalStr("@GLS101370"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Number reference for payment orders in currency
        datatype.parmDatatypeId(extendedTypeNum(BankPaymentOrderCur_Vend_RU));
        datatype.parmReferenceHelp(literalStr("@GLS102276"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(21);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // RTax25 Bad debts amortisation
        datatype.parmDatatypeId(extendedTypeNum(RTax25DebtCreditVoucher));
        datatype.parmReferenceLabel(literalStr("@GLS104209"));
        datatype.parmReferenceHelp(literalStr("@GLS104236"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(580000000);
        datatype.parmWizardHighest(589999999);
        datatype.parmSortField(22);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Facture
        datatype.parmDatatypeId(extendedTypeNum(VendFactureId_RU));
        datatype.parmReferenceLabel(literalStr("@GLS106861"));
        datatype.parmReferenceHelp(literalStr("@GLS104536"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(23);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        //Invoice for payment
        datatype.parmDatatypeId(extendedTypeNum(PurchInternalInvoice4PaymId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS106712"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(24);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchCorrectInvoiceVoucher_RU));
        datatype.parmReferenceHelp(literalStr("@GLS111937"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(140000000);
        datatype.parmWizardHighest(149999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(25);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchCorrectCreditNoteVoucher_RU));
        datatype.parmReferenceHelp(literalStr("@GLS111938"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(150000000);
        datatype.parmWizardHighest(159999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(26);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // CostAllocationParmId_RU
        datatype.parmDatatypeId(extendedTypeNum(CostAllocationParmId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS114547"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(27);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(VendExternalInvoiceId_RU));
        datatype.parmReferenceLabel(literalStr("@GLS114548"));
        datatype.parmReferenceHelp(literalStr("@GLS114549"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(28);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(VendInvoice4PaymId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS114550"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(29);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(InventBaileeReceiptReportId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS115613"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(30);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GEERU>

        // <GEEU>
        // Advance invoices
        datatype.parmDatatypeId(extendedTypeNum(CzVendAdvanceInvoiceId));
        datatype.parmReferenceHelp(literalStr("@GLS107931"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(31);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Corrective note
        datatype.parmDatatypeId(extendedTypeNum(PlCorrNoteId));
        datatype.parmReferenceHelp(literalStr("@GLS110043"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(32);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GEEU>

        // Setup Mandat numbers
        datatype.parmDatatypeId(extendedTypeNum(VendDirectiveId_PSN));
        datatype.parmReferenceLabel(literalStr("@GLS223194"));
        datatype.parmReferenceHelp(literalStr("@GLS223206"));
        datatype.parmConfigurationKeyId(configurationKeyNum(PublicSector));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(1);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        datatype.addParameterType(NumberSeqParameterType::FiscalCalendarPeriod, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(VendRoutingSlipId_PSN));
        datatype.parmReferenceLabel(literalStr("@GLS223208"));
        datatype.parmReferenceHelp(literalStr("@GLS223138"));
        datatype.parmConfigurationKeyId(configurationKeyNum(PublicSector));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(1);
        datatype.parmSortField(21);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        datatype.addParameterType(NumberSeqParameterType::FiscalCalendarPeriod, true, false);
        this.create(datatype);

        // <GEERU>
        datatype.parmDatatypeId(extendedTypeNum(PurchRevisionInternalInvoiceId_RU));
        datatype.parmReferenceHelp(literalStr("@SYS4081863"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(34);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GEERU>

        // Setup product receipt finalization voucher
        datatype.parmDatatypeId(extendedTypeNum(ProductReceiptFinalizationVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS4001134"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(35);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup royalty contract
        datatype.parmDatatypeId(extendedTypeNum(MCRRoyaltyContractCode));
        datatype.parmConfigurationKeyId(configurationKeyNum(MCRRoyalty));
        datatype.parmReferenceHelp(literalStr("@MCR34839"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(21);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup royalty code
        datatype.parmDatatypeId(extendedTypeNum(MCRRoyaltyCode));
        datatype.parmConfigurationKeyId(configurationKeyNum(MCRRoyalty));
        datatype.parmReferenceHelp(literalStr("@MCR34341"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(22);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup royalty claim
        datatype.parmDatatypeId(extendedTypeNum(MCRRoyaltyClaimId));
        datatype.parmConfigurationKeyId(configurationKeyNum(MCRRoyalty));
        datatype.parmReferenceHelp(literalStr("@MCR34502"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(23);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup royalty invoice ID
        datatype.parmDatatypeId(extendedTypeNum(MCRRoyaltyVendInvoiceId));
        datatype.parmConfigurationKeyId(configurationKeyNum(TradeBroker));
        datatype.parmReferenceHelp(literalStr("@MCR4410250"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(26);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Broker claim approval vendor invoice ID
        datatype.parmDatatypeId(extendedTypeNum(MCRBrokerClaimInvoice));
        datatype.parmConfigurationKeyId(configurationKeyNum(TradeBroker));
        datatype.parmReferenceHelp(literalStr("@MCR34344"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(36);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Broker approved claims ID
        datatype.parmDatatypeId(extendedTypeNum(MCRBrokerClaimID));
        datatype.parmConfigurationKeyId(configurationKeyNum(TradeBroker));
        datatype.parmReferenceHelp(literalStr("@SYP4881980"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(36);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(VendOverdueVATJournalId_W));
        datatype.parmReferenceLabel(literalStr("@SYS4003605"));
        datatype.parmReferenceHelp(literalStr("@SYS4003606"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(36);
    
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    
        datatype.parmDatatypeId(extendedTypeNum(VendOverdueVATVoucher_W));
        datatype.parmReferenceLabel(literalStr("@SYS4003535"));
        datatype.parmReferenceHelp(literalStr("@SYS4003607"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(37);
    
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    
        datatype.parmDatatypeId(extendedTypeNum(VendOverdueCITPITJournalId_W));
        datatype.parmReferenceLabel(literalStr("@SYS4003968"));
        datatype.parmReferenceHelp(literalStr("@SYS4003969"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(38);
    
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // <GMY>
        // Purchase debit note
        datatype.parmDatatypeId(extendedTypeNum(PurchDebitNoteId_MY));
        datatype.parmReferenceHelp(literalStr("@SYP4860856"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(39);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Purchase debit note voucher
        datatype.parmDatatypeId(extendedTypeNum(PurchDebitNoteVoucher_MY));
        datatype.parmDatatypeSameAsId(extendedTypeNum(PurchDebitNoteId_MY));
        datatype.parmReferenceHelp(literalStr("@SYP4860857"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(160000000);
        datatype.parmWizardHighest(169999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(40);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GMY>

        // Setup consignment product receipt voucher

        datatype.parmDatatypeId(extendedTypeNum(ConsignmentInternalProductReceiptNumber));
        datatype.parmReferenceHelp(literalStr("@SYS333390"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(41);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(ConsignmentProductReceiptVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53963"));
        datatype.parmDatatypeSameAsId(extendedTypeNum(ConsignmentInternalProductReceiptNumber));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(170000000);
        datatype.parmWizardHighest(179999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(42);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Electronic Payment reference
        datatype.parmDatatypeId(extendedTypeNum(VendorElectronicPaymentReference));
        datatype.parmReferenceLabel('@AccountsPayable:VendElectronicPaymentNumber');
        datatype.parmReferenceHelp(literalStr('@AccountsPayable:VendElectronicPaymentNumberHelpText'));
        datatype.parmWizardIsContinuous(true);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999999);
        datatype.parmSortField(41);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(TaxWithholdVendorRelatedVoucher_IN));
        datatype.parmReferenceLabel(literalStr("@TaxWithholdLiabilityOnPayment:TaxWithholdRelatedVoucher"));
        datatype.parmReferenceHelp(literalStr("@TaxWithholdLiabilityOnPayment:TaxWithholdRelatedVoucherHelpText"));
        datatype.parmWizardIsContinuous(true);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(43);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(VendRecurrenceInvoiceId));
        datatype.parmConfigurationKeyId(configurationKeyNum(ledgerBasic));
        datatype.parmReferenceHelp(literalStr("@SYS318923"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(44);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the application-specific module for this class.
    /// </summary>
    /// <returns>
    ///    The module-specific ID.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Vend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleVendor), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>