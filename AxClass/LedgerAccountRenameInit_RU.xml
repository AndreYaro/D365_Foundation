<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAccountRenameInit_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerAccountRenameInit_RU extends RunBase
{
    QueryRun        queryRun;
    Object          caller;

    boolean         dummy;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        dummy
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        Query       query = new Query();

        super();

        findOrCreateRange_W(
            query.addDataSource(tableNum(MainAccount)),
            fieldNum(MainAccount, LedgerChartOfAccounts),
            queryValue(Ledger::chartOfAccounts())).status(RangeStatus::Locked);

        queryRun = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        MainAccount                 mainAccount;
        LedgerAccountRenameTable_RU accountRename;

        delete_from accountRename;

        ttsbegin;

        while (queryRun.next())
        {
            mainAccount = queryRun.get(tableNum(MainAccount));
            accountRename.FromAccount       = mainAccount.MainAccountId;
            accountRename.ChartOfAccounts   = mainAccount.LedgerChartOfAccounts;
            accountRename.doInsert();
        }

        ttscommit;

        caller.refreshFormDatesoure();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCallerForm</Name>
				<Source><![CDATA[
    private void setCallerForm(Args _args)
    {
        caller  =   _args.caller();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer     version     = conPeek(_packedClass, 1);

        switch (version)
        {
            case #CurrentVersion  :
                [version, #CurrentList] = _packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@GLS103628";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        LedgerAccountRenameInit_RU  ledgerInitialize;
        ;

        if (!_args || _args.dataset() != tableNum(LedgerAccountRenameTable_RU))
            throw error("@SYS59121");

        ledgerInitialize = new LedgerAccountRenameInit_RU();

        ledgerInitialize.setCallerForm(_args);

        if (ledgerInitialize.prompt())
        {
            ledgerInitialize.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>