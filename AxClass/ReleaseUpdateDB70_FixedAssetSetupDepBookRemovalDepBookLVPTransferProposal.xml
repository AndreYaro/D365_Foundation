<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBookLVPTransferProposal</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrades data from <c>AssetDepBookLVPTransferProposal_AU</c> to <c>AssetLVPTransferProposal_AU</c> table.
/// </summary>
class ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBookLVPTransferProposal extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncUpgradeAssetDepBookLVPTransferProposalAU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Move <c>AssetDepBookLVPTransferProposal_AU</c> data into a temporary table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBook), methodStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBook, preSyncUpgradeAssetDepBook)),
     UpgradeScriptTableAttribute('AssetDepBookLVPTransferProposal_AU', false, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpgradeAssetDepBookLVPTransferProposalAU()
    {
        // Drop the AssetDepBookLVPTransferProposal_AU table if it exists.
        this.executeSqlStatement(this.getSQLDropAssetDepBookLVPTransferProposalAUUpgradeTmp());

        // Create temp upgrade table.
        this.executeSqlStatement(this.getSQLCreateAssetDepBookLVPTransferProposalAUUpgradeTmp());

        // Move AssetDepBookLVPTransferProposal_AU rows to temp table.
        this.executeSqlStatement(this.getSQLInsertAssetDepBookLVPTransferProposalAUUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpgradeAssetDepBookLVPTransferProposalAU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the <c>AssetDepBookLVPTransferProposal_AU</c> data from the temporary table into <c>AssetLVPTransferProposal_AU</c> table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBook), methodStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBook, postSyncUpgradeAssetDepBook)),
     UpgradeScriptTableAttribute(tableStr(AssetLVPTransferProposal_AU), true, true, false, false),
     UpgradeScriptTableAttribute('AssetDepBookLVPTransferProposal_AU', false, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpgradeAssetDepBookLVPTransferProposalAU()
    {
        // Move the data into the AssetLVPTransferProposal_AU from the AssetDepBookLVPTransferProposalUpgradeTmp table
        this.executeSqlStatement(this.getSQLInsertAssetLVPTransferProposalAU());

        // drop temporary upgrade table
        this.executeSqlStatement(this.getSQLDropAssetDepBookLVPTransferProposalAUUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDropAssetDepBookLVPTransferProposalAUUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLDropAssetDepBookLVPTransferProposalAUUpgradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP', 'U') IS NOT NULL
                DROP TABLE ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLCreateAssetDepBookLVPTransferProposalAUUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLCreateAssetDepBookLVPTransferProposalAUUpgradeTmp()
    {
        str sqlStatement = @"
                IF NOT EXISTS(SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID (N'[dbo].[RecIdSequence]') AND TYPE = 'SO')
                    CREATE SEQUENCE [dbo].[RecIdSequence]
                     AS [bigint]
                     START WITH 68719476736
                     INCREMENT BY 1
                     MINVALUE -9223372036854775808
                     MAXVALUE 9223372036854775807
                     CACHE  100000

                IF OBJECT_ID ( 'dbo.ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP', 'U') IS NULL
                BEGIN
                    CREATE TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP](
                        [ALTPROFILEID] [nvarchar](10) NOT NULL,
                        [ASSETID] [nvarchar](20) NOT NULL,
                        [CHECKMAXPERCENTRB_DE] [int] NOT NULL,
                        [DEPRECIATION] [int] NOT NULL,
                        [DEPRECIATIONBOOKID] [nvarchar](10) NOT NULL,
                        [DEPRECIATIONCONVENTION] [int] NOT NULL,
                        [DEPRECIATIONSTARTDATE] [datetime] NOT NULL,
                        [EXTPROFILEID] [nvarchar](10) NOT NULL,
                        [LASTDEPRECIATIONDATE] [datetime] NOT NULL,
                        [LIFETIME] [int] NOT NULL,
                        [LIFETIMEREST] [numeric](32, 6) NOT NULL,
                        [NAME] [nvarchar](30) NOT NULL,
                        [NETBOOKVALUE] [numeric](32, 6) NOT NULL,
                        [PROFILEID] [nvarchar](10) NOT NULL,
                        [SERVICELIFE] [numeric](32, 6) NOT NULL,
                        [SESSIONID] [int] NOT NULL,
                        [STATUS] [int] NOT NULL,
                        [TRANSFERTOPOOL] [int] NOT NULL,
                        [UTCTIMESTAMP] [datetime] NOT NULL,
                        [UTCTIMESTAMPTZID] [int] NOT NULL,
                        [DATAAREAID] [nvarchar](4) NOT NULL,
                        [RECVERSION] [int] NOT NULL,
                        [PARTITION] [bigint] NOT NULL,
                        [RECID] [bigint] NOT NULL,
                     CONSTRAINT [I_7719UPGRADETMPRECID] PRIMARY KEY CLUSTERED
                    (
                        [RECID] ASC
                    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                    ) ON [PRIMARY]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('') FOR [ALTPROFILEID]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('') FOR [ASSETID]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [CHECKMAXPERCENTRB_DE]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [DEPRECIATION]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('') FOR [DEPRECIATIONBOOKID]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [DEPRECIATIONCONVENTION]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('1900-01-01 00:00:00.000') FOR [DEPRECIATIONSTARTDATE]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('') FOR [EXTPROFILEID]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('1900-01-01 00:00:00.000') FOR [LASTDEPRECIATIONDATE]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [LIFETIME]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [LIFETIMEREST]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('') FOR [NAME]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [NETBOOKVALUE]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('') FOR [PROFILEID]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [SERVICELIFE]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [SESSIONID]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [STATUS]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((0)) FOR [TRANSFERTOPOOL]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('1900-01-01 00:00:00.000') FOR [UTCTIMESTAMP]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((37001)) FOR [UTCTIMESTAMPTZID]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ('dat') FOR [DATAAREAID]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((1)) FOR [RECVERSION]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT ((5637144576.)) FOR [PARTITION]

                    ALTER TABLE [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP] ADD  DEFAULT (NEXT VALUE FOR [RecIdSequence]) FOR [RECID]
                END
            ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetDepBookLVPTransferProposalAUUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetDepBookLVPTransferProposalAUUpgradeTmp()
    {
        str sqlStatement = @"
            INSERT INTO [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP]
                       ([ALTPROFILEID]
                       ,[ASSETID]
                       ,[CHECKMAXPERCENTRB_DE]
                       ,[DEPRECIATION]
                       ,[DEPRECIATIONBOOKID]
                       ,[DEPRECIATIONSTARTDATE]
                       ,[EXTPROFILEID]
                       ,[LASTDEPRECIATIONDATE]
                       ,[LIFETIME]
                       ,[LIFETIMEREST]
                       ,[NAME]
                       ,[NETBOOKVALUE]
                       ,[PROFILEID]
                       ,[SERVICELIFE]
                       ,[SESSIONID]
                       ,[STATUS]
                       ,[TRANSFERTOPOOL]
                       ,[UTCTIMESTAMP]
                       ,[UTCTIMESTAMPTZID]
                       ,[DATAAREAID]
                       ,[PARTITION])
                SELECT [ALTPROFILEID]
                      ,[ASSETID]
                      ,[CHECKMAXPERCENTRB_DE]
                      ,[DEPRECIATION]
                      ,[DEPRECIATIONBOOKID]
                      ,[DEPRECIATIONSTARTDATE]
                      ,[EXTPROFILEID]
                      ,[LASTDEPRECIATIONDATE]
                      ,[LIFETIME]
                      ,[LIFETIMEREST]
                      ,[NAME]
                      ,[NETBOOKVALUE]
                      ,[PROFILEID]
                      ,[SERVICELIFE]
                      ,[SESSIONID]
                      ,[STATUS]
                      ,[TRANSFERTOPOOL]
                      ,[UTCTIMESTAMP]
                      ,[UTCTIMESTAMPTZID]
                      ,[DATAAREAID]
                      ,[PARTITION]
                    FROM [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AU]
                    WHERE NOT EXISTS
                        (SELECT RECID FROM [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP]
                        WHERE [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[SESSIONID] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AU].[SESSIONID]
                            AND [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[UTCTIMESTAMP] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AU].[UTCTIMESTAMP]
                            AND [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[ASSETID] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AU].[ASSETID]
                            AND [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[DEPRECIATIONBOOKID] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AU].[DEPRECIATIONBOOKID]
                            AND [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[DATAAREAID] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AU].[DATAAREAID]
                            AND [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[PARTITION] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AU].[PARTITION])

            ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetLVPTransferProposalAU</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetLVPTransferProposalAU()
    {
        str sqlStatement = strFmt(@"
            INSERT INTO [dbo].[ASSETLVPTRANSFERPROPOSAL_AU]
                    ([ALTPROFILEID]
                    ,[ASSETID]
                    ,[BOOKID]
                    ,[CHECKMAXPERCENTRB_DE]
                    ,[CURRENTOPERATIONSTAX]
                    ,[DEPRECIATION]
                    ,[DEPRECIATIONSTARTDATE]
                    ,[LASTDEPRECIATIONDATE]
                    ,[LIFETIME]
                    ,[LIFETIMEREST]
                    ,[NAME]
                    ,[NETBOOKVALUE]
                    ,[PROFILEID]
                    ,[SERVICELIFE]
                    ,[SESSIONID]
                    ,[STATUS]
                    ,[TRANSFERTOPOOL]
                    ,[UTCTIMESTAMP]
                    ,[UTCTIMESTAMPTZID]
                    ,[DATAAREAID]
                    ,[RECVERSION]
                    ,[PARTITION]
                    ,[RECID])
                SELECT
                    [ALTPROFILEID]
                    ,[ASSETID]
                    ,[DEPRECIATIONBOOKID]
                    ,[CHECKMAXPERCENTRB_DE]
                    ,%1
                    ,[DEPRECIATION]
                    ,[DEPRECIATIONSTARTDATE]
                    ,[LASTDEPRECIATIONDATE]
                    ,[LIFETIME]
                    ,[LIFETIMEREST]
                    ,[NAME]
                    ,[NETBOOKVALUE]
                    ,[PROFILEID]
                    ,[SERVICELIFE]
                    ,[SESSIONID]
                    ,[STATUS]
                    ,[TRANSFERTOPOOL]
                    ,[UTCTIMESTAMP]
                    ,[UTCTIMESTAMPTZID]
                    ,[DATAAREAID]
                    ,[RECVERSION]
                    ,[PARTITION]
                    ,[RECID]
                FROM [dbo].[ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP]
                WHERE NOT EXISTS
                    (SELECT RECID FROM [dbo].[ASSETLVPTRANSFERPROPOSAL_AU]
                        WHERE [ASSETLVPTRANSFERPROPOSAL_AU].[SESSIONID] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[SESSIONID]
                            AND [ASSETLVPTRANSFERPROPOSAL_AU].[UTCTIMESTAMP] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[UTCTIMESTAMP]
                            AND [ASSETLVPTRANSFERPROPOSAL_AU].[ASSETID] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[ASSETID]
                            AND [ASSETLVPTRANSFERPROPOSAL_AU].[BOOKID] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[DEPRECIATIONBOOKID]
                            AND [ASSETLVPTRANSFERPROPOSAL_AU].[DATAAREAID] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[DATAAREAID]
                            AND [ASSETLVPTRANSFERPROPOSAL_AU].[PARTITION] = [ASSETDEPBOOKLVPTRANSFERPROPOSAL_AUUPGRADETMP].[PARTITION])",
                enum2int(CurrentOperationsTax::None));

        return sqlStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>