<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchaseAgreementConfirmationReportDefaultCategory</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchaseAgreementConfirmationReportDefaultCategory</c> class represents the default purchase confirmation report.
/// </summary>
[AgreementClassificationCategoryFactoryAttribute(ModuleSalesPurch::Purch, AgreementClassificationCategory::Default)]
class PurchaseAgreementConfirmationReportDefaultCategory extends AgreementConfirmationReportClassificationCategory
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructPrintMgmtReportRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct <c>PrintMgmtReportRun</c> for the <c>AgreementConfirmController</c> class.
    /// </summary>
    /// <returns>An instance of the <c>PrintMgmtReportRun</c> class.</returns>
    public PrintMgmtReportRun constructPrintMgmtReportRun()
    {
        return PrintMgmtReportRun::construct(PrintMgmtHierarchyType::Purch,
                                             PrintMgmtNodeType::PurchAgreement,
                                             PrintMgmtDocumentType::PurchAgreementConfirmation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeRunPrintMgmt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the <c>PrintMgmtReportRun</c> instance for the <c>AgreementConfirmController</c> class.
    /// </summary>
    /// <param name = "_agreementConfirmController">An instance of the <c>AgreementConfirmController</c> class.</param>
    /// <param name = "_printMgmtReportRun">An instance of the <c>PrintMgmtReportRun</c> class.</param>
    /// <param name = "_agreementHeader">An instance of the <c>AgreementHeader</c> record.</param>
    /// <param name = "_agreementHeaderHistory">An instance of the <c>AgreementHeaderHistory</c> record.</param>
    public void initializeRunPrintMgmt(
        AgreementConfirmController  _agreementConfirmController,
        PrintMgmtReportRun          _printMgmtReportRun,
        AgreementHeader             _agreementHeader,
        AgreementHeaderHistory      _agreementHeaderHistory)
    {
        RecId                       dummyRecId = 1;
        PurchAgreementHeader        purchAgreementHeader;
        PurchAgreementHeaderHistory purchAgreementHeaderHistory;
        if (_agreementHeader.RecId)
        {
            purchAgreementHeader = _agreementHeader;
            purchAgreementHeaderHistory.initFromPurchAgreementHeader(purchAgreementHeader);
            purchAgreementHeaderHistory.RecId = dummyRecId;
        }
        else
        {
            purchAgreementHeaderHistory = _agreementHeaderHistory;
            purchAgreementHeader        = PurchAgreementHeader::find(purchAgreementHeaderHistory.AgreementHeader);
        }

        _printMgmtReportRun.load(purchAgreementHeaderHistory, purchAgreementHeader, purchAgreementHeaderHistory.Language);

        _agreementConfirmController.parmReportContract().parmRdlContract().parmLanguageId(purchAgreementHeaderHistory.Language);
        _agreementConfirmController.parmReportContract().parmRdlContract().parmLabelLanguageId(purchAgreementHeaderHistory.Language);
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>AgreementConfirmationRDPContract</c> class from <c>VendFormletterParameters</c> for the <c>AgreementConfirmController</c> class.
    /// </summary>
    /// <param name = "_contract">An instance of the <c>AgreementConfirmationRDPContract</c> class.</param>
    public void preRunModifyContract(AgreementConfirmationRDPContract _contract)
    {
        VendFormletterParameters vendFormletterParameters = VendFormletterParameters::find();
        _contract.parmPrintLevel(vendFormletterParameters.PrePrintLevelPurchAgreement);
        _contract.parmShowDeliveryTerm(vendFormletterParameters.PrintDeliveryTerm);
        _contract.parmShowModeofDelivery(vendFormletterParameters.PrintModeOfDelivery);
        _contract.parmShowPayment(vendFormletterParameters.PrintPayment);
        _contract.parmShowCashDiscount(vendFormletterParameters.PrintCashDiscount);
        _contract.parmShowContractReference(vendFormletterParameters.PrintContractReference);
        _contract.parmShowAgreementClassification(vendFormletterParameters.PrintAgreementClassification);
        _contract.parmShowMaxIsEnforced(vendFormletterParameters.PrintMaxIsEnforced);
        _contract.parmInventoryDimensions(vendFormletterParameters.InventDimPurchaseAgreement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAgreementHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get purchase agreement header and insert values in the <c>AgreementHeaderTmp</c> record for the <c>AgreementConfirmationDP</c> class.
    /// </summary>
    /// <param name = "_agreementConfirmationDP">An instance of the <c>AgreementConfirmationDP</c> class.</param>
    /// <param name = "_agreementHeaderTmpRecord">The <c>AgreementHeaderTmp</c> record for which to insert values.</param>
    /// <param name = "_proforma">A Boolean value that indicates whether the agreement is proforma.</param>
    public void getAgreementHeader(AgreementConfirmationDP _agreementConfirmationDP, AgreementHeaderTmp _agreementHeaderTmpRecord, NoYes _proforma)
    {
        if (_proforma)
        {
            _agreementConfirmationDP.getPurchAgreementHeader(_agreementHeaderTmpRecord);
        }
        else
        {
            _agreementConfirmationDP.getPurchAgreementHeaderHistory(_agreementHeaderTmpRecord);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocuOnFormulaAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set <c>DocuOnFormular</c> and <c>DocuOnFormularTypeId</c> from <c>VendFormletterDocument</c> on the <c>AgreementConfirmationDP</c> class.
    /// </summary>
    /// <param name = "_agreementConfirmationDP">An instance of the <c>AgreementConfirmationDP</c> class.</param>
    public void setDocuOnFormulaAgreement(AgreementConfirmationDP _agreementConfirmationDP)
    {
        VendFormletterDocument vendFormletterDocument = VendFormletterDocument::find();
        _agreementConfirmationDP.parmDocuOnFormularAgreement(vendFormletterDocument.DocuOnAgreement);
        _agreementConfirmationDP.parmDocuOnFormulaTypeAgreement(vendFormletterDocument.DocuTypeAgreement);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>