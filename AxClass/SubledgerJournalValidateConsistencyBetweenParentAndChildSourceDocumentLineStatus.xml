<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJournalValidateConsistencyBetweenParentAndChildSourceDocumentLineStatus</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Validates the consistency in status between parent and child source document lines to make sure we do not have improper state transitions for source document lines.
/// </summary>
[ExportMetadataAttribute(classstr(SubledgerJournalValidateConsistencyBetweenParentAndChildSourceDocumentLineStatus), identifierStr(''))]
[ExportMetadataAttribute(identifierStr('SourceDocumentDataConsistencyValidators'), identifierStr(''))]
[ExportAttribute('Microsoft.Dynamics.AX.Application.SubledgerJournalizerDocumentValidationIProvider')]
internal final class SubledgerJournalValidateConsistencyBetweenParentAndChildSourceDocumentLineStatus implements SubledgerJournalizerDocumentValidationIProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the consistency in status between parent and child source document lines to make sure we do not have improper state transitions for source document lines.
    /// </summary>
    /// <param name = "_accountingEvent">The accounting event for the journalization task using source document accounting processor</param>
    /// <param name = "_voucher">The voucher used for the posting to ledger; if no accounting is generated then this will be blank</param>
    /// <param name = "_sourceDocumentLineSubmittedForProcessing">All the source document lines that are submitted to source document accounting processor</param>
    /// <param name = "_accountingDistributionTmpForValidation">Accounting distribution detail for the document submitted for processing</param>
    /// <param name = "_subledgerJournalAccountEntryTmpForValidation">Detail accounting of the voucher that is getting posted</param>
    [Hookable(false)]
    void validateDocument(
        AccountingEvent _accountingEvent,
        Voucher _voucher,
        SourceDocumentLineRecIdTmp _sourceDocumentLineSubmittedForProcessing,
        AccountingDistributionTmpForValidation _accountingDistributionTmpForValidation,
        SubledgerJournalAccountEntryTmpForValidation _subledgerJournalAccountEntryTmpForValidation)
    {
            using (SysInstrumentationActivityContext activityContext = SourceDocumentAccountingFrameworkInstrumentationLogger::getActivityContext(
                SourceDocumentInstrumentationConstants::SourceDocumentValidationFrameworkNamespace,
                classStr(SubledgerJournalValidateConsistencyBetweenParentAndChildSourceDocumentLineStatus),
                classStr(SubledgerJournalValidateConsistencyBetweenParentAndChildSourceDocumentLineStatus)))
            {
                SourceDocumentLine sourceDocumentLine;

                select firstonly RecId from _sourceDocumentLineSubmittedForProcessing
                    where _sourceDocumentLineSubmittedForProcessing.SourceDocumentHeader == _accountingEvent.SourceDocumentHeader &&
                    _sourceDocumentLineSubmittedForProcessing.ParentSourceDocumentLineRecId != 0
                join sourceDocumentLine
                    where sourceDocumentLine.RecId == _sourceDocumentLineSubmittedForProcessing.ParentSourceDocumentLineRecId &&
                    sourceDocumentLine.AccountingStatus != _sourceDocumentLineSubmittedForProcessing.AccountingStatus;

                if (_sourceDocumentLineSubmittedForProcessing.RecId != 0)
                {
                    //log telemetry that the accounting status for parent and child source document lines are inconsistent.
                    activityContext.addCustomProperty('ValidationResult', 'Fail');

                    activityContext.addCustomProperty(
                        'Message', SourceDocumentInstrumentationConstants::ErrorWhileValidatingConsistencyBetweenParentAndChildSourceDocumentLineStatus);

                    activityContext.addCustomProperty(
                        'SourceDocumentHeader', int642Str(_accountingEvent.SourceDocumentHeader));

                    activityContext.addCustomProperty(
                        'AccountingEvent', int642Str(_accountingEvent.RecId));

                    if (FeatureStateProvider::isFeatureEnabled(EnableSourceDocumentValidationFramework::instance()))
                    {
                        throw error("@SourceDocumentAccountingFramework:ErrorMessageForValidatingConsistencyBetweenParentAndChildSourceDocumentLineStatus");
                    }
                }

            }
        }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>