<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB71_Retail</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReleaseUpdateDB71_Retail</c> class contains upgrade scripts for retail module.
/// </summary>
public class ReleaseUpdateDB71_Retail extends ReleaseUpdateDB
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>moduleName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the module name of an upgrade class.
    /// </summary>
    /// <returns>
    ///    The module name.
    /// </returns>
    /// <remarks>
    ///    This method must be implemented by sub classes.The module name is displayed on the cockpit form for
    ///    every script.
    /// </remarks>
    public ReleaseUpdateModule moduleName()
    {
        return "@RET3014";
    }

]]></Source>
			</Method>
			<Method>
				<Name>myVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the version of script: R1Update3
    /// </summary>
    /// <returns>Script version.</returns>
    public sysReleasedVersion myVersion()
    {
        return sysReleasedVersion::R1Update3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpdateRetailChannelProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>RetailChannelProfile</c> table if the field <c>Name</c> value is the old default (Retail server channel profile).
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@RET5708"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(RetailChannelProfile), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpdateRetailChannelProfile()
    {
        #Retail
        RetailChannelProfile channelProfile;
        ttsbegin;

        update_recordset channelProfile
            setting Name = #NewDefaultRetailChannelProfileName
            where channelProfile.Name == #OldDefaultRetailChannelProfileName
               && channelProfile.ChannelProfileType == RetailChannelProfileType::RetailServer;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpgradeTillLayouts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates all till-layout related data to work with the new schema and data entities.
    /// </summary>
    /// <remarks>This will ensure minor verion upgrades include the changes to the Till Layout.</remarks>
    [UpgradeScriptDescriptionAttribute("@Retail:TillLayoutUpgradeDescription"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(RetailTillLayout), true, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutConfiguration), true, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutZoneReference), false, true, true, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutSize), true, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutStore), false, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailStoreTable), false, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutStaff), false, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailStaffTable), false, true, false, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpgradeTillLayouts()
    {
        RetailTillLayoutUpgrade::UpgradeTillLayout();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncMajorUpgradeTillLayouts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates all till-layout related data to work with the new schema and data entities.
    /// </summary>
    /// <remarks>This will ensure major verion upgrades include the changes to the Till Layout.</remarks>
    [UpgradeScriptDescriptionAttribute("@Retail:TillLayoutUpgradeDescription"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(RetailTillLayout), true, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutConfiguration), true, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutZoneReference), false, true, true, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutSize), true, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutStore), false, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailStoreTable), false, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutStaff), false, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailStaffTable), false, true, false, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncMajorUpgradeTillLayouts()
    {
        RetailTillLayoutUpgrade::UpgradeTillLayout();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscTableMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscTable</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscTable), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscTableMinor()
    {
        this.updatePriceDiscTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscTableMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscTable</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscTable), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscTableMajor()
    {
        this.updatePriceDiscTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscTable</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    private void updatePriceDiscTable()
    {
        str sqlStatement = @"UPDATE PRICEDISCTABLE SET PRICEDISCTABLE.RELATION = 8 WHERE PRICEDISCTABLE.RELATION = 248";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmTransMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTrans</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscAdmTrans), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscAdmTransMinor()
    {
        this.updatePriceDiscAdmTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmTransMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTrans</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscAdmTrans), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscAdmTransMajor()
    {
        this.updatePriceDiscAdmTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTrans</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    private void updatePriceDiscAdmTrans()
    {
        str sqlStatement = @"UPDATE PRICEDISCADMTRANS SET PRICEDISCADMTRANS.RELATION = 8 WHERE PRICEDISCADMTRANS.RELATION = 248";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscAdmTableMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTable</c> table if the field <c>DefaultRelation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscAdmTable), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceDiscAdmTableMinor()
    {
        this.updateMCRPriceDiscAdmTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscAdmTableMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTable</c> table if the field <c>DefaultRelation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscAdmTable), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceDiscAdmTableMajor()
    {
        this.updateMCRPriceDiscAdmTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscAdmTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTable</c> table if the field <c>DefaultRelation</c> value is MCRPostageDiscount.
    /// </summary>
    private void updateMCRPriceDiscAdmTable()
    {
        str sqlStatement = @"UPDATE PRICEDISCADMTABLE set PRICEDISCADMTABLE.DEFAULTRELATION = 8 WHERE PRICEDISCADMTABLE.DEFAULTRELATION = 248";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmNameMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmName</c> table if the field <c>DefaultRelation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscAdmName), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscAdmNameMinor()
    {
        this.updatePriceDiscAdmName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmNameMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmName</c> table if the field <c>DefaultRelation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscAdmName), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscAdmNameMajor()
    {
        this.updatePriceDiscAdmName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmName</c> table if the field <c>DefaultRelation</c> value is MCRPostageDiscount.
    /// </summary>
    private void updatePriceDiscAdmName()
    {
        str sqlStatement = @"UPDATE PRICEDISCADMNAME SET PRICEDISCADMNAME.DEFAULTRELATION = 8 WHERE PRICEDISCADMNAME.DEFAULTRELATION = 248";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmTransferMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTransfer</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscAdmTransfer), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscAdmTransferMinor()
    {
        this.updatePriceDiscAdmTransfer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmTransferMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTransfer</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscAdmTransfer), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscAdmTransferMajor()
    {
        this.updatePriceDiscAdmTransfer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscAdmTransfer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscAdmTransfer</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    private void updatePriceDiscAdmTransfer()
    {
        str sqlStatement = @"UPDATE PRICEDISCADMTRANSFER SET PRICEDISCADMTRANSFER.RELATION = 8 WHERE PRICEDISCADMTRANSFER.RELATION = 248";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceHistoryMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceHistory</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(MCRPriceHistory), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceHistoryMinor()
    {
        this.updateMCRPriceHistory();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceHistoryMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceHistory</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(MCRPriceHistory), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceHistoryMajor()
    {
        this.updateMCRPriceHistory();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceHistory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceHistory</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    private void updateMCRPriceHistory()
    {
        str sqlStatement = @"UPDATE MCRPRICEHISTORY SET MCRPRICEHISTORY.RELATION = 8 WHERE MCRPRICEHISTORY.RELATION = 248";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRetailPricingSimulatorPriceDiscTableMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>RetailPricingSimulatorPriceDiscTable</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@MCR32572"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(RetailPricingSimulatorPriceDiscTable), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateRetailPricingSimulatorPriceDiscTableMinor()
    {
        this.updateRetailPricingSimulatorPriceDiscTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRetailPricingSimulatorPriceDiscTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>RetailPricingSimulatorPriceDiscTable</c> table if the field <c>Relation</c> value is MCRPostageDiscount.
    /// </summary>
    private void updateRetailPricingSimulatorPriceDiscTable()
    {
        str sqlStatement = @"UPDATE RETAILPRICINGSIMULATORPRICEDISCTABLE SET RETAILPRICINGSIMULATORPRICEDISCTABLE.RELATION = 8 WHERE RETAILPRICINGSIMULATORPRICEDISCTABLE.RELATION = 248";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscGroupMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscGroup</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@SYS17713"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscGroup), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscGroupMinor()
    {
        this.updatePriceDiscGroup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscGroupMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscGroup</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@SYS17713"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PriceDiscGroup), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updatePriceDiscGroupMajor()
    {
        this.updatePriceDiscGroup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PriceDiscGroup</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    private void updatePriceDiscGroup()
    {
        str sqlStatement = @"UPDATE PRICEDISCGROUP SET PRICEDISCGROUP.TYPE = 4 WHERE PRICEDISCGROUP.TYPE = 249";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscGroupCustomerMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceDiscGroupCustomer</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@SYS17713"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(MCRPriceDiscGroupCustomer), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceDiscGroupCustomerMinor()
    {
        this.updateMCRPriceDiscGroupCustomer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscGroupCustomerMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceDiscGroupCustomer</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@SYS17713"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(MCRPriceDiscGroupCustomer), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceDiscGroupCustomerMajor()
    {
        this.updateMCRPriceDiscGroupCustomer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscGroupCustomer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceDiscGroupCustomer</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    private void updateMCRPriceDiscGroupCustomer()
    {
        str sqlStatement = @"UPDATE MCRPRICEDISCGROUPCUSTOMER SET MCRPRICEDISCGROUPCUSTOMER.TYPE = 4 WHERE MCRPRICEDISCGROUPCUSTOMER.TYPE = 249";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscGroupItemMinor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceDiscGroupItem</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@SYS17713"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(MCRPriceDiscGroupItem), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceDiscGroupItemMinor()
    {
        this.updateMCRPriceDiscGroupItem();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscGroupItemMajor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceDiscGroupItem</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@SYS17713"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(MCRPriceDiscGroupItem), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceDiscGroupItemMajor()
    {
        this.updateMCRPriceDiscGroupItem();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMCRPriceDiscGroupItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>MCRPriceDiscGroupItem</c> table if the field <c>Type</c> value is MCRPostageDisc.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateMCRPriceDiscGroupItem()
    {
        str sqlStatement = @"UPDATE MCRPRICEDISCGROUPITEM SET MCRPRICEDISCGROUPITEM.TYPE = 4 WHERE MCRPRICEDISCGROUPITEM.TYPE = 249";        

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncUpdateRetailTillLayoutZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ignores the index <c>LayoutZoneIdx</c> in the table <c>RetailTillLayoutZone</c> to allow duplicate records until the upgrade is complete.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@REX4160664"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::StartScript),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutZone), false, false, false, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpdateRetailTillLayoutZone()
    {
        this.disableUniqueIndex(tableNum(RetailTillLayoutZone), indexNum(RetailTillLayoutZone, LayoutZoneIdx));
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncMajorRetailTillLayoutZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ignores the index <c>LayoutZoneIdx</c> in the table <c>RetailTillLayoutZone</c> to allow duplicate records until the upgrade is complete.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@REX4160664"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::StartScript),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutZone), false, false, false, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncMajorRetailTillLayoutZone()
    {
        this.disableUniqueIndex(tableNum(RetailTillLayoutZone), indexNum(RetailTillLayoutZone, LayoutZoneIdx));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpdateRetailTillLayoutZone</Name>
				<Source><![CDATA[
    [UpgradeScriptDescriptionAttribute("@REX4160663"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutZoneReference), false, true, true, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutZone), false, true, true, true), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpdateRetailTillLayoutZone()
    {
        this.updateRetailTillLayoutZoneTableForNewIndex();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncMajorRetailTillLayoutZone</Name>
				<Source><![CDATA[
    [UpgradeScriptDescriptionAttribute("@REX4160663"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutZoneReference), false, true, true, false),
    UpgradeScriptTableAttribute(tableStr(RetailTillLayoutZone), false, true, true, true), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncMajorRetailTillLayoutZone()
    {
        this.updateRetailTillLayoutZoneTableForNewIndex();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpdateRetailStoreHardwareStation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>RetailStoreHardwareStationTable</c> table on environments deployed with demo data.
    /// No-op for environemnts deployed without demo data.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@Retail:RetailHardwareStationLabel"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(RetailStoreHardwareStationTable), false, true, false, false),
    UpgradeScriptTableAttribute(tableStr(RetailHardwareStation), false, true, false, true), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpdateRetailStoreHardwareStation()
    {
        RetailHardwareStation retailHardwareStationProfile;
        RetailStoreHardwareStationTable retailStoreHardwareStation;

        ttsbegin;

        update_recordset retailStoreHardwareStation
        setting
            HardwareProfileId = retailHardwareStationProfile.HardwareProfileId,
            Port = retailHardwareStationProfile.HardwareStationPortNumber
            join retailHardwareStationProfile
            where retailHardwareStationProfile.HardwareStationId == retailStoreHardwareStation.HardwareStationId;

        //Fill the empty host names with generated unique values
        while select forupdate HostName from retailStoreHardwareStation
                where (!retailStoreHardwareStation.HostName || retailStoreHardwareStation.HostName == '' )
        {
            str guidStr = guid2Str(newGuid());

            //remove the brackets from the generated GUID
            if (subStr(guidStr, 1, 1) == '{') 
            {
                guidStr = subStr(guidStr, 2, strLen(guidStr) - 2);
            }

            retailStoreHardwareStation.HostName = 'UPGRADE-' + guidStr;
            retailStoreHardwareStation.doUpdate();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncTruncateStagingTables</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the staging tables.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@Retail:PreSyncTruncateStagingTables"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(RetailChannelStaging), false, false, false, true),
    UpgradeScriptTableAttribute(tableStr(RetailCategoryPriceRuleStaging), false, false, false, true),
    UpgradeScriptTableAttribute(tableStr(RetailKitOrderJournalStaging), false, false, false, true), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncTruncateStagingTables()
    {
        RetailChannelStaging channelStaging;
        delete_from channelStaging;

        RetailCategoryPriceRuleStaging categoryPriceRuleStaging;
        delete_from categoryPriceRuleStaging;

        RetailKitOrderJournalStaging kitOrderJournalStaging;
        delete_from kitOrderJournalStaging;
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableUniqueIndex</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables the specified unique index on the specified table.
    /// </summary>
    /// <remarks>
    ///  This local implementaiton is provided until this class can access the verion in <c>ReleaseUpdateDB_Extension</c>.
    /// </remarks>
    /// <param name = "_table">The table that owns the index to disable.</param>
    /// <param name = "_index">The index to disable.</param>
    private void disableUniqueIndex(TableId _table, IndexId _index)
    {
        ReleaseUpdateDBSyncManager manager = ReleaseUpdateDBSyncManager::Construct();
        DictTable table = new DictTable(_table);
        DictIndex idx = new DictIndex(_table, _index);
        manager.IgnoreIndexSynchronization(table, idx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRetailTillLayoutZoneTableForNewIndex</Name>
				<Source><![CDATA[
	/// <summary>
    /// Deletes duplicated records according to the new index on <c>RetailTillLayoutZone</c> table.
    /// Before removing the duplicated records, the references to it are updated so that they point to the correct record.
    /// </summary>
    private void updateRetailTillLayoutZoneTableForNewIndex()
    {
        RetailTillLayoutZone            retailTillLayoutZoneGoodRecord, retailTillLayoutZoneBadRecord;
        RetailTillLayoutZoneReference   retailTillLayoutZoneReference;

        ttsbegin;

        while select retailTillLayoutZoneGoodRecord
            order by retailTillLayoutZoneGoodRecord.RecId asc
        {
			// Search for any duplicate record according to the new index (ZoneId, ZoneType and DeviceType)
            while select forupdate retailTillLayoutZoneBadRecord
                where   retailTillLayoutZoneGoodRecord.ZoneId == retailTillLayoutZoneBadRecord.ZoneId
                    &&  retailTillLayoutZoneGoodRecord.ZoneType == retailTillLayoutZoneBadRecord.ZoneType
                    &&  retailTillLayoutZoneGoodRecord.DeviceType == retailTillLayoutZoneBadRecord.DeviceType
                    &&  retailTillLayoutZoneGoodRecord.RecId < retailTillLayoutZoneBadRecord.RecId
            {
				// If a duplicated record was found, we need to update the references before deleting it.
                update_recordset retailTillLayoutZoneReference
                    setting Zone = retailTillLayoutZoneGoodRecord.RecId
                    where retailTillLayoutZoneReference.Zone == retailTillLayoutZoneBadRecord.RecId;

                retailTillLayoutZoneBadRecord.delete();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableIndexOnRetailCDXUploadSession_Major</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disable the new indexes on the table <c>RetailCDXUploadSession</c> to allow duplicate records from the older version until the upgrade is complete.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@REX4160664"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::StartScript),
    UpgradeScriptTableAttribute(tableStr(RetailCDXUploadSession), false, false, false, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void disableIndexOnRetailCDXUploadSession_Major()
    {
        this.disableNewIndexesOnRetailCDXUploadSession();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRetailCDXUploadSessionTable_Major</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete all CDX upload session log data during minor version upgrade.
    /// </summary>
    [
    UpgradeScriptDescriptionAttribute("@REX4160373"),
    UpgradeScriptConfigKeyAttribute(configurationKeyStr(Retail)),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSync),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
    UpgradeScriptTableAttribute(tableStr(RetailCDXUploadSession), false, false, false, true),
    UpgradeScriptTableAttribute(tableStr(RetailCDXUploadSessionLog), false, false, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateRetailCDXUploadSessionTable_Major()
    {
        // Clear logging data.
        this.purgeRetailCDXUploadSessionLog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableIndexOnRetailCDXUploadSession_Minor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disable the new indexes on the table <c>RetailCDXUploadSession</c> to allow duplicate records from the older version until
    /// the minor version upgrade is complete.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@REX4160664"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::StartScript),
    UpgradeScriptTableAttribute(tableStr(RetailCDXUploadSession), false, false, false, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void disableIndexOnRetailCDXUploadSession_Minor()
    {
        this.disableNewIndexesOnRetailCDXUploadSession();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRetailCDXUploadSessionTable_Minor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete all CDX upload session log data during minor version upgrade.
    /// </summary>
    [
    UpgradeScriptDescriptionAttribute("@REX4160373"),
    UpgradeScriptConfigKeyAttribute(configurationKeyStr(Retail)),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
    UpgradeScriptTableAttribute(tableStr(RetailCDXUploadSession), false, false, false, true),
    UpgradeScriptTableAttribute(tableStr(RetailCDXUploadSessionLog), false, false, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateRetailCDXUploadSessionTable_Minor()
    {
        // Clear logging data.
        this.purgeRetailCDXUploadSessionLog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>purgeRetailCDXUploadSessionLog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete all CDX upload session log data.
    /// </summary>
    private void purgeRetailCDXUploadSessionLog()
    {
        // Clear logging data.
        RetailCDXUploadSession uploadSession;
        RetailCDXUploadSessionLog uploadSessionLog;

        delete_from uploadSession;
        delete_from uploadSessionLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableNewIndexesOnRetailCDXUploadSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disable the new indexes on the table <c>RetailCDXUploadSession</c> to allow duplicate records until the upgrade is complete.
    /// </summary>
    private void disableNewIndexesOnRetailCDXUploadSession()
    {
        // disabling the two new indexes added in version 7.1
        this.disableUniqueIndex(tableNum(RetailCDXUploadSession), indexNum(RetailCDXUploadSession, LocalUploadSessionIdIdx));
        this.disableUniqueIndex(tableNum(RetailCDXUploadSession), indexNum(RetailCDXUploadSession, UploadSessionRerunIdx));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>