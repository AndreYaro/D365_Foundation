<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SAFTReportController_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SAFTReportController_W</c> class is the controller class for the Standard Audit File reports.
/// </summary>
public class SAFTReportController_W extends ERFormatMappingRunBaseController implements BatchRetryable
{
    #ISOCountryRegionCodes
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (TaxParameters::find().SAFTERFormatMapping_W
            && !SAFTERHelper_W::isEqualOrChildSolution(
                str2Guid(SAFTConstants_W::ERSAFTFormatSolutionGuidStr_NO),
                ERSolutionTable::find(ERFormatMappingTable::find(
                    TaxParameters::find().SAFTERFormatMapping_W).Solution).GUID))
        {
           throw error(strFmt(
                "@StandardAuditFile_SAFT_W:SAFTGeneralElectronicReportFeatureValiationLabel5",
                "@StandardAuditFile_SAFT_W:StandardAuditFileForTax",
                SAFTERHelper_W::sAFTFormatName_NO(),
                fieldPName(TaxParameters, SAFTERFormatMapping_W)));
        }

        SAFTReportController_W controller = SAFTReportController_W::construct(_args);
        controller.initContract();
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initContract</Name>
				<Source><![CDATA[
    private void initContract()
    {
        if( !xSysLastValue::getLast(this))
        {
            SAFTReportContract_Base_W contract = this.getDataContractObject() as SAFTReportContract_Base_W;
            contract.initQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SysOperationController construct(Args _args)
    {
        switch (true)
        {
            case SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]) :
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferencePL00043, funcName());
            break;
            case SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]) :
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceNO00016, funcName());
            break;
        }

        

        IdentifierName className, methodName;
        SysOperationExecutionMode mode;

        [className, methodName, mode] = SysOperationServiceController::parseServiceInfo(_args);
        var controller = new SAFTReportController_W(className, methodName, mode);
        controller.parmArgs(_args);
        
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>