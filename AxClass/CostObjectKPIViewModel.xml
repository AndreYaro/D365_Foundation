<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostObjectKPIViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostObjectKPIViewModel</c> class manages the KPI controls on the <c>CostStatement</c> form.
/// </summary>
public class CostObjectKPIViewModel
{
    CostIKPI                    costObjectinventoryTurnCard,
                                costObjectInventoryAccuracyCard,
                                costObjectInventoryDays;
    CostSelectPeriodState       periodState;
    FormDateControl             fromDateControl;
    FormDateControl             toDateControl;
    CostInventoryStatementModel costStatementModel;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CostObjectKPIViewModel</c> class.
    /// </summary>
    /// <param name = "_inventoryTurnCard">
    /// An instance of <c>CostIKPI</c> that represents the inventory turn card.
    /// </param>
    /// <param name = "_inventoryAccuracyCard">
    /// An instance of <c>CostIKPI</c> that represents the inventory accuracy card.
    /// </param>
    /// <param name = "_inventoryDaysCard">
    /// An instance of <c>CostIKPI</c> that represents the inventory days card.
    /// </param>
    /// <param name = "_fromDateControl">
    /// The instance of the <c>FormDateControl</c> used to set date range from date.
    /// </param>
    /// <param name = "_toDateControl">
    /// The instance of the <c>FormDateControl</c> used to set date range to date.
    /// </param>
    /// <param name = "_model">
    /// The instance of the <c>CostInventoryStatementModel</c> that represents a KPI values data source.
    /// </param>
    /// <returns>
    /// An instance of the <c>CostObjectKPIViewModel</c> class.
    ///</returns>
    public static CostObjectKPIViewModel construct(
                    CostIKPI                    _inventoryTurnCard,
                    CostIKPI                    _inventoryAccuracyCard,
                    CostIKPI                    _inventoryDaysCard,
                    FormDateControl             _fromDateControl,
                    FormDateControl             _toDateControl,
                    CostInventoryStatementModel _model)
    {
        var kpiModel = new CostObjectKPIViewModel();

        kpiModel.initialize(_inventoryTurnCard,
                            _inventoryAccuracyCard,
                            _inventoryDaysCard,
                            _fromDateControl,
                            _toDateControl,
                            _model);

        return kpiModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the viewmodel.
    /// </summary>
    /// <param name = "_inventoryTurnCard">
    /// An instance of <c>CostIKPI</c> that represents the inventory turn card.
    /// </param>
    /// <param name = "_inventoryAccuracyCard">
    /// An instance of <c>CostIKPI</c> that represents the inventory accuracy card.
    /// </param>
    /// <param name = "_inventoryDaysCard">
    /// An instance of <c>CostIKPI</c> that represents the inventory days card.
    /// </param>
    /// <param name = "_fromDateControl">
    /// The instance of the <c>FormDateControl</c> used to set date range from date.
    /// </param>
    /// <param name = "_toDateControl">
    /// The instance of the <c>FormDateControl</c> used to set date range to date.
    /// </param>
    /// <param name = "_model">
    /// The instance of the <c>CostInventoryStatementModel</c> that represents a KPI values data source.
    /// </param>
    private void initialize(
                    CostIKPI                    _inventoryTurnCard,
                    CostIKPI                    _inventoryAccuracyCard,
                    CostIKPI                    _inventoryDaysCard,
                    FormDateControl             _fromDateControl,
                    FormDateControl             _toDateControl,
                    CostInventoryStatementModel _model)
    {
        costObjectInventoryAccuracyCard = _inventoryAccuracyCard;
        costObjectInventoryTurnCard  = _inventoryTurnCard;
        costObjectInventoryDays = _inventoryDaysCard;
        fromDateControl = _fromDateControl;
        toDateControl = _toDateControl;
        costStatementModel = _model;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the view.
    /// </summary>
    public void update()
    {
        periodState = CostSelectPeriodState::construct();
        periodState.parmFromDate(fromDateControl.dateValue());
        periodState.parmToDate(toDateControl.dateValue());
        CostKPICalculation costKPICalculation = CostKPICalculation::newFromParameters(costStatementModel);
        costKPICalculation.calculateKPIValues();

        costObjectinventoryTurnCard.updateKPI(periodState, costKPICalculation.parmTurn());
        costObjectInventoryAccuracyCard.updateKPI(periodState, costKPICalculation.parmAccuracy());
        costObjectInventoryDays.updateKPI(periodState, costKPICalculation.parmInventoryDays());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOnFormControlEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler that updates the view model.
    /// </summary>
    /// <param name = "_sender">
    /// The <c>FormControl</c> raising the event.
    /// </param>
    /// <param name = "_eventArgs">
    /// The <c>FormControlEventArgs</c> for the event.
    /// </param>
    public void updateOnFormControlEvent(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        this.update();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>