<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjControlCostGroupSetupServer</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjControlCostGroupSetupServer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCategory</Name>
				<Source><![CDATA[
        static void addCategory(container        categoryLine,
                                   ProjCostGroupId  _groupId,
                                   ProjControlId    _controlId,
                                   ProjCategoryType _categoryType)
    {
        ProjControlCategory projControlCategory;
        ProjControlCategory projControlCategoryDelete;
        ProjCategoryId      categoryId;
        int                 i;

        for (i=1; i<=conlen(categoryLine); i++)
        {
            categoryId = conpeek(categoryLine, i);

            ttsbegin;

            select firstonly forupdate projControlCategoryDelete
                where projControlCategoryDelete.ControlId  == _controlId &&
                      projControlCategoryDelete.CategoryId == categoryId;

            if (projControlCategoryDelete)
            {
                projControlCategoryDelete.delete();
            }

            projControlCategory.ControlId   = _controlId;
            projControlCategory.CostGroupId = _groupId;
            projControlCategory.CostType    = ProjControl::categoryType2CostType(_categoryType);
            projControlCategory.CategoryId  = categoryId;

            projControlCategory.insert();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProjLine</Name>
				<Source><![CDATA[
        static void deleteProjLine(container       projLine,
                                      ProjCostGroupId _groupId,
                                      ProjControlId   _controlId)
    {
        ProjControlCategory projControlCategory;
        ProjCategoryId      categoryId;
        int                 i;

        for (i=1; i<=conlen(projLine); i++)
        {
            categoryId = conpeek(projLine, i);

            delete_from projControlCategory
                where projControlCategory.ControlId   == _controlId &&
                      projControlCategory.CostGroupId == _groupId   &&
                      projControlCategory.CategoryId  == categoryId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCategoryInGroup</Name>
				<Source><![CDATA[
        static container getCategoryInGroup(ProjControlId    _controlId,
                                               ProjCostGroupId  _groupId,
                                               ProjCategoryType _categoryType)
    {
        ProjCategory        projCategory;
        ProjControlCategory projControlCategory;
        container           projLine;

        while select RecId from projControlCategory
            where projControlCategory.ControlId   == _controlId &&
                  projControlCategory.CostGroupId == _groupId
        join projCategory
            where projCategory.CategoryType == _categoryType &&
                  projCategory.CategoryId   == projControlCategory.CategoryId
        {
            projLine += [[projCategory.CategoryId,
                          projCategory.CategoryId,
                          projCategory.Name]];
        }

        return projLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCategoryNotInGroup</Name>
				<Source><![CDATA[
        static container getCategoryNotInGroup(ProjControlId    _controlId,
                                                  ProjCostGroupId  _groupId,
                                                  ProjCategoryType _categoryType)
    {
        ProjCategory        projCategory;
        ProjControlCategory projControlCategory;
        container           projLine;

        while select CategoryId, Name from projCategory
                where projCategory.CategoryType == _categoryType
            NotExists join RecId from projControlCategory
                where projControlCategory.CategoryId == projCategory.CategoryId
                   && projControlCategory.CostGroupId == _groupId
                   && projControlCategory.ControlId == _controlId
        {
            projLine += [[projCategory.CategoryId,
                          projCategory.CategoryId,
                          projCategory.Name,
                          _groupId]];
        }

        return projLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>