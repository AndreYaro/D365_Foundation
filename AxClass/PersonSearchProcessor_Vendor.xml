<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PersonSearchProcessor_Vendor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PersonSearchProcessor_Vendor</c> executes personal information search criteria against vendors.
/// </summary>
[PersonSearchProcessorFactoryAttribute(PersonSearchModule::Vendor)]
public class PersonSearchProcessor_Vendor extends PersonSearchProcessor
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doSearch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Search for vendor matches.
    /// </summary>
    public void doSearch()
    {
        if (PersonSearchCriteriaKnownId::existAny(taskId))
        {
            this.createVendorResultsByKnownAccounts();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createVendorResultsByKnownAccounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create the set of vendor results for known vendor accounts.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void createVendorResultsByKnownAccounts()
    {
        PersonSearchCriteriaKnownId personSearchCriteriaKnownId;
        VendTable vendTable;
        DirPartyTable dirPartyTable;

        // Insert_recordset does not support cross company, so use while select.
        while select crossCompany vendTable
            join dirPartyTable
                where vendTable.Party == dirPartyTable.RecId
            exists join personSearchCriteriaKnownId
                where personSearchCriteriaKnownId.TaskId == taskId
                    && personSearchCriteriaKnownId.VendAccount != ''
                    && vendTable.AccountNum == personSearchCriteriaKnownId.VendAccount
        {
            PersonSearchResult::findOrCreateResult(
                taskId,
                PersonSearchResultCategory::Vendor,
                vendTable.RecId,
                tableNum(VendTable),
                vendTable.DataAreaId,
                dirPartyTable.PartyNumber);

            PersonSearchPartyNumberTmp::findOrCreate(taskId, dirPartyTable.PartyNumber);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>