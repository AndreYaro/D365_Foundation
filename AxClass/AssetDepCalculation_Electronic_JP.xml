<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepCalculation_Electronic_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AssetDepCalculation_Electronic_JP extends AssetDepCalculation_JP
{
    AssetDepBookMap_JP assetDepBookMap;
    #AssetDepCalculation_JP
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcAllowableLimitForAccumulatedDep</Name>
				<Source><![CDATA[
    protected AssetAmount calcAllowableLimitForAccumulatedDep()
    {
        AssetAmount     ret;
        AssetAmount     allowableLimitForAccumulatedDep;

        if (assetDepBookMap.AllowableLimitForAccumulatedDepType == AssetLimitForAccumulatedDepType_JP::AcquisitionCost95)
        {
            allowableLimitForAccumulatedDep = calcArgs.parmAcquisitionPrice();
            if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
            {
                allowableLimitForAccumulatedDep -= AssetDepTransMap_JP::calcDocumentTypeAmountToDepreciate(AssetDocumentType_JP::AssetRetirementObligation, assetDepBookMap, dateMax());
            }
            allowableLimitForAccumulatedDep = allowableLimitForAccumulatedDep
                - this.roundOffDepreciation(allowableLimitForAccumulatedDep * #RemainingDepRatioForElectronic);
            calcArgs.parmAllowableLimitForAccumulatedDep(allowableLimitForAccumulatedDep);
        }

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcDepAmountForCurYear</Name>
				<Source><![CDATA[
    protected AssetAmount calcDepAmountForCurYear()
    {
        AssetAmount allowableLimitDepForCurYear;
        AssetAmount nbvForEndOfCurYear;
        AssetAmount beginningBalanceOfCurYear;

        beginningBalanceOfCurYear   = this.calcFinalAmountToDepreciate();

        nbvForEndOfCurYear          = beginningBalanceOfCurYear * (1 - this.calcCurYearDepRate());
        nbvForEndOfCurYear          = this.roundOffDepreciation(nbvForEndOfCurYear);
        allowableLimitDepForCurYear = beginningBalanceOfCurYear - nbvForEndOfCurYear;

        if (allowableLimitDepForCurYear < 0)
        {
            return 0;
        }

        return allowableLimitDepForCurYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcDepreciableRatioForCurYear</Name>
				<Source><![CDATA[
    protected real calcDepreciableRatioForCurYear()
    {
        real ret;

        if (this.isPutInUseYear())
        {
            ret = #FirstYearRatioForElectronic;
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcFinalAmountToDepreciate</Name>
				<Source><![CDATA[
    protected AssetAmount calcFinalAmountToDepreciate()
    {
        AssetAmount         ret;
        AssetAmount         remainingBalanceOfCurYear;
        // reduction entry
        AssetAmount         adjustAmount;

        adjustAmount = this.getReductionEntryAdjustment(calcArgs.parmPeriodEnd());

        remainingBalanceOfCurYear   = calcArgs.parmAmountToDepreciate()
            - this.getBeginningBalanceOfAccumulatedDep(this.calcDepStartDateInCurYearBeyondChange())
            - this.getBeginningBalanceOfAccumulatedExtDep(calcArgs.parmAssetTableInterval().findFirstDayOfYear(calcArgs.parmPeriodStart()));
        ret = remainingBalanceOfCurYear + adjustAmount;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssetDepreciationMethod</Name>
				<Source><![CDATA[
    public AssetDepreciationMethod getAssetDepreciationMethod()
    {
        return AssetDepreciationMethod::ElectronicDepreciation_JP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        assetDepBookMap = AssetDepBookMap_JP::findByAssetIdBookId(calcArgs.parmAssetId(), calcArgs.parmAssetBookId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>roundOffDepreciationRate</Name>
				<Source><![CDATA[
    protected real roundOffDepreciationRate(real _depRate)
    {
        real ret;

        ret = round(_depRate, #DecimalsForDepRate);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>