<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTrans_JP_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension methods for the <c>LedgerJournalTrans</c> class.
/// </summary>
public static class LedgerJournalTrans_JP_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existBadDebtPeriod_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check whether there are record(s) existing in LedgerJournalTrans.
    /// </summary>
    /// <param name="_fromDate">
    /// From date to check.
    /// </param>
    /// <param name="_toDate">
    /// End date to check.
    /// </param>
    /// <param name="_ledgerDimension">
    /// A BadDebtLedgerDimension variable is used to check whethere it exist in LedgerJournalTrans.
    /// </param>
    /// <returns>
    /// If true, exist in LedgerJournalTrans table.
    /// </returns>
    public static boolean existBadDebtPeriod_JP(
        TransDate                  _fromDate,
        TransDate                  _toDate,
        LedgerBadDebtDimension_JP  _ledgerDimension)
    {
        LedgerJournalTrans                  ledgerJournalTrans;
        DimensionAttributeValueCombination  dimAttrValueCombo;
        MainAccount                         mainAccount;
        MainAccountNum                      badDebtMainAccount;

        badDebtMainAccount = LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(_ledgerDimension);

        select firstonly RecId from ledgerJournalTrans
            where ledgerJournalTrans.TransDate      >= _fromDate
                && ledgerJournalTrans.TransDate     <= _toDate
            join MainAccount from dimAttrValueCombo
                where dimAttrValueCombo.RecId == ledgerJournalTrans.LedgerDimension
                    || dimAttrValueCombo.RecId == ledgerJournalTrans.OffsetLedgerDimension
                exists join mainAccount
                    where mainAccount.RecId             == dimAttrValueCombo.MainAccount
                        && mainAccount.MainAccountId    == badDebtMainAccount;

        return ledgerJournalTrans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existCollectedBadDebtPeriod_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the LedgerBadDebtAccounts_JP table for the specified id.
    /// </summary>
    /// <param name="_fromDate">
    /// From date to check.
    /// </param>
    /// <param name="_toDate">
    /// End date to check.
    /// </param>
    /// <param name="_ledgerDimension">
    /// A CollectedBadDebtLedgerDimension_JP variable is used to check whethere it exist in LedgerJournalTrans.
    /// </param>
    /// <returns>
    /// If true, exist in LedgerJournalTrans table.
    /// </returns>
    public static boolean existCollectedBadDebtPeriod_JP(
        TransDate                           _fromDate,
        TransDate                           _toDate,
        LedgerCollectedBadDebtDimension_JP  _ledgerDimension)
    {
        LedgerJournalTrans                  ledgerJournalTrans;
        DimensionAttributeValueCombination  dimAttrValueCombo;
        MainAccount                         mainAccount;
        MainAccountNum                      collectedBadDebtMainAccount;

        collectedBadDebtMainAccount = LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(_ledgerDimension);

        select firstonly RecId from ledgerJournalTrans
            where ledgerJournalTrans.TransDate      >= _fromDate
                && ledgerJournalTrans.TransDate     <= _toDate
            join MainAccount from dimAttrValueCombo
                where dimAttrValueCombo.RecId == ledgerJournalTrans.LedgerDimension
                    || dimAttrValueCombo.RecId == ledgerJournalTrans.OffsetLedgerDimension
                exists join mainAccount
                    where mainAccount.RecId             == dimAttrValueCombo.MainAccount
                        && mainAccount.MainAccountId    == collectedBadDebtMainAccount;

        return ledgerJournalTrans.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>