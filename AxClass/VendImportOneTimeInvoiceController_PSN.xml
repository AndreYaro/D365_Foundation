<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendImportOneTimeInvoiceController_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Controller class for <c>VendOneTimeVendInvoiceService_PSN</c> service.
/// </summary>
public class VendImportOneTimeInvoiceController_PSN extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>afterOperation</Name>
				<Source><![CDATA[
    protected void afterOperation(SysOperationExecutionMode _executionMode, AifAsyncResult _asyncResult)
    {
        VendImportOneTimeVendErrorReport_PSN errorReport;

        super(_executionMode, _asyncResult);

        container value = this.operationReturnValue();
        errorReport = new VendImportOneTimeVendErrorReport_PSN(value);
        errorReport.createErrorReport();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCaption</Name>
				<Source><![CDATA[
    protected ClassDescription defaultCaption()
    {
        return "@SYP4950154";
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the form used to get the user input.
    /// </summary>
    /// <returns>
    /// The name of the <c>VendImportOneTimeVendFileUpload_PSN</c> form.
    /// </returns>
    public FormName templateForm()
    {
        return formStr(VendImportOneTimeVendFileUpload_PSN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendImportOneTimeInvoiceController_PSN construct()
    {
        VendImportOneTimeInvoiceController_PSN controller = new VendImportOneTimeInvoiceController_PSN(classStr(VendImportOneTimeVendInvoiceService_PSN),
                                                                                                       methodStr(VendImportOneTimeVendInvoiceService_PSN, readImportFile),
                                                                                                       SysOperationExecutionMode::Synchronous);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        VendImportOneTimeInvoiceController_PSN controller;

        controller = VendImportOneTimeInvoiceController_PSN::construct();
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>