<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanInquiryRequest</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides the common methods to the budget plan inquiry request classes.
/// </summary>
public abstract class BudgetPlanInquiryRequest
{
    BudgetingOrganizationRecId  budgetingOrganizationRecId;
    BudgetPlanningProcessRecId  budgetPlanningProcessRecId;
    BudgetPlanHeaderRecId       budgetPlanHeaderRecId;
    BudgetPlanScenarioRecId     budgetPlanScenarioRecId;
    BudgetPlanLineEffectiveDate startDate;
    BudgetPlanLineEffectiveDate endDate;
    BudgetPlanDocumentNumber    documentNumber;
    FieldName                   groupByFieldName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the query ranges to the specified query.
    /// </summary>
    /// <param name="_query">
    /// The query for which to add the ranges.
    /// </param>
    public void addRanges(Query _query)
    {
        this.addHeaderRanges(_query);
        this.addLineRanges(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    public BudgetPlanLineEffectiveDate parmStartDate(BudgetPlanLineEffectiveDate _startDate = startDate)
    {
        startDate = _startDate;

        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    public BudgetPlanLineEffectiveDate parmEndDate(BudgetPlanLineEffectiveDate _endDate = endDate)
    {
        endDate = _endDate;

        return endDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentNumber</Name>
				<Source><![CDATA[
    public BudgetPlanDocumentNumber parmDocumentNumber(BudgetPlanDocumentNumber _documentNumber = documentNumber)
    {
        documentNumber = _documentNumber;

        return documentNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetingOrganizationRecId</Name>
				<Source><![CDATA[
    public BudgetingOrganizationRecId parmBudgetingOrganizationRecId(BudgetingOrganizationRecId _budgetingOrganizationRecId = budgetingOrganizationRecId)
    {
        budgetingOrganizationRecId = _budgetingOrganizationRecId;

        return budgetingOrganizationRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetPlanningProcessRecId</Name>
				<Source><![CDATA[
    public BudgetPlanningProcessRecId parmBudgetPlanningProcessRecId(BudgetPlanningProcessRecId _budgetPlanningProcessRecId = budgetPlanningProcessRecId)
    {
        budgetPlanningProcessRecId = _budgetPlanningProcessRecId;

        return budgetPlanningProcessRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetPlanHeaderRecId</Name>
				<Source><![CDATA[
    public BudgetPlanHeaderRecId parmBudgetPlanHeaderRecId(BudgetPlanHeaderRecId _budgetPlanHeaderRecId = budgetPlanHeaderRecId)
    {
        budgetPlanHeaderRecId = _budgetPlanHeaderRecId;

        return budgetPlanHeaderRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetPlanScenarioRecId</Name>
				<Source><![CDATA[
    public BudgetPlanScenarioRecId parmBudgetPlanScenarioRecId(BudgetPlanScenarioRecId _budgetPlanScenarioRecId = budgetPlanScenarioRecId)
    {
        budgetPlanScenarioRecId = _budgetPlanScenarioRecId;

        return budgetPlanScenarioRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupByFieldName</Name>
				<Source><![CDATA[
    public FieldName parmGroupByFieldName(FieldName _groupByFieldName = groupByFieldName)
    {
        groupByFieldName = _groupByFieldName;

        return groupByFieldName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addHeaderRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>BudgetPlanHeader</c> record query ranges to the specified query.
    /// </summary>
    /// <param name="_query">
    /// The query for which to add the ranges.
    /// </param>
    public void addHeaderRanges(Query _query)
    {
        QueryBuildDataSource budgetPlanHeaderDataSource;
        QueryBuildDataSource budgetPlanningProcessDataSource;
        QueryBuildDataSource omInternalOrganizationDataSource;

        budgetPlanningProcessDataSource = _query.dataSourceTable(tableNum(BudgetPlanningProcess));

        QueryBuildRange budgetPlanningProcessRange = SysQuery::findOrCreateRange(budgetPlanningProcessDataSource, fieldNum(BudgetPlanningProcess, Name));
        budgetPlanningProcessRange.status(RangeStatus::Locked);

        if (this.parmBudgetPlanningProcessRecId())
        {
            budgetPlanningProcessRange.value(BudgetPlanningProcess::find(this.parmBudgetPlanningProcessRecId()).Name);
        }
        else
        {
            budgetPlanningProcessRange.value(BudgetPlanningConstants::emptyString);
        }

        omInternalOrganizationDataSource = _query.dataSourceTable(tableNum(OMInternalOrganization));

        QueryBuildRange omInternalOrganizationRange = SysQuery::findOrCreateRange(omInternalOrganizationDataSource, fieldNum(OMInternalOrganization, Name));
        omInternalOrganizationRange.status(RangeStatus::Locked);

        if (this.parmBudgetingOrganizationRecId())
        {
            omInternalOrganizationRange.value(DirPartyTable::findRec(this.parmBudgetingOrganizationRecId()).Name);
        }
        else
        {
            omInternalOrganizationRange.value(BudgetPlanningConstants::emptyString);
        }

        budgetPlanHeaderDataSource = _query.dataSourceTable(tableNum(BudgetPlanHeader));

        QueryBuildRange budgetPlanHeaderRange = SysQuery::findOrCreateRange(budgetPlanHeaderDataSource, fieldNum(BudgetPlanHeader, DocumentNumber));
        budgetPlanHeaderRange.status(RangeStatus::Locked);

        if (this.parmBudgetPlanHeaderRecId())
        {
            budgetPlanHeaderRange.value(BudgetPlanHeader::find(this.parmBudgetPlanHeaderRecId()).DocumentNumber);
        }
        else
        {
            budgetPlanHeaderRange.value(BudgetPlanningConstants::emptyString);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLineRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the class specific line table record query ranges to the specified query.
    /// </summary>
    /// <param name="_query">
    /// The query for which to add the ranges.
    /// </param>
    public abstract void addLineRanges(Query _query)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>