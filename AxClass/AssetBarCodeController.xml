<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetBarCodeController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>AssetBarCodeController</c> class is the controller for the <c>AssetBarCode</c> report.
/// </summary>
public class AssetBarCodeController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
        protected void preRunModifyContract()
    {
        AssetBarCodeContract contract;
        BarcodeSetupId barCodeSetUpId;
        BarcodeSetup barCodeSetUp;

        super();

        contract = this.parmReportContract().parmRdpContract() as AssetBarCodeContract;
        barCodeSetUpId = contract.parmBarCodeSetUpId();
        barCodeSetUp = BarcodeSetup::find(barcodeSetupId);

        if (barcodeSetup.BarcodeType != BarcodeType::NoBarcode)
        {
            contract.parmFontName(barcodeSetup.FontName);
            contract.parmFontSize(barcodeSetup.FontSize);
        }
        else
        {
            contract.parmFontName('');
            contract.parmFontSize(0);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        AssetBarCodeController controller = new AssetBarCodeController();
        controller.parmArgs(_args);
        controller.parmReportName(ssrsReportStr(AssetBarCode, Report));
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>