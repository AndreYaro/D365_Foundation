<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayTransCloseDeposit</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class RPayTransCloseDeposit
{
    RPayDepositTable    rPayDepositTable;
    FormDataSource      rPayDepositTable_ds;
    int                 numberOfTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createPayTrans</Name>
				<Source><![CDATA[
    private void createPayTrans()
    {
        RPayTrans        payTrans;
        RPayDepositTable rPayDepositTableLocal,rPayDepositTableUpdated;
        int              counter, errorCounter;
        if (! RpayController::canModuleChanged())
        {
            return;
        }

        setprefix("@RUP739");

        ttsbegin;

        for (rPayDepositTableLocal = rPayDepositTable_ds.getFirst(true) ? rPayDepositTable_ds.getFirst(true) : rPayDepositTable_ds.cursor(); rPayDepositTableLocal; rPayDepositTableLocal = rPayDepositTable_ds.getNext())
        {
            counter ++;

            rPayDepositTableUpdated = RPayDepositTable::find(rPayDepositTableLocal.RecId,true);

            if (! rPayDepositTableUpdated.Voucher || rPayDepositTableUpdated.ClosedDate)
            {
                errorCounter ++;
                continue;
            }

            numberOfTrans++;

            payTrans.clear();

            payTrans.SourceDate     = RPayParameters::payPeriod();
            payTrans.PayPeriod      = RPayParameters::payPeriod();
            payTrans.TransDate      = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            payTrans.PayCtype       = RPayPaymentParameters::find().DepositClosedPayCtype;
            payTrans.initFromEmplTable(RHRMEmplTable::find(rPayDepositTableUpdated.EmplId));

            if (RPayTable::find(payTrans.PayCtype).PayChargeType == RPayChargeType::AddSum)
            {
                payTrans.Amount     = rPayDepositTableUpdated.DepositSum;
            }
            else
            {
                payTrans.Amount     = - rPayDepositTableUpdated.DepositSum;
            }

            payTrans.SourceTableId  = rPayDepositTableUpdated.TableId;
            payTrans.SourceRecId    = rPayDepositTableUpdated.RecId;
            payTrans.updatePosting();
            payTrans.insert();

            rPayDepositTableUpdated.ClosedDate     = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            rPayDepositTableUpdated.PayDepositType = RPayDepositType::Salary;
            rPayDepositTableUpdated.update();

            info(strfmt("@SYS53179","@RUP1246",rPayDepositTableLocal.DepositSum,rPayDepositTableLocal.getFullEmplName()));
        }

        if (errorCounter == counter)
        {
            error("@RUP1262");
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(RPayDepositTable _rPayDepositTable,FormDataSource _rPayDepositTable_ds)
    {
        rPayDepositTable    = _rPayDepositTable;
        rPayDepositTable_ds = _rPayDepositTable_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfTrans</Name>
				<Source><![CDATA[
    private int numberOfTrans()
    {
        return numberOfTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        RPayDepositTable        rPayDepositTable;
        Object                  rPayDepositTable_ds;
        RPayTransCloseDeposit   rPayTransCloseDeposit;

        if (args.dataset() == tablenum(RPayDepositTable))
        {
            rPayDepositTable    = args.record();
            rPayDepositTable_ds = FormDataUtil::getFormDataSource(rPayDepositTable);

            rPayTransCloseDeposit = new RPayTransCloseDeposit(args.record(),FormDataUtil::getFormDataSource(args.record()));
            rPayTransCloseDeposit.createPayTrans();

            if (rPayDepositTable && rPayDepositTable_ds)
            {
                if (rPayTransCloseDeposit.numberOfTrans() > 1)
                {
                    rPayDepositTable_ds.executeQuery();
                }
                else
                {
                    rPayDepositTable_ds.active();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>