<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HRMAbsenceCodeFormExtensionJMGHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the JMG module form extension events for the HRMAbsenceCode form.
/// </summary>
class HRMAbsenceCodeFormExtensionJMGHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>HRMAbsenceCode_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the form OnClosing event.
    /// </summary>
    /// <param name="_sender">The HRMAbsenceCode form.</param>
    /// <param name="_e">Args for the event.</param>
    [FormEventHandler(formStr(HRMAbsenceCode), FormEventType::Closing)]
    public static void HRMAbsenceCode_OnClosing(xFormRun _sender, FormEventArgs _e)
    {
        HRMAbsenceCodeFormExtensionJMGHandler::numberSeqFormHandler(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HRMAbsenceCode_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the form OnInitialized event.
    /// </summary>
    /// <param name="_sender">The HRMAbsenceCode form.</param>
    /// <param name="_e">Args for the event.</param>
    [FormEventHandler(formStr(HRMAbsenceCode), FormEventType::Initialized)]
    public static void HRMAbsenceCode_OnInitialized(xFormRun _sender, FormEventArgs _e)
    {
        SegmentedEntryControl jmgLedgerAccountNum = _sender.control(_sender.controlId(identifierStr(JmgPay_JmgLedgerAccountNum)));
        SegmentedEntryControl jmgOffsetLedgerAccountNum = _sender.control(_sender.controlId(identifierStr(JmgPay_JmgOffsetLedgerAccountNum)));

        jmgLedgerAccountNum.parmPostingType(LedgerPostingType::None);
        jmgOffsetLedgerAccountNum.parmPostingType(LedgerPostingType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HRMAbsenceCodeDS_OnCreating</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the HRMAbsenceCode data source OnCreating event.
    /// </summary>
    /// <param name = "_sender">The HRMAbsenceCode data source.</param>
    /// <param name = "_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HRMAbsenceCode, HRMAbsenceCode), FormDataSourceEventType::Creating)]
    public static void HRMAbsenceCodeDS_OnCreating(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        NumberSeqFormHandler numberSeqFormHandler = HRMAbsenceCodeFormExtensionJMGHandler::numberSeqFormHandler(_sender.formRun());

        if (numberSeqFormHandler)
        {
            numberSeqFormHandler.formMethodDataSourceCreatePre();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HRMAbsenceCodeDS_OnCreated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the HRMAbsenceCode data source OnCreated event.
    /// </summary>
    /// <param name = "_sender">The HRMAbsenceCode data source.</param>
    /// <param name = "_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HRMAbsenceCode, HRMAbsenceCode), FormDataSourceEventType::Created)]
    public static void HRMAbsenceCodeDS_OnCreated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        NumberSeqFormHandler numberSeqFormHandler = HRMAbsenceCodeFormExtensionJMGHandler::numberSeqFormHandler(_sender.formRun());

        if (numberSeqFormHandler)
        {
            numberSeqFormHandler.formMethodDataSourceCreate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HRMAbsenceCodeDS_OnDeleting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the HRMAbsenceCode data source OnDeleting event.
    /// </summary>
    /// <param name = "_sender">The HRMAbsenceCode data source.</param>
    /// <param name = "_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HRMAbsenceCode, HRMAbsenceCode), FormDataSourceEventType::Deleting)]
    public static void HRMAbsenceCodeDS_OnDeleting(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        NumberSeqFormHandler numberSeqFormHandler = HRMAbsenceCodeFormExtensionJMGHandler::numberSeqFormHandler(_sender.formRun());

        if (numberSeqFormHandler)
        {
            numberSeqFormHandler.formMethodDataSourceDelete();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HRMAbsenceCodeDS_OnPostLinkActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the HRMAbsenceCode data source OnPostLinkActive event.
    /// </summary>
    /// <param name = "_sender">The HRMAbsenceCode data source.</param>
    /// <param name = "_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HRMAbsenceCode, HRMAbsenceCode), FormDataSourceEventType::PostLinkActive)]
    public static void HRMAbsenceCodeDS_OnPostLinkActive(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        NumberSeqFormHandler numberSeqFormHandler = HRMAbsenceCodeFormExtensionJMGHandler::numberSeqFormHandler(_sender.formRun());

        if (numberSeqFormHandler)
        {
            numberSeqFormHandler.formMethodDataSourceLinkActive();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HRMAbsenceCodeDS_OnWritten</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the HRMAbsenceCode data source OnWritten event.
    /// </summary>
    /// <param name = "_sender">The HRMAbsenceCode data source.</param>
    /// <param name = "_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HRMAbsenceCode, HRMAbsenceCode), FormDataSourceEventType::Written)]
    public static void HRMAbsenceCodeDS_OnWritten(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        NumberSeqFormHandler numberSeqFormHandler = HRMAbsenceCodeFormExtensionJMGHandler::numberSeqFormHandler(_sender.formRun());

        if (numberSeqFormHandler)
        {
            numberSeqFormHandler.formMethodDataSourceWrite();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HRMAbsenceCodeDS_OnValidatingWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the HRMAbsenceCode data source OnValidatingWrite event.
    /// </summary>
    /// <param name = "_sender">The HRMAbsenceCode data source.</param>
    /// <param name = "_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HRMAbsenceCode, HRMAbsenceCode), FormDataSourceEventType::ValidatingWrite)]
    public static void HRMAbsenceCodeDS_OnValidatingWrite(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        NumberSeqFormHandler numberSeqFormHandler = HRMAbsenceCodeFormExtensionJMGHandler::numberSeqFormHandler(_sender.formRun());

        if (numberSeqFormHandler)
        {
            numberSeqFormHandler.formMethodDataSourceValidateWrite();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandler</Name>
				<Source><![CDATA[
    private static NumberSeqFormHandler numberSeqFormHandler(FormRun _formRun)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(JMG)))
        {
            NumberSeqFormHandler numberSeqFormHandler = HRMAbsenceCodeFormExtensionJMGHandler::getNumberSeqFormHandler(_formRun);

            if (!numberSeqFormHandler)
            {
                FormDataSource hrmAbsenceCode_DS = _formRun.dataSource(formDataSourceStr(HRMAbsenceCode, HRMAbsenceCode)) as FormDataSource;
                numberSeqFormHandler = NumberSeqFormHandler::newForm(JmgParameters::numRefIpcActivityId().NumberSequenceId,
                                                                 _formRun,
                                                                 hrmAbsenceCode_DS,
                                                                 fieldnum(HRMAbsenceCode, JmgJobId));
                DictClass dictClass = new DictClass(classIdGet(_formRun));
                dictClass.callObject('parmNumberSeqFormHandler', _formRun, numberSeqFormHandler);
            }

            return numberSeqFormHandler;
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberSeqFormHandler</Name>
				<Source><![CDATA[
    private static NumberSeqFormHandler getNumberSeqFormHandler(FormRun _formRun)
    {
        DictClass dictClass = new DictClass(classIdGet(_formRun));
        NumberSeqFormHandler numberSeqFormHandler = dictClass.callObject('parmNumberSeqFormHandler', _formRun);
        return numberSeqFormHandler;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>