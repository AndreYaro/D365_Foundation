<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WrkCtrResReqBulkEditActionHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WrkCtrResReqBulkEditActionHelper</c> class is a action helper class.
/// </summary>
class WrkCtrResReqBulkEditActionHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add new requirements to the requirement set
    /// </summary>
    /// <param name="_activityRequirementSet">
    /// The <c>WrkCtrActivityRequirementSet</c> table for which to add new requirements.
    /// </param>
    /// <param name="_requirementTemplates">
    /// The list of the requirement templates.
    /// </param>
    public void add(WrkCtrActivityRequirementSet _activityRequirementSet, List _requirementTemplates)
    {
        ListEnumerator                      enumerator = _requirementTemplates.getEnumerator();
        WrkCtrRequirementWizardNewReqTmp    requirementTemplate;

        while (enumerator.moveNext())
        {
            requirementTemplate = enumerator.current();
            requirementTemplate.createRequirement(_activityRequirementSet);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all requirements from the requirements set.
    /// </summary>
    /// <param name="_activityRequirementSet">
    /// The <c>WrkCtrActivityRequirementSet</c> table for which to delete the requirements.
    /// </param>
    public void deleteAll(WrkCtrActivityRequirementSet _activityRequirementSet)
    {
        WrkCtrActivityRequirement wrkCtrActivityRequirement;

        delete_from wrkCtrActivityRequirement
            where wrkCtrActivityRequirement.ActivityRequirementSet == _activityRequirementSet.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteMatching</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all matching requirements.
    /// </summary>
    /// <param name="_requirements">
    /// The list of requirements for which to match the requirements.
    /// </param>
    public void deleteMatching(List _requirements)
    {
        Common                      requirement;
        ListEnumerator              requirementsEnumerator = _requirements.getEnumerator();
        WrkCtrActivityRequirement   wrkCtrActivityRequirement;

        while (requirementsEnumerator.moveNext())
        {
            requirement = requirementsEnumerator.current();
            delete_from wrkCtrActivityRequirement
                where wrkCtrActivityRequirement.RecId == requirement.RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>detailsText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the details text for list of requirement templates.
    /// </summary>
    /// <param name="_requirementTemplates">
    /// The list of requirement templates.
    /// </param>
    /// <returns>
    /// A String that contains detailed information about the requirement templates.
    /// </returns>
    public str detailsText(List _requirementTemplates)
    {
        str                                 result;
        boolean                             first = true;
        ListEnumerator                      enumerator = _requirementTemplates.getEnumerator();
        WrkCtrRequirementWizardNewReqTmp    template;

        while (enumerator.moveNext())
        {
            if (!first)
            {
                result += '\r\n';
            }

            template = enumerator.current();
            result += template.detailsText();
            first = false;
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>