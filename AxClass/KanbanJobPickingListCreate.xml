<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanJobPickingListCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>KanbanJobPickingListCreate</c> class creates a picking list for a kanban job.
/// </summary>
/// <remarks>
///    The picking list records are stored in the <c>KanbanJobPickingList</c> table.
/// </remarks>
public class KanbanJobPickingListCreate extends KanbanJobPickingListCreateBase
{
    boolean skipEventProcessing;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert a <c>KanbanJobPickingList</c> record.
    /// </summary>
    /// <param name="_kanbanJobPickingList">
    /// The <c>KanbanJobPickingList</c> record to insert.
    /// </param>
    protected void insert(KanbanJobPickingList _kanbanJobPickingList)
    {
        _kanbanJobPickingList.insert(skipEventProcessing);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipEventProcessing</Name>
				<Source><![CDATA[
        public boolean parmSkipEventProcessing(boolean _skipEventProcessing = skipEventProcessing)
    {
        skipEventProcessing = _skipEventProcessing;

        return skipEventProcessing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs actions after the <c>run</c> method is finished.
    /// </summary>
    /// <remarks>
    /// The base class method does nothing.
    /// </remarks>
    protected void postRun()
    {
        this.setKanbanBOMId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setKanbanBOMId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>BOMId</c> field in the <c>Kanban</c> record.
    /// </summary>
    protected void setKanbanBOMId()
    {
        kanban.setKanbanBOMId(bomId,false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static KanbanJobPickingListCreate construct()
    {
        return new KanbanJobPickingListCreate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandardFromKanban</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>KanbanJobPickingListCreate</c> class.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    The <c>KanbanJob</c> table buffer that is used to initialize the class.
    /// </param>
    /// <param name="_kanban">
    ///    The <c>Kanban</c> table buffer that is used to initialize the class; optional.
    /// </param>
    /// <param name="_serieSize">
    ///    A real value that holds the order size that applies for this calculation; optional.
    /// </param>
    /// <returns>
    ///    An instance of the <c>KanbanJobPickingListCreate</c> class.
    /// </returns>
    public static KanbanJobPickingListCreate newStandardFromKanban(
        KanbanJob _kanbanJob,
        Kanban    _kanban                 = _kanbanJob.kanban(),
        Qty       _serieSize              = _kanbanJob.QuantityOrdered)
    {
        KanbanJobPickingListCreate  kanbanJobPickingListCreate = KanbanJobPickingListCreate::construct();

        kanbanJobPickingListCreate.parmKanbanJob(_kanbanJob);
        kanbanJobPickingListCreate.parmKanban(_kanban);
        kanbanJobPickingListCreate.parmSerieSize(_serieSize);

        return kanbanJobPickingListCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS131655";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>