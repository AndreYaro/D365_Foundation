<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardBreakDownMarshallExecutor</Name>
	<SourceCode>
		<Declaration><![CDATA[
[CreditCardBreakDownExecutionModeAttribute(CreditCardBreakDownExecutionRunMode::MarshallingExecution)]
internal final class CreditCardBreakDownMarshallExecutor extends CreditCardAbsBreakDownExecutor implements ICreditCardBreakDownExecute
{
    private const str EntryPointName = 'run';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new()
    {
        super();
        backOffWait = this.generateBackoffWait();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static ICreditCardBreakDownExecute construct()
    {
        return new CreditCardBreakDownMarshallExecutor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeInternal</Name>
				<Source><![CDATA[
    internal protected CreditCardBreakDownExecutionResult executeInternal(ICreditCardBreakDownProcessRun _creditCardBreakDownProcessRunner)
    {
        boolean res = this.runWithMarshalingIntro(_creditCardBreakDownProcessRunner);

        return res ? CreditCardBreakDownExecutionResult::ApplicationExeuctionSucceed : CreditCardBreakDownExecutionResult::ApplicationExecutionFailed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runWithMarshalingIntro</Name>
				<Source><![CDATA[
    private boolean runWithMarshalingIntro(ICreditCardBreakDownProcessRun _creditCardBreakDownProcessRunner)
    {
        if (_creditCardBreakDownProcessRunner != null)
        {
            DictClass dictClass = new DictClass(classIdGet(_creditCardBreakDownProcessRunner));
            return dictClass.callObject(EntryPointName, _creditCardBreakDownProcessRunner);
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>