<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseInventoryTransactionFeatureSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWarehouseInventoryTransactionFeatureSetup</c> class makes sure "warehouse-specific inventory transactions"
/// feature gets all the proper default settings and registrations.
/// </summary>
[SysSetupTableAttribute(tableStr(WHSParameters))]
[SysSetupConfig(true, 300)]
internal final class WHSWarehouseInventoryTransactionFeatureSetup extends SysSetupAsync implements SysSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    public void loadData()
    {
        // For those customers who hasn't activated any scenarios yet, we want to make sure that the default cleanup setting is delete there archived reservation transactions.
        // If any scenario is activated, we assume customer has made a choice already and we should not change the setting behind the scenes.
        if (!WHSInventoryScenarioInventoryTransactionMechanism::anyScenarioUsesWarehouseSpecificInventoryTransactionsCrossCompany())
        {
            WHSWarehouseInventoryTransactionFeatureSetup::enableArchivedReservationTransactionsCleanupCrossCompany();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableArchivedReservationTransactionsCleanupCrossCompany</Name>
				<Source><![CDATA[
    private static void enableArchivedReservationTransactionsCleanupCrossCompany()
    {
        WHSParameters whsParameters;

        ttsbegin;

        while select forupdate crosscompany whsParameters
        {
            changecompany (whsParameters.DataAreaId)
            {
                whsParameters.CleanupArchivedWarehouseReservationTransactions = NoYes::Yes;
                whsParameters.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>