<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirPartyTableListExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DirPartyTableListExtension implements DirPartyTableListExtensible
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>registerPersonTableList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers tables for DirParty person tablelist.
    /// </summary>
    /// <param name="_personTableList">
    ///    The List that contains the person table list.
    /// </param>
    public void registerPersonTableList(Set _personTableList)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerPersonOrgTableList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers tables for DirParty personorganization tablelist.
    /// </summary>
    /// <param name="_personOrgTableList">
    ///    The List that contains the person organization table list.
    /// </param>
    public void registerPersonOrgTableList(Set _personOrgTableList)
    {
        _personOrgTableList.add(tableNum(CustTable));
        _personOrgTableList.add(tableNum(VendTable));
        _personOrgTableList.add(tableNum(smmBusRelTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerAddressBookRelatedTableList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers tables related to Address Book.
    /// </summary>
    /// <param name="_addressBookRelatedTablesList">
    ///    The List that contains tables related to Address Book.
    /// </param>
    public void registerAddressBookRelatedTableList(Set _addressBookRelatedTablesList)
    {
        _addressBookRelatedTablesList.add(tableNum(smmQuotationCompetitors));
        _addressBookRelatedTablesList.add(tableNum(smmQuotationCompetitorGroup));
        _addressBookRelatedTablesList.add(tableNum(smmLeadTable));
        _addressBookRelatedTablesList.add(tableNum(smmOpportunityTable));
        _addressBookRelatedTablesList.add(tableNum(smmBusRelSectorTable));
        _addressBookRelatedTablesList.add(tableNum(smmBusRelRevenue));
        _addressBookRelatedTablesList.add(tableNum(smmCampaignSelection));
        _addressBookRelatedTablesList.add(tableNum(smmCampaignSelectionResult));
        _addressBookRelatedTablesList.add(tableNum(smmTMCallListTable));
        _addressBookRelatedTablesList.add(tableNum(smmCampaignTempSelection));
        _addressBookRelatedTablesList.add(tableNum(smmEmailMembers));
        _addressBookRelatedTablesList.add(tableNum(smmMailings));
        _addressBookRelatedTablesList.add(tableNum(smmCampaignResponsesQuest));
        _addressBookRelatedTablesList.add(tableNum(smmTMContactResponses));
        _addressBookRelatedTablesList.add(tableNum(CaseDetailBase));
        _addressBookRelatedTablesList.add(tableNum(VendRequest));
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerExistingPartyMatchIconTableList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers tables to show Existing Party Match Icon.
    /// </summary>
    /// <param name="_toolTipList">
    ///    The Set that contains the tables to show Existing Party Match Icon.
    /// </param>
    public void registerExistingPartyMatchIconTableList(Set _partyMatchIconTableList)
    {
        _partyMatchIconTableList.add(tableNum(smmLeadTable));
        _partyMatchIconTableList.add(tableNum(smmOpportunityTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerTablePartyFieldId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers the party field ID of related tables.
    /// </summary>
    /// <param name="_partyFieldIdMap">
    ///    The Map that contains the related tables and their party field IDs.
    /// </param>
    public void registerTablePartyFieldId(Map _partyFieldIdMap)
    {
        _partyFieldIdMap.insert(tableNum(CustTable), fieldNum(CustTable, Party));
        _partyFieldIdMap.insert(tableNum(smmBusRelTable), fieldNum(smmBusRelTable, Party));
        _partyFieldIdMap.insert(tableNum(VendTable), fieldNum(VendTable, Party));
        _partyFieldIdMap.insert(tableNum(smmQuotationCompetitorGroup), fieldNum(smmQuotationCompetitorGroup, Party));
        _partyFieldIdMap.insert(tableNum(smmLeadTable), fieldNum(smmLeadTable, Party));
        _partyFieldIdMap.insert(tableNum(smmOpportunityTable), fieldNum(smmOpportunityTable, Party));
        _partyFieldIdMap.insert(tableNum(LedgerJournalTrans), fieldNum(LedgerJournalTrans, RecId));
        _partyFieldIdMap.insert(tableNum(VendTrans), fieldNum(VendTrans, RecId));
        _partyFieldIdMap.insert(tableNum(VendInvoiceInfoTable), fieldNum(VendInvoiceInfoTable, RecId));
        _partyFieldIdMap.insert(tableNum(VendDirPartyTableView), fieldNum(VendDirPartyTableView, Party));

        // <GIN>
        #ISOCountryRegionCodes

        _partyFieldIdMap.insert(tableNum(InventSite), SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) && fieldNum(InventSite, RecId));
        _partyFieldIdMap.insert(tableNum(InventTransferTable), SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) && fieldNum(InventTransferTable, RecId));
        _partyFieldIdMap.insert(tableNum(InventLocation), SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) && fieldNum(InventLocation, RecId));
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerCanDeleteTablePartyFieldId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers the party field ID of related tables for DirParty::CanDeleteParty() method.
    /// </summary>
    /// <param name="_canDeletePartyFieldIdMap">
    ///    The Map that contains the related tables and their party field IDs for DirParty::CanDeleteParty() method.
    /// </param>
    public void registerCanDeleteTablePartyFieldId(Map _canDeletePartyFieldIdMap)
    {
        _canDeletePartyFieldIdMap.insert(tableNum(VendRequest), fieldNum(VendRequest, VendParty));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCanDeletePartyExtensionList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an extension to the list of can delete party tables based on type.
    /// </summary>
    /// <param name="partyType">
    ///    The DirPartyType of tables to be returned.
    /// </param>
    public container getCanDeletePartyExtensionList(DirPartyType partyType)
    {
        container extList;

        if (this.isOMEntityPartyType(partyType))
        {
            Set entitiesExtensionList = new Set(Types::Integer);
            this.registerOMEntitiesExtensionList(entitiesExtensionList);
            extList += condel(entitiesExtensionList.pack(),1,3);
        }

        return extList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOMEntityPartyType</Name>
				<Source><![CDATA[
    private boolean isOMEntityPartyType(DirPartyType _partyType)
    {
        boolean ret;

        ret = _partyType == DirPartyType::LegalEntity
                || _partyType == DirPartyType::OperatingUnit
                || _partyType == DirPartyType::Team;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerOMEntitiesExtensionList</Name>
				<Source><![CDATA[
    private void registerOMEntitiesExtensionList(Set _entitiesExtensionList)
    {
        _entitiesExtensionList.add(tableNum(CustTable));
        _entitiesExtensionList.add(tableNum(VendTable));
        _entitiesExtensionList.add(tableNum(smmBusRelTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerExtension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Event handler for the registerExtensionDelegate delegate on DirPartyExtensibilityHelper class.
    /// </summary>
    /// <param name="_helper">
    ///    The DirPartyExtensibilityHelper instance to register the extension with. Extension class
    ///    should call the registerExtension method on it.
    /// </param>
    [SubscribesTo(classstr(DirPartyExtensibilityHelper), delegatestr(DirPartyExtensibilityHelper, registerExtensionDelegate))]
    static void registerExtension(DirPartyExtensibilityHelper _helper)
    {
        DirPartyTableListExtension extension = new DirPartyTableListExtension();
        _helper.registerTableListExtension(extension);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>