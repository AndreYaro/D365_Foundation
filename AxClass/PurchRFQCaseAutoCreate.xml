<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQCaseAutoCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class PurchRFQCaseAutoCreate
{
    Common              buffer;
    Object              callBackObject;
    PurchRFQCaseTable   purchRFQCaseTable;
    PurchRFQCaseLine    purchRFQCaseLine;
    PurchRFQVendLink    purchRFQVendLink;
    LineNum             lineNum;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcRFQHeaderValues</Name>
				<Source><![CDATA[
    protected void calcRFQHeaderValues()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public void create()
    {
        SysInfoAction_MenuFunction sysInfoAction;

        ttsbegin;
        this.calcRFQHeaderValues();

        this.setPurchRFQCaseTable();
        this.createPurchRFQCaseTable();

        while (this.moveNextLine())
        {
            this.setPurchRFQCaseLine();
            this.createPurchRFQCaseLine();
        }
        
        if (PurchRFQCaseAutoCreateUpdateHeaderStatusPerLineFlight::instance().isEnabled())
        {
            purchRFQCaseTable.updateStatus();
        }

        while (this.moveNextVendor())
        {
            this.setPurchRFQVendLink();
            this.createPurchRFQVendlink();
        }
        this.endUpdate();
        ttscommit;
        if (this.showInfo())
        {
            sysInfoAction = SysInfoAction_MenuFunction::newMenuItem(menuitemDisplayStr(PurchRFQCaseTable),MenuItemType::Display);
            sysInfoAction.parmCallerBuffer(purchRFQCaseTable);
            info (strfmt("@SYS107925", purchRFQCaseTable.rfqCaseId),'', sysInfoAction);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchRFQCaseLine</Name>
				<Source><![CDATA[
    protected void createPurchRFQCaseLine()
    {
        if (PurchRFQCaseAutoCreateUpdateHeaderStatusPerLineFlight::instance().isEnabled())
        {
            purchRFQCaseLine.insert(false, false);
        }
        else
        {
            purchRFQCaseLine.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchRFQCaseTable</Name>
				<Source><![CDATA[
    protected void createPurchRFQCaseTable()
    {
        purchRFQCaseTable.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchRFQVendlink</Name>
				<Source><![CDATA[
    protected void createPurchRFQVendlink()
    {
        purchRFQVendLink.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>endUpdate</Name>
				<Source><![CDATA[
    protected void endUpdate()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEmptyBuffer</Name>
				<Source><![CDATA[
    public boolean isEmptyBuffer()
    {
        select firstonly RecId from buffer;
        return (buffer.RecId == 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNextLine</Name>
				<Source><![CDATA[
    abstract protected boolean moveNextLine()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNextVendor</Name>
				<Source><![CDATA[
    abstract protected boolean moveNextVendor()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    abstract public Common parmBuffer(Common _buffer = buffer)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallBackObject</Name>
				<Source><![CDATA[
    public Object parmCallBackObject(Object _callBackObject = callBackObject)
    {
        callBackObject = _callBackObject;
        return callBackObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRFQType</Name>
				<Source><![CDATA[
    abstract protected PurchRFQType purchRFQType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchRFQCaseLine</Name>
				<Source><![CDATA[
    protected void setPurchRFQCaseLine()
    {
        lineNum++;
        purchRFQCaseLine.clear();
        purchRFQCaseLine.initValue();
        purchRFQCaseLine.initFromPurchRFQCaseTable(purchRFQCaseTable);
        purchRFQCaseLine.LineNum = lineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchRFQCaseTable</Name>
				<Source><![CDATA[
    protected void setPurchRFQCaseTable()
    {
        NumberSeq       num;
        PurchRFQCaseId  tmpRFQCaseId;
        lineNum = 0;

        purchRFQCaseTable.clear();
        purchRFQCaseTable.initValue();

        num = NumberSeq::newGetNum(PurchParameters::numRefPurchRFQCaseId());
        tmpRFQCaseId = num.num();

        if (PurchRFQCaseTable::exist(tmpRFQCaseId))
        {
            num.abort();
            checkFailed("@SYS107926");
            checkFailed(strfmt("@SYS107927", tmpRFQCaseId));
            throw error("@SYS23020");
        }

        purchRFQCaseTable.rfqCaseId = tmpRFQCaseId;
        num.used();
        purchRFQCaseTable.rfqType = this.purchRFQType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchRFQVendLink</Name>
				<Source><![CDATA[
    protected void setPurchRFQVendLink()
    {
        purchRFQVendLink.clear();
        purchRFQVendLink.initValue();
        purchRFQVendLink.rfqCaseId = purchRFQCaseTable.rfqCaseId;
        purchRFQVendLink.initFromVendTable(VendTable::find(this.vendAccount()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>showInfo</Name>
				<Source><![CDATA[
    protected boolean showInfo()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendAccount</Name>
				<Source><![CDATA[
    abstract protected VendAccount vendAccount()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAutoCreate</Name>
				<Source><![CDATA[
    static PurchRFQCaseAutoCreate newAutoCreate(Common _buffer, Object _callBackObject = null)
    {

        SysTableNameFactoryAttribute    attribute               = new SysTableNameFactoryAttribute(tableId2Name(_buffer.TableId));
        PurchRFQCaseAutoCreate          purchRFQCaseAutoCreate  = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(PurchRFQCaseAutoCreate), attribute) as PurchRFQCaseAutoCreate;

        if (!purchRFQCaseAutoCreate)
        {
            throw error(strfmt("@SYS19306",funcname()));
        }

        purchRFQCaseAutoCreate.parmBuffer(_buffer);
        purchRFQCaseAutoCreate.parmCallBackObject(_callBackObject);
        return purchRFQCaseAutoCreate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>