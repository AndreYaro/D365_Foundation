<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleCFM</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>NumberSeqModuleCFM</c> class is the number sequence module for cashflow management.
/// </summary>
class NumberSeqModuleCFM extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
/*
Detailed description of how to setup references for number sequences can
be found in method loadModule() on the 'father' class: NumberSeqApplicationModule.
*/
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();
        datatype.parmDatatypeId(extendedTypeNum(CFMPaymentRequestId));
        datatype.parmReferenceHelp(literalStr("@CashFlowManagement:UniqueKeyForPaymentRequestIdentification"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);
        datatype.parmConfigurationKeyId(configurationKeyNum(CFMPaymentRequests));
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);

        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CFMJournalId));
        datatype.parmReferenceHelp(literalStr("@CashFlowManagement:UniqueKeyForPaymSchedJourIdentification"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(2);
        datatype.parmConfigurationKeyId(configurationKeyNum(CFMCashflowManagement));
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);

        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Cashflow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleCFM), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>