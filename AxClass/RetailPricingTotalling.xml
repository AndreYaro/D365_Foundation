<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPricingTotalling</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The Channel pricing totaling helper, used to calculate tender discounts.
/// </summary>
class RetailPricingTotalling implements  Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingTransactionTotalingHelper
{
    private SalesTable salesTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>RetailPricingTotalling</c> class.
    /// </summary>
    /// <param name="requestContext">Commerce runtime request context.</param>
    public void new(salesTable _salesTable)
    {
        salesTable = _salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>CalculateTransactionTotals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate transaction totals.
    /// </summary>
    /// <param name="transaction">Transaction to calculate totals.</param>
    /// <returns>The <c>RetailPricingTotalling</c> class.</returns>
    public Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TransactionTotals CalculateTransactionTotals(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction _transaction)
    {
        Amount totalAmount;

        SalesTotals salesTotals = RetailSalesTotals_CrtSales::construct(salesTable, _transaction);

        salesTotals.calc();
        totalAmount = salesTotals.totalAmount();

        Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TransactionTotals totals = 
            new Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TransactionTotals();

        totals.TotalAmount = totalAmount;

        return totals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>CalculateTransactionAmountDue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates curent amount due for sales
    /// </summary>
    /// <param name = "_salesTable">The <c>SalesTable</c> record</param>
    /// <param name = "_transaction">The CRT transaction</param>
    /// <returns></returns>
    public static Amount CalculateTransactionAmountDue(SalesTable _salesTable, Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction _transaction)
    {
        SalesTotals salesTotals = RetailSalesTotals_CrtSales::construct(_salesTable, _transaction);

        salesTotals.calc();
        Amount totalAmount = salesTotals.totalAmount();

        MCRCustPaymTable custPaymTable;

        select sum(Amount) from custPaymTable
            where custPaymTable.RefTableId == _salesTable.TableId
                  && custPaymTable.RefRecId == _salesTable.RecId;

        return totalAmount - custPaymTable.Amount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>