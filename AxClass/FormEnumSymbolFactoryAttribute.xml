<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormEnumSymbolFactoryAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FormEnumSymbolFactoryAttribute</c> is an attribute used for instantiating enum symbol dependent classes.
/// </summary>
class FormEnumSymbolFactoryAttribute extends SysAttribute implements SysExtensionIAttribute

{
    EnumName        enumName;
    IdentifierName  enumSymbol;   

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(EnumName _enumName, IdentifierName _enumSymbol)
    {
        super();
        
        enumName = _enumName;
        enumSymbol = _enumSymbol;

    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnumName</Name>
				<Source><![CDATA[
    public EnumName parmEnumName()
    {
        return enumName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnumSymbol</Name>
				<Source><![CDATA[
    public IdentifierName parmEnumSymbol()
    {
        return enumSymbol;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCacheKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the key used for storing cached data for this attribute.
    /// </summary>
    /// <returns>
    /// A string representing the cache key.
    /// </returns>
    public str parmCacheKey()
    {
        return classStr(FormEnumSymbolFactoryAttribute)+';'+enumName+';'+enumSymbol;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSingleton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the same instance should be returned by the extension framework for a given extension.
    /// </summary>
    /// <returns>
    /// true, if the same instance should be used; otherwise, false.
    /// </returns>
    public boolean useSingleton()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>