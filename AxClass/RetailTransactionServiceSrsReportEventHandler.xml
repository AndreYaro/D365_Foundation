<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionServiceSrsReportEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailTransactionServiceSrsReportEventHandler</c> is used to subscribe to report events.
/// </summary>
public static class RetailTransactionServiceSrsReportEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>toSendFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to delegate for sending binary report to file.
    /// </summary>
    /// <param name = "reportBytes">A binary representation of the report from SSRS.</param>
    /// <param name = "printer">The <c>SrsReportRunPrinter</c> instance that contains print settings.</param>
    /// <param name = "dataContract">The <c>SrsReportDataContract</c> instance for printing.</param>
    /// <param name = "paramArray">The parameter array for report execution.</param>
    /// <param name = "result">The handler result for file printing process.</param>
    [SubscribesTo(classStr(SRSPrintDestinationSettingsDelegates), delegateStr(SRSPrintDestinationSettingsDelegates, toSendFile))]
    public static void toSendFile(
        System.Byte[] reportBytes,
        SrsReportRunPrinter printer,
        SrsReportDataContract dataContract,
        Microsoft.Dynamics.AX.Framework.Reporting.Shared.ReportingService.ParameterValue[] paramArray,
        EventHandlerResult result)
    {
        if (dataContract is RetailTransactionServiceSrsReportDataContract)
        {
            RetailTransactionServiceSrsReportDataContract retailDataContract = dataContract as RetailTransactionServiceSrsReportDataContract;
            retailDataContract.parmReportBytes(reportBytes);

            result.result(false); // Stop further processing of report
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>