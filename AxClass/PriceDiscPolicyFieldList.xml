<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscPolicyFieldList</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PriceDiscPolicyFieldList</c> class represents a list of <c>PriceDiscPolicyField</c> objects.
/// </summary>
final class PriceDiscPolicyFieldList
{
    private Map policyFieldList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        policyFieldList = new Map(Types::Int64, Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPolicyField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a policy field to the list.
    /// </summary>
    /// <param name = "_policyField">
    /// A <c>PriceDiscPolicyField</c> object to add.
    /// </param>
    [Hookable(false)]
    final public void addPolicyField(PriceDiscPolicyField _policyField)
    {
        policyFieldList.insert(_policyField.parmPolicyFieldListEntry(), _policyField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>removePolicyField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes a policy field from the list.
    /// </summary>
    /// <param name = "_policyField">
    /// A <c>PriceDiscPolicyField</c> object to remove.
    /// </param>
    /// <returns>
    /// true if the policy existed in the list and was removed; otherwise, false.
    /// </returns>
    [Hookable(false)]
    final public boolean removePolicyField(PriceDiscPolicyField _policyField)
    {
        return policyFieldList.remove(_policyField.parmPolicyFieldListEntry());
    }

]]></Source>
			</Method>
			<Method>
				<Name>policyFieldListElements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the amount of policy field elements in the list.
    /// </summary>
    /// <returns>
    /// The calculated amount.
    /// </returns>
    [Hookable(false)]
    final public int policyFieldListElements()
    {
        return policyFieldList.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>policyFieldExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a policy field exists in the list.
    /// </summary>
    /// <param name = "_policyField">
    /// A <c>PriceDiscPolicyField</c> object the determine the existance of.
    /// </param>
    /// <returns>
    /// true if the policy field exists in the list; otherwise, false.
    /// </returns>
    [Hookable(false)]
    final public boolean policyFieldExists(PriceDiscPolicyField _policyField)
    {
        return policyFieldList.exists(_policyField.parmPolicyFieldListEntry());
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateSearchKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates a search key from the list of policy fields.
    /// </summary>
    /// <returns>
    /// THe calculated search key.
    /// </returns>
    [Hookable(false)]
    final public int calculateSearchKey()
    {
        container       sortedFields;
        MapEnumerator   mapEnumerator = policyFieldList.getEnumerator();
        
        while (mapEnumerator.moveNext())
        {
            sortedFields += mapEnumerator.currentKey();
        }

        return str2HashKey(con2Str(sortedFields, ','));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPriceDiscResultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a policy field from the <c>PriceDiscResultsField</c> policy table map.
    /// </summary>
    /// <param name = "_tableMapFieldId">
    /// A field id from the <c>PriceDiscResultsField</c> policy table map.
    /// </param>
    [Hookable(false)]
    public void addPriceDiscResultField(FieldId _tableMapFieldId)
    {
        this.addPolicyField(PriceDiscPolicyField::newPriceDiscResultsField(_tableMapFieldId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an <c>Enumerator</c> object to enumerator the policy fields in the list.
    /// </summary>
    /// <returns>
    /// The enumerator object.
    /// </returns>
    [Hookable(false)]
    public Enumerator getEnumerator()
    {
        List list = new List(policyFieldList.valueType());

        MapEnumerator enumerator = policyFieldList.getEnumerator();

        while(enumerator.moveNext())
        {
            list.addEnd(enumerator.currentValue());
        }

        return list.getEnumerator() as Enumerator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new list.
    /// </summary>
    /// <returns>
    /// The instantiated <c>PriceDiscPolicyFieldList</c> object.
    /// </returns>
    [Hookable(false)]
    static public PriceDiscPolicyFieldList newList()
    {
        return new PriceDiscPolicyFieldList();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>