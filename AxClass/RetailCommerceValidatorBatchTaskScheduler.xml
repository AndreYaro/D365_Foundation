<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCommerceValidatorBatchTaskScheduler</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCommerceValidatorBatchTaskScheduler extends RunBaseBatch
{
    RetailCommerceValidatorId validationId;
    NoYes isAutomatedRun;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        validationId,
        isAutomatedRun
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a new instance of <c>RetailCommerceValidatorBatchTaskScheduler</c> class.
    /// </summary>
    public void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes the current instance of the <c>RetailCommerceValidatorBatchTaskScheduler</c> class.
    /// </summary>
    /// <returns>A container that contains the current instance of <c>RetailCommerceValidatorBatchTaskScheduler</c>.</returns>
    public container pack()
    {
        container ret;

        ret = [#CurrentVersion,#CurrentList];

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deserializes the <paramref name="_packedClass"/> parameter to the current instance of <c>RetailCommerceValidatorBatchTaskScheduler</c>.
    /// </summary>
    /// <param name = "packedClass">The container from which to deserialize the instance.</param>
    /// <returns>true if deserialization was successful; otherwise, false.</returns>
    public boolean unpack(container packedClass)
    {
        Version version = RunBase::getVersion(packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = packedClass;
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the batch task is run on the server or on a client.
    /// </summary>
    /// <returns>
    ///    true if the task is run on the server; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    Your classes that extend <c>RunBaseBatch</c> must override the <c>runsImpersonated</c> method and
    ///    return false, if you want those tasks to run on a client.
    /// </remarks>
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the input parameter Validation Id.
    /// </summary>
    /// <param name = "_validationId">The Validation Id.</param>
    /// <returns>The validation Id.</returns>
    public RetailCommerceValidatorId parmValidationId(RetailCommerceValidatorId _validationId = validationId)
    {
        validationId = _validationId;

        return validationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsAutomatedRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the input parameter indicating whether this is a automated run.
    /// </summary>
    /// <param name = "_isAutomatedRun">A boolean value indicating whether this is a automated run.</param>
    /// <returns>The boolean value indicating whether this is a automated run.</returns>
    public NoYes parmIsAutomatedRun(NoYes _isAutomatedRun = isAutomatedRun)
    {
        isAutomatedRun = _isAutomatedRun;

        return isAutomatedRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides class description.
    /// </summary>
    /// <returns>The <c>ClassDescription</c>.</returns>
    public static ClassDescription description()
    {
        return "@Retail:RetailCommerceValidatorBatchTaskDescription";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value for the parameter <c>canRunInNewSession</c> indicating if the Job can run in a new session.
    /// </summary>
    /// <returns>A boolean indicating when the job can run in a new session.</returns>
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes a validation test.
    /// </summary>
    public void run()
    {
        RetailCommerceValidator retailCommerceValidator = RetailCommerceValidator::find(validationId);
        BatchHeader batchHeader = batchHeader::construct(retailCommerceValidator.CurrentBatchJobId);

        // Create Functional tests
        RetailCommerceValidatorTests::createFunctionalTestsWithAutomatedRun(validationId, isAutomatedRun);

        // Schedule Functional Tests
        RetailCommerceValidatorScheduler::scheduleFunctionalTasks(validationId, batchHeader);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>