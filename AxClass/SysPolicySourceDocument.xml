<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysPolicySourceDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
class SysPolicySourceDocument extends RunBaseBatch
{
    RefRecId                        policyIndex;
    SysPolicySourceDocumentRule     policySourceDocumentRule;
    RefRecId                        policyRuleTypeIndex;
    recId                           recId;
    SysPolicySourceDocumentRule     sysPolicySourceDocumentRule;
    SysQueryRun                     queryRun;
    str                             sourceDocumentRuleQuery;
    utcdatetime                     validToDate;
    utcdatetime                     validFromDate;
    SysPolicyDescription            policydescription;
    SysPolicyDescription            policyMessage;
    Args                            args;

    boolean                         isView;
    boolean                         existingInheritedValue;
    boolean                         isNewRecord;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns false
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    /// <remarks>
    /// This method must be in this class because it is called from the <c>dialogRunbase</c> class.
    /// </remarks>
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    /// in the Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        DialogRunbase   dialog = Dialog::newFormnameRunbase(formstr(SysPolicySourceDocumentRule),this);

        dialog = this.dialogInternal(dialog);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>Args</c> object.
    /// </summary>
    /// <returns>
    /// The <c>Args</c> object.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Args getArgs()
    {
        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeBuffers</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method initializes table buffers based on the <c>args</c> parameter provided by the caller.
    /// </summary>
    /// <param name="_policyArgs">
    /// Args from the caller Menu Item
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initializeBuffers(Args _policyArgs)
    {
        RefRecId   policyType;
        args = _policyArgs;

        this.parmPolicyRuleTypeIndex(str2int64(args.parm()));

        if (args.record())
        {
            policySourceDocumentRule = SysPolicySourceDocumentRule::find(args.record().RecId,true);
        }

        if (args.caller().getPolicyIndex())
        {
            policyIndex = args.caller().getPolicyIndex();
        }

        if (!policySourceDocumentRule)
        {
            //NEW RECORD
            policySourceDocumentRule.Policy = policyIndex;
            args.record(policySourceDocumentRule);
        }
        else
        {
            sysPolicySourceDocumentRule = policySourceDocumentRule ;
            existingInheritedValue = sysPolicySourceDocumentRule.IsInherited;
        }

        recId = policySourceDocumentRule.RecId;

        this.initQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a query instance on the <c>SysPolicySourceDocument</c> dialog class.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void initQuery()
    {
        SysPolicySourceDocumentRuleType policySourceDocumentRuleType;
        SysPolicyTypeSourceDocumentQuery policyTypeQuery;
        Query   query;

        if (!policySourceDocumentRule)
        {
            policySourceDocumentRuleType = SysPolicySourceDocumentRuleType::find(this.parmPolicyRuleTypeIndex());
            policyTypeQuery = SysPolicyTypeSourceDocumentQuery::find(policySourceDocumentRuleType.PolicyTypeSourceDocumentQuery);

            query = new Query(policyTypeQuery.QueryName);

            if (query)
            {
                queryRun = new SysQueryRun(query);
            }
        }
        else
        {
            policySourceDocumentRuleType = SysPolicySourceDocumentRuleType::find(this.parmPolicyRuleTypeIndex());
            if (SysQuery::isPackedOk(policySourceDocumentRule.QueryPacked))
            {
                queryRun = new SysQueryRun(policySourceDocumentRule.QueryPacked);
            }
        }

        if (queryRun)
        {
            queryRun.title(policySourceDocumentRuleType.Name);
            queryRun.promptAllowSave(false);
            queryRun.promptSaveQueryPrUser(false);
            queryRun.promptLoadLastUsedQuery(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsNewRecord</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmIsNewRecord(boolean _isNewRecord = isNewRecord)
    {
        if (!prmisdefault(_isNewRecord))
        {
            isNewRecord = _isNewRecord;
        }

        return isNewRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsView</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmIsView(boolean _isView = isView)
    {
        if (!prmisdefault(_isView))
        {
            isView = _isView;
        }

        return isView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPolicyRuleTypeIndex</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public recId parmPolicyRuleTypeIndex(recId _policyRuleTypeIndex = policyRuleTypeIndex)
    {
        if (!prmisdefault(_policyRuleTypeIndex))
        {
            policyRuleTypeIndex = _policyRuleTypeIndex;
        }

        return policyRuleTypeIndex;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public recId parmRecId(recId _recId = recId)
    {
        if (!prmisdefault(_recId))
        {
            recId = _recId;
        }

        return recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentRuleQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmSourceDocumentRuleQuery(str _sourceDocumentRuleQuery = sourceDocumentRuleQuery)
    {
        if (!prmisdefault(_sourceDocumentRuleQuery))
        {
            sourceDocumentRuleQuery = _sourceDocumentRuleQuery;
        }

        return sourceDocumentRuleQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryrun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the instance of the <c>QueryRun</c> class, which is used by the <c>queryPrompt</c> method.
    /// </summary>
    /// <returns>
    /// The instance of the <c>QueryRun</c> class, which is used by the <c>queryPrompt</c> method.
    /// </returns>
    /// <remarks>
    /// This method is used if a query prompt is the dialog, and if a Select menu item is added to a
    /// dialog. Do not create the instance of the <c>QueryRun</c> class when this method is called. Do it
    /// in the <c>unpack</c> method and the <c>initParmDefault</c> method, or in the <c>init</c> method.
    /// </remarks>
    QueryRun queryrun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the batch job will be run with the account of the user that created the job.
    /// </summary>
    /// <returns>
    /// true if the batch job is run on the AOS server as the submitting user account; false, if the batch
    /// job will be executed on the client.
    /// </returns>
    /// <remarks>
    /// If you want a batch job that extends this class to run on a client, you must override this method
    /// to return false. Jobs that return true must not access any client-side functionality. If true is
    /// returned, the batch server will execute the job by using the <c>runAs</c> method.
    /// </remarks>
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether to add a select button to the dialog.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// If you click this button, it will show the query form. Therefore, the <c>queryRun</c> method has to
    /// return a valid <c>queryRun</c> class.If you change the return value to false the button will no
    /// longer be added.
    /// </remarks>
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static SysPolicySourceDocument construct()
    {
        return new SysPolicySourceDocument();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        SysPolicySourceDocument   sysPolicySourceDocument = SysPolicySourceDocument::construct();

        sysPolicySourceDocument.initializeBuffers(args);

        if (args.caller().name() == formstr(VendInvoiceViolation))
        {
            sysPolicySourceDocument.parmIsView(true);
        }

        if (sysPolicySourceDocument.prompt())
        {
            sysPolicySourceDocument.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>