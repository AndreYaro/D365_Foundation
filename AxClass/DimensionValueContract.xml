<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionValueContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>DimensionValueContract</c> class is the data contract class for the
///    <c>DimensionValueService</c> service.
/// </summary>
/// <remarks>
///    This is the data contract class for the <c>DimensionValueService</c> service.
/// </remarks>
[DataContractAttribute]
public class DimensionValueContract
{
    NoYes                   isBlockedForManualEntry;
    Name                    dimensionAttribute;
    RefTableId              backingEntityType;
    DimensionExt            groupDimension;
    DimensionActiveTo       activeTo;
    DimensionActiveFrom     activeFrom;
    NoYes                   isSuspended;
    Description             description;
    str                     value;
    HcmPersonnelNumberId    hcmPersonnelNumber;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmActiveFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter activeFrom.
    /// </summary>
    /// <param name="_activeFrom">
    /// The new value of the datacontract parameter activeFrom; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter activeFrom
    /// </returns>
    [DataMemberAttribute]
    public DimensionActiveFrom parmActiveFrom(DimensionActiveFrom _activeFrom = activeFrom)
    {
        activeFrom = _activeFrom;
        return activeFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActiveTo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter activeTo.
    /// </summary>
    /// <param name="_activeTo">
    /// The new value of the datacontract parameter activeTo; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter activeTo
    /// </returns>
    [DataMemberAttribute]
    public DimensionActiveTo parmActiveTo(DimensionActiveTo _activeTo = activeTo)
    {
        activeTo = _activeTo;
        return activeTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBackingEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter value.
    /// </summary>
    /// <param name="_backingEntityType">
    /// The new value of the datacontract parameter value; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter value
    /// </returns>
    [DataMemberAttribute]
    public RefTableId parmBackingEntityType(RefTableId _backingEntityType = backingEntityType)
    {
        backingEntityType = _backingEntityType;
        return backingEntityType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter description.
    /// </summary>
    /// <param name="_description">
    /// The new value of the datacontract parameter description; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter description
    /// </returns>
    [DataMemberAttribute]
    public Description parmDescription(Description _description = description)
    {
        description = _description;
        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter dimensionAttribute.
    /// </summary>
    /// <param name="_dimensionAttribute">
    /// The new value of the datacontract parameter dimensionAttribute; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter dimensionAttribute
    /// </returns>
    [DataMemberAttribute]
    public Name parmDimensionAttribute(Name _dimensionAttribute = dimensionAttribute)
    {
        dimensionAttribute = _dimensionAttribute;
        return dimensionAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter groupDimension.
    /// </summary>
    /// <param name="_groupDimension">
    /// The new value of the datacontract parameter groupDimension; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter groupDimension
    /// </returns>
    [DataMemberAttribute]
    public DimensionExt parmGroupDimension(DimensionExt _groupDimension = groupDimension)
    {
        groupDimension = _groupDimension;
        return groupDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsBlockedForManualEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter isBlockedForManualEntry.
    /// </summary>
    /// <param name="_isBlockedForManualEntry">
    /// The new value of the datacontract parameter isBlockedForManualEntry; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter isBlockedForManualEntry
    /// </returns>
    [DataMemberAttribute]
    public NoYes parmIsBlockedForManualEntry(NoYes _isBlockedForManualEntry = isBlockedForManualEntry)
    {
        isBlockedForManualEntry = _isBlockedForManualEntry;
        return isBlockedForManualEntry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsSuspended</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter isSuspended.
    /// </summary>
    /// <param name="_isSuspended">
    /// The new value of the datacontract parameter isSuspended; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter isSuspended
    /// </returns>
    [DataMemberAttribute]
    public NoYes parmIsSuspended(NoYes _isSuspended = isSuspended)
    {
        isSuspended = _isSuspended;
        return isSuspended;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPersonnelNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter hcmPersonnelNumber.
    /// </summary>
    /// <param name="_hcmPersonnelNumber">
    /// The new value of the datacontract parameter hcmPersonnelNumber; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter hcmPersonnelNumber
    /// </returns>
    [DataMemberAttribute]
    public HcmPersonnelNumberId parmPersonnelNumber(HcmPersonnelNumberId _hcmPersonnelNumber = hcmPersonnelNumber)
    {
        hcmPersonnelNumber = _hcmPersonnelNumber;
        return hcmPersonnelNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter value.
    /// </summary>
    /// <param name="_value">
    /// The new value of the datacontract parameter value; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter value
    /// </returns>
    [DataMemberAttribute]
    public str parmValue(str _value = value)
    {
        value = _value;
        return value;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>