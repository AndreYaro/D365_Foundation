<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceCFDIUpdateStatusDataContract_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceCFDIUpdateStatusDataContract_MX</c> class is the data contract class for the updating CFDI electronic invoices process.
/// </summary>
[DataContract]
[SysOperationContractProcessing(classStr(EInvoiceCFDIUpdateStatusUIBuilder_MX))]
internal final class EInvoiceCFDIUpdateStatusDataContract_MX implements SysOperationInitializable, SysOperationValidatable
{
    private EInvoiceCFDIStatus_MX cfdiStatusTo;
    private EInvoiceCFDIMessageStatus_MX cfdiMessageStatusTo;
    private Query eInvoicesQuery;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmCFDIStatusTo</Name>
				<Source><![CDATA[
    [DataMember, SysOperationLabel(literalStr("@MexicoCFDI:ToStatus")), SysOperationDisplayOrder('1')]
    public EInvoiceCFDIStatus_MX parmCFDIStatusTo(EInvoiceCFDIStatus_MX _cfdiStatusTo = cfdiStatusTo)
    {
        cfdiStatusTo = _cfdiStatusTo;
        return cfdiStatusTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCFDIMessageStatusTo</Name>
				<Source><![CDATA[
    [DataMember, SysOperationLabel(literalStr("@MexicoCFDI:ToMessageStatus")), SysOperationDisplayOrder('2')]
    public EInvoiceCFDIMessageStatus_MX parmCFDIMessageStatusTo(EInvoiceCFDIMessageStatus_MX _cfdiMessageStatusTo = cfdiMessageStatusTo)
    {
        cfdiMessageStatusTo = _cfdiMessageStatusTo;
        return cfdiMessageStatusTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEInvoicesQuery</Name>
				<Source><![CDATA[
    [DataMember, SysOperationDisplayOrder('3')]
    public Query parmEInvoicesQuery(Query _eInvoicesQuery = eInvoicesQuery)
    {
        eInvoicesQuery = _eInvoicesQuery;
        return eInvoicesQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    public void initialize()
    {
        cfdiStatusTo = EInvoiceCFDIStatus_MX::Canceled;
        cfdiMessageStatusTo = EInvoiceCFDIMessageStatus_MX::Processed;

        eInvoicesQuery = new Query();
        QueryBuildDataSource qbds = eInvoicesQuery.addDataSource(tableNum(EInvoiceJour_MX));
        QueryBuildRange qbr = qbds.addRange(fieldNum(EInvoiceJour_MX, CFDIStatus));
        qbr.value(queryValue(EInvoiceCFDIStatus_MX::InProcess));
        qbr.status(RangeStatus::Locked);
        qbds.addRange(fieldNum(EInvoiceJour_MX, CFDIDocType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean ret = true;

        QueryRun qr = new QueryRun(eInvoicesQuery);
        int eInvoicesToUpdateQty = qr.query().dataSourceCount() > 1 ? SysQuery::countLoops(qr) : SysQuery::countTotal(qr);

        if (Box::yesNo(strFmt("@MexicoCFDI:YouAreGoingToUpdateStatusForEInvoices", eInvoicesToUpdateQty), DialogButton::Yes) == DialogButton::No)
        {
            ret = checkFailed("@SYS319214");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>