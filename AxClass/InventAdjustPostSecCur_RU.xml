<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAdjustPostSecCur_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
[InventTransCurrencyAdjPostFactoryAttribute(InventTransCurrency_RU::SecondaryCur)]
final class InventAdjustPostSecCur_RU extends InventAdjustPost
{
    DimensionDefault       defaultDimension;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addLedger</Name>
				<Source><![CDATA[
    void addLedger(
        LedgerVoucher                   _ledgerVoucher,
        LedgerPostingType               _ledgerPostingType,
        LedgerDimensionAccount          _ledgerAccount,
        DimensionDefault                _dimension,
        CostAmount                      _costAmountAdjustmentCur,
        ProjLedger                      _projLedger                 = null,
        RecId                           _recId                      = 0,
        CostAmount                      _costAmountAdjustmentMST_RU = 0.0,
        NoYes                           _correct_RU                 = false
        )
    {
        LedgerVoucherTransObject ledgerVoucherTransObject = LedgerVoucherTransObject::newBasicSecondary_RU(
                                                                         _ledgerVoucher.findOrCreateReferenceSecCur_RU(),
                                                                         _ledgerPostingType,
                                                                         LedgerDimensionFacade::serviceCreateLedgerDimension(_ledgerAccount, _dimension, this.parmDefaultDimension()),
                                                                         currencyCode,
                                                                         _costAmountAdjustmentCur,
                                                                         correct);

        ledgerVoucherTransObject.parmProjLedger(_projLedger);
        ledgerVoucherTransObject.parmRecId(_recId);

        if (!prmisDefault(_correct_RU))
        {
            ledgerVoucherTransObject.parmCorrect(_correct_RU);
        }

        if (_ledgerVoucher.parmReversal()
            && FeatureStateProvider::isFeatureEnabled(ApplyFixedDimensionsToReversalInventAdjustPostTransFeature_RU::instance()))
        {
            ledgerVoucherTransObject.parmGeneralJournalAccountEntry().applyFixedDimensions();
        }

        _ledgerVoucher.addTrans(ledgerVoucherTransObject);
        _ledgerVoucher.restoreReferenceSecCur_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransCurrency_RU</Name>
				<Source><![CDATA[
    protected InventTransCurrency_RU inventTransCurrency_RU()
    {
        return InventTransCurrency_RU::SecondaryCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = defaultDimension)
    {
        defaultDimension = _defaultDimension;
        return defaultDimension;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>