<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesLineSalesPurchLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesLineSalesPurchLine</c> class contains <c>SalesLine</c> table specific functionality and mapped fields
/// related to the <c>SalesPurchLine</c> table map.
/// </summary>
[SalesPurchLineInterfaceFactory(tableStr(SalesLine))]
class SalesLineSalesPurchLine extends SalesPurchLineInterface
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSalesLine</Name>
				<Source><![CDATA[
    protected SalesLine parmSalesLine()
    {
        return this.parmSalesPurchLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public LineNum parmLineNum()
    {
        return this.parmSalesLine().LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryId</Name>
				<Source><![CDATA[
    public EcoResCategoryId parmCategoryId()
    {
        return this.parmSalesLine().SalesCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmCurrencyCode()
    {
        return this.parmSalesLine().CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension()
    {
        return this.parmSalesLine().DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryType</Name>
				<Source><![CDATA[
    protected TradeLineDlvType parmDeliveryType()
    {
        return this.parmSalesLine().DeliveryType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId()
    {
        return this.parmSalesLine().InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignInventDimId</Name>
				<Source><![CDATA[
    protected void assignInventDimId(InventDimId _inventDimId)
    {
        this.parmSalesLine().InventDimId = _inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    public TradeInventTransId parmInventTransId()
    {
        return this.parmSalesLine().InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId()
    {
        return this.parmSalesLine().ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQty</Name>
				<Source><![CDATA[
    public UnitQty parmQty()
    {
        return this.parmSalesLine().SalesQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateRetailGroupQty</Name>
				<Source><![CDATA[
    public UnitQty calculateRetailGroupQty()
    {
        Qty total = 0;

        if (this.isUseRetailPricing())
        {
            SalesLine tempLine;
            select sum(SalesQty) from tempLine where tempLine.SalesId == this.parmSalesLine().SalesId
                && tempLine.ItemId == this.parmItemId() 
                && tempLine.RecId != this.parmSalesLine().RecId
                && tempLine.SalesStatus != SalesStatus::Invoiced
                && tempLine.SalesStatus != SalesStatus::Canceled;
            total = tempLine.SalesQty;
        }

        return total;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignQty</Name>
				<Source><![CDATA[
    protected void assignQty(UnitQty _qty)
    {
        this.parmSalesLine().SalesQty = _qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitId</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol parmUnitId()
    {
        return this.parmSalesLine().SalesUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignUnitId</Name>
				<Source><![CDATA[
    protected void assignUnitId(UnitOfMeasureSymbol _unitId)
    {
        this.parmSalesLine().SalesUnit = _unitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventQty</Name>
				<Source><![CDATA[
    public InventQty parmInventQty()
    {
        return this.parmSalesLine().QtyOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignInventQty</Name>
				<Source><![CDATA[
    protected void assignInventQty(InventQty _inventQty)
    {
        this.parmSalesLine().QtyOrdered = _inventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCWQty</Name>
				<Source><![CDATA[
    public PdsCWInventQty parmCWQty()
    {
        return this.parmSalesLine().PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrice</Name>
				<Source><![CDATA[
    public PriceCur parmPrice()
    {
        return this.parmSalesLine().SalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignPrice</Name>
				<Source><![CDATA[
    protected void assignPrice(PriceCur _price)
    {
        this.parmSalesLine().SalesPrice = _price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    public PriceUnit parmPriceUnit()
    {
        return this.parmSalesLine().PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignPriceUnit</Name>
				<Source><![CDATA[
    protected void assignPriceUnit(PriceUnit _priceUnit)
    {
        this.parmSalesLine().PriceUnit = _priceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    public LineAmount parmLineAmount()
    {
        return this.parmSalesLine().LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLineAmount</Name>
				<Source><![CDATA[
    protected void assignLineAmount(LineAmount _lineAmount)
    {
        this.parmSalesLine().LineAmount = _lineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDiscAmount</Name>
				<Source><![CDATA[
    public DiscAmount parmLineDiscAmount()
    {
        return this.parmSalesLine().LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLineDiscAmount</Name>
				<Source><![CDATA[
    protected void assignLineDiscAmount(DiscAmount _lineDiscAmount)
    {
        this.parmSalesLine().LineDisc = _lineDiscAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmLineDiscPercent()
    {
        return this.parmSalesLine().LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLineDiscPercent</Name>
				<Source><![CDATA[
    protected void assignLineDiscPercent(DiscPct _lineDiscPercent)
    {
        this.parmSalesLine().LinePercent = _lineDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkup</Name>
				<Source><![CDATA[
    public PriceMarkup parmMarkup()
    {
        return this.parmSalesLine().SalesMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignMarkup</Name>
				<Source><![CDATA[
    protected void assignMarkup(PriceMarkup _markup)
    {
        this.parmSalesLine().SalesMarkup = _markup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmDiscPercent()
    {
        return this.parmSalesLine().discPercent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscAmount</Name>
				<Source><![CDATA[
    public DiscAmount parmDiscAmount()
    {
        return this.parmSalesLine().discAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDeliveryType</Name>
				<Source><![CDATA[
    public LineDeliveryType parmLineDeliveryType()
    {
        return this.parmSalesLine().LineDeliveryType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMCROrderLine2PriceHistoryRef</Name>
				<Source><![CDATA[
    protected MCROrderLinePriceHistoryReference parmMCROrderLine2PriceHistoryRef()
    {
        return this.parmSalesLine().MCROrderLine2PriceHistoryRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModuleType</Name>
				<Source><![CDATA[
    public ModuleInventPurchSales parmModuleType()
    {
        return this.parmSalesLine().moduleType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderId</Name>
				<Source><![CDATA[
    public Num parmOrderId()
    {
        return this.parmSalesLine().SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasOrderId</Name>
				<Source><![CDATA[
    public boolean hasOrderId()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailVariantId</Name>
				<Source><![CDATA[
    public RetailVariantId parmRetailVariantId()
    {
        return this.parmSalesLine().RetailVariantId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentLine</Name>
				<Source><![CDATA[
    public SourceDocumentLineRecId parmSourceDocumentLine()
    {
        return this.parmSalesLine().SourceDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStocked</Name>
				<Source><![CDATA[
    protected TradeStockedProduct parmStocked()
    {
        return this.parmSalesLine().StockedProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup parmTaxGroup()
    {
        return this.parmSalesLine().TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroup</Name>
				<Source><![CDATA[
    public TaxItemGroup parmTaxItemGroup()
    {
        return this.parmSalesLine().TaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerOrderAccount</Name>
				<Source><![CDATA[
    public CustAccount parmCustomerOrderAccount()
    {
        return this.parmSalesLine().orderAccount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemLineDiscCode</Name>
				<Source><![CDATA[
    protected LineDiscCode parmItemLineDiscCode()
    {
        return this.parmSalesLine().itemLineDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountLineDiscCode</Name>
				<Source><![CDATA[
    protected LineDiscCode parmAccountLineDiscCode()
    {
        return this.parmSalesLine().lineDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDate</Name>
				<Source><![CDATA[
    protected TransDate parmPriceDate()
    {
        return this.parmSalesLine().priceDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceGroupId</Name>
				<Source><![CDATA[
    protected PriceGroupId parmPriceGroupId()
    {
        return this.parmSalesLine().priceGroupId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMatchingAgreementLine</Name>
				<Source><![CDATA[
    protected AgreementLineRecId parmMatchingAgreementLine()
    {
        return this.parmSalesLine().matchingAgreementLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>agreementHeaderExt_RU</Name>
				<Source><![CDATA[
    public AgreementHeaderExtRecId_RU agreementHeaderExt_RU()
    {
        return this.salesPurchTable().salesPurchTableInterface().getAgreementHeaderExt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>agreementPartnerCode_RU</Name>
				<Source><![CDATA[
    public CustVendAC agreementPartnerCode_RU()
    {
        return this.salesPurchTable().salesPurchTableInterface().parmOrderAccount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile_RU</Name>
				<Source><![CDATA[
    public PostingProfile parmPostingProfile_RU(PostingProfile _postingProfile_RU = '')
    {
        if (!prmisDefault(_postingProfile_RU))
        {
            this.parmSalesLine().PostingProfile_RU = _postingProfile_RU;
        }

        return this.parmSalesLine().PostingProfile_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountExclTax</Name>
				<Source><![CDATA[
    public AmountCur amountExclTax(
        AmountCur _amountCur,
        Qty       _qty,
        TransDate _transDate,
        Tax       _tax = null,
        boolean   _skipRounding = false,
        boolean   _useRoundedTaxOrigin = true)
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (this.inventDim().inventProfile_RU().taxUpdateOutgoing() == TaxUpdateMode_RU::NoCalc)
            {
                return _amountCur;
            }
        }
        return super(_amountCur, _qty, _transDate, _tax, _skipRounding, _useRoundedTaxOrigin);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineAmount</Name>
				<Source><![CDATA[
    public AmountCur calcLineAmount(Qty _qty = this.parmQty())
    {
        AmountCur lineAmount;

        if (this.parmSalesLine().LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        {
            lineAmount = super(_qty);
        }

        return lineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineAmountForced</Name>
				<Source><![CDATA[
    public AmountCur calcLineAmountForced(
        Qty _qty = this.parmSalesLine().SalesType == SalesType::ReturnItem ? this.parmSalesLine().ExpectedRetQty : this.parmQty(),
        PriceDiscPolicyCheckPolicy _checkPolicy = null)
    {
        AmountCur lineAmount;
        boolean calcLineAmount = false;

        if (this.parmSalesLine().ProjId)
        {
            if (!_checkPolicy)
            {
                _checkPolicy = PriceDiscPolicyCheckPolicy::newFromParm(this.parmSalesPurchLine());
            }

            if (_checkPolicy.mustUpdatePolicyField(PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, LineAmount)))
                || _checkPolicy.mustUpdatePolicyField(PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, Price))))
            {
                lineAmount = this.calcPrice2LineAmount(_qty, true);
                calcLineAmount = true;
            }
        }

        if (!calcLineAmount && this.parmSalesLine().LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        {
            lineAmount = super(_qty, _checkPolicy);
        }

        return lineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountModified</Name>
				<Source><![CDATA[
    public void lineAmountModified()
    {
        this.parmSalesLine().PriceDiscLine::lineAmountModified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsPrice</Name>
				<Source><![CDATA[
    public Price pdsPrice()
    {
        Price price = super();

        if (this.inventTable().PDSBaseAttributeId)
        {
            PDSSalesLinePricingCalculation pdsSalesLinePricingCalculation = this.parmSalesLine().pdsSalesLinePricingCalculation();
            if (pdsSalesLinePricingCalculation.PriceCalculation && pdsSalesLinePricingCalculation.CalculatedUnitPrice)
            {
                price = pdsSalesLinePricingCalculation.CalculatedUnitPrice;
            }
        }

        return price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStocked</Name>
				<Source><![CDATA[
    public boolean isStocked()
    {
        boolean isStocked = super();

        if (isStocked && BrazilParameters::isEnabled())
        {
            isStocked = this.parmSalesLine().salesTable().createInventTrans_BR();
        }

        return isStocked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditDisc</Name>
				<Source><![CDATA[
    protected boolean canEditDisc()
    {
        return this.parmSalesLine().canEditDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustResetPriceAgreement</Name>
				<Source><![CDATA[
    protected boolean mustResetPriceAgreement()
    {
        return !this.parmSalesLine().SkipPriceDiscCalc
            || !SalesPurchLineEntityApplyPriceDiscParameterFlight::instance().isEnabled()
            || !this.parmSalesLine().SkipPriceDiscCalcOnImport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>agreementSkipAutoLink</Name>
				<Source><![CDATA[
    protected boolean agreementSkipAutoLink()
    {
        return this.parmSalesLine().agreementSkipAutoLink();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAgreementLine</Name>
				<Source><![CDATA[
    public void initFromAgreementLine(AgreementLine _agreementLine)
    {
        this.parmSalesLine().initFromAgreementLine(_agreementLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDisc</Name>
				<Source><![CDATA[
    protected void initFromPriceDisc(
        PriceDisc_Price             _priceDisc,
        PriceDiscPolicyCheckPolicy  _checkPolicy,
        boolean                     _initDateFields,
        RetailOrderCalculator       _retailCalculator)
    {
        this.parmSalesLine().initFromPriceDisc(_priceDisc, _checkPolicy, _initDateFields, _retailCalculator);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLinkedToAgreement</Name>
				<Source><![CDATA[
    protected boolean isLinkedToAgreement()
    {
        return this.parmSalesLine().isLinkedToAgreement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSetPriceDisc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if price and discount must be set on the <c>SalesLine</c>.
    /// </summary>
    /// <param name = "_inventDim">An <c>InventDim</c> record.</param>
    /// <param name = "_initDateFields">A <c>boolean</c> value.</param>
    /// <param name = "_parameters">An instance of the <c>PriceDiscPriceAgreementParameters</c> class.</param>
    /// <returns></returns>
    protected boolean mustSetPriceDisc(InventDim _inventDim, boolean _initDateFields, PriceDiscPriceAgreementParameters _parameters)
    {
        // Only set price if the price override flag is turned off and the line is not
        // a supplementary item.
        if ((this.parmSalesLine().returnItem() && !this.parmSalesLine().InventTransIdReturn && !this.parmSalesLine().CreditNoteInternalRef_PL)
            || (!this.parmSalesLine().returnItem() && !this.parmSalesLine().CreditNoteInternalRef_PL))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLineAmountAfterSettingPriceDisc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates line amount after setting price and discount.
    /// </summary>
    /// <param name = "_checkPolicy">An instance of the <c>PriceDiscPolicyCheckPolicy</c> class.</param>
    protected void updateLineAmountAfterSettingPriceDisc(PriceDiscPolicyCheckPolicy _checkPolicy)
    {
        if (this.parmSalesLine().returnItem())
        {
            if (SalesLineReturnLineAmountForZeroPriceFlight::instance().isEnabled())
            {
                this.parmSalesLine().LineAmount = this.parmSalesLine().SalesPrice ? this.parmSalesLine().returnLineAmount() : 0;
            }
            else
            {
                this.parmSalesLine().LineAmount = this.parmSalesLine().returnLineAmount();
            }
        }
        else
        {
            super(_checkPolicy);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets prices and discounts on the <c>SalesLine</c>.
    /// </summary>
    /// <param name = "_inventDim">An <c>InventDim</c> record.</param>
    /// <param name = "_initDateFields">A <c>boolean</c> value.</param>
    /// <param name = "_parameters">An instance of the <c>PriceDiscPriceAgreementParameters</c> class, used to pass any additional parameters.</param>
    public void setPriceDisc(InventDim _inventDim, boolean _initDateFields, PriceDiscPriceAgreementParameters _parameters)
    {
        super(_inventDim, _initDateFields, _parameters);

        this.parmSalesLine().updateAndPackAccessableValue_IN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAgreementSkipAutoLink</Name>
				<Source><![CDATA[
    protected void setAgreementSkipAutoLink(AgreementSkipAutoLink _agreementSkipAutoLink)
    {
        this.parmSalesLine().setAgreementSkipAutoLink(_agreementSkipAutoLink);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDiscPriceUnitMarkup</Name>
				<Source><![CDATA[
    public void setPriceDiscPriceUnitMarkup(
        PriceDisc_Price            _priceDisc,
        PriceDiscPolicyCheckPolicy _checkPolicy = null,
        RetailOrderCalculator _retailCalculator = null)
    {
        super(_priceDisc, _checkPolicy, _retailCalculator);

        if (this.inventTable().PDSBaseAttributeId)
        {
            this.parmSalesLine().pdsSetPricingCalculation(_priceDisc.pdsCalculationId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPurchTable</Name>
				<Source><![CDATA[
    public SalesPurchTable salesPurchTable()
    {
        return this.parmSalesLine().salesTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxDate</Name>
				<Source><![CDATA[
    public TransDate taxDate(TransDate _transDate)
    {
        return this.parmSalesLine().taxDate(_transDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainFinancialQty</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    internal UnitQty parmRemainFinancialQty()
    {
        return this.parmSalesLine().RemainSalesFinancial;

    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainPhysicalQty</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    internal UnitQty parmRemainPhysicalQty()
    {
        return this.parmSalesLine().RemainSalesPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountSalesReceiptLedgerDimension</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    internal LedgerDimensionDefaultAccount parmAccountSalesReceiptLedgerDimension()
    {
        return this.parmSalesLine().accountSalesLedgerDimension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountDiscLedgerDimension</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    internal LedgerDimensionDefaultAccount parmAccountDiscLedgerDimension()
    {
        return this.parmSalesLine().accountDiscLedgerDimension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingSalesReceipt</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    internal LedgerPostingType parmPostingSalesReceipt()
    {
        return this.parmSalesLine().postingSales();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingDisc</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    internal LedgerPostingType parmPostingDisc()
    {
        return LedgerPostingType::SalesDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryDate</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    internal TransDate deliveryDate()
    {
        return this.parmSalesLine().deliveryDate();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>