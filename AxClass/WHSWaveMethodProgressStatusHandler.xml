<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveMethodProgressStatusHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>WHSWaveMethodProgressStatusHandler</c> is used as a proxy to <c>WHSWaveMethodStatusHandler</c> that allows user to use progress
/// instead of increasing it step by step.
/// </summary>
internal class WHSWaveMethodProgressStatusHandler
{
    private WHSWaveMethodStatusHandler  waveMethodStatusHandler;
    private int                         maxSteps;
    private int                         step;
    private real                        progress;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static WHSWaveMethodProgressStatusHandler construct() 
    {
        return new WHSWaveMethodProgressStatusHandler();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromWaveMethodStatusHandler</Name>
				<Source><![CDATA[
    internal static WHSWaveMethodProgressStatusHandler constructFromWaveMethodStatusHandler(WHSWaveMethodStatusHandler _waveMethodStatusHandler, int _maxSteps = 100)
    {
        WHSWaveMethodProgressStatusHandler handler = WHSWaveMethodProgressStatusHandler::construct();
        handler.waveMethodStatusHandler = _waveMethodStatusHandler;
        handler.maxSteps = _maxSteps;
        handler.start();

        return handler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>start</Name>
				<Source><![CDATA[
    private void start()
    {
        if (!waveMethodStatusHandler)
        {
            return;
        }

        waveMethodStatusHandler.setTotalSteps(maxSteps);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProgress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the progress.
    /// </summary>
    /// <param name = "_progress">The progress in percentages.</param>
    /// <returns>The progress in percentages.</returns>
    [Hookable(false)]
    internal real parmProgress(real _progress = progress)
    {
        if (!waveMethodStatusHandler)
        {
            return 100;
        }

        if (_progress > progress && _progress <= maxSteps)
        {
            waveMethodStatusHandler.makeProgress(_progress - step, false);
            progress = _progress;

            // current step is integer value of progress.
            step = progress;
        }

        return progress;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>