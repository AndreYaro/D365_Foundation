<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWorkExecuteDisplayFormBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WhsWorkExecuteDisplayFormBuilder extends WHSRetryableFormBuilder
{
    private WhsWorkExecuteDisplayProcessor processor;
    private WhsWorkExecuteDisplayProcessorState state;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildForm</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSExecuteProcessEventHandlerResultValue buildForm()
    {
        WHSServiceXMLTranslator xmlTranslator = processor.parmXmlTranslator();
        str xmlState;

        container formContainer = state.buildDisplayForm();
        formContainer = state.workExecuteDisplay.clearClickedButtons(formContainer);

        var params = state.createExecuteProcessParameters();
        params.xmlTranslator = xmlTranslator;
        formContainer = WHSWorkExecutionDetourBuilder::newBuilder(formContainer, params).buildDetourButtons();

        if (state.isNextFormEnterDetourSession())
        {
            WHSMobileAppStepId mobileAppStepId = processor.sessionMobileAppStepId();

            // transfer data from main session to detour session
            if (mobileAppStepId)
            {
                [formContainer, xmlState] = state.populateDataToDetour(mobileAppStepId, formContainer, xmlTranslator);
            }
        }

        return WHSExecuteProcessEventHandlerResultValue::constructFromParameters(
            formContainer,
            xmlState,
            true); // isFormContainerStoredInUserSession
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareForRetry</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSWorkExecutionExceptionHandler prepareForRetry(WHSWorkExecutionExceptionHandler _exceptionHandler)
    {
        // When entering detour, the state is empty, which would lead to failure in authenticateSession
        boolean isNextFormEnterDetourSession;
        if (state.isNextFormEnterDetourSession())
        {
            state.deleteEmptyDetour();
            isNextFormEnterDetourSession = true;
        }

        state = processor.resetState();

        if (isNextFormEnterDetourSession)
        {
            state.navigateToDetour();
        }

        state.initializeWorkExecuteDisplay(processor.parmXmlTranslator());
        processor.handleButtonClicks();

        return state.createExceptionHandler();
    }

]]></Source>
			</Method>
			<Method>
				<Name>onFailure</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void onFailure()
    {
        super();

        if (state.isNextFormEnterDetourSession())
        {
            state.deleteEmptyDetour();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new(WhsWorkExecuteDisplayProcessor _processor, WhsWorkExecuteDisplayProcessorState _state)
    {
        this.processor = _processor;
        this.state = _state;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>