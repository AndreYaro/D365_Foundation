<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetImpairmentTest_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The base class of impariment test method.
/// </summary>
public abstract class AssetImpairmentTest_JP
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateImpairmentAdj</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the impairment adjustment under current accounting standard.
    /// </summary>
    /// <param name="_calc">
    /// A <c>AssetImpairmentSummary_JP</c> instance.
    /// </param>
    /// <returns>
    /// The impairment adjustment value.
    /// </returns>
    public AssetImpairmentAdjustment_JP calculateImpairmentAdj(AssetImpairmentSummary_JP  _calc)
    {
        AssetSumCalc sumCalc = _calc.parmAssetDocSumCalc();

        if (this.isImpaired(_calc))
        {
            return _calc.parmRecoverableAmount() - sumCalc.netBookValue();
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isImpaired</Name>
				<Source><![CDATA[
    /// <summary>
    /// Abstract method to be overriden by derived class to determine if impairment happened.
    /// </summary>
    /// <param name="_calc">
    /// A <c>AssetImpairmentSummary_JP</c> instance.
    /// </param>
    /// <returns>
    /// A boolean value indicates if impairment happened.
    /// </returns>
    public abstract boolean isImpaired(AssetImpairmentSummary_JP  _calc)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructAssetImpairmentTest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct instance of derived class of <c>AssetImpairmentSummary_JP</c> base on the accounting standard.
    /// </summary>
    /// <param name="_standard">
    /// The accounting standard.
    /// </param>
    /// <returns>
    /// The instance of derived class of <c>AssetImpairmentSummary_JP</c>.
    /// </returns>
    public static AssetImpairmentTest_JP constructAssetImpairmentTest(AssetAccountingStandard_JP _standard)
    {
        AssetImpairmentTest_JP test;

        switch (_standard)
        {
            case AssetAccountingStandard_JP::JPGAAP:
                test = AssetImpairmentTestJPGAAP_JP::instance();
                break;
            case AssetAccountingStandard_JP::IFRS:
                test = AssetImpairmentTestIFRS_JP::instance();
                break;
        }

        return test;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>