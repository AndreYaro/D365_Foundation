<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCImportPurchTotals</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCImportPurchTotals</c> class is used to calculate the total amount of the purchase
///    order.
/// </summary>
/// <remarks>
///    The class could calculate the amount for the partial order lines based on the delivery date of the
///    order line.
/// </remarks>
class BankLCImportPurchTotals extends PurchTotals_Trans
{
    BankLCSalesPurchQtyCategoryType salesPurchQtyCategory;
    TransDate                       deliveryDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructPurchCalcTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an instance of the <c>PurchCalcTax</c> class that is used by this class.
    /// </summary>
    /// <returns>
    ///    The new instance of the <c>PurchCalcTax</c> class.
    /// </returns>
    public PurchCalcTax constructPurchCalcTax()
    {
        BankLCImportPurchCalcTax bankLCImportPurchCalcTax;

        bankLCImportPurchCalcTax = new BankLCImportPurchCalcTax(purchTable);
        bankLCImportPurchCalcTax.parmSalesPurchQtyCategory(salesPurchQtyCategory);
        bankLCImportPurchCalcTax.parmDeliveryDate(deliveryDate);

        return bankLCImportPurchCalcTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContract</Name>
				<Source><![CDATA[
        protected TradeTotalsIContract parmContract()
    {
        return BankLCImportPurchTotalsTransContract::newFromPurchTable(purchTable, deliveryDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
        public TransDate parmDeliveryDate(TransDate _deliveryDate = deliveryDate)
    {
        deliveryDate = _deliveryDate;
        return deliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchQtyCategory</Name>
				<Source><![CDATA[
        public BankLCSalesPurchQtyCategoryType parmSalesPurchQtyCategory(
        BankLCSalesPurchQtyCategoryType _salesPurchQtyCategory = salesPurchQtyCategory)
    {
        salesPurchQtyCategory = _salesPurchQtyCategory;
        return salesPurchQtyCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyPurch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the quantity by using the <c>BankLCImportPurchQuantity</c> class.
    /// </summary>
    /// <returns>
    ///    The quantity calculated.
    /// </returns>
    PurchQty qtyPurch()
    {
        return new BankLCImportPurchQuantity(salesPurchQtyCategory).calcPurchQty(purchLine, specQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Builds a query to select the order lines specified by a delivery date set by the
    ///    <c>parmDeliveryDate</c> method.
    /// </summary>
    /// <returns>
    ///    The modified <c>QueryRun</c> object.
    /// </returns>
    Object queryBuild()
    {
        QueryRun             query;
        QueryBuildDataSource qbds;
        QueryBuildRange      qbr;

        query = super();

        if (deliveryDate != dateNull())
        {
            qbds = SysQuery::findOrCreateDataSource(query.query(), tableNum(PurchLine));
            qbr = SysQuery::findOrCreateRange(qbds, fieldNum(PurchLine, DeliveryDate));
            qbr.value(queryValue(deliveryDate));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a new <see cref="PurchTotals Class" /> object for calculating totals from an associated
    ///    table record.
    /// </summary>
    /// <param name="_source">
    ///    The source table record.
    /// </param>
    /// <param name="_salesPurchQtyCategory">
    ///    Indicates the quantity will be used.
    /// </param>
    /// <returns>
    ///    A <see cref="PurchTotals Class" /> object.
    /// </returns>
    public static PurchTotals construct(
        PurchTable                      _source,
        BankLCSalesPurchQtyCategoryType _salesPurchQtyCategory)
    {
        BankLCImportPurchTotals ret = new BankLCImportPurchTotals(_source, PurchUpdate::All);
        ret.parmSalesPurchQtyCategory(_salesPurchQtyCategory);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>