<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InfAdjSimulationContract_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for InfAdjSimulation_MX SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the InfAdjSimulation_MX SSRS Report.
/// </remarks>
[DataContractAttribute]
public class InfAdjSimulationContract_MX implements SysOperationValidatable
{
    FromDate            fromDate;
    ToDate              toDate;
    NoYesId             adjustmentMethodAll;
    AdjustmentMethod_MX adjustmentMethod;
    MainAccountNum      fromMainAccount;
    MainAccountNum      toMainAccount;

    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        adjustmentMethodAll,
        adjustmentMethod,
        fromMainAccount,
        toMainAccount
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAdjustmentMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter adjustmentMethod.
    /// </summary>
    /// <param name="_adjustmentMethod">
    /// The new value of the datacontract parameter adjustmentMethod; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter adjustmentMethod
    /// </returns>
    [
        #InfAdj_SSRSParameters_MX
        DataMemberAttribute(#paramAdjustmentMethod),
        SysOperationHelpTextAttribute(literalstr("@SYS313304")),
        SysOperationDisplayOrderAttribute('4')
    ]
    public AdjustmentMethod_MX parmAdjustmentMethod(AdjustmentMethod_MX _adjustmentMethod = adjustmentMethod)
    {
        adjustmentMethod = _adjustmentMethod;
        return adjustmentMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAdjustmentMethodAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter adjustmentMethodAll.
    /// </summary>
    /// <param name="_adjustmentMethodAll">
    /// The new value of the datacontract parameter adjustmentMethodAll; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter adjustmentMethodAll
    /// </returns>
    [
        #InfAdj_SSRSParameters_MX
        DataMemberAttribute(#paramAll),
        SysOperationLabelAttribute(literalstr("@SYS14437")),
        SysOperationHelpTextAttribute(literalstr("@SYS313303")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public NoYesId parmAdjustmentMethodAll(NoYesId _adjustmentMethodAll = adjustmentMethodAll)
    {
        adjustmentMethodAll = _adjustmentMethodAll;
        return adjustmentMethodAll;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter fromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter fromDate
    /// </returns>
    [
        #InfAdj_SSRSParameters_MX
        DataMemberAttribute(#paramFromDate),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromMainAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromMainAccount.
    /// </summary>
    /// <param name="_fromMainAccount">
    /// The new value of the datacontract parameter fromMainAccount; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter fromMainAccount
    /// </returns>
    [
        #InfAdj_SSRSParameters_MX
        DataMemberAttribute(#paramFromMainAccount),
        SysOperationLabelAttribute(literalstr("@SYS317465")),
        SysOperationHelpTextAttribute(literalstr("@SYS317467")),
        SysOperationDisplayOrderAttribute('5')
    ]
    public MainAccountNum parmFromMainAccount(MainAccountNum _fromMainAccount = fromMainAccount)
    {
        fromMainAccount = _fromMainAccount;
        return fromMainAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter toDate
    /// </returns>
    [
        #InfAdj_SSRSParameters_MX
        DataMemberAttribute(#paramToDate),
        SysOperationDisplayOrderAttribute('2')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToMainAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toMainAccount.
    /// </summary>
    /// <param name="_toMainAccount">
    /// The new value of the datacontract parameter toMainAccount; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter toMainAccount
    /// </returns>
    [
        #InfAdj_SSRSParameters_MX
        DataMemberAttribute(#paramToMainAccount),
        SysOperationLabelAttribute(literalstr("@SYS317466")),
        SysOperationHelpTextAttribute(literalstr("@SYS317468")),
        SysOperationDisplayOrderAttribute('6')
    ]
    public MainAccountNum parmToMainAccount(MainAccountNum _toMainAccount = toMainAccount)
    {
        toMainAccount = _toMainAccount;
        return toMainAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container  packedClass)
    {
        boolean         ret;
        Integer         version = conpeek(packedClass, 1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = packedClass;
                ret = true;
                break;
            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
        public boolean validate()
    {
        boolean ret = true;

        if (adjustmentMethodAll == NoYes::No && adjustmentMethod == AdjustmentMethod_MX::None)
        {
            ret = checkFailed("@SYS313305");
        }

        if (adjustmentMethodAll == NoYes::Yes && adjustmentMethod != AdjustmentMethod_MX::None)
        {
            ret = checkFailed("@SYS313306");
        }

        if (!fromMainAccount && toMainAccount)
        {
            ret = checkFailed(strfmt("@SYS304394", "@SYS317465"));
        }

        if (fromMainAccount && !toMainAccount)
        {
            ret = checkFailed(strfmt("@SYS304394", "@SYS317466"));
        }

        if (fromMainAccount
            && toMainAccount
            && (fromMainAccount > toMainAccount))
        {
            ret = checkFailed("@SYS317469");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>