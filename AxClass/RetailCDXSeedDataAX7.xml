<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCDXSeedDataAX7</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Retail CDX seed data class for AX7 schema.
/// </summary>
class RetailCDXSeedDataAX7 extends RetailCDXSeedDataBase
{
    boolean clearPrevSeedData;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>runWithXmlStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Run seed data with dedicated schema resource. For test purpose only.
    /// </summary>
    /// <param name = "xml">The XML that contains schema information.</param>
    /// <param name="cdxSeedDataExtensionXmls">The list of extension xmls.</param>
    [SysObsolete('This method is deprecated. Use run() method instead.', false, 30\06\2020)]
    public void runWithXmlStr(str xml, List cdxSeedDataExtensionXmls = null)
    {
        this.initializeFromArgs(xml, cdxSeedDataExtensionXmls);

        this.createJobs();
        this.createSubjobs();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Call this wrapper method to insert cdx related seed data into database.
    /// </summary>
    public void run()
    {
        super();

        // If customer search feature is enabled, a separate schedule job needs to be set up to sync customer search related data.
        if (RetailCustomerAzureSearchFeatureExposure::isEnabled())
        {
            RetailCDXCustomerSearchSeedDataInitializer customerSearchInitializer = new RetailCDXCustomerSearchSeedDataInitializer(clearPrevSeedData);

            if (RetailCustomerAzureSearchParmPropagateFlight::instance().isEnabled())
            {
                customerSearchInitializer.paramUpdateSubjobsOnly(this.paramUpdateSubjobsOnly());
                customerSearchInitializer.paramIsExecutedFromUI(this.paramIsExecutedFromUI());
            }

            customerSearchInitializer.run();
        }

        TaxEngineSQLDictionarySyncHelper::syncTaxEngineSQLDictionary();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getXmlFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the XML contents from the given resource. For test only.
    /// </summary>
    /// <param name = "resource">The CDX seed data resource name.</param>
    /// <returns>The XML contents.</returns>
    /// <remarks>Used by extensibility scenarios.</remarks>
    public str getXmlFrom(str resource)
    {
        return this.retrieveXmlStrFromResource(resource);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldClearPreviousSeedData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether to clear the previous CDX seed data configuration.
    /// </summary>
    /// <returns>True if previous seed data configuration should be deleted; false otherwise.</returns>
    internal boolean shouldClearPreviousSeedData()
    {
        return clearPrevSeedData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupCDXDataGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the configuration related to the CDX Data Group.
    /// </summary>
    protected void setupCDXDataGroup()
    {
        if (RetailCDXDataGroup::insertDefaultIfNotExists(RetailConnChannelSchemaTypeEnum::AX7))
        {
            RetailCDXDataGroup::associateDefaultDataGroupToDistributionSchedules(RetailConnChannelSchemaTypeEnum::AX7);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getXSDSchemaResource</Name>
				<Source><![CDATA[
    protected ResourceName getXSDSchemaResource()
    {
        return resourceStr(RetailCDXSeedDataAX7_Schema);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCoreCDXSeedDataResource</Name>
				<Source><![CDATA[
    protected ResourceName getCoreCDXSeedDataResource()
    {
        return resourceStr(RetailCDXSeedDataAX7);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSchemaName</Name>
				<Source><![CDATA[
    internal ResourceName getSchemaName()
    {
        #RetailCDX;
        return #AX7SchemaName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFullSyncScheduleName</Name>
				<Source><![CDATA[
    protected Name getFullSyncScheduleName()
    {
        return RetailCDXConstants::FullSyncScheduleName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFullSyncScheduleDescription</Name>
				<Source><![CDATA[
    protected Description getFullSyncScheduleDescription()
    {
        return "@REX4520659"; //All jobs
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(boolean _clearPrevSeedData = false)
    {
        clearPrevSeedData = _clearPrevSeedData;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args = null)
    {
        RetailCDXSeedDataAX7 ax = new RetailCDXSeedDataAX7(true);
        ax.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>