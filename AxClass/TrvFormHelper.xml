<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvFormHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Common functionalities shared across Trv forms.
/// </summary>
static class TrvFormHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>researchFormDataSourceByTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find and research the given datasource in a form.
    /// Used commonly to refresh a caller form when a child form modifies some data for the caller form.
    /// </summary>
    /// <param name = "_formRun">The form in which the datasource will be researched.</param>
    /// <param name = "_formDataSourceTableId">The table id of the datasource to research.</param>
    /// <param name = "_stopAtFirstDataSource">
    /// There can be more than 1 datasource with the given table id.
    /// Set this parameter to true if the refresh operation can be stopped at the first datasource it finds (Default).
    /// Set this parameter to false if there is more than one datasource and all of them need to be researched.
    /// </param>
    /// <param name = "_moveToLastPosition">true to move the datasource cursor to the last element; false generates no effect. Default false.</param>
    public static void researchFormDataSourceByTableId(FormRun _formRun, TableId _formDataSourceTableId, boolean _stopAtFirstDataSource = true, boolean _moveToLastPosition = false)
    {
        if (_formRun && _formDataSourceTableId)
        {
            int dsCount = _formRun.dataSourceCount();

            for (int i = 1; i <= dsCount; i++)
            {
                FormDataSource formDS = _formRun.dataSource(i);

                if (formDS.table() == _formDataSourceTableId)
                {
                    formDS.research(true);

                    if (_moveToLastPosition)
                    {
                        formDS.last();
                    }

                    if (_stopAtFirstDataSource)
                    {
                        break;
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rereadFormDataSourceByTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find and reread the given datasource record in a form.
    /// Used commonly to refresh a caller form when a child form modifies some data for the caller form.
    /// </summary>
    /// <param name = "_formRun">The form in which the datasource will be reread.</param>
    /// <param name = "_formDataSourceTableId">The table id of the datasource to reread.</param>
    /// <param name = "_stopAtFirstDataSource">
    /// There can be more than 1 datasource with the given table id.
    /// Set this parameter to true if the refresh operation can be stopped at the first datasource it finds (Default).
    /// Set this parameter to false if there is more than one datasource and all of them need to be reread.
    /// </param>
    public static void rereadFormDataSourceByTableId(FormRun _formRun, TableId _formDataSourceTableId, boolean _stopAtFirstDataSource = true)
    {
        if (_formRun && _formDataSourceTableId)
        {
            int dsCount = _formRun.dataSourceCount();

            for (int i = 1; i <= dsCount; i++)
            {
                FormDataSource formDS = _formRun.dataSource(i);

                if (formDS.table() == _formDataSourceTableId)
                {
                    formDS.reread();
                    formDS.refresh();

                    if (_stopAtFirstDataSource)
                    {
                        break;
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFormCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the form's caption in delegate scenario. Forms implementing <c>TrvIFormRefreshWorker</c> will use this to refresh the caption.
    /// </summary>
    /// <param name = "_formRun">The form to change the caption on.</param>
    /// <param name = "_trvWorkerParameter">An instance of <c>TrvWorkerParameter</c> denoting the creating worker.</param>
    /// <param name = "_formCaption">Default form caption or the caption when the form is for current user.</param>
    /// <param name = "_formCaptionDelegate">Delegate caption or the caption when the form is on-behalf of someone else.</param>
    public static void refreshFormCaption(FormRun _formRun, TrvWorkerParameter _trvWorkerParameter, str _formCaption, str _formCaptionDelegate)
    {
        if (HcmWorkerLookup::currentWorker() != _trvWorkerParameter.parmHcmWorkerRecId())
        {
            HcmWorkerName name = HcmWorker::find(_trvWorkerParameter.parmHcmWorkerRecId()).name();
            _formRun.design().caption(strfmt(_formCaptionDelegate, name));
        }
        else
        {
            _formRun.design().caption(_formCaption);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCompanyContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Change the company context on the form.
    /// </summary>
    /// <param name = "_dataAreaId">The company to set to.</param>
    public static void setCompanyContext(DataAreaId _dataAreaId)
    {
        if (_dataAreaId && _dataAreaId != '' && _dataAreaId != curext())
        {
            // The SetCompany on the Form must be set to 'No' for this to set the company for the session.
            appl.setDefaultCompany(_dataAreaId, true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>