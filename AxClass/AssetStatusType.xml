<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetStatusType</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AssetStatusType
{
    #isoCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBeDepreciated</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if the transactions of any depreciation types (Depreciation, DepreciationAdj, BonusDepreciation, etc.)
    ///    can be posted to the asset in the current state.
    /// </summary>
    /// <returns>True, if the depreciation transactions can be posted to the asset.</returns>
    public boolean canBeDepreciated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeDisposed</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if the disposal transactions (Scrap and Sale) can be posted to the asset in the current state.
    /// </summary>
    /// <returns>True if the disposal transactions can be posted to the asset.</returns>
    public boolean canBeDisposed()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBePostedTo</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions of any types can be posted to the asset in the current state.
    /// </summary>
    /// <returns>True if the transactions can be posted to the asset.</returns>
    public boolean canBePostedTo()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canChangeStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the asset status can be changed in the current state.
    /// </summary>
    /// <returns>True if the asset status can be changed; otherwise, false.</returns>
    public boolean canChangeStatus()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkStatusChangeTo</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the asset can be changed to a specified status in the current state.
    /// </summary>
    /// <param name="_assetStatus">The status to which to change.</param>
    /// <param name="_showMessage">Shows an error message, if true; optional.</param>
    /// <returns>True if the asset can be changed to a specified status; otherwise, false.</returns>
    public boolean checkStatusChangeTo(AssetStatus _assetStatus, boolean _showMessage = true)
    {
        if (!this.canChangeStatus())
        {
            return _showMessage ? checkFailed("@SYS67587") : false;
        }

        return _showMessage ? checkFailed(strfmt("@SYS68301", _assetStatus)) : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAcquired</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the asset has an acquired state.
    /// </summary>
    /// <returns>True if the asset was acquired; otherwise, false.</returns>
    public boolean isAcquired()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDisposed</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the asset has a disposal state.
    /// </summary>
    /// <returns>True if the asset was scrapped or sold; otherwise, false.</returns>
    public boolean isDisposed()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOpen</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the asset has an open state.
    /// </summary>
    /// <returns>True if the asset is acquired but not yet disposed; otherwise, false.</returns>
    public boolean isOpen()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isScrapped</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the asset has a scrapped state.
    /// </summary>
    /// <returns>True if the asset was scrapped; otherwise, false.</returns>
    public boolean isScrapped()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSold</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the asset has a sold state.
    /// </summary>
    /// <returns>True if the asset was sold; otherwise, false.</returns>
    public boolean isSold()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLedger</Name>
				<Source><![CDATA[
    public boolean updateLedger()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AssetStatusType construct(AssetStatus _assetStatus)
    {
        AssetStatusType assetStatus = AssetStatusType::initializeAssetStatusType(_assetStatus);

        if (assetStatus == null)
        {
            throw error(strFmt("@SYS68306", _assetStatus));
        }
       
        return assetStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeAssetStatusType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the Asset status type based on the Asset status.
    /// </summary>
    /// <param name = "_assetStatus">
    /// The Asset status.
    /// </param>
    /// <returns>
    /// The instance of Asset status type.
    /// </returns>
    protected static AssetStatusType initializeAssetStatusType(AssetStatus _assetStatus)
    {
        switch (_assetStatus)
        {
            case AssetStatus::NoAcquisition    : return new AssetStatusType_NoAcquisition();
            case AssetStatus::Open             : return new AssetStatusType_Open();
            case AssetStatus::Suspended        : return new AssetStatusType_Suspended();
            case AssetStatus::Closed           : return new AssetStatusType_Closed();
            case AssetStatus::Sold             : return new AssetStatusType_DisposedSold();
            case AssetStatus::Scrapped         : return new AssetStatusType_DisposedScrapped();
            case AssetStatus::TransferredToLowValuePool : return new AssetStatusType_TransferredToLVP();
            // <GEEU>
            case AssetStatus::Acquired_CZ      : return new AssetStatusType_Acquired_CZ();
            // </GEEU>

            default: return null;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowAcquisitionTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>Acquisition</c> can be posted.
    /// </summary>
    /// <param name="_assetBook">A record of <c>AssetBook</c> table; optional.</param>
    /// <returns>True if the asset can be acquired; otherwise, false.</returns>
    public boolean allowAcquisitionTransactions(AssetBook _assetBook = null)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowAcquisitionAdjTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>AcquisitionAdj</c> can be posted.
    /// </summary>
    /// <returns>True, if the transactions with type <c>AcquisitionAdj</c> can be posted.</returns>
    public boolean allowAcquisitionAdjTransactions()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowCompanyIssueTransactions_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>CompanyIssue_RU</c> can be posted.
    /// </summary>
    /// <param name="_assetBook">A record of <c>AssetBook</c> table; optional.</param>
    /// <returns>True, if the asset can be transferred to another company.</returns>
    public boolean allowCompanyIssueTransactions_RU(AssetBook _assetBook = null)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowCompanyReceiptTransactions_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>CompanyReceipt_RU</c> can be posted.
    /// </summary>
    /// <param name="_assetBook">A record of <c>AssetBook</c> table; optional.</param>
    /// <returns>True, if the asset can be received from another company.</returns>
    public boolean allowCompanyReceiptTransactions_RU(AssetBook _assetBook = null)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDepreciationTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>Depreciation</c> can be posted.
    /// </summary>
    /// <param name="_assetBook">A record of <c>AssetBook</c> table; optional.</param>
    /// <param name="_transDate">A transaction date; optional.</param>
    /// <returns>True if the asset can be depreciated; otherwise, false.</returns>
    public boolean allowDepreciationTransactions(AssetBook _assetBook = null,
                                                 TransDate _transDate = dateNull())
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDepreciationAdjTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>DepreciationAdj</c> can be posted.
    /// </summary>
    /// <returns>True, if the transactions with type <c>DepreciationAdj</c> can be posted.</returns>
    public boolean allowDepreciationAdjTransactions()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalTransactions_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>Disposal_RU</c> can be posted.
    /// </summary>
    /// <returns>True, if the transactions with type <c>Disposal_RU</c> can be posted.</returns>
    public boolean allowDisposalTransactions_RU()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalSaleTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>DisposalSale</c> can be posted.
    /// </summary>
    /// <returns>True, if the transactions with type <c>DisposalSale</c> can be posted.</returns>
    public boolean allowDisposalSaleTransactions()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalSaleReverseTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if reverse transactions with type <c>DisposalSale</c> can be posted.
    /// </summary>
    /// <returns>True, if the reverse transactions with type <c>DisposalSale</c> can be posted.</returns>
    public boolean allowDisposalSaleReverseTransactions()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalScrapTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates if transactions with type <c>DisposalScrap</c> can be posted.
    /// </summary>
    /// <returns>True, if the transactions with type <c>DisposalScrap</c> can be posted.</returns>
    public boolean allowDisposalScrapTransactions()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAcquisitionPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Checks that the acquisition price is specified in a Value model.
    /// </summary>
    /// <param name="_assetBook">A record of <c>AssetBook</c> table; optional.</param>
    /// <returns>True, if the acquisition price is specified.</returns>
    public boolean checkAcquisitionPrice(AssetBook _assetBook = null)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowRevaluationTransactions</Name>
				<Source><![CDATA[
    internal boolean allowRevaluationTransactions()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowWriteDownAdjTransactions</Name>
				<Source><![CDATA[
    internal boolean allowWriteDownAdjTransactions()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowWriteUpAdjTransactions</Name>
				<Source><![CDATA[
    internal boolean allowWriteUpAdjTransactions()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowProvisionForReverseTransactions</Name>
				<Source><![CDATA[
    internal boolean allowProvisionForReverseTransactions()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowTransferFromReverseTransactions</Name>
				<Source><![CDATA[
    internal boolean allowTransferFromReverseTransactions()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowExtraordinaryDepreciationTransactions</Name>
				<Source><![CDATA[
    internal boolean allowExtraordinaryDepreciationTransactions()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowSpecialDepreciationAllowanceTransactions</Name>
				<Source><![CDATA[
    internal boolean allowSpecialDepreciationAllowanceTransactions()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>