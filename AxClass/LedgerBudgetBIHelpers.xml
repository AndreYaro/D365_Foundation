<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerBudgetBIHelpers</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Shared supporting methods for Ledger aggregate entities.
/// </summary>
public class LedgerBudgetBIHelpers
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>convertBudgetAmountForNormalBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inverts the sign for the budget transaction amount having a budget type of revenue.
    /// </summary>
    /// <param name="_viewName">
    /// The name of the view that contains the field to use for comparison.
    /// </param>
    /// <param name="_dataSourceName">
    /// The name of the data source on the view that contains the field to use for comparison.
    /// </param>
    /// <param name="_transactionAmountFieldName">
    /// The name of the transaction amount field on the view to use for comparison.
    /// </param>
    /// <returns>
    /// If the budget type of the transaction is revenue, invert the amount; otherwise,
    /// return the existing amount.
    /// </returns>
    public static str convertBudgetAmountForNormalBalance(
        Name _viewName,
        Name _dataSourceName,
        Name _transactionAmountFieldName)
    {
        List invertSignForRevenueAmount = new List(Types::String);

        invertSignForRevenueAmount.addEnd(SysComputedColumn::equalExpression(
            SysComputedColumn::comparisonField(
                _viewName,
                _dataSourceName,
                fieldStr(BudgetActivityAnalysisCurrencyAmount, BudgetType)
            ),
            SysComputedColumn::returnLiteral(BudgetType::Revenue))
        );

        return LedgerBIHelpers::convertAmountForNormalBalance(
            _viewName,
            _dataSourceName,
            _transactionAmountFieldName,
            invertSignForRevenueAmount);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>