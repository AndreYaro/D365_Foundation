<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendOutPaymFileSequence</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustVendOutPaymFileSequence</c> class retrieves and updates the sequence number for payment
///    files.
/// </summary>
/// <remarks>
///    This class provides methods to find the next valid sequence number.
/// </remarks>
public class CustVendOutPaymFileSequence
{
    CustVendPaymModeTable   custVendPaymModeTable;
    Counter                 maxFilesPerDay;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>custVendPaymModeTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets a map that contains the <c>CustVendPaymModeTable</c> table.
    /// </summary>
    /// <param name="_custVendPaymModeTable">
    ///    The payment mode table buffer map; optional.
    /// </param>
    /// <returns>
    ///    A map that contains the payment mode table buffer map.
    /// </returns>
    /// <remarks>
    ///    The map may contain either the <c>VendPaymModeTable</c> or <c>CustPaymModeTable</c> table.
    /// </remarks>
    private CustVendPaymModeTable custVendPaymModeTable(CustVendPaymModeTable _custVendPaymModeTable = custVendPaymModeTable)
    {
        custVendPaymModeTable = _custVendPaymModeTable;
        return custVendPaymModeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastUsedSequenceNumToday</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the last sequence number that was used today.
    /// </summary>
    /// <returns>
    ///    The last file sequence number that used on the current day per payment format.
    /// </returns>
    /// <remarks>
    ///    If no payment file was generated today, this method returns 0.
    /// </remarks>
    private Counter getLastUsedSequenceNumToday()
    {
        if (custVendPaymModeTable.LastSequenceNumDate == DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
        {
            return custVendPaymModeTable.LastSequenceNumToday;
        }
        else
        {
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextFileSequenceNo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the next valid sequence number for today.
    /// </summary>
    /// <returns>
    ///    The next valid file sequence number for the current day per payment format.
    /// </returns>
    /// <remarks>
    ///    If the maximum number of files generated per day was exceeded, this method will throw an error.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Counter getNextFileSequenceNo()
    {
        Counter fileCounter;

        fileCounter = this.getLastUsedSequenceNumToday();
        fileCounter++;

        if (this.validateResult(fileCounter))
        {
            this.updateLastUsedSequenceNum(fileCounter);
        }

        return fileCounter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxFilesPerDay</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the maximum number of files that can be generated in a day.
    /// </summary>
    /// <param name="_maxFilesPerDay">
    ///    The maximum number of files that can be generated in a day; optional.
    /// </param>
    /// <returns>
    ///    The maximum number of files per day.
    /// </returns>
    /// <remarks>
    ///    Some payment formats have defined maximum allowed number of payment files per day.
    /// </remarks>
    private Counter maxFilesPerDay(Counter _maxFilesPerDay = maxFilesPerDay)
    {
        maxFilesPerDay = _maxFilesPerDay;
        return maxFilesPerDay;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an instance of the <c>CustVendOutPaymFileSequance</c> class.
    /// </summary>
    /// <param name="_custVendPaymModeTable">
    ///    The payment mode table buffer map.
    /// </param>
    /// <param name="_maximumFilesPerDay">
    ///    The maximum number of files that can be generated in a day.
    /// </param>
    /// <remarks>
    ///    This method does not have default values.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void new(CustVendPaymModeTable  _custVendPaymModeTable,
             Counter                _maximumFilesPerDay)
    {
        this.custVendPaymModeTable(_custVendPaymModeTable);
        this.maxFilesPerDay(_maximumFilesPerDay);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLastUsedSequenceNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Stores the last payment sequence number used today for the payment format.
    /// </summary>
    /// <param name="_fileCounter">
    ///    The last used payment file sequence number.
    /// </param>
    /// <remarks>
    ///    The total counter is incremented by 1.
    /// </remarks>
    private void updateLastUsedSequenceNum(Counter _fileCounter)
    {
        CustVendPaymModeTable   localCustVendPaymModeTable;

        if (custVendPaymModeTable)
        {
            ttsbegin;

            localCustVendPaymModeTable = new DictTable(custVendPaymModeTable.TableId).makeRecord();

            select firstOnly forUpdate localCustVendPaymModeTable
                where localCustVendPaymModeTable.RecId == custVendPaymModeTable.RecId;

            localCustVendPaymModeTable.LastSequenceNumber++;
            localCustVendPaymModeTable.LastSequenceNumDate  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            localCustVendPaymModeTable.LastSequenceNumToday = _fileCounter;

            localCustVendPaymModeTable.update();

            ttscommit;

            custVendPaymModeTable = localCustVendPaymModeTable;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateResult</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the maximum number of files generated per day was exceeded.
    /// </summary>
    /// <param name="_fileCounter">
    ///    The next payment file sequence number.
    /// </param>
    /// <returns>
    ///    true if the limit was not exceeded; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    This method causes an error if the maximum number of payment files per day was reached.
    /// </remarks>
    private boolean validateResult(Counter _fileCounter)
    {
        if (_fileCounter > this.maxFilesPerDay())
        {
            throw error(strfmt("@SYS310816", this.maxFilesPerDay()));
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>