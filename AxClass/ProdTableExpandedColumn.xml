<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdTableExpandedColumn</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProdTableExpandedColumn
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delayed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a computed column for the delayed field.
    /// </summary>
    /// <param name="_viewName">
    /// The view name where the column is to be defined.
    /// </param>
    /// <returns>
    /// The computed column definition.
    /// </returns>
    public static str delayed(tableName _viewName)
    {
        str         prodStatusField         = SysComputedColumn::returnField(_viewName, identifierstr(ProdTable),fieldstr(ProdTable, ProdStatus));
        str         dlvDateField            = SysComputedColumn::returnField(_viewName, identifierstr(ProdTable),fieldstr(ProdTable, DlvDate));
        str         finishDateField         = SysComputedColumn::returnField(_viewName, identifierstr(ProdTable),fieldstr(ProdTable, FinishedDate));
        Map         comparisonExpressionMap = SysComputedColumn::comparisionExpressionMap();

        comparisonExpressionMap.insert(
            SysComputedColumn::and2
            (
                SysComputedColumn::or2
                (
                    SysComputedColumn::equalExpression(prodStatusField, SysComputedColumn::returnLiteral(
                    ProdStatus::ReportedFinished
                    )),
                    SysComputedColumn::equalExpression(prodStatusField, SysComputedColumn::returnLiteral(
                    ProdStatus::Completed
                    ))
                ),
                SysComputedColumn::compareExpressions(dlvDateField, '>=', finishDateField)
            ),
            SysComputedColumn::returnLiteral(
            NoYes::No
            )
        );

        comparisonExpressionMap.insert(
            SysComputedColumn::and2
            (
                SysComputedColumn::or2
                (
                    SysComputedColumn::equalExpression(prodStatusField, SysComputedColumn::returnLiteral(
                    ProdStatus::ReportedFinished
                    )),
                    SysComputedColumn::equalExpression(prodStatusField, SysComputedColumn::returnLiteral(
                    ProdStatus::Completed
                    ))
                ),
                SysComputedColumn::compareExpressions(dlvDateField, '<', finishDateField)
            ),
            SysComputedColumn::returnLiteral(
            NoYes::Yes
            )
        );

        comparisonExpressionMap.insert(
            SysComputedColumn::and2
            (
                SysComputedColumn::and2
                (
                    SysComputedColumn::notEqualExpression(prodStatusField, SysComputedColumn::returnLiteral(
                    ProdStatus::ReportedFinished
                    )),
                    SysComputedColumn::notEqualExpression(prodStatusField, SysComputedColumn::returnLiteral(
                    ProdStatus::Completed
                    ))
                ),
                SysComputedColumn::compareExpressions(dlvDateField, '<', SysComputedColumn::getCurrentUtcDate())
            ),
            SysComputedColumn::returnLiteral(
            NoYes::Yes
            )
        );

        return SysComputedColumn::switch('', comparisonExpressionMap, SysComputedColumn::nullExpression());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>