<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetReversalRelatedVoucherManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class AssetReversalRelatedVoucherManager
{
    private guid relationId;
    private Set listOfRelatedVouchers;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static AssetReversalRelatedVoucherManager construct()
    {
        AssetReversalRelatedVoucherManager assetReversalRelatedVoucherManager = new AssetReversalRelatedVoucherManager();
        assetReversalRelatedVoucherManager.relationId = newGuid();
        assetReversalRelatedVoucherManager.listOfRelatedVouchers = new Set(Types::Container);

        return assetReversalRelatedVoucherManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromExistingVoucher</Name>
				<Source><![CDATA[
    internal static AssetReversalRelatedVoucherManager newFromExistingVoucher(Voucher _voucher, TransDate _transDate)
    {
        AssetReversalRelatedVoucherManager assetReversalRelatedVoucherManager = new AssetReversalRelatedVoucherManager();
        assetReversalRelatedVoucherManager.relationId = 
            AssetReversalRelatedVoucher::getRelationIdForVoucher(_voucher, _transDate);
        assetReversalRelatedVoucherManager.listOfRelatedVouchers = new Set(Types::Container);

        return assetReversalRelatedVoucherManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addVoucher</Name>
				<Source><![CDATA[
    internal void addVoucher(Voucher _voucher, TransDate _transDate)
    {
        container voucherDate = [_voucher, _transDate];

        if (_voucher
            && _transDate
            && !listOfRelatedVouchers.in(voucherDate))
        {
            listOfRelatedVouchers.add(voucherDate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    internal void save()
    {
        if (listOfRelatedVouchers 
            && listOfRelatedVouchers.elements() > 1)
        {
            RecordInsertList vouchersInsertList = new RecordInsertList(tableNum(AssetReversalRelatedVoucher));

            SetEnumerator voucherListEnumerator = listOfRelatedVouchers.getEnumerator();

            while (voucherListEnumerator.moveNext())
            {
                container voucherDate = voucherListEnumerator.current();
                                
                AssetReversalRelatedVoucher assetReversalRelatedVoucher;
                assetReversalRelatedVoucher.RelationId = relationId;
                assetReversalRelatedVoucher.Voucher = conPeek(voucherDate, 1);
                assetReversalRelatedVoucher.TransDate = conPeek(voucherDate, 2);

                vouchersInsertList.add(assetReversalRelatedVoucher);
            }

            vouchersInsertList.insertDatabase();
        }                
    }

]]></Source>
			</Method>
			<Method>
				<Name>addReversalRelatedVouchers</Name>
				<Source><![CDATA[
    internal void addReversalRelatedVouchers(
        Voucher _previousDepreciationAdjustmentVoucher,
        Voucher _depreciationAdjustmentVoucher,
        TransDate _transDate)
    {
        this.addVoucher(_previousDepreciationAdjustmentVoucher, _transDate);
        this.addVoucher(_depreciationAdjustmentVoucher, _transDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReversalRelatedVouchers</Name>
				<Source><![CDATA[
    internal Set getReversalRelatedVouchers()
    {
        if (listOfRelatedVouchers.empty())
        {
            AssetReversalRelatedVoucher assetReversalRelatedVoucher;

            while select Voucher, TransDate from assetReversalRelatedVoucher
                where assetReversalRelatedVoucher.RelationId == this.relationId
            {
                container voucherDate = [assetReversalRelatedVoucher.Voucher, assetReversalRelatedVoucher.TransDate];
                listOfRelatedVouchers.add(voucherDate);
            }
        }

        return listOfRelatedVouchers;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRelationId</Name>
				<Source><![CDATA[
    internal guid getRelationId()
    {
        return this.relationId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>