<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductTemplateCreateManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>EcoResProductTemplateCreateManager</c> class is the specialized version of the
///    <c>EcoResProductTemplateManager</c> class that creates product per company templates.
/// </summary>
class EcoResProductTemplateCreateManager extends EcoResProductTemplateManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the product per company template.
    /// </summary>
    public void createTemplate()
    {
        SysRecordTemplateStorage sysRecordTemplateStorage = this.createRecordTemplateStorage();

        sysRecordTemplateStorage.set();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static EcoResProductTemplateCreateManager construct()
    {
        return new EcoResProductTemplateCreateManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        EcoResProductTemplateCreateManager productTemplateCreateManager = EcoResProductTemplateCreateManager::newFromArgs(_args);

        productTemplateCreateManager.createTemplate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes a new instance of the <c>EcoResProductTemplateCreateManager</c> class from
    /// the input arguments.
    /// </summary>
    /// <param name="_args">
    /// An input arguments.
    /// </param>
    /// <returns>
    /// A new instance of the <c>EcoResProductTemplateCreateManager</c> class.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// Input arguments are not specified or are invalid.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// Input arguments have incorrect caller object.
    /// </exception>
    public static EcoResProductTemplateCreateManager newFromArgs(Args _args)
    {
        EcoResProductTemplateCreateManager productTemplateCreateManager;

        if (    !_args
            ||  _args.parmEnumType() != enumNum(SysRecordTemplateType))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        Object caller = _args.caller();

        if (    caller
            &&  caller is FormRun)
        {
            productTemplateCreateManager = EcoResProductTemplateCreateManager::construct();
            productTemplateCreateManager.parmRecordTemplateFormRun(caller as FormRun);
            productTemplateCreateManager.parmRecordTemplateType(_args.parmEnum());
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        return productTemplateCreateManager;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>