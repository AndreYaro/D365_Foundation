<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchStatusOrderedList</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Represents the ordered list of enumeration values for <c>PurchStatus</c> enum.
/// Allows to add values to the list to support extension.
/// </summary>
public class PurchStatusOrderedList implements Enumerable
{
    List purchStatusOrderedList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the enumerator of the ordered list.
    /// </summary>
    /// <returns>An instance of <c>ListEnumerator</c> class.</returns>
    public Enumerator getEnumerator()
    {
        return purchStatusOrderedList.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addAfter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>PurchStatus</c> enum to the ordered list after the specified value.
    /// </summary>
    /// <param name = "_newPurchStatusValue">Value to be added.</param>
    /// <param name = "_addAfterValue">Value to add after.</param>
    /// <exception>Could not find _addAfterValue in the ordered list.</exception>
    public void addAfter(PurchStatus _newPurchStatusValue, PurchStatus _addAfterValue)
    {
        ListIterator listIterator = new ListIterator(purchStatusOrderedList);
        while (listIterator.more())
        {
            if (listIterator.value() == _addAfterValue)
            {
                listIterator.next();
                listIterator.insert(_newPurchStatusValue);
                return;
            }
            listIterator.next();
        }
        throw error(strFmt("@SCM:CouldNotAddValueXAfterValueY_YnotFound", _newPurchStatusValue, _addAfterValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addStart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>PurchStatus</c> enum to the start of the ordered list.
    /// </summary>
    /// <param name = "_purchStatus">Value to be added.</param>
    public void addStart(PurchStatus _purchStatus)
    {
        purchStatusOrderedList.addStart(_purchStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEnd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>PurchStatus</c> enum to the end of the ordered list.
    /// </summary>
    /// <param name = "_purchStatus">Value to be added.</param>
    public void addEnd(PurchStatus _purchStatus)
    {
        purchStatusOrderedList.addEnd(_purchStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        this.initializePurchStatusOrderedList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnumerateInOrder</Name>
				<Source><![CDATA[
    private void setEnumerateInOrder(SortOrder _enumerateInOrder)
    {
        if (_enumerateInOrder == SortOrder::Descending)
        {
            this.reverseOrderedList();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reverseOrderedList</Name>
				<Source><![CDATA[
    private void reverseOrderedList()
    {
        List reversedPurchStatusOrderedList = new List(Types::Enum);
        ListEnumerator enumerator = this.getEnumerator() as ListEnumerator;
        
        while (enumerator.moveNext())
        {
            reversedPurchStatusOrderedList.addStart(enumerator.current());
        }

        purchStatusOrderedList = reversedPurchStatusOrderedList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the <c>PurchStatusOrderedList</c> class to be enumerated in the specified order.
    /// </summary>
    /// <param name="_enumerateInOrder">Enumerate the values in the enum in the specified order.</param>
    /// <returns>An instance of <c>PurchStatusOrderedList</c> class.</returns>
    public static PurchStatusOrderedList newFromOrder(SortOrder _enumerateInOrder = SortOrder::Ascending)
    {
        PurchStatusOrderedList orderedList = new PurchStatusOrderedList();
        orderedList.setEnumerateInOrder(_enumerateInOrder);
        return orderedList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializePurchStatusOrderedList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the list with all the applicable values of <c>PurchStatus</c> enumeration in ascending order.
    /// </summary>
    private void initializePurchStatusOrderedList()
    {
        purchStatusOrderedList = new List(Types::Enum);
        purchStatusOrderedList.addEnd(PurchStatus::None);
        purchStatusOrderedList.addEnd(PurchStatus::Backorder);
        purchStatusOrderedList.addEnd(PurchStatus::Received);
        purchStatusOrderedList.addEnd(PurchStatus::Invoiced);
        purchStatusOrderedList.addEnd(PurchStatus::Canceled);

        this.initializePurchStatusOrderedListDelegate(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializePurchStatusOrderedListDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Use this delegate to add new enumeration values to the list in the ascending sort order, when extending the <c>PurchStatus</c> enum.
    /// </summary>
    /// <param name = "_orderedList">The reference to the ordered list.</param>
    delegate void initializePurchStatusOrderedListDelegate(PurchStatusOrderedList _orderedList)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>