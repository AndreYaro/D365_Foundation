<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationLineType_Sales</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SalesQuotationTypeFactoryAttribute(QuotationType::Sales)]
class       SalesQuotationLineType_Sales
    extends     SalesQuotationLineType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromSalesQuotationLine</Name>
				<Source><![CDATA[
    void initFromSalesQuotationLine(
        SalesQuotationLine  _salesQuotationLine,
        boolean             _copyPrecisely,
        boolean             _copyPriceDisc,
        boolean             _copyQty,
        Qty                 _qty,
        PdsCWInventQty      _cwQty = 0)
    {
        super(_salesQuotationLine,
              _copyPrecisely,
              _copyPriceDisc,
              _copyQty,
              _qty,
              _cwQty);
        if (!_copyPrecisely && !_copyPriceDisc)
        {
            salesQuotationLine.Name               = _salesQuotationLine.Name;
            salesQuotationLine.ExternalItemId     = _salesQuotationLine.ExternalItemId;
            salesQuotationLine.SalesGroup         = _salesQuotationLine.SalesGroup;
            salesQuotationLine.setTaxItemGroup(_salesQuotationLine.TaxItemGroup);
            salesQuotationLine.DefaultDimension   = salesQuotationLine.copyDimension(_salesQuotationLine.DefaultDimension, this.dimensionCopy());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustInventBeQuotationControlled</Name>
				<Source><![CDATA[
    boolean  mustInventBeQuotationControlled()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsMRCCheckRestricted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the current <c>salesLine</c> record is for a restricted item.
    /// </summary>
    /// <returns>
    /// true if the current <c>salesLine</c> record is restricted; otherwise, false.
    /// </returns>
    protected boolean pdsMRCCheckRestricted()
    {
        boolean                 isRestricted = false;

        if (salesQuotationLine.SalesQty >  0)
        {
            SalesQuotationTable salesQuotationTable = salesQuotationLine.salesQuotationTable();
            AddressCountryRegionId deliveryCountryId = salesQuotationLine.deliveryAddress().CountryRegionId ? salesQuotationLine.deliveryAddress().CountryRegionId : salesQuotationTable.deliveryAddress().CountryRegionId;

            AddressStateId deliveryStateId = salesQuotationLine.deliveryAddress().State ? salesQuotationLine.deliveryAddress().State : salesQuotationTable.deliveryAddress().State;

            isRestricted = PdsMRCRestrictedListByItem::checkItemRestrictedForState(
                                             deliveryCountryId,
                                             deliveryStateId,
                                             salesQuotationLine.ItemId);
            if (!isRestricted)
            {
                isRestricted = PdsMRCRestrictedListByItem::checkItemRestrictedForCountry(
                                                deliveryCountryId,
                                                salesQuotationLine.ItemId);
            }

            if (isRestricted)
            {
                error(strFmt("@SYS4000966", salesQuotationLine.ItemId));
            }
        }

        return isRestricted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(FieldId fieldId)
    {
        boolean ret = super(fieldId);

        if (ret)
        {
            switch (fieldId)
            {
                case fieldNum(SalesQuotationLine, SalesPrice )    :
                case fieldNum(SalesQuotationLine, LineDisc )      :
                case fieldNum(SalesQuotationLine, LinePercent )   :
                case fieldNum(SalesQuotationLine, MultiLnDisc )   :
                case fieldNum(SalesQuotationLine, MultiLnPercent ):
                case fieldNum(SalesQuotationLine, SalesMarkup )   :
                    ret = this.canLineAmountBeUpdated();
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean     ok          = true;
        InventTable inventTable = salesQuotationLine.inventTable();

        ok = super();

        if (salesQuotationLine.ItemId && !inventTable)
        {
            ok = checkFailed(strFmt("@SYS5307", salesQuotationLine.ItemId));
        }

        if (!salesQuotationLine.checkLedgerDimension()
            || !salesQuotationLine.checkTaxItemGroup()
            || !salesQuotationLine.checkQuotationType()
            || !salesQuotationLine.checkCurrencyCode()
            || !salesQuotationLine.checkItemId()
            || !InventDistinctProductValidator::checkProductNotStopped(salesQuotationLine.ItemId, this.inventItemOrderSetupType(), salesQuotationLine.inventDim(), false)
            || (!salesQuotationLine.RecId && !salesQuotationLine.checkSalesCategory()))
        {
            ok = false;
        }

        if (!salesQuotationLine.ItemId && !salesQuotationLine.SalesCategory)
        {
            ok = checkFailed("@SYS134349");
        }

        if (salesQuotationLine.Transport && !salesQuotationLine.Port && IntrastatTransportMode::isPortMandatory(salesQuotationLine.Transport))
        {
            warning("@SYS26970");
        }

        if (salesQuotationLine.BarCodeType)
        {
            if (!BarcodeSetup::find(salesQuotationLine.BarCodeType).validateBarcode(salesQuotationLine.BarCode))
            {
                ok = false;
            }
        }

        if (ok && #PdsMRCEnabled)
        {
            ok = !this.pdsMRCCheckRestricted();
        }

        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>