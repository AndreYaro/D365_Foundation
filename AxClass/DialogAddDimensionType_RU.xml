<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DialogAddDimensionType_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The base class for manipulating dimensions on dialog
/// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
/// </summary>
abstract class DialogAddDimensionType_RU
{
    Dialog          dialog;
    str             strGoupCapton;
    DialogGroup     dialogGroup;
    DictType        dictType;
    List            listCntr;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addControl</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        abstract protected DialogField addControl(str _label)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createGroup</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void createGroup()
    {
        int             idx;
        DialogField     dialogField;
        ;

        dialogGroup = dialog.addGroup(strGoupCapton);

        for (idx = 1; idx <= dictType.arraySize(); idx++)
        {
            dialogField = this.addControl(dictType.label(idx));

            listCntr.addEnd(dialogField);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectType</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public container getSelectType()
    {
        container       conRet = connull();

        ListIterator    it = new ListIterator(listCntr);
        int             indx;
        DialogField     dialogField;
        ;

        indx = 0;

        while (it.more())
        {
            indx++;

            dialogField = it.value();

            if (dialogField.value())
            {
                conRet += indx;
            }

            it.next();
        }

        return conRet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initGroupElement</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void initGroupElement(container _initData)
    {
        ListIterator    it = new ListIterator(listCntr);
        int             indx;
        DialogField     dialogField;
        ;

        indx = 0;

        while (it.more())
        {
            indx++;

            if (confind(_initData, indx) != 0)
            {
                dialogField = it.value();

                dialogField.value(NoYes::Yes);
            }

            it.next();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void new(Dialog _dialog, container _initData = connull(), str _groupCaption = "")
    {
        if (! _dialog)
            throw error(error::wrongUseOfFunction(funcname()));

        dialog          = _dialog;
        dialogGroup     = null;
        dictType        = new DictType(extendedtypenum(Dimension));
        listCntr        = new List(Types::Class);

        strGoupCapton   = (_groupCaption) ? _groupCaption : "@GLS103491";

        this.createGroup();

        if (! prmisdefault(_initData))
        {
            this.initGroupElement(_initData);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>