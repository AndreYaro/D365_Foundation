<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocViewWebServiceHelper_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class contains helper methods that will be used by the <c>EFDocViewWebService_BR</c> form.
/// </summary>
class EFDocViewWebServiceHelper_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initWebServicesViewPerFiscalEstab_NFCe</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current EFDocWebServiceTmp_BR buffer with data related to the provided fiscal establishment, using its NFC-e authority
    /// </summary>
    /// <param name="_fiscalEstablishment">
    /// The fiscal establishment from which the configurations are going to be fetched
    /// </param>
    public static void initWebServicesViewPerFiscalEstab_NFCe(EFDocWebServiceParameters_BR _wsParams, FiscalEstablishment_BR _fiscalEstablishment)
    {
        EFDocMsg_EventCancel_BR eventMsg;

        void insertWebService(EFDocWebService_BR _efDocWebService)
        {
            EFDocWebServiceConfigurator_BR     configurator;

            configurator = new EFDocWebServiceConfigurator_BR(_fiscalEstablishment.ConsumerEFDocEnvironment,
                                                              _fiscalEstablishment.ConsumerEFDocVersion,
                                                              _fiscalEstablishment.consumerEFDocAuthority,
                                                              _efDocWebService);

            _wsParams.WebService = _efDocWebService;

            _wsParams.Authority = _fiscalEstablishment.consumerEFDocAuthority;
            _wsParams.Environment = _fiscalEstablishment.ConsumerEFDocEnvironment;

            if (_efDocWebService == EFDocWebService_BR::Events)
            {
                eventMsg  = EFDocMsg_EventCancel_BR::construct(EFDocContingMode_BR::Off);

                _wsParams.URL = eventMsg.getURL_NFConsumer(_fiscalEstablishment);
            }
            else
            {
                _wsParams.URL = configurator.getURL();
            }

            _wsParams.insert();
        }

        insertWebService(EFDocWebService_BR::Submit);
        insertWebService(EFDocWebService_BR::Discard);
        insertWebService(EFDocWebService_BR::SubmitInquire);
        insertWebService(EFDocWebService_BR::SubmitReturn);
        insertWebService(EFDocWebService_BR::Events);
        insertWebService(EFDocWebService_BR::ServiceInquire);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWebServicesViewPerFiscalEstab_NFe</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current EFDocWebServiceTmp_BR buffer with data related to the provided fiscal establishment, using its NF-e authority
    /// </summary>
    /// <param name="_fiscalEstablishment">
    /// The fiscal establishment from which the configurations are going to be fetched
    /// </param>
    public static void initWebServicesViewPerFiscalEstab_NFe(EFDocWebServiceParameters_BR _wsParams, FiscalEstablishment_BR _fiscalEstablishment)
    {
        EFDocMsg_EventCancel_BR eventMsg;

        void insertWebService(EFDocWebService_BR _efDocWebService)
        {
            EFDocWebServiceConfigurator_BR     configurator;

            configurator = new EFDocWebServiceConfigurator_BR(_fiscalEstablishment.EFDocEnvironment,
                                                              _fiscalEstablishment.EFDocVersion,
                                                              _fiscalEstablishment.EFDocAuthority,
                                                              _efDocWebService);

            _wsParams.WebService = _efDocWebService;

            _wsParams.Authority = _fiscalEstablishment.EFDocAuthority;
            _wsParams.Environment = _fiscalEstablishment.EFDocEnvironment;

            if (_efDocWebService == EFDocWebService_BR::Events)
            {
                eventMsg  = EFDocMsg_EventCancel_BR::construct(_fiscalEstablishment.getCurrentNfeContingencyMode().Mode);

                _wsParams.URL = eventMsg.getURL(_fiscalEstablishment);
            }
            else
            {
                _wsParams.URL = configurator.getURL();
            }

            _wsParams.insert();
        }

        insertWebService(EFDocWebService_BR::Submit);
        insertWebService(EFDocWebService_BR::Discard);
        insertWebService(EFDocWebService_BR::SubmitInquire);
        insertWebService(EFDocWebService_BR::SubmitReturn);
        insertWebService(EFDocWebService_BR::Events);
        insertWebService(EFDocWebService_BR::ServiceInquire);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>