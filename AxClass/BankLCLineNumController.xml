<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCLineNumController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCLineNumController</c> class is the controller helper class for the <c>LineNum</c>
///    field of the <c>BankLCLine</c> table.
/// </summary>
abstract class BankLCLineNumController
{
    BankLCRefRecId  bankLCRecId;
    boolean         isAllowOpened;
    boolean         isAllowUpdatedPackingSlip;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createReferenceTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>SysReferenceTableLookup</c> class.
    /// </summary>
    /// <param name="_control">
    ///    The form control to use to perform the lookup.
    /// </param>
    /// <returns>
    ///    The created reference table lookup
    /// </returns>
    abstract protected SysReferenceTableLookup createReferenceTableLookup(FormReferenceControl _control)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSysTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>SysTableLookup</c> class.
    /// </summary>
    /// <param name="_control">
    ///    The form control to use to perform the lookup.
    /// </param>
    /// <returns>
    ///    The created <c>SysTableLookup</c> class.
    /// </returns>
    abstract protected SysTableLookup createSysTableLookup(FormIntControl _control)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJumpRefForms</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the reference jumper form.
    /// </summary>
    /// <returns>
    ///    The created form arguments.
    /// </returns>
    abstract protected Args getJumpRefForms()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the lookup query.
    /// </summary>
    /// <returns>
    ///    The query.
    /// </returns>
    abstract protected Query getQuery()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSysReferenceTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the prepared <c>SysReferenceTableLookup</c> object.
    /// </summary>
    /// <param name="_control">
    ///    The form control to use to perform the reference lookup.
    /// </param>
    /// <returns>
    ///    The prepared <c>SysReferenceTableLookup</c> object.
    /// </returns>
    protected SysReferenceTableLookup getSysReferenceTableLookup(FormReferenceControl _control)
    {
        SysReferenceTableLookup sysReferenceTableLookup;

        sysReferenceTableLookup = this.createReferenceTableLookup(_control);

        sysReferenceTableLookup.parmQuery(this.getQuery());

        return SysReferenceTableLookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSysTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the prepared <c>SysTableLookup</c> object.
    /// </summary>
    /// <param name="_control">
    ///    The form control to use to perform the reference lookup
    /// </param>
    /// <returns>
    ///    The prepared <c>SysTableLookup</c> object.
    /// </returns>
    protected SysTableLookup getSysTableLookup(FormIntControl _control)
    {
        SysTableLookup sysTableLookup;

        sysTableLookup = this.createSysTableLookup(_control);

        sysTableLookup.parmQuery(this.getQuery());

        return sysTableLookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs the reference jump.
    /// </summary>
    public void jumpRef()
    {
        Args            args;
        FormRun         formRun;

        args = this.getJumpRefForms();

        formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.detach();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs the reference lookup.
    /// </summary>
    /// <param name="_control">
    ///    The form control use to perform the reference lookup
    /// </param>
    /// <returns>
    ///    The selected record.
    /// </returns>
    public Common lookupReference(FormReferenceControl _control)
    {
        return this.getSysReferenceTableLookup(_control).performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllowOpened</Name>
				<Source><![CDATA[
        public boolean parmAllowOpened(boolean _isAllowOpened = isAllowOpened)
    {
        isAllowOpened = _isAllowOpened;
        return isAllowOpened;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllowUpdatedPackingSlip</Name>
				<Source><![CDATA[
        public boolean parmAllowUpdatedPackingSlip(boolean _isAllowUpdatedPackingSlip = isAllowUpdatedPackingSlip)
    {
        isAllowUpdatedPackingSlip = _isAllowUpdatedPackingSlip;
        return isAllowUpdatedPackingSlip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankLCRecId</Name>
				<Source><![CDATA[
        public BankLCRefRecId parmBankLCRecId(BankLCRefRecId _bankLCRecId = BankLCRecId)
    {
        bankLCRecId = _bankLCRecId;
        return bankLCRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs the table lookup.
    /// </summary>
    /// <param name="_control">
    ///    The form control that requires the lookup.
    /// </param>
    public void performLookup(FormControl _control)
    {
        this.getSysTableLookup(_control).performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs the reference resolving.
    /// </summary>
    /// <param name="_formReferenceControl">
    ///    The form control for which to request the resolve reference.
    /// </param>
    /// <returns>
    ///    The selected record.
    /// </returns>
    public Common resolveReference(FormReferenceGroupControl _formReferenceControl)
    {
        BankLCShipmentLineNum bankLCShipmentLineNum;

        if (_formReferenceControl.controlCount() > 0)
        {
            bankLCShipmentLineNum = str2int(_formReferenceControl.controlNum(1).valueStr());
        }

        return BankLCLine::findByTableAndLineNum(bankLCRecId, bankLCShipmentLineNum);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>