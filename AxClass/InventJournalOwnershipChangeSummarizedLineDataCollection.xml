<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalOwnershipChangeSummarizedLineDataCollection</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventJournalOwnershipChangeSummarizedLineDataCollection</c> class holds summarized data for creating multiple inventory ownership change journal lines.
/// </summary>
public class InventJournalOwnershipChangeSummarizedLineDataCollection
{
    Map lineDataMap;
    MapEnumerator lineDataEnumerator;
    InventJournalOwnershipChangeLineData currentLineData;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        lineDataMap = new Map(Types::String, Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventJournalOwnershipChangeSummarizedLineDataCollection construct()
    {
        return new InventJournalOwnershipChangeSummarizedLineDataCollection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds line data to the collection.
    /// </summary>
    /// <param name = "_lineData">Line data to add.</param>
    /// <remarks>This method will also summarize line data if needed.</remarks>
    public void add(InventJournalOwnershipChangeLineData _lineData)
    {
        str lineDataId = _lineData.getIdentifier();

        if (!lineDataMap.exists(lineDataId))
        {
            lineDataMap.insert(lineDataId, _lineData);
        }
        else
        {
            InventJournalOwnershipChangeLineData summarizedLineData = lineDataMap.lookup(lineDataId);
            summarizedLineData.parmQuantity(summarizedLineData.parmQuantity() + _lineData.parmQuantity());

            SetEnumerator inventTransOriginRecIds = _lineData.getInventTransOriginRecIdEnumerator();
            while (inventTransOriginRecIds.moveNext())
            {
                summarizedLineData.addInventTransOriginRecId(inventTransOriginRecIds.current());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the enumerator for traversing over line data.
    /// </summary>
    public void initializeEnumerator()
    {
        lineDataEnumerator = lineDataMap.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the enumerator to the next line data object in the collection.
    /// </summary>
    /// <returns>true, if there is an object to move to; otherwise, false</returns>
    public boolean moveNext()
    {
        boolean hasItem;

        if (lineDataEnumerator)
        {
            hasItem = lineDataEnumerator.moveNext();
        }
        else
        {
            hasItem = false;
        }

        if (hasItem)
        {
            currentLineData = lineDataEnumerator.currentValue();
        }

        return hasItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the line data object that the enumerator is currently positioned on.
    /// </summary>
    /// <returns>A line data object.</returns>
    public InventJournalOwnershipChangeLineData current()
    {
        return currentLineData;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>