<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocChorusProInvoiceVendProjectManagerSiretProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BusinessDocChorusProInvoiceVendProjectManagerSiretProvider extends BusinessDocChorusProInvoiceCustVendSiretProviderBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructFromDataSource</Name>
				<Source><![CDATA[
    public static BusinessDocChorusProInvoiceVendProjectManagerSiretProvider constructFromDataSource(FormDataSource _vendInvoiceInfoTableDataSource)
    {
        var ret = new BusinessDocChorusProInvoiceVendProjectManagerSiretProvider();
        ret.dataSource = _vendInvoiceInfoTableDataSource;
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromTableRecord</Name>
				<Source><![CDATA[
    public static BusinessDocChorusProInvoiceVendProjectManagerSiretProvider constructFromTableRecord(VendInvoiceInfoTable _vendInvoiceInfoTable)
    {
        var ret = new BusinessDocChorusProInvoiceVendProjectManagerSiretProvider();
        ret.invoiceOrderAccount = _vendInvoiceInfoTable;
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSiret</Name>
				<Source><![CDATA[
    public BusinessDocInvoiceAccountSiret_FR getSiret()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable = this.getRecord();
        if (!vendInvoiceInfoTable.ProjectManager_FR)
        {
            throw error("@BusinessDocumentSubmissionService:ProjectManagerAccountNotSet");
        }
        VendTable vendTable = VendTable::find(vendInvoiceInfoTable.ProjectManager_FR);
        BusinessDocInvoiceAccountSiret_FR ret = TaxRegistration::getPrimaryRegistrationNumber(vendTable, TaxRegistrationTypesList::SIRET);
        if (!ret)
        {
            ret = vendTable.CompanyIdSiret;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>