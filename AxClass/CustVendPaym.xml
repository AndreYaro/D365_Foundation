<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendPaym</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class CustVendPaym
{
    LedgerJournalTrans          ledgerJournalTrans;
    CustVendTable               custVendTable;
    CustTable                   custTable;
    VendTable                   vendTable;
    BankAccountMap              bankAccountMap;
    CustBankAccount             custBankAccount;
    VendBankAccount             vendBankAccount;
    BankAccountTable            bankAccountTable;

    BankMsgToBank               messageToSendersBank;
    AmountCur                   paymAmountInForeignCurrency;
    AmountMST                   paymAmountInSendersCurrency;
    CurrencyCode                paymCurrencyCode;
    TransDate                   paymDate;
    DocumentDate                documentDate;
    DocumentNum                 documentNumber;
    ExchRate                    paymExchangeRate;
    ExchRateRef                 paymExchangeRateReference;
    PaymId                      paymId;
    FreeTxt                     paymNote;
    BankCentralBankPurposeCode  paymPurposeCode;
    BankCentralBankPurposeText  paymPurposeText;
    PaymReference               paymReference;
    BankCodeType                recieversBankCodeType;
    BankId                      recieversBankId;
    CustVendPaymTextCode        recieversBankTextCode;
    BankAccount                 recieversBankAccount;
    BankThirdPartyAccountId     recieversBankAccountId;
    Name                        recieversBankName;
    BankRegNum                  recieversBankRegistrationNumber;
    AddressStreet               recieversBankStreet;
    AddressCity                 recieversBankCity;
    AddressZipCodeId            recieversBankZipCode;
    AddressCountryRegionId      recieversBankCountryRegionId;
    AddressCountryRegionISOCode recieversBankCountryRegionISOCode;
    Addressing                  recieversCompanyAddress;
    Addressing                  recieversCompanyAddress1;
    Addressing                  recieversCompanyAddress2;
    Addressing                  recieversCompanyAddress3;
    Addressing                  recieversBankAddress;
    Addressing                  recieversBankAddress1;
    Addressing                  recieversBankAddress2;
    Addressing                  recieversBankAddress3;
    AddressStreet               recieversStreet;
    AddressCity                 recieversCity;
    AddressZipCodeId            recieversZipCode;
    AddressCountryRegionId      recieversCountryRegionId;
    AddressCountryRegionISOCode recieversCountryRegionISOCode;

    // <GEERU>
    AddressTownId_RU            recieversTownId_RU;
    AddressSettlementId_RU      recieversSettlementId_RU;
    AddressStreetId_RU          recieversStreetId_RU;
    AddressEstate_RU            recieversEstate_RU;
    AddressBuilding_RU          recieversBuilding_RU;
    AddressFlat_RU              recieversFlat_RU;
    // </GEERU>
    Name                        recieversCompanyName;
    CustVendAccountExt          recieversIdentificationOfSender;
    str                         recieversInvoiceNumber;
    SWIFTNo                     recieversSwiftAddress;
    BankIBAN                    recieversBankIban;
    str 20                      sendersAccountNumber;
    BankAccount                 sendersBankAccount;
    BankRegNum                  sendersBankRegistrationNumber;
    Name                        sendersBankName;
    Addressing                  sendersCompanyAddress;
    Addressing                  sendersCompanyAddress1;
    Addressing                  sendersCompanyAddress2;
    Addressing                  sendersCompanyAddress3;
    CompanyName                 sendersCompanyName;
    InvoiceId                   sendersInvoiceNumber;
    VendAccount                 sendersIdentificationOfReciever;
    CompanyPaymId               sendersBanksIdentificationOfSender;
    CurrencyCode                sendersBankCurrencyCode;
    BankMultiCurrency           sendersBankMultiCurrency;
    BankIBAN                    sendersBankIban;

    TransDate                   dateOfImportOfGoods;

    CurrencyCode                bankAgreementCurrencyCode;
    ExchRate                    bankAgreementExchRate;
    ExchRateRef                 bankAgreementExchRateRef;

    FeeContractAccount          feeContractAccount;
    CustVendNACHAIATInfoTable_US    custVendNACHAIATInfoTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bankAccountMap</Name>
				<Source><![CDATA[
    public BankAccountMap bankAccountMap(BankAccountMap _bankAccountMap = bankAccountMap)
    {
        //test checkin
        bankAccountMap = _bankAccountMap;
        return bankAccountMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankAccountTable</Name>
				<Source><![CDATA[
    public BankAccountTable bankAccountTable(BankAccountTable _bankAccountTable = bankAccountTable)
    {
        bankAccountTable = _bankAccountTable;
        return bankAccountTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankAgreementCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode bankAgreementCurrencyCode(CurrencyCode _bankAgreementCurrencyCode = bankAgreementCurrencyCode)
    {
        bankAgreementCurrencyCode = _bankAgreementCurrencyCode;
        return bankAgreementCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankAgreementExchRate</Name>
				<Source><![CDATA[
    public ExchRate bankAgreementExchRate(ExchRate _bankAgreementExchRate = bankAgreementExchRate)
    {
        bankAgreementExchRate = _bankAgreementExchRate;
        return bankAgreementExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankAgreementExchRateRef</Name>
				<Source><![CDATA[
    public ExchRateRef bankAgreementExchRateRef(ExchRateRef _bankAgreementExchRateRef = bankAgreementExchRateRef)
    {
        bankAgreementExchRateRef = _bankAgreementExchRateRef;
        return bankAgreementExchRateRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankCodeText</Name>
				<Source><![CDATA[
    Name bankCodeText()
    {
        return (this.recieversBankCodeType() != BankCodeType::Code_None ?
               (strfmt('//%1%2', this.recieversBankCodeType(), this.recieversBankRegistrationNumber())) : '');  // BANKKODE +BANKID
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendTable</Name>
				<Source><![CDATA[
    public CustVendTable custVendTable(CustVendTable _custVendTable = custVendTable)
    {
        custVendTable = _custVendTable;
        return custVendTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateOfImportOfGoods</Name>
				<Source><![CDATA[
    // Date of importing the goods paying for, used for reporting statistics
    public TransDate dateOfImportOfGoods(TransDate _dateOfImportOfGoods = dateOfImportOfGoods)
    {
        dateOfImportOfGoods = _dateOfImportOfGoods;
        return dateOfImportOfGoods;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentDate</Name>
				<Source><![CDATA[
    DocumentDate documentDate(DocumentDate _documentDate = documentDate)
    {
        documentDate = _documentDate;
        return documentDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets and returns a document number.
    /// </summary>
    /// <param name="_documentNumber">
    /// The document number.
    /// </param>
    /// <returns>
    ///  The assigned document number.
    /// </returns>
    public DocumentNum documentNumber(DocumentNum _documentNumber = documentNumber)
    {
        documentNumber = _documentNumber;
        return documentNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dueDate</Name>
				<Source><![CDATA[
    public DueDate dueDate()
    {
        return ledgerJournalTrans.Due;
    }

]]></Source>
			</Method>
			<Method>
				<Name>feeContractAccount</Name>
				<Source><![CDATA[
    // eg. PostGiro account for fees regarding the payment
    public FeeContractAccount feeContractAccount(FeeContractAccount _feeContractAccount = feeContractAccount)
    {
        feeContractAccount = _feeContractAccount;
        return feeContractAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalTrans</Name>
				<Source><![CDATA[
    public LedgerJournalTrans ledgerJournalTrans(LedgerJournalTrans _ledgerJournalTrans = ledgerJournalTrans)
    {
        ledgerJournalTrans = _ledgerJournalTrans;
        return ledgerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>messageToSendersBank</Name>
				<Source><![CDATA[
    // Field from CustVendBankTable
    public FreeTxt messageToSendersBank(BankMsgToBank _messageToSendersBank = messageToSendersBank)
    {
        messageToSendersBank = _messageToSendersBank;
        return messageToSendersBank;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        this.setBuffer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustVendNACHAIATInfoTable</Name>
				<Source><![CDATA[
    public CustVendNACHAIATInfoTable_US parmCustVendNACHAIATInfoTable(CustVendNACHAIATInfoTable_US _custVendNACHAIATInfoTable = custVendNACHAIATInfoTable)
    {
        custVendNACHAIATInfoTable = _custVendNACHAIATInfoTable;
        return custVendNACHAIATInfoTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymAmountInForeignCurrency</Name>
				<Source><![CDATA[
    public AmountCur paymAmountInForeignCurrency(AmountCur _paymAmountInForeignCurrency = paymAmountInForeignCurrency)
    {
        paymAmountInForeignCurrency = _paymAmountInForeignCurrency;
        return paymAmountInForeignCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymAmountInSendersCurrency</Name>
				<Source><![CDATA[
    public AmountMST paymAmountInSendersCurrency(AmountMST _paymAmountInSendersCurrency = paymAmountInSendersCurrency )
    {
        paymAmountInSendersCurrency = _paymAmountInSendersCurrency;
        return paymAmountInSendersCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode paymCurrencyCode(CurrencyCode _paymCurrencyCode = paymCurrencyCode)
    {
        paymCurrencyCode = _paymCurrencyCode;
        return paymCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymDate</Name>
				<Source><![CDATA[
    public TransDate paymDate(TransDate _paymDate = paymDate)
    {
        paymDate = _paymDate;
        return paymDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymExchangeRate</Name>
				<Source><![CDATA[
    // The agreed exchangerate of a payment in foreing currency
    public ExchRate paymExchangeRate(ExchRate _paymExchangeRate = paymExchangeRate )
    {
        paymExchangeRate = _paymExchangeRate;
        return paymExchangeRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymExchangeRateReference</Name>
				<Source><![CDATA[
    // Reference to an agreed exhrate for the payment
    public ExchRateRef paymExchangeRateReference(ExchRateRef _paymExchangeRateReference = paymExchangeRateReference)
    {
        paymExchangeRateReference = _paymExchangeRateReference;
        return paymExchangeRateReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymId</Name>
				<Source><![CDATA[
    // The field PaymId from the journalline
    public PaymId paymId(PaymId _paymId = paymId)
    {
        paymId = _paymId;
        return paymId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymNote</Name>
				<Source><![CDATA[
    // The field paymentnotes from the journalline
    public PaymNote paymNote(PaymNote _paymNote = paymNote)
    {
        paymNote = _paymNote;
        return paymNote;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymPurposeCode</Name>
				<Source><![CDATA[
    public BankCentralBankPurposeCode paymPurposeCode(BankCentralBankPurposeCode _paymPurposeCode = paymPurposeCode)
    {
        paymPurposeCode = _paymPurposeCode;
        return paymPurposeCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymPurposeText</Name>
				<Source><![CDATA[
    public BankCentralBankPurposeText paymPurposeText(BankCentralBankPurposeText _paymPurposeText = paymPurposeText)
    {
        paymPurposeText = _paymPurposeText;
        return paymPurposeText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymReference</Name>
				<Source><![CDATA[
    public PaymReference paymReference(PaymReference _paymReference = paymReference)
    {
        paymReference = _paymReference;
        return paymReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankAccount</Name>
				<Source><![CDATA[
    public BankAccount recieversBankAccount(BankAccount _recieversBankAccount = recieversBankAccount)
    {
        recieversBankAccount = _recieversBankAccount;
        return recieversBankAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankAccountId</Name>
				<Source><![CDATA[
    public BankThirdPartyAccountId recieversBankAccountId(BankThirdPartyAccountId _recieversBankAccountId = recieversBankAccountId)
    {
        recieversBankAccountId = _recieversBankAccountId;
        return recieversBankAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankAddress</Name>
				<Source><![CDATA[
    public Addressing recieversBankAddress(Addressing _recieversBankAddress = recieversBankAddress)
    {
        recieversBankAddress = _recieversBankAddress;
        return recieversBankAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankAddress1</Name>
				<Source><![CDATA[
    public Addressing recieversBankAddress1(Addressing _recieversBankAddress1 = recieversBankAddress1)
    {
        recieversBankAddress1 = _recieversBankAddress1;
        return recieversBankAddress1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankAddress2</Name>
				<Source><![CDATA[
    public Addressing recieversBankAddress2(Addressing _recieversBankAddress2 = recieversBankAddress2)
    {
        recieversBankAddress2 = _recieversBankAddress2;
        return recieversBankAddress2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankAddress3</Name>
				<Source><![CDATA[
    public Addressing recieversBankAddress3(Addressing _recieversBankAddress3 = recieversBankAddress3)
    {
        recieversBankAddress3 = _recieversBankAddress3;
        return recieversBankAddress3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankAddressTrim</Name>
				<Source><![CDATA[
    void recieversBankAddressTrim()
    {
        if (!recieversBankAddress1)          //No address in line 1, Line 2 and 3 have address
        {
            recieversBankAddress1 = recieversBankAddress2;
            recieversBankAddress2 = recieversBankAddress3;
            recieversBankAddress3 = '';
        }
        if (!recieversBankAddress1)          //Still no address in line 1, Only line 3 had address
        {
            recieversBankAddress1 = recieversBankAddress2;
            recieversBankAddress2 = recieversBankAddress3;
            recieversBankAddress3 = '';
        }
        if (!recieversBankAddress2)          //No address in line 2
        {
            recieversBankAddress2 = recieversBankAddress3;
            recieversBankAddress3 = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankCity</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets and returns the recievers bank city.
    /// </summary>
    /// <param name="_recieversBankCity">
    /// The bank city.
    /// </param>
    /// <returns>
    ///  The recievers bank city.
    /// </returns>
    public AddressCity recieversBankCity(AddressCity _recieversBankCity = recieversBankCity)
    {
        recieversBankCity = _recieversBankCity;
        return recieversBankCity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankCodeType</Name>
				<Source><![CDATA[
    public BankCodeType recieversBankCodeType(BankCodeType _recieversBankCodeType = recieversBankCodeType)
    {
        recieversBankCodeType = _recieversBankCodeType;
        return recieversBankCodeType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankCountryRegionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets and returns the recievers bank country region.
    /// </summary>
    /// <param name="_recieversBankCountryRegionId">
    /// The bank country region.
    /// </param>
    /// <returns>
    ///  The recievers bank country region.
    /// </returns>
    public AddressCountryRegionId recieversBankCountryRegionId(AddressCountryRegionId _recieversBankCountryRegionId = recieversBankCountryRegionId)
    {
        recieversBankCountryRegionId = _recieversBankCountryRegionId;
        return recieversBankCountryRegionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankCountryRegionISOCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets and returns the recievers bank ISO code.
    /// </summary>
    /// <param name="_recieversBankCountryRegionISOCode">
    /// The bank ISO code.
    /// </param>
    /// <returns>
    ///  The recievers bank ISO code.
    /// </returns>
    public AddressCountryRegionISOCode recieversBankCountryRegionISOCode(AddressCountryRegionISOCode _recieversBankCountryRegionISOCode = recieversBankCountryRegionISOCode)
    {
        recieversBankCountryRegionISOCode = _recieversBankCountryRegionISOCode;
        return recieversBankCountryRegionISOCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankIban</Name>
				<Source><![CDATA[
    public BankIBAN recieversBankIban(BankIBAN _recieversBankIban = recieversBankIban)
    {
        recieversBankIban = _recieversBankIban;
        return recieversBankIban;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankName</Name>
				<Source><![CDATA[
    public Name recieversBankName(Name _recieversBankName = recieversBankName)
    {
        recieversBankName = _recieversBankName;
        return recieversBankName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankRegistrationNumber</Name>
				<Source><![CDATA[
    public BankRegNum recieversBankRegistrationNumber(BankRegNum _recieversBankRegistrationNumber = recieversBankRegistrationNumber)
    {
        recieversBankRegistrationNumber = _recieversBankRegistrationNumber;
        return recieversBankRegistrationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankStreet</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets and returns the recievers bank street.
    /// </summary>
    /// <param name="_recieversBankStreet">
    /// The recievers bank street.
    /// </param>
    /// <returns>
    ///  The recievers recievers bank street.
    /// </returns>
    public AddressStreet recieversBankStreet(AddressStreet _recieversBankStreet = recieversBankStreet)
    {
        recieversBankStreet = _recieversBankStreet;
        return recieversBankStreet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankTextCode</Name>
				<Source><![CDATA[
    public CustVendPaymTextCode recieversBankTextCode(CustVendPaymTextCode _recieversBankTextCode = recieversBankTextCode)
    {
        recieversBankTextCode = _recieversBankTextCode;
        return recieversBankTextCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBankZipCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets and returns the recievers bank zip code.
    /// </summary>
    /// <param name="_recieversBankZipCode">
    /// The recievers bank zip code.
    /// </param>
    /// <returns>
    ///  The recievers recievers bank zip code.
    /// </returns>
    public AddressZipCodeId recieversBankZipCode(AddressZipCodeId _recieversBankZipCode = recieversBankZipCode)
    {
        recieversBankZipCode = _recieversBankZipCode;
        return recieversBankZipCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversBuilding_RU</Name>
				<Source><![CDATA[
    public AddressBuilding_RU  recieversBuilding_RU(AddressBuilding_RU _recieversBuilding_RU = recieversBuilding_RU)
    {
        recieversBuilding_RU = _recieversBuilding_RU;
        return recieversBuilding_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCity</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets and returns the recievers city.
    /// </summary>
    /// <param name="_recieversCity">
    /// The recievers city.
    /// </param>
    /// <returns>
    ///  The recievers city.
    /// </returns>
    public AddressCity recieversCity(AddressCity _recieversCity = recieversCity)
    {
        recieversCity = _recieversCity;
        return recieversCity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCompanyAddress</Name>
				<Source><![CDATA[
    public Addressing recieversCompanyAddress(Addressing _recieversCompanyAddress = recieversCompanyAddress)
    {
        recieversCompanyAddress = _recieversCompanyAddress;
        return recieversCompanyAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCompanyAddress1</Name>
				<Source><![CDATA[
    public Addressing recieversCompanyAddress1(Addressing _recieversCompanyAddress1 = recieversCompanyAddress1)
    {
        recieversCompanyAddress1 = _recieversCompanyAddress1;
        return recieversCompanyAddress1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCompanyAddress2</Name>
				<Source><![CDATA[
    public Addressing recieversCompanyAddress2(Addressing _recieversCompanyAddress2 = recieversCompanyAddress2)
    {
        recieversCompanyAddress2 = _recieversCompanyAddress2;
        return recieversCompanyAddress2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCompanyAddress3</Name>
				<Source><![CDATA[
    public Addressing recieversCompanyAddress3(Addressing _recieversCompanyAddress3 = recieversCompanyAddress3)
    {
        recieversCompanyAddress3 = _recieversCompanyAddress3;
        return recieversCompanyAddress3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCompanyAddressTrim</Name>
				<Source><![CDATA[
    void recieversCompanyAddressTrim()
    {
        if (!recieversCompanyAddress1)          //No address in line 1, Line 2 and 3 have address
        {
            recieversCompanyAddress1 = recieversCompanyAddress2;
            recieversCompanyAddress2 = recieversCompanyAddress3;
            recieversCompanyAddress3 = '';
        }
        if (!recieversCompanyAddress1)          //Still no address in line 1, Only line 3 had address
        {
            recieversCompanyAddress1 = recieversCompanyAddress2;
            recieversCompanyAddress2 = recieversCompanyAddress3;
            recieversCompanyAddress3 = '';
        }
        if (!recieversCompanyAddress2)          //No address in line 2
        {
            recieversCompanyAddress2 = recieversCompanyAddress3;
            recieversCompanyAddress3 = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCompanyName</Name>
				<Source><![CDATA[
    public Name recieversCompanyName(Name _recieversCompanyName = recieversCompanyName)
    {
        recieversCompanyName = _recieversCompanyName;
        return recieversCompanyName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCountryRegionId</Name>
				<Source><![CDATA[
    public AddressCountryRegionId recieversCountryRegionId(AddressCountryRegionId _recieversCountryRegionId = recieversCountryRegionId)
    {
        recieversCountryRegionId = _recieversCountryRegionId;
        return recieversCountryRegionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversCountryRegionISOCode</Name>
				<Source><![CDATA[
    public AddressCountryRegionISOCode recieversCountryRegionISOCode(AddressCountryRegionISOCode _recieversCountryRegionISOCode = recieversCountryRegionISOCode)
    {
        recieversCountryRegionISOCode = _recieversCountryRegionISOCode;
        return recieversCountryRegionISOCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversEstate_RU</Name>
				<Source><![CDATA[
    public AddressEstate_RU recieversEstate_RU(AddressEstate_RU _recieversEstate_RU = recieversEstate_RU)
    {
        recieversEstate_RU = _recieversEstate_RU;
        return recieversEstate_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversFlat_RU</Name>
				<Source><![CDATA[
    public AddressFlat_RU recieversFlat_RU(AddressFlat_RU _recieversFlat_RU = recieversFlat_RU)
    {
        recieversFlat_RU = _recieversFlat_RU;
        return recieversFlat_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversIdentificationOfSender</Name>
				<Source><![CDATA[
    // field YourAccountNum from VendTable
    public CustVendAccountExt recieversIdentificationOfSender(CustVendAccountExt _recieversIdentificationOfSender = recieversIdentificationOfSender)
    {
        recieversIdentificationOfSender = _recieversIdentificationOfSender;
        return recieversIdentificationOfSender;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversInvoiceNumber</Name>
				<Source><![CDATA[
    public str recieversInvoiceNumber(str _recieversInvoiceNumber = recieversInvoiceNumber)
    {
        recieversInvoiceNumber = _recieversInvoiceNumber;
        return recieversInvoiceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversSettlementId_RU</Name>
				<Source><![CDATA[
    public AddressSettlementId_RU  recieversSettlementId_RU(AddressSettlementId_RU _recieversSettlementId_RU = recieversSettlementId_RU)
    {
        recieversSettlementId_RU = _recieversSettlementId_RU;
        return recieversSettlementId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversStreet</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets and returns the recievers street.
    /// </summary>
    /// <param name="_recieversStreet">
    /// The recievers street.
    /// </param>
    /// <returns>
    ///  The recievers recievers street.
    /// </returns>
    public AddressStreet recieversStreet(AddressStreet _recieversStreet = recieversStreet)
    {
        recieversStreet = _recieversStreet;
        return recieversStreet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversStreetId_RU</Name>
				<Source><![CDATA[
    public AddressStreetId_RU recieversStreetId_RU(AddressStreetId_RU _recieversStreetId_RU = recieversStreetId_RU)
    {
        recieversStreetId_RU = _recieversStreetId_RU;
        return recieversStreetId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversSwiftAddress</Name>
				<Source><![CDATA[
    public SWIFTNo recieversSwiftAddress(SWIFTNo _recieversSwiftAddress = recieversSwiftAddress)
    {
        recieversSwiftAddress = _recieversSwiftAddress;
        return recieversSwiftAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversTownId_RU</Name>
				<Source><![CDATA[
    public AddressTownId_RU recieversTownId_RU(AddressTownId_RU  _recieversTownId_RU = recieversTownId_RU)
    {
        recieversTownId_RU = _recieversTownId_RU;
        return recieversTownId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recieversZipCode</Name>
				<Source><![CDATA[
    public AddressZipCodeId recieversZipCode(AddressZipCodeId _recieversZipCode = recieversZipCode)
    {
        recieversZipCode = _recieversZipCode;
        return recieversZipCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersAccountNumber</Name>
				<Source><![CDATA[
    // eg. account number with postgiro
    public str 20 sendersAccountNumber(str 20 _sendersAccountNumber = sendersAccountNumber)
    {
        sendersAccountNumber = _sendersAccountNumber;
        return sendersAccountNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersBankAccount</Name>
				<Source><![CDATA[
    public BankAccount sendersBankAccount(BankAccount _sendersBankAccount = sendersBankAccount)
    {
        sendersBankAccount = _sendersBankAccount;
        return sendersBankAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersBankCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode sendersBankCurrencyCode(CurrencyCode _sendersBankCurrencyCode = sendersBankCurrencyCode)
    {
        sendersBankCurrencyCode = _sendersBankCurrencyCode;
        return sendersBankCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersBankIban</Name>
				<Source><![CDATA[
    public BankIBAN sendersBankIban(BankIBAN _sendersBankIban = sendersBankIban)
    {
        sendersBankIban = _sendersBankIban;
        return sendersBankIban;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersBankMultiCurrency</Name>
				<Source><![CDATA[
    public BankMultiCurrency sendersBankMultiCurrency(BankMultiCurrency _sendersBankMultiCurrency = sendersBankMultiCurrency)
    {
        sendersBankMultiCurrency = _sendersBankMultiCurrency;
        return sendersBankMultiCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersBankName</Name>
				<Source><![CDATA[
    public Name sendersBankName(Name _sendersBankName = sendersBankName)
    {
        sendersBankName = _sendersBankName;
        return sendersBankName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersBankRegistrationNumber</Name>
				<Source><![CDATA[
    public BankRegNum sendersBankRegistrationNumber(BankRegNum _sendersBankRegistrationNumber = sendersBankRegistrationNumber)
    {
        sendersBankRegistrationNumber = _sendersBankRegistrationNumber;
        return sendersBankRegistrationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersBanksIdentificationOfSender</Name>
				<Source><![CDATA[
    // fx. bank or postgiros identification of the senders company
    public CompanyPaymId sendersBanksIdentificationOfSender(CompanyPaymId _sendersBanksIdentificationOfSender = sendersBanksIdentificationOfSender)
    {
        sendersBanksIdentificationOfSender = _sendersBanksIdentificationOfSender;
        return sendersBanksIdentificationOfSender;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersCompanyAddress</Name>
				<Source><![CDATA[
    public Addressing sendersCompanyAddress(Addressing _sendersCompanyAddress = sendersCompanyAddress)
    {
        sendersCompanyAddress = _sendersCompanyAddress;
        return sendersCompanyAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersCompanyAddress1</Name>
				<Source><![CDATA[
    public Addressing sendersCompanyAddress1(Addressing _sendersCompanyAddress1 = sendersCompanyAddress1)
    {
        sendersCompanyAddress1 = _sendersCompanyAddress1;
        return sendersCompanyAddress1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersCompanyAddress2</Name>
				<Source><![CDATA[
    public Addressing sendersCompanyAddress2(Addressing _sendersCompanyAddress2 = sendersCompanyAddress2)
    {
        sendersCompanyAddress2 = _sendersCompanyAddress2;
        return sendersCompanyAddress2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersCompanyAddress3</Name>
				<Source><![CDATA[
    public Addressing sendersCompanyAddress3(Addressing _sendersCompanyAddress3 = sendersCompanyAddress3)
    {
        sendersCompanyAddress3 = _sendersCompanyAddress3;
        return sendersCompanyAddress3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersCompanyName</Name>
				<Source><![CDATA[
    public CompanyName sendersCompanyName(CompanyName _sendersCompanyName = sendersCompanyName)
    {
        sendersCompanyName = _sendersCompanyName;
        return sendersCompanyName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersIdentificationOfReciever</Name>
				<Source><![CDATA[
    // field YourAccountNum from CustVendTable
    public CustVendAC sendersIdentificationOfReciever(CustVendAC _sendersIdentificationOfReciever = sendersIdentificationOfReciever)
    {
        sendersIdentificationOfReciever = _sendersIdentificationOfReciever;
        return sendersIdentificationOfReciever;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendersInvoiceNumber</Name>
				<Source><![CDATA[
    public InvoiceId sendersInvoiceNumber(InvoiceId _sendersInvoiceNumber = sendersInvoiceNumber)
    {
        sendersInvoiceNumber = _sendersInvoiceNumber;
        return sendersInvoiceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBuffer</Name>
				<Source><![CDATA[
    abstract void setBuffer()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>textLine</Name>
				<Source><![CDATA[
    public str textLine(str _txt, int _line)
    {
        int     tmpLine;
        int     position;
        str     tmpTxt;
        boolean endOfText = false;

        for (tmpLine = 1; tmpLine < _line; tmpLine++)
        {
            position = strfind(_txt,'\n',position+1,9999);

            if (!position)
            {
                endOfText = true;
                return '';
            }
        }
        tmpTxt = strdel(_txt,1,position);
        position = strfind(tmpTxt,'\n',1,9999);

        if (position)
        {
            return substr(tmpTxt,1,position-1);
        }
        return tmpTxt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentStatusOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a Map containing the sequential order of payment status values.
    /// </summary>
    /// <returns>A Map containing the sequential order of payment status values.</returns>
    protected static Map paymentStatusOrder()
    {
        Map orderedPaymentStatus = new Map(Types::Enum, Types::Integer);

        orderedPaymentStatus.insert(CustVendPaymStatus::None, 1);
        orderedPaymentStatus.insert(CustVendPaymStatus::Sent, 2);
        orderedPaymentStatus.insert(CustVendPaymStatus::Confirmed, 3);
        orderedPaymentStatus.insert(CustVendPaymStatus::Rejected, 4);
        orderedPaymentStatus.insert(CustVendPaymStatus::Recieved, 5);
        orderedPaymentStatus.insert(CustVendPaymStatus::Delete, 6);
        orderedPaymentStatus.insert(CustVendPaymStatus::SentDelete, 7);
        orderedPaymentStatus.insert(CustVendPaymStatus::Deleted, 8);

        return orderedPaymentStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPaymStatus</Name>
				<Source><![CDATA[
    public static boolean checkPaymStatus(ModuleCustVend _module, PaymMode _paymMode, CustVendPaymStatus _actualStatus)
    {
        boolean                 ok = true;
        CustVendPaymStatus      neededPaymStatus;
        CustVendPaymModeTable   custVendPaymModeTable;

        custVendPaymModeTable = CustVendPaymModeTable::findModule(_module, _paymMode);

        if (!custVendPaymModeTable || _actualStatus == CustVendPaymStatus::Rejected)
        {
            return false;
        }

        neededPaymStatus = custVendPaymModeTable.PaymStatus;

        switch (neededPaymStatus)
        {
            case CustVendPaymStatus::Sent:
                if (_actualStatus == CustVendPaymStatus::None)
                {
                    ok = false;
                }
                break;

            case CustVendPaymStatus::Recieved:
                if (_actualStatus == CustVendPaymStatus::None ||
                    _actualStatus == CustVendPaymStatus::Sent)
                {
                    ok = false;
                }
                break;

            case CustVendPaymStatus::Confirmed:
                if (_actualStatus == CustVendPaymStatus::None ||
                    _actualStatus == CustVendPaymStatus::Sent ||
                    _actualStatus == CustVendPaymStatus::Recieved)
                {
                    ok = false;
                }
                break;

            default:
                Map orderedPaymentStatus = CustVendPaym::paymentStatusOrder();

                if (!orderedPaymentStatus.exists(_actualStatus)
                    || !orderedPaymentStatus.exists(neededPaymStatus)
                    || orderedPaymentStatus.lookup(_actualStatus) < orderedPaymentStatus.lookup(neededPaymStatus))
                {
                    ok = false;
                }
                break;
        }
        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>