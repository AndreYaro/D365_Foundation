<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResRequestEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The ResRequestEventHandler workflow event handler.
/// </summary>
[SysObsolete('Resource Request Workflow is deprecated', false, 5\6\2023)]
public class  ResRequestEventHandler implements WorkflowCanceledEventHandler,
	WorkflowCompletedEventHandler,
	WorkflowStartedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    public void started(WorkflowEventArgs _workflowEventArgs)
	{
	}

]]></Source>
			</Method>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for the canceled workflow event.
    /// </summary>
    /// <param name = "_workflowEventArgs">WorkflowEventArgs</param>
    public void canceled(WorkflowEventArgs _workflowEventArgs)
	{
	}

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event hander for the completed workflow event.
    /// </summary>
    /// <param name = "_workflowEventArgs"></param>
    public void completed(WorkflowEventArgs _workflowEventArgs)
	{
        if (_workflowEventArgs && _workflowEventArgs.parmWorkflowContext())
        {
            ProjOpsFinancialsLogger logger = ProjOpsFinancialsLogger::createLogger(classStr(ResRequestEventHandler));
            using (SysInstrumentationActivityContext activityContext = logger.projOpsFinActivity()
                .activityContext(ProjOpsFinancialsInstrumentationActivites::ResRequestWorkflowCompleted))
            {
                ResRequestHelper::completeRequest(_workflowEventArgs.parmWorkflowContext().parmRecId());
            }

        }
	}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>