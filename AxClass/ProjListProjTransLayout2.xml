<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjListProjTransLayout2</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjListProjTransLayout2 extends ProjListProjTransLayout
{
    // Dialog
    DialogField                 dialogNiveau1;
    DialogField                 dialogNiveau2;
    DialogField                 dialogNiveau3;
    DialogField                 dialogVoucher;
    DialogField                 dialogLedgerUpdate;

    // Packed
    ProjTransLayout             niveau1;
    ProjTransLayout             niveau2;
    ProjTransLayout             niveau3;
    boolean                     voucherLine;
    boolean                     ledgerUpdate;

    // Control
    ProjTransLayoutSubscript    layoutCalled;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        niveau1,
        niveau2,
        niveau3,
        voucherLine,
        ledgerUpdate
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDialogColumnFields</Name>
				<Source><![CDATA[
    void addDialogColumnFields(
    DialogRunbase   dialog,
    boolean         actual  = true,
    boolean         showSkipHour    = true)
    {
        ;
        dialog.addGroup("@SYS91228",grpBoth);

        dialogShowAmount    = dialog.addFieldValue(enumstr(ProjShowAmount), showAmount);
        if (showSkipHour)
        {
            dialogIncludeHourQty   = dialog.addFieldValue(enumstr(ProjAmountQty), amountQty, "@SYS91943", "@SYS91207");
        }
        if (layoutCalled    != ProjTransLayoutSubscript::Subscription)
        {
            dialogProfitFactor  = dialog.addFieldValue(enumstr(ProjListProfitFactor), profitFactor);
        }
        dialogVoucher       = dialog.addFieldValue(enumstr(boolean), voucherLine, "@SYS90536","@SYS90659");

        if (actual)
        {
            dialogLedgerUpdate  = dialog.addFieldValue(enumstr(boolean), ledgerUpdate, "@SYS78415","@SYS90660");
        }
        else
        {
            dialogLedgerUpdate  = dialog.addFieldValue(enumstr(boolean), ledgerUpdate, "@SYS91341","@SYS91340");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDialogRowFields</Name>
				<Source><![CDATA[
    void addDialogRowFields(DialogRunbase   dialog)
    {
        grpBoth = dialog.addGroup();
        grpBoth.frameType(FormFrameType::None);
        grpBoth.columns(2);
        dialog.addGroup("@SYS91227",grpBoth);

        #if.withFrontPage // Don't add the field from build 1348
        dialogPrintFrontPage    = dialog.addFieldValue(enumStr(boolean), printFrontPage, "@SYS91205","@SYS91204");
        #endif

        switch (layoutCalled)
        {
            case ProjTransLayoutSubscript::Project:
                dialogNiveau1 = dialog.addFieldValue(enumstr(ProjTransLayout), ProjTransLayout::Project, "@SYS76966","@SYS90603");
                dialogNiveau1.allowEdit(false);
                break;
            case ProjTransLayoutSubscript::Category:
                dialogNiveau1 = dialog.addFieldValue(enumstr(ProjTransLayout), ProjTransLayout::Category, "@SYS76966","@SYS90603");
                dialogNiveau1.allowEdit(false);
                break;
            case ProjTransLayoutSubscript::ID:
                dialogNiveau1 = dialog.addFieldValue(enumstr(ProjTransLayout), ProjTransLayout::ID, "@SYS76966","@SYS90603");
                dialogNiveau1.allowEdit(false);
                break;
            case ProjTransLayoutSubscript::ResourceCategory:
                dialogNiveau1 = dialog.addFieldValue(enumstr(ProjTransLayout), ProjTransLayout::ResourceCategory, "@SYS76966","@SYS90603");
                dialogNiveau1.allowEdit(false);
                break;
            case ProjTransLayoutSubscript::Subscription:
                dialogNiveau1 = dialog.addFieldValue(enumstr(ProjTransLayout), niveau1, "@SYS76966","@SYS90603");
                dialogNiveau1.allowEdit(true);
                break;
        }

        dialogNiveau2       = dialog.addFieldValue(enumstr(ProjTransLayout), niveau2, "@SYS76967","@SYS90604");
        dialogNiveau3       = dialog.addFieldValue(enumstr(ProjTransLayout), niveau3, "@SYS76968","@SYS90605");

        dialogZeroLines     = dialog.addFieldValue(enumstr(boolean), skipZero, "@SYS19052","@SYS90472");
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        niveau1         = dialogNiveau1.value();
        niveau2         = dialogNiveau2.value();
        niveau3         = dialogNiveau3.value();

        voucherLine     = dialogVoucher.value();
        ledgerUpdate    = dialogLedgerUpdate.value();

        if (layoutCalled == ProjTransLayoutSubscript::Subscription)
        {
            skipZero        = dialogZeroLines.value();
        }
        else
        {
            profitFactor = dialogProfitFactor.value();
        }

        showAmount      = dialogShowAmount.value();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(ProjTransLayoutSubscript    _layoutCalled)
    {
        ;
        super(null);
        layoutCalled    = _layoutCalled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #currentList] + [super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerUpdate</Name>
				<Source><![CDATA[
    public boolean parmLedgerUpdate(boolean _ledgerUpdate = ledgerUpdate)
    {
        ledgerUpdate = _ledgerUpdate;

        return ledgerUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNiveau1</Name>
				<Source><![CDATA[
    public ProjTransLayout parmNiveau1(ProjTransLayout _niveau1 = niveau1)
    {
        niveau1 = _niveau1;

        return niveau1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNiveau2</Name>
				<Source><![CDATA[
    public ProjTransLayout parmNiveau2(ProjTransLayout _niveau2 = niveau2)
    {
        niveau2 = _niveau2;

        return niveau2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNiveau3</Name>
				<Source><![CDATA[
    public ProjTransLayout parmNiveau3(ProjTransLayout _niveau3 = niveau3)
    {
        niveau3 = _niveau3;

        return niveau3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVoucherLine</Name>
				<Source><![CDATA[
    public boolean parmVoucherLine(boolean _voucherLine = voucherLine)
    {
        voucherLine = _voucherLine;

        return voucherLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean         ret;
        Integer         version    = RunBase::getVersion(_packedClass);
        container       base;

        switch (version)
        {
            case #CurrentVersion:
                [version, #currentList, base] = _packedClass;
                ret = super(base);
                break;
            default:
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    boolean validate()
    {
        boolean ret;

        ret = super();

        if (! niveau1)
        {
            // Level 1 is mandatory
            ret = checkFailed("@SYS91906");
        }

        if (ret && (niveau1 == niveau2))
        {
            // Level can only be selected once.
            ret = checkFailed("@SYS78955");
        }

        if (ret && (niveau1 == niveau3))
        {
            // Level can only be selected once.
            ret = checkFailed("@SYS78955");
        }

        if (ret && niveau2 && (niveau2 == niveau3))
        {
            // Level can only be selected once.
            ret = checkFailed("@SYS78955");
        }

        if (ledgerUpdate && ! voucherLine)
        {
            // Ledger updates only when voucher is selected.
            ret = checkFailed("@SYS78956");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static ProjListProjTransLayout2 construct(
    ProjTransLayoutSubscript    layoutCalled
    )
    {
        return new ProjListProjTransLayout2(layoutCalled);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>