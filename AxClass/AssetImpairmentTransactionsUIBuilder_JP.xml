<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetImpairmentTransactionsUIBuilder_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetImpairmentTransactionsUIBuilder_JP</c> class is the UIBuilder for the <c>AssetImpairmentTransactions</c> SSRS report.
/// </summary>
public class AssetImpairmentTransactionsUIBuilder_JP extends SrsReportDataContractExtendUIBuilder_CN
{
    DialogField     dialogFieldFixedAssetGroup;
    DialogField     dialogFieldFinancialDimension;
    DialogField     dialogFieldDimensionAttribute;

    AssetImpairmentTransactionsContract_JP  impairmentTransactionsContract;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dimensionAttributeLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a dimension attribute lookup.
    /// </summary>
    /// <param name="_dimensionAttributeDialogControl">
    /// The dimension attribute control.
    /// </param>
    public void dimensionAttributeLookup(FormStringControl _dimensionAttributeDialogControl)
    {
        QueryBuildDataSource    qbdsDimAttr;
        QueryBuildDataSource    qbdsDimAttrSetItem;
        SysTableLookup          lookup;
        QueryBuildRange         queryBuildRange;
        Query                   query;
        DimensionEnumeration    dimensionSetId;

        dimensionSetId = DimensionCache::getDimensionAttributeSetForLedger();

        query = new Query();

        // Add the first data source to the query
        qbdsDimAttr = query.addDataSource(tableNum(DimensionAttribute));

        // Add the range to this first data source
        queryBuildRange = qbdsDimAttr.addRange(fieldNum(DimensionAttribute, Type));

        // Set the range
        queryBuildRange.value(SysQuery::valueNot(DimensionAttributeType::MainAccount));

        qbdsDimAttrSetItem = qbdsDimAttr.addDataSource(tableNum(DimensionAttributeSetItem));
        SysQuery::findOrCreateRange(qbdsDimAttrSetItem, fieldNum(DimensionAttributeSetItem, DimensionAttributeSet)).value(queryValue(dimensionSetId));
        qbdsDimAttrSetItem.joinMode(JoinMode::InnerJoin);
        qbdsDimAttrSetItem.relations(true);

        lookup = SysTableLookup::newParameters(tableNum(DimensionAttribute), _dimensionAttributeDialogControl, true);
        lookup.parmQuery(query);

        // Add the fields to be shown in the lookup form.
        lookup.addLookupfield(fieldNum(DimensionAttribute, Name));

        // Perform the lookup.
        lookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttributeValidate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a dimension attribute validation.
    /// </summary>
    /// <param name="_dimensionAttribute">
    /// A dimension attribute control to validate.
    /// </param>
    /// <returns>
    /// true if the dimension attribute is valid; otherwise, false.
    /// </returns>
    public boolean dimensionAttributeValidate(FormStringControl _dimensionAttribute)
    {
        Name    dimensionAttributeLocal;

        boolean ret = true;

        dimensionAttributeLocal = DimensionAttribute::findByLocalizedName(dialogFieldDimensionAttribute.value(), false, SystemParameters::systemLanguageId()).Name;
        if (!dimensionAttributeLocal)
        {
            //The value '%1' in field Dimension type is not found in the related table DimensionAttribute.
            ret = checkFailed(strFmt(
                "@GLS180006",
                dialogFieldDimensionAttribute.value(),
                _dimensionAttribute.label(),
                tableId2name(tableNum(DimensionAttribute))));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>financialDimensionModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements a modified method for financialDimension.
    /// </summary>
    /// <param name="_control">
    /// A <c>FormStringControl</c> enumeration value which will be used for the modified method.
    /// </param>
    /// <returns>
    /// The result of the modification.
    /// </returns>
    public boolean financialDimensionModified(FormCheckBoxControl _control)
    {
        boolean ret = true;

        if (_control.modified())
        {
            if (dialogFieldFinancialDimension.value())
            {
                dialogFieldFixedAssetGroup.value(false);
                dialogFieldDimensionAttribute.enabled(true);
                impairmentTransactionsContract.parmFixedAssetGroup(false);
                impairmentTransactionsContract.parmFinancialDimension(true);
            }
            else
            {
                dialogFieldDimensionAttribute.enabled(false);
                impairmentTransactionsContract.parmFixedAssetGroup(true);
                impairmentTransactionsContract.parmFinancialDimension(false);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fixedAssetGroupModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements a modified method for fixedAssetGroup.
    /// </summary>
    /// <param name="_control">
    /// A <c>FormStringControl</c> enumeration value which will be used for the modified method.
    /// </param>
    /// <returns>
    /// The result of the modification.
    /// </returns>
    public boolean fixedAssetGroupModified(FormCheckBoxControl _control)
    {
        boolean ret = true;

        if (_control.modified())
        {
            if (dialogFieldFixedAssetGroup.value())
            {
                dialogFieldFinancialDimension.value(false);
                dialogFieldDimensionAttribute.value('');
                dialogFieldDimensionAttribute.enabled(false);
                impairmentTransactionsContract.parmFixedAssetGroup(true);
                impairmentTransactionsContract.parmFinancialDimension(false);
                impairmentTransactionsContract.parmDimensionAttribute('');
            }
            else
            {
                impairmentTransactionsContract.parmFixedAssetGroup(false);
                impairmentTransactionsContract.parmFinancialDimension(true);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttributeModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements a modified method for dimensionAttribute.
    /// </summary>
    /// <param name="_control">
    /// A <c>FormStringControl</c> enumeration value which will be used for the modified method.
    /// </param>
    /// <returns>
    /// The result of the modification.
    /// </returns>
    public boolean dimensionAttributeModified(FormStringControl _control)
    {
        boolean ret = true;

        if (_control.modified())
        {
            impairmentTransactionsContract.parmDimensionAttribute(dialogFieldDimensionAttribute.value());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDialogField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the dialog fields from binding information.
    /// </summary>
    private void initDialogField()
    {
        dialogFieldFixedAssetGroup       = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(AssetImpairmentTransactionsContract_JP, parmFixedAssetGroup));
        dialogFieldFinancialDimension    = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(AssetImpairmentTransactionsContract_JP, parmFinancialDimension));
        dialogFieldDimensionAttribute    = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(AssetImpairmentTransactionsContract_JP, parmDimensionAttribute));
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyOverrideMethod</Name>
				<Source><![CDATA[
    protected void modifyOverrideMethod()
    {
        this.overrideDialogFieldMethod(dialogFieldFixedAssetGroup, methodStr(FormStringControl, Modified), methodStr(AssetImpairmentTransactionsUIBuilder_JP, fixedAssetGroupModified), this);
        this.overrideDialogFieldMethod(dialogFieldFinancialDimension, methodStr(FormStringControl, Modified), methodStr(AssetImpairmentTransactionsUIBuilder_JP, financialDimensionModified), this);
        this.overrideDialogFieldLookup(dialogFieldDimensionAttribute, methodStr(AssetImpairmentTransactionsUIBuilder_JP, dimensionAttributeLookup));
        this.overrideDialogFieldMethod(dialogFieldDimensionAttribute, methodStr(FormStringControl, Validate), methodStr(AssetImpairmentTransactionsUIBuilder_JP, dimensionAttributeValidate));
        this.overrideDialogFieldMethod(dialogFieldDimensionAttribute, methodStr(FormStringControl, Modified), methodStr(AssetImpairmentTransactionsUIBuilder_JP, dimensionAttributeModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyProperty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides this method when want to modify the property of field control, such as: Lookupbutton, Enable, etc.
    /// </summary>
    protected void modifyProperty()
    {
        this.overrideDialogFieldAlwaysShowLookup(dialogFieldDimensionAttribute);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    public void postBuild()
    {
        impairmentTransactionsContract = this.dataContractObject() as AssetImpairmentTransactionsContract_JP;

        this.initDialogField();

        super();

        if (!dialogFieldFinancialDimension.value())
        {
            dialogFieldDimensionAttribute.enabled(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>