<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryDataServiceInitialPushValidationHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class InventInventoryDataServiceInitialPushValidationHelper
{
    private static str RecordCountConstString = 'RECORDCOUNT';

    private boolean isWHSConfigurationKeyEnabled;
    private str whsInventReserveTableName;
    private str whsInventReservePartitionId;
    private str whsInventReserveDataAreaId;
    private str whsInventReserveInventLocationId;

    private boolean isInventSumConfigurationKeyEnabled;
    private str inventSumTableName;
    private str inventSumPartitionId;
    private str inventSumDataAreaId;
    private str inventSumInventLocationId;

    private str currentPartitionId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    public void new()
    {
        super();
        this.initFieldNames();
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetMaxPartitionRecordCount</Name>
				<Source><![CDATA[
    public int GetMaxPartitionRecordCount()
    {
        Array whsItemArray = new Array(Types::container);
        Array inventSumItemArray = new Array(Types::container);

        if (isWHSConfigurationKeyEnabled)
        {
            var whsGroupedRecordCountStmt = this.GenerateGetTop30GroupedRecordCountFromWHSInventReserveStmt();
            whsItemArray = this.GetGroupedPartitionRecordCountResult(whsGroupedRecordCountStmt);
        }

        if (isInventSumConfigurationKeyEnabled)
        {
            var inventsumGroupedRecordCountStmt = this.GenerateGetTop30GroupedRecordCountFromInventSumStmt();
            inventSumItemArray = this.GetGroupedPartitionRecordCountResult(inventsumGroupedRecordCountStmt);
        }

        int whsLastIndex = whsItemArray.lastIndex();
        int inventSumLastIndex = inventSumItemArray.lastIndex();

        int totalMaxCount = 0;

        int whsMaxCount = 0;
        int whsMinCount = 0;

        int inventSumMaxCount = 0;
        int inventSumMinCount = 0;

        if (whsLastIndex > 0)
        {
            whsMaxCount = conPeek(whsItemArray.value(1), 3);
            whsMinCount = conPeek(whsItemArray.value(whsLastIndex), 3);
        }

        if (inventSumLastIndex > 0)
        {
            inventSumMaxCount = conPeek(inventSumItemArray.value(1), 3);
            inventSumMinCount = conPeek(inventSumItemArray.value(inventSumLastIndex), 3);
        }

        for (int i = 1; i <= whsLastIndex; i++)
        {
            container whsItem = whsItemArray.value(i);
            var whsItemDataAreaId = conPeek(whsItem, 1);
            var whsItemLocationId = conPeek(whsItem, 2);
            var whsItemGroupedRecordCount = conPeek(whsItem, 3);

            for (int j = 1; j <= inventSumLastIndex; j++)
            {
                container inventSumItem = inventSumItemArray.value(j);
                var inventSumItemDataAreaId = conPeek(inventSumItem, 1);
                var inventSumItemLocationId = conPeek(inventSumItem, 2);
                var inventSumItemGroupedRecordCount = conPeek(inventSumItem, 3);

                if (whsItemDataAreaId == inventSumItemDataAreaId && whsItemLocationId == inventSumItemLocationId)
                {
                    var curCount = whsItemGroupedRecordCount + inventSumMaxCount;
                    totalMaxCount = max(curCount, totalMaxCount);
                    break;
                }
            }
        }

        totalMaxCount = max(totalMaxCount, whsMaxCount + inventSumMinCount, whsMinCount + inventSumMaxCount); 

        return totalMaxCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFieldNames</Name>
				<Source><![CDATA[
    private void initFieldNames()
    {
        isWHSConfigurationKeyEnabled = isConfigurationkeyEnabled(configurationKeyNum(WHSandTMS));
        isInventSumConfigurationKeyEnabled = isConfigurationkeyEnabled(configurationKeyNum(LogisticsBasic));

        // WHSInventReserve related fields
        if (isWHSConfigurationKeyEnabled)
        {
            SysDictTable whsInventReserveTable = new SysDictTable(tableNum(WHSInventReserve));
            whsInventReserveTableName = whsInventReserveTable.name(DbBackend::Sql);
            whsInventReservePartitionId = whsInventReserveTable.fieldObject(fieldNum(WHSInventReserve, Partition)).name(DbBackend::Native);
            whsInventReserveDataAreaId = whsInventReserveTable.fieldObject(fieldNum(WHSInventReserve, DataAreaId)).name(DbBackend::Native);
            whsInventReserveInventLocationId = whsInventReserveTable.fieldObject(fieldNum(WHSInventReserve, InventLocationId)).name(DbBackend::Native);
        }

        // InventSum related fields
        if (isInventSumConfigurationKeyEnabled)
        {
            SysDictTable inventSumTable = new SysDictTable(tableNum(InventSum));
            inventSumTableName = inventSumTable.name(DbBackend::Sql);
            inventSumPartitionId = inventSumTable.fieldObject(fieldNum(InventSum, Partition)).name(DbBackend::Native);
            inventSumDataAreaId = inventSumTable.fieldObject(fieldNum(InventSum, DataAreaId)).name(DbBackend::Native);
            inventSumInventLocationId = inventSumTable.fieldObject(fieldNum(InventSum, InventLocationId)).name(DbBackend::Native);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetGroupedPartitionRecordCountResult</Name>
				<Source><![CDATA[
    private Array GetGroupedPartitionRecordCountResult(SysSQLStatementText _sqlStatement)
    {
        UserConnection userConnection = new UserConnection();
        Statement statement = userConnection.createStatement();
        Array itemArray = new Array(Types::container);

        try
        {
            SqlStatementExecutePermission permission = new SqlStatementExecutePermission(_sqlStatement);
            permission.assert();

            ResultSet resultSet = statement.executeQueryWithParameters(_sqlStatement, null);

            CodeAccessPermission::revertAssert();

            int arrayIndex = 0;

            while (resultSet.next())
            {
                ResultSetMetaData metadata = resultSet.getMetaData();

                str dataAreaId = '';
                str inventLocationId = '';
                int groupedRecordCount = 0;

                var columnCount = metadata.getColumnCount();
                for (int i = 1; i <= columnCount; i++)
                {
                    var columnName = metadata.getColumnName(i);
                    switch (columnName)
                    {
                        case RecordCountConstString:
                            groupedRecordCount = any2Int(resultSet.getString(i));
                            break;
                        case whsInventReserveDataAreaId:
                            dataAreaId = resultSet.getString(i);
                            break;
                        case whsInventReserveInventLocationId:
                            inventLocationId = resultSet.getString(i);
                            break;
                    }
                }

                container Item = [dataAreaId, inventLocationId, groupedRecordCount];

                arrayIndex++;
                itemArray.value(arrayIndex, Item);
            }
        }
        finally
        {
            if (statement)
            {
                statement.close();
            }

            if (userConnection)
            {
                userConnection.finalize();
            }
        }

        return itemArray;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GenerateGetTop30GroupedRecordCountFromWHSInventReserveStmt</Name>
				<Source><![CDATA[
    private SysSQLStatementText GenerateGetTop30GroupedRecordCountFromWHSInventReserveStmt()
    {
        SysSqlSystem sqlSystem = new SysSqlSystem();

        SysSQLStatementText _sqlStatement =
            'SELECT TOP(30) ' + 'COUNT(1) AS ' + RecordCountConstString + ', ' +
            whsInventReserveTableName + '.' + whsInventReserveDataAreaId + ', ' +
            whsInventReserveTableName + '.' + whsInventReserveInventLocationId +
            ' FROM ' + whsInventReserveTableName + ' WITH (NOLOCK)' +
            ' WHERE ' + whsInventReservePartitionId + ' = ' + sqlSystem.sqlLiteral(getcurrentpartitionrecid()) +
            ' GROUP BY ' + whsInventReserveDataAreaId + ', ' + whsInventReserveInventLocationId +
            ' ORDER BY ' + 'COUNT(1)' + ' DESC';

        return _sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GenerateGetTop30GroupedRecordCountFromInventSumStmt</Name>
				<Source><![CDATA[
    private SysSQLStatementText GenerateGetTop30GroupedRecordCountFromInventSumStmt()
    {
        SysSqlSystem sqlSystem = new SysSqlSystem();

        SysSQLStatementText _sqlStatement =
            'SELECT TOP(30) ' + 'COUNT(1) AS ' + RecordCountConstString + ', ' +
            inventSumTableName + '.' + inventSumDataAreaId + ', ' +
            inventSumTableName + '.' + inventSumInventLocationId +
            ' FROM ' + inventSumTableName + ' WITH (NOLOCK)' +
            ' WHERE ' + inventSumPartitionId + ' = ' + sqlSystem.sqlLiteral(getcurrentpartitionrecid()) +
            ' GROUP BY ' + inventSumDataAreaId + ', ' + inventSumInventLocationId +
            ' ORDER BY ' + 'COUNT(1)' + ' DESC';

        return _sqlStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>