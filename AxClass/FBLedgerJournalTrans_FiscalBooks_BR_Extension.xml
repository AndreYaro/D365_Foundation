<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBLedgerJournalTrans_FiscalBooks_BR_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
static class FBLedgerJournalTrans_FiscalBooks_BR_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initTaxAssessmentAdjustmentFromLedgerJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the tax adjustment record from <c>LedgerJournalTrans</c>.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    ///     The <c>LedgerJournalTrans</c> to initialize the adjustment.
    /// </param>
    public static void initTaxAssessmentAdjustmentFromLedgerJournalTrans(FBTaxAssessmentAdjustment_BR _taxAssessmentAdjustment, LedgerJournalTrans _ledgerJournalTrans)
    {
        FBLedgerJournalTrans_FiscalBooks_BR     ledgerJournalTransFiscalBooks;
        FiscalEstablishment_BR                  fiscalEstablishment;

        ledgerJournalTransFiscalBooks = _ledgerJournalTrans.SysExtensionSerializerMap::getExtensionTable(tableNum(FBLedgerJournalTrans_FiscalBooks_BR));

        select firstonly crossCompany FiscalEstablishmentId from fiscalEstablishment
            where fiscalEstablishment.RecId == ledgerJournalTransFiscalBooks.FiscalEstablishment_BR;

        FBGeneralAdjustmentCode_BR generalAdjustmentCode = FBGeneralAdjustmentCode_BR::find(ledgerJournalTransFiscalBooks.GeneralAdjustmentCode);

        _taxAssessmentAdjustment.State                              = ledgerJournalTransFiscalBooks.State;
        _taxAssessmentAdjustment.FBGeneralAdjustmentCode_BR         = ledgerJournalTransFiscalBooks.GeneralAdjustmentCode;
        _taxAssessmentAdjustment.CreatePayment                      = generalAdjustmentCode.CreatePayment;
        _taxAssessmentAdjustment.IsPovertyFund                      = generalAdjustmentCode.IsPovertyFund;
        _taxAssessmentAdjustment.TaxType_BR                         = ledgerJournalTransFiscalBooks.TaxType;
        _taxAssessmentAdjustment.ComplementaryDescription           = _ledgerJournalTrans.Txt;
        _taxAssessmentAdjustment.TaxAmount                          = ledgerJournalTransFiscalBooks.TaxAmount;
        _taxAssessmentAdjustment.VoucherDataArea                    = _ledgerJournalTrans.dataAreaId;
        _taxAssessmentAdjustment.Voucher                            = _ledgerJournalTrans.Voucher;
        _taxAssessmentAdjustment.TransDate                          = _ledgerJournalTrans.TransDate;
        _taxAssessmentAdjustment.IsCancelled                        = _ledgerJournalTrans.RevRecId != 0;
        _taxAssessmentAdjustment.FiscalEstablishmentId              = fiscalEstablishment.FiscalEstablishmentId;
        // Extension for PIS and COFINS adjustments
        _taxAssessmentAdjustment.DeductionCNPJ                      = ledgerJournalTransFiscalBooks.DeductionCNPJ;
        _taxAssessmentAdjustment.TaxationCode                       = ledgerJournalTransFiscalBooks.TaxationCode;
        _taxAssessmentAdjustment.TaxBaseAmount                      = ledgerJournalTransFiscalBooks.TaxBaseAmount;
        _taxAssessmentAdjustment.TaxValue                           = ledgerJournalTransFiscalBooks.TaxValue;
        _taxAssessmentAdjustment.ComplementaryDescriptionPISCOFINS  = ledgerJournalTransFiscalBooks.ComplementaryDescription;
        _taxAssessmentAdjustment.FBContribCreditType_BR             = ledgerJournalTransFiscalBooks.FBContribCreditType_BR;
        _taxAssessmentAdjustment.ContribAssessmentPeriod            = ledgerJournalTransFiscalBooks.ContribAssessmentPeriod;
        _taxAssessmentAdjustment.ContribTransferredCreditPercentage = ledgerJournalTransFiscalBooks.ContribTransferredCreditPercentage;
        _taxAssessmentAdjustment.ContribCreditBaseSource            = ledgerJournalTransFiscalBooks.ContribCreditBaseSource;
        _taxAssessmentAdjustment.LedgerJournalTrans					= _ledgerJournalTrans.RecId;
  
        _taxAssessmentAdjustment.TaxAdjustmentSourceType            = ledgerJournalTransFiscalBooks.TaxAdjustmentSourceType;
        _taxAssessmentAdjustment.TaxAdjustmentProcessNum            = ledgerJournalTransFiscalBooks.TaxAdjustmentProcessNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FBTaxTrans_BR_Post_initFromTaxAssessmentAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post eventhandler for FBTaxTrans_BR.initFromTaxAssessmentAdjustment() method.
    /// </summary>
    /// <param name="_args">Post eventhandler args.</param>
    [PostHandlerFor(tableStr(FBTaxTrans_BR), tableMethodStr(FBTaxTrans_BR, initFromTaxAssessmentAdjustment))]
    public static void FBTaxTrans_BR_Post_initFromTaxAssessmentAdjustment(XppPrePostArgs _args)
    {
        FBTaxAssessmentAdjustment_BR fbTaxAssessmentAdjustment = _args.getArgNum(1) as FBTaxAssessmentAdjustment_BR;

        if (fbTaxAssessmentAdjustment.LedgerJournalTrans)
        {
            LedgerJournalTrans ledgerJournalTrans;

            select firstOnly OffsetLedgerDimension from ledgerJournalTrans
                where ledgerJournalTrans.RecId == fbTaxAssessmentAdjustment.LedgerJournalTrans;

            FBTaxTrans_BR fbTaxTrans = _args.getThis() as FBTaxTrans_BR;

            fbTaxTrans.FinancialLedgerDimension = ledgerJournalTrans.OffsetLedgerDimension;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>