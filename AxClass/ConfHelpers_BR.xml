<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ConfHelpers_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ConfHelpers_BR
{
    #ResAppl
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createLookup</Name>
				<Source><![CDATA[
        static FormRun createLookup(Object caller = null)
    {
        return classfactory.formRunClass(new Args(formStr(ConfGenericLookup_BR)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchangeLines</Name>
				<Source><![CDATA[
        static  void exchangeLines( LineNum                 lineNum1,
                                LineNum                 lineNum2,
                                ConfLayoutGroupId_BR    layoutGroupId)
    {
        ConfLayoutFields_BR fieldsTable;

        ttsBegin;

        update_recordset fieldsTable
            setting LayoutLineNum = maxint() - 1
                where   fieldsTable.LayoutGroupId == layoutGroupId
                    &&  fieldsTable.LayoutLineNum == lineNum2;

        update_recordset fieldsTable
            setting LayoutLineNum = lineNum2
                where   fieldsTable.LayoutGroupId == layoutGroupId
                    &&  fieldsTable.LayoutLineNum == lineNum1;

        update_recordset fieldsTable
            setting LayoutLineNum = lineNum1
                where   fieldsTable.LayoutGroupId == layoutGroupId
                    &&  fieldsTable.LayoutLineNum == maxint() - 1;

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>int2strPad</Name>
				<Source><![CDATA[
        #ConfMacros_BR
    static str int2strPad(int i, int length = 0, str padding = #Zero)
    {
        str s;

        s = int2str(i);

        if (length > 0)
        {
            while (strLen(s) < length)
            {
                s = padding + s;
            }
            s = subStr(s, 1, length);
        }

        return s;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTable</Name>
				<Source><![CDATA[
        static FormRun lookupTable( boolean showMap     = false,
                                boolean showTemp    = false,
                                boolean showSystem  = false,
                                boolean showView    = false,
                                boolean checkRights = false,
                                Object  caller      = null )
    {
        #ResAppl

        Object      formRun;
        container   names;
        int         i;
        Dictionary  dict = new Dictionary();
        DictTable   dictTable;

        formRun = ConfHelpers_BR::createLookup(caller);
        formRun.init();

        for (i = 1; i <= dict.tableCnt(); i++)
        {
            if (showSystem || !isSysId(dict.tableCnt2Id(i)))
            {
                dictTable = new DictTable(dict.tableCnt2Id(i));
                if (    showMap  || !dictTable.isMap()
                    &&  showTemp || !dictTable.isTmp()
                    &&  showView || !dictTable.isView())
                {
                    if (checkRights)
                    {
                        if (dictTable.rights() >= AccessType::View)
                        {
                            names += dictTable.name();
                        }
                    }
                    else
                    {
                        names += dictTable.name();
                    }
                }
            }
        }

        formRun.choices(names, #ImageTable);

        return formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTableField</Name>
				<Source><![CDATA[
        static FormRun lookupTableField(tableId _tableId)
    {
        Object      formRun;
        container   names;
        int         i;
        DictTable   dictTable = new DictTable(_tableId);
        DictField   dictField;

        formRun = ConfHelpers_BR::createLookup();
        formRun.init();

        for (i = dictTable.fieldNext(0); i; i = dictTable.fieldNext(i))
        {
            dictField   = dictTable.fieldObject(i);
            names       += dictField.name();
        }

        formRun.choices(names, #ImageField);

        return formRun;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>