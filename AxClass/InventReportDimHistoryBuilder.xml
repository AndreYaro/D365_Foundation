<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventReportDimHistoryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventReportDimHistoryBuilder</c> class builds the dimension history string for data provider classes.
/// </summary>
abstract class InventReportDimHistoryBuilder
{
    private str             dimHistoryStr;
    private container       inventDimSetup;
    private str             quantityLabel;
    private str             formattingString;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formatQuantityStringForDimension</Name>
				<Source><![CDATA[
    protected final str formatQuantityStringForDimension(Qty _qty, InventDim _inventDim)
    {
        str inventDimString = this.inventDim2Str(_inventDim);
        if (inventDimString)
        {
            return strFmt(quantityLabel, this.quantity2Str(_qty), inventDimString);
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>formattingString</Name>
				<Source><![CDATA[
    private str formattingString()
    {
        if (!formattingString)
        {
            formattingString = strFmt('{0:N%1}', this.numberOfDecimalsForQuantity());
        }
        return formattingString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the item id for the line.
    /// </summary>
    /// <returns>The item id.</returns>
    abstract protected ItemId itemId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfDecimalsForQuantity</Name>
				<Source><![CDATA[
    private int numberOfDecimalsForQuantity()
    {
        return InventTable::inventDecimals(this.itemId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>quantity2Str</Name>
				<Source><![CDATA[
    protected final str quantity2Str(Qty _qty)
    {
        return this.strFormatValue(_qty, this.formattingString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim2Str</Name>
				<Source><![CDATA[
    [Replaceable]
    protected str inventDim2Str(InventDim _inventDim)
    {
        if (this.itemId() &&
            _inventDim.anyProductDimensionSpecified())
        {
            return InventDim::dimReportTranslationStrAll(_inventDim, inventDimSetup, this.languageId(), this.itemId());
        }

        return InventDim::dimReportStrAll(_inventDim, inventDimSetup, this.languageId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimSetup</Name>
				<Source><![CDATA[
    public container parmInventDimSetup(container _inventDimSetup = inventDimSetup)
    {
        inventDimSetup = _inventDimSetup;
        return inventDimSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendToDimensionString</Name>
				<Source><![CDATA[
    protected void appendToDimensionString(str _newText)
    {
        const str Newline = '\n';

        if (dimHistoryStr)
        {
            dimHistoryStr += Newline;
        }
        dimHistoryStr += _newText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>strFormatValue</Name>
				<Source><![CDATA[
    protected final str strFormatValue(anytype _value, str _format)
    {
        return strFmtByLanguage(this.languageId(), _format, _value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>languageId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the language id the dimension string is build for.
    /// </summary>
    /// <returns>The language id.</returns>
    abstract protected LanguageId languageId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildDimensionString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the dimension string.
    /// </summary>
    abstract protected void buildDimensionString()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
        quantityLabel = SysLabel::labelId2String(literalStr("@SYS321794"), this.LanguageId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the dimension history string to be entered to temporary table.
    /// </summary>
    /// <returns>
    /// The string with the inventory dimensions.
    /// </returns>
    public str build()
    {
        this.init();
        this.buildDimensionString();
        return SysRTLUtils::embedDirectionIfRTL(dimHistoryStr, this.languageId());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>