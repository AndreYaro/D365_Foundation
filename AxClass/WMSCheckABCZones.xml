<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsCheckABCZones</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is a controller class for the <c>WMSCheckABCZones</c> report.
/// </summary>
/// <remarks>
/// This class contains a method that validates parameters of the <c>WMSCheckABCZones</c> report.
/// </remarks>
public class WmsCheckABCZones extends SrsReportRunController implements BatchRetryable
{
    #define.ReportName('WMSCheckABCZones.Report')
    InventDimParm   inventDimParmVisible;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initInventDimParmVisible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>InventDimParm</c> buffer with the fields that should be visible.
    /// </summary>
    private void initInventDimParmVisible()
    {
        inventDimParmVisible.initProductDimensionsAllGroups();
        inventDimParmVisible.initSiteDimAllGrp();
        inventDimParmVisible.InventLocationIdFlag = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the report contract before it runs the report.
    /// </summary>
    protected void preRunModifyContract()
    {
        this.setParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets internal parameters.
    /// </summary>
    private void setParameters()
    {
        WMSCheckABCZonesContract    wmsCheckABCZonesContract;

        this.initInventDimParmVisible();

        wmsCheckABCZonesContract = this.parmReportContract().parmRdpContract() as WMSCheckABCZonesContract;
        wmsCheckABCZonesContract.parmInventDimViewContract().parmInventDimParm(inventDimParmVisible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static WMSCheckABCZones construct()
    {
        return new WMSCheckABCZones();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an instance of the <c>WMSCheckABCZones</c> class, assigns the parameter values, and runs
    ///    the report.
    /// </summary>
    /// <param name="_args">
    ///    The arguments for the class.
    /// </param>
    public static void main(Args _args)
    {
        WMSCheckABCZones wmsCheckABCZones;

        wmsCheckABCZones = WMSCheckABCZones::newFromArgs(_args);
        wmsCheckABCZones.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a new instance of the <c>WMSCheckABCZones</c> class.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> arguments used to initialize the class.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WMSCheckABCZones</c> class.
    /// </returns>
    public static WMSCheckABCZones newFromArgs(Args _args)
    {
        WMSCheckABCZones wmsCheckABCZones;
        wmsCheckABCZones = WMSCheckABCZones::construct();

        wmsCheckABCZones.parmReportName(#ReportName);
        wmsCheckABCZones.parmArgs(_args);

        return wmsCheckABCZones;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>