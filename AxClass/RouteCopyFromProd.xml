<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RouteCopyFromProd</Name>
	<SourceCode>
		<Declaration><![CDATA[
/*

In 2.5 RouteCopy_FromProd
*/
public class RouteCopyFromProd extends RouteCopyFrom
{
    ProdRouteSearch     search;

    ProdTable           prodTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>RecId</c> value of the activity associated to the route.
    /// </summary>
    /// <returns>
    ///    The <c>RecId</c> value of the activity.
    /// </returns>
    RefRecId activity()
    {
        return search.prodroute().activity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCopyRouteOpr</Name>
				<Source><![CDATA[
    boolean canCopyRouteOpr(RouteId toRouteId, InventSiteId toSiteId = '')
    {
        if (! search.prodId())
            return false;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
    void copy()
    {
        setprefix(strfmt("@SYS21832",search.prodId()));

        copyTo.initOprOffset();

        ttsbegin;

        while (search.next())
        {
            setprefix(strfmt("@SYS25786",search.prodroute().OprNum));

            copyTo.copyTo(this,search,copyTo.defaultRoute());
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docuRefTable</Name>
				<Source><![CDATA[
    public RouteOprMap docuRefTable()
    {
        ProdRoute   prodRoute;

        switch (search.route().TableId)
        {
            case tablenum(ProdRoute):
                prodRoute = search.route();
                break;

            default: throw error(Error::wrongUseOfFunction(funcname()));
        }

        return prodRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initToProdRoute</Name>
				<Source><![CDATA[
    void initToProdRoute(ProdRoute toProdRoute)
    {
        Route       route;
        RouteOpr    routeOpr;
        route.RouteMap::initFromRouteMap(search.prodroute());
        routeOpr.RouteOprMap::initFromRouteOprMap(search.prodroute());

        toProdRoute.RouteMap::initFromRouteMap(route);
        toProdRoute.RouteOprMap::initFromRouteOprMap(routeOpr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(
        RouteCopyTo         _copyTo,
        ProdRouteSearch     _search
        )
    {
        search      = _search;

        super(_copyTo);

        prodTable   = ProdTable::find(_search.prodId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>routeOpr</Name>
				<Source><![CDATA[
    RouteOprMap routeOpr()
    {
        Route       route;
        RouteOpr    prodRouteOpr;
        RouteOpr    baseRouteOpr;
        // Find "old" base routeOpr
        route.initFromProdRoute(search.prodroute());
        route.RouteId   = prodTable.RouteId;
        baseRouteOpr    = route.routeOpr(prodTable.ItemId, prodTable.inventDim().ConfigId, prodTable.inventDim().InventSiteId, baseRouteOpr);

        // Set routeOpr from prodRoute
        prodRouteOpr.RouteOprMap::initFromRouteOprMap(search.prodroute());

        // Copy "relation" fields to routeOpr
        prodRouteOpr.ItemCode       = baseRouteOpr.ItemCode;
        prodRouteOpr.ItemRelation   = baseRouteOpr.ItemRelation;
        prodRouteOpr.ConfigId       = baseRouteOpr.ConfigId;
        prodRouteOpr.RouteCode      = baseRouteOpr.RouteCode;
        prodRouteOpr.RouteRelation  = baseRouteOpr.RouteRelation;
        prodRouteOpr.SiteId         = baseRouteOpr.SiteId;

        return prodRouteOpr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>