<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetTransferUnPost_Both</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetTransferUnPost_Both extends RAssetTransferPost implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkLine</Name>
				<Source><![CDATA[
        /// <summary>
    /// Indicates whether the current transfer journal line is valid to reverse.
    /// </summary>
    /// <param name="_assetTransferTrans">
    /// A buffer containing <c>RAssetTransferTrans</c> table record.
    /// </param>
    /// <returns>
    /// true if all checks are OK; otherwise, false.
    /// </returns>
    public boolean checkLine(RAssetTransferTrans _assetTransferTrans)
    {
        RAssetMoveHist       moveHist;
        RAssetMoveHistEngine engine;
        boolean              ret = true;

        select firstonly moveHist
            where moveHist.TransferTransRecId == _assetTransferTrans.RecId;

        if (! moveHist.RecId)
            return checkFailed("@GLS220498");

        engine = RAssetMoveHistEngine::construct(moveHist);
        ret = engine.validateDelete();

        if (ret && ! moveHist.isLast())
            ret = checkFailed("@GLS63377");

        if (ret && assetTransferTable.NewLocation != assetTransferTable.OldLocation)
            ret = ! RAssetInventoryTable::checkInventory(RAssetTable::find(_assetTransferTrans.AccountNum),
                                                         assetTransferTable.TransDate);

        if (! ret)
            checkFailed("@GLS220501");

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLine</Name>
				<Source><![CDATA[
        public void postLine(RAssetTransferTrans _assetTransferTrans)
    {
        RAssetMoveHist moveHist;

        ttsbegin;

        delete_from moveHist
            where moveHist.TransferTransRecId == _assetTransferTrans.RecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatus</Name>
				<Source><![CDATA[
        public void updateStatus()
    {
        assetTransferTable.selectForUpdate(true);
        assetTransferTable.Posted = NoYes::No;
        assetTransferTable.doUpdate();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>