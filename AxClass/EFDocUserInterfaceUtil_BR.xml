<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocUserInterfaceUtil_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class concentrates operations that are used accross different forms that deal with
/// electronic fiscal document.
/// </summary>
class EFDocUserInterfaceUtil_BR
{
    EFDocState_BR EFDocState;
    EFDocument_BR efDocument;
    FiscalDocument_BR fiscalDocument;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>askUserYesOrNo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Show the user a dialog with "yes" and "no" buttons for the provided question.
    /// </summary>
    /// <param name="_question">Question to ask the user</param>
    /// <param name="_defaultValue">The default answer for the question</param>
    /// <returns>The answer the user provided</returns>
    public boolean askUserYesOrNo(str _question, boolean _defaultValue = true)
    {
        DialogButton defaultButton;
        ;
        if (_defaultValue)
        {
            defaultButton = DialogButton::Yes;
        }
        else
        {
            defaultButton = DialogButton::No;
        }
        return Box::yesNo(_question, defaultButton) == DialogButton::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkReversal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if it is allowed to reverse an electronic fiscal document.
    /// If it is, ask the user to confirm the operation when the document
    /// is already approved or was rejected and is being processed.
    /// </summary>
    /// <returns>True if reversal should proceed; false otherwise.</returns>
    public boolean checkReversal()
    {
        if (!efDocument)
        {
            return true;
        }
        else if (!EFDocState.canReverse())
        {
            return checkFailed(strfmt("@GLS62551",
                                      fiscalDocument.Status,
                                      efdocument.MessageStatus,
                                      efdocument.MessageType));
        }
        else if (fiscalDocument.Status == FiscalDocumentStatus_BR::Approved)
        {
            return this.askUserYesOrNo("@GLS62559");
        }
        else if (fiscalDocument.Status == FiscalDocumentStatus_BR::Rejected
                 && efDocument.MessageStatus == EFDocMessageStatus_BR::Processed)
        {
            return this.askUserYesOrNo("@GLS62558");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance based on given <c>EFDocument_BR</c> and <c>FiscalDocument_BR</c> records.
    /// </summary>
    /// <param name="_efDocument">
    /// <c>EFDocument_BR</c> to initialize from.
    /// </param>
    /// <param name="_fiscalDocument">
    /// <c>FiscalDocument_BR</c> to initialize from.
    /// </param>
    public void new(EFDocument_BR _efDocument, FiscalDocument_BR _fiscalDocument = null)
    {
        efDocument = _efDocument;

        if (_fiscalDocument)
        {
            fiscalDocument = _fiscalDocument;
        }
        else
        {
            fiscalDocument = FiscalDocument_BR::find(efDocument.RefRecId);
        }

        EFDocState = EFDocState_BR::createFromEFdocument(efDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance based on given <c>EFDocument_BR</c> and <c>FiscalDocument_BR</c> records.
    /// </summary>
    /// <param name="_efDocument">
    /// <c>EFDocument_BR</c> to initialize from.
    /// </param>
    /// <param name="_fiscalDocument">
    /// <c>FiscalDocument_BR</c> to initialize from.
    /// </param>
    /// <returns>
    /// A new instance of <c>EFDocUserInterfaceUtil_BR</c>.
    /// </returns>

    public static EFDocUserInterfaceUtil_BR construct(EFDocument_BR _efDocument, FiscalDocument_BR _fiscalDocument = null)
    {
        return new EFDocUserInterfaceUtil_BR(_efDocument, _fiscalDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromFiscalDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance based on a given <c>FiscalDocument_BR</c> record.
    /// </summary>
    /// <param name="_fiscalDocument">
    /// <c>FiscalDocument_BR</c> to initialize from.
    /// </param>
    /// <returns>
    /// A new instance of <c>EFDocUserInterfaceUtil_BR</c>.
    /// </returns>
    public static EFDocUserInterfaceUtil_BR constructFromFiscalDocument(FiscalDocument_BR _fiscalDocument)
    {
        return EFDocUserInterfaceUtil_BR::construct(EFDocument_BR::findByRef(_fiscalDocument.RecId), _fiscalDocument);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>