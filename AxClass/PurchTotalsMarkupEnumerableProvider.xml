<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTotalsMarkupEnumerableProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchTotalsMarkupEnumerableProvider</c> class implements the
/// <c>TradeTotalsIMarkupEnumerableProvider</c> interface to return <c>TradeCommonIEnumerable</c>
/// object to iterate <c>MarkupTrans</c> records for a specified parent record.
/// </summary>
/// <remarks>
/// The class iterates a set of <c>MarkupTrans</c> records IDs and uses it to look up each complete
/// <c>MarkupTrans</c> record.
/// </remarks>
class PurchTotalsMarkupEnumerableProvider implements TradeTotalsIMarkupEnumerableProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>markupEnumerable</Name>
				<Source><![CDATA[
    public TradeCommonIEnumerable markupEnumerable(MarkupTransRefTableId _sourceTableId, MarkupTransRefRecId _sourceRecId, boolean _forupdate = false)
    {
        SetEnumerator           markupRecIdEnum;
        List                    markupTransList = new List(Types::Record);

        if (Markup::isSequenceAndCompoundEnabledForHeaderSource(_sourceTableId) && AutoChargesSetupSequenceCompoundFeature::instance().IsEnabled())
        {
            ListEnumerator markupRecIdListEnum = MarkupTrans::getMarkupRecIdsBySourceSortedByPosition(_sourceTableId, _sourceRecId);

            while (markupRecIdListEnum.moveNext())
            {
                markupTransList.addEnd(MarkupTrans::findRecId(markupRecIdListEnum.current(), _forupdate));
            }
        }
        else
        {
            markupRecIdEnum = MarkupTrans::getMarkupRecIdsBySource(_sourceTableId, _sourceRecId);

            while (markupRecIdEnum.moveNext())
            {
                markupTransList.addEnd(MarkupTrans::findRecId(markupRecIdEnum.current(), _forupdate));
            }
        }

        return TradeCommonEnumerableList::newFromList(markupTransList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static PurchTotalsMarkupEnumerableProvider construct()
    {
        return new PurchTotalsMarkupEnumerableProvider();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProvider</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>PurchTotalsMarkupEnumerableProvider</c> class.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>PurchTotalsMarkupEnumerableProvider</c> class.
    /// </returns>
    public static PurchTotalsMarkupEnumerableProvider newProvider()
    {
        PurchTotalsMarkupEnumerableProvider purchTotalsMarkupEnumerableProvider;

        purchTotalsMarkupEnumerableProvider = PurchTotalsMarkupEnumerableProvider::construct();

        return purchTotalsMarkupEnumerableProvider;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>