<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetMidQuarterContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AssetMidQuarterContract</c> class is the Data Contract class for the <c>AssetMidQuarter</c>
///    SSRS Report.
/// </summary>
/// <remarks>
///    This is the Data Contract class for the <c>AssetMidQuarter</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationGroupAttribute('Period', "@SYS40", '1')
]
public class AssetMidQuarterContract implements SysOperationValidatable
{
    AssetBookId assetBookId;
    TransDate yearEnding;
    boolean showDisposed;
    boolean showReportingCurrency = false;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmBookId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter BookId.
    /// </summary>
    /// <param name="_assetBookId">
    /// The new value of the datacontract parameter BookId.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter BookId.
    /// </returns>
    [
        DataMemberAttribute('BookId'),
        SysOperationGroupMemberAttribute('Period'),
        SysOperationLabelAttribute(literalstr("@FixedAssets:FA_EntityField_Book")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public AssetBookId parmBookId(AssetBookId _assetBookId = assetBookId)
    {
        assetBookId = _assetBookId;
        return assetBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowDisposed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ShowDisposed.
    /// </summary>
    /// <param name="_showDisposed">
    /// The new value of the datacontract parameter ShowDisposed; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter ShowDisposed.
    /// </returns>
    [
        DataMemberAttribute('ShowDisposed'),
        SysOperationLabelAttribute(literalstr("@SYS96916")),
        SysOperationGroupMemberAttribute('Period'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public boolean parmShowDisposed(boolean _showDisposed = showDisposed)
    {
        showDisposed = _showDisposed;
        return showDisposed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmYearEnding</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter YearEnding.
    /// </summary>
    /// <param name="_yearEnding">
    /// The new value of the datacontract parameter YearEnding; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter YearEnding.
    /// </returns>
    [
        DataMemberAttribute('YearEnding'),
        SysOperationLabelAttribute(literalstr("@FixedAssets:FA_Parameter_Field_YearEndingDate")),
        SysOperationGroupMemberAttribute('Period'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public Transdate parmYearEnding(TransDate _yearEnding = yearEnding)
    {
        yearEnding = _yearEnding;
        return yearEnding;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the SSRS Report Parameters.
    /// </summary>
    /// <returns>
    ///    true if validation is successful; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!assetBookId)
        {
            isValid = checkFailed("@FixedAssets:FA_ErrorMessage_AssetMidQuarterMissingBookId");
        }

        if (!yearEnding)
        {
            isValid = checkFailed("@FixedAssets:FA_Parameter_Validation_YearEnding");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowReportingCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hidden parameter for reporting currency column visibility.
    /// </summary>
    /// <param name = "_showReportingCurrency">
    /// boolean value.
    /// </param>
    /// <returns>
    /// Returns True if the current ledger's reporting currency is not blank and it is not same as accounting currency.
    /// </returns>
    [
        DataMemberAttribute, SysOperationControlVisibilityAttribute(false)
    ]
    public boolean parmShowReportingCurrency(boolean _showReportingCurrency = showReportingCurrency)
    {
        if (Ledger::reportingCurrency() && Ledger::accountingCurrency() != Ledger::reportingCurrency())
        {
            showReportingCurrency = true;
        }
        else
        {
            showReportingCurrency = _showReportingCurrency;
        }

        return showReportingCurrency;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>