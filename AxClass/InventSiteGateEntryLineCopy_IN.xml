<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSiteGateEntryLineCopy_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventSiteGateEntryLineCopy_IN</c> class copies lines from differnt source to the Indian Gate entry.
/// </summary>
internal class InventSiteGateEntryLineCopy_IN
{
    private TmpFrmVirtual tmpFrmVirtualLines;
    private InventSiteGateEntry_IN inventSiteGateEntry;
    private SalesPurchLine salesPurchLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes an instance of the <c>InventSiteGateEntryLineCopy_IN</c> class.
    /// </summary>
    /// <param name = "_inventSiteGateEntry">Cursor of the <c>InventSiteGateEntry_IN</c>.</param>
    /// <param name = "_tmpFrmVirtualLines">Table varibale of the <c>TmpFrmVirtual</c> that contains reference to the marked lines.</param>
    /// <param name = "_source">Table varibale, the source of lines to copy.</param>
    /// <returns></returns>
    public static InventSiteGateEntryLineCopy_IN construct(InventSiteGateEntry_IN _inventSiteGateEntry, TmpFrmVirtual _tmpFrmVirtualLines, Common _source)
    {
        if (!conFind([tableNum(SalesLine), tableNum(PurchLine)], _source.tableid))
        {
            throw error("@SYS18626");
        }

        InventSiteGateEntryLineCopy_IN inventSiteGateEntryLineCopy = new InventSiteGateEntryLineCopy_IN();

        inventSiteGateEntryLineCopy.inventSiteGateEntry = _inventSiteGateEntry;
        inventSiteGateEntryLineCopy.tmpFrmVirtualLines = _tmpFrmVirtualLines;
        inventSiteGateEntryLineCopy.salesPurchLine = _source;

        return inventSiteGateEntryLineCopy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferToGateEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies all marked source lines to gate entry lines.
    /// </summary>
    public void transferToGateEntry()
    {
        this.deleteExistingLines();
        this.copyMarkedLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyMarkedLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies base information from virtuel lines to gate entry lines.
    /// </summary>
    protected void copyMarkedLines()
    {
        RecordInsertList recordInsertList = new RecordInsertList(tableNum(InventSiteGateEntryLine_IN));

        InventSiteGateEntryLine_IN inventSiteGateEntryLine;

        this.initGateEntryLineFromHeader(inventSiteGateEntryLine);

        while select tmpFrmVirtualLines
            join salesPurchLine
                where salesPurchLine.TableId == tmpFrmVirtualLines.TableNum
                    && salesPurchLine.RecId == tmpFrmVirtualLines.RecordNo
        {
            this.initGateEntryLineFromTmpFrmVirtual(inventSiteGateEntryLine, tmpFrmVirtualLines);
            
            SalesPurchLineInterface orderLine = salesPurchLine.salesPurchLineInterface();

            inventSiteGateEntryLine.ChallanQty = sign(tmpFrmVirtualLines.Qty) * orderLine.parmRemainPhysicalQty();
            inventSiteGateEntryLine.MeasuredQty = inventSiteGateEntryLine.ChallanQty;
            inventSiteGateEntryLine.UnitOfMeasurement = orderLine.parmUnitId();
            inventSiteGateEntryLine.InventoryUnit = inventSiteGateEntryLine.UnitOfMeasurement;

            if (salesPurchLine is SalesLine)
            {
                SalesLine salesLine = salesPurchLine as SalesLine;
                inventSiteGateEntryLine.Description = salesLine.Name;
            } 
            else 
            {
                PurchLine purchLine = salesPurchLine as PurchLine;
                inventSiteGateEntryLine.Description = purchLine.Name;
            }
            recordInsertList.add(inventSiteGateEntryLine);
        }

        recordInsertList.insertDatabase();

    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteExistingLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes previous gate entry lines associted with gicven gate entry.
    /// </summary>
    protected void deleteExistingLines()
    {
        InventSiteGateEntryLine_IN inventSiteGateEntryLine;

        delete_from inventSiteGateEntryLine
            where inventSiteGateEntryLine.InventSiteGateEntry == inventSiteGateEntry.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initGateEntryLineFromTmpFrmVirtual</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize fields of the <c>InventSiteGateEntryLine_IN</c> buffer from the <c>TmpFrmVirtual</c> buffer.
    /// </summary>
    /// <param name = "_inventSiteGateEntryLine">A buffer of the <c>InventSiteGateEntryLine_IN</c> type.</param>
    /// <param name = "_tmpFrmVirtualLines">A buffer of the <c>TmpFrmVirtual</c> type.</param>
    protected void initGateEntryLineFromTmpFrmVirtual(InventSiteGateEntryLine_IN _inventSiteGateEntryLine, TmpFrmVirtual _tmpFrmVirtualLines)
    {
        _inventSiteGateEntryLine.SourceTableId = _tmpFrmVirtualLines.TableNum;
        _inventSiteGateEntryLine.SourceRecId = _tmpFrmVirtualLines.RecordNo;
        _inventSiteGateEntryLine.OrderId = _tmpFrmVirtualLines.Id;
        _inventSiteGateEntryLine.LineNum = _tmpFrmVirtualLines.LineNum;
        _inventSiteGateEntryLine.ItemId = _tmpFrmVirtualLines.ItemId;
        _inventSiteGateEntryLine.InventDimId = _tmpFrmVirtualLines.InventDimId;
        _inventSiteGateEntryLine.OrderQty = abs(_tmpFrmVirtualLines.Qty);
   }

]]></Source>
			</Method>
			<Method>
				<Name>initGateEntryLineFromHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize fields of the <c>InventSiteGateEntryLine_IN</c>  buffer from the header.
    /// </summary>
    /// <param name = "_inventSiteGateEntryLine">A buffer of the <c>InventSiteGateEntryLine_IN</c> type.</param>
    protected void initGateEntryLineFromHeader(InventSiteGateEntryLine_IN _inventSiteGateEntryLine)
    {
        _inventSiteGateEntryLine.InventSiteGateEntry = inventSiteGateEntry.RecId;
        _inventSiteGateEntryLine.EntryId = inventSiteGateEntry.EntryId;
        _inventSiteGateEntryLine.ChallanNumber = inventSiteGateEntry.ChallanNumber;
        _inventSiteGateEntryLine.ChallanDate = inventSiteGateEntry.ChallanDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>