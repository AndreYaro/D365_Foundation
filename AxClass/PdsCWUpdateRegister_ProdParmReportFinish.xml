<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsCWUpdateRegister_ProdParmReportFinish</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used to update the ProdParmReportFinished QtyGood and PdsCWBatchGood quantities.
/// </summary>
class PdsCWUpdateRegister_ProdParmReportFinish
    extends PdsCWUpdateRegister
{
    ProdParmReportFinished prodParmReportFinished;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the global buffer to _prodParmReport finished object and returns it.
    /// </summary>
    /// <param name="_buffer">ProdParmReportFinished object to be used as the global bufer.</param>
    /// <returns>Global buffer object.</returns>
    public Common parmBuffer(
        Common _buffer = null)
    {
        if (!prmisdefault(_buffer))
        {
            prodParmReportFinished = _buffer as ProdParmReportFinished;
        }

        return prodParmReportFinished;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRegister</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>ProdParmReportFinished</c> quantity good and catch weight good quantity.
    /// </summary>
    public void updateRegister()
    {
        if (!inventTransWMS)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        if (PdsGlobal::pdsIsCWItem(prodParmReportFinished.ItemId))
        {
            ttsbegin;
            prodParmReportFinished.selectForUpdate(true);

            prodParmReportFinished.QtyGood = InventTransIdSumSingleStatus::qtyRegistered(InventTransOrigin::findByInventTransId(prodParmReportFinished.InventTransId).RecId);
            prodParmReportFinished.PdsCWBatchGood = InventTransIdSumSingleStatus::pdsCWQtyRegistered(InventTransOrigin::findByInventTransId(prodParmReportFinished.InventTransId).RecId);

            prodParmReportFinished.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PdsCWUpdateRegister_ProdParmReportFinish construct()
    {
        return new PdsCWUpdateRegister_ProdParmReportFinish();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>