<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSequenceTableListPageExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
class NumberSequenceTableListPageExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNSGlobalMap_Handler</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(NumberSequenceTableListPage), delegatestr(NumberSequenceTableListPage, getNSGlobalMap))]
    static void getNSGlobalMap_Handler(Map _moduleMap, EventHandlerResult _result)
    {
        NumberSeqGlobal_IN nsGlobalMap = new NumberSeqGlobal_IN();
        Map ret = nsGlobalMap.buildModulesMapBasedOnParameter(_moduleMap);
        _result.result(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalCalendarPeriodDS_Handler</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(NumberSequenceTableListPage), delegatestr(NumberSequenceTableListPage, getFiscalCalendarPeriodDS))]
    static void getFiscalCalendarPeriodDS_Handler(Query _query, QueryBuildDataSource _qbdsTemp, EventHandlerResult _result)
    {
        QueryBuildDataSource ret = SysQuery::findOrCreateDataSourceByName(_query,
                tableStr(FiscalCalendarPeriod), tableNum(FiscalCalendarPeriod),
                _qbdsTemp.name(), _qbdsTemp.table(),
                true);

        _result.result(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalCalendarYearDS_Handler</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(NumberSequenceTableListPage), delegatestr(NumberSequenceTableListPage, getFiscalCalendarYearDS))]
    static void getFiscalCalendarYearDS_Handler(Query _query, QueryBuildDataSource _qbdsTemp, EventHandlerResult _result)
    {
        QueryBuildDataSource ret = SysQuery::findOrCreateDataSourceByName(_query,
                tableStr(FiscalCalendarYear), tableNum(FiscalCalendarYear),
                _qbdsTemp.name(), _qbdsTemp.table(),
                true);

        _result.result(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalCalendarPeriodQueryFilter_Handler</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(NumberSequenceTableListPage), delegatestr(NumberSequenceTableListPage, getFiscalCalendarPeriodQueryFilter))]
    static void getFiscalCalendarPeriodQueryFilter_Handler(Query _query, QueryBuildDataSource _qbdsTemp, EventHandlerResult _result)
    {
        QueryFilter ret = SysQuery::findOrCreateQueryFilter(_query, _qbdsTemp, fieldStr(FiscalCalendarPeriod, FiscalCalendarYear));
        _result.result(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalCalendarYearQueryFilter_Handler</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(NumberSequenceTableListPage), delegatestr(NumberSequenceTableListPage, getFiscalCalendarYearQueryFilter))]
    static void getFiscalCalendarYearQueryFilter_Handler(Query _query, QueryBuildDataSource _qbdsTemp, EventHandlerResult _result)
    {
        QueryFilter ret = SysQuery::findOrCreateQueryFilter(_query, _qbdsTemp, fieldStr(FiscalCalendarYear, FiscalCalendar));
        _result.result(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>FiscalCalendarYearReferenceGroupLookupReference_Handler</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(NumberSequenceTableListPage), delegatestr(NumberSequenceTableListPage, FiscalCalendarYearReferenceGroupLookupReference))]
    static void FiscalCalendarYearReferenceGroupLookupReference_Handler(FormReferenceControl control, recId value, EventHandlerResult _result)
    {
        Common ret;
        ret = FinNumberSequenceExtension::lookupFiscalCalendarYear(control, value);
        _result.result(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>FiscalCalendarPeriodReferenceGroupLookupReference_Handler</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(NumberSequenceTableListPage), delegatestr(NumberSequenceTableListPage, FiscalCalendarPeriodReferenceGroupLookupReference))]
    static void FiscalCalendarPeriodReferenceGroupLookupReference_Handler(FormReferenceControl control, recId value, EventHandlerResult _result)
    {
        Common ret;
        ret = FinNumberSequenceExtension::lookupFiscalCalendarPeriod(control, value);
        _result.result(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalCalendarRecId_Handler</Name>
				<Source><![CDATA[
    [SubscribesTo(formstr(NumberSequenceTableListPage), delegatestr(NumberSequenceTableListPage, getFiscalCalendarRecId))]
    static void getFiscalCalendarRecId_Handler(RecId _id, EventHandlerResult _result)
    {
        RecId ret = Ledger::fiscalCalendar(_id);
        _result.result(ret);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>