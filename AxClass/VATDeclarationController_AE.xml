<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VATDeclarationController_AE</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The controller of ER UAE VAT declaration file generation.
/// </summary>
public class VATDeclarationController_AE extends VATDeclarationController_W implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        VATDeclarationController_AE controller = VATDeclarationController_AE::construct();

        controller.parmArgs(_args);
        controller.prePromptModifyContract(_args);
        controller.preRun();
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VATDeclarationController_AE construct()
    {
        return new VATDeclarationController_AE(classStr(VATDeclarationService_W),
            methodStr(VATDeclarationService_W, generateXml), SysOperationExecutionMode::Synchronous);
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRun</Name>
				<Source><![CDATA[
    private void preRun()
    {
        TaxReport taxReport = args.parmObject() as TaxReport;

        if (taxReport
            && args
            && args.dataset() == tableNum(TaxReportPeriod))
        {
            VATDeclaraitonContract_W contract = this.getDataContractObject() as VATDeclaraitonContract_W;

            TaxReportPeriod taxReportPeriod = args.record();
            contract.parmTaxPeriod(taxReportPeriod.TaxPeriod);
            contract.parmFromDate(taxReport.fromDate());
            contract.parmToDate(taxReport.toDate());
            contract.parmTransDate(taxReport.transDate());
            contract.parmMonth(int2str(mthOfYr(taxReport.fromDate())));
            contract.parmYear(int2str(year(taxReport.fromDate())));
            contract.parmTaxRepVersion(TaxRepVersion::Correct);
   
            TmpTaxReportById tmpTaxReportById = TaxTrans::taxAmountByReportId_Table(taxReport.fromDate(), taxReport.toDate(), taxReport.taxPeriod(), taxReport.taxRepVersion(), 0, taxReport.update());
            contract.parmTmpTaxReportById(tmpTaxReportById);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>