<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendVendorRequestCategoryNCAReasonRejectManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Utilized for the rejection and the end of a vendor request workflow.
/// </summary>
/// <remarks>
/// Handles the update of the vendor request record when the reject button has been clicked.The default
/// dialog box and cancel functionality from the <c>WorkflowCancelManager</c> class is reused.
/// </remarks>
internal class VendVendorRequestCategoryNCAReasonRejectManager extends WorkflowWorkItemActionManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendVendorRequestCategoryNCAReasonRejectManager construct()
    {
        return new VendVendorRequestCategoryNCAReasonRejectManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        VendVendorRequestCategoryNCAReasonRejectManager workflowRejectManager = VendVendorRequestCategoryNCAReasonRejectManager::construct();
        workflowRejectManager.parmArgs(_args);
        workflowRejectManager.parmCaller(_args.caller());

        VendVendorRequestNewCategory vendorRequest = _args.record() as VendVendorRequestNewCategory;

        if (!vendorRequest)
        {
            throw error(Error::missingRecord(tableStr(VendVendorRequestNewCategory)));
        }

        if (vendorRequest.RecId
            && VendVendorRequestManager::construct(vendorRequest.RequestEntityType).canRejectRequest(vendorRequest))
        {
            workflowRejectManager.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>