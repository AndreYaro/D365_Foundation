<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscAdmSmartRound</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PriceDiscAdmSmartRound extends RunBase
{
    #DEFINE.CurrentVersion(1)

    #LOCALMACRO.CurrentList
       journalNum
     #ENDMACRO

    PriceDiscJournalNum journalNum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container  pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    void run()
    {
        PriceDiscAdmTrans  priceDiscAdmTrans;

        ttsbegin;

        while select forupdate * from priceDiscAdmTrans
            where priceDiscAdmTrans.JournalNum == journalNum &&
                  priceDiscAdmTrans.Relation     == PriceType::PriceSales
        {
            priceDiscAdmTrans.Amount = PriceDiscSmartRounding::smartRound(priceDiscAdmTrans.Amount,
                                                                          Currency::find(priceDiscAdmTrans.Currency));

            if (priceDiscAdmTrans.Amount != priceDiscAdmTrans.orig().Amount)
            {
                priceDiscAdmTrans.DifferentFromPosted = NoYes::Yes;
                priceDiscAdmTrans.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJournalNum</Name>
				<Source><![CDATA[
    void setJournalNum(PriceDiscJournalNum _journalNum)
    {
        journalNum = _journalNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean  unpack(container  _packedClass)
    {
        Integer     version     = RunBase::getVersion(_packedClass);
        switch (version)
        {
            case #CurrentVersion :
                [version, #CurrentList] = _packedClass;
                break;

            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static PriceDiscAdmSmartRound construct()
    {
        return new PriceDiscAdmSmartRound();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@SYS134938";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        PriceDiscAdmTrans   priceDiscAdmTrans;
        PriceDiscAdmSmartRound  priceDiscAdmSmartRound = PriceDiscAdmSmartRound::construct();

        if (!(args.dataset() == tablenum(PriceDiscAdmTrans)))
        {
            throw error("@SYS18626");
        }

        priceDiscAdmTrans = args.record();
        if (!priceDiscAdmTrans.JournalNum)
        {
            throw error("@SYS59008");
        }

        priceDiscAdmSmartRound.setJournalNum(priceDiscAdmTrans.JournalNum);
        priceDiscAdmSmartRound.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>