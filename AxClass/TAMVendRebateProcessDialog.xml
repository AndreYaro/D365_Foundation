<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMVendRebateProcessDialog</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TAMVendRebateProcessDialog</c> class serves to process selected rebates.
/// </summary>
class TAMVendRebateProcessDialog extends RunBaseBatch implements BatchRetryable
{
    TAMVendRebateProcessDialog      vendRebateProcessDialog;
    DialogRunbase                   dialogRunbase;
    QueryRun                        queryRun;
    container                       packedQuery;

    #DEFINE.CurrentVersion(4)
    #LOCALMACRO.CurrentList
    packedQuery
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows the dialog.
    /// </summary>
    /// <returns>
    /// The dialog box object.
    /// </returns>
    public Object dialog()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the dialog vendor field values.
    /// </summary>
    /// <returns>
    /// true if the field values were retrieved successfully; otherwise, false.
    /// </returns>
    public boolean getFromDialog()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the application module value.
    /// </summary>
    /// <returns>
    /// The vendor application module value.
    /// </returns>
    public SysModule module()
    {
        return SysModule::Vend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Substantiates the <c>TAMVendRebateProcessDialog</c> object.
    /// </summary>
    protected void new()
    {
        super();
        queryRun = new QueryRun(querystr(TAMVendRebateTableListPage));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Stores the dialog object parameters.
    /// </summary>
    /// <returns>
    /// The list of stored parameters.
    /// </returns>
    public container pack()
    {
        packedQuery = queryRun.pack();
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launches the process rebate funtionality.
    /// </summary>
    public void run()
    {
        TAMVendRebateTable::processRebatePayments('', '', queryRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Restores the last parameters saved.
    /// </summary>
    /// <param name="_packedClass">
    /// The list of stored parameters.
    /// </param>
    /// <returns>
    /// true if the restore succeded; otherwise, false.
    /// </returns>
    public boolean unpack(container _packedClass)
    {
        Integer     version     = conpeek(_packedClass,1);
        boolean     ret = true;

        switch (version)
        {
            case #CurrentVersion  :
                [version,#CurrentList] = _packedClass;
                break;
            default :
                ret = false;
                break;
        }

        if (packedQuery)
            queryRun = new QueryRun(packedQuery);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an instance of the <c>TAMVendRebateProcessDialog</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>TAMVendRebateProcessDialog</c> class.
    /// </returns>
    public static TAMVendRebateProcessDialog construct()
    {
        return new TAMVendRebateProcessDialog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the class description.
    /// </summary>
    /// <returns>
    /// The class description.
    /// </returns>
    public static ClassDescription description()
    {
        return "@PRO1121";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance and runs the <c>TAMVendRebateProcessDialog</c> class.
    /// </summary>
    /// <param name="_args">
    /// Any arguments passed to the class.
    /// </param>
    public static void main(Args _args)
    {
        Common              record;
        FormDataSource      tamVendRebateTable_ds;

        TAMVendRebateProcessDialog tamVendRebateProcessDialog =
            TAMVendRebateProcessDialog::construct();

        tamVendRebateProcessDialog.updateQuery();

        if (tamVendRebateProcessDialog.prompt())
        {
            tamVendRebateProcessDialog.runOperation();

            record = _args.record();
            if (record && FormDataUtil::getFormDataSource(record))
            {
                tamVendRebateTable_ds = FormDataUtil::getFormDataSource(record);
                tamVendRebateTable_ds.research();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuery</Name>
				<Source><![CDATA[
    private void updateQuery()
    {
        QueryBuildDataSource vendRebateAgreementDataSource;
        QueryBuildDataSource vendRebateTableDataSource;
        QueryBuildRange      vendRebateIdRange;

        vendRebateAgreementDataSource = queryRun.query().dataSourceTable(tablenum(TAMVendRebateAgreement));

        if (vendRebateAgreementDataSource)
        {
            vendRebateAgreementDataSource.enabled(false);
        }

        vendRebateTableDataSource = queryRun.query().dataSourceTable(tablenum(TAMVendRebateTable));

        if (vendRebateTableDataSource)
        {
            vendRebateIdRange = vendRebateTableDataSource.findRange(fieldnum(TAMVendRebateTable,VendRebateId));

            if (vendRebateIdRange)
            {
                vendRebateIdRange.enabled(false);
            }

            SysQuery::findOrCreateRange(vendRebateTableDataSource, fieldnum(TAMVendRebateTable,VendRebateGroupId));
            SysQuery::findOrCreateRange(vendRebateTableDataSource, fieldnum(TAMVendRebateTable,VendInvoiceId));
            SysQuery::findOrCreateRange(vendRebateTableDataSource, fieldnum(TAMVendRebateTable,RebateCalcDate));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>