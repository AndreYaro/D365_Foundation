<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxVendDocumentLineMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class AxVendDocumentLineMap extends AxApplicationBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an enumeration value that specificies the internal or external context.
    /// </summary>
    /// <param name="_inputStatus">
    ///    An enumeration value that specifies the new input status; optional.
    /// </param>
    /// <returns>
    ///    Internal or external.
    /// </returns>
    /// <remarks>
    ///    The <c>AxVendDocumentLineMap</c> class is intended to work with the client and the service model.
    ///    This variable is exposed so it is controlled from the client and the service models. The
    ///    enumeration value internal represents the application, while the enumeration value external
    ///    represents the user or application.
    /// </remarks>
    public int inputStatus(InternalExternal _inputStatus = inputStatus)
    {
        int inputStatusReturn;

        inputStatusReturn = super(_inputStatus);

        return inputStatusReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTableFieldSet</Name>
				<Source><![CDATA[
    public boolean isTableFieldSet(fieldId _fieldId)
    {
        fieldId fieldIdInTable = VendDocumentUtil::fieldNum(_fieldId, this.vendDocumentLineMap().TableId);
        return this.isFieldSet(fieldIdInTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangedManually</Name>
				<Source><![CDATA[
    public abstract NoYes parmChangedManually(NoYes _changedManually = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClosed</Name>
				<Source><![CDATA[
    public abstract NoYes parmClosed(NoYes _closed = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public abstract str parmCurrencyCode(str _currencyCode = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public abstract VendName parmDeliveryName(VendName _deliveryName = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    public abstract InvoiceLineDescription parmDescription(InvoiceLineDescription _description = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentOrigin</Name>
				<Source><![CDATA[
    public abstract DocumentOrigin parmDocumentOrigin(DocumentOrigin _documentOrigin = DocumentOrigin::Manual)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public abstract InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventNow</Name>
				<Source><![CDATA[
    public abstract InventQty parmInventNow(InventQty _inventNow = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    public abstract TradeInventTransId parmInventTransId(TradeInventTransId _inventTransId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    public abstract str parmInvoiceAccount(str _invoiceAccount = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public abstract str parmItemId(str _itemId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    public abstract AmountCur parmLineAmount(AmountCur _lineAmount = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    public abstract PurchLineDisc parmLineDisc(PurchLineDisc _lineDisc = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public abstract LineNum parmLineNum(LineNum _lineNum = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePercent</Name>
				<Source><![CDATA[
    public abstract PurchLinePercent parmLinePercent(PurchLinePercent _linePercent = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnDisc</Name>
				<Source><![CDATA[
    public abstract PurchMultiLnDisc parmMultiLnDisc(PurchMultiLnDisc _multiLnDisc = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnPercent</Name>
				<Source><![CDATA[
    public abstract PurchMultiLnPercent parmMultiLnPercent(PurchMultiLnPercent _multiLnPercent = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderAccount</Name>
				<Source><![CDATA[
    public abstract str parmOrderAccount(str _orderAccount = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrdering</Name>
				<Source><![CDATA[
    public abstract DocumentStatus parmOrdering(DocumentStatus _ordering = DocumentStatus::None)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigPurchId</Name>
				<Source><![CDATA[
    public abstract PurchIdOrig parmOrigPurchId(PurchIdOrig _origPurchId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParmId</Name>
				<Source><![CDATA[
    public abstract ParmId parmParmId(ParmId _parmId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWReceiveNow</Name>
				<Source><![CDATA[
    public abstract PdsCWInventQty parmPdsCWReceiveNow(PdsCWInventQty _pdsCWReceiveNow = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWRemainAfter</Name>
				<Source><![CDATA[
    public abstract PdsCWInventQty parmPdsCWRemainAfter(PdsCWInventQty _pdsCWRemainAfter = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWRemainBefore</Name>
				<Source><![CDATA[
    public abstract PdsCWInventQty parmPdsCWRemainBefore(PdsCWInventQty _pdsCWRemainBefore = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    public abstract PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcurementCategory</Name>
				<Source><![CDATA[
    public abstract PurchCategory parmProcurementCategory(PurchCategory _procurementCategory = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchaseLineLineNumber</Name>
				<Source><![CDATA[
    public abstract TradeLineNumber parmPurchaseLineLineNumber(TradeLineNumber _lineNumber = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchInvoiceLineType</Name>
				<Source><![CDATA[
    public abstract PurchInvoiceLineType parmPurchInvoiceLineType(PurchInvoiceLineType _purchInvoiceLineType = PurchInvoiceLineType::Standard)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLineRecId</Name>
				<Source><![CDATA[
    public abstract PurchLineRefRecId parmPurchLineRecId(PurchLineRefRecId _purchLineRecId = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchMarkup</Name>
				<Source><![CDATA[
    public abstract PurchMarkup parmPurchMarkup(PurchMarkup _purchMarkup = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchPrice</Name>
				<Source><![CDATA[
    public abstract PurchPrice parmPurchPrice(PurchPrice _purchPrice = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiveNow</Name>
				<Source><![CDATA[
    public abstract PurchQty parmReceiveNow(PurchQty _receiveNow = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainAfter</Name>
				<Source><![CDATA[
    public abstract PurchQty parmRemainAfter(PurchQty _remainAfter = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainAfterInvent</Name>
				<Source><![CDATA[
    public abstract InventQty parmRemainAfterInvent(InventQty _remainAfterInvent = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainBefore</Name>
				<Source><![CDATA[
    public abstract PurchQty parmRemainBefore(PurchQty _remainBefore = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainBeforeInvent</Name>
				<Source><![CDATA[
    public abstract InventQty parmRemainBeforeInvent(InventQty _remainBeforeInvent = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainBeforeInventPhysical</Name>
				<Source><![CDATA[
    public abstract TradeRemainBeforeInventPhysical parmRemainBeforeInventPhysical(TradeRemainBeforeInventPhysical _remainBeforeInventPhysical = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTableRefId</Name>
				<Source><![CDATA[
    public abstract TradeLineRefId parmTableRefId(TradeLineRefId _tableRefId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public abstract TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroup</Name>
				<Source><![CDATA[
    public abstract TaxItemGroup parmTaxItemGroup(TaxItemGroup _taxItemGroup = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchLine</Name>
				<Source><![CDATA[
    public abstract PurchLine purchLine()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>validateField</c> method for the current record and upon failure throws an execption
    ///    or logs an error.
    /// </summary>
    /// <param name="_field">
    ///    The field ID that corresponds with the field to be validated.
    /// </param>
    /// <remarks>
    ///    This method overrides the base implementation, so the <c>AxVendDocumentLineMap</c> class instance
    ///    can be passed to the corresponding validateField table method.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    An error was found while validating the record.
    /// </exception>
    protected void validateField(fieldId _field)
    {
        if (!this.checkTableValidateField(_field))
        {
            if (continueOnError)
            {
                error("@SYS98197");
            }
            else
            {
                throw error("@SYS98197");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTableValidateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the validate field method of the table that stores this entity.
    /// </summary>
    /// <param name = "_fieldId"> The ID of the field to be validated.</param>
    /// <returns>true if validation succeeds, false otherwise.</returns>
    protected abstract boolean checkTableValidateField(fieldId _fieldId)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>validateWrite</c> method for the current record and upon failure throws an exception
    ///    or logs an error.
    /// </summary>
    /// <remarks>
    ///    This method overrides the base implementation, so the this <c>AxVendDocumentLineMap</c> class
    ///    instance can be passed to the corresponding validateWrite table method.If the
    ///    <c>continueOnError</c> parameter is true, then an exception will not be thrown.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    An error was found while validating the record.
    /// </exception>
    protected void validateWrite()
    {
        if (!this.checkTableValidateWrite())
        {
            if (continueOnError)
            {
                error("@SYS98197");
            }
            else
            {
                throw error("@SYS98197");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTableValidateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the validate write method of the table that stores this entity.
    /// </summary>
    /// <returns>true if validation succeeds, false otherwise.</returns>
    protected abstract boolean checkTableValidateWrite()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendDocumentLineMap</Name>
				<Source><![CDATA[
    public abstract VendDocumentLineMap vendDocumentLineMap(VendDocumentLineMap _vendDocumentTable = null)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>