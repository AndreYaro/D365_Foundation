<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTax1099UpdateMultipleVendorsUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendTax1099UpdateMultipleVendorsUIBuilder</c> class handles the UI creation and maintenance for the <c>VendTax1099MultipleVendorProcessor</c>.
/// </summary>
internal final class VendTax1099UpdateMultipleVendorsUIBuilder extends SysOperationUIBuilder
{
    private VendTax1099UpdateMultipleVendorsContract contract;

    private boolean doUpdateVendorBox;
    private Tax1099Box newTax1099Box;
    private boolean doUpdateTransaction1099;
    private TransDate fromDate;
    private TransDate toDate;
    private Tax1099State stateFor1099;
    private boolean doSetAll1099;
    private boolean doRecalcAmounts;

    private DialogField dialogDoUpdateVendorBox;
    private DialogField dialogNewTax1099Box;
    private DialogField dialogDoUpdateTransaction1099;
    private DialogField dialogFromDate;
    private DialogField dialogToDate;
    private DialogField dialogDoSetAll1099;
    private DialogField dialogDoRecalcAmounts;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void build()
    {
        super();

        Dialog dialogLocal = dialog as Dialog;

        dialog.addGroup("@AccountsPayable:Update1099InformationForMultipleVendors").columns(1);
        dialogDoUpdateVendorBox = dialog.addFieldValue(enumstr(NoYes), doUpdateVendorBox, "@AccountsPayable:UpdateVendor1099Box", "@AccountsPayable:UpdateVendor1099BoxHelp");
        dialogNewTax1099Box = dialog.addFieldValue(extendedtypestr(Tax1099Box), newTax1099Box, "@AccountsPayable:New1099BoxValue", "@AccountsPayable:New1099BoxValueHelp");

        dialog.addGroup("@AccountsPayable:Update1099Transactions").columns(2);
        dialogDoUpdateTransaction1099 = dialog.addFieldValue(enumstr(NoYes), doUpdateTransaction1099, "@AccountsPayable:Update1099Transactions");
        dialogFromDate = dialog.addFieldValue(extendedtypestr(TransDate), fromDate, "@SYS24050");
        dialogToDate = dialog.addFieldValue(extendedtypestr(TransDate), toDate, "@SYS14656");
        dialogDoSetAll1099 = dialog.addFieldValue(enumstr(NoYes), doSetAll1099, "@SYS25976", "@SYS96624");
        dialogDoRecalcAmounts = dialog.addFieldValue(enumstr(NoYes), doRecalcAmounts, "@SYS117576", "@SYS117575");
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void postRun()
    {
        super();

        PreferredLocale locale = Global::currentUserLanguage();
        dialogFromDate.value(DateTimeUtil::getStartOfYearDate(locale, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        dialogToDate.value(DateTimeUtil::getEndOfYearDate(locale, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));

        dialogDoUpdateVendorBox.registerOverrideMethod(
            methodStr(FormCheckBoxControl, modified),
            methodStr(VendTax1099UpdateMultipleVendorsUIBuilder, dialogDoUpdateVendorBoxModified),
            this);

        dialogDoUpdateTransaction1099.registerOverrideMethod(
            methodStr(FormCheckBoxControl, modified),
            methodStr(VendTax1099UpdateMultipleVendorsUIBuilder, dialogUpdateTransaction1099Modified),
            this);

        dialogNewTax1099Box.registerOverrideMethod(
            methodStr(FormStringControl, validate),
            methodStr(VendTax1099UpdateMultipleVendorsUIBuilder, dialogUpdateTransaction1099Validate),
            this);

        dialogNewTax1099Box.registerOverrideMethod(
            methodStr(FormStringControl, lookup),
            methodStr(VendTax1099UpdateMultipleVendorsUIBuilder, dialogNewTax1099BoxLookup),
            this);

        dialogNewTax1099Box.enabled(false);
        dialogFromDate.enabled(false);
        dialogToDate.enabled(false);
        dialogDoSetAll1099.enabled(false);
        dialogDoRecalcAmounts.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public void getFromDialog()
    {
        super();

        contract = this.getContract();
        contract.parmDoUpdateVendorBox(dialogDoUpdateVendorBox.value());
        contract.parmNewTax1099Box(dialogNewTax1099Box.value());
        contract.parmDoUpdateTransaction1099(dialogDoUpdateTransaction1099.value());
        contract.parmFromDate(dialogFromDate.value());
        contract.parmToDate(dialogToDate.value());
        contract.parmDoSetAll1099(dialogDoSetAll1099.value());
        contract.parmDoRecalcAmounts(dialogDoRecalcAmounts.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogUpdateTransaction1099Modified</Name>
				<Source><![CDATA[
    private boolean dialogUpdateTransaction1099Modified(FormCheckBoxControl _formControl)
    {
        boolean isEnabled = dialogDoUpdateTransaction1099.value() == NoYes::Yes;

        dialogFromDate.enabled(isEnabled);
        dialogToDate.enabled(isEnabled);
        dialogDoSetAll1099.enabled(isEnabled);
        dialogDoRecalcAmounts.enabled(isEnabled);

        return _formControl.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogDoUpdateVendorBoxModified</Name>
				<Source><![CDATA[
    private boolean dialogDoUpdateVendorBoxModified(FormCheckBoxControl _formControl)
    {
        dialogNewTax1099Box.enabled(dialogDoUpdateVendorBox.value());

        return _formControl.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogUpdateTransaction1099Validate</Name>
				<Source><![CDATA[
    internal boolean dialogUpdateTransaction1099Validate(FormStringControl _control)
    {
        boolean ret = true;

        if (dialogNewTax1099Box.value() != '')
        {
            Tax1099Fields tax1099Fields;

            select firstonly RecId, Tax1099Type from tax1099Fields
                where tax1099Fields.Tax1099Box == dialogNewTax1099Box.value();

            if (tax1099Fields.RecId == 0 || tax1099Fields.Tax1099Type == Tax1099Type::F1099G || tax1099Fields.Tax1099Type == Tax1099Type::F1099S)
            {
                ret = checkFailed(strFmt("@SYS316757", tableStr(Tax1099Fields)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogNewTax1099BoxLookup</Name>
				<Source><![CDATA[
    private void dialogNewTax1099BoxLookup(FormControl _formControl)
    {
        Tax1099Fields::lookupTax1099Box(_formControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContract</Name>
				<Source><![CDATA[
    private VendTax1099UpdateMultipleVendorsContract getContract()
    {
        if (contract == null)
        {
            contract = this.dataContractObject() as VendTax1099UpdateMultipleVendorsContract;
        }

        return contract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>