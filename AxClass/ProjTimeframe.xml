<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTimeframe</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class provides base implementation of Availability view timeframe classes
/// </summary>
/// <remarks>
/// This class implements common logic across all implementations of the <c>ProjITimeframe</c>
/// </remarks>
abstract class ProjTimeframe implements ProjITimeframe
{
    #ProjAvailabilityViewConstants
    date _StartDate, _EndDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateDates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates start and end dates of the timeframe of the specified date
    /// </summary>
    /// <param name="dateInTimeframe">
    /// User-specified date
    /// </param>
    /// <remarks>
    /// Calculates start and end dates of a Day, Week or Month
    /// </remarks>
    public abstract void calculateDates(date dateInTimeframe)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIndention</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the Indentions for the timeframe
    /// </summary>
    /// <returns>
    /// String text indention
    /// </returns>
    /// <remarks>
    /// Used to set the indention of the Availability view cell contents
    /// </remarks>
    public abstract str getIndention()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the Availability view cell header labels
    /// </summary>
    /// <returns>
    /// String cell header text
    /// </returns>
    /// <remarks>
    /// Used to set Availability view column header labels
    /// </remarks>
    public abstract str getLabel()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the End date
    /// </summary>
    /// <param name="endDate">
    /// User-specified date
    /// </param>
    /// <returns>
    /// Date value used as End date of the timeframe
    /// </returns>
    /// <remarks>
    /// Gets or sets the End date of the timeframe
    /// </remarks>
    public date parmEndDate(date endDate = _EndDate)
    {
        _EndDate = endDate;
        return _EndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the Start date
    /// </summary>
    /// <param name="startDate">
    /// User-specified date
    /// </param>
    /// <returns>
    /// Date value used as Start date of the timeframe
    /// </returns>
    /// <remarks>
    /// Gets or sets the Start date of the timeframe
    /// </remarks>
    public date parmStartDate(date startDate = _StartDate)
    {
        _StartDate = startDate;
        return _StartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>ProjTimeframe</c> extensions
    /// </summary>
    /// <param name="availabilityViewTimeframe">
    /// Determines which extension to instantiate
    /// </param>
    /// <returns>
    /// Instance of an implementation of <c>ProjTimeframe</c>
    /// </returns>
    /// <remarks>
    /// This construct method may return instances of <c>ProjDayTimeframe</c>, <c>ProjWeekTimeframe</c> or <c>ProjMonthTimeframe</c>
    /// using the <c>ProjITimeframe</c> interface
    /// </remarks>
    public static ProjITimeframe construct(ProjAvailabilityViewTimeframe availabilityViewTimeframe)
    {
        ProjITimeframe timeframe;
        switch (availabilityViewTimeframe)
        {
            case ProjAvailabilityViewTimeframe::Week:
                timeframe = new ProjWeekTimeframe();
                break;

            case ProjAvailabilityViewTimeframe::Day:
                timeframe = new ProjDayTimeframe();
                break;

            case ProjAvailabilityViewTimeframe::Month:
                timeframe = new ProjMonthTimeframe();
                break;
        }

        return timeframe;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>