<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionDerivationRuleProj_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>ProjDimensionDerivationRule_Extension</c> is an extension for <c>DimensionDerivationRule</c> to handle project specific dimension derivation rules during postings.
/// </summary>
[ExtensionOf(classStr(DimensionDerivationRule))]
public final class DimensionDerivationRuleProj_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>useSourceDocumentAmountMatchDist</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method decides whether the source document matching should be used while fetching ledger dimensions for the posting.
    /// By default purchase order vendor invoice will use matching method and pickup dimension of the associated purch line posting.
    /// This method takes care of the case when purch line is associated with an item req for a non-stocked item in which we should not use matching 
    /// because project posting is done at the packing slip level of item requirement.
    /// </summary>
    /// <returns>true if matching method should be used for dimensions, false otherwise</returns>
    protected boolean useSourceDocumentAmountMatchDist()
    {
        boolean ret = next useSourceDocumentAmountMatchDist();
        if (ret && this.sourceDocumentLineItem is VendorInvoiceLineSourceDocLineItem)
        {
            VendorInvoiceLineSourceDocLineItem vendInvoiceSD = this.sourceDocumentLineItem as VendorInvoiceLineSourceDocLineItem;
            VendInvoiceLineMap vendInvoiceLineMap = vendInvoiceSD.parmVendInvoiceLineMap();

            if(!vendInvoiceLineMap.isNonPO())
            {
                PurchLine purchLine = vendInvoiceLineMap.purchLine();
                
                if(purchLine.ProjId && purchLine.InventRefTransId && !purchLine.isStocked())
                {
                    SalesLine salesLine = SalesLine::findInventTransId(purchLine.InventRefTransId);
                    if (salesLine && salesLine.SalesType == SalesType::ItemReq)
                    {
                        ret = false;
                    }
                }
            }

        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>