<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppServiceDecoratorRuleWorkLineListDisplayArea</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppServiceDecoratorRuleWorkLineListDisplayArea</c> class populates the DisplayArea and AttachedTo Attributes for the Work line list pattern.
/// </summary>
internal class WHSMobileAppServiceDecoratorRuleWorkLineListDisplayArea implements WHSIMobileAppServiceXMLDecoratorRule
{
    #WHSRF
    private const ExtendedTypeId LineNumExtendedType = extendedTypeNum(LineNum);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSMobileAppServiceDecoratorRuleWorkLineListDisplayArea construct()
    {
        return new WHSMobileAppServiceDecoratorRuleWorkLineListDisplayArea();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLastControl</Name>
				<Source><![CDATA[
    private boolean isLastControl(Map _controlMap)
    {
        return this.compareControlName(_controlMap, WHSMobileAppControlNames::RFPrev);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWorkLineListHeaderControl</Name>
				<Source><![CDATA[
    private boolean isWorkLineListHeaderControl(Map _controlMap)
    {
        return this.compareControlName(_controlMap, WHSWorkExecuteShowWorkLineListConstants::WorkLineList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLineNumGroupControl</Name>
				<Source><![CDATA[
    private boolean isLineNumGroupControl(Map _controlMap)
    {
        return _controlMap.lookup(#XMLControlInputType) == LineNumExtendedType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>compareControlName</Name>
				<Source><![CDATA[
    private boolean compareControlName(Map _controlMap, WHSMobileAppControlName _targetName)
    {
        return _controlMap.lookup(#XMLControlName) == _targetName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSubHeaderControls</Name>
				<Source><![CDATA[
    private boolean setSubHeaderControls(ListEnumerator _listEnum)
    {
        while (_listEnum.moveNext())
        {
            Map controlMap = _listEnum.current();
            controlMap.insert(#XMLControlDisplayArea, WHSMobileAppXMLDisplayArea::SubHeaderArea);
            
            if (this.isWorkLineListHeaderControl(controlMap))
            {
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstWorkLineGroupControl</Name>
				<Source><![CDATA[
    private boolean findFirstWorkLineGroupControl(ListEnumerator _listEnum)
    {
        while (_listEnum.moveNext())
        {
            Map controlMap = _listEnum.current();
            
            if (this.isLineNumGroupControl(controlMap))
            {
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>decorateBody</Name>
				<Source><![CDATA[
    private void decorateBody(ListEnumerator _listEnum)
    {
        str currentLineNum = '';
        
        do
        {
            Map controlMap = _listEnum.current();
            
            if (this.isLastControl(controlMap))
            {
                break;
            }
            if (this.isLineNumGroupControl(controlMap))
            {
                currentLineNum = controlMap.lookup(#XMLControlName);
            }

            controlMap.insert(#XMLControlAttachedTo, currentLineNum);
        }
        while (_listEnum.moveNext());
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to run the transformation.
    /// </summary>
    /// <param name = "_pageInfo">
    /// The <c>WHSMobileAppPageInfo</c> containing controls and information to carry out the transformation.
    /// </param>
    public void run(WHSMobileAppPageInfo _pageInfo)
    {
        ListEnumerator le = _pageInfo.parmControlsEnumerator();

        boolean workLineListHeaderFound = this.setSubHeaderControls(le);

        if (workLineListHeaderFound)
        {
            boolean workLineGroupControlFound = this.findFirstWorkLineGroupControl(le);

            if (workLineGroupControlFound)
            {
                this.decorateBody(le);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>