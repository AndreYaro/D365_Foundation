<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ServerInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class
ServerInteraction implements IServerInteraction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setSessionContext</Name>
				<Source><![CDATA[
    abstract public void setSessionContext(HierarchicalGridSessionContext sessionContext)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInteractionContext</Name>
				<Source><![CDATA[
    abstract public void setInteractionContext(IInteractionContext interactionContext)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    public CollectionDataContract getData(str _action)
    {
        ActionDataContract action = this.parseAction(_action);
        switch (action.parmName())
        {
            case "GetCurrentId":
                return this.getCurrentId();
            default :
                return this.executeDataRetrievalAction(this.parseAction(_action));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    public List save(str _actions)
    {
        List results = this.executeActions(this.parseActions(_actions));
        return results;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentId</Name>
				<Source><![CDATA[
    protected CollectionDataContract getCurrentId()
    {
        HierarchicalGridCurrentIdContract hGridId = HierarchicalGridCurrentIdContract::construct();
        hGridId.parmCurrentId(int2str(xGlobal::randomPositiveInt32()));

        List items = new List(Types::Class);
        items.addEnd(hGridId);

        CollectionDataContract dataCollection = CollectionDataContract::construct();
        dataCollection.parmItems(items);
        return dataCollection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseActions</Name>
				<Source><![CDATA[
    protected List parseActions(str _actions)
    {
        List                    actions;

        if (_actions)
        {
            actions = FormControlUtil::convertStrToCollection(className2Id(classstr(List)), _actions, Types::Class, classstr(ActionDataContract));
        }
        else
        {
            actions = new List(Types::Class);
        }

        return actions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseAction</Name>
				<Source><![CDATA[
    protected ActionDataContract parseAction(str _action)
    {
        ActionDataContract action;

        if (_action)
        {
            action = FormControlUtil::convertStrToObject(className2Id(classstr(ActionDataContract)), _action);
        }
        else
        {
            action  = ActionDataContract::construct();
        }

        return action;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeActions</Name>
				<Source><![CDATA[
    protected List executeActions(List _actions)
    {
        Enumerator              actionsEnumerator;
        ActionDataContract  action;
        List                    results;

        results = new List(Types::String);
        actionsEnumerator = _actions.getEnumerator();

        ttsbegin;
        while (actionsEnumerator.moveNext())
        {
            action = actionsEnumerator.current();
            results.addEnd(this.executeAction(action));
        }
        ttscommit;

        return results;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeAction</Name>
				<Source><![CDATA[
    abstract protected str executeAction(ActionDataContract _action)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeDataRetrievalAction</Name>
				<Source><![CDATA[
    abstract protected CollectionDataContract executeDataRetrievalAction(ActionDataContract _action)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>