<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventValueReportStorageBundleFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation;

[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
public final class InventValueReportStorageBundleFeature implements IFeatureMetadata, IFeatureLifecycle, IFeatureDependencies
{
    private static InventValueReportStorageBundleFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new InventValueReportStorageBundleFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static InventValueReportStorageBundleFeature instance()
    {
        return InventValueReportStorageBundleFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean isEnabled()
    {
        return Dynamics.AX.Application.FeatureStateProvider::isFeatureEnabled(InventValueReportStorageBundleFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str label()
    {
        return literalStr("@SCM:InventValueReportStorageBundle");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::CostManagement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str summary()
    {
        return literalStr("@SCM:InventValueReportStorageBundleFeatureSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAllFeatures</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public IFeature[] dependsOnAllFeatures()
    {
        var result = new IFeature[1]();
        result.SetValue(InventValueReportStorageFeature::instance(), 0);
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAnyFeature</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public IFeature[] dependsOnAnyFeature()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::PrivatePreview;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>