<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimCtrl_Frm_Lookup_TmpSysQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventDimCtrl_Frm_Lookup_TmpSysQuery extends InventDimCtrl_Frm_Lookup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>callerInventLocationFieldId</Name>
				<Source><![CDATA[
        public FieldId callerInventLocationFieldId()
    {
        return fieldNum(TmpSysQuery,RangeValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerInventLocationIdCursor</Name>
				<Source><![CDATA[
        public Common callerInventLocationIdCursor()
    {
        TmpSysQuery     tmpSysQuery;

        FormDataSource formDataSource = this.callerFormDatasource();
        if (! formDataSource)
        {
            return null;
        }

        if (formDataSource.table() == tableNum(TmpSysQuery))
        {
            for (tmpSysQuery = formDataSource.getFirst(false) as TmpSysQuery; tmpSysQuery; tmpSysQuery = formDataSource.getNext() as TmpSysQuery)
            {
                if (tmpSysQuery.Table_Id == tableNum(InventDim) &&
                    fieldExt2Id(tmpSysQuery.Field_Id) == fieldNum(InventDim,InventLocationId))
                {
                    if (tmpSysQuery.RangeValue && InventLocation::exist(tmpSysQuery.RangeValue))
                    {
                        return tmpSysQuery;
                    }
                }
            }
        }
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerInventSiteFieldId</Name>
				<Source><![CDATA[
        public FieldId callerInventSiteFieldId()
    {
        return fieldNum(TmpSysQuery,RangeValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerInventSiteIdCursor</Name>
				<Source><![CDATA[
        public Common callerInventSiteIdCursor()
    {
        TmpSysQuery     tmpSysQuery;

        FormDataSource formDataSource = this.callerFormDatasource();
        if (! formDataSource)
        {
            return null;
        }

        if (formDataSource.table() == tableNum(TmpSysQuery))
        {
            for (tmpSysQuery = formDataSource.getFirst(false) as TmpSysQuery; tmpSysQuery; tmpSysQuery = formDataSource.getNext() as TmpSysQuery)
            {
                if (tmpSysQuery.Table_Id == tableNum(InventDim) &&
                    fieldExt2Id(tmpSysQuery.Field_Id) == fieldNum(InventDim,InventSiteId))
                {
                    if (tmpSysQuery.RangeValue && InventSite::exist(tmpSysQuery.RangeValue))
                    {
                        return tmpSysQuery;
                    }
                }
            }
        }
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerWMSLocationFieldId</Name>
				<Source><![CDATA[
        public FieldId callerWMSLocationFieldId()
    {
        return fieldNum(TmpSysQuery,RangeValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerWMSLocationIdCursor</Name>
				<Source><![CDATA[
        public Common callerWMSLocationIdCursor()
    {
        TmpSysQuery         tmpSysQuery;
        InventLocationId    inventLocationId;
        Counter             i;

        FormDataSource formDataSource = this.callerFormDatasource();
        if (! formDataSource)
        {
            return null;
        }

        if (formDataSource.table() == tableNum(TmpSysQuery))
        {
            for (tmpSysQuery = formDataSource.getFirst(false) as TmpSysQuery; tmpSysQuery; tmpSysQuery = formDataSource.getNext() as TmpSysQuery)
            {
                if (tmpSysQuery.Table_Id == tableNum(InventDim) &&
                    fieldExt2Id(tmpSysQuery.Field_Id) == fieldNum(InventDim,InventLocationId))
                {
                    if (tmpSysQuery.RangeValue && InventLocation::exist(tmpSysQuery.RangeValue))
                    {
                        i++;
                        inventLocationId = tmpSysQuery.RangeValue;
                        if (i > 1)
                        {
                            return null;
                        }
                    }
                }
            }

            for (tmpSysQuery = formDataSource.getFirst(false) as TmpSysQuery; tmpSysQuery; tmpSysQuery = formDataSource.getNext() as TmpSysQuery)
            {
                if (tmpSysQuery.Table_Id == tableNum(InventDim) &&
                    fieldExt2Id(tmpSysQuery.Field_Id) == fieldNum(InventDim,wmsLocationId))
                {
                    if (tmpSysQuery.RangeValue)
                    {
                        if (inventLocationId && WMSLocation::exist(tmpSysQuery.RangeValue, inventLocationId))
                        {
                            return tmpSysQuery;
                        }

                        if (!inventLocationId && (select firstonly RecId from wmsLocation where wmsLocation.wmsLocationId == tmpSysQuery.RangeValue).RecId != 0)
                        {
                            return tmpSysQuery;
                        }
                    }
                }
            }
        }
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventDimCtrl_Frm_Lookup_TmpSysQuery construct()
    {
        return new InventDimCtrl_Frm_Lookup_TmpSysQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromFormSortField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and initializes an instance of this class to be used in forms.
    /// </summary>
    /// <param name="_formRun">
    ///    The form where controls are maintained.
    /// </param>
    /// <param name="_sortFieldId">
    ///    The field ID of the inventory dimension field to be used as sorting field.
    /// </param>
    /// <returns>
    ///    An instance of this class to be used in a form.
    /// </returns>
    public static InventDimCtrl_Frm_Lookup_TmpSysQuery newFromFormSortField(
        FormRun _formRun,
        FieldId _sortFieldId)
    {
        InventDimCtrl_Frm_Lookup_TmpSysQuery    inventDimCtrl = InventDimCtrl_Frm_Lookup_TmpSysQuery::construct();
        InventDimAxFormAdapter adapter = InventDimAxFormAdapter::newFromForm(_formRun);

        inventDimCtrl.parmCallingElement(adapter);
        inventDimCtrl.parmMainSortFieldId(_sortFieldId);
        inventDimCtrl.init();
        return inventDimCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
