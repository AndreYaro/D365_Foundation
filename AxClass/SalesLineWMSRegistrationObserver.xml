<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesLineWMSRegistrationObserver</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TradeWMSRegistrationObsSalesLine</c> class is a sales order specific implementation of the
/// <c>InventTransWMSRegistrationObserver</c> interface.
/// </summary>
class SalesLineWMSRegistrationObserver implements InventTransWMSRegistrationObserver
{
    SalesLine salesLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>notifyArrivalRegistered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes sales order specific code as part of the product registration process.
    /// </summary>
    /// <param name="_qty">
    /// An <c>InventQty</c> type.
    /// </param>
    /// <param name="_cwQty">
    /// A catch weight quantity.
    /// </param>
    /// <param name="_inventDim">
    /// An <c>InventDim</c> table buffer.
    /// </param>
    public void notifyArrivalRegistered (InventQty _qty
        , PdsCWInventQty _cwQty
        , InventDim _inventDim)
    {
        if (salesLine.returnItem())
        {
            salesLine.returnLineArrivalUpdate(_qty
                , _cwQty
                , _inventDim);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesLine</Name>
				<Source><![CDATA[
        public SalesLine parmSalesLine(SalesLine _salesLine = salesLine)
    {
        salesLine = _salesLine;
        return salesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static SalesLineWMSRegistrationObserver construct()
    {
        return new SalesLineWMSRegistrationObserver();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newfromSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and instance and initiates an object of the <c>TradeWMSRegistrationObsSalesLine</c> class
    /// based on a table buffer.
    /// </summary>
    /// <param name="_salesLine">
    /// A buffer of the <c>SalesLine</c> table.
    /// </param>
    /// <returns>
    /// An object of the <c>TradeWMSRegistrationObsSalesLine</c> class.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method is called without an existing sales Line record.
    /// </exception>
    public static SalesLineWMSRegistrationObserver newfromSalesLine(SalesLine _salesLine)
    {
        if (!_salesLine)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        SalesLineWMSRegistrationObserver salesLineWMSRegistrationObserver = SalesLineWMSRegistrationObserver::construct();
        salesLineWMSRegistrationObserver.parmSalesLine(_salesLine);
        return salesLineWMSRegistrationObserver;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
