<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetOperationType_AcquisitionAdj</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetOperationType_AcquisitionAdj extends RAssetOperationType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBePosted</Name>
				<Source><![CDATA[
        public boolean canBePosted()
    {
        return rAssetStatusType.allowAcquisitionAdj(rAssetStandardId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
        public boolean check()
    {
        boolean ret;
        ;

        ret = super();
        ret = ret && this.checkNetBookValue();
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>needCheck</Name>
				<Source><![CDATA[
        /// <summary>
    /// determines whether the journal line should be checked before posting
    /// </summary>
    /// <param name="_assetToFromRecId_RU">
    /// a relation to another journal line
    /// </param>
    /// <returns>
    /// a boolean sign, true - the check is needed.
    /// </returns>
    public boolean needCheck(RAssetRelationRecId _assetToFromRecId_RU)
    {
        LedgerJournalTrans_RAsset   ledgerJournalTrans_RAsset;
        LedgerJournalTrans          ledgerJournalTransDepr,
                                    ledgerJournalTransAcq = LedgerJournalTrans::findRecId(_assetToFromRecId_RU, false);

        select firstonly RecId from ledgerJournalTransDepr
            where ledgerJournalTransDepr.TransDate    == ledgerJournalTransAcq.TransDate
               && ledgerJournalTransDepr.Voucher      == ledgerJournalTransAcq.Voucher
               && ledgerJournalTransDepr.JournalNum   == ledgerJournalTransAcq.JournalNum
        exists join ledgerJournalTrans_RAsset
            where ledgerJournalTrans_RAsset.RefRecId  == ledgerJournalTransDepr.RecId
               && ledgerJournalTrans_RAsset.TransType == RAssetTransType::DepreciationAdj;

        if (_assetToFromRecId_RU &&
            LedgerJournalTrans_RAsset::find(ledgerJournalTransAcq.RecId).TransType == RAssetTransType::PartialTakeDown &&
            ! ledgerJournalTransDepr.RecId)
        {
            return true;
        }

        return ! _assetToFromRecId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rAssetTransType</Name>
				<Source><![CDATA[
        public RAssetTransType rAssetTransType()
    {
        return RAssetTransType::AcquisitionAdj;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>