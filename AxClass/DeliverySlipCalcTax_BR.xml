<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DeliverySlipCalcTax_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Calculates delivery slip taxes extends TradeCalcTax class.
/// </summary>
class  DeliverySlipCalcTax_BR extends TradeCalcTax
{
    Common                  source;
    SalesLine               salesLine;

    boolean                 update;
    DeliverySlipTotals_BR   deliverySlipTotals;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to determine the tax.
    /// </summary>
    /// <param name="_salesTotals">
    /// TradeTotalsBase value is set.
    /// </param>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    TaxAmountCur calcTax(TradeTotalsBase _salesTotals)
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to determine the currency code.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    CurrencyCode currencyCode()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>endDisc</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to determine the discount.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    DiscAmount  endDisc()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to determine the exchange rates.
    /// </summary>
    /// <param name="_date">
    /// Date value is set.
    /// </param>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    CustExchRate exchRate(date _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRateSecondary</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to determine the secondary exchange rates.
    /// </summary>
    /// <param name="_date">
    /// Date value is set.
    /// </param>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    ExchrateSecondary exchRateSecondary(date _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sales order line.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void  getSalesLine()
    {
        select salesLine
            index hint TransIdIdx
            where salesLine.InventTransId == this.transTransId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCursor</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes.
    /// </summary>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void  initCursor()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines invoice date for the sales document.
    /// </summary>
    /// <returns>
    /// Returns invoice date of the sales document.
    /// </returns>
    TransDate  invoiceDate()
    {
        return DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxIncluded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether tax is included in the item price for the sales document.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    /// <remarks>
    /// This method is overridden in child classes to determine whether tax is included for the various
    /// sales documents.
    /// </remarks>
    public boolean isTaxIncluded()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Intialize the instance of a new <c>DeliverySlipCalcTax_BR</c> object.
    /// </summary>
    /// <param name="_source">
    /// The record for which totals will be calculated.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void  new(Common  _source)
    {
        source  = _source;
        update  = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the next line record.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    Common  nextLine()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>recID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the source Record Id.
    /// </summary>
    /// <returns>
    /// The value of the source Record Id.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    recId  recID()
    {
        return source.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTableRecID</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the sales order record id.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    recId  salesTableRecID()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTableTableID</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the sales order table id.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    tableId  salesTableTableID()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to set the tax.
    /// </summary>
    /// <param name="taxCode">
    /// TaxCode value is set.
    /// </param>
    /// <param name="taxAmount">
    /// TaxAmount value is set.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void  setTax(TaxCode       taxCode,
                 TaxAmount     taxAmount)
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the source table Id.
    /// </summary>
    /// <returns>
    /// The value of the source table Id.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    tableId  tableId()
    {
        return source.TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the tax value.
    /// </summary>
    /// <param name="_tax">
    /// Tax is set.
    /// </param>
    /// <returns>
    /// The tax value.
    /// </returns>
    Tax tax(Tax _tax = tax)
    {
        tax = _tax;
        return tax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxationOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the default taxation origin from the invent table
    /// </summary>
    /// <returns>
    /// The taxation origin for the item of the sales line
    /// </returns>
    /// <remarks>
    /// This method may be overriden on the subclasses
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FITaxationOrigin_BR taxationOrigin()
    {
        return InventTable::find(salesLine.ItemId).TaxationOrigin_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the line amount.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    AmountCur  transLineAmount()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLineAmountInclTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the line amount inclusive of tax.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    AmountCur  transLineAmountInclTax()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transPcsPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the price per piece.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    PriceCur transPcsPrice()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the quantity.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    SalesQty    transQty()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>RecId</c> field of the current order line.
    /// </summary>
    /// <returns>
    /// The value of the <c>RecId</c> field of the current order line.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    recId  transRecId()
    {
        return salesLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the value of the <c>TableId</c> field of the current order line.
    /// </summary>
    /// <returns>
    /// The value of the <c>TableId</c> field of the current order line.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    tableId  transTableId()
    {
        return salesLine.TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the tax group.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    TaxGroup    transTaxGroup()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the tax item group.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    TaxItemGroup   transTaxItemGroup()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the transaction id.
    /// </summary>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    TradeInventTransId  transTransId()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>triangulation</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is overridden in child classes to get the euro triangulation date in sales record.
    /// </summary>
    /// <param name="_date">
    /// Date value is set.
    /// </param>
    /// <returns>
    /// Return error if its not implemented in its sub classes.
    /// </returns>
    /// <remarks>
    /// This method is implemented in its sub classes.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    EUROTriangulation triangulation(date _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>useAndConsumption_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns if the sales is for use and consumption
    /// </summary>
    /// <returns>Returns false as default</returns>
    /// <remarks>This method is implemented in it sub classes</remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean useAndConsumption_BR()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSalesTaxAdjustments</Name>
				<Source><![CDATA[

    /// <summary>
    /// Indicates whether to use sales tax adjustments.
    /// </summary>
    /// <returns>
    ///  true if sales tax adjustments should be used; otherwise, false.
    /// </returns>
    /// <remarks>
    /// Returns always false.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean useSalesTaxAdjustments()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>DeliverySlipCalcTax__DeliverySlip_BR</c> class.
    /// </summary>
    /// <param name="_source">
    /// Common is set
    /// </param>
    /// <param name="_specQty">
    /// SalesUpdate quantity value is set.
    /// </param>
    /// <param name="_sumBy">
    /// AccountOrder value is set.
    /// </param>
    /// <param name="_parmId">
    /// ParmId value is set.
    /// </param>
    /// <param name="_sumSalesId">
    /// SalesId value is set.
    /// </param>
    /// <param name="_documentStatus">
    /// DocumentStatus value is set.
    /// </param>
    /// <returns>
    ///  An instance of the <c>DeliverySlipCalcTax__DeliverySlip_BR</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static DeliverySlipCalcTax_BR  construct(Common          _source,
                                             SalesUpdate     _specQty        = SalesUpdate::All,
                                             AccountOrder    _sumBy          = AccountOrder::None,
                                             ParmId          _parmId         = '',
                                             SalesId         _sumSalesId     = '',
                                             DocumentStatus  _documentStatus = DocumentStatus::None)
    {
        switch (_source.TableId)
        {
            case tableNum(SalesTable)               :   return DeliverySlipCalcTax__DeliverySlip_BR::construct(_source, _specQty, _sumBy, _parmId, _sumSalesId, _documentStatus);
            case tableNum(SalesParmTable)           :   return DeliverySlipCalcTax__DeliverySlip_BR::construct(_source, _specQty, _sumBy, _parmId, _sumSalesId, _documentStatus);

            default : throw error(strFmt("@SYS19306",funcName()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>