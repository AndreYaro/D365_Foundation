<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepProfileChange_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrades data in <c>AssetDepProfileChange_JP</c> table. Populate temporary table pre-sync and upgrade the
/// data post-sync because we need to pick up the TableId's pre-sync but we can't upgrade data until post-sync since
///  we need the AssetDepBook upgrade to be completed.
/// </summary>
class ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepProfileChange_JP extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncUpgradeAssetDepProfileChangeJP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates <c>AssetDepProfileChange_JP</c> table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBook), methodStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBook, preSyncUpgradeAssetDepBook)),
     UpgradeScriptTableAttribute(tableStr(AssetDepProfileChange_JP), false, true, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpgradeAssetDepProfileChangeJP()
    {
        // Drop the AssetDepProfileChange_JPUpgradeTmp table if it exists.
        this.executeSqlStatement(this.getSQLDropAssetDepProfileChangeJPUpgradeTmp());

        // Create temp upgrade table.
        this.executeSqlStatement(this.getSQLCreateAssetDepProfileChangeJPUpgradeTmp());

        // Move AssetDepProfileChange_JP rows to temp table.
        this.executeSqlStatement(this.getSQLInsertAssetDepProfileChangeJPUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpgradeAssetDepProfileChangeJP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>AssetDepProfileChange_JP</c> data from the temporary table into AssetDepProfileChange_JP table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBook), methodStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBook, postSyncUpgradeAssetDepBook)),
     UpgradeScriptTableAttribute(tableStr(AssetDepProfileChange_JP), false, true, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpgradeAssetDepProfileChangeJP()
    {
        this.executeSqlStatement(this.getSQLUpdateAssetDepProfileChangeJP());

        // drop temporary upgrade table
        this.executeSqlStatement(this.getSQLDropAssetDepProfileChangeJPUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDropAssetDepProfileChangeJPUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLDropAssetDepProfileChangeJPUpgradeTmp()
    {
        str sqlStatement = @"
        IF OBJECT_ID ( 'dbo.ASSETDEPPROFILECHANGE_JPUPGRADETMP', 'U') IS NOT NULL
            DROP TABLE ASSETDEPPROFILECHANGE_JPUPGRADETMP";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLCreateAssetDepProfileChangeJPUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLCreateAssetDepProfileChangeJPUpgradeTmp()
    {
        str sqlStatement = @"
        IF OBJECT_ID ( 'dbo.ASSETDEPPROFILECHANGE_JPUPGRADETMP', 'U') IS NULL
            CREATE TABLE [dbo].[ASSETDEPPROFILECHANGE_JPUPGRADETMP](
                [DEPRECIATIONBOOKID] [nvarchar](10) NOT NULL,
                [ASSETID] [nvarchar](20) NOT NULL,
                [SOURCERECID] [bigint] NOT NULL,
                [SOURCETABLEID] [int] NOT NULL,
                [DATAAREAID] [nvarchar](4) NOT NULL,
                [PARTITION] [bigint] NOT NULL,
                [RECID] [bigint] NOT NULL,
             CONSTRAINT [I_DEPPROFILECHANGEJPRECID] PRIMARY KEY CLUSTERED
            (
                [RECID] ASC
            )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
            ) ON [PRIMARY]
            ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetDepProfileChangeJPUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetDepProfileChangeJPUpgradeTmp()
    {
        str sqlStatement = @"
            INSERT INTO [dbo].[ASSETDEPPROFILECHANGE_JPUPGRADETMP]
                       ([SOURCERECID]
                       ,[SOURCETABLEID]
                       ,[DATAAREAID]
                       ,[PARTITION]
                       ,[RECID]
                       ,[DEPRECIATIONBOOKID]
                       ,[ASSETID])
                SELECT
                      [ASSETDEPPROFILECHANGE_JP].[SOURCERECID]
                      ,[ASSETDEPPROFILECHANGE_JP].[SOURCETABLEID]
                      ,[ASSETDEPPROFILECHANGE_JP].[DATAAREAID]
                      ,[ASSETDEPPROFILECHANGE_JP].[PARTITION]
                      ,[ASSETDEPPROFILECHANGE_JP].[RECID]
                      ,[ASSETDEPBOOK].[DEPRECIATIONBOOKID]
                      ,[ASSETDEPBOOK].[ASSETID]
                  FROM [dbo].[ASSETDEPPROFILECHANGE_JP]
                  JOIN ASSETDEPBOOK ON ASSETDEPBOOK.RECID = [ASSETDEPPROFILECHANGE_JP].[SOURCERECID]
                    AND [ASSETDEPBOOK].[DATAAREAID] = [ASSETDEPPROFILECHANGE_JP].[DATAAREAID]
                    AND [ASSETDEPBOOK].[PARTITION] = [ASSETDEPPROFILECHANGE_JP].[PARTITION]
                JOIN [dbo].[SQLDICTIONARY] ON [SQLDICTIONARY].[SQLNAME] = 'ASSETDEPBOOK'
                    AND [SQLDICTIONARY].[FIELDID] = 0
                  WHERE [ASSETDEPPROFILECHANGE_JP].[SOURCETABLEID] = [SQLDICTIONARY].[TABLEID]
            ";
        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLUpdateAssetDepProfileChangeJP</Name>
				<Source><![CDATA[
    private str getSQLUpdateAssetDepProfileChangeJP()
    {
        str sqlStatement = strFmt(@"
            UPDATE [dbo].[ASSETDEPPROFILECHANGE_JP]
                SET [SOURCERECID] = [ASSETBOOK].RECID,
                    [SOURCETABLEID] = %1
                FROM [dbo].[ASSETDEPPROFILECHANGE_JP]
                JOIN [dbo].[ASSETDEPPROFILECHANGE_JPUPGRADETMP] ON [ASSETDEPPROFILECHANGE_JPUPGRADETMP].RECID = [ASSETDEPPROFILECHANGE_JP].RECID
                    AND [ASSETDEPPROFILECHANGE_JP].[SOURCETABLEID] = [ASSETDEPPROFILECHANGE_JPUPGRADETMP].[SOURCETABLEID]
                    AND [ASSETDEPPROFILECHANGE_JP].[DATAAREAID] = [ASSETDEPPROFILECHANGE_JPUPGRADETMP].[DATAAREAID]
                    AND [ASSETDEPPROFILECHANGE_JP].[PARTITION] = [ASSETDEPPROFILECHANGE_JPUPGRADETMP].[PARTITION]
                JOIN [dbo].[ASSETBOOK] ON [ASSETBOOK].BOOKID = [ASSETDEPPROFILECHANGE_JPUPGRADETMP].[DEPRECIATIONBOOKID]
                    AND [ASSETBOOK].[ASSETID] = [ASSETDEPPROFILECHANGE_JPUPGRADETMP].[ASSETID]
                    AND [ASSETBOOK].[DATAAREAID] = [ASSETDEPPROFILECHANGE_JPUPGRADETMP].[DATAAREAID]
                    AND [ASSETBOOK].[PARTITION] = [ASSETDEPPROFILECHANGE_JPUPGRADETMP].[PARTITION]
            ", tableNum(AssetBook));

        return sqlStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>