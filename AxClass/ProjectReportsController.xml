<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>ProjectReportsController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>ProjectReportsController</c> class is the controller class for project statement reports.
/// </summary>
public class ProjectReportsController extends SrsReportRunController implements BatchRetryable
{
    Str strReportName;

    #define.ReportNameWIPEmpl('ProjWIPEmpl.Report')
    #define.ReportNameWIPEmpl2Column('ProjWIPEmpl2Column.Report')
    #define.ReportNameWIPEmpl2Prd('ProjWIPEmpl2Prd.Report')

    #define.ReportNameWIPCateg2Column('ProjWIPCateg2Column.Report')
    #define.ReportNameWIPCateg('ProjWIPCateg.Report')
    #define.ReportNameWIPCateg2Prd('ProjWIPCateg2Prd.Report')

    #define.ReportNameWIPProj2Column('ProjWIPProj2Column.Report')
    #define.ReportNameWIPProj('ProjWIPProj.Report')
    #define.ReportNameWIPProj2Prd('ProjWIPProj2Prd.Report')

    #define.RptNameProjConsumCateg('ProjConsumCateg.Report')
    #define.RptNameProjConsumCateg2Column('ProjConsumCateg2Column.Report')
    #define.RptNameProjConsumCateg2Prd('ProjConsumCateg2Prd.Report')

    #define.RptNameProjConsumEmpl('ProjConsumEmpl.Report')
    #define.RptNameProjConsumEmpl2Column('ProjConsumEmpl2Column.Report')
    #define.RptNameProjConsumEmpl2Prd('ProjConsumEmpl2Prd.Report')

    #define.RptNameProjConsumProj('ProjConsumProj.Report')
    #define.RptNameProjConsumProj2Column('ProjConsumProj2Column.Report')
    #define.RptNameProjConsumProj2Prd('ProjConsumProj2Prd.Report')

    #define.RptNameHourRateCateg('ProjHourRateCateg.Report')
    #define.RptNameHourRateEmpl('ProjHourRateEmpl.Report')
    #define.RptNameHourRateProj('ProjHourRateProj.Report')

    #define.RptNameOnAccProj('ProjOnAccProj.Report')
    #define.RptNameOnAccProj2Column('ProjOnAccProj2Column.Report')
    #define.RptNameOnAccProj2ColumnPeriod('ProjOnAccProj2Prd.Report')

    #define.RptNamePayRollCateg('ProjPayRollCateg.Report')
    #define.RptNamePayRollCateg2Columnn('ProjPayRollCateg2Column.Report')
    #define.RptNamePayRollCateg2ColumnPrd('ProjPayRollCateg2Prd.Report')

    #define.RptNamePayRollEmpl('ProjPayRollEmpl.Report')
    #define.RptNamePayRollEmpl2Columnn('ProjPayRollEmpl2Column.Report')
    #define.RptNamePayRollEmpl2ColumnPrd('ProjPayRollEmpl2Prd.Report')

    #define.RptNamePayRollProj('ProjPayRollProj.Report')
    #define.RptNamePayRollProj2Columnn('ProjPayRollProj2Column.Report')
    #define.RptNamePayRollProj2ColumnPrd('ProjPayRollProj2Prd.Report')

    #define.RptNameProfitLossCateg('ProjProfitLossCateg.Report')
    #define.RptNameProfitLossCateg2Columnn('ProjProfitLossCateg2Column.Report')
    #define.RptNameProfitLossCateg2ColumnPrd('ProjProfitLossCateg2Prd.Report')

    #define.RptNameProfitLossEmpl('ProjProfitLossEmpl.Report')
    #define.RptNameProfitLossEmpl2Columnn('ProjProfitLossEmpl2Column.Report')
    #define.RptNameProfitLossEmpl2ColumnPrd('ProjProfitLossEmpl2Prd.Report')

    #define.RptNameProfitLossProj('ProjProfitLossProj.Report')
    #define.RptNameProfitLossProj2Columnn('ProjProfitLossProj2Column.Report')
    #define.RptNameProfitLossProj2ColumnPrd('ProjProfitLossProj2Prd.Report')
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>prePromptModifyContract</Name>
        <Source><![CDATA[
        protected void prePromptModifyContract()
    {
        Query query;

        query = this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey());
        this.setTitle(query);
    }

]]></Source>
      </Method>
      <Method>
        <Name>setConsumptionReportName</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the report parameters based on the caller.
    /// </summary>
    /// <returns>
    /// The name of the report.
    /// </returns>
    public str setConsumptionReportName()
    {
        switch (this.parmArgs().menuItemName())
        {
            case menuitemoutputstr(ProjListProjConsumptionCategory):
                strReportName = #RptNameProjConsumCateg;
                break;

            case menuitemoutputstr(ProjListProjConsumptionCategory2Column):
                strReportName = #RptNameProjConsumCateg2Column;
                break;

            case menuitemoutputstr(ProjListProjConsumptionCategory2CoPeriod):
                strReportName = #RptNameProjConsumCateg2Prd;
                break;

            case menuitemoutputstr(ProjListProjConsumptionEmplItem):
                strReportName = #RptNameProjConsumEmpl;
                break;

            case menuitemoutputstr(ProjListProjConsumptionEmplItem2Column):
                strReportName = #RptNameProjConsumEmpl2Column;
                break;

            case menuitemoutputstr(ProjListProjConsumptionEmplItem2CoPeriod):
                strReportName = #RptNameProjConsumEmpl2Prd;
                break;

            case menuitemoutputstr(ProjListProjConsumptionProj):
                strReportName = #RptNameProjConsumProj;
                break;

            case menuitemoutputstr(ProjListProjConsumptionProj2Column):
                strReportName = #RptNameProjConsumProj2Column;
                break;

            case menuitemoutputstr(ProjListProjConsumptionProj2ColumnPeriod):
                strReportName = #RptNameProjConsumProj2Prd;
                break;
        }

        return strReportName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>setOtherReportName</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the report parameters based on the caller.
    /// </summary>
    /// <returns>
    /// The name of the report.
    /// </returns>
    public str setOtherReportName()
    {
        switch (this.parmArgs().menuItemName())
        {
            case menuitemoutputstr(ProjListProjHourRateCategory):
                strReportName = #RptNameHourRateCateg;
                break;

            case menuitemoutputstr(ProjListProjHourRateEmplItem):
                strReportName = #RptNameHourRateEmpl;
                break;

            case menuitemoutputstr(ProjListProjHourRateProj):
                strReportName = #RptNameHourRateProj;
                break;

            case menuitemoutputstr(ProjListProjOnAccountProj):
                strReportName = #RptNameOnAccProj;
                break;

            case menuitemoutputstr(ProjListProjOnAccountProj2Column):
                strReportName = #RptNameOnAccProj2Column;
                break;

            case menuitemoutputstr(ProjListProjOnAccountProj2ColumnPeriod):
                strReportName = #RptNameOnAccProj2ColumnPeriod;
                break;
        }

        return strReportName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>setPayRollReportName</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the report parameters based on the caller.
    /// </summary>
    /// <returns>
    /// The name of the report.
    /// </returns>
    public str setPayRollReportName()
    {
        switch (this.parmArgs().menuItemName())
        {
            case menuitemoutputstr(ProjListProjPayRollCategory):
                strReportName = #RptNamePayRollCateg;
                break;

            case menuitemoutputstr(ProjListProjPayRollCategory2Column):
                strReportName = #RptNamePayRollCateg2Columnn;
                break;

            case menuitemoutputstr(ProjListProjPayRollCategory2ColumnPeriod):
                strReportName = #RptNamePayRollCateg2ColumnPrd;
                break;

            case menuitemoutputstr(ProjListProjPayRollEmplItem):
                strReportName = #RptNamePayRollEmpl;
                break;

            case menuitemoutputstr(ProjListProjPayRollEmplItem2Column):
                strReportName = #RptNamePayRollEmpl2Columnn;
                break;

            case menuitemoutputstr(ProjListProjPayRollEmplItem2ColumnPeriod):
                strReportName = #RptNamePayRollEmpl2ColumnPrd;
                break;

            case menuitemoutputstr(ProjListProjPayRollProj):
                strReportName = #RptNamePayRollProj;
                break;

            case menuitemoutputstr(ProjListProjPayRollProj2Column):
                strReportName = #RptNamePayRollProj2Columnn;
                break;

            case menuitemoutputstr(ProjListProjPayRollProj2ColumnPeriod):
                strReportName = #RptNamePayRollProj2ColumnPrd;
                break;
        }
        return strReportName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>setProfitLossReportName</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the report parameters based on the caller.
    /// </summary>
    /// <returns>
    /// The name of the report.
    /// </returns>
    public str setProfitLossReportName()
    {
        switch (this.parmArgs().menuItemName())
        {
            case menuitemoutputstr(ProjListProjProfitLossCategory):
                strReportName = #RptNameProfitLossCateg ;
                break;

            case menuitemoutputstr(ProjListProjProfitLossCategory2Column):
                strReportName = #RptNameProfitLossCateg2Columnn ;
                break;

            case menuitemoutputstr(ProjListProjProfitLossCategory2ColPeriod):
                strReportName = #RptNameProfitLossCateg2ColumnPrd ;
                break;

            case menuitemoutputstr(ProjListProjProfitLossEmplItem):
                strReportName = #RptNameProfitLossEmpl ;
                break;

            case menuitemoutputstr(ProjListProjProfitLossEmplItem2Column):
                strReportName = #RptNameProfitLossEmpl2Columnn ;
                break;

            case menuitemoutputstr(ProjListProjProfitLossEmplItem2ColPeriod):
                strReportName = #RptNameProfitLossEmpl2ColumnPrd ;
                break;

            case menuitemoutputstr(ProjListProjProfitLossProj):
                strReportName = #RptNameProfitLossProj ;
                break;

            case menuitemoutputstr(ProjListProjProfitLossProj2Column):
                strReportName = #RptNameProfitLossProj2Columnn ;
                break;

            case menuitemoutputstr(ProjListProjProfitLossProj2ColumnPeriod):
                strReportName = #RptNameProfitLossProj2ColumnPrd ;
                break;
        }

        return strReportName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>setReportName</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the report parameters based on the caller.
    /// </summary>
    /// <returns>
    /// The name of the report.
    /// </returns>
    public str setReportName()
    {
        str tempStrReportName;

        tempStrReportName = this.setWIPReportName();
        tempStrReportName = this.setProfitLossReportName();
        tempStrReportName = this.setPayRollReportName();
        tempStrReportName = this.setConsumptionReportName();
        tempStrReportName = this.setOtherReportName();

        return tempStrReportName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>setTitle</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the report parameters based on the caller.
    /// </summary>
    /// <param name="_query">
    /// The query that is used by the report.
    /// </param>
    public void setTitle(Query _query)
    {
        MenuFunction    menuItem;
        str60           menuItemLabel;

        menuitem        = new MenuFunction(this.parmArgs().menuItemName(), this.parmArgs().menuItemType());
        menuItemLabel   = any2Str(menuitem.label());

        this.parmDialogCaption(menuItemLabel);
        _query.title(menuItemLabel);
    }

]]></Source>
      </Method>
      <Method>
        <Name>setWIPReportName</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the report parameters based on the caller.
    /// </summary>
    /// <returns>
    /// The name of the report.
    /// </returns>
    public str setWIPReportName()
    {
        switch (this.parmArgs().menuItemName())
        {
            case menuitemoutputstr(ProjListProjWIPEmplItem2Column):
                strReportName = #ReportNameWIPEmpl2Column ;
                break;

            case menuitemoutputstr(ProjListProjWIPEmplItem):
                strReportName = #ReportNameWIPEmpl ;
                break;

            case menuitemoutputstr(ProjListProjWIPEmplItem2ColumnPeriod):
                strReportName = #ReportNameWIPEmpl2Prd ;
                break;

            case menuitemoutputstr(ProjListProjWIPCategory):
                strReportName = #ReportNameWIPCateg ;
                break;

            case menuitemoutputstr(ProjListProjWIPCategory2Column):
                strReportName = #ReportNameWIPCateg2Column ;
                break;

            case menuitemoutputstr(ProjListProjWIPCategory2ColumnPeriod):
                strReportName = #ReportNameWIPCateg2Prd ;
                break;

            case menuitemoutputstr(ProjListProjWIPProj):
                strReportName = #ReportNameWIPProj ;
                break;

            case menuitemoutputstr(ProjListProjWIPProj2Column):
                strReportName = #ReportNameWIPProj2Column ;
                break;

            case menuitemoutputstr(ProjListProjWIPProj2ColumnPeriod):
                strReportName = #ReportNameWIPProj2Prd ;
                break;
        }

        return strReportName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
        public static void main(Args _args)
    {
        ProjectReportsController controller = new ProjectReportsController();

        controller.parmArgs(_args);
        controller.parmReportName(controller.setReportName());
        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>