<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdSlipDPgetTaxWithholdTransTotalAmountsV2Flight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When <c>TaxWithholdSlipDPgetTaxWithholdTransTotalAmountsV2Flight</c> is enabled, total withholding
/// tax amounts for "Withholding tax payment" and "Vendor monthly CIS statement" reports are calculated
/// using the new <c>getTaxWithholdTransTotalAmountsV2</c> method which is based on amounts from
/// <c>VendSettlement</c> table instead of <c>VendInvoiceJour</c> and <c>VendInvoiceTrans</c> tables.
/// </summary>
/// <remarks>
/// The flight is controlled by entering the following in the flighting service (ECS):
/// "TaxWithholdSlipDPgetTaxWithholdTransTotalAmountsV2Flight" to enable. This is only necessary when isEnabledByDefault() returns false.
/// "TaxWithholdSlipDPgetTaxWithholdTransTotalAmountsV2Flight_KillSwitch" to disable. This overrules any enablement.
/// </remarks>
internal final class TaxWithholdSlipDPgetTaxWithholdTransTotalAmountsV2Flight extends Flight
{
    private static TaxWithholdSlipDPgetTaxWithholdTransTotalAmountsV2Flight singleton = new TaxWithholdSlipDPgetTaxWithholdTransTotalAmountsV2Flight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static TaxWithholdSlipDPgetTaxWithholdTransTotalAmountsV2Flight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>