<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementDimensionEntryControllerEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  Dimension entry control event handler for Agreement.
/// </summary>
public static class AgreementDimensionEntryControllerEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postHandler_onCompanyChange</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Observes the event that fires after calling the <c>onCompanyChange</c> method.
    /// </summary>
    /// <param name="_args">
    /// A <c>XppPrePostArgs</c> that encapsulates the arguments passed in call of the <c>onCompanyChange</c> method.
    /// </param>
    [PostHandlerFor(classStr(LedgerDimensionEntryController), methodStr(LedgerDimensionEntryController, onCompanyChange))]
    public static void postHandler_onCompanyChange(XppPrePostArgs _args)
    {
        LedgerDimensionEntryController ledgerDimensionEntryController = _args.getThis();

        boolean returnValue = _args.getReturnValue();

        returnValue = AgreementDimensionEntryControllerEventHandler::setAgreementRestriction_RU(ledgerDimensionEntryController) || returnValue;

        _args.setReturnValue(returnValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAgreementRestriction_RU</Name>
				<Source><![CDATA[
    private static boolean setAgreementRestriction_RU(LedgerDimensionEntryController _ledgerDimensionEntryController)
    {
        boolean ret;

        if (_ledgerDimensionEntryController.parmDimensionsToAllowEdit())
        {
            DimensionAttributeRecId agreementDimAttrRecId = AgreementHeaderExt_RU::getAgreementDimensionAttribute();
            if (agreementDimAttrRecId)
            {
                FormDataSource dataSource = _ledgerDimensionEntryController.parmDataSource();
                if (datasource)
                {
                    if (dataSource.table() == tableNum(SalesLine) ||
                        dataSource.table() == tableNum(PurchLine) ||
                        dataSource.table() == tableNum(CustInvoiceLine) ||
                        dataSource.table() == tableNum(LedgerJournalTrans) ||
                        dataSource.table() == tableNum(RTax25ProfitLedgerSetup) ||
                        dataSource.table() == tableNum(BudgetAllocationTermDetail))
                    {
                        ret = false;
                    }
                    else
                    {
                        DimensionAttributeSetStorage editableDimensionSetStorage =
                                DimensionAttributeSetStorage::find(_ledgerDimensionEntryController.parmDimensionsToAllowEdit());
            
                        if (editableDimensionSetStorage.elements())
                        {
                            editableDimensionSetStorage.removeDimensionAttribute(agreementDimAttrRecId);
                            DimensionEnumeration editableDimensionSet = editableDimensionSetStorage.save();

                            if (editableDimensionSet != _ledgerDimensionEntryController.parmDimensionsToAllowEdit())
                            {
                                ret = true;
                                _ledgerDimensionEntryController.parmDimensionsToAllowEdit(editableDimensionSet);
                            }
                        }
                    }
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postHandler_onValueSetLoad</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Observes the event that fires after calling the <c>onValueSetLoad</c> method.
    /// </summary>
    /// <param name="_args">
    /// A <c>XppPrePostArgs</c> that encapsulates the arguments passed in call of the <c>onValueSetLoad</c> method.
    /// </param>
    [PostHandlerFor(classStr(InventSiteTmpLedgerBaseLinkedDimensionEntryController), methodStr(InventSiteTmpLedgerBaseLinkedDimensionEntryController, onValueSetLoad))]
    public static void postHandler_onValueSetLoad(XppPrePostArgs _args)
    {
        LedgerDimensionEntryController ledgerDimensionEntryController = _args.getThis();

        boolean returnValue = _args.getReturnValue();

        returnValue = AgreementDimensionEntryControllerEventHandler::setAgreementRestriction_RU(ledgerDimensionEntryController) || returnValue;

        _args.setReturnValue(returnValue);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>