<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Commission_Project</Name>
	<SourceCode>
		<Declaration><![CDATA[
class       Commission_Project
extends     Commission
{
    ProjProposalJour        projProposalJour;
    ProjInvoiceItem         projInvoiceItem;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCommissionAmount</Name>
				<Source><![CDATA[
    protected void addCommissionAmount(AmountCur   _commissionAmountCur)
    {
        projInvoiceItem.CommissAmountCur += _commissionAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>commissionLedgerDimension</Name>
				<Source><![CDATA[
    protected LedgerDimensionDefaultAccount commissionLedgerDimension()
    {
        return commissionLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>commissionOffsetLedgerDimension</Name>
				<Source><![CDATA[
    protected LedgerDimensionDefaultAccount commissionOffsetLedgerDimension()
    {
        return commissionOffsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public boolean init()
    {
        commissionTrans.initFromProjInvoiceItem(projInvoiceItem);

        endFactor           = ((100 - SalesTable::find(projInvoiceItem.SalesId).DiscPercent) / 100);
        itemGroup           = InventTable::find(projInvoiceItem.ItemId).CommissionGroupId;
        custGroup           = SalesTable::find(projInvoiceItem.SalesId).CommissionGroup;

        orderAccount        = SalesTable::find(projInvoiceItem.SalesId).CustAccount;
        languageId          = projProposalJour.LanguageId;
        triangulation       = projProposalJour.Triangulation;
        exchRate            = projProposalJour.ExchRate;
        exchrateSecondary   = projProposalJour.ExchrateSecondary;

        salesGroup          = projInvoiceItem.SalesGroup;
        qty                 = projInvoiceItem.Qty;
        salesPrice          = projInvoiceItem.salesPrice();
        priceUnit           = projInvoiceItem.PriceUnit;
        markup              = projInvoiceItem.SalesMarkup;
        lineAmount          = projInvoiceItem.lineAmountDetailSum();
        costValue           = -projInvoiceItem.inventCostAmount();
        endDisc             = InventTableModule::find(projInvoiceItem.ItemId, ModuleInventPurchSales::Sales).EndDisc;
        commissionLedgerDimension = projInvoiceItem.commissionLedgerDimension();
        commissionOffsetLedgerDimension = projInvoiceItem.commissionOffsetLedgerDimension();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCommissionCalculated</Name>
				<Source><![CDATA[
    protected CommissCalc isCommissionCalculated()
    {
        return projInvoiceItem.CommissCalc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceJour</Name>
				<Source><![CDATA[
    public CustVendInvoiceJour parmInvoiceJour(ProjProposalJour _projProposalJour = projProposalJour)
    {
        projProposalJour = _projProposalJour;
        return projProposalJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceTrans</Name>
				<Source><![CDATA[
    public CustVendInvoiceTrans parmInvoiceTrans(ProjInvoiceItem _projInvoiceItem = projInvoiceItem)
    {
        projInvoiceItem = _projInvoiceItem;
        return projInvoiceItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCommissionCalc</Name>
				<Source><![CDATA[
    protected void updateCommissionCalc()
    {
        projInvoiceItem.CommissCalc = NoYes::Yes;
        projInvoiceItem.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static Commission_Project construct()
    {
        return new Commission_Project();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCommision</Name>
				<Source><![CDATA[
    public static Commission   newCommision(LedgerVoucher     _ledgerVoucher,
                                            ProjProposalJour  _projProposalJour,
                                            ProjInvoiceItem   _projInvoiceItem)
    {
        Commission_Project  commission_Project;

        commission_Project = Commission_Project::construct();
        commission_Project.parmLedgerVoucher(_ledgerVoucher);
        commission_Project.parmInvoiceJour(_projProposalJour);
        commission_Project.parmInvoiceTrans(_projInvoiceItem);
        commission_Project.init();
        return commission_Project;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>