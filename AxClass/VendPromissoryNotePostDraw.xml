<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPromissoryNotePostDraw</Name>
	<SourceCode>
		<Declaration><![CDATA[
class VendPromissoryNotePostDraw extends VendPromissoryNotePost
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postNextStep</Name>
				<Source><![CDATA[
        protected void postNextStep(CustVendVoucher _vendVoucher, CustVendTrans _settlingTrans)
    {
        VendVoucher             vendVoucher = _vendVoucher;
        VendTrans               settlingTrans = _settlingTrans;
        VendTrans               nextStepTrans;
        VendPromissoryNoteJour  vendPromissoryNoteJour;
        VendPromissoryNoteTrans vendPromissoryNoteTrans;
        ;

        nextStepTrans.data(settlingTrans);

        vendVoucher.parmSettlementType(SettlementType::None);
        vendVoucher.parmPostingProfile(CustVendNegInstPost::getPostingProfile(ledgerJournalType,
                                                                              ledgerJournalTrans.BankRemittanceType));

        // Create a transaction for the new note
        nextStepTrans.AmountCur = -settlingTrans.AmountCur;
        nextStepTrans.AmountMST = -settlingTrans.AmountMST;
        vendVoucher.parmAmountCur(nextStepTrans.AmountCur);
        vendVoucher.post(ledgerVoucher, nextStepTrans);

        vendPromissoryNoteJour = VendPromissoryNoteJour::find(ledgerJournalTrans.NegInstId, true);
        vendPromissoryNoteTrans = this.insertNegInstTrans(vendPromissoryNoteJour, nextStepTrans);

        this.setNegInstFieldOnTrans(nextStepTrans,
                                    vendPromissoryNoteTrans.PromissoryNoteId,
                                    vendPromissoryNoteTrans.Status,
                                    vendPromissoryNoteTrans.SeqNum);

        nextStepTrans.update();

        this.setNegInstFieldOnTrans(settlingTrans,
                                    vendPromissoryNoteTrans.PromissoryNoteId,
                                    vendPromissoryNoteTrans.Status,
                                    vendPromissoryNoteTrans.SeqNum);

        settlingTrans.update();

        this.createPromissoryNoteInvoice(vendPromissoryNoteJour, settlingTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>seqNum</Name>
				<Source><![CDATA[
        protected CustVendNegInstSeqNum seqNum(CustBillOfExchangeID _custBillOfExchangeID)
    {
        return 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
        protected CustVendNegInstStatus status()
    {
        return CustVendNegInstStatus::Drawn;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>