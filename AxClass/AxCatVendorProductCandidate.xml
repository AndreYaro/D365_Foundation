<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCatVendorProductCandidate</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxCatVendorProductCandidate extends AxInternalBase
{
    CatVendorProductCandidate catVendorProductCandidate;
    NoYesId                   isDeleteAction;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>catVendorProductCandidate</Name>
				<Source><![CDATA[
    public CatVendorProductCandidate catVendorProductCandidate(CatVendorProductCandidate _catVendorProductCandidate = catVendorProductCandidate)
    {
        if (!prmisdefault(_catVendorProductCandidate))
        {
            this.setCurrentRecordFromExternal(_catVendorProductCandidate);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _catVendorProductCandidate = catVendorProductCandidate)
    {
        if (!prmisdefault(_catVendorProductCandidate))
        {
            super(_catVendorProductCandidate);
            catVendorProductCandidate = _catVendorProductCandidate;
        }
        else
        {
            super();
        }

        return catVendorProductCandidate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    protected Common emptyRecord()
    {
        CatVendorProductCandidate localCatVendorProductCandidate;
        return localCatVendorProductCandidate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodstr(AxCatVendorProductCandidate,parmStatus));
        this.setParmMethodAsNotMandatory(methodstr(AxCatVendorProductCandidate,parmActionType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActionType</Name>
				<Source><![CDATA[
    public CatProductActionType parmActionType(CatProductActionType _actionType = CatProductActionType::Add)
    {
        if (!prmisdefault(_actionType))
        {
            this.setField(fieldnum(CatVendorProductCandidate, ActionType), _actionType);
        }

        return catVendorProductCandidate.ActionType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBarCode</Name>
				<Source><![CDATA[
    public ItemBarCode parmBarCode(ItemBarCode _barCode = '')
    {
        if (!prmisdefault(_barCode))
        {
            this.setField(fieldNum(CatVendorProductCandidate, BarCode), _barCode);
        }

        return catVendorProductCandidate.BarCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCatalogMaintenanceRequest</Name>
				<Source><![CDATA[
    public RefRecId parmCatalogMaintenanceRequest(RefRecId _catalogMaintenanceRequest = 0)
    {
        if (!prmisdefault(_catalogMaintenanceRequest))
        {
            this.setField(fieldnum(CatVendorProductCandidate, CatalogMaintenanceRequest), _catalogMaintenanceRequest);
        }

        return catVendorProductCandidate.CatalogMaintenanceRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategory</Name>
				<Source><![CDATA[
    public RefRecId parmCategory(RefRecId _category = 0)
    {
        if (!prmisdefault(_category))
        {
            this.setField(fieldnum(CatVendorProductCandidate, Category), _category);
        }

        return catVendorProductCandidate.Category;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmColorName</Name>
				<Source><![CDATA[
    public EcoResColorName parmColorName(EcoResColorName _colorName = '')
    {
        if (!prmisdefault(_colorName))
        {
            this.setField(fieldNum(CatVendorProductCandidate, ColorName), _colorName);
        }

        return catVendorProductCandidate.ColorName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfigurationName</Name>
				<Source><![CDATA[
    public EcoResConfigurationName parmConfigurationName(EcoResConfigurationName _configurationName = '')
    {
        if (!prmisdefault(_configurationName))
        {
            this.setField(fieldNum(CatVendorProductCandidate, ConfigurationName), _configurationName);
        }

        return catVendorProductCandidate.ConfigurationName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionGroupName</Name>
				<Source><![CDATA[
    public EcoResProductDimensionGroupName parmDimensionGroupName(EcoResProductDimensionGroupName _dimensionGroupName = '')
    {
        if (!prmisdefault(_dimensionGroupName))
        {
            this.setField(fieldNum(CatVendorProductCandidate, DimensionGroupName), _dimensionGroupName);
        }

        return catVendorProductCandidate.DimensionGroupName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsDeleteAction</Name>
				<Source><![CDATA[
    public NoYesId parmIsDeleteAction(NoYesId _isDeleteAction = NoYes::No)
    {
        if (!prmisdefault(_isDeleteAction))
        {
            isDeleteAction = _isDeleteAction;
        }

        return isDeleteAction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductSubtype</Name>
				<Source><![CDATA[
    public EcoResProductSubtype parmProductSubtype(EcoResProductSubtype _productSubtype = EcoResProductSubtype::Product)
    {
        if (!prmisdefault(_productSubtype))
        {
            this.setField(fieldNum(CatVendorProductCandidate, ProductSubtype), _productSubtype);
        }

        return catVendorProductCandidate.ProductSubtype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSearchName</Name>
				<Source><![CDATA[
    public EcoResProductSearchName parmSearchName(EcoResProductSearchName _vendorProductName = '')
    {
        if (!prmisdefault(_vendorProductName))
        {
            this.setField(fieldnum(CatVendorProductCandidate, SearchName), _vendorProductName);
        }

        return catVendorProductCandidate.SearchName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSizeName</Name>
				<Source><![CDATA[
    public EcoResSizeName parmSizeName(EcoResSizeName _sizeName = '')
    {
        if (!prmisdefault(_sizeName))
        {
            this.setField(fieldNum(CatVendorProductCandidate, SizeName), _sizeName);
        }

        return catVendorProductCandidate.SizeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatus</Name>
				<Source><![CDATA[
    public CatVendorProductStatus parmStatus(CatVendorProductStatus _status = CatVendorProductStatus::NotSubmitted)
    {
        if (!prmisdefault(_status))
        {
            this.setField(fieldnum(CatVendorProductCandidate, Status), _status);
        }

        return catVendorProductCandidate.Status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStyleName</Name>
				<Source><![CDATA[
    public EcoResStyleName parmStyleName(EcoResStyleName _styleName = '')
    {
        if (!prmisdefault(_styleName))
        {
            this.setField(fieldNum(CatVendorProductCandidate, StyleName), _styleName);
        }

        return catVendorProductCandidate.StyleName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendorProductCode</Name>
				<Source><![CDATA[
    public EcoResProductDisplayProductNumber parmVendorProductCode(EcoResProductDisplayProductNumber _vendorProductCode = '')
    {
        if (!prmisdefault(_vendorProductCode))
        {
            this.setField(fieldnum(CatVendorProductCandidate, VendorProductCode), _vendorProductCode);
        }

        return catVendorProductCandidate.VendorProductCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setActionType</Name>
				<Source><![CDATA[
    protected void setActionType()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidate, ActionType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCatalogMaintenanceRequest</Name>
				<Source><![CDATA[
    protected void setCatalogMaintenanceRequest()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidate, CatalogMaintenanceRequest)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCategory</Name>
				<Source><![CDATA[
    protected void setCategory()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidate, Category)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSearchName</Name>
				<Source><![CDATA[
    protected void setSearchName()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidate, SearchName)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatus</Name>
				<Source><![CDATA[
    protected void setStatus()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidate, Status)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setActionType();
        this.setCatalogMaintenanceRequest();
        this.setVendorProductCode();
        this.setCategory();
        this.setStatus();
        this.setSearchName();
        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendorProductCode</Name>
				<Source><![CDATA[
    protected void setVendorProductCode()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidate, VendorProductCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxCatVendorProductCandidate construct()
    {
        return new AxCatVendorProductCandidate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCatVendorProductCandidate</Name>
				<Source><![CDATA[
    public static AxCatVendorProductCandidate newCatVendorProductCandidate(CatVendorProductCandidate _catVendorProductCandidate)
    {
        AxCatVendorProductCandidate axCatVendorProductCandidate = AxCatVendorProductCandidate::construct();
        axCatVendorProductCandidate.catVendorProductCandidate(_catVendorProductCandidate);

        return axCatVendorProductCandidate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>