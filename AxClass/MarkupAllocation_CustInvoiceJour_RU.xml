<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupAllocation_CustInvoiceJour_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
[MarkupAllocationTableNameFactoryAttribute(tableStr(CustInvoiceJour))]
public class MarkupAllocation_CustInvoiceJour_RU extends MarkupAllocation
{
    CustInvoiceJour custInvoiceJour;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>custInvoiceJour</Name>
				<Source><![CDATA[
    CustInvoiceJour custInvoiceJour()
    {
        return source;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>MarkupAllocation</c> form.
    /// </summary>
    /// <returns>
    ///    An initialized <c>FormRun</c> object.
    /// </returns>
    Object  dialog()
    {
        Args            parameters = new Args();
        FormRun         markUpAllocation;

        parameters.name(formstr(MarkUpAllocation_CustInvoiceTrans));
        parameters.caller(this);
        parameters.record(source);
        markUpAllocation = classfactory.formRunClass(parameters);
        markUpAllocation.init();
        markUpAllocation.run();
        markUpAllocation.wait();

        if (markUpAllocation.closedOk())
        {
            return markUpAllocation;
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMarkupTransFromLine</Name>
				<Source><![CDATA[
    protected void initMarkupTransFromLine()
    {
        markupTrans.initFromCustInvoiceJour_RU(custInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValues</Name>
				<Source><![CDATA[
    protected void initValues()
    {
        this.parmInterCompanyDirectDelivery(false);
        custInvoiceJour = source;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates query for markup allocation
    /// </summary>
    /// <returns>
    ///     Query for markup allocation
    /// </returns>
    public QueryRun queryBuild()
    {
        return new QueryRun(querystr(CustInvoiceJour));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGet</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets next record from query for markup allocation
    /// </summary>
    /// <param name="transact">
    ///     Query to take data from
    /// </param>
    /// <returns>
    ///     Next <c>CustInvoiceJour</c> record from query for markup allocation
    /// </returns>
    public Common queryGet(QueryRun transact)
    {
        custInvoiceJour = transact.get(tableNum(CustInvoiceJour));

        return custInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void  run(Object _callerDataSource = null)
    {
        ttsbegin;

        while select forupdate markupTransAllocate
            where markupTransAllocate.TransRecId    == source.RecId
               && markupTransAllocate.TransTableId  == source.TableId
               && ! markupTransAllocate.Voucher
        {
            if (this.validateTrans())
            {
                markupTransAllocate.TransDate = postingDate;
                markupTransAllocate.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
    void setParameters(MarkupAllocateAfter   _allocateAfter,
                       MarkupAllocateOn      _allocateOn,
                       DlvDate               _postingDate,
                       NoYes                 _storno,
                       boolean               _allocateInventoried)
    {
        allocateAfter = _allocateAfter;
        allocateOn    = _allocateOn;
        postingDate   = _postingDate;
        storno        = _storno;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTrans</Name>
				<Source><![CDATA[
    boolean  validateTrans()
    {
        boolean  ok;

        ok = super();

        if (ok)
            ok = markupTransAllocate.checkMarkupCodeAdjustment(MarkupModuleType::Cust);

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static MarkupAllocation_CustInvoiceJour_RU construct()
    {
        return new MarkupAllocation_CustInvoiceJour_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>