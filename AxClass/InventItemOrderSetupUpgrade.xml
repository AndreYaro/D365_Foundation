<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemOrderSetupUpgrade</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Ensures that data in the default order settings tables are correct.
/// </summary>
public class InventItemOrderSetupUpgrade
{
    const int defaultSeqNum = 10;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    private void run()
    {
        InventItemInventSetup inventSetup;
        InventItemPurchSetup  purchSetup;
        InventItemSalesSetup  salesSetup;
        InventDim             inventDim;

        #localmacro.upgradeTable
            %1.skipDataMethods(true);
            %1.skipEvents(true);

            update_recordset %1
                setting Sequence = defaultSeqNum,
                        OverrideDefaultStorageDimensions = true
                exists join inventDim
                    where %1.Sequence == 0
                       && %1.inventDimId == inventDim.inventDimId
                       && inventDim.InventSiteId != '';
        #endmacro

        ttsbegin;

        new SkipAOSValidationPermission().assert();

        #upgradeTable(inventSetup);
        #upgradeTable(purchSetup);
        #upgradeTable(salesSetup);
        
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static InventItemOrderSetupUpgrade construct()
    {
        return new InventItemOrderSetupUpgrade();
    }

]]></Source>
			</Method>
			<Method>
				<Name>upgradeData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the data upgrade.
    /// </summary>
    public static void upgradeData()
    {
        InventItemOrderSetupUpgrade inventItemOrderSetupUpgrade = InventItemOrderSetupUpgrade::construct();
        InventItemOrderSetupUpgrade.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>