<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirRelationshipTypeProspectiveVendorContactInitializer</Name>
	<SourceCode>
		<Declaration><![CDATA[
[System.ComponentModel.Composition.ExportMetadata(enumstr(DirSystemRelationshipType), enumLiteralStr(DirSystemRelationshipType, ProspectiveVendorContact)),
System.ComponentModel.Composition.ExportAttribute(identifierstr(Dynamics.AX.Application.DirRelationshipTypeInitializer))]
public class DirRelationshipTypeProspectiveVendorContactInitializer extends DirRelationshipTypeInitializer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromSystemRelationshipType</Name>
				<Source><![CDATA[
    public void initFromSystemRelationshipType(
        DirRelationshipTypeTable _dirRelationshipTypeTable,
        DirSystemRelationshipType _systemType)
    {
        _dirRelationshipTypeTable.ParentPartyType = DirPartyType::Organization;
        _dirRelationshipTypeTable.ChildPartyType = DirPartyType::Person;

        // Has prospective vendor contact person
        _dirRelationshipTypeTable.ParentChildName = this.getRelationshipName(_systemType, _dirRelationshipTypeTable.ParentPartyType, _dirRelationshipTypeTable.ChildPartyType, DirRelationshipView::ParentToChild);

        // Prospective vendor contact person of
        _dirRelationshipTypeTable.ChildParentName = this.getRelationshipName(_systemType, _dirRelationshipTypeTable.ParentPartyType, _dirRelationshipTypeTable.ChildPartyType, DirRelationshipView::ChildToParent);

        _dirRelationshipTypeTable.IsSymmetric = DirRelationshipTypeTable::isRelationshipSymmetric(_dirRelationshipTypeTable.ParentChildName, _dirRelationshipTypeTable.ChildParentName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRelationshipName</Name>
				<Source><![CDATA[
    public Name getRelationshipName(
        DirSystemRelationshipType _dirSystemRelationshipType,
        DirPartyType _parentPartyType,
        DirPartyType _childPartyType,
        DirRelationshipView _relationshipView)
    {
        LabelId relationshipLabelId = literalStr("@SYS104682");

        if (_parentPartyType == DirPartyType::Organization &&
                    _childPartyType == DirPartyType::Person)
        {
            if (_relationshipView == DirRelationshipView::ChildToParent)
            {
                relationshipLabelId = literalStr("@SYS341837");
            }
            else if (_relationshipView == DirRelationshipView::ParentToChild)
            {
                relationshipLabelId = literalStr("@SYS341836");
            }
        }

        Name relationshipName = SysLabel::labelId2String(relationshipLabelId, DirDataPopulation::getLanguage());

        return relationshipName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>