<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransReorgPaymSchedSplit_NumOfPayment</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>CustVendTransReorgPaymSchedSplit_AmountByPayment</c> class splits the payment schedule.
/// </summary>
[ExportAttribute(identifierStr(Dynamics.AX.Application.CustVendTransReorgPaymSchedSplit)),
ExportMetadata(enumStr(PaymSchedBy), enumLiteralStr(PaymSchedBy, NumOfPayment))]
internal final class CustVendTransReorgPaymSchedSplit_NumOfPayment extends CustVendTransReorgPaymSchedSplit
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>doRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new <c>TmpCustVendTransReorg</c> table records based on the number of payments (fixed quantity).
    /// </summary>
    protected void doRun()
    {
        AmountCur remainAmountCur = this.getRemainAmountCur();
        PaymSched paymSched = this.getPaymSched();
        Futures futures = Futures::construct(this.getTransDate(), paymSched.QtyUnit, paymSched.PeriodUnit);

        tmpCustVendTransReorg.AmountCur = CurrencyExchangeHelper::amount(abs(this.getAmountCur()) / paymSched.NumOfPayment, this.getCurrencyCode());

        if (tmpCustVendTransReorg.AmountCur < paymSched.LowestAmount)
        {
            tmpCustVendTransReorg.AmountCur = paymSched.LowestAmount;
        }

        tmpCustVendTransReorg.CustVendTransPct = tmpCustVendTransReorg.AmountCur / abs(this.getAmountCur()) * 100;

        while (remainAmountCur != 0.0 && paymSched.NumOfPayment != 0)
        {
            paymSched.NumOfPayment--;

            if (paymSched.NumOfPayment == 0)
            {
                tmpCustVendTransReorg.AmountCur = abs(remainAmountCur);
                tmpCustVendTransReorg.CustVendTransPct = tmpCustVendTransReorg.AmountCur / this.getAmountCur() * 100;
            }

            remainAmountCur -= tmpCustVendTransReorg.AmountCur;
            tmpCustVendTransReorg.DueDate = futures.next();
            tmpCustVendTransReorg.AmountCur = abs(tmpCustVendTransReorg.AmountCur);
            tmpCustVendTransReorg.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>