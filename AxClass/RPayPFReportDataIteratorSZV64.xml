<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayPFReportDataIteratorSZV64</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RPayPFReportDataIteratorSZV64 extends RPayPFReportDataIteratorSZV6
{
    KeySum  monthFundData;
    Counter monthFundConIterator;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public boolean find(container _value)
    {
        boolean ret;

        if (fundIterator)
        {
            ret = fundIterator.find(_value);
        }
        else if (conIterator)
        {
            ret = confind(seniorityData, _value);
        }
        else if (monthFundConIterator)
        {
            monthFundConIterator = monthFundData.key2Index_W(_value);

            ret = monthFundConIterator != 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>more</Name>
				<Source><![CDATA[
        public boolean more()
    {
        boolean ret;

        if (fundIterator)
        {
            ret = fundIterator.more();
        }
        else if (conIterator)
        {
            ret = conIterator && (conIterator <= conlen(seniorityData));
        }
        else if (monthFundConIterator)
        {
            ret = monthFundConIterator > 0 && monthFundConIterator <= monthFundData.numOfTrans();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNext</Name>
				<Source><![CDATA[
        public void moveNext()
    {
        if (fundIterator)
        {
            fundIterator.next();
        }
        else if (conIterator)
        {
            ++conIterator;
        }
        else if (monthFundConIterator)
        {
            if (monthFundConIterator && monthFundConIterator <= monthFundData.numOfTrans())
            {
                ++monthFundConIterator;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFundData</Name>
				<Source><![CDATA[
        protected void setFundData(Map _fundData)
    {
        if (conlen(seniorityData) == 0 && monthFundData.numOfTrans() == 0)
        {
            fundIterator = new MapIterator(_fundData);
        }
        else
        {
            throw Error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMonthFundData</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void setMonthFundData(KeySum _monthFundCon)
    {
        if (!fundIterator && conlen(seniorityData) == 0)
        {
            monthFundData           = _monthFundCon;
            monthFundConIterator    = _monthFundCon.numOfTrans() != 0 ? 1 : 0;
        }
        else
        {
            throw Error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSeniorityData</Name>
				<Source><![CDATA[
        protected void setSeniorityData(container _seniorityData)
    {
        if (!fundIterator && monthFundData.numOfTrans() == 0)
        {
            seniorityData = _seniorityData;
            conIterator   = conlen(seniorityData) ? 1 : 0;
        }
        else
        {
            throw Error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>value</Name>
				<Source><![CDATA[
        public container value()
    {
        container ret;
        container tmpValue;

        if (fundIterator)
        {
            ret = [fundIterator.key(), fundIterator.value()];
        }
        else if (conIterator)
        {
            ret = conpeek(seniorityData, conIterator);
        }
        else if (monthFundConIterator)
        {
            if (monthFundConIterator <= monthFundData.numOfTrans())
            {
                tmpValue = monthFundData.index2Data(monthFundConIterator);

                ret = tmpValue;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAsMonthFund</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static RPayPFReportDataIteratorSZV64 createAsMonthFund(KeySum _monthFundCon)
    {
        RPayPFReportDataIteratorSZV64    iterator;

        iterator = new RPayPFReportDataIteratorSZV64();
        iterator.setMonthFundData(_monthFundCon);

        return iterator;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>