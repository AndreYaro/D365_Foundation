<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccPolicyCustFreeInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AccPolicyCustFreeInvoice</c> class has the rules that mandate the accounting internal
///    controls that govern the classification of the financial consequences of the free text invoice
///    business events.
/// </summary>
[
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CashSaleOfProduct)),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CreditSaleOfProduct)),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, ReturnOfProduct))
]
class AccPolicyCustFreeInvoice extends AccountingPolicy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>determineDocumentRecordsActual</Name>
				<Source><![CDATA[
    protected boolean determineDocumentRecordsActual()
    {
        boolean ret;

        ret = (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && LedgerParameters::find().JournalizingDefinitionEnableValue == NoYes::Yes);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineIsAccountingRequired</Name>
				<Source><![CDATA[
    protected boolean determineIsAccountingRequired()
    {
        boolean ret;
        CustInvoiceLineSourceDocLineItem custInvoiceLineSourceDocLineItem;

        if (sourceDocumentLineItem 
            && sourceDocumentLineItem.parmSourceDocumentLine().SourceRelationType == tableNum(TaxDocCompLineSourceDocLine))
        {
            ret = false;
        }
        else if (BrazilParameters::isEnabled())
        {
            custInvoiceLineSourceDocLineItem = sourceDocumentLineItem as CustInvoiceLineSourceDocLineItem;

            if (custInvoiceLineSourceDocLineItem)
            {
                ret = custInvoiceLineSourceDocLineItem.createCustTrans_BR();
            }
            else
            {
                ret = super();
            }
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineIsDistributionRequired</Name>
				<Source><![CDATA[
    protected boolean determineIsDistributionRequired()
    {
        boolean ret;

        if (sourceDocumentLineItem 
            && sourceDocumentLineItem.parmSourceDocumentLine().SourceRelationType == tableNum(TaxDocCompLineSourceDocLine))
        {
            ret = false;
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingRequired</Name>
				<Source><![CDATA[
    public boolean parmAccountingRequired()
    {
        boolean ret;

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentRecordsActual</Name>
				<Source><![CDATA[
    public boolean parmDocumentRecordsActual()
    {
        boolean ret;

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>