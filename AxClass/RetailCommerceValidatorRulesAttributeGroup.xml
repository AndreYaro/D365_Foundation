<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCommerceValidatorRulesAttributeGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCommerceValidatorRulesAttributeGroup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate entity type list.
    /// </summary>
    /// <returns>The map containing all entity types and their descriptions.</returns>
    public static Map getEntityType()
    {
        Map entityList = new Map(Types::String,Types::Container);

        entityList.insert("@Retail:RetailCommerceValidatorAttributeGroupEntityId", [RetailCommerceValidatorEntityFunction::Functional, tableNum(EcoResAttributeGroup), classStr(RetailCommerceValidatorRulesAttributeGroup)]);

        return entityList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRulesList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate rule list.
    /// </summary>
    /// <returns>The map containing all rules and rule related properties.</returns>
    public static Map getRulesList()
    {
        Map rulesList = new Map(Types::String,Types::Container);

        // Validates attribute group display order.
        rulesList.insert("@Retail:RetailCommerceValidatorAttribGroupRu001", [
            "@Retail:RetailCommerceValidatorAttributeGroupEntityId",
            0,
            RetailCommerceValidatorResultStatus::Passed,
            "@Retail:RetailCommerceValidatorAttribGroupRu001Description",
            'validateAttributeGroupDisplayorder',
            formStr(RetailCategory),
            NoYes::Yes, // EntityPartitionRequired
            NoYes::No // AutomatedRunApplicable
        ]);

        // Validates attribute group translation.
        rulesList.insert("@Retail:RetailCommerceValidatorAttribGroupRu002", [
            "@Retail:RetailCommerceValidatorAttributeGroupEntityId",
            0,
            RetailCommerceValidatorResultStatus::Passed,
            "@Retail:RetailCommerceValidatorAttribGroupRu002Description",
            'validateAttributeGroupTranslationMissing',
            formStr(EcoResAttributeGroup),
            NoYes::Yes, // EntityPartitionRequired
            NoYes::No // AutomatedRunApplicable
        ]);

        return rulesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get number of entities of the Entity type for a given validation
    /// </summary>
    /// <param name = "_validationId">The validation Id.</param>
    /// <returns>The number of entities in scope for the validation.</returns>
    public static int64 getEntityCount(RetailCommerceValidatorId _validationId)
    {
        RetailCommerceValidatorWorkChannelCategoryHierarchies  retailCommerceValidatorWorkChannelCategoryHierarchies;
        EcoResCategoryAttributeGroupAttrView  ecoResCategoryAttributeGroupAttrView;
        EcoResAttributeGroup ecoResAttributeGroup;
        int64 counter;
            
        while select recid from ecoResAttributeGroup
            join AttributeGroup from ecoResCategoryAttributeGroupAttrView
            group by AttributeGroup
                where ecoResAttributeGroup.RecId == ecoResCategoryAttributeGroupAttrView.AttributeGroup
                join retailCommerceValidatorWorkChannelCategoryHierarchies
                    where ecoResCategoryAttributeGroupAttrView.CategoryHierarchy == retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId
                        && retailCommerceValidatorWorkChannelCategoryHierarchies.ValidationId == _validationId
        {
            counter++;
        }

        return counter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAttributeGroupDisplayorder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rule --> AttribGroup-Ru-001: Attribute group display order is missing.
    /// Validates Attribute group display order.
    /// </summary>
    /// <param name = "_validatorTest"> The <c> RetailCommerceValidatorTests </c> table buffer.</param>
    /// <returns>A container consists of log status and count of errors.</returns>
    internal static container validateAttributeGroupDisplayorder(RetailCommerceValidatorTests _validatorTest)
    {
        RetailCommerceValidatorWorkChannelCategoryHierarchies  retailCommerceValidatorWorkChannelCategoryHierarchies;
        EcoResCategoryAttributeGroupAttrView  ecoResCategoryAttributeGroupAttrView;
        EcoResAttributeGroupAttribute   ecoResAttributeGroupAttribute;
        EcoResAttribute  ecoResAttribute;
        int resultsCounter = 0;

        while select CategoryHierarchyRecId from retailCommerceValidatorWorkChannelCategoryHierarchies
            where retailCommerceValidatorWorkChannelCategoryHierarchies.ValidationId == _validatorTest.ValidationId &&
                  retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId >= _validatorTest.RangeStartRecId &&
                  retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId <= _validatorTest.RangeEndRecId
         join AttributeGroup,Attribute,Category from ecoResCategoryAttributeGroupAttrView
            group by AttributeGroup,Category
            where ecoResCategoryAttributeGroupAttrView.CategoryHierarchy == retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId &&
                  !ecoResCategoryAttributeGroupAttrView.AttributeGroupDisplayOrder
         exists join ecoResAttributeGroupAttribute
            where ecoResAttributeGroupAttribute.AttributeGroup == ecoResCategoryAttributeGroupAttrView.AttributeGroup &&
                ecoResAttributeGroupAttribute.Attribute == ecoResCategoryAttributeGroupAttrView.Attribute
         exists join ecoResAttribute
            where ecoResAttribute.RecId == ecoResCategoryAttributeGroupAttrView.Attribute
        {
            // Find or create context of records
            RetailCommerceValidatorLogContext logContext = RetailCommerceValidatorLogContext::findOrCreateContextCategoryAttributeGroup(_validatorTest.ValidationId, ecoResCategoryAttributeGroupAttrView.AttributeGroup, ecoResCategoryAttributeGroupAttrView.Category);

            // Log the issue
            RetailCommerceValidatorLog::addLog(
                    logContext,
                    "@Retail:ValidationRuleCounterMetricId",
                    "@Retail:RetailCommerceValidatorAttribGroupRu001Description",
                    _validatorTest.TestId,
                    "@Retail:RetailCommerceValidatorAttribGroupRu001"
                    );

            // Increase the counter of issues
            resultsCounter++;
        }

        return [resultsCounter];
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAttributeGroupTranslationMissing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rule --> AttribGroup-Ru-002: AttributeGroup translation for Description and FriendlyName is missing.
    /// Validates AttributeGroup translation.
    /// </summary>
    /// <param name = "_validatorTest"> The <c> RetailCommerceValidatorTests </c> table buffer.</param>
    /// <returns>A container consists of log status and count of errors.</returns>
    internal static container validateAttributeGroupTranslationMissing(RetailCommerceValidatorTests _validatorTest)
    {
        RetailCommerceValidatorWorkChannelCategoryHierarchies  retailCommerceValidatorWorkChannelCategoryHierarchies;
        EcoResCategoryAttributeGroupAttrView  ecoResCategoryAttributeGroupAttrView;
        EcoResAttributeGroupTranslation  ecoResAttributeGroupTranslation;
        RetailCommerceValidatorWorkChannelLanguages  retailCommerceValidatorWorkChannelLanguages;
        int resultsCounter = 0;

        while select LanguageId from retailCommerceValidatorWorkChannelLanguages
            where retailCommerceValidatorWorkChannelLanguages.ValidationId == _validatorTest.ValidationId
        {

            while select CategoryHierarchyRecId from retailCommerceValidatorWorkChannelCategoryHierarchies
                where retailCommerceValidatorWorkChannelCategoryHierarchies.ValidationId == _validatorTest.ValidationId &&
                      retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId >= _validatorTest.RangeStartRecId &&
                      retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId <= _validatorTest.RangeEndRecId
             join AttributeGroup from ecoResCategoryAttributeGroupAttrView
                group by AttributeGroup
                where ecoResCategoryAttributeGroupAttrView.CategoryHierarchy == retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId
             notexists join ecoResAttributeGroupTranslation
                where ecoResAttributeGroupTranslation.AttributeGroup == ecoResCategoryAttributeGroupAttrView.AttributeGroup
                   && ecoResAttributeGroupTranslation.FriendlyName != ''
                   && ecoResAttributeGroupTranslation.Description != ''
                   && ecoResAttributeGroupTranslation.Language == retailCommerceValidatorWorkChannelLanguages.LanguageId
            {
                str description = strFmt('@Retail:RetailCommerceValidatorAttribGroupRu002DynamicDescription', retailCommerceValidatorWorkChannelLanguages.LanguageId);
            
                // Find or create context of records
                RetailCommerceValidatorLogContext logContext = RetailCommerceValidatorLogContext::findOrCreateContextAttributeGroup(_validatorTest.ValidationId, ecoResCategoryAttributeGroupAttrView.AttributeGroup);

                // Log the issue
                RetailCommerceValidatorLog::addLog(
                    logContext,
                    "@Retail:ValidationRuleCounterMetricId",
                    description,
                    _validatorTest.TestId,
                    "@Retail:RetailCommerceValidatorAttribGroupRu002"
                    );

                // Increase the counter of issues
                resultsCounter++;
            }
        }

        return [resultsCounter];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>