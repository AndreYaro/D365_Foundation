<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLoadLineAllocationSysDaBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSLoadLineAllocationSysDaBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQueryForAllocationByCriteria</Name>
				<Source><![CDATA[
    internal static SysDaQueryObject buildQueryForAllocationByCriteria(
        WHSLoadLine         _loadLine,
        WHSShipmentTable    _shipmentTable,
        ItemId              _itemId,
        InventDimId         _inventDimId,
        WHSWaveTable        _waveTable)
    {
        WHSLoadLineAllocationSysDaBuilder builder = new WHSLoadLineAllocationSysDaBuilder();

        return builder.buildQueryObject(_loadLine, _shipmentTable, _itemId, _inventDimId, _waveTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject buildQueryObject(
            WHSLoadLine         _loadLine,
            WHSShipmentTable    _shipmentTable,            
            ItemId              _itemId,
            InventDimId         _inventDimId,
            WHSWaveTable        _waveTable)
    {
        SysDaQueryObject loadLineQueryObject = new SysDaQueryObject(_loadLine);
        loadLineQueryObject.forUpdateHint = true;
        loadLineQueryObject.whereClause(this.buildLoadLineWhereClause(_loadLine, _itemId, _inventDimId));

        SysDaQueryObject shipmentTableQueryObject = new SysDaQueryObject(_shipmentTable);
        shipmentTableQueryObject.whereClause(this.buildShipmentTableJoinClause(_loadLine, _shipmentTable));
        WHSWaveLine waveLine;
        SysDaQueryObject waveLineQueryObject = new SysDaQueryObject(waveLine);
        waveLineQueryObject.whereClause(this.buildWaveLineJoinClause(_loadLine, waveLine, _waveTable));

        loadLineQueryObject
            .joinClause(SysDaJoinKind::InnerJoin, shipmentTableQueryObject)
            .joinClause(SysDaJoinKind::ExistsJoin, waveLineQueryObject);

        loadLineQueryObject.orderByClause(this.buildOrderByClause());

        return loadLineQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLoadLineWhereClause</Name>
				<Source><![CDATA[
    private SysDaQueryExpression buildLoadLineWhereClause(WHSLoadLine _loadLine, ItemId _itemId, InventDimId  _inventDimId)
    {
        SysDaQueryExpression whereClause;

        whereClause =  new SysDaNotEqualsExpression(
                            new SysDaFieldExpression(_loadLine, fieldStr(WHSLoadLine, InventQty)),
                            new SysDaFieldExpression(_loadLine, fieldStr(WHSLoadLine, WorkCreatedQty))
                      );

        // If using load building, there are potentially load lines that were not assigned to a load during wave execution.
        whereClause = whereClause.and(new SysDaNotEqualsExpression(
                            new SysDaFieldExpression(_loadLine, fieldStr(WHSLoadLine, LoadId)),
                            new SysDaValueExpression(''))
                        );

        if (_itemId)
        {
            whereClause = whereClause.and(new SysDaEqualsExpression(
                                new SysDaFieldExpression(_loadLine, fieldStr(WHSLoadLine, ItemId)),
                                new SysDaValueExpression(_itemId))
                            );
        }

        if (_inventDimId)
        {
            whereClause = whereClause.and(new SysDaEqualsExpression(
                                new SysDaFieldExpression(_loadLine, fieldStr(WHSLoadLine, InventDimId)),
                                new SysDaValueExpression(_inventDimId))
                            );
        }

        return whereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildShipmentTableJoinClause</Name>
				<Source><![CDATA[
    private SysDaQueryExpression buildShipmentTableJoinClause(WHSLoadLine _loadLine, WHSShipmentTable _shipmentTable)
    {
        SysDaQueryExpression joinClause = new SysDaEqualsExpression(
                                                new SysDaFieldExpression(_shipmentTable, fieldStr(WHSShipmentTable, ShipmentId)),
                                                new SysDaFieldExpression(_loadLine, fieldStr(WHSLoadLine, ShipmentId))
            );

        return joinClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildWaveLineJoinClause</Name>
				<Source><![CDATA[
    private SysDaQueryExpression buildWaveLineJoinClause(WHSLoadLine _loadLine, WHSWaveLine _waveLine, WHSWaveTable _waveTable)
    {
        SysDaQueryExpression joinClause = new SysDaEqualsExpression(
                                                new SysDaFieldExpression(_waveLine, fieldStr(WHSWaveLine, ShipmentId)),
                                                new SysDaFieldExpression(_loadLine, fieldStr(WHSLoadLine, ShipmentId))
                                        )
                                        .and(
                                        new SysDaEqualsExpression(
                                            new SysDaFieldExpression(_waveLine, fieldStr(WHSWaveLine, WaveId)),
                                            new SysDaValueExpression(_waveTable.WaveId))
            );

        return joinClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildOrderByClause</Name>
				<Source><![CDATA[
    protected SysDaOrderBys buildOrderByClause()
    {
        //allow extenders to change the ordering
        return new SysDaOrderBys();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>