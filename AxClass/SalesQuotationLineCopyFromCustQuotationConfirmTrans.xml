<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationLineCopyFromCustQuotationConfirmTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class is responsible for copying data from an instance of <c>CustQuotationConfirmTrans</c> to an instance of <c>SalesQuotationLine</c>
/// </summary>
[SalesQuotationLineCopyFromSourceFactory(tableStr(CustQuotationConfirmTrans))]
class SalesQuotationLineCopyFromCustQuotationConfirmTrans extends SalesQuotationLineCopyFromSource
{
    CustQuotationConfirmTrans fromCustQuotationConfirmTrans;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>sourceCurrencyCode</Name>
				<Source><![CDATA[
    protected CurrencyCode sourceCurrencyCode()
    {
        return fromCustQuotationConfirmTrans.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceRecord</Name>
				<Source><![CDATA[
    protected Common sourceRecord()
    {
        return fromCustQuotationConfirmTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceTradeInventTransId</Name>
				<Source><![CDATA[
    protected TradeInventTransId sourceTradeInventTransId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
    protected void copy()
    {
        fromCustQuotationConfirmTrans = CustQuotationConfirmTrans::findRecId(tmpFrmVirtualLine.RecordNo);
        
        salesQuotationLine.initFromCustQuotationConfirmTrans(
                        fromCustQuotationConfirmTrans,
                        salesQuotationCopying.parmCopyPrecisely(),
                        !salesQuotationCopying.parmRecalculateAmount(),
                        salesQuotationCopying.shouldCopyQty(),
                        tmpFrmVirtualLine.Qty,
                        tmpFrmVirtualLine.PdsCWQty);

        if (salesQuotationLine.isCategoryBased())
        {
            salesQuotationLineForeignTradeCategory.initFromSQLineForeignTradeCategory(
                SalesQuotationLineForeignTradeCategory::find(fromCustQuotationConfirmTrans.InventTransId, fromCustQuotationConfirmTrans.DataAreaId));
            needToCopyForeignTradeRecord = true;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>