<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesFormLetter_DlvSlipProject_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Intialize the instance of SalesFormLetter_DlvSlipProject_BR contract class.
/// </summary>
[DocumentStatusFactoryAttribute(DocumentStatus::DeliverySlipProject_BR)]
class SalesFormLetter_DlvSlipProject_BR extends SalesFormLetter_PackingSlip implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates the document status
    /// </summary>
    /// <returns>
    /// Returns the document status
    /// </returns>
    public DocumentStatus documentStatus()
    {
        return DocumentStatus::DeliverySlipProject_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Used to contruct a service controller instance.
    /// </summary>
    /// <param name="_className">
    /// The class name of the service class.
    /// </param>
    /// <param name="_methodName">
    /// The method name of the service operation.
    /// </param>
    /// <param name="_executionMode">
    /// The execution mode to use when executing the service operation.
    /// </param>
    /// <remarks>
    /// parm methods exist for each of the constructor parameters. initializeFromArgs can also be used
    /// to initialize a controller. If those options for initialization are used the default values
    /// can be used in the constructor.
    /// </remarks>
    public void  new(identifierName             _className = classstr(FormletterService),
                     identifierName             _methodName= methodstr(FormletterService, postSalesOrderDeliverySlipProject_BR),
                     SysOperationExecutionMode  _executionMode = SysOperationExecutionMode::Synchronous)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00041, funcName());

        if (!BrazilParameters::isEnabled())
        {
            throw error(strFmt("@SYS19306", funcName()));
        }
        super(_className, _methodName, _executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>