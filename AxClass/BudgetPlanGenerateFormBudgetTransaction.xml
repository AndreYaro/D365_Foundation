<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanGenerateFormBudgetTransaction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanGenerateFormBudgetTransaction</c> class supports the business logic of the <c>BudgetPlanGenerate</c> form for budget transactions.
/// </summary>
public class BudgetPlanGenerateFormBudgetTransaction extends BudgetPlanGenerateForm
{
    FormGroupControl     sourceBudgetTransactionGroup;
    FormStringControl    sourceBudgetModelId;
    FormReferenceControl sourceBudgetTransactionCode;
    FormStringControl    sourceBudgetTransactionId;
    FormGroupControl     sourceBudgetPlanTransferTotalGroup;
    FormComboBoxControl  sourceBudgetPlanTransferTotal;
    FormComboBoxControl  targetGenJourHistorical;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>BudgetPlanGenerateFormBudgetTransaction</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>BudgetPlanGenerateFormBudgetTransaction</c> class.
    /// </returns>
    public static BudgetPlanGenerateFormBudgetTransaction construct()
    {
        return new BudgetPlanGenerateFormBudgetTransaction();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInstructionText</Name>
				<Source><![CDATA[
    protected void setInstructionText()
    {
        instruction.text("@Budget:BudgetPlanning_GenerateFromBudgetTransactionsSupplemental_InstructionText");
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMandatoryControls</Name>
				<Source><![CDATA[
    protected void setMandatoryControls()
    {
        sourceBudgetModelId.mandatory(true);
        sourceBudgetTransactionCode.mandatory(true);
        sourceBudgetTransactionId.mandatory(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleControls</Name>
				<Source><![CDATA[
    protected void setVisibleControls()
    {
        super();

        sourceBudgetTransactionGroup.visible(true);
        sourceBudgetPlanTransferTotalGroup.visible(true);
        targetBudgetClass.visible(false);
        targetGenJourHistorical.visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControlSet</Name>
				<Source><![CDATA[
    protected void initControlSet()
    {
        super();

        controlSet.add(formControlStr(BudgetPlanGenerate, sourceBudgetTransactionGroup));
        controlSet.add(formControlStr(BudgetPlanGenerate, SourceBudgetModelId));
        controlSet.add(formControlStr(BudgetPlanGenerate, SourceBudgetTransactionCode));
        controlSet.add(formControlStr(BudgetPlanGenerate, SourceBudgetTransactionId));
        controlSet.add(formControlStr(BudgetPlanGenerate, SourceBudgetPlanTransferTotalGroup));
        controlSet.add(formControlStr(BudgetPlanGenerate, SourceBudgetPlanTransferTotal));
        controlSet.add(formControlStr(BudgetPlanGenerate, TargetGenJourHistorical));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormControl</Name>
				<Source><![CDATA[
    protected void setFormControl(FormControl _formControl)
    {
        super(_formControl);

        switch (_formControl.name())
        {
            case formControlStr(BudgetPlanGenerate, SourceBudgetTransactionGroup) :
               sourceBudgetTransactionGroup = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetModelId):
                sourceBudgetModelId = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetTransactionCode) :
                sourceBudgetTransactionCode = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetTransactionId):
                sourceBudgetTransactionId = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetPlanTransferTotalGroup) :
                sourceBudgetPlanTransferTotalGroup = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetPlanTransferTotal) :
                sourceBudgetPlanTransferTotal = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, TargetGenJourHistorical) :
                targetGenJourHistorical = _formControl;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveControlValue</Name>
				<Source><![CDATA[
    public void saveControlValue(FormControl _formControl)
    {
        BudgetPlanGenerateContractBudgetTransaction budgetPlanGenerateContractBudgetTransaction = budgetPlanGenerateContract as BudgetPlanGenerateContractBudgetTransaction;

        super(_formControl);

        switch (_formControl.name())
        {
            case formControlStr(BudgetPlanGenerate, SourceBudgetModelId):
                budgetPlanGenerateContractBudgetTransaction.parmBudgetModelId(sourceBudgetModelId.text());
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetTransactionCode):
                budgetPlanGenerateContractBudgetTransaction.parmBudgetTransactionCode(sourceBudgetTransactionCode.value());
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetTransactionId):
                budgetPlanGenerateContractBudgetTransaction.parmBudgetTransactionId(sourceBudgetTransactionId.text());
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetPlanTransferTotal) :
                budgetPlanGenerateContract.parmTargetBudgetPlanGenerateAggregateBy(sourceBudgetPlanTransferTotal.selection());
                break;

            case formControlStr(BudgetPlanGenerate, TargetGenJourHistorical) :
                budgetPlanGenerateContract.parmTargetIsHistorical(targetGenJourHistorical.selection());
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReferenceBudgetTransactionCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the lookup reference on the <c>BudgetTransactionCode</c> table.
    /// </summary>
    /// <param name="_targetBudgetTransactionCodeControl">
    /// The control of budget transaction code field.
    /// </param>
    /// <returns>
    /// The table buffer of <c>BudgetTransactionCode</c> table.
    /// </returns>
    public Common lookupReferenceBudgetTransactionCode(FormReferenceControl _targetBudgetTransactionCodeControl)
    {
        Query                           query;
        QueryBuildDataSource            queryBuildDataSource;
        SysReferenceTableLookup         referenceLookup;

        query = new Query();
        referenceLookup = SysReferenceTableLookup::newParameters(tableNum(BudgetTransactionCode), _targetBudgetTransactionCodeControl, true);

        // Add fields that will be shown in the lookup form as columns
        referenceLookup.addLookupfield(fieldNum(BudgetTransactionCode, Name));
        referenceLookup.addLookupfield(fieldNum(BudgetTransactionCode, Description));
        referenceLookup.addLookupfield(fieldNum(BudgetTransactionCode, BudgetTransactionType));

        queryBuildDataSource = query.addDataSource(tableNum(BudgetTransactionCode));
        queryBuildDataSource.addRange(fieldNum(BudgetTransactionCode, BudgetTransactionType)).value(queryValue(BudgetTransactionType::OriginalBudget));
        queryBuildDataSource.addRange(fieldNum(BudgetTransactionCode, BudgetTransactionType)).value(queryValue(BudgetTransactionType::Amendment));
        queryBuildDataSource.addRange(fieldNum(BudgetTransactionCode, BudgetTransactionType)).value(queryValue(BudgetTransactionType::PreliminaryBudget));
        queryBuildDataSource.addRange(fieldNum(BudgetTransactionCode, BudgetTransactionType)).value(queryValue(BudgetTransactionType::Apportionment));

        // Add the query to the lookup form
        referenceLookup.parmQuery(query);

        // Perform the lookup and return the selected record
        return referenceLookup.performFormLookup() as BudgetTransactionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBudgetTransactionNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the lookup on the <c>BudgetTransactionHeader</c> table.
    /// </summary>
    /// <param name = "_sourceBudgetTransactionNumberControl">
    /// The control of budget transaction number field.
    /// </param>
    public void lookupBudgetTransactionNumber(FormStringControl _sourceBudgetTransactionNumberControl)
    {
        Query                query = new Query();
        QueryBuildDataSource queryBuildDataSource;

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(BudgetTransactionHeader), _sourceBudgetTransactionNumberControl);

        sysTableLookup.addLookupField(fieldNum(BudgetTransactionHeader, TransactionNumber));
        sysTableLookup.addLookupField(fieldNum(BudgetTransactionHeader, BudgetModelId));

        queryBuildDataSource = query.addDataSource(tableNum(BudgetTransactionHeader));

        queryBuildDataSource.addRange(fieldNum(BudgetTransactionHeader, BudgetModelDataAreaId)).value(curExt());

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>