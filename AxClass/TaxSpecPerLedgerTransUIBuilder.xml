<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSpecPerLedgerTransUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Report UI builder for TaxSpecPerLedgerTrans report.
/// </summary>
public class TaxSpecPerLedgerTransUIBuilder extends SrsReportDataContractUIBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>groupByFieldModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method containing logic to be executed when 'modified' event is triggered on Group by control.
    /// </summary>
    /// <param name="_groupByControl">
    /// Combobox control that represents group by parameter in the report.
    /// </param>
    /// <returns>
    /// Always returns true.
    /// </returns>
    public boolean groupByFieldModified(FormComboBoxControl _groupByControl)
    {
        DialogField subtotalByTaxCodeDialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(TaxSpecPerLedgerTransContract, parmSubtotalByTaxCode));
        DialogField groupbyDialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(TaxSpecPerLedgerTransContract, parmGroupDataBy));

        if (groupbyDialogField.value() == TaxSpecPerLedgerTransGroupBy::LedgerAccount)
        {
            subtotalByTaxCodeDialogField.enabled(true);
        }
        else
        {
            subtotalByTaxCodeDialogField.value(false);
            subtotalByTaxCodeDialogField.enabled(false);
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    public void postRun()
    {
        Dialog dialogLocal = this.dialog();
        DialogField dialogField;

        super();

        dialogLocal.dialogForm().formRun().controlMethodOverload(false);

        this.groupByFieldModified(null);

        dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(TaxSpecPerLedgerTransContract, parmGroupDataBy));
        dialogField.registerOverrideMethod(methodstr(FormComboBoxControl, modified), methodstr(TaxSpecPerLedgerTransUIBuilder, groupByFieldModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the from VAT date and to VAT date parameters just visible in Eastern Europe country.
    /// </summary>
    public void build()
    {
        super();

        FormBuildGroupControl fromGroup = this.dialog().formBuildDesign().control('FromGroup');
        FormBuildGroupControl toGroup = this.dialog().formBuildDesign().control('ToGroup');

        fromGroup.breakable(false);
        toGroup.breakable(false);

        #EECountryRegionCodes

        if (!TaxParameters::isEasternEuropeOrVatDueDateFeatureEnabled())
        {
            DialogField fromVATDatedlg = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(TaxSpecPerLedgerTransContract, parmFromVATDate));
            DialogField toVATDatedlg = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(TaxSpecPerLedgerTransContract, parmToVATDate));

            fromVATDatedlg.visible(false);
            toVATDatedlg.visible(false);
        }
        else
        {
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceEEU00018, funcName());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>