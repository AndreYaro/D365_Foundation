<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SuppItemCreate_Purch</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SuppItemCreate_Purch extends SuppItemCreate
{
    TradeLineNumberManager lineNumberManager;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkAllowCreate</Name>
				<Source><![CDATA[
    protected boolean checkAllowCreate()
    {
        PurchTable  purchTable = salesPurchTable;

        boolean ret = super();

        if (ret)
        {
            ret = purchTable.checkUpdate();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLine</Name>
				<Source><![CDATA[
    protected void createLine(TmpSuppItem _tmpSuppItem)
    {
        PurchLine purchLine;

        PurchLine basePurchLine = PurchLine::findInventTransId(_tmpSuppItem.InventTransId);

        this.iniPurchLine(purchLine, _tmpSuppItem, basePurchLine);

        lineNumberManager.setLine(purchLine);
        if (PurchLine::lastLineNum(purchLine.PurchId) == basePurchLine.LineNumber)
        {
            lineNumberManager.preUpdateLineNumber(true);
        }
        else
        {
            lineNumberManager.setPreviousLineNumber(basePurchLine.LineNumber);
            lineNumberManager.preUpdateLineNumber(false, null, false);
            TradeLineNumberManager::updateLineNumberOfNewOrder(purchLine);
        }
        purchLine.createLine(true, false, false, false, true, !_tmpSuppItem.SuppItemFree);

        lineNumberManager.postUpdateLineNumber();
    }

]]></Source>
			</Method>
			<Method>
				<Name>iniPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>PurchLine</c> record to be created.
    /// </summary>
    /// <param name = "_purchLine">
    /// The <c>PurchLine</c> record to be initialized.
    /// </param>
    /// <param name = "_tmpSuppItem">
    /// The <c>TmpSuppItem</c> record to initialize from.
    /// </param>
    /// <param name = "_basePurchLine">
    /// The base <c>PurchLine</c> record to initialize from.
    /// </param>
    protected void iniPurchLine(PurchLine _purchLine, TmpSuppItem _tmpSuppItem, PurchLine _basePurchLine)
    {
        InventDim inventDim;
        InventDim baseInventDim;

        baseInventDim = PurchLine::findInventTransId(_tmpSuppItem.InventTransId).inventDim();

        _purchLine.initFromPurchTable(salesPurchTable);
        inventDim = _purchLine.inventDim();

        #InventDimDevelop

        inventDim.InventLocationId  = baseInventDim.InventLocationId;
        inventDim.InventSiteId      = baseInventDim.InventSiteId;

        _purchLine.setInventDimIdFromInventDim(inventDim);

        _purchLine.initFromTmpSuppItem(_tmpSuppItem);

        _basePurchLine = PurchLine::findInventTransId(_tmpSuppItem.InventTransId);
        // <GIN>
        if (isCountryRegion_IN)
        {
            _purchLine.initFromPurchLine_IN(_basePurchLine);
        }
        // </GIN>

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            _purchLine.cfopTable_BR = _basePurchLine.cfopTable_BR;
        }
        // </GBR>

        if (_basePurchLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries)
        {
            // we want supp items AFTER the last delivery line related to this commercial line
            _purchLine.LineNumber = - this.getLastDeliveryLineNumber(_basePurchLine.InventTransId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastDeliveryLineNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the last delivery line for given commercial line and returns its line number.
    /// </summary>
    /// <param name="_orderLine">
    /// Commercial line's InventTransId.
    /// </param>
    /// <returns>
    /// Line number of the last delivery line for given commercial line.
    /// </returns>
    protected TradeLineNumber getLastDeliveryLineNumber(InventTransId _orderLine)
    {
        PurchLine purchLine;
        PurchDeliverySchedule purchDeliverySchedule;

        select maxof(LineNumber)
            from purchLine
            exists join OrderLine, DeliveryLine from purchDeliverySchedule
            where purchDeliverySchedule.OrderLine == _orderLine
               && purchLine.InventTransId == purchDeliverySchedule.DeliveryLine;

        return purchLine.LineNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Over ridden to instantiate the <c>TradeLineNumberManager</c> class.
    /// </summary>
    public void run()
    {
        lineNumberManager = TradeLineNumberManager::construct();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS58779";
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SuppItemCreate_Purch construct()
    {
        return new SuppItemCreate_Purch();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>