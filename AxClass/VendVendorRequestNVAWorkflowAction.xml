<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendVendorRequestNVAWorkflowAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>VendVendorRequestNVAWorkflowAction</c> class is used to submit new vendor add workflows.
/// </summary>
public class VendVendorRequestNVAWorkflowAction
{
    VendVendorRequest           vendRequest;
    WorkflowVersionTable        workflowConfigurationTable;
    WorkflowComment             workflowComment;
    boolean                     submit;
    WorkflowWorkItemTable       workflowWorkItemTable;
    menuItemName                menuItemName;
    workflowTypeName            workflowTemplateName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialogOk</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Opens a dialog box to submit a vendor request.
    /// </summary>
    /// <returns>
    ///    true if the dialog box was closed by pressing the Ok button; otherwise, false.
    /// </returns>
    public boolean dialogOk()
    {
        WorkflowSubmitDialog workflowSubmitDialog = WorkflowSubmitDialog::construct(this.parmWorkflowConfigurationTable());
        workflowSubmitDialog.run();
        this.parmWorkflowComment(workflowSubmitDialog.parmWorkflowComment());
        return workflowSubmitDialog.parmIsClosedOK();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the workflow objects.
    /// </summary>
    /// <param name="_documentRecord">
    ///    The workflow document record that is used in the workflow.
    /// </param>
    /// <param name="_menuItemName">
    ///    The submit command used for the new vendor request workflow.
    /// </param>
    /// <param name="_workflowConfigurationTable">
    ///    The workflow configuration table that is used for the workflow.
    /// </param>
    /// <param name="_workflowWorkItemTable">
    ///    The workflow item table that is used for the workflow.
    /// </param>
    public void init(Common                      _documentRecord,
                     menuItemName                _menuItemName,
                     WorkflowVersionTable        _workflowConfigurationTable,
                     WorkflowWorkItemTable       _workflowWorkItemTable)
    {
        this.parmVendRequest(_documentRecord);
        this.parmSubmit(_menuItemName == menuitemactionstr(VendRequestNVASubmit));
        this.parmMenuItemName(_menuItemName);

        this.parmWorkflowConfigurationTable(_workflowConfigurationTable);
        this.parmWorkflowWorkItemtable(_workflowWorkItemTable);
        this.parmWorkflowTemplateName(this.parmWorkflowConfigurationTable().workflowTable().TemplateName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or Sets the <c>menuItemName</c>.
    /// </summary>
    /// <param name = "_menuItemName">The <c>menuItemName</c>.</param>
    /// <returns>The <c>menuItemName</c></returns>
    public menuItemName parmMenuItemName(menuItemName _menuItemName = menuItemName)
    {
        menuItemName = _menuItemName;
        return menuItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or Sets the submit boolean parameter value.
    /// </summary>
    /// <param name = "_submit"></param>
    /// <returns></returns>
    public boolean parmSubmit(boolean _submit = submit)
    {
        submit = _submit;
        return submit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendRequest</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or Sets the vendor request record.
    /// </summary>
    /// <param name="_vendRequest">
    ///    The <c>VendVendorRequest</c> record to set.
    /// </param>
    /// <returns>
    ///    The current <c>VendVendorRequest</c> record.
    /// </returns>
    public VendVendorRequest parmVendRequest(VendVendorRequest _vendRequest = vendRequest)
    {
        vendRequest = _vendRequest;
        return vendRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowComment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or Sets the <c>WorkflowComment</c> record
    /// </summary>
    /// <param name="_workflowComment">
    ///    The <c>WorkflowComment</c> record to set.
    /// </param>
    /// <returns>
    ///    The current <c>WorkflowComment</c> record
    /// </returns>
    public WorkflowComment parmWorkflowComment(WorkflowComment _workflowComment = workflowComment)
    {
        workflowComment = _workflowComment;
        return workflowComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowConfigurationTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or Sets the <c>WorkflowVersionTable</c> record.
    /// </summary>
    /// <param name="_workflowConfigurationTable">
    ///    The <c>WorkflowVersionTable</c> record to set.
    /// </param>
    /// <returns>
    ///    The current <c>WorkflowVersionTable</c> record.
    /// </returns>
    public WorkflowVersionTable parmWorkflowConfigurationTable(WorkflowVersionTable _workflowConfigurationTable = workflowConfigurationTable)
    {
        workflowConfigurationTable = _workflowConfigurationTable;
        return workflowConfigurationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowTemplateName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or Sets the <c>WorkflowTypeName</c> record
    /// </summary>
    /// <param name="_workflowTemplateName">
    ///    The <c>WorkflowTypeName</c> record to set.
    /// </param>
    /// <returns>
    ///    The current <c>WorkflowTypeName</c>.
    /// </returns>
    public WorkflowTypeName parmWorkflowTemplateName(WorkflowTypeName _workflowTemplateName = workflowTemplateName)
    {
        workflowTemplateName = _workflowTemplateName;
        return workflowTemplateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowWorkItemtable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or Sets the <c>WorkflowWorkItemTable</c> record
    /// </summary>
    /// <param name="_workflowWorkItemTable">
    ///    The <c>_workflowWorkItemTable</c> record to set.
    /// </param>
    /// <returns>
    ///    The current <c>WorkflowWorkItemTable</c> record.
    /// </returns>
    public WorkflowWorkItemTable parmWorkflowWorkItemtable(WorkflowWorkItemTable _workflowWorkItemTable = workflowWorkItemTable)
    {
        workflowWorkItemTable = _workflowWorkItemTable;
        return workflowWorkItemTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>submit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Activates the new vendor add workflow template. This method is called from the main static method.
    /// </summary>
    public void submit()
    {
        Workflow::activateFromWorkflowType(this.parmWorkflowTemplateName(),
                                           vendRequest.RecId,
                                           this.parmWorkflowComment(),
                                           NoYes::No);

        this.submitted(vendRequest);
    }

]]></Source>
			</Method>
			<Method>
				<Name>submitted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles a submitted event for a workflow.
    /// </summary>
    /// <param name="_vendRequest">
    ///    The vendor request record to submit.
    /// </param>
    public void submitted(VendVendorRequest _vendRequest)
    {
        VendVendorRequestManager::construct(_vendRequest.RequestEntityType).updateRequestStateToWorkflowSubmitted(_vendRequest.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSubmit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the view vendor profile request can be submitted to the workflow.
    /// </summary>
    /// <param name="_vendRequest">
    ///    The vendor request record to submit.
    /// </param>
    /// <returns>
    ///    true if the request can be submitted; otherwise, false.
    /// </returns>
    public boolean canSubmit(VendVendorRequest _vendRequest)
    {
        return VendVendorRequestManager::construct(_vendRequest.RequestEntityType).canSubmitRequestToWorkflow(_vendRequest);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendVendorRequestNVAWorkflowAction construct()
    {
        return new VendVendorRequestNVAWorkflowAction();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Provides an entry point for the <c>VendRequestNVAWorkflowAction</c> class.
    /// </summary>
    /// <param name="_args">
    ///    The arguments for the class.
    /// </param>
    public static void main(Args _args)
    {
        VendVendorRequest vendRequest = _args.record() as VendVendorRequest;

        if (!vendRequest || _args.menuItemName() == '' || _args.caller() == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        VendVendorRequestNVAWorkflowAction vendRequestWorkflow = VendVendorRequestNVAWorkflowAction::construct();

        if (_args.menuItemName() == menuitemactionstr(VendRequestNVASubmit))
        {
            vendRequestWorkflow.init(_args.record(), _args.menuItemName(), _args.caller().getActiveWorkflowConfiguration(), _args.caller().getActiveWorkflowWorkItem());
        }

        if (vendRequestWorkflow.canSubmit(vendRequest) && vendRequestWorkflow.dialogOk() && vendRequestWorkflow.parmSubmit())
        {
            vendRequestWorkflow.submit();

            FormRun formRun = _args.caller() as FormRun;

            if (formRun != null)
            {
                formRun.updateWorkflowControls();
                formRun.doRefresh();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>