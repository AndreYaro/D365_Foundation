<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerVoucherUIBuilder_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerVoucherReportUIBuilder_CN</c> is UIBuilder class for <c>LedgerVocuherReport_CN</c> report.
/// </summary>
class LedgerVoucherUIBuilder_CN extends SrsReportDataContractExtendUIBuilder_CN
{
    DialogField     dialogFieldPrePrintCode;
    DialogField     dialogFieldVoucherType;
    DialogField     dialogFieldVoucherNumber;
    DialogField     dialogFieldJournalNumber;
    DialogField     dialogFieldFromDate;
    DialogField     dialogFieldToDate;
    DialogField     dialogFieldMaxLines;

    FormBuildGroupControl   formBuildGroupCtrlPrePrint;
    FormBuildGroupControl   formBuildGroupCtrlBlank;
    FormBuildGroupControl   formBuildGroupCtrlPrintDimension;

    const FormControlName FormGroupPrintDimensionName = 'PrintLedgerDimension';

    #define.DefaultMaxlines(5)
    #define.PreprintPaperGroupName('PrePrintPaper')
    #define.BlankPaperGroupName('BlankPaper')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the UI of ledger voucher instance.
    /// </summary>
    public void build()
    {
        super();

        formBuildGroupCtrlPrePrint = this.dialog().formBuildDesign().control(#PreprintPaperGroupName);
        formBuildGroupCtrlPrePrint.frameOptionButton(FormFrameOptionButton::Radio);
        formBuildGroupCtrlPrePrint.optionValue(true);

        formBuildGroupCtrlBlank = this.dialog().formBuildDesign().control(#BlankPaperGroupName);
        formBuildGroupCtrlBlank.frameOptionButton(FormFrameOptionButton::Radio);
        formBuildGroupCtrlBlank.optionValue(false);

        formBuildGroupCtrlPrintDimension = this.dialog().formBuildDesign().control(FormGroupPrintDimensionName);
        formBuildGroupCtrlPrintDimension.frameOptionButton(FormFrameOptionButton::Check);
        formBuildGroupCtrlPrintDimension.optionValue(this.dataContractObject().parmIsPrintLedgerDimension());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public void getFromDialog()
    {
        LedgerVoucherContract_CN    contract = this.dataContractObject();
        FormGroupControl            dialogPreprintGroup = this.dialog().formRun().control(formBuildGroupCtrlPrePrint.id());

        super();

        if (dialogPreprintGroup.optionValue())
        {
            contract.parmPrePrintLevel(PrePrintLevel::PrePrinted);
        }
        else
        {
            contract.parmPrePrintLevel(PrePrintLevel::BlankPaper);
        }

        FormGroupControl fromGroupCtrlPrintDimension = this.dialog().formRun().control(formBuildGroupCtrlPrintDimension.id());

        contract.parmIsPrintLedgerDimension(fromGroupCtrlPrintDimension.optionValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParameterDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the parameters from report caller.
    /// </summary>
    private void initParameterDialog()
    {
        LedgerVoucherContract_CN contract;

        contract = this.dataContractObject() as LedgerVoucherContract_CN;

        if (contract.parmIsPrintFromJournalLine())
        {
            if (contract.parmVoucherType())
            {
                dialogFieldVoucherType.visible(false);
            }
            dialogFieldFromDate.visible(false);
            dialogFieldToDate.visible(false);
        }
        else
        {
            if (this.controller().parmArgs().record())
            {
                if (contract.parmVoucherType())
                {
                    dialogFieldVoucherType.visible(false);
                }
            }

            dialogFieldJournalNumber.visible(false);
        }
        dialogFieldMaxLines.value(#DefaultMaxlines);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyOverrideMethod</Name>
				<Source><![CDATA[
    protected void modifyOverrideMethod()
    {
        this.overrideDialogFieldLookup(dialogFieldPrePrintCode, methodStr(LedgerVoucherUIBuilder_CN, printLayoutCodeLookup), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override this method in order to initialize the dialog fields after the fields have been built.
    /// </summary>
    public void postBuild()
    {
        dialogFieldPrePrintCode     = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerVoucherContract_CN, parmPrintLayoutCode));
        dialogFieldVoucherType      = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerVoucherContract_CN, parmVoucherType));
        dialogFieldVoucherNumber    = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerVoucherContract_CN, parmVoucherNumber));
        dialogFieldJournalNumber    = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerVoucherContract_CN, parmJournalNumber));
        dialogFieldFromDate         = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerVoucherContract_CN, parmFromDate));
        dialogFieldToDate           = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerVoucherContract_CN, parmToDate));
        dialogFieldMaxLines         = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerVoucherContract_CN, parmMaxLines));

        super();

        this.initParameterDialog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>printLayoutCodeLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a print layout code lookup.
    /// </summary>
    /// <param name="_printLayoutCodeDialogControl">
    /// The print layout code control.
    /// </param>
    public void printLayoutCodeLookup(FormStringControl _printLayoutCodeDialogControl)
    {
        SysTableLookup          lookup;
        Query                   query;
        QueryBuildDataSource    qbds;
        RecId                   ledgerPrintLayoutGroupRecId;

        ledgerPrintLayoutGroupRecId = LedgerVoucherType_CN::findByNaturalKey(dialogFieldVoucherType.value()).LedgerPrintLayoutGroup;

        query = new Query();
        qbds = query.addDataSource(tableNum(LedgerPrintLayout_CN));
        SysQuery::findOrCreateRange(
            query.dataSourceTable(tableNum(LedgerPrintLayout_CN)),
            fieldNum(LedgerPrintLayout_CN, LedgerPrintLayoutGroup)).value(queryValue(ledgerPrintLayoutGroupRecId));

        lookup = SysTableLookup::newParameters(tableNum(LedgerPrintLayout_CN), _printLayoutCodeDialogControl);
        lookup.addLookupfield(fieldNum(LedgerPrintLayout_CN, Code));
        lookup.addLookupfield(fieldNum(LedgerPrintLayout_CN, Description));
        lookup.addLookupfield(fieldNum(LedgerPrintLayout_CN, LedgerPrintLayoutGroup));
        lookup.parmQuery(query);
        lookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>