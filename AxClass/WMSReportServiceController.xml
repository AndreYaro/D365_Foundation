<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>wmsReportServiceController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WMSServiceController</c> class implements a custom controller for the space usage and
/// workload reports.
/// </summary>
/// <remarks>
/// The real need for doing this is to provide a custom form and validation for the user interface.
/// </remarks>
public class wmsReportServiceController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDataContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves space usage service data contract class.
    /// </summary>
    /// <returns>
    /// An instance of <c>WMSDataContract</c> class.
    /// </returns>
    public WMSReportServiceDataContract getDataContract()
    {
        #define.dataContractKey('_dataContract')

        return this.getDataContractObject(#dataContractKey);
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateForm</Name>
				<Source><![CDATA[
    protected FormName templateForm()
    {
        return formStr(WMSReportServiceDataContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    protected boolean validate()
    {
        WMSReportServiceDataContract dataContract = this.getDataContract();
        boolean                      ret;

        ret = super() && dataContract.validateContract();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        SysOperationServiceController controller;

        controller = new WMSReportServiceController();
        controller.initializeFromArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>