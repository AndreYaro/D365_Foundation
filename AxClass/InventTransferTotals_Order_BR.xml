<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferTotals_Order_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>InventTransferTotals_Order_BR</c> provides functions to calculate totals for transfer order.
/// </summary>
class InventTransferTotals_Order_BR extends InventTransferTotals_BR
{
    inventTransferTable inventTransferTable;
    inventTransferLine inventTransferLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructTransferCalcTax</Name>
				<Source><![CDATA[
    protected InventTransferCalcTax_BR constructTransferCalcTax()
    {
        return InventTransferCalcTax_BR::construct(inventTransferTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransId</Name>
				<Source><![CDATA[
    protected InventTransId inventTransId()
    {
        return inventTransferLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    protected ItemId itemId()
    {
        return inventTransferLine.itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    protected LineAmount lineAmount(SalesQty salesQty)
    {
        InventTransferLineFiscalInfo_BR inventTransferLineFiscalInfo_BR = inventTransferLine.inventTransferLineFiscalInfo_BR();

        if (inventTransferTable.inventTransferTableFiscalInfo_BR().InventTransferOrderType == InventTransferOrderType_BR::ThirdPartyReturn)
        {
            return CurrencyExchangeHelper::amount(inventTransferLine.QtyRemainReceive * inventTransferLineFiscalInfo_BR.ReceivePrice, CompanyInfoHelper::standardCurrency());
        }

        return CurrencyExchangeHelper::amount(inventTransferLine.QtyRemainShip * inventTransferLineFiscalInfo_BR.ShipPrice, CompanyInfoHelper::standardCurrency());
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(Common _common, ParmId _parmId)
    {
        super(_common, _parmId);

        inventTransferTable = _common;

        recordSortedListLine = new RecordSortedList(tablenum(InventTransferLine));
        recordSortedListLine.sortOrder(fieldnum(InventTransferLine, RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLine</Name>
				<Source><![CDATA[
    public boolean nextLine()
    {
        boolean lineExist = false;

        while (queryTransact.next())
        {
            inventTransferLine = this.queryGet(queryTransact);
            lineExist = true;
            break;
        }

        return lineExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderLine_orderTable</Name>
				<Source><![CDATA[
    protected common orderLine_orderTable()
    {
        return inventTransferTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyInvent</Name>
				<Source><![CDATA[
    protected InventQty qtyInvent()
    {
        return inventTransferLine.calcShipQty(InventTransferShipUpdateQty::All);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyUnit</Name>
				<Source><![CDATA[
    protected UnitQty  qtyUnit()
    {
        return inventTransferLine.calcShipQty(InventTransferShipUpdateQty::All);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    protected QueryRun queryBuild()
    {
        return new QueryRun(SysQuery::queryFromTableRelation(inventTransferTable, tablenum(inventTransferLine)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGet</Name>
				<Source><![CDATA[
    protected common queryGet(QueryRun  _queryRun)
    {
        if (_queryRun.changed(tablenum(inventTransferLine)))
        {
            inventTransferLine = _queryRun.get(tablenum(inventTransferLine));
        }

        return inventTransferLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>