<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalCheck</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class LedgerJournalCheck
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        LedgerJournalCheckPost  ledgerJournalCheckPost;
        Object                  callerForm = args.caller();
        LedgerJournalEngine     ledgerJournalEngine;
        NoYes                   approval = NoYes::No;
        LedgerJournalTrans      ledgerJournalTrans;

        switch (args.dataset())
        {
            case tablenum(LedgerJournalTable) :
                ledgerJournalCheckPost = LedgerJournalCheckPost::newLedgerJournalTable(args.record(), NoYes::No);

                break;

            case tablenum(LedgerJournalTrans):

                if (callerForm && callerForm.name() == formstr(LedgerJournalTransApprove))
                {
                    approval = NoYes::Yes;
                }

                ledgerJournalTrans = args.record() as LedgerJournalTrans;

                ledgerJournalCheckPost = LedgerJournalCheckPost::newLedgerJournalTrans(ledgerJournalTrans,
                                                                                       args.parmEnum(),
                                                                                       NoYes::No,
                                                                                       NoYes::No,
                                                                                       approval);

                LedgerILedgerJournalEngineProvider ledgerJournalEngineProvider = callerForm as LedgerILedgerJournalEngineProvider;
                if (ledgerJournalEngineProvider != null)
                {
                    ledgerJournalEngine = ledgerJournalEngineProvider.ledgerJournalEngine();

                    if (ledgerJournalEngine)
                    {
                        // Removes the original budget check result from the cache for the voucher to allow the cache update after budget check occurs.
                        ledgerJournalEngine.removeBudgetCheckResultFromCache(ledgerJournalTrans.Voucher);
                    }
                }
                break;

            default:
                throw error("@SYS18232");
        }

        LedgerJournalCheckPost::processOperation(ledgerJournalCheckPost, ledgerJournalEngine);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>