<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTaxDocumentTmp_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Represents tax document for tempopary <c>LedgerJournalTrans</c>
/// </summary>
class LedgerJournalTaxDocumentTmp_RU extends LedgerJournalTaxDocument
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTaxOnPrepayment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether this is a prepayment and if taxes apply.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    ///    The <c>LedgerJournalTrans</c> record to evalulate; optional.  The
    ///    default value is current buffer value.
    /// </param>
    /// <returns>
    ///    true if this is a prepayment and taxes apply; otherwise, false.
    /// </returns>
    public boolean getTaxOnPrepayment(LedgerJournalTrans _ledgerJournalTrans = ledgerJournalTrans)
    {
        return taxOnCustPrepayment || taxOnVendPrepayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs new <c>LedgerJournalTaxDocumentTmp_RU</c> class.
    /// </summary>
    /// <param name="_journalTable">
    ///     The <c>ledgerJournalTable</c> record.
    /// </param>
    /// <param name="_unsavedLedgerJournalTrans">
    ///     The unsaved <c>LedgerJournalTrans</c> record.
    /// </param>
    /// <param name="_journalId">
    ///     Journal number.
    /// </param>
    /// <param name="_referenceNumber">
    ///     Voucher number.
    /// </param>
    /// <param name="_invoiceId">
    ///     Invoice number.
    /// </param>
    /// <param name="_forPostingUseOnly">
    ///     For posting use only sign.
    /// </param>
    protected void new(ledgerJournalTable _journalTable, LedgerJournalTrans _unsavedLedgerJournalTrans, JournalId _journalId, Voucher _referenceNumber, InvoiceId _invoiceId, boolean _forPostingUseOnly)
    {
        super(_unsavedLedgerJournalTrans, _journalId, _referenceNumber, _invoiceId, _forPostingUseOnly);
        ledgerJournalTable = _journalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxOnPrepayment_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform calculation on tax on prepayment?
    /// </summary>
    /// <param name="_value">new value of the property</param>
    /// <returns>current value of the property</returns>
    public boolean parmTaxOnPrepayment_RU(boolean _value = this.getTaxOnPrepayment())
    {
        if (this.isVendorPayment())
        {
            taxOnVendPrepayment = _value;
        }
        else
        if (this.isCustomerPayment())
        {
            taxOnCustPrepayment = _value;
        }

        return _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an instance of the <c>LedgerJournalTaxDocumentTmp_RU</c> class.
    /// </summary>
    /// <param name="_ledgerJournalTable">
    ///    The journal.
    /// </param>
    /// <param name="_unsavedLedgerJournalTrans">
    ///    An instance of the <c>LedgerJournalTrans</c> table buffer that represents a record that has not
    ///    been saved to SQL.
    /// </param>
    /// <returns>
    ///    An instance of the <c>LedgerJournalTaxDocument</c> class.
    /// </returns>
    /// <remarks>
    ///    null may be passed for the <paramref name="_unsavedLedgerJournalTrans" /> parameter if all
    ///    <c>LedgerJournalTrans</c> records in SQL are up to date.
    /// </remarks>
    public static LedgerJournalTaxDocumentTmp_RU construct(LedgerJournalTable _ledgerJournalTable,
                                                           LedgerJournalTrans _unsavedLedgerJournalTrans)
    {
        return new LedgerJournalTaxDocumentTmp_RU(_ledgerJournalTable, _unsavedLedgerJournalTrans, _ledgerJournalTable.JournalNum, _unsavedLedgerJournalTrans.Voucher, _unsavedLedgerJournalTrans.Invoice, false);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>