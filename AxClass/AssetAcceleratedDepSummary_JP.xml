<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAcceleratedDepSummary_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class fetches accelerated depreciation related information from FA VM/Dep book
/// </summary>
class AssetAcceleratedDepSummary_JP implements AssetDocumentSummary_JP
{
    Set                                     docTypes;
    AssetId                                 assetId;
    AssetBookMergeId                        bookId;
    TransDate                               assetDate;
    AssetYear                               assetYear;
    AssetSumCalc                            assetSumCalc;

    AssetDocumentSumCalcUtil_JP             calcUtil;

    // Accelerated deprecaition amount
    AssetDepreciation                       accDepAmount;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>acceleratedDepValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the total existing accelerated depreciation amount
    /// </summary>
    /// <returns>
    /// The total existing accelerated depreciation amount
    /// </returns>
    public AssetDepreciation acceleratedDepValue()
    {
        return accDepAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize current <c>AssetAcceleratedDepSummary_JP</c> instance.
    /// </summary>
    public void init()
    {
        AssetSumCalc_Trans          transSumCalc;

        transSumCalc = assetSumCalc as AssetSumCalc_Trans;
        if (transSumCalc == null)
        {
            throw error(strFmt("@SYS4005190", classStr(AssetSumCalc_Trans)));
        }

        accDepAmount = transSumCalc.getAssetDocTypeVarValue_JP(AssetTransType::ExtraordinaryDepreciation, AssetDocumentType_JP::AssetAcceleratedDepreciation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a new instance of <c>AssetAcceleratedDepSummary_JP</c>
    /// </summary>
    /// <param name="_assetId">
    /// The asset id.
    /// </param>
    /// <param name="_bookId">
    /// The book id.
    /// </param>
    /// <param name="_bookType">
    /// The book type.
    /// </param>
    /// <param name="_sumCalc">
    /// The <c>AssetSumCalc</c> instance to perform calculation.
    /// </param>
    /// <param name="_assetDate">
    /// The asset date.
    /// </param>
    /// <param name="_assetYear">
    /// The asset year.
    /// </param>
    private void new(
        AssetId                     _assetId,
        AssetBookId                 _bookId,
        AssetSumCalc                _sumCalc,
        TransDate                   _assetDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        AssetYear                   _assetYear = AssetYear::All)
    {
        assetId = _assetId;
        bookId = _bookId;

        docTypes = new Set(Types::Container);
        docTypes.add([AssetTransType::ExtraordinaryDepreciation, AssetDocumentType_JP::AssetAcceleratedDepreciation]);

        assetDate = _assetDate;
        assetYear = _assetYear;

        assetSumCalc = _sumCalc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentSumCalcUtil</Name>
				<Source><![CDATA[
    private AssetDocumentSumCalcUtil_JP parmDocumentSumCalcUtil(AssetDocumentSumCalcUtil_JP _calcUtil = calcUtil)
    {
        calcUtil = _calcUtil;
        return calcUtil;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDocTypes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the trans document types.
    /// </summary>
    /// <returns>
    /// Returns the trans document types.
    /// </returns>
    public Set transDocTypes()
    {
        return docTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct an <c>AssetAcceleratedDepSummary_JP</c> instance.
    /// </summary>
    /// <param name="_assetId">
    /// The asset id.
    /// </param>
    /// <param name="_bookId">
    /// The asset book id.
    /// </param>
    /// <param name="_bookType">
    /// The asset book type.
    /// </param>
    /// <param name="_sumCalc">
    /// An <c>AssetSumCalc</c> instance that performs calculation.
    /// </param>
    /// <param name="_calcUtil">
    /// An <c>AssetDocumentSumCalcUtil_JP</c> instance that performs calculation for asset document transactions.
    /// </param>
    /// <param name="_assetDate">
    /// The asset date.
    /// </param>
    /// <param name="_assetYear">
    /// The asset year.
    /// </param>
    /// <returns>
    /// A new instance of <c>AssetAcceleratedDepSummary_JP</c> with values.
    /// </returns>
    public static AssetAcceleratedDepSummary_JP construct(
        AssetId                     _assetId,
        AssetBookMergeId            _bookId,
        AssetBookType               _bookType,
        AssetSumCalc                _sumCalc,
        AssetDocumentSumCalcUtil_JP _calcUtil,
        TransDate                   _assetDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        AssetYear                   _assetYear = AssetYear::All)
    {
        AssetAcceleratedDepSummary_JP   summary = new AssetAcceleratedDepSummary_JP(_assetId, _bookId, _sumCalc, _assetDate, _assetYear);
        _calcUtil.registerSummary(summary);
        summary.parmDocumentSumCalcUtil(_calcUtil);
        return summary;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>