<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceUpdate_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceUpdate_IT</c> class handles changes in electronic invoice data and statuses.
/// </summary>
public class EInvoiceUpdate_IT
{
    RecId eInvoiceRecId;

    EInvoiceStatus_IT status;
    boolean statusSet;

    EInvoiceFileName_IT eInvoiceFileName;
    boolean eInvoiceFileNameSet;

    EInvoiceTransmissionName_IT eInvoiceTransmissionName;
    boolean eInvoiceTransmissionNameSet;

    XML xmlOutgoing;
    UserId xmlOutgoingCreatedBy;
    TransDateTime xmlOutgoingCreatedDateTime;
    boolean xmlOutgoingSet;

    XML xmlOutgoingSigned;
    UserId xmlOutgoingSignedBy;
    TransDateTime xmlOutgoingSignedDateTime;
    DigitalCertificateSubject xmlOutgoingSignedCertificateSubject;
    boolean xmlOutgoingSignedSet;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>eInvoiceFileName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the new file name of the electronic invoice.
    /// </summary>
    /// <param name="_eInvoiceFileName">
    /// The new file name of the electronic invoice.
    /// </param>
    /// <returns>
    /// A reference to the current instance of the <c>EInvoiceUpdate_IT</c> class.
    /// </returns>
    public EInvoiceUpdate_IT eInvoiceFileName(EInvoiceFileName_IT _eInvoiceFileName)
    {
        eInvoiceFileName = _eInvoiceFileName;
        eInvoiceFileNameSet = true;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eInvoiceTransmissionName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the new transmission name of the electronic invoice.
    /// </summary>
    /// <param name="_eInvoiceTransmissionName">
    /// The new transmission name of the electronic invoice.
    /// </param>
    /// <returns>
    /// A reference to the current instance of the <c>EInvoiceUpdate_IT</c> class.
    /// </returns>
    public EInvoiceUpdate_IT eInvoiceTransmissionName(EInvoiceTransmissionName_IT _eInvoiceTransmissionName)
    {
        eInvoiceTransmissionName = _eInvoiceTransmissionName;
        EInvoiceTransmissionNameSet = true;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEInvoiceRecId</Name>
				<Source><![CDATA[
    protected RecId parmEInvoiceRecId(RecId _eInvoiceRecId = eInvoiceRecId)
    {
        eInvoiceRecId = _eInvoiceRecId;
        return eInvoiceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the new status of the electronic invoice.
    /// </summary>
    /// <param name="_status">
    /// The new status of the electronic invoice.
    /// </param>
    /// <returns>
    /// A reference to the current instance of the <c>EInvoiceUpdate_IT</c> class.
    /// </returns>
    public EInvoiceUpdate_IT status(EInvoiceStatus_IT _status)
    {
        status = _status;
        statusSet = true;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the electronic invoice.
    /// </summary>
    public void update()
    {
        EInvoice_IT eInvoice;

        ttsBegin;

        eInvoice = EInvoice_IT::find(eInvoiceRecId, true);

        if (this.validate(eInvoice))
        {
            if (xmlOutgoingSet)
            {
                eInvoice.XMLOutgoing = xmlOutgoing;
                eInvoice.XMLOutgoingCreatedBy = xmlOutgoingCreatedBy;
                eInvoice.XMLOutgoingCreatedDateTime = xmlOutgoingCreatedDateTime;
                eInvoice.XMLOutgoingSigned = '';
                eInvoice.XMLOutgoingSignedBy = '';
                eInvoice.XMLOutgoingSignedDateTime  = DateTimeUtil::minValue();
                eInvoice.CertSubj = '';
                eInvoice.removeXMLAttached(EInvoiceConstants_IT::XMLOutgoing);
                eInvoice.Moved = NoYes::No;
            }

            if (statusSet)
            {
                eInvoice.Status = status;
            }

            if (eInvoiceFileNameSet)
            {
                eInvoice.EInvoiceFileName = eInvoiceFileName;
            }

            if (eInvoiceTransmissionNameSet)
            {
                eInvoice.EInvoiceTransmissionName = eInvoiceTransmissionName;
            }

            if (xmlOutgoingSignedSet)
            {
                eInvoice.XMLOutgoingSigned = xmlOutgoingSigned;
                eInvoice.XMLOutgoingSignedBy = xmlOutgoingSignedBy;
                eInvoice.XMLOutgoingSignedDateTime = xmlOutgoingSignedDateTime;
                eInvoice.CertSubj = xmlOutgoingSignedCertificateSubject;
                eInvoice.removeXMLAttached(EInvoiceConstants_IT::XMLOutgoingSigned);
                eInvoice.MovedSigned = NoYes::No;
            }

            eInvoice.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the consistency of the parameters and the data.
    /// </summary>
    /// <param name="_eInvoice">
    /// The electronic invoice record to be updated.
    /// </param>
    /// <returns>
    /// true, if update parameters are consistent and applicable to the electronic invoice; otherwise, false.
    /// </returns>
    protected boolean validate(EInvoice_IT _eInvoice)
    {
        boolean ret = true;

        if (!_eInvoice)
        {
            ret = false;
        }

        if (!statusSet      &&
            !xmlOutgoingSet &&
            !xmlOutgoingSignedSet &&
            !eInvoiceFileNameSet &&
            !eInvoiceTransmissionName)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>xmlOutgoing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the new outgoung XML of the electronic invoice.
    /// </summary>
    /// <param name="_xmlOutgoing">
    /// The new outgoung XML of the electronic invoice.
    /// </param>
    /// <param name="_xmlOutgoingCreatedBy">
    /// The user ID of the user who has created the outgoing XML.
    /// </param>
    /// <param name="_xmlOutgoingCreatedDateTime">
    /// The date and time when the outgoing XML was created.
    /// </param>
    /// <returns>
    /// A reference to the current instance of the <c>EInvoiceUpdate_IT</c> class.
    /// </returns>
    public EInvoiceUpdate_IT xmlOutgoing(XML _xmlOutgoing, UserId _xmlOutgoingCreatedBy, TransDateTime _xmlOutgoingCreatedDateTime)
    {
        xmlOutgoing = _xmlOutgoing;
        xmlOutgoingCreatedBy = _xmlOutgoingCreatedBy;
        xmlOutgoingCreatedDateTime = _xmlOutgoingCreatedDateTime;
        xmlOutgoingSet = true;

        if (!statusSet)
        {
            this.status(EInvoiceStatus_IT::Created);
        }

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>xmlOutgoingSigned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the new signed outgoung XML of the electronic invoice.
    /// </summary>
    /// <param name="_xmlOutgoingSigned">
    /// The new signed outgoung XML of the electronic invoice.
    /// </param>
    /// <param name="_xmlOutgoingSignedBy">
    /// The user ID of the user who has signed the outgoing XML.
    /// </param>
    /// <param name="_xmlOutgoingSignedDateTime">
    /// The date and time when the outgoing XML was signed.
    /// </param>
    /// <param name="_xmlOutgoingSignedCertificateSubject">
    /// The certificate subject the XML was signed with.
    /// </param>
    /// <returns>
    /// A reference to the current instance of the <c>EInvoiceUpdate_IT</c> class.
    /// </returns>
    public EInvoiceUpdate_IT xmlOutgoingSigned(
        XML _xmlOutgoingSigned,
        UserId _xmlOutgoingSignedBy,
        TransDateTime _xmlOutgoingSignedDateTime,
        DigitalCertificateSubject _xmlOutgoingSignedCertificateSubject)
    {
        xmlOutgoingSigned = _xmlOutgoingSigned;
        xmlOutgoingSignedBy = _xmlOutgoingSignedBy;
        xmlOutgoingSignedDateTime = _xmlOutgoingSignedDateTime;
        xmlOutgoingSignedCertificateSubject = _xmlOutgoingSignedCertificateSubject;
        xmlOutgoingSignedSet = true;

        if (!statusSet)
        {
            this.status(EInvoiceStatus_IT::SignOK);
        }

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>EInvoiceUpdate_IT</c> class.
    /// </summary>
    /// <param name="_eInvoice">
    /// The electronic invoice record to be updated.
    /// </param>
    /// <returns>
    /// A new instance of <c>EInvoiceUpdate_IT</c> class.
    /// </returns>
    public static EInvoiceUpdate_IT newFrom(EInvoice_IT _eInvoice)
    {
        EInvoiceUpdate_IT eInvoiceUpdate = new EInvoiceUpdate_IT();

        eInvoiceUpdate.parmEInvoiceRecId(_eInvoice.RecId);

        return eInvoiceUpdate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>