<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjAdvancedJournalPostingSourceDocumentRetryFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjAdvancedJournalPostingSourceDocumentRetryFlight</c> class will upadte the detection logic
/// in class method <c>SubledgerJournalizerProjectExtension::getAccountingEventsV2()</c> so that it will not just
/// throw an exception if none of the <c>AccountingDistribution</c> records have an <c>AccountingEvent</c> record.
/// However, instead of simply waiting to read the <c>AccountingEvent</c> again, we will retry the entire Source
/// Document processing again.
/// </summary>
internal final class ProjAdvancedJournalPostingSourceDocumentRetryFlight extends Flight
{
    static private ProjAdvancedJournalPostingSourceDocumentRetryFlight singleton = new ProjAdvancedJournalPostingSourceDocumentRetryFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static ProjAdvancedJournalPostingSourceDocumentRetryFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>