<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalFormController_Movement</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventJournalFormController_Movement</c> class is controlling the interaction between inventory movement journal forms and the <c>JournalFormTable</c> class and the <c>JournalFormTrans</c> class.
/// </summary>
class InventJournalFormController_Movement extends InventJournalFormController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventJournalFormTrans_Movement</Name>
				<Source><![CDATA[
    public InventJournalFormTrans_Movement parmInventJournalFormTrans_Movement()
    {
        return journalFormTrans as InventJournalFormTrans_Movement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCWFormCtrl</Name>
				<Source><![CDATA[
    public void parmCWFormCtrl(PdsCWFormCtrl _cwFormCtrl)
    {
        this.parmInventJournalFormTrans_Movement().parmCWFormCtrl(_cwFormCtrl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionEntryControl</Name>
				<Source><![CDATA[
    public void parmDimensionEntryControl(DimensionEntryControl _dimensionEntryControl)
    {
        this.parmInventJournalFormTrans_Movement().parmDimensionEntryControl(_dimensionEntryControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the inventory dimension controller object for the form.
    /// </summary>
    /// <returns>The inventory dimension controller object for the form.</returns>
    public InventDimCtrl_Frm_Mov inventDimSetupObject()
    {
        return this.parmInventJournalFormTrans_Movement().inventDimSetupObject();
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalNameId_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>JournalNameId</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void journalNameId_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTable().fieldModifiedJournalNameIdPost();

        this.parmInventJournalFormTable().journalTable_DS().rereadReferenceDataSources();
        // <GEEPL>
        InventJournalTable  inventJournalTable = this.parmInventJournalFormTable().journalTable() as InventJournalTable;
        inventJournalTable.InventDocType_PL = InventJournalName::find(inventJournalTable.JournalNameId).InventDocType_PL;
        // </GEEPL>
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetId_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>AssetId</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void assetId_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedAssetIdPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmount_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>CostAmount</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void costAmount_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedCostAmountPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>costMarkup_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>CostMarkup</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void costMarkup_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedCostMarkupPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>costPrice_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>CostPrice</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void costPrice_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedCostPricePost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>counted_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>Counted</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void counted_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedCountedPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>ItemId</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void itemId_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedItemIdPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWInventQtyCounted_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>PdsCWInventQtyCounted</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void pdsCWInventQtyCounted_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedPdsCWInventQtyCountedPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQty_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>PdsCWQty</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void pdsCWQty_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedPdsCWQtyPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceUnit_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>PriceUnit</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void priceUnit_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedPriceUnitPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>Qty</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void qty_OnModified(FormDataObject _formDataObject)
    {
        using (InventMovementQuantityValidatorDialogsContext context = InventMovementQuantityValidatorDialogsContext::construct())
        {
            _formDataObject.modified();
            this.parmInventJournalFormTrans_Movement().fieldModifiedQtyPost();
        }
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransIdReturn_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>InventTransIdReturn</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void inventTransIdReturn_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedInventTransIdReturnPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>storno_RU_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>Storno_RU</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void storno_RU_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedStornoPost_RU();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomLine_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>BomLine</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void bomLine_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedBOMLinePost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>profitSet_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>ProfitSet</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void profitSet_OnModified(FormDataObject _formDataObject)
    {
        _formDataObject.modified();
        this.parmInventJournalFormTrans_Movement().fieldModifiedProfitSetPost();
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId_OnValidated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>ItemId</c> field's modified() method.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public boolean itemId_OnValidated(FormDataObject _formDataObject)
    {
        return this.parmInventJournalFormTrans_Movement().fieldValidateItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerEventHandlersOnTransDataSource</Name>
				<Source><![CDATA[
    protected void registerEventHandlersOnTransDataSource()
    {
        super();

        FormDataSource dataSource = journalFormTrans.journalTrans_DS();

        dataSource.object(fieldNum(InventJournalTrans, ItemId)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, itemId_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, ItemId)).registerOverrideMethod(methodStr(FormDataObject, Validate), methodStr(InventJournalFormController_Movement, itemId_OnValidated), this);
        dataSource.object(fieldNum(InventJournalTrans, AssetId)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, assetId_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, CostAmount)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, costAmount_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, CostPrice)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, costPrice_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, CostMarkup)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, costMarkup_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, Counted)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, counted_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, PdsCWInventQtyCounted)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, pdsCWInventQtyCounted_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, PdsCWQty)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, pdsCWQty_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, PriceUnit)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, priceUnit_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, Qty)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, qty_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, Storno_RU)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, storno_RU_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, InventTransIdReturn)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, inventTransIdReturn_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, BOMLine)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, bomLine_OnModified), this);
        dataSource.object(fieldNum(InventJournalTrans, ProfitSet)).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, profitSet_OnModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim_fieldModified_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method invoked instead of the <c>InventDim</c> fields' modified() methods.
    /// </summary>
    /// <param name = "_formDataObject">The field's <c>FormDataObject</c> object.</param>
    public void inventDim_fieldModified_OnModified(FormDataObject _formDataObject)
    {
        var inventJournalFormTrans = this.parmInventJournalFormTrans_Movement();

        _formDataObject.modified();

        inventJournalFormTrans.fieldModifiedInventDimFieldsPost(inventJournalFormTrans.inventDim_ds().cursor(), _formDataObject.fieldId());
        this.fieldModified(_formDataObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerEventHandlersOnInventDimDataSource</Name>
				<Source><![CDATA[
    protected void registerEventHandlersOnInventDimDataSource()
    {
        super();

        FormDataSource dataSource = this.parmInventJournalFormTrans().inventDim_DS();

        ListEnumerator enumerator  = InventDim::dimFieldsList().getEnumerator();

        while (enumerator.moveNext())
        {
            FieldId dimFieldId = enumerator.current();
            dataSource.object(dimFieldId).registerOverrideMethod(methodStr(FormDataObject, Modified), methodStr(InventJournalFormController_Movement, inventDim_fieldModified_OnModified), this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromJournalForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>InventJournalFormController_Movement</c> class.
    /// </summary>
    /// <param name = "_journalFormTable">The <c>JournalFormTable</c> instance used by this merged journal form.</param>
    /// <param name = "_journalFormTrans">The <c>JournalFormTrans</c> instance used by this merged journal form.</param>
    /// <returns>A new instance of the <c>InventJournalFormController_Movement</c> class.</returns>
    public static InventJournalFormController_Movement newFromJournalForms(
        InventJournalFormTable _journalFormTable,
        InventJournalFormTrans_Movement _journalFormTrans)
    {
        var controller = new InventJournalFormController_Movement();

        controller.journalFormTable = _journalFormTable;
        controller.journalFormTrans = _journalFormTrans;

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventDimFromJournalTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets values on the active <c>InventDim</c> buffer in the form based on the journals values.
    /// </summary>
    /// <param name = "_inventDim">
    /// An <c>InventDim</c> buffer.
    ///</param>
    public void initInventDimFromJournalTable()
    {
        InventJournalTable  inventJournalTable = this.parmInventJournalFormTable().journalTable() as InventJournalTable;
        var inventJournalFormTrans = this.parmInventJournalFormTrans_Movement();
        InventDim inventDim = inventJournalFormTrans.inventDim_ds().cursor();
        if (inventJournalTable.InventSiteId)
        {
            if (inventDim.InventSiteId != inventJournalTable.InventSiteId)
            {
                // Override the SiteId when default is provided...
                inventDim.InventSiteId = inventJournalTable.InventSiteId;

                if (InventJournalTable.InventLocationId)
                {
                    // Override the Warehouse when default is provided...
                    inventDim.InventLocationId = InventJournalTable.InventLocationId;
                }

                // Init inventDim for InventJournalTrans
                inventDim = InventDim::FindOrCreate(inventDim);
                InventJournalTrans inventjournalTrans = this.parmInventJournalFormTrans().journalTrans_DS().cursor() as InventJournalTrans;
                inventJournalTrans.setInventDimId(inventDim.InventDimId, inventDim);
                inventJournalTrans.setCostPrice(inventDim.inventDimId, inventDim);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rereadInventJournalTable</Name>
				<Source><![CDATA[
    internal void rereadInventJournalTable(InventJournalTable _inventJournalTable)
    {
        JournalTableData localJournalTableData = this.parmInventJournalFormTrans().journalTableData();
        if (localJournalTableData)
        {
            InventJournalTable inventJournalTableLocal = localJournalTableData.journalTable();
            if (inventJournalTableLocal.RecId
             && inventJournalTableLocal.RecId        == _inventJournalTable.RecId
             && inventJournalTableLocal.RecVersion   != _inventJournalTable.RecVersion)
            {
                inventJournalTableLocal.reread();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>