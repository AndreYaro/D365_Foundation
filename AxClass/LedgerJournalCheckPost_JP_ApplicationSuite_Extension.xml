<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalCheckPost_JP_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(LedgerJournalCheckPost))]
internal final class LedgerJournalCheckPost_JP_ApplicationSuite_Extension
{
    #ISOCountryRegionCodes
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateJournalForPosted</Name>
				<Source><![CDATA[
    protected void updateJournalForPosted()
    {
        next updateJournalForPosted();

        if (TaxConsInvoice_JP::isTaxDifferencePostingOnConsInvoiceEnabled(false))
        {
            if (ledgerJournalTable.Posted == NoYes::Yes)
            {
                this.custUpdatePostedConsInvoice_JP();
                this.vendUpdatePostedConsInvoice_JP();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>custUpdatePostedConsInvoice_JP</Name>
				<Source><![CDATA[
    private void custUpdatePostedConsInvoice_JP()
    {
        CustConsInvoiceHistory_JP custConsInvoiceHistory = CustConsInvoiceHistory_JP::findByJournalNum(ledgerJournalTable.JournalNum, true);

        if (custConsInvoiceHistory.RecId)
        {
            CustConsInvoice_JP custConsInvoice_JP = CustConsInvoice_JP::find(custConsInvoiceHistory.ConsInvoiceRecId, true);

            custConsInvoice_JP.Posted = NoYes::Yes;
            custConsInvoice_JP.JournalNum = ledgerJournalTable.JournalNum;
            custConsInvoice_JP.update();

            custConsInvoiceHistory.Status = CustVendConsInvoiceHistoryStatus_JP::Completed;
            custConsInvoiceHistory.update();

            /*
             * Fetching the CustTrans record with the
             * Journal Batch number of the ledgerJournalTable
             * object of the Base Class
             */
            CustTrans_W custTrans_W;
            CustTrans custTrans = CustTrans::findByJournalNumber(ledgerJournalTable.JournalNum);
            
            if (custTrans.RecId)
            {
                update_recordset custTrans_W
                setting CustConsInvoice_JP = custConsInvoice_JP.RecId
                    where custTrans_W.CustTrans == custTrans.RecId;

                custConsInvoice_JP.PostedCustTrans = custTrans.RecId;
                custConsInvoice_JP.update();

                /*
                 * The custConsInvoice_JP needs to be updated with the PostedCustTrans
                 * before the invoice status gets updated. Thus, an additional update()
                 * has been introduced in this scenario
                 */
                custConsInvoice_JP.CustVendConsInvoice_JP::setInvoiceStatus();
                custConsInvoice_JP.update();

                info('@AccountsReceivable:OperationCompleted');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendUpdatePostedConsInvoice_JP</Name>
				<Source><![CDATA[
    private void vendUpdatePostedConsInvoice_JP()
    {
        VendConsInvoiceHistory_JP vendConsInvoiceHistory = VendConsInvoiceHistory_JP::findByJournalNum(ledgerJournalTable.JournalNum, true);

        if (vendConsInvoiceHistory.RecId)
        {
            VendConsInvoice_JP vendConsInvoice_JP = VendConsInvoice_JP::find(vendConsInvoiceHistory.ConsInvoiceRecId, true);

            vendConsInvoice_JP.Posted = NoYes::Yes;
            vendConsInvoice_JP.JournalNum = ledgerJournalTable.JournalNum;
            vendConsInvoice_JP.update();

            vendConsInvoiceHistory.Status = CustVendConsInvoiceHistoryStatus_JP::Completed;
            vendConsInvoiceHistory.update();

            /*
             * Fetching the VendTrans record with the 
             * Journal Batch number of the ledgerJournalTable
             * object of the Base Class
             */
            VendTrans_W vendTrans_W;
            VendTrans vendTrans = VendTrans::findByJournalNumber(ledgerJournalTable.JournalNum);
            
            if (vendTrans.RecId)
            {
                update_recordset vendTrans_W
                setting VendConsInvoice_JP = vendConsInvoice_JP.RecId
                    where vendTrans_W.VendTrans == vendTrans.RecId;

                vendConsInvoice_JP.PostedVendTrans = vendTrans.RecId;
                vendConsInvoice_JP.update();

                /*
                 * The vendConsInvoice_JP needs to be updated with the PostedCustTrans
                 * before the invoice status gets updated. Thus, an additional update()
                 * has been introduced in this scenario
                 */
                vendConsInvoice_JP.CustVendConsInvoice_JP::setInvoiceStatus();
                vendConsInvoice_JP.update();

                info('@AccountsReceivable:OperationCompleted');
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>