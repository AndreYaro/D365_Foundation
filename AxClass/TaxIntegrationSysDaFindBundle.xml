<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationSysDaFindBundle</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntegrationSysDaFindBundle</c> supports single <c>select</c>.
/// </summary>
public final class TaxIntegrationSysDaFindBundle
{
    private SysDaFindObject object;
    private SysDaFindStatement statement;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationSysDaFindBundle</c> base on a query.
    /// </summary>
    /// <param name = "_query">The query.</param>
    private void new(SysDaQueryObject _query)
    {
        this.object = new SysDaFindObject(_query);
        this.statement = new SysDaFindStatement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationSysDaFindBundle</c> base on a query.
    /// </summary>
    /// <param name = "_query">The query.</param>
    /// <returns>The new <c>TaxIntegrationSysDaFindBundle</c>.</returns>
    public final static TaxIntegrationSysDaFindBundle construct(SysDaQueryObject _query)
    {
        return new TaxIntegrationSysDaFindBundle(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes <c>select</c>.
    /// </summary>
    /// <returns>true if a record is found; otherwise, false.</returns>
    public final boolean find()
    {
        if (this.object && this.object.query())
        {
            statement.find(this.object);
            return this.object.query().table().RecId != 0;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>