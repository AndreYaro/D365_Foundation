<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCatchWeightTagFullDimDiscrepanciesSearch</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSCatchWeightTagFullDimDiscrepanciesSearch</c> class searches for catch weight tag discrepancies given some optional search parameters.
/// </summary>
internal class WHSCatchWeightTagFullDimDiscrepanciesSearch
{
    private ItemId searchItemId;
    private InventDim searchInventDim;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSearchItemId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal ItemId parmSearchItemId(ItemId _searchItemId = searchItemId)
    {
        searchItemId = _searchItemId;

        return searchItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSearchInventDim</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal InventDim parmSearchInventDim(InventDim _searchInventDim = searchInventDim)
    {
        searchInventDim = _searchInventDim;

        return searchInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>search</Name>
				<Source><![CDATA[
    /// <summary>
    /// Search for the tag discrepancies using a sandbox and the given parameters.
    /// </summary>
    /// <param name = "_tagDiscrepanciesTmp">The <c>WHSCatchWeightTagDiscrepanciesTmp</c> temporary database table to store the found discrepancies in.</param>
    /// <returns>The <c>WHSCatchWeightTagDiscrepanciesTmp</c> temporary datasbase table with the found discrepancies.</returns>
    [Hookable(false)]
    internal WHSCatchWeightTagDiscrepanciesTmp search(WHSCatchWeightTagDiscrepanciesTmp _tagDiscrepanciesTmp)
    {
        SysOperationSandbox::callStaticMethod(
            classIdGet(this),
            staticMethodStr(WHSCatchWeightTagFullDimDiscrepanciesSearch, findDiscrepancies),
            [searchItemId, searchInventDim, _tagDiscrepanciesTmp.getPhysicalTableName()],
            "@WAX:CatchWeightTagDiscrepanciesAnalyzeActivity");

        return _tagDiscrepanciesTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDiscrepancies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the discrepancies using the given input parameters.
    /// </summary>
    /// <param name = "_inputParameters">A container with the input parameters which is: a search item id, a search <c>InventDim</c> record, 
    /// and the physical table name for the <c>WHSCatchWeightTagDiscrepanciesTmp</c> table to update.</param>
    /// <returns>An empty container as this sandbox method does not need to return any results.</returns>
    private static container findDiscrepancies(container _inputParameters)
    {
        ItemId searchItemId;
        InventDim searchInventDim;
        str tagDiscrepanciesTempDBTableName;

        [searchItemId, searchInventDim, tagDiscrepanciesTempDBTableName] = _inputParameters;

        InventSum inventSum;
        InventDim inventDim;
        WHSInventTable whsInventTable;
        WHSCatchWeightItemHandlingPolicy policy;
        WHSCatchWeightTagSummary tagSummary;

        WHSCatchWeightTagDiscrepanciesTmp tagDiscrepanciesTmp;

        tagDiscrepanciesTmp.useExistingTempDBTable(tagDiscrepanciesTempDBTableName);
        
        delete_from tagDiscrepanciesTmp;
        
        ttsbegin;

        if (InventUseDimOfInventSumToggle::instance().isEnabled())
        {
            while select ItemId, InventDimId from inventSum
                where inventSum.ClosedQty == NoYes::No
                    && inventSum.PhysicalInvent != 0
                    && (searchItemId == '' || inventSum.ItemId == searchItemId)
                    && (searchInventDim.InventSiteId == '' || inventSum.InventSiteId == searchInventDim.InventSiteId)
                    && (searchInventDim.InventLocationId == '' || inventSum.InventLocationId == searchInventDim.InventLocationId)
                exists join whsInventTable
                    where whsInventTable.ItemId == inventSum.ItemId
                exists join policy
                    where policy.PolicyName == whsInventTable.CatchWeightItemHandlingPolicyName
                        && policy.CatchWeightTagTracking == NoYes::Yes
                        && policy.CatchWeightTagDimensionTrackingMethod == WHSCatchWeightTagDimensionTrackingMethod::ProductTrackingAndAllStorageDimensions
                notexists join tagSummary
                    where tagSummary.ItemId == inventSum.ItemId
                        && tagSummary.InventDimId == inventSum.InventDimId
                        && tagSummary.TagCount == inventSum.PdsCWPhysicalInvent
                        && tagSummary.SumCapturedWeight == inventSum.PhysicalInvent
            {
                tagDiscrepanciesTmp.clear();
                tagDiscrepanciesTmp.ItemId = inventSum.ItemId;
                tagDiscrepanciesTmp.InventDimId = inventSum.InventDimId;
                tagDiscrepanciesTmp.insert();
            }
        }
        else
        {
            while select ItemId, InventDimId from inventSum
                where inventSum.ClosedQty == NoYes::No
                    && inventSum.PhysicalInvent != 0
                    && (searchItemId == '' || inventSum.ItemId == searchItemId)
                    exists join inventDim
                        where inventDim.inventDimId == inventSum.InventDimId
                            && (searchInventDim.InventSiteId == '' || inventDim.InventSiteId == searchInventDim.InventSiteId)
                            && (searchInventDim.InventLocationId == '' || inventDim.InventLocationId == searchInventDim.InventLocationId)
                    exists join whsInventTable
                        where whsInventTable.ItemId == inventSum.ItemId
                    exists join policy
                        where policy.PolicyName == whsInventTable.CatchWeightItemHandlingPolicyName
                            && policy.CatchWeightTagTracking == NoYes::Yes
                            && policy.CatchWeightTagDimensionTrackingMethod == WHSCatchWeightTagDimensionTrackingMethod::ProductTrackingAndAllStorageDimensions
                    notexists join tagSummary
                        where tagSummary.ItemId == inventSum.ItemId
                            && tagSummary.InventDimId == inventSum.InventDimId
                            && tagSummary.TagCount == inventSum.PdsCWPhysicalInvent
                            && tagSummary.SumCapturedWeight == inventSum.PhysicalInvent
            {
                tagDiscrepanciesTmp.clear();
                tagDiscrepanciesTmp.ItemId = inventSum.ItemId;
                tagDiscrepanciesTmp.InventDimId = inventSum.InventDimId;
                tagDiscrepanciesTmp.insert();
            }
        }

        ttscommit;

        return conNull();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>