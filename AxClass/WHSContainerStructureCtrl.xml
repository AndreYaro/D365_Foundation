<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSContainerStructureCtrl</Name>
	<SourceCode>
		<Declaration><![CDATA[/// <summary>
/// The <c>WHSContainerStructureCtrl</c> class is used to build tree control for container structure.
/// </summary>
class WHSContainerStructureCtrl
{
    #ResAppl

    Common                  referenceTable;

    FormTreeControl         tree;

    WHSImageListAppl_WHS    imageListAppl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addContainers</Name>
				<Source><![CDATA[	/// <summary>
	/// Adds containers to the tree.
	/// </summary>
	/// <param name="_treeNode">
	/// Tree node as a root for the containers to be added.
	/// </param>
    void addContainers(TreeItemIdx _treeNode)
    {
        switch (referenceTable.TableId)
        {
            case tableNum(WHSShipmentTable):
                this.buildContainersByShipment(_treeNode);
                break;

            case tableNum(WHSLoadTable):
                this.buildContainersByLoad(_treeNode);
                break;

            default:
                this.buildAllContainers(_treeNode);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildAllContainers</Name>
				<Source><![CDATA[
    private void buildAllContainers(TreeItemIdx _treeNode, WHSContainerId _containerId = '')
    {
        WHSContainerTable   containerTable;

        while select containerTable
            where containerTable.ParentContainerId   == _containerId
        {
            TreeItemIdx treeIdx = SysFormTreeControl::addTreeItem(tree,
                                                                  this.createTreeElementStr(containerTable),
                                                                  _treeNode,
                                                                  containerTable.RecId,
                                                                  this.getNodeImage("@WAX3790"));

            this.buildAllContainers(treeIdx, containerTable.ContainerId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildContainersByLoad</Name>
				<Source><![CDATA[
    private void buildContainersByLoad(TreeItemIdx _treeNode, WHSContainerId _containerId = '')
    {
        WHSContainerTable   containerTable;
        WHSShipmentTable    shipmentTable;

        while select containerTable
            join ShipmentId, LoadId from shipmentTable
            where containerTable.ShipmentId          == shipmentTable.ShipmentId                          &&
                  shipmentTable.LoadId               == referenceTable.(fieldNum(WHSLoadTable, LoadId))   &&
                  containerTable.ParentContainerId   == _containerId
        {
            TreeItemIdx treeIdx = SysFormTreeControl::addTreeItem(tree,
                                                                  this.createTreeElementStr(containerTable),
                                                                  _treeNode,
                                                                  containerTable.RecId,
                                                                  this.getNodeImage("@WAX3790"));

            this.buildAllContainers(treeIdx, containerTable.ContainerId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildContainersByShipment</Name>
				<Source><![CDATA[
    private void buildContainersByShipment(TreeItemIdx _treeNode, WHSContainerId _containerId = '')
    {
        WHSContainerTable   containerTable;

        while select containerTable
            where containerTable.ShipmentId          == referenceTable.(fieldNum(WHSShipmentTable, ShipmentId))   &&
                  containerTable.ParentContainerId   == _containerId
        {
            TreeItemIdx treeIdx = SysFormTreeControl::addTreeItem(tree,
                                                                  this.createTreeElementStr(containerTable),
                                                                  _treeNode,
                                                                  containerTable.RecId,
                                                                  this.getNodeImage("@WAX3790"));

            this.buildAllContainers(treeIdx, containerTable.ContainerId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildTree</Name>
				<Source><![CDATA[	/// <summary>
	/// Builds containers shaped as a tree in the form.
	/// </summary>
    void buildTree()
    {
        tree.deleteAll();

        TreeItemIdx clusterIdx = SysFormTreeControl::addTreeItem(tree,
                                                                 "@WAX1424",
                                                                 FormTreeAdd::Root,
                                                                 "@WAX1424",
                                                                 this.getNodeImage("@WAX3793"));

        this.addContainers(clusterIdx);

        SysFormTreeControl::expandTree(tree, clusterIdx);

        tree.select(clusterIdx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTreeElementStr</Name>
				<Source><![CDATA[	/// <summary>
	/// Creates a string representation of a container node.
	/// </summary>
	/// <param name="_containerTable">
	/// Container record that is represented in the node.
	/// </param>
	/// <returns>
	/// The string representation of a container node.
	/// </returns>
    str createTreeElementStr(WHSContainerTable  _containerTable)
    {
        return _containerTable.ContainerId + ' (' +
               _containerTable.ContainerTypeCode + ') - ' +
               enum2Str(_containerTable.ContainerStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNodeImage</Name>
				<Source><![CDATA[
    private ImageRes getNodeImage(str _label)
    {
        ImageRes    ret;

        switch (_label)
        {
            case "@WAX3791":    // Parent
                ret = imageListAppl.image(#ImageOverlayContainer);
                break;

            case "@WAX3790":    // Child
                ret = imageListAppl.image(#ImageItemRequirements);
                break;

            case "@WAX3793":    // Root
                ret = imageListAppl.image(#ImageDeduct);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        imageListAppl = new WHSImageListAppl_WHS();
        imageListAppl.build();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmImageListAppl</Name>
				<Source><![CDATA[
    WHSImageListAppl_WHS parmImageListAppl(WHSImageListAppl_WHS _imageListAppl = imageListAppl)
    {
        imageListAppl = _imageListAppl;

        return imageListAppl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReferenceTable</Name>
				<Source><![CDATA[
    Common parmReferenceTable(Common _referenceTable = referenceTable)
    {
        referenceTable = _referenceTable;

        return referenceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTree</Name>
				<Source><![CDATA[
    FormTreeControl parmTree(FormTreeControl _tree = tree)
    {
        tree = _tree;

        return tree;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
