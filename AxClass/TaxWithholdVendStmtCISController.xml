<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdVendStmtCISController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxWithholdVendStmtCISCsvExport</c> class is the controller class for the <c>TaxWithholdVendStmtCIS</c> SSRS report.
/// </summary>
public class TaxWithholdVendStmtCISController extends SrsReportRunController implements BatchRetryable
{
    private const SRSCatalogItemName SRSReportName = ssrsReportStr(TaxWithholdVendStmtCIS, Report);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        super();

        TaxWithholdVendStmtCISContract taxWithholdVendStmtCISContract = this.parmReportContract().parmRdpContract() as TaxWithholdVendStmtCISContract;

        if (taxWithholdVendStmtCISContract.parmIsGenerateFile())
        {
            TaxWithholdVendStmtCISExport taxWithholdVendStmtCISExport = new TaxWithholdVendStmtCISExport();
            taxWithholdVendStmtCISExport.initFromTaxWithholdVendStmtCISContract(taxWithholdVendStmtCISContract);
            taxWithholdVendStmtCISExport.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        const str FeatureReference = 'GB-00008';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        TaxWithholdVendStmtCISController taxWithholdVendStmtCISController = new TaxWithholdVendStmtCISController();

        taxWithholdVendStmtCISController.parmReportName(SRSReportName);
        taxWithholdVendStmtCISController.parmArgs(_args);
        taxWithholdVendStmtCISController.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>