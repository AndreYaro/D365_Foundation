<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerVoucherInterunitBalancer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerVoucherInterunitBalancer</c> class performs balancing for interunit
/// dimensions for the <c>LedgerVoucher</c> class.
/// </summary>
public class LedgerVoucherInterunitBalancer extends LedgerInterunitBalancer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the specified transaction.
    /// </summary>
    /// <param name="_ledgerVoucherTransObject">
    /// The <c>LedgerVoucherTransObject</c> object.
    /// </param>
    /// <returns>
    /// true if the transaction was added; otherwise, false.
    /// </returns>
    public boolean addTrans(LedgerVoucherTransObject _ledgerVoucherTransObject)
    {
        ledgerTmpInterunitBalancerAccountEntry.clear();
        ledgerTmpInterunitBalancerAccountEntry.initFromLedgerVoucherTransObject(_ledgerVoucherTransObject);

        if (this.addToInterunitTotals(ledgerTmpInterunitBalancerAccountEntry))
        {
            ledgerTmpInterunitBalancerAccountEntry.insert();

            _ledgerVoucherTransObject.parmInterunitReference(ledgerTmpInterunitBalancerAccountEntry.RecId);

            return true;
        }
        else
        {
            this.ledgerInterunitBalancerInstrumentation().logDimensionValueNotSuppliedForInterunitBalancingDimension();

            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static LedgerVoucherInterunitBalancer construct()
    {
        LedgerVoucherInterunitBalancer balancer = new LedgerVoucherInterunitBalancer();

        return balancer;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>