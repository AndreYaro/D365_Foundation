<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventConsistencyCheck_Journal</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventConsistencyCheck_Journal extends SysConsistencyCheck implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>configurationKey</Name>
				<Source><![CDATA[
        ConfigurationKeyId configurationKey()
    {
        return configurationKeyNum(LogisticsBasic);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executionOrder</Name>
				<Source><![CDATA[
        Integer executionOrder()
    {
        return 2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    void run()
    {
        this.kernelCheck();

        Counter     numberOfInconsistentRecords, correctedRecords;
        CheckFix    checkFix = this.checkFix();

        [numberOfInconsistentRecords, correctedRecords] = InventConsistencyJournalChecker::newFromParameters(checkFix).run();
        if (checkFix == CheckFix::Fix)
        {
            this.updateCorrected(correctedRecords);
        }
        this.updateNotCorrected();
    }

]]></Source>
			</Method>
			<Method>
				<Name>kernelCheck</Name>
				<Source><![CDATA[
    private void kernelCheck()
    {
        InventJournalTable  inventJournalTable;
        InventJournalTrans  inventJournalTrans;
        ProjItemTrans       projItemTrans;
        DictTable           dictTableTable = new DictTable(tableNum(InventJournalTable));
        DictTable           dictTableTrans = new DictTable(tableNum(InventJournalTrans));

        boolean             hasTableCheckFixMethod = this.hasTableCheckFixMethod(tableNum(InventJournalTable));
        boolean             hasTransCheckFixMethod = this.hasTableCheckFixMethod(tableNum(InventJournalTrans));

        while select inventJournalTable
            where inventJournalTable.Posted == NoYes::No
        {
            if (inventJournalTable.JournalType == InventJournalType::project)
            {
                while select inventJournalTrans
                    where inventJournalTrans.JournalId  == inventJournalTable.JournalId &&
                          inventJournalTrans.Qty
                    exists join * from projItemTrans
                        where projItemTrans.ProjTransId == inventJournalTrans.ProjTransId
                {
                      this.kernelCheckRecord(inventJournalTrans, dictTableTrans, hasTransCheckFixMethod);
                }
            }
            else
            {
                while select inventJournalTrans
                    where inventJournalTrans.JournalId  == inventJournalTable.JournalId &&
                          inventJournalTrans.Qty
                {
                      this.kernelCheckRecord(inventJournalTrans, dictTableTrans, hasTransCheckFixMethod);
                }
            }

            this.kernelCheckRecord(inventJournalTable, dictTableTable, hasTableCheckFixMethod);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeParentClassId</Name>
				<Source><![CDATA[
        ClassId treeParentClassId()
    {
        return classNum(InventConsistencyCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        static ClassDescription description()
    {
        return "@SYS9020";
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpText</Name>
				<Source><![CDATA[
        static HelpTxt helpText()
    {
        return "@SYS58219";
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>