<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxCalculationInterimResult</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>Tax_TaxCalculationInterimResult</c> class is the tax calculation process amounts holder class.
/// This class will hold some tmp. amounts e.g. tax amount by unit, tax amount with/without tax amount by unit.
/// These amounts would be participating in later tax calculation for some complex scenarios.
/// </summary>
public final class TaxCalculationInterimResult
{
    private TaxAmount               grossTaxAmountForTaxAmountByUnit;
    private TaxAmount               taxTotalWithTaxAmountByUnit;
    private TaxAmount               taxTotalWithOutTaxAmountByUnit;
    private TaxAmount               taxAmountByUnit;
    private TaxAmount               taxTotalWithDiscount;
    private TaxBase                 baseAmountExclTax;
    private Tax                     taxObject;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setGrossTaxAmountForTaxAmountByUnit</Name>
				<Source><![CDATA[
    public void setGrossTaxAmountForTaxAmountByUnit(TaxAmount _grossTaxAmountForTaxAmountByUnit)
    {
        this.grossTaxAmountForTaxAmountByUnit = _grossTaxAmountForTaxAmountByUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxTotalWithTaxAmountByUnit</Name>
				<Source><![CDATA[
    public void setTaxTotalWithTaxAmountByUnit(TaxAmount _taxTotalWithTaxAmountByUnit)
    {
        this.taxTotalWithTaxAmountByUnit = _taxTotalWithTaxAmountByUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxTotalWithOutTaxAmountByUnit</Name>
				<Source><![CDATA[
    public void setTaxTotalWithOutTaxAmountByUnit(TaxAmount _taxTotalWithOutTaxAmountByUnit)
    {
        this.taxTotalWithOutTaxAmountByUnit = _taxTotalWithOutTaxAmountByUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxAmountByUnit</Name>
				<Source><![CDATA[
    public void setTaxAmountByUnit(TaxAmount _taxAmountByUnit)
    {
        this.taxAmountByUnit = _taxAmountByUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxObject</Name>
				<Source><![CDATA[
    public void setTaxObject(Tax _taxObject)
    {
        this.taxObject = _taxObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBaseAmountExclTax</Name>
				<Source><![CDATA[
    public void setBaseAmountExclTax(TaxBase _baseAmountExclTax)
    {
        this.baseAmountExclTax = _baseAmountExclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxTotalWithDiscount</Name>
				<Source><![CDATA[
    public void setTaxTotalWithDiscount(TaxBase _taxTotalWithDiscount)
    {
        this.taxTotalWithDiscount = _taxTotalWithDiscount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGrossTaxAmountForTaxAmountByUnit</Name>
				<Source><![CDATA[
    public TaxAmount getGrossTaxAmountForTaxAmountByUnit()
    {
        return this.grossTaxAmountForTaxAmountByUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxTotalWithTaxAmountByUnit</Name>
				<Source><![CDATA[
    public TaxAmount getTaxTotalWithTaxAmountByUnit()
    {
        return this.taxTotalWithTaxAmountByUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxTotalWithOutTaxAmountByUnit</Name>
				<Source><![CDATA[
    public TaxAmount getTaxTotalWithOutTaxAmountByUnit()
    {
        return this.taxTotalWithOutTaxAmountByUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxAmountByUnit</Name>
				<Source><![CDATA[
    public TaxAmount getTaxAmountByUnit()
    {
        return this.taxAmountByUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxobject</Name>
				<Source><![CDATA[
    public Tax getTaxobject()
    {
        return this.taxObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBaseAmountExclTax</Name>
				<Source><![CDATA[
    public TaxBase getBaseAmountExclTax()
    {
        return this.baseAmountExclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxTotalWithDiscount</Name>
				<Source><![CDATA[
    public TaxBase getTaxTotalWithDiscount(Percent _lineDescountPercent = 0)
    {
        if (!this.taxTotalWithDiscount)
        {
            this.taxTotalWithOutTaxAmountByUnit = (this.taxTotalWithTaxAmountByUnit - this.grossTaxAmountForTaxAmountByUnit) * (1 - _lineDescountPercent/100);
            this.taxTotalWithDiscount = this.taxTotalWithOutTaxAmountByUnit + this.grossTaxAmountForTaxAmountByUnit;

        }
        return this.taxTotalWithDiscount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>