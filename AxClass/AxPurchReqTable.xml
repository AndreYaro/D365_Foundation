<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxPurchReqTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxPurchReqTable extends AxInternalBase
{
    int                         invoiceAccount_VendTableIdx;
    int                         orderAccount_VendTableIdx;
    int                         zipCodeIdx;
    int                         projTableIdx;
    int                         contactPersonIdx;
    int                         paymTermIdx;
    int                         purchParametersIdx;
    int                         axAddressIdx;
    str                         state;
    str                         county;

    int                         companyInfoIdx;
    int                         axDeliveryAddressIdx;

    PurchReqTable               purchReqTable;
    PurchReqExternalSource      externalSource;
    InventSiteDimensionLink     inventSiteDimensionLink;
    PurchReqCreationStatus      statusToBeSaved;
    NoYes                       autoSubmitToWorkflow;
    JustificationDescription    purchReqBusJustCodeDesc;
    PurchReqExternalSourceID    sourceID;
    PurchReqExternalSourceName  sourceName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _purchReqTable = purchReqTable)
    {
        if (!prmisDefault(_purchReqTable))
        {
            super(_purchReqTable);
            purchReqTable = _purchReqTable as PurchReqTable;
        }
        else
        {
            super();
        }

        return purchReqTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>PurchReqTable</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>PurchReqTable</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        PurchReqTable localPurchReqTable;

        return localPurchReqTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteDimensionLink</Name>
				<Source><![CDATA[
    protected InventSiteDimensionLink inventSiteDimensionLink()
    {
        return InventSiteDimensionLink::newDimensionTables(this.purchReqTable(), this.purchReqTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAutoSubmitToWorkflowRequired</Name>
				<Source><![CDATA[
    public NoYes parmAutoSubmitToWorkflowRequired(NoYes _autoSubmitToWorkflow = autoSubmitToWorkflow)
    {
        autoSubmitToWorkflow = _autoSubmitToWorkflow;
        return autoSubmitToWorkflow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBusinessJustification</Name>
				<Source><![CDATA[
    public BusinessJustificationRefRecId parmBusinessJustification(RefRecId _businessJustification = 0)
    {
        if (!prmisDefault(_businessJustification))
        {
            this.setField(fieldNum(PurchReqTable, BusinessJustification), _businessJustification);
        }

        return purchReqTable.BusinessJustification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBusinessJustificationDescription</Name>
				<Source><![CDATA[
    public JustificationDescription parmBusinessJustificationDescription(JustificationDescription _businessJustificationDescription = '')
    {
        PurchReqBusinessJustificationCodes purchReqBusinessJustificationCodes;
        BusinessJustificationRefRecId   businessJustificationRefRecId;

        if (!prmisDefault(_businessJustificationDescription))
        {
            businessJustificationRefRecId = PurchReqBusinessJustificationCodes::find(_businessJustificationDescription).RecId;
            this.setField(fieldNum(PurchReqTable, BusinessJustification), businessJustificationRefRecId);
        }

        if (!purchReqTable.BusinessJustification)
        {
            purchReqTable.BusinessJustification = PurchReqTable::find(purchReqTable.RecId).BusinessJustification;
        }

        select Description from purchReqBusinessJustificationCodes
            where purchReqBusinessJustificationCodes.RecId == purchReqTable.BusinessJustification;

        return purchReqBusinessJustificationCodes.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyInfoDefault</Name>
				<Source><![CDATA[
    public RecId parmCompanyInfoDefault(anytype _CompanyInfoRecId = 0)
    {
        if (!prmisDefault(_CompanyInfoRecId))
        {
            this.setField(fieldNum(PurchReqTable, CompanyInfoDefault), _CompanyInfoRecId);
        }

        return purchReqTable.CompanyInfoDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExternalSourceID</Name>
				<Source><![CDATA[
    public PurchReqExternalSourceID parmExternalSourceID(PurchReqExternalSourceID _sourceID = '')
    {
        if (_sourceID)
        {
            sourceID = _sourceID;
        }

        return sourceID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExternalSourceName</Name>
				<Source><![CDATA[
    public PurchReqExternalSourceName parmExternalSourceName(PurchReqExternalSourceName _sourceName = '')
    {
        if (_sourceName)
        {
            sourceName = _sourceName;
        }
        return sourceName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHoldExplanation</Name>
				<Source><![CDATA[
    public PurchReqHoldExplanation parmHoldExplanation(PurchReqHoldExplanation _explanation = '')
    {
        if (!prmisdefault(_explanation))
        {
            this.setField(fieldNum(PurchReqTable, HoldExplanation), _explanation);
        }

        return purchReqTable.HoldExplanation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsModified</Name>
				<Source><![CDATA[
    public VersioningIsModified parmIsModified(VersioningIsModified _isModified = NoYes::No)
    {
        if (!prmisDefault(_isModified))
        {
            this.setField(fieldNum(PurchReqTable, IsModified), _isModified);
        }

        return purchReqTable.IsModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsWorkflowToBeResubmitted</Name>
				<Source><![CDATA[
    public NoYesId parmIsWorkflowToBeResubmitted(NoYesId _isWorkflowToBeResubmitted = NoYes::No)
    {
        if (!prmisDefault(_isWorkflowToBeResubmitted))
        {
            this.setField(fieldNum(PurchReqTable, IsWorkflowToBeResubmitted), _isWorkflowToBeResubmitted);
        }

        return purchReqTable.IsWorkflowToBeResubmitted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnHold</Name>
				<Source><![CDATA[
    public PurchReqHoldStatus parmOnHold(PurchReqHoldStatus _onHold = NoYes::No)
    {
        if (!prmisdefault(_onHold))
        {
            this.setField(fieldNum(PurchReqTable, OnHold), _onHold);
        }

        return purchReqTable.OnHold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOriginator</Name>
				<Source><![CDATA[
    public RecId parmOriginator(anytype _originator = 0)
    {
        if (!prmisDefault(_originator))
        {
            this.setField(fieldNum(PurchReqTable, Originator), _originator);
        }

        return purchReqTable.Originator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    public ProjId parmProjId(ProjId _projId = '')
    {
        if (!prmisDefault(_projId))
        {
            this.setField(fieldNum(PurchReqTable, ProjId), _projId);
        }

        return purchReqTable.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmProjIdDataArea(DataAreaId _projIdDataArea = '')
    {
        if (!prmisDefault(_projIdDataArea))
        {
            this.setField(fieldNum(PurchReqTable, ProjIdDataArea), _projIdDataArea);
        }

        return purchReqTable.ProjIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchReqId</Name>
				<Source><![CDATA[
    public PurchReqId parmPurchReqId(PurchReqId _purchReqId = '')
    {
        return purchReqTable.PurchReqId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchReqName</Name>
				<Source><![CDATA[
    public PurchReqName parmPurchReqName(PurchReqName _purchReqName = '')
    {
        if (!prmisDefault(_purchReqName))
        {
            this.setField(fieldNum(PurchReqTable, PurchReqName), _purchReqName);
        }

        return purchReqTable.PurchReqName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchReqType</Name>
				<Source><![CDATA[
    public PurchReqType parmPurchReqType(PurchReqType _purchReqType = PurchReqType::Purch)
    {
        if (!prmisDefault(_purchReqType))
        {
            this.setField(fieldNum(PurchReqTable, PurchReqType), _purchReqType);
        }

        return purchReqTable.PurchReqType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecId</Name>
				<Source><![CDATA[
    public RecId parmRecId(RecId _recId = 0)
    {
        return purchReqTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequiredDate</Name>
				<Source><![CDATA[
    public PurchReqRequiredDate parmRequiredDate(PurchReqRequiredDate _requiredDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        if (!prmisDefault(_requiredDate))
        {
            this.setField(fieldNum(PurchReqTable, RequiredDate), _requiredDate);
        }

        return purchReqTable.RequiredDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequisitionPurpose</Name>
				<Source><![CDATA[
    public RequisitionPurpose parmRequisitionPurpose(RequisitionPurpose _requisitionPurpose = RequisitionPurpose::Consumption)
    {
        if (!prmisDefault(_requisitionPurpose))
        {
            this.setField(fieldNum(PurchReqTable, RequisitionPurpose), _requisitionPurpose);
        }

        return purchReqTable.RequisitionPurpose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequisitionStatus</Name>
				<Source><![CDATA[
    public PurchReqRequisitionStatus parmRequisitionStatus(PurchReqRequisitionStatus _status = PurchReqRequisitionStatus::Draft)
    {
        if (!prmisDefault(_status))
        {
            this.setField(fieldNum(PurchReqTable, RequisitionStatus), _status);
        }

        return purchReqTable.RequisitionStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentHeader</Name>
				<Source><![CDATA[
    public RefRecId parmSourceDocumentHeader(RefRecId _sourceDocumentHeader = 0)
    {
        if (!prmisDefault(_sourceDocumentHeader))
        {
            this.setField(fieldNum(PurchReqTable, SourceDocumentHeader), _sourceDocumentHeader);
        }

        return purchReqTable.SourceDocumentHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatusToBeSaved</Name>
				<Source><![CDATA[
    public PurchReqCreationStatus parmStatusToBeSaved(PurchReqCreationStatus _status = statusToBeSaved)
    {
        statusToBeSaved = _status;
        return statusToBeSaved;//this.get_Attribute(#StatusToBeSaved);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmittedBy</Name>
				<Source><![CDATA[
    public PurchReqSubmittedBy parmSubmittedBy(PurchReqSubmittedBy _purchPlacer = '')
    {
        if (!prmisDefault(_purchPlacer))
        {
            this.setField(fieldNum(PurchReqTable, SubmittedBy), _purchPlacer);
        }

        return purchReqTable.SubmittedBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmittedDateTime</Name>
				<Source><![CDATA[
    public PurchReqSubmittedDateTime parmSubmittedDateTime(PurchReqSubmittedDateTime _submittedDateTime = utcDateTimeNull())
    {
        if (!prmisDefault(_submittedDateTime))
        {
            this.setField(fieldNum(PurchReqTable, SubmittedDateTime), _submittedDateTime);
        }

        return purchReqTable.SubmittedDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    public TransDate parmTransDate(TransDate _transDate = dateNull())
    {
        if (!prmisDefault(_transDate))
        {
            this.setField(fieldNum(PurchReqTable, TransDate), _transDate);
        }

        return purchReqTable.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchReqTable</Name>
				<Source><![CDATA[
    public PurchReqTable purchReqTable(PurchReqTable _purchReqTable = purchReqTable)
    {
        if (!prmisDefault(_purchReqTable))
        {
            this.setCurrentRecordFromExternal(_purchReqTable);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts or updates the current record for the AxBC class.
    /// </summary>
    /// <remarks>
    ///    The <c>save</c> instance method on the AxBC class should be executed after having assigned new
    ///    values to fields.The actual work regarding saving and updating a record is performed in the
    ///    <c>doSave</c> method, which this method calls.
    /// </remarks>
    public void save()
    {
        super();
        ttsbegin;
        externalSource.ExternalSourceID = this.parmExternalSourceID();
        externalSource.ExternalSourceName = this.parmExternalSourceName();
        externalSource.PurchReqTable = this.parmRecId();
        externalSource.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBusinessJustification</Name>
				<Source><![CDATA[
    protected void setBusinessJustification()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, BusinessJustification)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBusinessJustificationDescription</Name>
				<Source><![CDATA[
    protected void setBusinessJustificationDescription()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, BusinessJustification)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCompanyInfoDefault</Name>
				<Source><![CDATA[
    protected void setCompanyInfoDefault()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, CompanyInfoDefault)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHold</Name>
				<Source><![CDATA[
    protected void setHold()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, OnHold)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHoldExplanation</Name>
				<Source><![CDATA[
    protected void setHoldExplanation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, HoldExplanation)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOriginator</Name>
				<Source><![CDATA[
    protected void setOriginator()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, Originator)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchReqId</Name>
				<Source><![CDATA[
    protected void setPurchReqId()
    {
        NumberSequenceReference numberSequenceReference;

        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        if (this.isFieldSetExternally(fieldNum(PurchReqTable, PurchReqId)))
        {
            if (this.isSetMethodsCalledFromSave())
            {
                if (!this.purchReqTable())
                {
                    numberSequenceReference = PurchReqTable::numRefPurchReqId();
                    this.checkNumber(numberSequenceReference.numberSequenceTable(),fieldNum(PurchReqTable,PurchReqId),this.parmPurchReqId());
                    if (numberSequenceReference.NumberSequenceId && numberSequenceReference.numberSequenceTable().Continuous)
                    {
                        NumberSeq::newReserveNum(numberSequenceReference).reserve(this.parmPurchReqId());
                    }
                }
            }
        }
        else
        {
            if (this.isFieldSet(fieldNum(PurchReqTable, PurchReqId)))
            {
                return;
            }

            if (!this.parmPurchReqId())
            {
                if (this.isSetMethodsCalledFromSave())
                {
                    //this.parmPurchReqId(NumberSeq::newGetNum(PurchParameters::numRefPurchReqId()).num());
                    numberSequenceReference = PurchReqTable::numRefPurchReqId();
                    if (numberSequenceReference)
                    {
                        this.setField(fieldNum(PurchReqTable, PurchReqId), NumberSeq::newGetNum(PurchParameters::numRefPurchReqId()).num());
                    }
                    else
                    {
                        this.setField(fieldNum(PurchReqTable, PurchReqId), this.parmExternalSourceID());
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchReqName</Name>
				<Source><![CDATA[
    protected void setPurchReqName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, PurchReqName)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchReqType</Name>
				<Source><![CDATA[
    protected void setPurchReqType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, PurchReqType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequiredDate</Name>
				<Source><![CDATA[
    protected void setRequiredDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, RequiredDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSourceDocumentHeader</Name>
				<Source><![CDATA[
    protected void setSourceDocumentHeader()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, SourceDocumentHeader)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatus</Name>
				<Source><![CDATA[
    protected void setStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, RequisitionStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSubmittedBy</Name>
				<Source><![CDATA[
    protected void setSubmittedBy()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, SubmittedBy)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSubmittedDateTime</Name>
				<Source><![CDATA[
    protected void setSubmittedDateTime()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqTable, SubmittedDateTime)))
        {
            return;
        }

        if (this.parmStatusToBeSaved() == PurchReqCreationStatus::Approved && this.parmSubmittedBy())
        {
            this.setField(fieldNum(PurchReqTable, SubmittedDateTime), DateTimeUtil::getSystemDateTime());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setPurchReqId();
        this.setPurchReqName();
        this.setStatus();
        this.setPurchReqType();
        this.setSubmittedBy();
        this.setSubmittedDateTime();
        this.setHold();
        this.setHoldExplanation();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxPurchReqTable construct()
    {
        return new AxPurchReqTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructValidateInput</Name>
				<Source><![CDATA[
    static AxPurchReqTable constructValidateInput(PurchReqTable _purchReqTable)
    {
        AxPurchReqTable axPurchReqTable = AxPurchReqTable::newValidateInput();
        axPurchReqTable.purchReqTable(_purchReqTable);

        return axPurchReqTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchReqTable</Name>
				<Source><![CDATA[
    public static AxPurchReqTable newPurchReqTable(PurchReqTable _purchReqTable)
    {
        AxPurchReqTable axPurchReqTable = AxPurchReqTable::construct();

        axPurchReqTable.purchReqTable(_purchReqTable);

        return axPurchReqTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newValidateInput</Name>
				<Source><![CDATA[
    static AxPurchReqTable newValidateInput()
    {
        AxPurchReqTable axPurchReqTable = new AxPurchReqTable();

        axPurchReqTable.validateInput(true);
        return axPurchReqTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>