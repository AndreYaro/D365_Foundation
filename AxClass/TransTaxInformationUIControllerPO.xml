<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransTaxInformationUIControllerPO</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller class for controlling all Purchase Order on new tax information UI and transaction update.
/// </summary>
[TransTaxInfoUIControllerAttribute(tableStr(PurchLine))]
[TransTaxInfoUIControllerAttribute(tableStr(VendInvoiceInfoLine))]
public class TransTaxInformationUIControllerPO extends TransTaxInformationUIControllerAP
{
    PurchLine   purchLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedCompanyLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override the modified method to company location.
    /// </summary>
    /// <param name="_companyLocation">
    /// The form data source company location.
    /// </param>
    protected void modifiedCompanyLocation(FormDataObject _companyLocation)
    {
        SalesPurchJournalLine salesPurchJournalLine;

        super(_companyLocation);

        salesPurchJournalLine = this.parmTaxModelTaxable().getDocumentLineOriginalTable();

        if (salesPurchJournalLine)
        {
            ttsbegin;
            salesPurchJournalLine.selectForUpdate(true);
            salesPurchJournalLine.SalesPurchJournalLine::setLocation(transTaxInformation.CompanyLocation);
            salesPurchJournalLine.doUpdate();
            ttscommit;
            FormDataUtil::getFormDataSource(sourceTable).reread();
            FormDataUtil::getFormDataSource(sourceTable).refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes UI controls and data source for Tax information form.
    /// </summary>
    protected void init()
    {
        if (sourceTable.TableId == tableNum(PurchLine))
        {
            purchLine = sourceTable as PurchLine;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get tax direction.
    /// </summary>
    /// <returns>
    /// The tax direction.
    /// </returns>
    protected TaxDirection getTaxDirection()
    {
        TaxDirection taxDirection;
        
        TaxModelTaxable taxModelTaxableLoc = this.parmTaxModelTaxable();

        if (taxModelTaxableLoc is TaxModelDocLinePurchLineImpl
            || taxModelTaxableLoc is TaxModelDocLineVendInvoiceImpl)
        {
            taxDirection = taxModelTaxableLoc.getQuantity() > 0 ? TaxDirection::IncomingTax : TaxDirection::OutgoingTax;
        }

        return taxDirection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToServiceTaxCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Service tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToServiceTaxCtrls()
    {}

]]></Source>
			</Method>
			<Method>
				<Name>modifiedTaxWithholdSoftwareDeclReceived</Name>
				<Source><![CDATA[
    /// <summary>
    /// To override and remove the parent logic
    /// </summary>
    /// <param name="_taxWithholdSoftwareDeclReceivedField">
    /// The tax withhold Software decl received field information.
    /// </param>
    protected void modifiedTaxWithholdSoftwareDeclReceived(FormDataObject _taxWithholdSoftwareDeclReceivedField)
    {}

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToCustomsCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Customs tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToCustomsCtrls()
    {}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>