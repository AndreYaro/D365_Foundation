<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanReviewEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetReviewBudgetPlanEventHandler</c> class is the event handler class that manages the
/// workflow task started, canceled, and returned events.
/// </summary>
public class BudgetPlanReviewEventHandler implements
    WorkflowElementStartedEventHandler,
    WorkflowElementReturnedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the returned event for the workflow review.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        BudgetPlanWorkflowHelper::rejectWorkflow(_workflowElementEventArgs.parmWorkflowContext().parmRecId(),
                                   _workflowElementEventArgs.parmWorkflowContext().parmWorkflowCorrelationId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles a started event for the workflow item.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// A value that obtains the workflow context of the workflow item that caused the event.
    /// </param>
    public void started(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        BudgetPlanWorkflowHelper::setWorkflowStatus(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            BudgetPlanWorkflowStatus::InReview);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>