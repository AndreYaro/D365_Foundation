<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductTranslationFallbackViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductTranslationFallbackViewModel</c> class is a view model class for all forms that uses product translations (EcoResProductTranslation)
/// as a form data source. Relevant for the <c>EcoResProductTranslationFallbackFeature</c> feature and the fallback view <c>EcoResProductTranslationFallbackView</c>.
/// </summary>
public final class EcoResProductTranslationFallbackViewModel
{
    private FormRun formRun;
    private List fallbackStringControls;
    private List ecoResProductTranslationStringControls;
    private FormDataSource ecoResProductTranslationFallbackViewDS;
    private FormDataSource parentFormDataSource;
    private boolean isFallbackFeatureAndParameterEnabled;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>retainPositionOnResearch</Name>
				<Source><![CDATA[
    /// <summary>
    /// When the fallback translation feature is enabled, a view is added as datasource of this form. This prevents the research to retain the position
    /// properly, as the platform currently does not support views as datasources with regards to this scenario. For this reason, the positioning is explicitly
    /// implemented here.
    /// </summary>
    /// <returns> true if the research method should retain position; otherwise false. </returns>
    public static boolean retainPositionOnResearch()
    {
        return FeatureStateProvider::isFeatureEnabled(EcoResProductTranslationFallbackFeature::instance()) &&
               EcoResProductParameters::find().UseFallbackTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupFallbackTranslationForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Setups the input form to support fallback translation.
    /// </summary>
    /// <param name = "_formRun"> The current form for fallback product translations. </param>
    /// <param name = "_ecoResProductTranslationFallbackViewDS"> The form datasource of <c>EcoResProductTranslationFallbackView</c> view. </param>
    /// <param name = "_parentFormDataSource"> The form data source to link with. </param>
    /// <param name = "_fallbackStringControls"> List of string controls for the fallback form datasource fields.</param>
    /// <param name = "_ecoResProductTranslationStringControls"> List of string controls for the current translation fields. </param>
    /// <returns> A <c>EcoResProductTranslationFallbackViewModel</c> object. </returns>
    [Hookable(false)]
    public static EcoResProductTranslationFallbackViewModel setupFallbackTranslationForm(FormRun _formRun,
                                                                      FormDataSource _ecoResProductTranslationFallbackViewDS,
                                                                      FormDataSource _parentFormDataSource,
                                                                      List _fallbackStringControls, 
                                                                      List _ecoResProductTranslationStringControls)
    {
        var ecoResProductTranslationFallbackViewModel = new EcoResProductTranslationFallbackViewModel();

        ecoResProductTranslationFallbackViewModel.initialize(_formRun,
                                                             _ecoResProductTranslationFallbackViewDS,
                                                             _parentFormDataSource,
                                                             _fallbackStringControls,
                                                             _ecoResProductTranslationStringControls);
        
        ecoResProductTranslationFallbackViewModel.linkFallbackTranslationView();
        ecoResProductTranslationFallbackViewModel.setupFallbackProductTranslationStringControls();

        return ecoResProductTranslationFallbackViewModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupFallbackProductTranslationStringControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hides the form string controls of the EcoResProductTranslation fields or the EcoResProductTranslationFallbackView fields + disabling the 
    /// EcoResProductTranslationFallbackView form datasource depending on whether <c>EcoResProductTranslationFallbackFeature</c> is enabled or not.
    /// </summary>
    private void setupFallbackProductTranslationStringControls()
    {
        if (isFallbackFeatureAndParameterEnabled)
        {
            this.hideStringControls(new ListIterator(ecoResProductTranslationStringControls));
        }
        else
        {
            ecoResProductTranslationFallbackViewDS.queryBuildDataSource().enabled(NoYes::No);
            this.hideStringControls(new ListIterator(fallbackStringControls));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(FormRun _formRun,
                            FormDataSource _ecoResProductTranslationFallbackViewDS,
                            FormDataSource _parentFormDataSource,
                            List _fallbackStringControls,
                            List _ecoResProductTranslationStringControls)
    {
        if (!_ecoResProductTranslationFallbackViewDS.query().dataSourceTable(tableNum(EcoResProductTranslationFallbackView)))
        {
            throw error(strFmt("@SYS19306",funcName()));
        }

        isFallbackFeatureAndParameterEnabled = FeatureStateProvider::isFeatureEnabled(EcoResProductTranslationFallbackFeature::instance()) && EcoResProductParameters::find().UseFallbackTranslation;

        formRun = _formRun;
        ecoResProductTranslationFallbackViewDS = _ecoResProductTranslationFallbackViewDS;
        parentFormDataSource = _parentFormDataSource;
        fallbackStringControls = _fallbackStringControls;
        ecoResProductTranslationStringControls = _ecoResProductTranslationStringControls;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkFallbackTranslationView</Name>
				<Source><![CDATA[
    private void linkFallbackTranslationView()
    {
        if (isFallbackFeatureAndParameterEnabled)
        {
            EcoResProductTranslationFallbackView::queryAddFallbackTranslation(ecoResProductTranslationFallbackViewDS.query(), parentFormDataSource.table());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hideStringControls</Name>
				<Source><![CDATA[
    private void hideStringControls(ListIterator _it)
    {
        while (_it.more())
        {
            formRun.control(_it.value()).visible(NoYes::No);
            _it.next();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>