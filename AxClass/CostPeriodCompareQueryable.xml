<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostPeriodCompareQueryable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostPeriodCompareQueryable</c> class provides a query for the cost calculation period comparison chart on the Cost Administration workspace.
/// </summary>
[SysQueryableExtension(SysQueryableTypeEnum::Xpp)]
public final class CostPeriodCompareQueryable implements SysIQueryableObjectExecutable
{
    SysDataCacheContextId context;
    CostPeriodCompareArgs costPeriodCompareArgs;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    public void execute(SysIDataCacheContext _cacheContext)
    {
        context = _cacheContext.parmId();

        this.getFilterValues(_cacheContext);

        if (costPeriodCompareArgs)
        {
            CostPeriodCompareChartDataSetTable::updateCache(costPeriodCompareArgs, context);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFilterValues</Name>
				<Source><![CDATA[
    private void getFilterValues(SysIDataCacheContext _cacheContext)
    {
        SysDataContextValueFilter dataContextValueFilter = _cacheContext.parmDataContextValue(SysDataContextValueTypeEnum::Filter) as SysDataContextValueFilter;
        SysIFilter filter = dataContextValueFilter.parmSourceFilter();

        FromDate   fromDate = SysFilterValueHelper::getFirstValueRecordFromFilterForType(filter, SysFilterValueTypeEnum::Date, extendedTypeNum(FromDate));
        ToDate     toDate = SysFilterValueHelper::getFirstValueRecordFromFilterForType(filter, SysFilterValueTypeEnum::Date, extendedTypeNum(ToDate));

        costPeriodCompareArgs = CostPeriodCompareArgs::newFromDates(fromDate, toDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public SysQueryablePacked pack()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(SysQueryablePacked _packed)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMethod</Name>
				<Source><![CDATA[
    public SysDataChangeDetectionMethodEnum parmMethod()
    {
        return SysDataChangeDetectionMethodEnum::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIdentifier</Name>
				<Source><![CDATA[
    public SysQueryableIdentifier parmIdentifier()
    {
        return classStr(CostPeriodCompareQueryable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    public str parmDescription()
    {
        return "@CostManagement:CostPeriodCompareQueryable_Class_Description";
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDependencySet</Name>
				<Source><![CDATA[
    public SysIDataChangeDetectionDependencySet parmDependencySet()
    {
        SysIDataChangeDetectionDependencySet dependencySet = SysDataChangeDetectionDependencySetFactory::newFromType(SysDataChangeDetectionDependencyTypeEnum::None);

        return dependencySet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CostPeriodCompareQueryable construct()
    {
        return new CostPeriodCompareQueryable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>