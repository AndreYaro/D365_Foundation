<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCovAvgPopulator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class LedgerCovAvgPopulator
{
    private LedgerCovAvgIExecutionContext context;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateForMonth</Name>
				<Source><![CDATA[
    internal void populateForMonth(TransDate _timeInMonth)
    {
        TransDAte startOfMonth = dateStartMth(_timeInMonth);
        TransDate endOfMonth = dateEndMth(startOfMonth);

        LedgerCovAvgAverageDaysMap avgDaysTmpTable = context.getPopulatedAverageTmpTable(startOfMonth, endOfMonth);

        select firstonly avgDaysTmpTable;

        if (avgDaysTmpTable)
        {
            this.updateRecords(avgDaysTmpTable);
            this.insertRecords(avgDaysTmpTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRecords</Name>
				<Source><![CDATA[
    private void updateRecords(LedgerCovAvgAverageDaysMap _tmpTableMap)
    {
        Query q = new Query();
        QueryBuildDataSource qbdsUpdateTable = q.addDataSource(_tmpTableMap.TableId);
        
        QueryBuildDataSource qbdsSourceTable = qbdsUpdateTable.addDataSource(_tmpTableMap.TableId);
        qbdsSourceTable.addLink(context.getAverageTableAccountField(), context.getAverageTableAccountField());
        qbdsSourceTable.addLink(context.getAverageTableStartOfMonthField(), context.getAverageTableStartOfMonthField());
        qbdsSourceTable.joinMode(JoinMode::InnerJoin);

        qbdsSourceTable.cursor(_tmpTableMap);

        Map fieldSetMap = new Map(Types::String, Types::String);

        fieldSetMap.insert(fieldId2Name(_tmpTableMap.TableId, context.getAverageTableTransactionCountField()),
            this.buildMap(qbdsSourceTable.name(), context.getAverageTableTransactionCountField(), _tmpTableMap.TableId));

        fieldSetMap.insert(fieldId2Name(_tmpTableMap.TableId, context.getAverageTableNumberOfDaysField()),
            this.buildMap(qbdsSourceTable.name(), context.getAverageTableNumberOfDaysField(), _tmpTableMap.TableId));

        Query::update_recordset(fieldSetMap, q, true, true, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildMap</Name>
				<Source><![CDATA[
    private str buildMap(str _sourceQbdsTableName, FieldId _sourceFieldId, TableId _sourceTableId)
    {
        return strFmt('%1.%2',
            _sourceQbdsTableName,
            fieldId2Name(_sourceTableId, _sourceFieldId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRecords</Name>
				<Source><![CDATA[
    private void insertRecords(LedgerCovAvgAverageDaysMap _tmpTableMap)
    {
        Query q = new Query();
        QueryBuildDataSource qbdsUpdateTable = q.addDataSource(_tmpTableMap.TableId);
        qbdsUpdateTable.cursor(_tmpTableMap);
        
        QueryBuildDataSource qbdsSourceTable = qbdsUpdateTable.addDataSource(_tmpTableMap.TableId);
        qbdsSourceTable.addLink(context.getAverageTableAccountField(), context.getAverageTableAccountField());
        qbdsSourceTable.addLink(context.getAverageTableStartOfMonthField(), context.getAverageTableStartOfMonthField());
        qbdsSourceTable.joinMode(JoinMode::NoExistsJoin);

        q.clearAllFields();

        var fieldList = qbdsUpdateTable.fields();
        fieldList.dynamic(1);

        var insertRecordsetMap = new Map(Types::String, Types::Container);

        this.addDestinationFieldToFieldMapping(
                        fieldList,
                        _tmpTableMap.TableId,
                        insertRecordsetMap,
                        qbdsUpdateTable.uniqueId(),
                        fieldId2Name(_tmpTableMap.TableId, context.getAverageTableAccountField()),
                        fieldId2Name(_tmpTableMap.TableId, context.getAverageTableAccountField()));

        this.addDestinationFieldToFieldMapping(
                        fieldList,
                        _tmpTableMap.TableId,
                        insertRecordsetMap,
                        qbdsUpdateTable.uniqueId(),
                        fieldId2Name(_tmpTableMap.TableId, context.getAverageTableStartOfMonthField()),
                        fieldId2Name(_tmpTableMap.TableId, context.getAverageTableStartOfMonthField()));

        this.addDestinationFieldToFieldMapping(
                        fieldList,
                        _tmpTableMap.TableId,
                        insertRecordsetMap,
                        qbdsUpdateTable.uniqueId(),
                        fieldId2Name(_tmpTableMap.TableId, context.getAverageTableNumberOfDaysField()),
                        fieldId2Name(_tmpTableMap.TableId, context.getAverageTableNumberOfDaysField()));

        this.addDestinationFieldToFieldMapping(
                        fieldList,
                        _tmpTableMap.TableId,
                        insertRecordsetMap,
                        qbdsUpdateTable.uniqueId(),
                        fieldId2Name(_tmpTableMap.TableId, context.getAverageTableTransactionCountField()),
                        fieldId2Name(_tmpTableMap.TableId, context.getAverageTableTransactionCountField()));

        LedgerCovAvgAverageDaysMap target = context.getTableBuffer();
        LedgerCovAvgPopulatorHelper::disableAOSMethodsForInsertAndUpdate(target);

        Query::insert_recordset(target, insertRecordsetMap, q);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDestinationFieldToFieldMapping</Name>
				<Source><![CDATA[
    protected void addDestinationFieldToFieldMapping(
        QueryBuildFieldList _fieldList,
        int _tableId,
        Map _fieldMapping,
        int _dataSourceUniqueId,
        FieldName _sourceFieldName,
        FieldName _destinationFieldName)
    {
        _fieldList = _fieldList.addField(fieldName2Id(_tableId, _sourceFieldName));
        _fieldMapping.insert(_destinationFieldName, [_dataSourceUniqueId, _sourceFieldName]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromContext</Name>
				<Source><![CDATA[
    internal static LedgerCovAvgPopulator newFromContext(LedgerCovAvgIExecutionContext _context)
    {
        LedgerCovAvgPopulator populator = new LedgerCovAvgPopulator();
        populator.context = _context;

        return populator;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>