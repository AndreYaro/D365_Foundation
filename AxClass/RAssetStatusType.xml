<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetStatusType</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetStatusType
{
    RAssetTable   rAssetTable;
    #define.methodPrefix("allow")
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowAcquisition</Name>
				<Source><![CDATA[
        public boolean allowAcquisition(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowAcquisitionAdj</Name>
				<Source><![CDATA[
        public boolean allowAcquisitionAdj(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowChangeToType</Name>
				<Source><![CDATA[
        public boolean allowChangeToType(RAssetStatus _assetStatus,
                                     boolean      _showMessage = true)
    {
        return _showMessage ? checkFailed("@GLS116407") : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowCompanyIssue</Name>
				<Source><![CDATA[
        public boolean allowCompanyIssue(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowCompanyReceipt</Name>
				<Source><![CDATA[
        public boolean allowCompanyReceipt(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDepreciation</Name>
				<Source><![CDATA[
        public boolean allowDepreciation(RAssetStandardId _rAssetStandardId = "",
                                     TransDate        _transDate        = dateNull())
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDepreciationAdj</Name>
				<Source><![CDATA[
        public boolean allowDepreciationAdj(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposal</Name>
				<Source><![CDATA[
        public boolean allowDisposal(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalSale</Name>
				<Source><![CDATA[
        public boolean allowDisposalSale(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalSaleReverse</Name>
				<Source><![CDATA[
        public boolean allowDisposalSaleReverse(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDisposalScrap</Name>
				<Source><![CDATA[
        public boolean allowDisposalScrap(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowLending</Name>
				<Source><![CDATA[
        public boolean allowLending(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowLendingRet</Name>
				<Source><![CDATA[
        public boolean allowLendingRet(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowOther</Name>
				<Source><![CDATA[
        public boolean allowOther(RAssetStandardId _rAssetStandardId = "")
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowPartialTakeDown</Name>
				<Source><![CDATA[
        public boolean allowPartialTakeDown(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowRevaluation</Name>
				<Source><![CDATA[
        public boolean allowRevaluation(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowWriteDownAdj</Name>
				<Source><![CDATA[
        public boolean allowWriteDownAdj(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowWriteUpAdj</Name>
				<Source><![CDATA[
        public boolean allowWriteUpAdj(RAssetStandardId _rAssetStandardId = "")
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeLended</Name>
				<Source><![CDATA[
        protected boolean canBeLended(RAssetStandardId _assetStandardId)
    {
        RAssetLending   rAssetLending;
        RAssetStandards rAssetStandards;
        ;

        rAssetLending = RAssetLending::findLastLent(rAssetTable.AccountNum);

        if (! rAssetLending)
            return false;

        rAssetStandards = RAssetStandards::find(rAssetTable.AccountNum, _assetStandardId);

        if (rAssetStandards)
            return ! rAssetStandards.LendingPosted;

        return false;

    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeLendRet</Name>
				<Source><![CDATA[
        protected boolean canBeLendRet(RAssetStandardId _assetStandardId)
    {
        RAssetLending   rAssetLending;
        RAssetStandards rAssetStandards;
        ;

        rAssetLending = RAssetLending::findLastLent(rAssetTable.AccountNum);

        if (! rAssetLending)
            return false;

        rAssetStandards = RAssetStandards::find(rAssetTable.AccountNum, _assetStandardId);

        if (rAssetStandards)
            return rAssetStandards.LendingPosted;

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPrice</Name>
				<Source><![CDATA[
        public boolean checkPrice()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>disposed</Name>
				<Source><![CDATA[
        public boolean disposed()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOkToSell</Name>
				<Source><![CDATA[
        public boolean isOkToSell()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>rAssetStatus</Name>
				<Source><![CDATA[
        public RAssetStatus rAssetStatus()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>rAssetTable</Name>
				<Source><![CDATA[
        protected RAssetTable rAssetTable(RAssetTable _rAssetTable = rAssetTable)
    {
        ;
        rAssetTable = _rAssetTable;
        return rAssetTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLedger</Name>
				<Source><![CDATA[
        public boolean updateLedger()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowStatusRangeValue</Name>
				<Source><![CDATA[
        public static Query allowStatusRangeValue(Query           _query,
                                              RAssetTransType _rAssetTransType,
                                              SysElementName  _methodName = '')
    {
        DictEnum              statusType = new DictEnum(enumNum(RAssetStatus));
        int                   i;
        QueryBuildDataSource  qbd;
        Range                 range;
        RAssetStatusType      rAssetStatusType;
        SysDictClass          dictClass = new SysDictClass(classNum(RAssetStatusType));
        ExecutePermission     executePermission   = new ExecutePermission();

        qbd = _query.dataSourceTable(tableNum(RAssetTable));
        if (! qbd)
        {
            return _query;
        }
        for (i = 0; i < statusType.values(); i++)
        {
            rAssetStatusType = RAssetStatusType::newAssetStatus(statusType.index2Value(i));
            executePermission.assert();
            //BP Deviation documented
            if (dictClass.callObject(_methodName ?
                                     _methodName :
                                     #methodPrefix + new DictEnum(enumNum(RAssetTransType)).value2Symbol(_rAssetTransType), rAssetStatusType))
            {
                range += queryValue(statusType.index2Value(i)) + "@SYS35667";
            }
            CodeAccessPermission::revertAssert();
        }
        qbd.addRange(fieldNum(RAssetTable, Status)).value(subStr(range, 1, strLen(range)-1));

        return _query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public server static RAssetStatusType construct(Common _common)
    {
        CustInvoiceTrans    custInvoiceTrans;
        RAssetTable         rAssetTable;
        RAssetStatusType    rAssetStatusType;

        switch (_common.TableId)
        {
            case tableNum(RAssetTable):
                rAssetTable = _common;
                break;

            case tableNum(RAssetTrans):
                rAssetTable = _common.assetTable();
                break;

            case tableNum(SalesLine):
                rAssetTable = RAssetTable::find(_common.(fieldNum(SalesLine, AssetId_RU)));
                break;

            case tableNum(RAssetPurchTrans):
                rAssetTable = RAssetTable::find(_common.(fieldNum(RAssetPurchTrans, AssetId)));
                break;

            case tableNum(LedgerJournalTrans):
                rAssetTable = RAssetTable::find(_common.parmAccount());
                break;

            case tableNum(CustInvoiceTrans):
                custInvoiceTrans = _common as custInvoiceTrans;
                rAssetTable = RAssetTable::find(custInvoiceTrans.custInvoiceTrans_RU().AssetId_RU);
                break;

            case tableNum(CustInvoiceLine):
                rAssetTable = RAssetTable::find(_common.(fieldNum(CustInvoiceLine, AssetId_RU)));
                break;

            case tableNum(RAssetTransferTrans):
                rAssetTable = RAssetTable::find(_common.(fieldNum(RAssetTransferTrans, AccountNum)));
                break;

            default:
                throw error(strFmt("@SYS23396", funcName()));
        }
        rAssetStatusType = RAssetStatusType::newAssetStatus(rAssetTable.Status);
        rAssetStatusType.rAssetTable(rAssetTable);
        return rAssetStatusType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        private static ClassDescription  description()
    {
        return "@GLS116354";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAssetStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a <c>RAssetStatusType</c> object.
    /// </summary>
    /// <param name = "_rAssetStatus">An asset status.</param>
    /// <returns>The proper instance of <c>RAssetStatusType</c> class.</returns>
    protected static RAssetStatusType newAssetStatus(RAssetStatus _rAssetStatus)
    {
        switch (_rAssetStatus)
        {
            case RAssetStatus::Open             : return new RAssetStatusType_Open();
            case RAssetStatus::Suspended        : return new RAssetStatusType_Suspended();
            case RAssetStatus::Closed           : return new RAssetStatusType_Closed();
            case RAssetStatus::Sold             : return new RAssetStatusType_DisposedSold();
            case RAssetStatus::SoldInvoice      : return new RAssetStatusType_DisposedSoldInvoice();
            case RAssetStatus::Scrapped         : return new RAssetStatusType_DisposedScrapped();
            case RAssetStatus::NoAcquisition    : return new RAssetStatusType_NoAcquisition();
            case RAssetStatus::PurchInvoice     : return new RAssetStatusType_purchInvoice();
            case RAssetStatus::Lended           : return new RAssetStatusType_Lended();
            case RAssetStatus::Disposed         : return new RAssetStatusType_DisposedDisposal();
        }
        return new RAssetStatusType_Open();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>