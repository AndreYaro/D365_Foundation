<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCBackEndConfigurationOutput</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is a container for the output values of the back end configuration.
/// </summary>
class PCBackEndConfigurationOutput
{
    boolean                 isConfigurationReused;
    InventDim               appliedSupplyInventDim;
    EcoResConfigurationName appliedConfigurationName;
    BOMId                   appliedBOMId;
    RouteId                 appliedRouteId;
    SalesPrice              price;

    #DEFINE.CurrentVersion(1)

    #LOCALMACRO.CurrentList
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }
]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#currentVersion,
                isConfigurationReused,
                buf2Con(appliedSupplyInventDim, true),
                appliedConfigurationName,
                appliedBOMid,
                appliedRouteId,
                price];
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmAppliedBOMId</Name>
				<Source><![CDATA[
    public BomId parmAppliedBOMId(BomId _appliedBOMId = appliedBOMId)
    {
        appliedBOMId = _appliedBOMId;

        return appliedBOMId;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmAppliedConfigurationName</Name>
				<Source><![CDATA[
    public EcoResConfigurationName parmAppliedConfigurationName(EcoResConfigurationName _appliedConfigurationName = appliedConfigurationName)
    {
        appliedConfigurationName = _appliedConfigurationName;

        return appliedConfigurationName;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmAppliedRouteId</Name>
				<Source><![CDATA[
    public RouteId parmAppliedRouteId(RouteId _appliedRouteId = appliedRouteId)
    {
        appliedRouteId = _appliedRouteId;

        return appliedRouteId;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmAppliedSupplyInventDim</Name>
				<Source><![CDATA[
    public InventDim parmAppliedSupplyInventDim(InventDim _appliedSupplyInventDim = appliedSupplyInventDim)
    {
        appliedSupplyInventDim = _appliedSupplyInventDim;

        return appliedSupplyInventDim;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmIsConfigurationReused</Name>
				<Source><![CDATA[
    public boolean parmIsConfigurationReused(boolean _isConfigurationReused = isConfigurationReused)
    {
        isConfigurationReused = _isConfigurationReused;

        return isConfigurationReused;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmPrice</Name>
				<Source><![CDATA[
    public SalesPrice parmPrice(SalesPrice _price = price)
    {
        price = _price;

        return price;
    }
]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer version     = conPeek(_packedClass, 1);

        switch (version)
        {
            case #CurrentVersion:
                isConfigurationReused       = conPeek(_packedClass, 2);
                appliedSupplyInventDim      = con2Buf(conPeek(_packedClass, 3));
                appliedConfigurationName    = conPeek(_packedClass, 4);
                appliedBOMId                = conPeek(_packedClass, 5);
                appliedRouteId              = conPeek(_packedClass, 6);
                price                       = conPeek(_packedClass, 7);
                break;
            default:
                return false;
        }

        return true;
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCBackEndConfigurationOutput construct()
    {
        return new PCBackEndConfigurationOutput();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>