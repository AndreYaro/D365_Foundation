<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesStatusOrderedList</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Represents the ordered list of enumeration values for <c>SalesStatus</c> enum.
/// Allows to add values to the list to support extension.
/// </summary>
public class SalesStatusOrderedList implements Enumerable
{
    List salesStatusOrderedList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the enumerator of the ordered list.
    /// </summary>
    /// <returns>An instance of <c>ListEnumerator</c> class.</returns>
    public Enumerator getEnumerator()
    {
        return salesStatusOrderedList.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addAfter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>SalesStatus</c> enum to the ordered list after the specified value.
    /// </summary>
    /// <param name = "_newSalesStatusValue">Value to be added.</param>
    /// <param name = "_addAfterValue">Value to add after.</param>
    /// <exception>Could not find _addAfterValue in the ordered list.</exception>
    public void addAfter(SalesStatus _newSalesStatusValue, SalesStatus _addAfterValue)
    {
        ListIterator listIterator = new ListIterator(salesStatusOrderedList);
        while (listIterator.more())
        {
            if (listIterator.value() == _addAfterValue)
            {
                listIterator.next();
                listIterator.insert(_newSalesStatusValue);
                return;
            }
            listIterator.next();
        }
        throw error(strFmt("@SCM:CouldNotAddValueXAfterValueY_YnotFound", _newSalesStatusValue, _addAfterValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addStart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>SalesStatus</c> enum to the start of the ordered list.
    /// </summary>
    /// <param name = "_salesStatus">Value to be added.</param>
    public void addStart(SalesStatus _salesStatus)
    {
        salesStatusOrderedList.addStart(_salesStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEnd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>SalesStatus</c> enum to the end of the ordered list.
    /// </summary>
    /// <param name = "_salesStatus">Value to be added.</param>
    public void addEnd(SalesStatus _salesStatus)
    {
        salesStatusOrderedList.addEnd(_salesStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        this.initializeSalesStatusOrderedList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnumerateInOrder</Name>
				<Source><![CDATA[
    private void setEnumerateInOrder(SortOrder _enumerateInOrder)
    {
        if (_enumerateInOrder == SortOrder::Descending)
        {
            this.reverseOrderedList();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reverseOrderedList</Name>
				<Source><![CDATA[
    private void reverseOrderedList()
    {
        List reversedSalesStatusOrderedList = new List(Types::Enum);
        ListEnumerator enumerator = this.getEnumerator() as ListEnumerator;
        
        while (enumerator.moveNext())
        {
            reversedSalesStatusOrderedList.addStart(enumerator.current());
        }

        salesStatusOrderedList = reversedSalesStatusOrderedList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the <c>SalesStatusOrderedList</c> class to be enumerated in the specified order.
    /// </summary>
    /// <param name="_enumerateInOrder">Enumerate the values in the enum in the specified order.</param>
    /// <returns>An instance of <c>SalesStatusOrderedList</c> class.</returns>
    public static SalesStatusOrderedList newFromOrder(SortOrder _enumerateInOrder = SortOrder::Ascending)
    {
        SalesStatusOrderedList orderedList = new SalesStatusOrderedList();
        orderedList.setEnumerateInOrder(_enumerateInOrder);
        return orderedList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeSalesStatusOrderedList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the list with all the applicable values of <c>SalesStatus</c> enumeration in ascending order.
    /// </summary>
    private void initializeSalesStatusOrderedList()
    {
        salesStatusOrderedList = new List(Types::Enum);
        salesStatusOrderedList.addEnd(SalesStatus::None);
        salesStatusOrderedList.addEnd(SalesStatus::Backorder);
        salesStatusOrderedList.addEnd(SalesStatus::Delivered);
        salesStatusOrderedList.addEnd(SalesStatus::Invoiced);
        salesStatusOrderedList.addEnd(SalesStatus::Canceled);

        this.initializeSalesStatusOrderedListDelegate(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeSalesStatusOrderedListDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Use this delegate to add new enumeration values to the list in the ascending sort order, when extending the <c>SalesStatus</c> enum.
    /// </summary>
    /// <param name = "_orderedList">The reference to the ordered list.</param>
    delegate void initializeSalesStatusOrderedListDelegate(SalesStatusOrderedList _orderedList)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>