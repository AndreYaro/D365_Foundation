<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryTransactionIssueRegistrationAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventoryTransactionIssueRegistrationAction</c> class is responsible for generating registered issue warehouse inventory transactions.
/// </summary>
internal class WHSInventoryTransactionIssueRegistrationAction extends WHSInventoryTransactionRegistrationAction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>transactionType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected WHSInventoryTransactionTypeEnum transactionType()
    {
        return WHSInventoryTransactionTypeEnum::RegisteredIssue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionInventoryDirectionSign</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected int transactionInventoryDirectionSign()
    {
        return -1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postInsertTransaction</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected void postInsertTransaction(WHSInventoryTransactionActionParameters _parameters, WHSInventoryTransaction _transaction, WHSWorkInventoryTransactionDescriptor _transactionDescriptor)
    {
        var issueParameters = _parameters as WHSInventoryTransactionActionIssueRegistrationParameters;
        if (issueParameters == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        super(_parameters, _transaction, _transactionDescriptor);

        if (issueParameters.parmShouldAdjustOnhandWeightWithinThresholds())
        {
            this.adjustOnhandWeightWithinThresholds(_transactionDescriptor);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustOnhandWeightWithinThresholds</Name>
				<Source><![CDATA[
    private void adjustOnhandWeightWithinThresholds(WHSWorkInventoryTransactionDescriptor _transactionDescriptor)
    {
        WHSWorkInventoryTransactionDescriptorEnumerator descriptorEnumerator = _transactionDescriptor.getEnumerator();
        while (descriptorEnumerator.moveNext())
        {
            WHSWorkInventoryTransactionDescriptorElement descriptorElement = descriptorEnumerator.current();

            PDSCatchWeightOnHandAdjustment::adjustOnhandWeightWithinThresholds(
                descriptorElement.parmItemId(),
                descriptorElement.parmInventoryDimensionsDescriptor().convertToInventDim(true).inventDimId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSInventoryTransactionIssueRegistrationAction construct()
    {
        return new WHSInventoryTransactionIssueRegistrationAction();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>