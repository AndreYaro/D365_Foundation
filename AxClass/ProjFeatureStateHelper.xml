<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjFeatureStateHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjFeatureStateHelper</c> class allows feature state to be seen in another model
/// </summary>
public class ProjFeatureStateHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isProjInvoiceProposalSearchFundingSourceFeatureEnabled</Name>
				<Source><![CDATA[
    [SysObsolete('This method is obsolete.  The dependent functionality is now controlled by the ProjParameters.SelectProjectInvoiceProposalByFundingSource field.', true, 11\5\2023)]
    public static boolean isProjInvoiceProposalSearchFundingSourceFeatureEnabled()
    {
        ProjParameters projParameters = ProjParameters::find();

        return projParameters.SelectProjectInvoiceProposalByFundingSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjEstimatesToRevRecRenameFeatureEnabled</Name>
				<Source><![CDATA[
    public static boolean isProjEstimatesToRevRecRenameFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(ProjEstimatesToRevRecRenameFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInvoiceFormsHeaderLineViewFeatureEnabled</Name>
				<Source><![CDATA[
    public static boolean isInvoiceFormsHeaderLineViewFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(ProjEnableInvoiceFormsHeaderLineViewFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjEnableAdvancedJournalErrorTransferFeatureEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean isProjEnableAdvancedJournalErrorTransferFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(ProjEnableAdvancedJournalErrorTransferFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjProjectTransactionsListPageVendFeatureEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean isProjProjectTransactionsListPageVendFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(ProjProjectTransactionsListPageVendFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjCancelItemReqPackingslipFeatureEnabled</Name>
				<Source><![CDATA[
    public static boolean isProjCancelItemReqPackingslipFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(ProjCancelItemReqPackingslipFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjCancelPOReceiptWithItemRequirementFeatureEnabled</Name>
				<Source><![CDATA[
    public static boolean isProjCancelPOReceiptWithItemRequirementFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(ProjCancelPOReceiptWithItemRequirementFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjDefaultDimensionRuleFeatureEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean isProjDefaultDimensionRuleFeatureEnabled(DataAreaId _dataAreaId = curExt())
    {
        return ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled(_dataAreaId) && FeatureStateProvider::isFeatureEnabled(ProjDefaultDimensionRuleFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjTroubleshootingWorkspaceFeatureEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean isProjTroubleshootingWorkspaceFeatureEnabled(DataAreaId _dataAreaId = curExt())
    {
        return ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled(_dataAreaId) && FeatureStateProvider::isFeatureEnabled(ProjTroubleshootingWorkspaceFeature::instance());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>