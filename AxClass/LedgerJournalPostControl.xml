<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalPostControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerJournalPostControl</c> class has methods to support journal posting restrictions.
/// </summary>
public class LedgerJournalPostControl
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>postControlEnabledForJournalType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether posting restrictions apply to the specified journal type.
    /// </summary>
    /// <param name="_journalType">
    ///    The type of journal to check if posting restriction apply.
    /// </param>
    /// <returns>
    ///    true if posting restrictions apply to the specified journal type; otherwise, false.
    /// </returns>
    public static boolean postControlEnabledForJournalType(LedgerJournalType _journalType)
    {
        boolean postingRestrictionEnabled = false;

        switch (_journalType)
        {
            //  Ledger types:
            case LedgerJournalType::Allocation:
            case LedgerJournalType::Assets:
            case LedgerJournalType::Daily:
            case LedgerJournalType::Elimination:
            case LedgerJournalType::ReportingCurrencyAdjustment:

            //  Bank types:
            case LedgerJournalType::BankChequeReversal:
            case LedgerJournalType::BankDepositPaymCancel:

            //  Customer types:
            case LedgerJournalType::CustBillOfExchangeDraw:
            case LedgerJournalType::CustBillOfExchangeProtest:
            case LedgerJournalType::CustBillOfExchangeRedraw:
            case LedgerJournalType::CustBillOfExchangeSettle:
            case LedgerJournalType::CustPayment:
            case LedgerJournalType::CustPaymRemittance:

            //  Project types:
            case LedgerJournalType::Cost:

            //  Vendor types:
            case LedgerJournalType::Approval:
            case LedgerJournalType::Payment:
            case LedgerJournalType::PurchaseLedger:
            case LedgerJournalType::VendInvoiceRegister:
            case LedgerJournalType::VendPaymRemittance:
            case LedgerJournalType::VendPromissoryNoteDraw:
            case LedgerJournalType::VendPromissoryNoteRedraw:
            case LedgerJournalType::VendPromissoryNoteSettle:
                postingRestrictionEnabled = true;
                break;
            default:
                break;
        }

        return postingRestrictionEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetAllLedgerJournalPostControls</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets the posting restrictions for all users and user groups.
    /// </summary>
    /// <remarks>
    ///    The reset process consists of the following steps:
    ///    <list type="number">
    ///       <item>
    ///          <description>The posting restriction is deleted for any user group that no longer has posting
    ///          permissions to a journal name. </description>
    ///       </item>
    ///       <item>
    ///          <description>Posting restrictions are re-calculated and updated for: any user that has been added
    ///          to a user group, any user that has been removed from a user group that has post permission to a
    ///          journal name, and for any user belonging to a group where the post permissions have changed.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             The LastSetupTimestamp field in the <c>LedgerJournalPostControlUserGroup</c> table is updated with
    ///             the current universal time.
    ///          </description>
    ///       </item>
    ///    </list>
    /// </remarks>
    public static void resetAllLedgerJournalPostControls()
    {
        LedgerJournalPostControlManager::resetAllLedgerJournalPostControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>userHasPostControl</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether or not a specific user has posting restrictions enabled for the ledger journal name.
    /// </summary>
    /// <param name="_ledgerJournalName">
    ///    The ledger journal name.
    /// </param>
    /// <param name="_ledgerJournalType">
    ///    The ledger journal type.
    /// </param>
    /// <param name="_userId">
    ///    The ID of the user.
    /// </param>
    /// <param name="_resetLedgerJournalPostControl">
    ///    A Boolean value. Set to true if the posting restriction should be reset; otherwise, set to false;
    ///    optional.
    /// </param>
    /// <returns>
    ///    true if the specified user has posting restrictions enabled for the journal name; otherwise, false.
    /// </returns>
    public static boolean userHasPostControl(LedgerJournalNameId _ledgerJournalName, LedgerJournalType _ledgerJournalType, UserId _userId, boolean _resetLedgerJournalPostControl = true)
    {
        LedgerJournalPostControlManager ledgerJournalPostControlManager;
        boolean hasPostControl = false;

        if (LedgerJournalPostControlManager::hasPostControlSetup(_ledgerJournalName) == true)
        {
            if (_resetLedgerJournalPostControl)
            {
                ledgerJournalPostControlManager = LedgerJournalPostControlManager::newWithLedgerJournalNameIdAndType(_ledgerJournalName, _ledgerJournalType);
                ledgerJournalPostControlManager.resetLedgerJournalPostControl(_userId);
            }

            if (LedgerJournalPostControlUser::exist(_ledgerJournalName, _userId))
            {
                hasPostControl = true;
            }
        }

        return hasPostControl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>