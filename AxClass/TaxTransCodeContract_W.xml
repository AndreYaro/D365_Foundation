<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransCodeContract_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Contract class for <c>TaxTransCode</c> report.
/// </summary>
[
    DataContract,
    SysOperationContractProcessing(classStr(TaxTransCodeUIBuilder_W), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class TaxTransCodeContract_W implements SysOperationValidatable
{
    VatDueDate_W fromVatDate;
    VatDueDate_W toVatDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromVatRegisterDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FromVatDate'),
        SysOperationLabelAttribute(literalStr('@Tax:TaxFromDateOfVATRegister'))
    ]
    public VatDueDate_W parmFromVatRegisterDate(VatDueDate_W _fromVatDate = fromVatDate)
    {
        fromVatDate = _fromVatDate;
        return fromVatDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToVatRegisterDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ToVatDate'),
        SysOperationLabelAttribute(literalStr('@Tax:TaxToDateOfVATRegister'))
    ]
    public VatDueDate_W parmToVatRegisterDate(VatDueDate_W _toVatDate = toVatDate)
    {
        toVatDate = _toVatDate;
        return toVatDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the to vat date latter than from vat date.
    /// </summary>
    /// <returns>
    /// A boolean value that indicates whether the contract is valid.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (fromVatDate > toVatDate)
        {
            isValid = checkFailed("@Tax:TaxCompareDateOfVATRegister");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>