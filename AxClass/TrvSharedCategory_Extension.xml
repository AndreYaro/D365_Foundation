<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvSharedCategory_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
static class TrvSharedCategory_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBeUsedInExpense</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the can be used expense role type value for the shared category.
    /// </summary>
    /// <param name = "_sharedCategory">
    /// The shared category record.
    /// </param>
    /// <param name = "_set">
    /// A Boolean value that indicates whether the value has been modified.
    /// </param>
    /// <param name = "_canBeUsed">
    /// If the role can be used or not.
    /// </param>
    /// <returns>
    /// Returns yes if expense role type is being used;  otherwise, No.
    /// </returns>
    public static edit CanBeUsedInExpense canBeUsedInExpense(SharedCategory _sharedCategory, boolean _set, CanBeUsedInExpense _canBeUsed)
    {
        return SharedCategory_Extension::updateSharedCategoryRoles(_sharedCategory, _set, _canBeUsed, CategoryRoleType::Expense);
    }

]]></Source>
			</Method>
			<Method>
				<Name>expType</Name>
				<Source><![CDATA[
    public static edit TrvExpTypeEDT expType(SharedCategory _sharedCategory, boolean _set, TrvExpTypeEDT _expType)
    {
        SharedCategoryRoles sharedCategoryRoles;
        TrvCostType trvCostType;
        CategoryTable categoryTable;

        //check company-specific category reference
        if (_set)
        {
            while select crossCompany RecId, DataAreaId from trvCostType where trvCostType.CostType == _sharedCategory.CategoryId && trvCostType.ExpType != _expType
            {
                select firstonly crosscompany RecId from categoryTable where categoryTable.DataAreaId == trvCostType.DataAreaId && categoryTable.SharedCategory == _sharedCategory.RecId;
                if (categoryTable.RecId)
                {
                    checkFailed("@SYS190124");
                    return _sharedCategory.expType(false, TrvExpType::Empty);
                }
            }
        }

        if (_set)
        {
            select forupdate sharedCategoryRoles where sharedCategoryRoles.GlobalCategory == _sharedCategory.RecId &&
                sharedCategoryRoles.GlobalCategoryRoleType == SharedCategoryRoleType::findRoleType(CategoryRoleType::Expense).RecId;

            if (sharedCategoryRoles.RecId)
            {
                ttsbegin;
                sharedCategoryRoles.ExpenseType = _expType;
                sharedCategoryRoles.update();
                ttscommit;
            }
        }
        else
        {
            select firstonly sharedCategoryRoles where sharedCategoryRoles.GlobalCategory == _sharedCategory.RecId &&
                sharedCategoryRoles.GlobalCategoryRoleType == SharedCategoryRoleType::findRoleType(CategoryRoleType::Expense).RecId;

            if (sharedCategoryRoles.RecId)
            {
                _expType = sharedCategoryRoles.ExpenseType;
            }
            else
            {
                _expType = TrvExpType::Empty;
            }
        }

        return _expType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExpType</Name>
				<Source><![CDATA[
    public static TrvExpTypeEDT getExpType(SharedCategoryId _categoryID)
    {
        SharedCategory  sharedCategory;
        TrvExpTypeEDT   trvExpTypeEDT;

        select firstonly sharedCategory where sharedCategory.CategoryId == _categoryID;
        if (sharedCategory.RecId)
        {
            trvExpTypeEDT = sharedCategory.expType(false, TrvExpType::Empty);
        }

        return trvExpTypeEDT;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>