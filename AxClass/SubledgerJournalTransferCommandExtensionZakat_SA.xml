<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJournalTransferCommandExtensionZakat_SA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Zakat feature extension for the <c>SubledgerJournalTransferCommand</c> class.
/// </summary>
[SourceDocumentExtensionAttribute()]
class SubledgerJournalTransferCommandExtensionZakat_SA extends SubledgerJournalTransferCommandExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertedGeneralJournalAccountEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the record ID of the <c>GeneralJournalAccountEntry</c> table, insert into the <c>GeneralJournalAccountEntry_SA</c> table.
    /// </summary>
    /// <param name = "_transferidVal">
    /// Tranfer ID
    /// </param>
    /// <param name = "_sourceDocument">
    /// Source document header
    /// </param>
    /// <param name = "_doSummarization">
    /// The <c>SubledgerJournalAccountEntry</c> records should be summarized on transfer or not
    /// </param>
    public void insertedGeneralJournalAccountEntry(RefRecId _transferidVal, SourceDocument _sourceDocument, boolean _doSummarization)
    {
        GeneralJournalAccountEntry   generalJournalAccountEntryLoc;
        SubLedgerJournalAccountEntryView subLedgerJournalAccountEntryView;
        sourceDocumentHeader    sourceDocumentHeader;
        generalJournalEntry generalJournalEntry;
        subledgerVoucherGeneralJournalEntry subledgerVoucherGeneralJournalEntry;
        dataAreaId  dataAreaId;

        if (_transferidVal != 0)
        {
            while select RecId from generalJournalAccountEntryLoc
            exists join subLedgerJournalAccountEntryView
                where subLedgerJournalAccountEntryView.GeneralJournalAccountEntry == generalJournalAccountEntryLoc.RecId
                    && subLedgerJournalAccountEntryView.TransferId == _transferidVal
            exists join sourceDocumentHeader
                where sourceDocumentHeader.RecId == subLedgerJournalAccountEntryView.SourceDocumentHeader
            {
                GeneralJournalAccountEntryZakat_SA::insertInformation(generalJournalAccountEntryLoc.RecId);
            }

            // Functionally, this belongs in the insertGeneralJournalEntryRelated method, but we put it here to keep all the Zakat related code together.
            while select AccountingDate, Ledger from generalJournalEntry
            where generalJournalEntry.TransferId == _transferidVal
                && generalJournalEntry.JournalCategory == LedgerTransType::Transfer
            join Voucher from subledgerVoucherGeneralJournalEntry
                where subledgerVoucherGeneralJournalEntry.GeneralJournalEntry == generalJournalEntry.RecId
            {
                dataAreaId = CompanyInfo::getDataArea(Ledger::primaryForLegalEntity(generalJournalEntry.Ledger));

                GeneralJournalAccountEntryZakat_SA::updateSubLedgerInformation(subledgerVoucherGeneralJournalEntry.Voucher, generalJournalEntry.AccountingDate, dataAreaId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSubscribe</Name>
				<Source><![CDATA[
    protected boolean canSubscribe()
    {
        return LedgerParameters::find().IsZakatEnabled_SA;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    protected void subscribe()
    {
        super();

        if (this.canSubscribe())
        {
            command.insertedGeneralJournalAccountEntry  += eventhandler(this.insertedGeneralJournalAccountEntry);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>