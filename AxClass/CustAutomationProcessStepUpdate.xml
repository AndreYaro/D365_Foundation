<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAutomationProcessStepUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final static class CustAutomationProcessStepUpdate
{
    private static CustAutomationProcessStepCountTable custAutomationProcessStepCountTableTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateProcessStepInCustTrans</Name>
				<Source><![CDATA[
    public static void updateProcessStepInCustTrans()
    {
        CustAutomationProcessStepUpdate::insertProcessStepToTmp();

        CustAutomationProcessStepUpdate::updateInvoicesWithProcessStep();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertProcessStepToTmp</Name>
				<Source><![CDATA[
    private static void insertProcessStepToTmp()
    {
        CustTrans custTrans;
        CustAutomationInvoice custAutomationInvoice;
        custAutomationProcessStepCountTableTmp.setTmp();
        RecordInsertList processStepList = new RecordInsertList(tableNum(CustAutomationProcessStepCountTable), true, true, true, true, true, custAutomationProcessStepCountTableTmp);

        while select maxof(Days), AccountNum, Invoice, StrategyName from custAutomationInvoice
            group by custAutomationInvoice.AccountNum, custAutomationInvoice.Invoice, custAutomationInvoice.StrategyName, custTrans.RecId
            where custAutomationInvoice.Status == CustAutomationInvoiceStatus::Completed
            join RecId from custTrans
                where custTrans.AccountNum == custAutomationInvoice.AccountNum
                && custTrans.Invoice == custAutomationInvoice.Invoice
                && custTrans.Closed == dateNull()
                && custTrans.CustAutomationExclude == NoYes::No
        {
            CustAutomationStrategy custAutomationStrategy;
            CustAutomationStrategyLine custAutomationStrategyLine;

            select count(RecId) from custAutomationStrategyLine
                where custAutomationStrategyLine.Days <= custAutomationInvoice.Days
                exists join custAutomationStrategy
                    where custAutomationStrategyLine.ParentRecId == custAutomationStrategy.RecId
                    && custAutomationStrategy.StrategyName == custAutomationInvoice.StrategyName;

            custAutomationProcessStepCountTableTmp.clear();
            custAutomationProcessStepCountTableTmp.CustTransRecId = custTrans.RecId;
            custAutomationProcessStepCountTableTmp.CustAutomationProcessCount = custAutomationStrategyLine.RecId;
            processStepList.add(custAutomationProcessStepCountTableTmp);
        }

        processStepList.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInvoicesWithProcessStep</Name>
				<Source><![CDATA[
    private static void updateInvoicesWithProcessStep()
    {
        CustAutomationProcessStepCountTable custAutomationProcessStepCountTable;

        insert_recordset custAutomationProcessStepCountTable (CustTransRecId, CustAutomationProcessCount)
            select CustTransRecId, CustAutomationProcessCount from custAutomationProcessStepCountTableTmp;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>