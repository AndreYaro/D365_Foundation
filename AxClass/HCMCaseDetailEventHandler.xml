<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmCaseDetailEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the HCM related events for the <c>CaseDetail</c> form.
/// </summary>
class HcmCaseDetailEventHandler
{
    boolean initialized;
    FormRun element;

    // Extension controls
    FormReferenceGroupControl dirPartyTableNameControl;
    FormReferenceGroupControl hcmFMLACaseAssociationEmploymentLeaveControl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(FormRun _formRunInstance)
    {
        initialized = false;
        element = _formRunInstance;

        // Register this extension with the main form
        element.registerExtensionInstance(classStr(HcmCaseDetailEventHandler), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes this form extension handler instance
    /// </summary>
    private void init()
    {
        if (initialized)
        {
            return;
        }

        initialized = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlsFMLAAppSuite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets visibility of controls based on the case category type of FMLA.
    /// </summary>
    /// <param name = "_formRun">An instance of the form being extended.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void setControlsFMLAAppSuite(FormRun _formRun)
    {
        boolean isFMLACategory;
        DictClass dictClass = new DictClass(classIdGet(_formRun));
        CaseCategoryHierarchyDetail caseCategoryHierarchyDetail = _formRun.dataSource(formdatasourcestr(CaseDetail, CaseCategoryHierarchyDetail)).cursor() as CaseCategoryHierarchyDetail;

        isFMLACategory = caseCategoryHierarchyDetail.CategoryType == CaseCategoryType::FMLA;

        // Added to hide the new case and dependent case button on case detail form for FMLA.
        _formRun.design().controlName(formControlStr(CaseDetail, detailsTabPage)).visible(!isFMLACategory);
        _formRun.design().controlName(formControlStr(CaseDetail, knowledgeArticlesTabPage)).visible(!isFMLACategory);
        _formRun.design().controlName(formControlStr(CaseDetail, btngrpCaseSLA)).visible(!isFMLACategory);
        _formRun.design().controlName(formControlStr(CaseDetail, btngrpEngChg)).visible(!isFMLACategory);
        _formRun.design().controlName(formControlStr(CaseDetail, ProjectGroup_ProjId)).visible(!isFMLACategory);
        _formRun.design().controlName(formControlStr(CaseDetail, CaseLogGrid_SourceTypeId)).visible(!isFMLACategory);
        _formRun.design().controlName(formControlStr(CaseDetail, caseLogGrid_M_editSourceLinkedId)).visible(!isFMLACategory);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHoursWorkedFMLAAppsuite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets visibility of hours worked controls for FMLA.
    /// </summary>
    /// <param name = "_formRun">An instance of the form being extended.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void setHoursWorkedFMLAAppsuite(FormRun _formRun)
    {
        FormCheckBoxControl hoursWorkedPayrollIntegration = _formRun.design().controlName(formControlStr(CaseDetail, hoursWorkedPayrollIntegration)) as FormCheckBoxControl;
        boolean isHoursWorkedChecked = hoursWorkedPayrollIntegration.value();
        DictClass dictClass = new DictClass(classIdGet(_formRun));

        if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration)))
        {
            _formRun.dataSource('CaseDetailBase_HcmFMLACaseDetail').object(fieldNum(HcmFMLACaseDetail, HoursWorked)).allowEdit(!isHoursWorkedChecked);

            if (isHoursWorkedChecked)
            {
                HcmFMLACaseDetail caseDetailBase_HcmFMLACaseDetail =  _formRun.dataSource('CaseDetailBase_HcmFMLACaseDetail').cursor() as HcmFMLACaseDetail;
                _formRun.dataSource('CaseDetailBase_HcmFMLACaseDetail').object(fieldNum(HcmFMLACaseDetail, HoursWorked))
                    .setValue(caseDetailBase_HcmFMLACaseDetail.getHoursWorked());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseDetailBase_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for CaseDetailBase.OnActivated event.
    /// </summary>
    /// <param name="_sender">The CaseDetailBase data source of the form extension.</param>
    /// <param name="_e">Args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(CaseDetail, CaseDetailBase), FormDataSourceEventType::Activated)]
    public static void CaseDetailBase_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun formRun = _sender.formRun();

        HcmCaseDetailEventHandler::setHoursWorkedFMLAAppSuite(formRun);
        HcmCaseDetailEventHandler::setControlsFMLAAppSuite(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HoursWorkedPayrollIntegration_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for CaseDetailBase_HcmFMLACaseDetail.HoursWorkedPayrollIntegration field's OnModified event.
    /// </summary>
    /// <param name="_sender">The CaseDetailBase_HcmFMLACaseDetail.HoursWorkedPayrollIntegration field of the form extension.</param>
    /// <param name="_e">Args for the event.</param>
    [FormDataFieldEventHandler(formControlStr(CaseDetail, HoursWorkedPayrollIntegration), FormDataFieldEventType::Modified)]
    public static void HoursWorkedPayrollIntegration_OnModified(FormDataObject _sender, FormDataFieldEventArgs _e)
    {
        // acts like a super() call
        _sender.modified();

        FormRun formRun = _sender.datasource().formRun();
        HcmCaseDetailEventHandler::setHoursWorkedFMLAAppSuite(formRun);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>