<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PrintoutTableReports_TransferInvM15_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class PrintoutTableReports_TransferInvM15_RU extends PrintoutTableReports_RU implements BatchRetryable
{
    InventTransferJour  inventTransferJour;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allocateNum</Name>
				<Source><![CDATA[
        protected NumberSeq allocateNum(PrintoutTypeTable_RU  _type,
                                    InventLocationId _locationId)
    {
        NumberSeq               ret;
        NumberSequenceCode      seqCode;

        switch (_type)
        {
            case PrintoutTypeTable_RU::InventTransferInvoiceM15:
                seqCode = inventTransferJour.Return_RU ?
                          SalesParameters::numRefPrintoutJourNum_CustCorrInvM15_RU().numberSequenceTable().NumberSequence :
                          SalesParameters::numRefPrintoutJournalNum_CustInvM15_RU().numberSequenceTable().NumberSequence;
                break;
            default:
                throw error("@GLS106494");
        }

        if (! seqCode)
        {
            throw error(strFmt("@SYS53911", "@GLS107005", "@SYS25196"));
        }

        this.checkNumSeq(seqCode, "@SYS25196", extendedTypeNum(CustInvoiceId_M15_RU));
        ret = NumberSeq::newGetNumFromCode(seqCode);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmMode</Name>
				<Source><![CDATA[
        public void initParmMode()
    {
        this.showQueryDialog(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        switch (common.TableId)
        {
            case tableNum(InventTransferJour):
            inventTransferJour = common;
                break;
        }

        if (! inventTransferJour)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
        public void run()
    {
        PrintoutTable_RU  printoutJournal;
        ;
        // create journal
        ttsbegin;

        printoutJournal.clear();
        printoutJournal.JournalType = PrintoutTypeTable_RU::InventTransferInvoiceM15;
        printoutJournal.JournalNum  = this.allocateNum(PrintoutTypeTable_RU::InventTransferInvoiceM15,
                                                       inventTransferJour.InventLocationIdFrom).num();
        printoutJournal.initFromInventTransferJour(inventTransferJour);
        printoutJournal.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public static ClassDescription description()
    {
        return "@GLS106999";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>