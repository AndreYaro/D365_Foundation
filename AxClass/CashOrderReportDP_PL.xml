<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashOrderReportDP_PL</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>CashOrderReportDP_PL</c> class extends the base class to add Poland specific functionality
///     for the Polish cash order report.
/// </summary>
[
    SRSReportQueryAttribute(querystr(CashOrder))
]
class CashOrderReportDP_PL extends CashOrderReportDP
{
    RCashDestinationTrans cashDestinationTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createTmpTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Extends the method in base class to initialize <c>RCashDestinationTrans</c> buffer.
    /// </summary>
    /// <param name="_queryRun">
    ///     The <c>QueryRun</c> object.
    /// </param>
    protected void createTmpTransactions(QueryRun _queryRun)
    {
        cashDestinationTrans = _queryRun.get(tableNum(RCashDestinationTrans));
        super(_queryRun);

        if (!newCashTrans && cashDestinationTrans)
        {
            this.insertIntoCashOrderLinesTmp();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Overrides the method in base class to set amount based on <c>RCashDestinationTrans</c> buffer.
    /// </summary>
    /// <returns>
    ///     The amount in currency.
    /// </returns>
    protected AmountCur getAmountCur()
    {
        return cashDestinationTrans? abs(cashDestinationTrans.AmountCur) : super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAmountInWords</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Overrides the method in base class to invoke Poland specific logic to convert amount to words.
    /// </summary>
    /// <returns>
    ///     The amount in words.
    /// </returns>
    protected TempStr getAmountInWords()
    {
        RNumDateInWordConverter dateInWordConverter = RNumDateInWordConverter::construct(infolog.language());
        return dateInWordConverter.numeralsToTxt(cashTrans.AmountCur);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Overrides the base method to make Poland specific changes to cash order query.
    /// </summary>
    /// <returns>
    ///     The query to retrieve data for cash order report.
    /// </returns>
    protected Query getQuery()
    {
        Query ret = super();

        ret.dataSourceTable(tableNum(RCashDestinationTrans)).enabled(true);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransTxt</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Overrides the method in base class to get transaction text from
    ///     <c>RCashDestinationTrans</c> table.
    /// </summary>
    /// <returns>
    ///     The transaction text.
    /// </returns>
    protected TransTxt getTransTxt()
    {
        return cashDestinationTrans? cashDestinationTrans.TransTxt : super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCashOrderLinesTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Extends the method in base class to perform Poland specific initializations.
    /// </summary>
    /// <returns>
    ///     The <c>CashOrderLinesTmp</c> table buffer.
    /// </returns>
    protected CashOrderLinesTmp initializeCashOrderLinesTmp()
    {
        cashOrderLines = super();
        cashOrderLines.DestinationTransRecId = cashDestinationTrans.RecId;
        return cashOrderLines;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>