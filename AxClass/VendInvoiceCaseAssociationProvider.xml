<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceCaseAssociationProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Plug in for case associations.
/// </summary>
[ExportMetadataAttribute('CaseIAssociation', 'VendorInvoice'), ExportAttribute('Dynamics.AX.Application.CaseIAssociation')]
class VendInvoiceCaseAssociationProvider implements CaseIAssociation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertCaseAssociation</Name>
				<Source><![CDATA[
    public void insertCaseAssociation(CaseAssociation _caseAssociation)
    {
        VendInvoiceJour vendInvoiceJour;
        select crosscompany OrderAccount from vendInvoiceJour where vendInvoiceJour.RecId == _caseAssociation.RefRecId;

        VendTable vendTable = VendTable::find(vendInvoiceJour.OrderAccount);

        if (vendTable.RecId)
        {
            _caseAssociation.insertCaseAssociation(CaseEntityType::Vendor, vendTable.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedCompany</Name>
				<Source><![CDATA[
    public SelectableDataArea getLinkedCompany(RefRecId _parentRecId)
    {
        VendInvoiceJour vendInvoiceJour;
        select crosscompany DataAreaId from vendInvoiceJour where vendInvoiceJour.RecId == _parentRecId;

        return vendInvoiceJour.company();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedId</Name>
				<Source><![CDATA[
    public CaseAssociationLinkId getLinkedId(RefRecId _parentRecId)
    {
        VendInvoiceJour vendInvoiceJour;
        select crosscompany InvoiceId from vendInvoiceJour where vendInvoiceJour.RecId == _parentRecId;

        return vendInvoiceJour.InvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRecIdWithNaturalKey</Name>
				<Source><![CDATA[
    public RefRecId getRecIdWithNaturalKey(CaseAssociationLinkId _naturalKey)
    {
        VendInvoiceJour vendInvoiceJour = VendInvoiceJour::findRecId(str2Int64(_naturalKey));

        return vendInvoiceJour.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedName</Name>
				<Source><![CDATA[
    public CaseLinkedName getLinkedName(RefRecId _parentRecId)
    {
        return VendInvoiceJour::findRecId(_parentRecId).vendTable_OrderAccount().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJumpRefMenuItem</Name>
				<Source><![CDATA[
    public str getJumpRefMenuItem(args _args, CaseAssociation _association)
    {
        VendInvoiceJour vendInvoiceJour;
        
        //We need this code in order not to lose the localization data in the opened form.
        VendInvoiceJour vendInvoiceJourCrossCompany;

        select firstonly crosscompany DataAreaId, RecId from vendInvoiceJourCrossCompany 
            where vendInvoiceJourCrossCompany.RecId == _association.RefRecId;

        if (vendInvoiceJourCrossCompany.Recid)
        {
            changecompany (vendInvoiceJourCrossCompany.DataAreaId)
            {
                select firstonly vendInvoiceJour where vendInvoiceJour.RecId == _association.RefRecId;
            }
        }

        _args.record(vendInvoiceJour);
        return menuitemdisplaystr(VendInvoiceJournal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookup</Name>
				<Source><![CDATA[
    public void performLookup(FormStringControl callerControl, CaseAssociation _caseAssociation)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tablenum(VendInvoiceJour), callerControl);

        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tablenum(VendInvoiceJour));
        sysTableLookup.addLookupfield(fieldnum(VendInvoiceJour, InvoiceId));
        sysTableLookup.addLookupfield(fieldnum(VendInvoiceJour, InvoiceDate));
        sysTableLookup.addLookupfield(fieldnum(VendInvoiceJour, OrderAccount));
        sysTableLookup.addLookupMethod(tableMethodStr(VendInvoiceJour, vendName));
        sysTableLookup.addLookupfield(fieldnum(VendInvoiceJour, PurchId));
        sysTableLookup.addLookupfield(fieldnum(VendInvoiceJour, CurrencyCode));
        sysTableLookup.addLookupfield(fieldnum(VendInvoiceJour, RecId), true);
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCaseEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the <c>CaseAssociation.getCaseEntityType()</c> event.
    /// </summary>
    /// <param name="_refTableId">
    /// The table ID of the table associated with the case.
    /// </param>
    /// <param name = "_eventArgs">
    /// The arguments for the event.
    /// </param>
    [SubscribesTo(tableStr(CaseAssociation), delegatestr(CaseAssociation, getCaseEntityType))]
    public static void getCaseEntityType(TableId _refTableId, CaseAssociationGetEntityTypeEventArgs _eventArgs)
    {
        if (_refTableId == tablenum(VendInvoiceJour))
        {
            _eventArgs.parmEntityType(CaseEntityType::VendorInvoice);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>