<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesCalcTax_ShippingBill_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Calculates sales tax of shipping bill for India.
/// </summary>
class SalesCalcTax_ShippingBill_IN extends     SalesCalcTax
{
    CustomsShippingBillJour_IN      customsShippingBillJour;
    CustomsShippingBillTrans_IN     customsShippingBillTrans;
    CustomsExportOrderTable_IN      customsExportOrderTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets currency code.
    /// </summary>
    /// <returns>
    /// The instance of the <c>CurrencyCode</c> class.
    /// </returns>
    public CurrencyCode currencyCode()
    {
        return customsShippingBillJour.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets exchange rate.
    /// </summary>
    /// <param name="_date">
    /// The date time.
    /// </param>
    /// <returns>
    /// The isntance of the <c>CustExchRate</c> class.
    /// </returns>
    public CustExchRate exchRate(date _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        return(customsShippingBillJour.ExchRate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRateSecondary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets secondary exchange rate.
    /// </summary>
    /// <param name="_date">
    /// The date time.
    /// </param>
    /// <returns>
    /// The isntance of the <c>ExchrateSecondary</c> class.
    /// </returns>
    public ExchrateSecondary exchRateSecondary(date _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        return(customsShippingBillJour.ExchrateSecondary);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCursor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the cursor of the database.
    /// </summary>
    public void initCursor()
    {
        select nofetch forupdate customsShippingBillTrans
            where customsShippingBillTrans.SalesId          == customsShippingBillJour.SalesId      &&
                  customsShippingBillTrans.InvoiceId        == customsShippingBillJour.InvoiceId    &&
                  customsShippingBillTrans.ShippingBillDate == customsShippingBillJour.ShippingBillDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the invoice date.
    /// </summary>
    /// <returns>
    /// The transaction date.
    /// </returns>
    public TransDate invoiceDate()
    {
        return customsShippingBillJour.ShippingBillDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets markup transaction amount.
    /// </summary>
    /// <param name="_rounded">
    /// If 'True', the amount is rounded.
    /// </param>
    /// <param name="deductTaxForTaxIncluded">
    /// If 'True', the deduct tax is included.
    /// </param>
    /// <returns>
    /// The instance of the <c>MarkupAmount</c> class.
    /// </returns>
    public MarkupAmount markupAmount(
        boolean _rounded = true,
        boolean deductTaxForTaxIncluded = true)
    {
        return markupTrans.CalculatedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new instance of the <c>SalesCalcTax_ShippingBill_IN</c> class.
    /// </summary>
    /// <param name="_customsShippingBillJour">
    /// The customs shipping bill journal.
    /// </param>
    public void new(CustomsShippingBillJour_IN _customsShippingBillJour)
    {
        super(_customsShippingBillJour);

        customsShippingBillJour     = _customsShippingBillJour;
        customsExportOrderTable     = customsShippingBillJour.customsExportOrderTable();
        update                      = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves to the next line of the record.
    /// </summary>
    /// <returns>
    /// The next line of the record.
    /// </returns>
    Common nextLine()
    {
        next customsShippingBillTrans;
        this.getSalesLine();

        return customsShippingBillTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>post</Name>
				<Source><![CDATA[
    /// <summary>
    /// Posts the instance of the <c>SalesCalcTax_ShippingBill_IN</c> class.
    /// </summary>
    /// <param name="_ledgerVoucher">
    /// The ledger voucher information.
    /// </param>
    /// <param name="_post">
    /// True if the bill should be post.
    /// </param>
    public void  post(
        LedgerVoucher   _ledgerVoucher,
        NoYes           _post   = NoYes::Yes)
    {
        TaxSalesShippingBill_IN taxSalesShippingBill = new TaxSalesShippingBill_IN(_post,
                                                                                   this,
                                                                                   this.tax().tmpTaxWorkTrans());

        taxSalesShippingBill.updateAndPost(LedgerPostingController::newForLedgerPostingJournal(_ledgerVoucher));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesMarkupRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets sales markup record id.
    /// </summary>
    /// <returns>
    /// The record id.
    /// </returns>
    public recId  salesMarkupRecId()
    {
        return markupTrans.OrigRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesMarkupTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets sales markup table id.
    /// </summary>
    /// <returns>
    /// The table id.
    /// </returns>
    public tableId  salesMarkupTableId()
    {
        return markupTrans.OrigTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTableRecID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets sales table record id.
    /// </summary>
    /// <returns>
    /// The table record id.
    /// </returns>
    public recId  salesTableRecID()
    {
        return customsExportOrderTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTableTableID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets sales table table id.
    /// </summary>
    /// <returns>
    /// The table id.
    /// </returns>
    public tableId  salesTableTableID()
    {
        return customsExportOrderTable.TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets customs shipping bill transaction tax.
    /// </summary>
    /// <param name="_taxWriteCode">
    /// The instance of the <c>TaxWriteCode</c> class.
    /// </param>
    /// <param name="_amountCur">
    /// The instance of the <c>AmountCur</c> class.
    /// </param>
    public void  setTax(
        TaxWriteCode    _taxWriteCode,
        AmountCur       _amountCur)
    {
        customsShippingBillTrans.TaxWriteCode   = _taxWriteCode;
        customsShippingBillTrans.TaxAmount      = _amountCur;
        customsShippingBillTrans.TaxAmountMST   = customsShippingBillJour.amountMST(_amountCur);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets transaction line amount.
    /// </summary>
    /// <param name="_rounded">
    /// If 'True', the transaction line amount is rounded.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountCur</c> class.
    /// </returns>
    public AmountCur transLineAmount(boolean _rounded = true)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets transaction quantity.
    /// </summary>
    /// <returns>
    /// The instance of the <c>SalesQty</c> class.
    /// </returns>
    public SalesQty transQty()
    {
        return customsShippingBillTrans.ShippingBillQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets transaction id.
    /// </summary>
    /// <returns>
    /// The instance of the <c>InventTransId</c> class.
    /// </returns>
    public InventTransId transTransId()
    {
        return customsShippingBillTrans.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>triangulation</Name>
				<Source><![CDATA[
    /// <summary>
    /// The triangulation of the shipping bill journal.
    /// </summary>
    /// <param name="_date">
    /// The data information.
    /// </param>
    /// <returns>
    /// The instance of the <c>EUROTriangulation</c> class.
    /// </returns>
    public EUROTriangulation triangulation(date _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        return customsShippingBillJour.Triangulation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
