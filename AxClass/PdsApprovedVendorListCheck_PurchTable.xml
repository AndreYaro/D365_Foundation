<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsApprovedVendorListCheck_PurchTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
[PdsApprovedVendorListCheckTableIdFactoryAttribute(tableStr(PurchTable))]
/// <summary>
/// This class handles the approved vendor list check for buffer type PurchTable.
/// </summary>
class PdsApprovedVendorListCheck_PurchTable extends PdsApprovedVendorListCheck
{
    PurchTable          purchTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method is used check if Approved Vendor List record is present. If valid record found 'OK' is returned.If no valid record is found, the warning value set in the item master is returned.
    /// </summary>
    /// <returns>
    /// Corresponding value of PdsVendorCheckResult
    /// </returns>
    public PdsVendorCheckResult check()
    {
        PdsVendorCheckResult        ret = PdsVendorCheckResult::OK;
        PdsApprovedVendorListCheck  lineCheck;
        PurchLine                   purchLine;

        while select purchLine
            where purchLine.PurchId == purchTable.PurchId
        {
            lineCheck = purchLine.type().pdsApprovedVendorListCheck();
            switch (lineCheck.check())
            {
                case PdsVendorCheckResult::Warning:
                    if (ret < PdsVendorCheckResult::Warning)
                    {
                        ret = PdsVendorCheckResult::Warning;
                    }
                    break;

                case PdsVendorCheckResult::NotAllowed:
                    ret = PdsVendorCheckResult::NotAllowed;
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiate new instance of class
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets the global record buffer if parameter record is of type InventTable
    /// </summary>
    /// <param name="_common">
    /// Takes the InventTable
    /// </param>
    /// <returns>
    /// Returns global variable InventTable
    /// </returns>
    public Common parmBuffer(Common _common = null)
    {
        if (!prmisDefault(_common) && _common.TableId == tableNum(PurchTable))
        {
            purchTable  = _common;
            vendAccount = purchTable.OrderAccount;
            activeDate  = purchTable.DeliveryDate;
        }

        return purchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method runs the check method and if check returns anything other than 'OK'. Either a warning or a fail message will be returned.
    /// </summary>
    /// <returns>
    /// Returns true / false
    /// </returns>
    public boolean validateCheck()
    {
        boolean                     ret = true;
        PdsApprovedVendorListCheck  lineCheck;
        PurchLine                   purchLine;

        if (purchTable.RecId)
        {
            while select purchLine
                where purchLine.PurchId == purchTable.PurchId
                    &&  purchLine.IsDeleted == NoYes::No
                join inventTable
                    where inventTable.ItemId             == purchLine.ItemId &&
                          inventTable.PdsVendorCheckItem != PdsVendorCheckItem::NoCheck
            {
                // We must construct this directly. Using the line type() method to create one
                // here will not work if the PurchTable is changing -- the type on the lines
                // have not yet been changed.
                lineCheck = PdsApprovedVendorListCheck::newFromTable(purchLine);
                lineCheck.parmActiveDate(activeDate);
                lineCheck.parmVendAccount(vendAccount);
                ret = lineCheck.validateCheck() && ret;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct instance of class
    /// </summary>
    /// <returns>
    /// Returns instance of subclass
    /// </returns>
    public static PdsApprovedVendorListCheck_PurchTable construct()
    {
        return new PdsApprovedVendorListCheck_PurchTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>