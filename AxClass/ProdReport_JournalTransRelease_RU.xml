<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdReport_JournalTransRelease_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdReport_JournalTransRelease_RU extends ProdReport_JournalTrans
{
    InventDimParm   inventDimParm;
    DialogGroup     dialogDimGroup;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        inventDimParm
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog(DialogRunbase  _dialog = dialog)
    {
        dialog = super(_dialog);

        dialog.addGroup("@SYS7764");

        dialogDimGroup = inventDimParm.addFieldsToDialog(dialog, "@SYS53627", true);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        inventDimParm.getFromDialog(dialog,dialogDimGroup);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    public Query initQuery(Query _query)
    {
        QueryBuildDataSource    qbds = _query.dataSourceNo(1);

        QueryBuildRange qbr = SysQuery::findOrCreateRange(qbds, fieldnum(ProdJournalRelease_RU, JournalId));
        qbr.value(journalId);

        if (voucher)
        {
            qbr = SysQuery::findOrCreateRange(qbds, fieldnum(ProdJournalRelease_RU, Voucher));
            qbr.value(voucher);
        }
        else
        {
            qbr = qbds.findRange(fieldnum(ProdJournalRelease_RU, Voucher));
            if (qbr)
            {
                qbr.value(SysQuery::valueUnlimited());
            }
        }

        return _query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList] + [super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimParm</Name>
				<Source><![CDATA[
    public InventDimParm parmInventDimParm(InventDimParm _inventDimParm = inventDimParm)
    {
        inventDimParm = _inventDimParm;

        return inventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        container   base;
        boolean     ret;
        Integer     version = conpeek(_packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList, base] = _packedClass;
                ret = super(base);
                break;
            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
