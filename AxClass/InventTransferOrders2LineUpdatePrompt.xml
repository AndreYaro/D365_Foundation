<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferOrders2LineUpdatePrompt</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferOrders2LineUpdatePrompt extends RunBase
{
    private DialogRunbase                   dialog;
    private DialogField                     dialogField;
    private DialogField                     deliveryDateUpdateInLinesField;
    private InventTransferTable             inventTransferTable;
    private container                       inventTransferTableContainer;
    private InventTransferTable2LineField   inventTransferTable2LineField;
    private NoYes dialogValue;
    #define.CurrentVersion(1)
    #localmacro.CurrentList
        inventTransferTableContainer
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SCM:UpdateTransferOrderLine";
    }

]]></Source>
			</Method>
			<Method>
				<Name>extendedPrompt</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Launches the main dialog box
    /// </summary>
    /// <returns>
    ///    true if the dialog box is not canceled; otherwise, false.
    /// </returns>
    public boolean extendedPrompt()
    {
        boolean ret = false;

        if (inventTransferTable.hasLines())
        {
            ret = this.prompt();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        if (this.areShipReceiveDatesChanged(inventTransferTable))
        {
            dialog = super();
            dialog.formBuildDesign().windowType(FormWindowType::PopUp);
            this.buildTransferSettingsDialogGroup();
            this.buildUpdateSettingsDialogGroup();
            dialog.form().design().alwaysOnTop(true);
        }
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fld1_1_modified</Name>
				<Source><![CDATA[
    protected boolean fld1_1_modified()
    {
        Object  control = dialog.formRun().controlCallingMethod();
        boolean ret     = control.modified();

        if (ret)
        {
            deliveryDateUpdateInLinesField.value(dialogField.value());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildTransferSettingsDialogGroup</Name>
				<Source><![CDATA[
    protected void buildTransferSettingsDialogGroup()
    {
        DialogGroup dialogGroup = dialog.addGroup('1.1');
        dialogGroup.columns(1);
        dialogGroup.frameType(FormFrameType::Auto);
        dialogGroup.formBuildGroup().widthMode(FormWidth::ColumnWidth);
        dialogGroup.caption("@SYS4004374");
        dialog.addGroup(inventTransferTable2LineField.fieldGroupLabel(), dialogGroup);

        dialogField = dialog.addField(enumStr(NoYes),
                                    inventTransferTable2LineField.questionLabel(),
                                    inventTransferTable2LineField.questionHelp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildUpdateSettingsDialogGroup</Name>
				<Source><![CDATA[
    protected void buildUpdateSettingsDialogGroup()
    {
        DialogGroup dialogGroup = dialog.addGroup('1.2');
        dialogGroup.columns(1);
        dialogGroup.frameType(FormFrameType::Auto);
        dialogGroup.caption("@SYS4004376");

        dialogGroup = dialog.addGroup("@SYS4004371", dialogGroup);
        deliveryDateUpdateInLinesField = dialog.addField(enumStr(NoYes));
        deliveryDateUpdateInLinesField.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogPostRun</Name>
				<Source><![CDATA[
    public void dialogPostRun(DialogRunbase dialogRunbase)
    {
        dialogRunbase.dialogForm().formRun().controlMethodOverload(true);
        dialogRunbase.dialogForm().formRun().controlMethodOverloadObject(this);
        dialogRunbase.formRun().controlMethodOverload(true);
        dialogRunbase.formRun().controlMethodOverloadObject(this);
        super(dialogRunbase);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        inventTransferTable2LineField.updateTransferLines(dialogField.value());
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeCancel</Name>
				<Source><![CDATA[
    public void closeCancel()
    {
        FormRun formRun = dialog.formRun();
        formRun.closeCancel();
        formRun.notify();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldsToUpdate</Name>
				<Source><![CDATA[
    public boolean fieldsToUpdate()
    {
        return inventTransferTable2LineField.updateTransferLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        inventTransferTableContainer = buf2Con(inventTransferTable, true);

        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean         ret;
        Integer         version    = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList]                 = _packedClass;
                inventTransferTable                     = con2Buf(inventTransferTableContainer);
                ret = true;
                break;
            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (!this.fieldsToUpdate())
            return;

        InventTransferTable2LineUpdate inventTransferTable2LineUpdate = new InventTransferTable2LineUpdate(this);
        inventTransferTable2LineUpdate.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransferTable</Name>
				<Source><![CDATA[
    public InventTransferTable inventTransferTable(InventTransferTable _inventTransferTable = null)
    {
        if (_inventTransferTable)
        {
            inventTransferTable = _inventTransferTable;
            this.initInventTransferTable2LineUpdateFields();
        }
        return inventTransferTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventTransferOrders2LineUpdatePrompt construct()
    {
        return new InventTransferOrders2LineUpdatePrompt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventTransferTable</Name>
				<Source><![CDATA[
    public static InventTransferOrders2LineUpdatePrompt newFromInventTransferTable(InventTransferTable _inventTransferTable)
    {
        InventTransferOrders2LineUpdatePrompt inventTransferOrders2LineUpdatePrompt = InventTransferOrders2LineUpdatePrompt::construct();

        //Call getLast to prevent it from being called during prompt, thus rewriting the field list with saved values
        inventTransferOrders2LineUpdatePrompt.getLast();
        inventTransferOrders2LineUpdatePrompt.inventTransferTable(_inventTransferTable);

        return inventTransferOrders2LineUpdatePrompt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>areShipReceiveDatesChanged</Name>
				<Source><![CDATA[
    protected boolean areShipReceiveDatesChanged(InventTransferTable _inventTransferTable)
    {
        return (_inventTransferTable.ShipDate  != _inventTransferTable.orig().ShipDate
                || _inventTransferTable.ReceiveDate != _inventTransferTable.orig().ReceiveDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventTransferTable2LineUpdateFields</Name>
				<Source><![CDATA[
    protected void initInventTransferTable2LineUpdateFields()
    {
        inventTransferTable2LineField = InventTransferTable2LineField::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>