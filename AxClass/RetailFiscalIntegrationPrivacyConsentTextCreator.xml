<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalIntegrationPrivacyConsentTextCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailFiscalIntegrationPrivacyConsentTextCreator</c> is used to create privacy consent text.
/// </summary>
internal static class RetailFiscalIntegrationPrivacyConsentTextCreator
{
    private const str SearchTemplate = '//%1//%2[Namespace=\'%3\' and Name=\'%4\']//%5//%6';
    private const str TextBodyTemplate = '<html><body>%1</body></html>';
    private const str HrefFontTemplate = '<a target=\'_blank\' href=\'%1\'>%2</a>';
    private const str PrivacyRef = 'https://go.microsoft.com/fwlink/?LinkId=521839';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createConnectorPrivacyConsent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the privacy consent.
    /// </summary>
    /// <param name = "_fiscalIntegrationManifest">
    /// The fiscal integration manifest.
    /// </param>
    /// <returns>The privacy consent.</returns>
    [Hookable(false)]
    internal static str createConnectorPrivacyConsent(XML _fiscalIntegrationManifest)
    {
        if (!_fiscalIntegrationManifest)
        {
            return '';
        }

        str searchString = strFmt(SearchTemplate,
            RetailFiscalIntegrationConnectorContants::ConfigurationProperties,
            RetailFiscalIntegrationConnectorContants::ConfigurationProperty,
            RetailFiscalIntegrationConnectorContants::ConnectorPrivacyInfo,
            RetailFiscalIntegrationConnectorContants::PrivacyConsent,
            RetailFiscalIntegrationConnectorContants::DisplayProperty,
            RetailFiscalIntegrationConnectorContants::DisplayValue);

        str privacyConsent = RetailFiscalIntegrationPrivacyConsentTextCreator::getDisplayValue(
            XmlDocument::newXml(_fiscalIntegrationManifest).selectSingleNode(searchString));

        if (privacyConsent)
        {
            privacyConsent = strFmt(TextBodyTemplate,
                strFmt('%1 %2',
                    privacyConsent,
                    strFmt("@RetailFiscalIntegration:PrivacyStatementInformation", strFmt(HrefFontTemplate, PrivacyRef, "@RetailFiscalIntegration:Privacy"))));
        }

        return privacyConsent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDisplayValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the display value.
    /// </summary>
    /// <param name = "_displayNode">The display node.</param>
    /// <returns>The display value.</returns>
    private static str getDisplayValue(XmlNode _displayNode)
    {
        if (_displayNode)
        {
            XmlNode displayNameNode = _displayNode.selectSingleNode(RetailFiscalIntegrationConnectorContants::DisplayName);
            if (displayNameNode && displayNameNode.innerText())
            {
                return SysLabel::labelId2String(displayNameNode.innerText());
            }
        }

        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>