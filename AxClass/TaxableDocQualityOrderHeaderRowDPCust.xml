<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxableDocQualityOrderHeaderRowDPCust</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Row data provider for quality parm table.
/// </summary>
public class TaxableDocQualityOrderHeaderRowDPCust extends TaxableDocRowDataProviderHeaderForCust
{
    TaxEngineQualityOrderTableHeader    taxEngineQualityOrderTableHeader;
    InventQualityOrderTable             inventQualityOrderTable;

    SalesTable                  salesTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillInFields</Name>
				<Source><![CDATA[
    public void fillInFields(TaxableDocumentLineObject _lineObj)
    {
        super(_lineObj);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValidFields</Name>
				<Source><![CDATA[
    protected void initValidFields()
    {
        super();        
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustTable</Name>
				<Source><![CDATA[
    protected void initCustTable()
    {
        custTable = CustTable::find(inventQualityOrderTable.AccountRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMainTable</Name>
				<Source><![CDATA[
    protected void initMainTable()
    {
        taxEngineQualityOrderTableHeader = mainRecord as taxEngineQualityOrderTableHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRelatedTables</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init related tables.
    /// </summary>
    protected void initRelatedTables()
    {
        inventQualityOrderTable = InventQualityOrderTable::find(taxEngineQualityOrderTableHeader.QualityOrderId, false);

        super();

        select firstOnly salesTable
            where inventQualityOrderTable.AccountRelation == salesTable.CustAccount
                && inventQualityOrderTable.InventRefId == salesTable.SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxAsPerOriginalSalesInvoice_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine if the tax is as per original invoice.
    /// </summary>
    /// <returns>
    /// True if the tax is as per original invoice; otherwise, false.
    /// </returns>
    // <GIN>
    [Replaceable]
    protected NoYes isTaxAsPerOriginalSalesInvoice_IN()
    {
        return NoYes::No;
    }
    // </GIN>

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>