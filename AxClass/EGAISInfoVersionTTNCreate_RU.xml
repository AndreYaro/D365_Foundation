<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EGAISInfoVersionTTNCreate_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>EGAISInfoVersionTTNCreate_RU</c> class is used to create EGAIS BOL version notifications.
/// </summary>
public class EGAISInfoVersionTTNCreate_RU extends RunBase
{
    EGAISWaybillVersion_RU      waybillVersion;
    DialogField                 fieldWaybillVersion;

    EGAISInfoVersionTTN_RU      infoVersionTTN;
    Branches_RU                 branch;
    RefRecId                    branchRecId;

    protected const int CurrentVersion = 1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSaveLast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines if the last user choices can be saved and restored.
    /// </summary>
    /// <returns>
    /// true, if the last user choices can be saved and restored; false, otherwise
    /// </returns>
    protected boolean canSaveLast()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInfoVersionTTN</Name>
				<Source><![CDATA[
    private void createInfoVersionTTN()
    {
        infoVersionTTN.clear();
        infoVersionTTN.BranchId         = Branches_RU::findRecId(branchRecId).BranchId;
        infoVersionTTN.WaybillVersion   = waybillVersion;
        infoVersionTTN.StatusIssue      = EGAISInfoVersionTTNStatusIssue_RU::Created;
        infoVersionTTN.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        Dialog  dialog = super();

        fieldWaybillVersion = dialog.addField(extendedTypeStr(EGAISWaybillVersion_RU));

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret = super();

        waybillVersion = fieldWaybillVersion.value();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLast</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the last choice that is stored in the last value table.
    /// </summary>
    /// <remarks>
    ///    If no record can be found or the <c>unpack</c> method returns false, <c>initParmDefault</c> method
    ///    will be called. Normally, this method should not be overridden.
    /// </remarks>
    public void getLast()
    {
        if (this.canSaveLast())
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParameters</Name>
				<Source><![CDATA[
    private void initParameters()
    {
        branch = Branches_RU::findRecId(branchRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [CurrentVersion, branchRecId, waybillVersion];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBranchRecId</Name>
				<Source><![CDATA[
    public RefRecId parmBranchRecId(RefRecId _branchRecId = branchRecId)
    {
        branchRecId = _branchRecId;

        return branchRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        #OCCRetryCount

        setPrefix(EGAISInfoVersionTTNCreate_RU::description());

        if (!this.validate())
        {
            throw error("@SYS18447");
        }

        try
        {
            ttsBegin;

            this.initParameters();
            this.createInfoVersionTTN();

            ttsCommit;

            info(strFmt("@EGAIS:EgaisBolVersionNotificationForTheSeparateDivisionH", branch.BranchId), '', SysInfoAction_TableField::newBuffer(infoVersionTTN));

        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
        catch (Exception::Error)
        {
            throw error("@SYS18447");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveLast</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Saves the last choice by using the <c>pack</c> method.
    /// </summary>
    /// <remarks>
    ///    This method should not normally be overridden.
    /// </remarks>
    public void saveLast()
    {
        if (this.canSaveLast())
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer version = conPeek(_packedClass, 1);

        switch (version)
        {
            case CurrentVersion:
                [version, branchRecId, waybillVersion] = _packedClass;
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static EGAISInfoVersionTTNCreate_RU construct()
    {
        return new EGAISInfoVersionTTNCreate_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the description of the class.
    /// </summary>
    /// <returns>
    ///    The description of the class.
    /// </returns>
    static public ClassDescription description()
    {
        return "@EGAIS:CreateEgaisBolVersionNotification";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        EGAISInfoVersionTTNCreate_RU    runClass;
        FormDataSource                  formDataSource;

        if (!_args || _args.dataset() != tableNum(Branches_RU))
        {
            throw error(strFmt("@SYS25516", EGAISWaybillActCreate_RU::description()));
        }

        runClass = EGAISInfoVersionTTNCreate_RU::newFromBranch(_args.record());

        if (runClass.prompt())
        {
            runClass.runOperation();

            if (_args && _args.record() && _args.record().isFormDataSource())
            {
                formDataSource = _args.record().dataSource();

                if (formDataSource)
                {
                    formDataSource.research(true);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBranch</Name>
				<Source><![CDATA[
    public static EGAISInfoVersionTTNCreate_RU newFromBranch(Branches_RU _branch)
    {
        EGAISInfoVersionTTNCreate_RU runClass = EGAISInfoVersionTTNCreate_RU::construct();

        runClass.parmBranchRecId(_branch.RecId);

        return runClass;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>