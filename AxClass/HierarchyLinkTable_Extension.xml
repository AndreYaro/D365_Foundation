<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HierarchyLinkTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
public static class HierarchyLinkTable_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findLinkedTableByHierarchyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a table record.
    /// </summary>
    /// <param name="_hierarchyId">
    /// A Hierarchy Id used for searching.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean flag that sets if the table is being search in order to update the record.
    /// </param>
    /// <returns>
    /// A ProjTable record or a SalesQuotation record based on which table the passed in HierarchyId points to.
    /// </returns>
    public static Common findLinkedTableByHierarchyId(HierarchyIdBase _hierarchyId, boolean _forUpdate = false)
    {
        HierarchyLinkTable  hierarchyLinkTable;

        if (_hierarchyId == '')
        {
            return null;
        }

        hierarchyLinkTable = HierarchyLinkTable::findByHierarchyId(_hierarchyId);
        if (hierarchyLinkTable)
        {
            if (hierarchyLinkTable.RefTableId == tableNum(ProjTable))
            {
                return ProjTable::findRecId(hierarchyLinkTable.RefRecId);
            }
            else if (hierarchyLinkTable.RefTableId == tableNum(SalesQuotationTable))
            {
                return SalesQuotationTable::findRec(hierarchyLinkTable.RefRecId, _forUpdate);
            }
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLinkedTableByRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a table record.
    /// </summary>
    /// <param name="_tableId">
    /// A table Id.
    /// </param>
    /// <param name="_linkRecId">
    /// A <c>RecId</c> for the desired record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean flag that sets if the table is being search in order to update the record.
    /// </param>
    /// <returns>
    /// null if the table ID does not correspond to the linked tables, Otherwise a record in the <c>ProjTable</c> or <c>SalesQuotationTable</c> maching the <c>RecId</c> passed in.
    /// </returns>
    public static Common findLinkedTableByRefRecId(TableId _tableId, RecId _linkRecId, boolean _forUpdate = false)
    {
        if (_tableId == tableNum(ProjTable))
        {
            return ProjTable::findRecId(_linkRecId, _forUpdate);
        }
        else if (_tableId == tableNum(SalesQuotationTable))
        {
            return SalesQuotationTable::findRec(_linkRecId, _forUpdate);
        }

        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>