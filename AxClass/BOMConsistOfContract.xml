<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BomConsistOfContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>BOMConsistOf</c> SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>BOMConsistOf</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(BOMConsistOfUIBuilder), SysOperationDataContractProcessingMode::CreateSeparateUIBuilderForEachContract)
]
public class BomConsistOfContract
{
    BOMBOMVersion               show;
    BOMRouteVersionSelectAll    displayPrinciple;
    boolean                     searchIntervalWithLinesOnly;
    boolean                     searchInterval;
    StartDate                   fromDate;
    EndDate                     toDate;
    Level                       maxLevel;
    InventDimViewContract       inventDimViewContract;
    ItemOrigCountryRegionId     destCountryRegionId;
    boolean                     cOOFeatureAndConfigKey;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDisplayPrinciple</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter displayPrinciple.
    /// </summary>
    /// <param name="_displayPrinciple">
    /// The new value of the datacontract parameter displayPrinciple; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter displayPrinciple
    /// </returns>
    [
        DataMemberAttribute('DisplayPrinciple'),
        SysOperationLabelAttribute(literalstr("@SYS68229"))
    ]
    public BOMRouteVersionSelectAll parmDisplayPrinciple(BOMRouteVersionSelectAll _displayPrinciple = displayPrinciple)
    {
        displayPrinciple = _displayPrinciple;
        return displayPrinciple;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter fromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter fromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS5209"))
    ]
    public StartDate parmFromDate(StartDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimViewContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>InventDimViewContract</c> parameter.
    /// </summary>
    /// <param name="_inventDimViewContract">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>InventDimViewContract</c> parameter.
    /// </returns>
    [DataMemberAttribute('InventDimViewContract')]
    public InventDimViewContract parmInventDimViewContract(InventDimViewContract _inventDimViewContract = inventDimViewContract)
    {
        inventDimViewContract = _inventDimViewContract;

        return inventDimViewContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaxLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter maxLevel.
    /// </summary>
    /// <param name="_maxLevel">
    /// The new value of the datacontract parameter maxLevel; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter maxLevel
    /// </returns>
    [
        DataMemberAttribute('MaxLevel'),
        SysOperationLabelAttribute(literalstr("@SYS24149"))
    ]
    public Level parmMaxLevel(Level _maxLevel = maxLevel)
    {
        maxLevel = _maxLevel;
        return maxLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSearchInterval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter searchInterval.
    /// </summary>
    /// <param name="_searchInterval">
    /// The new value of the datacontract parameter searchInterval; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter searchInterval
    /// </returns>
    [DataMemberAttribute('SearchInterval')]
    public boolean parmSearchInterval(boolean _searchInterval = searchInterval)
    {
        searchInterval = _searchInterval;
        return searchInterval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSearchIntervalWithLinesOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter searchIntervalWithLinesOnly.
    /// </summary>
    /// <param name="_searchIntervalWithLinesOnly">
    /// The new value of the datacontract parameter searchIntervalWithLinesOnly; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter searchIntervalWithLinesOnly
    /// </returns>
    [
        DataMemberAttribute('SearchIntervalWithLinesOnly'),
        SysOperationLabelAttribute(literalstr("@SYS67867"))
    ]
    public boolean parmSearchIntervalWithLinesOnly(boolean _searchIntervalWithLinesOnly = searchIntervalWithLinesOnly)
    {
        searchIntervalWithLinesOnly = _searchIntervalWithLinesOnly;
        return searchIntervalWithLinesOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter show.
    /// </summary>
    /// <param name="_show">
    /// The new value of the datacontract parameter show; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter show
    /// </returns>
    [
        DataMemberAttribute('Show'),
        SysOperationLabelAttribute(literalstr("@SYS8335"))
    ]
    public BOMBOMVersion parmShow(BOMBOMVersion _show = show)
    {
        show = _show;
        return show;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter toDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS14656"))
    ]
    public EndDate parmToDate(EndDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDestinationCountryRegionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter destCountryRegionId.
    /// </summary>
    /// <param name="_destCountryRegionId">
    /// The new value of the datacontract parameter destCountryRegionId; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter destCountryRegionId.
    /// </returns>
    [
        DataMemberAttribute('DestinationCountryRegionId'),
        SysOperationLabelAttribute(literalstr("@SCM:DestinationCountry"))
    ]
    public ItemOrigCountryRegionId parmDestinationCountryRegionId(ItemOrigCountryRegionId _destCountryRegionId = destCountryRegionId)
    {
        destCountryRegionId = _destCountryRegionId;
        return destCountryRegionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCOOFeatureAndConfigKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter cOOFeatureAndConfigKey.
    /// </summary>
    /// <param name="_cOOFeatureAndConfigKey">
    /// The new value of the datacontract parameter cOOFeatureAndConfigKey; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter cOOFeatureAndConfigKey.
    /// </returns>
    [
        DataMemberAttribute('COOFeatureAndConfigKey'),
        SysOperationLabelAttribute(literalstr("@SCM:COOFeatureAndConfigKey"))
    ]
    public boolean parmCOOFeatureAndConfigKey(boolean _cOOFeatureAndConfigKey = cOOFeatureAndConfigKey)
    {
        cOOFeatureAndConfigKey = _cOOFeatureAndConfigKey;
        return cOOFeatureAndConfigKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the dialog values for errors. The dialog values are handled through the contract.
    /// </summary>
    /// <returns>
    ///    true if an error has occurred in the dialog values; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (this.parmFromDate() >= this.parmToDate())
        {
            error("@SYS91020");
            ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>