<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleSaleOfProductTax</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CashSaleOfProduct), MonetaryAmount::Tax),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CreditSaleOfProduct), MonetaryAmount::Tax),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CashSaleOfProduct), MonetaryAmount::TaxNonRecoverable),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CreditSaleOfProduct), MonetaryAmount::TaxNonRecoverable),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, ReturnOfProduct), MonetaryAmount::Tax),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, ReturnOfProduct), MonetaryAmount::TaxNonRecoverable),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CashSaleOfProduct), MonetaryAmount::ServiceTaxInterimAmount_IN),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CreditSaleOfProduct), MonetaryAmount::ServiceTaxInterimAmount_IN),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, ReturnOfProduct), MonetaryAmount::ServiceTaxInterimAmount_IN),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CashSaleOfProduct), MonetaryAmount::ServiceTaxExpense_IN),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CreditSaleOfProduct), MonetaryAmount::ServiceTaxExpense_IN),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, ReturnOfProduct), MonetaryAmount::ServiceTaxExpense_IN),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CashSaleOfProduct), MonetaryAmount::ServiceTaxInterimExpense_IN),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, CreditSaleOfProduct), MonetaryAmount::ServiceTaxInterimExpense_IN),
SourceDocumentEnumLiteralExtensionAttribute(enumStr(BusinessEvent_CustomerInvoice), enumLiteralStr(BusinessEvent_CustomerInvoice, ReturnOfProduct), MonetaryAmount::ServiceTaxInterimExpense_IN)
]
public class AccDistRuleSaleOfProductTax extends AccDistRuleProductTax
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canUseDiscountMainAccDimListProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a discount monetary amount specific main account dimension list provider can be used
    /// to derive main account dimension values that are required to classify the financial consequences of
    /// a discount.
    /// </summary>
    /// <returns>
    /// true if the main account list provider can be used; otherwise, false.
    /// </returns>
    public boolean canUseDiscountMainAccDimListProvider()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUseFixedAssetMainAccDimListProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a fixed monetary amount specific main account dimension list provider can be used to
    /// derive main account dimension values that are required to classify the financial consequences of
    /// source document amounts that are assigned to fixed assets.
    /// </summary>
    /// <returns>
    /// true if the main account list provider can be used; otherwise, false.
    /// </returns>
    public boolean canUseFixedAssetMainAccDimListProvider()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUseInventMainAccDimensionListProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a fixed monetary amount specific main account dimension list provider can be used to
    /// derive main account dimension values that are required to classify the financial consequences of
    /// source document amounts that are assigned to inventoried products.
    /// </summary>
    /// <returns>
    /// true if the main account list provider can be used; otherwise, false.
    /// </returns>
    public boolean canUseInventMainAccDimensionListProvider()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUsePartyMainAccDimensionListProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a party amount specific main account dimension list provider can be used to derive
    /// main account dimension values that are required for classifying the financial consequences of
    /// source document amounts that are assigned to a party in an economic exchange.
    /// </summary>
    /// <returns>
    /// true if the main account list provider can be used; otherwise, false.
    /// </returns>
    public boolean canUsePartyMainAccDimensionListProvider()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUseProjectMainAccDimListProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a fixed monetary amount specific main account dimension list provider can be used to
    /// derive main account dimension values that are required to classify the financial consequences of
    /// source document amounts that are assigned to projects.
    /// </summary>
    /// <returns>
    /// true if the main account list provider can be used; otherwise, false.
    /// </returns>
    public boolean canUseProjectMainAccDimListProvider()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>