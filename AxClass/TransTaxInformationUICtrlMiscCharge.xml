<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransTaxInformationUICtrlMiscCharge</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller class for controlling the misc charge tax information.
/// </summary>
[TransTaxInfoUIControllerAttribute(tableStr(MarkupTrans))]
public class TransTaxInformationUICtrlMiscCharge extends TransTaxInformationUIController
{
    MarkupTrans markupTrans;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canModifyTaxInformation</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine whether we can modify the tax information fields.
    /// </summary>
    /// <returns>
    /// Can modify or not.
    /// </returns>
    protected boolean canModifyTaxInformation()
    {
        switch (markupTrans.TransTableId)
        {
            case tableNum(PurchRFQCaseLine):
            case tableNum(CustQuotationTrans):
            case tableNum(CustQuotationConfirmTrans):
            case tableNum(CustomsVendBOETrans_IN):
                return false;

            default:
                return super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
        markupTrans = sourceTable as MarkupTrans;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToVendTaxInfoCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all vendor tax information controls on Tax information form.
    /// </summary>
    protected void setVisibleToVendTaxInfoCtrls()
    {
        if (markupTrans.isMarkupSalesRelated())
        {
            transTaxInformationVendorTaxInfoCtrl.parmVendorTaxInformation().visible(false);
        }
        else
        {
            transTaxInformationVendorTaxInfoCtrl.parmVendorTaxInformation().visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipTaxModelTaxable</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine whether we can skip to generate the <c>TaxModelTaxable</c> object.
    /// </summary>
    /// <returns>
    /// Can skip or not.
    /// </returns>
    protected boolean skipTaxModelTaxable()
    {
        switch (markupTrans.TransTableId)
        {
            case tableNum(SalesTable)           :
            case tableNum(CustInvoiceTable)     :
            case tableNum(CustQuotationJour)    :
            case tableNum(CustQuotationConfirmJour) :
            case tableNum(CustConfirmJour)      :
            case tableNum(CustInvoiceJour)      :
            case tableNum(SalesBasket)          :
            case tableNum(PurchTable)           :
            case tableNum(PurchReqLineHistory)  :
            case tableNum(VendInvoiceJour)      :
            case tableNum(PurchRFQCaseTable)    :
            case tableNum(PurchRFQReplyTable)   :
            case tableNum(PurchRFQTable)        :
            case tableNum(VendInvoiceInfoTable)       :
            case tableNum(VendInvoiceInfoSubTable)    :
            case tableNum(SalesQuotationTable)  :
            case tableNum(PurchParmTable)       :
            case tableNum(CustomsVendBOEJour_IN):
                return true;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToCustomsCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Customs tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToCustomsCtrls()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToExciseCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Excise tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToExciseCtrls()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToGSTTCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all GST tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToGSTTCtrls()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToSalesTaxCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Sales tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToSalesTaxCtrls()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToServiceTaxCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Service tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToServiceTaxCtrls()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToVATCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all VAT tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToVATCtrls()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToWithholdTaxCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Withholding tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToWithholdTaxCtrls()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>