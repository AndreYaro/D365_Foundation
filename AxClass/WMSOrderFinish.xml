<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsOrderFinish</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WmsOrderFinish extends RunBaseBatch implements BatchRetryable
{
    QueryRun    queryRun;

    #define.CurrentVersion(1)

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQueryRun</Name>
				<Source><![CDATA[
    private void buildQueryRun(WMSOrderId _wmsOrderId = '')
    {
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(WMSOrder));
        QueryBuildRange         queryBuildRange;
        queryBuildDataSource.update(true);

        queryBuildRange = queryBuildDataSource.addRange(fieldNum(WMSOrder, OrderId));
        if (_wmsOrderId)
        {
            queryBuildRange.value(queryValue(_wmsOrderId));
        }

        queryBuildRange = queryBuildDataSource.addRange(fieldNum(WMSOrder, Status));
        queryBuildRange.value(enum2Value(WMSOrderStatus::New));

        queryRun = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase       dialog = super();

        dialog.addMenuItemButton(MenuItemType::Display, menuitemDisplayStr(RunBaseQueryDialog), DialogMenuItemGroup::BottomGrp);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        container pack = conNull();

        if (queryRun)
        {
            pack = queryRun.pack();
        }
        return [#CurrentVersion] + [pack];
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        #OCCRetryCount
        WMSOrder    wmsOrder;

        if (! this.validate())
        {
            throw error('');
        }

        try
        {
            ttsbegin;
            while (queryRun.next())
            {
                wmsOrder = queryRun.get(tableNum(WMSOrder));
                wmsOrder.finish();
            }

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            queryRun.reset();
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    queryRun.reset();
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Instructs the batch framework that this class can run impersonating the user who requested the task
    /// </summary>
    /// <returns>
    ///    true always.
    /// </returns>
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean     ret         = false;
        int         version     = RunBase::getVersion(_packedClass);
        container   packedQuery = conNull();

        switch (version)
        {
            case #CurrentVersion:
                [version, packedQuery] = _packedClass;

                if (SysQuery::isPackedOk(packedQuery))
                {
                    queryRun = new QueryRun(packedQuery);
                    ret = true;
                }
                break;

            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WMSOrderFinish construct()
    {
        return new WMSOrderFinish();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS55218";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        WMSOrderFinish      wmsOrderFinish = WMSOrderFinish::construct();
        WMSOrder            wmsOrder;

        wmsOrderFinish.getLast();

        if (args && args.dataset())
        {
            switch (args.record().TableId)
            {
                case (tableNum(WMSOrder)) :
                    wmsOrder = args.record();
                    if (!wmsOrder.OrderId)
                    {
                        return;
                    }

                    wmsOrderFinish.buildQueryRun(wmsOrder.OrderId);
                    if (wmsOrderFinish.prompt())
                    {
                        wmsOrderFinish.runOperation();

                        wmsOrder = args.record();
                        if (FormDataUtil::isFormDataSource(wmsOrder))
                        {
                            FormDataUtil::getFormDataSource(wmsOrder).reread();
                            FormDataUtil::getFormDataSource(wmsOrder).refresh();
                        }
                    }

                    break;

                default:
                    throw error(strFmt("@SYS19306",funcName()));
            }
        }
        else
        {
            wmsOrderFinish.buildQueryRun();
            if (wmsOrderFinish.prompt())
            {
                wmsOrderFinish.runOperation();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>