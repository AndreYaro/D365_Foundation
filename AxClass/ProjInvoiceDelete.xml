<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjInvoiceDelete</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class ProjInvoiceDelete
{
    private ProjInvoiceId invoiceId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjInvoiceDelete construct(ProjInvoiceId _invoiceId)
    {
        ProjInvoiceDelete projInvoiceDelete = new ProjInvoiceDelete();
        ProjInvoiceDelete.setInvoiceId(_invoiceId);
        return projInvoiceDelete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceId</Name>
				<Source><![CDATA[
    private void setInvoiceId(ProjInvoiceId _invoiceId)
    {
        invoiceId = _invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsInvoiceId</Name>
				<Source><![CDATA[
	private boolean existsInvoiceId()
    {
        ProjInvoiceJour projInvoiceJour;
        boolean invoiceExists = (select firstonly RecId from projInvoiceJour where projInvoiceJour.ProjInvoiceId == invoiceId).RecId != 0;

        if (!invoiceExists)
        {
            checkFailed(strFmt("@Proj:InvoiceIdNotFoundToBeDeleted", invoiceId));
        }

        return invoiceExists;
	}

]]></Source>
			</Method>
			<Method>
				<Name>removeInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// removes records from ProjInvoiceJour table where ProjInvoiceId = specified InvoiceId 
    /// also removes all corresponding records in the following tables
    ///     ProjInvoiceCost
    ///     ProjInvoiceCostDetail
    ///     ProjInvoiceEmpl
    ///     ProjInvoiceEmplDetail
    ///     ProjInvoiceItem
    ///     ProjInvoiceItemDetail
    ///     ProjInvoiceOnAcc
    ///     ProjInvoiceOnAccDetail
    ///     ProjInvoiceRevenue
    ///     ProjInvoiceRevenueDetail
    /// </summary>
	public void removeInvoice()
    {

		// Vaidate Invoice exist to be deleted
        if (this.existsInvoiceId())
        {
            ProjOpsFinancialsLogger logger = ProjOpsFinancialsLogger::createLogger(classStr(ProjInvoiceDelete));
            
            using (var activityContext = logger.projOpsFinActivity().projProformaInvoiceCleanup())
            {
                logger.logInformation(strFmt(ProjOpsFinancialsInstrumentationActivites::ProjProformaInvoiceCleanupLogMessageFmt, invoiceId));

                ttsbegin;
                // Hour Transactions
                this.removeHourLines();

                // Expense Transactions
                this.removeExpenseLines();

                // Item Transactions
                this.removeItemLines();

                // Revenue Transactions
                this.removeRevenueLines();

                // On-Account Transactions
                this.removeOnAccountLines();

                // Invoice header
                this.removeInvoiceHeader();

                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeHourLines</Name>
				<Source><![CDATA[
	private void removeHourLines()
    {
        ProjInvoiceEmpl projInvoiceEmpl;
        ProjInvoiceEmplDetail projInvoiceEmplDetail;

        delete_from projInvoiceEmplDetail 
            exists join projInvoiceEmpl
                where projInvoiceEmplDetail.InvoiceRefRecId == projInvoiceEmpl.RecId 
                    && projInvoiceEmpl.ProjInvoiceId == invoiceId;

        delete_from projInvoiceEmpl where projInvoiceEmpl.ProjInvoiceId == invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeExpenselines</Name>
				<Source><![CDATA[
    private void removeExpenselines()
    {
        ProjInvoiceCost projInvoiceCost;
        ProjInvoiceCostDetail projInvoiceCostDetail;

        delete_from projInvoiceCostDetail 
            exists join projInvoiceCost
                where projInvoiceCostDetail.InvoiceRefRecId == projInvoiceCost.RecId 
                    && projInvoiceCost.ProjInvoiceId == invoiceId;

        delete_from projInvoiceCost where projInvoiceCost.ProjInvoiceId == invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeItemLines</Name>
				<Source><![CDATA[
    private void removeItemLines()
    {
        ProjInvoiceItem projInvoiceItem;
        ProjInvoiceItemDetail projInvoiceItemDetail;

        delete_from projInvoiceItemDetail 
            exists join projInvoiceItem
                where projInvoiceItemDetail.InvoiceRefRecId == projInvoiceItem.RecId
                    && projInvoiceItem.ProjInvoiceId == invoiceId;

        delete_from projInvoiceItem where projInvoiceItem.ProjInvoiceId == invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeRevenueLines</Name>
				<Source><![CDATA[
    private void removeRevenueLines()
    {
        ProjInvoiceRevenue projInvoiceRevenue;
        ProjInvoiceRevenueDetail projInvoiceRevenueDetail;

        delete_from projInvoiceRevenueDetail 
            exists join projInvoiceRevenue
                where projInvoiceRevenueDetail.InvoiceRefRecId == projInvoiceRevenue.RecId
                    && projInvoiceRevenue.ProjInvoiceId == invoiceId;

        delete_from projInvoiceRevenue where projInvoiceRevenue.ProjInvoiceId == invoiceId;
   }

]]></Source>
			</Method>
			<Method>
				<Name>removeOnAccountLines</Name>
				<Source><![CDATA[
    private void removeOnAccountLines()
    {
        ProjInvoiceOnAcc projInvoiceOnAcc;
        ProjInvoiceOnAccDetail projInvoiceOnAccDetail;

        delete_from projInvoiceOnAccDetail 
            exists join projInvoiceOnAcc           
                where projInvoiceOnAccDetail.InvoiceRefRecId == projInvoiceOnAcc.RecId
                    && projInvoiceOnAcc.ProjInvoiceId == invoiceId;

        delete_from projInvoiceOnAcc where projInvoiceOnAcc.ProjInvoiceId == invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeInvoiceHeader</Name>
				<Source><![CDATA[
	private void removeInvoiceHeader()
    {
        ProjInvoiceJour projInvoiceJour;

        delete_from projInvoiceJour 
            where projInvoiceJour.ProjInvoiceId == invoiceId;
	}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>