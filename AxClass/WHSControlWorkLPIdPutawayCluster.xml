<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSControlWorkLPIdPutawayCluster</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the control for inputting the work or LP Id to assign to a putaway cluster.
/// </summary>
#WHSRF
[WhsControlFactory(#WorkLPIdPutawayCluster)]
public final class WHSControlWorkLPIdPutawayCluster extends WhsControl
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    public boolean process()
    {
        if (!super())
        {
            return false;
        }

        WHSWorkTable workTable = WHSWorkTable::find(this.parmData());

        if (workTable)
        {
            return this.isWorkValidForCluster(workTable);
        }
        else 
        {
            workTable = WHSWorkTable::findByTargetLicensePlate(this.parmData());

            if (workTable)
            {
                return this.isWorkValidForCluster(workTable);
            }
        }

        return this.fail("@WAX:InvalidWorkForPutawayCluster");
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWorkValidForCluster</Name>
				<Source><![CDATA[
    private boolean isWorkValidForCluster(WHSWorkTable _workTable)
    {
        WHSWorkClusterTable cluster = WHSWorkClusterTable::find(pass.lookup(#PutawayClusterId));

        if (cluster.ClusterProfileId
        &&  _workTable.ClusterProfileId != WHSWorkClusterTable::find(pass.lookup(#PutawayClusterId)).ClusterProfileId)
        {
            return this.fail("@WAX:PutawayClusterProfileMismatch");
        }

        WHSWorkClusterLine clusterLine;

        select firstonly RecId from clusterLine
            where clusterLine.WorkId == _workTable.WorkId;

        if (_workTable.WorkStatus == WHSWorkStatus::Open
            && _workTable.ClusterProfileId
            && !clusterLine.RecId)
        {
            fieldValues.insert(#WorkId, _workTable.WorkId);
        }
        else
        {
            return this.fail("@WAX:InvalidWorkForPutawayCluster");
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>