<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppServiceDecoratorRuleCycleCountDisplayArea</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppServiceDecoratorRuleCycleCountDisplayArea</c> class populates the display area for cycle counting using the default pattern.
/// </summary>
public class WHSMobileAppServiceDecoratorRuleCycleCountDisplayArea extends WHSMobileAppServiceDecoratorRuleDefaultDisplayArea
{
    #WHSRF
    #WHSWorkExecuteControlElements
    #WHSWorkExecuteDisplayCases
    #XmlDocumentation

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSMobileAppServiceDecoratorRuleCycleCountDisplayArea construct()
    {
        return new WHSMobileAppServiceDecoratorRuleCycleCountDisplayArea();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to run the transformation.
    /// </summary>
    /// <param name = "_pageInfo">
    /// The <c>WHSMobileAppPageInfo</c> containing controls and information to carry out the transformation.
    /// </param>
    public void run(WHSMobileAppPageInfo _pageInfo)
    {
        pageInfo = _pageInfo;

        ListEnumerator le = _pageInfo.parmControlsEnumerator();

        while (le.moveNext())
        {
            Map     controlMap = le.current();
            boolean enabled    = controlMap.lookup(#XMLControlEnabled) == '1' || controlMap.lookup(#XMLControlEnabled) == 1;

            WHSMobileAppDisplayArea displayArea = this.calculateDisplayArea(enabled, controlMap);

            if (displayArea != WHSMobileAppXMLDisplayArea::EmptyArea)
            {
                controlMap.insert(#XMLControlDisplayArea, displayArea);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateDisplayAreaForText</Name>
				<Source><![CDATA[
    protected WHSMobileAppDisplayArea calculateDisplayAreaForText(boolean _enabled, Map _controlMap)
    {
        return super(_enabled, _controlMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>