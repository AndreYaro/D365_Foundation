<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResResourceCategoryFormEventHandlers</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ResResourceCategoryFormEventHandlers
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ResResourceCategoryForm_OnInitializing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle the <c>FormEventType::Initializing</c> event on the <c>ResResourceCategoryForm</c> form.
    /// </summary>
    /// <param name="sender">The form instance.</param>
    /// <param name="e">The event arguments.</param>
    [FormEventHandler(formStr(ResResourceCategoryForm), FormEventType::Initializing)]
    public static void ResResourceCategoryForm_OnInitializing(xFormRun sender, FormEventArgs e)
    {
        if (sender.args().caller() && sender.args().lookuptable() == tableNum(ResourceCategoryView))
        {
            sender.args().lookupTable(0);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ResourceCategory_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle the <c>FormDataSourceEventType::Activated</c> event on the <c>ResResourceCategoryForm</c> form.
    /// </summary>
    /// <param name="sender">The form datasource.</param>
    /// <param name="e">The event arguments.</param>
    [FormDataSourceEventHandler(formDataSourceStr(ResResourceCategoryForm, ResourceCategory), FormDataSourceEventType::Activated)]
    public static void ResourceCategory_OnActivated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        PSASchedRole resourceCategory = sender.cursor();

        sender.formRun()
            .control(sender.formRun().controlId(formControlStr(ResResourceCategoryForm, CharacteristicsButton)))
            .enabled(!resourceCategory.DefaultResourceCategory);
    }

]]></Source>
			</Method>
			<Method>
				<Name>CharacteristicsButton_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle the <c>FormControlEventType::Clicked</c> event on the <c>ResResourceCategoryForm</c> form.
    /// </summary>
    /// <param name="sender">The form control.</param>
    /// <param name="e">The event arguments.</param>
    [FormControlEventHandler(formControlStr(ResResourceCategoryForm, CharacteristicsButton), FormControlEventType::Clicked)]
    public static void CharacteristicsButton_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        PSASchedRole resourceCategory = sender.formRun().dataSource(1).cursor();

        ResCharacteristicsController categoryCharacteristics = ResCharacteristicsController::construct();
        categoryCharacteristics.searchCriteriaReady += eventhandler(categoryCharacteristics.saveToRequirements);
        categoryCharacteristics.enableProjectSelection(false);
        categoryCharacteristics.enableRoleSelection(false);
        categoryCharacteristics.requiringEntityType(ResCharacteristicReqEntityType::ResourceCategory);

        if (resourceCategory.RecId != categoryCharacteristics.requiringEntity())
        {
            categoryCharacteristics.searchCriteria(ResSearchCriteria::construct());
            categoryCharacteristics.requiringEntity(resourceCategory.RecId);
            categoryCharacteristics.retrieveRequirements();
        }

        categoryCharacteristics.showForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ResourceCategory_OnWriting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle the <c>FormDataSourceEventType::Writing</c> event on the <c>ResResourceCategoryForm</c> form.
    /// </summary>
    /// <param name="sender">The form datasource.</param>
    /// <param name="e">The event arguments.</param>
    [FormDataSourceEventHandler(formDataSourceStr(ResResourceCategoryForm, ResourceCategory), FormDataSourceEventType::Writing)]
    public static void ResourceCategory_OnWriting(FormDataSource sender, FormDataSourceEventArgs e)
    {
        PSASchedRole resourceCategory = sender.cursor();
        FormCheckBoxControl checkBoxControl = sender.formRun().control(
            sender.formRun().controlId(formControlStr(ResResourceCategoryForm, ResourceCategory_DefaultResourceCategory)));

        if (!resourceCategory.orig().DefaultResourceCategory && checkBoxControl.value())
        {
            PSASchedRole psaSchedRole;

            ttsbegin;

            // Clear previous default.
            update_recordset psaSchedRole
                setting DefaultResourceCategory = FalseTrue::False
                where psaSchedRole.DefaultResourceCategory == FalseTrue::True;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ResourceCategory_OnWritten</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle the <c>FormDataSourceEventType::Written</c> event on the <c>ResResourceCategoryForm</c> form.
    /// </summary>
    /// <param name="sender">The form datasource.</param>
    /// <param name="e">The event arguments.</param>
    [FormDataSourceEventHandler(formDataSourceStr(ResResourceCategoryForm, ResourceCategory), FormDataSourceEventType::Written)]
    public static void ResourceCategory_OnWritten(FormDataSource sender, FormDataSourceEventArgs e)
    {
        FormCheckBoxControl checkBoxControl = sender.formRun().control(
            sender.formRun().controlId(formControlStr(ResResourceCategoryForm, ResourceCategory_DefaultResourceCategory)));

        if (checkBoxControl.value())
        {
            sender.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ResourceCategory_OnDeleting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle the <c>FormDataSourceEventType::Deleting</c> event on the <c>ResResourceCategoryForm</c> form.
    /// </summary>
    /// <param name="sender">The form datasource.</param>
    /// <param name="e">The event arguments.</param>
    [FormDataSourceEventHandler(formDataSourceStr(ResResourceCategoryForm, ResourceCategory), FormDataSourceEventType::Deleting)]
    public static void ResourceCategory_OnDeleting(FormDataSource sender, FormDataSourceEventArgs e)
    {
        boolean defaultRoleMarked;

        if (sender)
        {
            PSASchedRole psaSchedRole = sender.getFirst(1) ? sender.getFirst(1) : sender.cursor();

            while (psaSchedRole)
            {
                if (psaSchedRole.DefaultResourceCategory)
                {
                    defaultRoleMarked = true;
                    break;
                }

                psaSchedRole = sender.getNext();
            }
        }

        if (defaultRoleMarked)
        {
            throw error("@Res:ProjDefaultRoleDeleteError");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DefaultResourceCategory_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle the <c>FormControlEventType::Modified</c> event on the <c>ResAddResourceCategoryForm</c> form.
    /// </summary>
    /// <param name="sender">The form control.</param>
    /// <param name="e">The event arguments.</param>
    [FormControlEventHandler(formControlStr(ResAddResourceCategoryForm, DefaultResourceCategory), FormControlEventType::Modified)]
    public static void DefaultResourceCategory_OnModified(FormControl sender, FormControlEventArgs e)
    {
        FormCheckBoxControl checkBoxControl = sender;

        // If default already exist
        if (checkBoxControl.value() && PSASchedRole::existsDefaultRole()
            && Box::yesNo("@Res:ProjDefaultRoleUnmarkConfirmation", DialogButton::No) == DialogButton::No)
        {
            checkBoxControl.value(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ResAddResourceCategoryForm_preInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle the <c>preInsert</c> delegate on the <c>ResAddResourceCategoryForm</c> form.
    /// </summary>
    /// <param name="_sender">The form instance.</param>
    /// <param name="_role">The <c>PSASchedRole</c> instance.</param>
    [SubscribesTo(formStr(ResAddResourceCategoryForm), delegateStr(ResAddResourceCategoryForm, preInsert))]
    public static void ResAddResourceCategoryForm_preInsert(FormRun _sender, PSASchedRole _role)
    {
        FormCheckBoxControl defaultResourceCategory = _sender.control(
            _sender.controlId(formControlStr(ResAddResourceCategoryForm, DefaultResourceCategory)));

        if (defaultResourceCategory.value())
        {
            // Update other default role, if current role to create as default.
            PSASchedRole::updateDefaultRole();
            // Set the current role as default role.
            _role.DefaultResourceCategory = true;
        }
        else
        {
            // Check for default role, if not found set the current role as default role.
            _role.DefaultResourceCategory = !PSASchedRole::existsDefaultRole();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
