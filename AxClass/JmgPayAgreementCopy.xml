<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgPayAgreementCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>JmgPayAgreementCopy</c> class copies elements of a pay agreement.
/// </summary>
public class JmgPayAgreementCopy extends RunBase
{
    NoYesId                 doOverwrite;

    FormDataSource          formDataSource;

    DialogField             dialogField;
    DialogField             dialogOverwrite;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    ///    interface.
    /// </summary>
    /// <returns>
    ///    A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    ///    in the Application Object Tree (AOT).
    /// </remarks>
    Object dialog()
    {
        DialogRunbase   dialog = new DialogRunbase(JmgProfileCopy::description(), this);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates values that are entered by the user.
    /// </summary>
    /// <returns>
    ///    true if the values are validated successfully; otherwise, false.
    /// </returns>
    public boolean getFromDialog()
    {
        doOverwrite = dialogOverwrite.value();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    void run()
    {
        formDataSource.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the arguments with which the class is called.
    /// </summary>
    /// <param name="args">
    /// the arguments with which the class is called.
    /// </param>
    void setParameters(Args args)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>JmgPayAgreementCopy</c> class.
    /// </summary>
    /// <param name="doCopyDay">
    ///    The <c>NoYes::Yes</c> enumeration value if a day is to be copied; otherwise, the <c>NoYes::No</c>
    ///    value.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>JmgPayAgreementCopy</c> class.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The parameters are wrong.
    /// </exception>
    static JmgPayAgreementCopy construct(NoYes doCopyDay)
    {
        switch (doCopyDay)
        {
            case NoYes::No  :
                return new JmgPayAgreementCopy_Day();
            case NoYes::Yes :
                return new JmgPayAgreementCopy_All();
            default :
                throw error("@SYS55194");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        Object              obj;
        JmgPayAgreementCopy jmgPayAgreementCopy;
        FormRun             formRun;

        if (!args.record().RecId)
            return;

        obj = args.caller();

        if (obj &&
            args.parmEnumType() == enumnum(NoYes) &&
            SysDictClass::isEqualOrSuperclass(obj.handle(),classnum(FormRun)))
        {
            formRun = obj;
            if ((formRun.name() == formstr(JmgPayAgreementTable)) ||
                (formRun.name() == formstr(JmgPayAgreementLine)))
            {
                jmgPayAgreementCopy = JmgPayAgreementCopy::construct(args.parmEnum());
                jmgPayAgreementCopy.setParameters(args);

                if (jmgPayAgreementCopy.prompt())
                {
                    jmgPayAgreementCopy.runOperation();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>