<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatCXMLInstrumentationExceptionActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CatCXMLInstrumentationExceptionActivities
{
    private CatCXMLInstrumentationLogger logger;
    private const str ActivityNamePrefix = 'CatCXML.';
    private const str StartPunchoutNoValidationActivity = 'StartPunchoutNoValidation';
    private const str StartPunchoutValidationActivity = 'StartPunchoutValidation';
    private const str CheckPunchoutRequestAttributesActivity = 'CheckPunchoutRequestAttributes';
    private const str StartVendorResponseWriteToDataStreamActivity = 'StartVendorResponseWriteToDataStream';
    private const str StartVendorResponseXMLReadActivity = 'StartVendorResponseXMLRead';

    private const str CheckPunchoutRequestAttributesProperty = 'CheckPunchoutRequestAttributesProperty';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(CatCXMLInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static CatCXMLInstrumentationExceptionActivities newFromLogger(CatCXMLInstrumentationLogger _logger)
    {
        return new CatCXMLInstrumentationExceptionActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>startPunchoutNoValidation</Name>
				<Source><![CDATA[
    internal  SysInstrumentationActivityContext startPunchoutNoValidation()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + StartPunchoutNoValidationActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startPunchoutValidation</Name>
				<Source><![CDATA[
    internal  SysInstrumentationActivityContext startPunchoutValidation()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + StartPunchoutValidationActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeMissingPunchoutRequestAttribute</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext writeMissingPunchoutRequestAttribute(str _missingRecordObject)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + CheckPunchoutRequestAttributesActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        activityContext
            .addCustomProperty(CheckPunchoutRequestAttributesProperty, _missingRecordObject);

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startVendorResponseWriteToDataStream</Name>
				<Source><![CDATA[
    internal  SysInstrumentationActivityContext startVendorResponseWriteToDataStream()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + startVendorResponseWriteToDataStreamActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startVendorResponseXMLRead</Name>
				<Source><![CDATA[
    internal  SysInstrumentationActivityContext startVendorResponseXMLRead()
    {
        SysInstrumentationActivity activity = logger.activity(ActivityNamePrefix + StartVendorResponseXMLReadActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>