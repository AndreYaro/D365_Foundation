<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxExceptionHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The delegate handler that log Tax exception.
/// </summary>
class TaxExceptionHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>logTaxProcessError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Log Tax process error.
    /// </summary>
    /// <param name = "_exception">
    /// The exception being caught
    /// </param>
    /// <param name = "_exceptionPlace">
    /// The place where the exception exists
    /// </param>
    [SubscribesTo(classstr(ProjInvoiceProposalInsertLines), delegateStr(ProjInvoiceProposalInsertLines, logException))]
    public static void logTaxProcessError(System.Exception _exception, str _exceptionPlace)
    {
        Microsoft.Dynamics.Tax.Instrumentation.TaxEventSource taxEventSourceLog = Microsoft.Dynamics.Tax.Instrumentation.TaxEventSource::Log;

        // We need to filter out these errors which are related to Tax
        System.Text.RegularExpressions.Match match;
        match = System.Text.RegularExpressions.Regex::Match(_exception.StackTrace, "Tax");

        if (match.get_Success())
        {
            taxEventSourceLog.TaxProcessError(guid2Str(newGuid()), _exception.Message, _exception.StackTrace, _exceptionPlace);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>