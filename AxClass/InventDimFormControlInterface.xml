<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimFormControlInterface</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventDimFormControlInterface</c> class is used by the <c>InventDim</c> framework and
///    encapsulates functionality related to form controls.
/// </summary>
/// <remarks>
///    <c>InventDim</c> classes use this interface to uniformly manipulate controls in desktop forms, X++
///    web forms, and ASP.NET web forms. It is implemented by adapters tied to these specific
///    targets.<c>InventDimFormControlInterface</c> extends <c>InventDimControlInterface</c> by adding
///    methods specific to form controls.
/// </remarks>
public interface InventDimFormControlInterface extends InventDimControlInterface
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets a Boolean value that indicates whether the control is editable.
    /// </summary>
    /// <param name="_value">
    ///    A Boolean value that indicates whether the control should be editable; optional.
    /// </param>
    /// <returns>
    ///    true if the control is editable; otherwise, false.
    /// </returns>
    boolean allowEdit(boolean _value = false)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>dataSource</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the identifier of the <c>FormDataSource</c> that corresponds to this control.
    /// </summary>
    /// <returns>
    ///    An integer identifier of the <c>FormDataSource</c> that corresponds to this control.
    /// </returns>
    int dataSource()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>mandatory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets a Boolean value that indicates whether the control is mandatory.
    /// </summary>
    /// <param name="_value">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    true if the control is mandatory; otherwise, false.
    /// </returns>
    boolean mandatory(boolean _value = false)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>supportsMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether the underlying control supports the <c>mandatory</c> property.
    /// </summary>
    /// <returns>
    ///    true if the underlying control supports the <c>mandatory</c> property; otherwise, false.
    /// </returns>
    boolean supportsMandatory()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>