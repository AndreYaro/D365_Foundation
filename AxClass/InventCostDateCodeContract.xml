<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCostDateCodeContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventCostDateCodeContract</c> class is the container class for the contract for the date
///    code.
/// </summary>
[
DataContractAttribute,
SysOperationContractProcessingAttribute(classStr(InventCostDateCodeUIBuilder), SysOperationDataContractProcessingMode::CreateSeparateUIBuilderForEachContract),
SysOperationGroupAttribute('DateCodeGroup', "@SYS22142", '1')
]
class InventCostDateCodeContract implements SysOperationValidatable
{
    DateCode    dateCode;
    FromDate    fromDate;
    ToDate      toDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDateCode</Name>
				<Source><![CDATA[
        [
    DataMemberAttribute('DateCode'),
    SysOperationDisplayOrderAttribute('1'),
    SysOperationGroupMemberAttribute('DateCodeGroup')
    ]
    public DateCode parmDateCode(DateCode _dateCode = dateCode)
    {
        dateCode = _dateCode;

        return dateCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
        [
    DataMemberAttribute('FromDate'),
    SysOperationDisplayOrderAttribute('2'),
    SysOperationGroupMemberAttribute('DateCodeGroup')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;

        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
        [
    DataMemberAttribute('ToDate'),
    SysOperationDisplayOrderAttribute('3'),
    SysOperationGroupMemberAttribute('DateCodeGroup')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;

        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the contract parameters.
    /// </summary>
    /// <returns>
    ///    true if validation is successful; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!toDate || !fromDate)
        {
            isValid = checkFailed("@SCM:InventCostDateCodeFromDateAndToDateMustNotBeEmpty");
        }

        if (toDate < fromDate)
        {
            isValid = checkFailed("@SYS16982");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventCostDateCodeContract construct()
    {
        return new InventCostDateCodeContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>