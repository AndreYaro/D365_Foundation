<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationTotals_Sales</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class  SalesQuotationTotals_Sales extends SalesQuotationTotals
{
    SalesQuotationTable     salesQuotationTable;

    SalesUpdate             specQty;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cashDiscCode</Name>
				<Source><![CDATA[
    public CashDiscCode cashDiscCode()
    {
        return salesQuotationTable.CashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cashDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct cashDiscPercent()
    {
        return salesQuotationTable.CashDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the currency code of the record in the <c>Currency</c> table.
    /// </summary>
    /// <returns>
    /// The currency code of the record in the <c>Currency</c> table.
    /// </returns>
    public CurrencyCode currencyCode()
    {
        return salesQuotationTable.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    public ExchRate exchRate()
    {
        return salesQuotationTable.exchRate(this.invoiceDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRateSecondary</Name>
				<Source><![CDATA[
    public ExchrateSecondary exchRateSecondary()
    {
        return salesQuotationTable.exchRateSecondary(this.invoiceDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccount</Name>
				<Source><![CDATA[
    protected CustAccount  invoiceAccount()
    {
        return salesQuotationTable.InvoiceAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(SalesQuotationTable _salesQuotationTable, SalesUpdate _specQty)
    {
        super(_salesQuotationTable);

        salesQuotationTable = _salesQuotationTable;
        specQty             = _specQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymCode</Name>
				<Source><![CDATA[
    public PaymTermId paymCode()
    {
        return salesQuotationTable.Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymDayId</Name>
				<Source><![CDATA[
    public PaymDayId paymDayId()
    {
        return salesQuotationTable.paymDayId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>triangulation</Name>
				<Source><![CDATA[
    public EUROTriangulation  triangulation()
    {
        return salesQuotationTable.euroTriangulation(this.invoiceDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SalesQuotationTotals_Sales construct(Common              _orderTable,
                                                SalesUpdate         _specQty           = SalesUpdate::All,
                                                AccountOrder        _sumBy             = AccountOrder::None,
                                                ParmId              _parmId            = '',
                                                SalesQuotationId    _sumQuotationId    = '',
                                                DocumentStatus      _documentStatus    = DocumentStatus::None)
    {
        if (_parmId)
        {
            return new SalesQuotationTotals_ParmTrans(_orderTable, _specQty, _sumBy, _parmId, _sumQuotationId, _documentStatus);
        }

        return new SalesQuotationTotals_Trans(_orderTable, _specQty);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>