<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustDebitCreditNoteContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for CustDebitCreditNote SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the CustDebitCreditNote SSRS Report.
/// </remarks>
class CustDebitCreditNoteContract
{
    PrintCopyOriginal                   printCopyOriginal;
    RecId                               recordId;
    TaxBranchCode                       taxBranchCode;
    Name                                taxBranchName;
    // debit / credit info
    TransDate                           printDate;
    CustInvoiceId                       printNum;
    TaxUnrealizedSalesRefInvoiceId      reference;
    //Company info
    LogisticsAddressing                 companyAddress;
    CompanyCoRegNum                     companyNum;
    //agent info
    Name                                agentName;
    LogisticsAddressing                 agentAddress;
    CompanyCoRegNum                     agentNum;
    //customer info
    CustName                            custName;
    LogisticsAddressing                 custAddress;
    VATNumJournal                       custNum;
    //footer fields
    real                                originalAmount;
    TaxAmountCur                        vatNum;
    Name                                title;
    Name                                titleNote;
    Description255                      remarkTxt;
    Description255                      adjustmentDetailsTxt;
    Description                         reason;
    boolean                             typeOfReport;
    //document set
    TaxUnrealizedDocuPrintHeader        printHeader;
    TaxUnrealizedDocuPrintLocation      location;
    TaxUnrealizedDocuText               miscText;
    TaxUnrealizedDocuProdType           prodType;
    TaxRegistrationNumber               taxRegistrationNumber;
    BranchNumber_TH                     branchNumber;
    TaxNatureOfAddress_TH               taxNatureOfAddress;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAgentAddress</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public LogisticsAddressing parmAgentAddress(LogisticsAddressing  _agentAddress = agentAddress)
    {
        agentAddress = _agentAddress;
        return agentAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgentName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Name parmAgentName(Name _agentName = agentName)
    {
        agentName = _agentName ;
        return agentName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgentNum</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public CompanyCoRegNum parmAgentNum(CompanyCoRegNum  _agentNum = agentNum)
    {
        agentNum = _agentNum;
        return agentNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBranchNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter BranchNumber_TH.
    /// </summary>
    /// <param name="_branchNumber">
    /// The new value of the datacontract parameter BranchNumber_TH; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter BranchNumber_TH.
    /// </returns>
    [DataMemberAttribute('BranchNumber')]
    public BranchNumber_TH parmBranchNumber(BranchNumber_TH _branchNumber = branchNumber)
    {
        branchNumber = _branchNumber;
        return branchNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyAddress</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public LogisticsAddressing parmCompanyAddress(LogisticsAddressing  _companyAddress = companyAddress)
    {
        companyAddress = _companyAddress;
        return companyAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyNum</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public CompanyCoRegNum parmCompanyNum(CompanyCoRegNum  _companyNum = companyNum)
    {
        companyNum = _companyNum;
        return companyNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAddress</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public LogisticsAddressing parmCustAddress(LogisticsAddressing  _custAddress = custAddress)
    {
        custAddress = _custAddress;
        return custAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public CustName parmCustName(CustName _custName = custName)
    {
        custName = _custName ;
        return custName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustNum</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public VATNumJournal parmCustNum(VATNumJournal  _custNum = custNum)
    {
        custNum = _custNum;
        return custNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Location.
    /// </summary>
    /// <param name="_location">
    /// The new value of the datacontract parameter Location; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Location
    /// </returns>
    [DataMemberAttribute('Location')]
    public TaxUnrealizedDocuPrintLocation parmLocation(TaxUnrealizedDocuPrintLocation _location = location)
    {
        location = _location;
        return location;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMiscText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter MiscText.
    /// </summary>
    /// <param name="_miscText">
    /// The new value of the datacontract parameter MiscText; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter MiscText
    /// </returns>
    [DataMemberAttribute('MiscText')]
    public TaxUnrealizedDocuText parmMiscText(TaxUnrealizedDocuText _miscText = miscText)
    {
        miscText = _miscText;
        return miscText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNum</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public CustInvoiceId parmNum(CustInvoiceId _printNum = printNum)
    {
        printNum = _printNum ;
        return printNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOriginalAmount</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public real parmOriginalAmount(real _originalAmount = originalAmount)
    {
        originalAmount = _originalAmount ;
        return originalAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintCopyOriginal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter <c>PrintCopyOriginal</c>.
    /// </summary>
    /// <param name="_printCopyOriginal">
    /// The new value of the datacontract parameter <c>PrintCopyOriginal</c>; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter <c>PrintCopyOriginal</c>
    /// </returns>
    [
        DataMemberAttribute('PrintCopyOriginal')
    ]
    public PrintCopyOriginal parmPrintCopyOriginal(PrintCopyOriginal _printCopyOriginal = printCopyOriginal)
    {
        printCopyOriginal = _printCopyOriginal;
        return printCopyOriginal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public TransDate parmPrintDate(TransDate _printDate = printDate)
    {
        printDate = _printDate ;
        return printDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PrintHeader.
    /// </summary>
    /// <param name="_printHeader">
    /// The new value of the datacontract parameter PrintHeader; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PrintHeader
    /// </returns>
    [DataMemberAttribute('PrintHeader')]
    public TaxUnrealizedDocuPrintHeader parmPrintHeader(TaxUnrealizedDocuPrintHeader _printHeader = printHeader)
    {
        printHeader = _printHeader;
        return printHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProdType.
    /// </summary>
    /// <param name="_prodType">
    /// The new value of the datacontract parameter ProdType; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProdType
    /// </returns>
    [DataMemberAttribute('ProdType')]
    public TaxUnrealizedDocuProdType parmProdType(TaxUnrealizedDocuProdType _prodType = prodType)
    {
        prodType = _prodType;
        return prodType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReason</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description parmReason(Description _reason = reason)
    {
        reason = _reason ;
        return reason;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecordId</Name>
				<Source><![CDATA[
    [DataMemberAttribute('RecordId')]
    public RecId parmRecordId(RecId _recordId = recordId)
    {
        recordId = _recordId;
        return recordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReference</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public TaxUnrealizedSalesRefInvoiceId parmReference(TaxUnrealizedSalesRefInvoiceId _reference = reference)
    {
        reference = _reference ;
        return reference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxBranchCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxBranchCode.
    /// </summary>
    /// <param name="_taxBranchCode">
    /// The new value of the datacontract parameter TaxBranchCode; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxBranchCode.
    /// </returns>
    [DataMemberAttribute('TaxBranchCode')]
    public TaxBranchCode parmTaxBranchCode(TaxBranchCode _taxBranchCode = taxBranchCode)
    {
        taxBranchCode = _taxBranchCode;
        return taxBranchCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxBranchName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Name parmTaxBranchName(Name _taxBranchName = taxBranchName)
    {
        taxBranchName  = _taxBranchName ;
        return taxBranchName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxNatureOfAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxNatureOfAddress_TH.
    /// </summary>
    /// <param name="_taxNatureOfAddress">
    /// The new value of the datacontract parameter TaxNatureOfAddress_TH; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxNatureOfAddress_TH.
    /// </returns>
    [DataMemberAttribute('TaxAddressType')]
    public TaxNatureOfAddress_TH parmTaxNatureOfAddress(TaxNatureOfAddress_TH _taxNatureOfAddress = taxNatureOfAddress)
    {
        taxNatureOfAddress = _taxNatureOfAddress;
        return taxNatureOfAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRegistrationNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxRegistrationNumber.
    /// </summary>
    /// <param name="_taxRegistrationNumber">
    /// The new value of the datacontract parameter TaxRegistrationNumber; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxRegistrationNumber.
    /// </returns>
    [DataMemberAttribute('TaxRegistrationNumber')]
    public TaxRegistrationNumber parmTaxRegistrationNumber(TaxRegistrationNumber _taxRegistrationNumber = taxRegistrationNumber)
    {
        taxRegistrationNumber = _taxRegistrationNumber;
        return taxRegistrationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTitle</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Name parmTitle(Name _title = title)
    {
        title = _title;
        return title;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTitleNote</Name>
				<Source><![CDATA[
    [DataMemberAttribute('TitleNote')]
    public Name parmTitleNote(Name _titleNote = titleNote)
    {
        titleNote = _titleNote;
        return titleNote;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemarkTxt</Name>
				<Source><![CDATA[
    [DataMemberAttribute('RemarkTxt')]
    public Description255 parmRemarkTxt(Description255 _remarkTxt = remarkTxt)
    {
        remarkTxt = _remarkTxt;
        return remarkTxt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAdjustmentDetailsTxt</Name>
				<Source><![CDATA[
    [DataMemberAttribute('AdjustmentDetailsTxt')]
    public Description255 parmAdjustmentDetailsTxt(Description255 _adjustmentDetailsTxt = adjustmentDetailsTxt)
    {
        adjustmentDetailsTxt = _adjustmentDetailsTxt;
        return adjustmentDetailsTxt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTypeOfReport</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public boolean parmTypeOfReport(boolean _typeOfReport = typeOfReport)
    {
        typeOfReport  = _typeOfReport;
        return typeOfReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVAT</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public TaxAmountCur parmVAT(TaxAmountCur _vatNum = vatNum)
    {
        vatNum  = _vatNum ;
        return vatNum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>