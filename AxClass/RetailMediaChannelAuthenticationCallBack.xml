<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMediaChannelAuthenticationCallBack</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailMediaChannelAuthenticationCallBack</c> class provides functionality to process authentication callback URI.
/// The class is designed to be called by a menu item.
/// </summary>
class RetailMediaChannelAuthenticationCallBack
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Invokes the <c>RetailMediaChannelAuthenticationCallBack.ProsessAuthenticationCallBackUri()</c> method.
    /// The method is used as an entry point for a menu item.
    /// </summary>
    /// <param name = "_args">The instance of <c>Args</c> class.</param>
    public static void Main(Args _args)
    {
        RetailMediaChannelAuthenticationCallBack retailMediaChannelAuthenticationCallBack = new RetailMediaChannelAuthenticationCallBack();
        System.Uri currentUri = RetailCommonWebAPI::GetCurrentUri();
        retailMediaChannelAuthenticationCallBack.ProsessAuthenticationCallBackUri(currentUri);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProsessAuthenticationCallBackUri</Name>
				<Source><![CDATA[
    /// <summary>
    /// Presesses authentication callback URI.
    /// </summary>
    /// <param name = "_uri">The callback URI.</param>
    public void ProsessAuthenticationCallBackUri(System.Uri _uri)
    {
        if (_uri == null)
        {
            throw error(strFmt("@SYS118114",funcName()));
        }

        RecId recordId = RetailCommonWebAPI::GetAuthenticationRecIdPrameterValue(_uri.get_Query());

        RetailMediaChannelConnectorSettings settings;
        select firstonly crosscompany settings where settings.RecId == recordId;

        if (!settings)
        {
            throw error("@RET4230050");
        }

        changecompany(settings.company())
        {
            RetailMediaChannelConnector connector = RetailMediaChannelFactory::getMediaChannelConnector(settings);
            connector.ProsessAuthenticationCallBackUri(_uri);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>