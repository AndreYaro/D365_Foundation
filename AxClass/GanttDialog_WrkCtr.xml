<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttDialog_WrkCtr</Name>
	<SourceCode>
		<Declaration><![CDATA[
class GanttDialog_WrkCtr extends GanttDialog
{
    #define.CancelButtonName('CancelButton')

    const int DialogColumns2 = 2;
    const int DialogColumns3 = 3;
    const int DialogColumns4 = 4;
    const int DialogColumns5 = 5;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ganttClient</Name>
				<Source><![CDATA[
    public GanttClient ganttClient()
    {
        return this.parmGanttVisualization().parmGanttClient();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ganttSetup</Name>
				<Source><![CDATA[
    public GanttSetup_WrkCtr ganttSetup()
    {
        return this.parmGanttVisualization().parmGanttClient().parmGanttSetup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>info</Name>
				<Source><![CDATA[
    public void info(RecId _recId)
    {
        GanttTmpWrkCtrJob ganttTmpWrkCtrJob;

        if (!_recId)
        {
            return;
        }

        ganttTmpWrkCtrJob = this.parmGanttVisualization().parmGanttClient().parmGanttData().getRecordByRecId(tablestr(GanttTmpWrkCtrJob), _recId);

        switch (ganttTmpWrkCtrJob.RefType)
        {
            case WrkCtrCapRefType::Production   :

                this.infoProd(ganttTmpWrkCtrJob);
                break;

            case WrkCtrCapRefType::PlannedOrder :

                this.infoPlannedProd(ganttTmpWrkCtrJob);
                break;

            case WrkCtrCapRefType::Project      :

                this.infoProject(ganttTmpWrkCtrJob);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>infoPlannedProd</Name>
				<Source><![CDATA[
    protected void infoPlannedProd(GanttTmpWrkCtrJob _ganttTmpWrkCtrJob)
    {
        this.infoProdAndPlannedProd(_ganttTmpWrkCtrJob, WrkCtrCapRefType::PlannedOrder);        
    }

]]></Source>
			</Method>
			<Method>
				<Name>infoProdAndPlannedProd</Name>
				<Source><![CDATA[
    protected void infoProdAndPlannedProd(GanttTmpWrkCtrJob _ganttTmpWrkCtrJob, WrkCtrCapRefType _expectedRefType)
    {
        if (!_ganttTmpWrkCtrJob.RecId)
        {
            throw error(strfmt("@SYS27147", classId2Name(classidget(this))));
        }

        if (_ganttTmpWrkCtrJob.RefType != _expectedRefType)
        {
            throw error(strfmt("@SYS113113", _ganttTmpWrkCtrJob.RefType, _expectedRefType));
        }

        
        MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(GanttWrkCtrJobInfo), MenuItemType::Display);
        
        Args args = new Args();
        args.record(_ganttTmpWrkCtrJob);
        args.caller(this);
        args.parmObject(this.ganttClient().parmGanttData());

        FormRun formRun = menuFunction.create(args);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>infoProd</Name>
				<Source><![CDATA[
    protected void infoProd(GanttTmpWrkCtrJob _ganttTmpWrkCtrJob)
    {
        this.infoProdAndPlannedProd(_ganttTmpWrkCtrJob, WrkCtrCapRefType::Production);        
    }

]]></Source>
			</Method>
			<Method>
				<Name>infoProject</Name>
				<Source><![CDATA[
    protected void infoProject(GanttTmpWrkCtrJob _ganttTmpWrkCtrJob)
    {
        if (!_ganttTmpWrkCtrJob.RecId)
        {
            throw error(strfmt("@SYS27147", classId2Name(classidget(this))));
        }

        if (_ganttTmpWrkCtrJob.RefType != WrkCtrCapRefType::Project)
        {
            throw error(strfmt("@SYS113113", _ganttTmpWrkCtrJob.RefType, WrkCtrCapRefType::Project));
        }

        ProjForecastEmpl projForecastEmpl = ProjForecastEmpl::findRecId(str2int64(_ganttTmpWrkCtrJob.JobId));

        if (!projForecastEmpl.RecId)
        {
            warning(strfmt("@SYS113080", _ganttTmpWrkCtrJob.JobId, tablepname(ProjForecastEmpl)));
        }

        smmActivities smmActivities;
        if (projForecastEmpl.ActivityNumber)
        {
            smmActivities = smmActivities::find(projForecastEmpl.ActivityNumber);

            if (!smmActivities.RecId)
            {
                warning("@SYS50966");
            }
        }

        Caption caption  = "@SYS84655";

        if (projForecastEmpl.Txt)
        {
            caption = strFmt("@SCM:PlaceholderStringOneSpaceTwo", caption, projForecastEmpl.Txt);
        }

        Dialog dialog = this.createDialog(caption);
        dialog.form().design().dialogSize(2);
        dialog.form().design().control(#CancelButtonName).visible(0);

        ProjTable projTable = ProjTable::find(_ganttTmpWrkCtrJob.RefId);

        FormBuildTabPageControl detailsTabPage = dialog.addTabPage("@SYS8811").control();
        detailsTabPage.fastTabExpanded(true);

        // Identification
        this.addFieldGroup(dialog, '', DialogColumns4);
        this.addFieldGroup(dialog, "@SYS5711", DialogColumns3);
        this.addField(dialog, extendedtypestr(ProjEmplForecastTransId),  fieldpname(ProjForecastEmpl, TransId),          projForecastEmpl.TransId, false);
        this.addField(dialog, extendedtypestr(ProjForecastModelId),      fieldpname(ProjForecastEmpl, ModelId),          projForecastEmpl.ModelId, false);
        this.addField(dialog, extendedtypestr(TransTxt),                 fieldpname(ProjForecastEmpl, Txt),              projForecastEmpl.Txt, false);

        this.addFieldGroup(dialog, '', DialogColumns3);
        this.addField(dialog, extendedtypestr(ProjActivityNumber),       fieldpname(ProjForecastEmpl, ActivityNumber),   projForecastEmpl.ActivityNumber, false);
        this.addField(dialog, extendedtypestr(ProjCategoryId),           fieldpname(ProjForecastEmpl, CategoryId),       projForecastEmpl.CategoryId, false);
        this.addField(dialog, extendedtypestr(smmActivityPurpose),       "@SYS113142",                                   smmActivities.Purpose, false);

        // Project
        this.addFieldGroup(dialog, "@SYS334314", DialogColumns3);
        this.addField(dialog, extendedtypestr(ProjId),                   fieldpname(ProjTable,ProjId),                   projTable.ProjId);
        this.addField(dialog, extendedtypestr(ItemName),                 fieldpname(ProjTable,Name),                     projTable.Name);
        this.addField(dialog, enumstr(ProjStatus),                       "@SYS97298",                                    projTable.Status, false);

        this.addFieldGroup(dialog, '', DialogColumns2);
        ResourceCategoryView resourceCategoryView = ResourceCategoryView::find(projForecastEmpl.ResourceCategory);
        if (resourceCategoryView)
        {
            this.addField(dialog, extendedtypestr(PSASchedRoleId),       fieldpname(ProjForecastEmpl, ResourceCategory), resourceCategoryView.CategoryId);
        }

        ResourceView resourceView = ResourceView::find(projForecastEmpl.Resource);
        if (resourceView)
        {
            this.addField(dialog, extendedtypestr(WrkCtrIdBase),        fieldpname(ResResourceWorkCenterView, ResourceId),          resourceView.ResourceId);
            this.addField(dialog, extendedtypestr(DataAreaId),          fieldpname(ResResourceWorkCenterView, ResourceCompanyId),   resourceView.ResourceCompanyId);
        }

        // Scheduling
        this.addFieldGroup(dialog, "@SYS334139", DialogColumns4);
        this.addField(dialog, extendedtypestr(StartDate),     fieldpname(ProdRoute,FromDate),                            _ganttTmpWrkCtrJob.SchedFromDate);
        this.addField(dialog, extendedtypestr(timeOfDay),     fieldpname(ProdRoute,FromTime),                            _ganttTmpWrkCtrJob.SchedFromTime);

        this.addField(dialog, extendedtypestr(EndDate),       fieldpname(ProdRoute,ToDate),                              _ganttTmpWrkCtrJob.SchedToDate);
        this.addField(dialog, extendedtypestr(timeOfDay),     fieldpname(ProdRoute,ToTime),                              _ganttTmpWrkCtrJob.SchedToTime);

        this.addField(dialog, extendedtypestr(WrkCtrLoadPct), fieldpname(WrkCtrActivityRequirementSet,LoadPercent),      _ganttTmpWrkCtrJob.LoadPercent);

        // Quantity
        this.addFieldGroup(dialog, "@SYS3065", DialogColumns2);
        this.addField(dialog, extendedtypestr(ProjQtyEmpl),              fieldpname(ProjForecastEmpl, Qty),              projForecastEmpl.Qty, false);

        // Resource
        this.addFieldGroup(dialog, "@SYS89158", DialogColumns4);
        this.addField(dialog, extendedtypestr(InventSiteId),             "@SYS103211",                                   _ganttTmpWrkCtrJob.InventSiteId);
        this.addField(dialog, extendedtypestr(ProdUnitId),              fieldpname(GanttTmpWrkCtrJob, ProdUnitId),       _ganttTmpWrkCtrJob.ProdUnitId);
        this.addField(dialog, extendedtypestr(WrkCtrGroupId),           fieldpname(GanttTmpWrkCtrJob, WrkCtrGroupId),    _ganttTmpWrkCtrJob.WrkCtrGroupId);
        this.addField(dialog, extendedtypestr(WrkCtrId),                fieldpname(ProdRouteJob,WrkCtrId),               _ganttTmpWrkCtrJob.WrkCtrId);

        dialog.run(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGanttVisualization</Name>
				<Source><![CDATA[
    public GanttVisualization parmGanttVisualization(GanttVisualization _ganttVisualization = ganttVisualization)
    {
        return super(_ganttVisualization);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GanttDialog_WrkCtr construct()
    {
        return new GanttDialog_WrkCtr();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDialogFromVisualization</Name>
				<Source><![CDATA[
    public static GanttDialog_WrkCtr newDialogFromVisualization(GanttVisualization _ganttVisualization)
    {
        GanttDialog_WrkCtr ganttDialog = GanttDialog_WrkCtr::construct();

        ganttDialog.parmGanttVisualization(_ganttVisualization);

        return ganttDialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findReqRouteJob</Name>
				<Source><![CDATA[
    private static ReqRouteJob findReqRouteJob(ReqPO _reqPO,  GanttTmpWrkCtrJob _ganttTmpWrkCtrJob)
    {
        ReqRouteJob reqRouteJob;
        select firstonly reqRouteJob
            order by NumType, NumPrimary
            where    reqRouteJob.PlanVersion    == _reqPO.PlanVersion
                  && reqRouteJob.ReqPOId        == _reqPO.RefId
                  && reqRouteJob.OprNum         == _ganttTmpWrkCtrJob.OprNum
                  && reqRouteJob.OprPriority    == _ganttTmpWrkCtrJob.OprPriority;

        return reqRouteJob;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>