<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductTranslationsViewSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Ax.Xpp;
using Microsoft.Dynamics.AX.Metadata.MetaModel;
using Microsoft.Dynamics.AX.Framework.Analytics.Shared;

/// <summary>
/// The <c>EcoResProductTranslationsViewSetup</c> class is the setup class for building the <c>EcoResProductTranslations</c>
/// view when the <c>EcoResProductTranslationFallbackFeature</c> is enabled. Upon db sync, a batch job will be created to generate this view if the conditions are met.
/// The new view is an union of two views, <c>EcoResProductTranslationsView</c> view and <c>EcoResProductTranslationsFallback</c> view.
/// </summary>
[SysSetupTableAttribute(viewstr(EcoResProductTranslations))]
[SysSetupConfigAttribute(false, 300, 0.0)]
public final class EcoResProductTranslationsViewSetup extends SysSetupAsync implements SysSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void loadData()
    {
        MetadataHelper metadataHelper = new MetadataHelper(AggregateMetadataHelper::MetadataProvider);
        AxView translationsView = MetadataSupport::GetView(viewstr(EcoResProductTranslations));
        var extensions = metadataHelper.GetExtensionsForView(translationsView);
        var enumerator = extensions.getEnumerator();

        boolean fallbackFeatureEnabled = FeatureStateProvider::isFeatureEnabled(EcoResProductTranslationFallbackFeature::instance());

        if (fallbackFeatureEnabled || (!enumerator.moveNext() && fallbackFeatureEnabled))
        {
            EcoResProductTranslationsViewBuilder::buildEcoResProductTranslationsView(); 
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>