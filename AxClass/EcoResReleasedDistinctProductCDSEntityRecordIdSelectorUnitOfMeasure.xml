<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResReleasedDistinctProductCDSEntityRecordIdSelectorUnitOfMeasure</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

[ExportMetadata(identifierStr(TableName), tableStr(UnitOfMeasure))]
[ExportMetadata(identifierStr(EntityName), dataentityviewstr(EcoResReleasedDistinctProductCDSEntity))]
[Export(identifierstr(Dynamics.AX.Application.IBusinessEventsTableToEntityRecordIdSelector))]
internal final class EcoResReleasedDistinctProductCDSEntityRecordIdSelectorUnitOfMeasure implements IBusinessEventsTableToEntityRecordIdSelector
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityRecordIdsImpactedByTableChange</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public List getEntityRecordIdsImpactedByTableChange(BusinessEventsDefinition _eventDefinition, BusinessEventsActions _changeType, RecId _changedRecordId)
    {
        List impactedRecIds = new List(Types::Int64);

        ModuleInventPurchSales moduleType;

        if (_eventDefinition.DataSourceName == dataEntityDataSourceStr(EcoResReleasedDistinctProductCDSEntity, UnitOfMeasure))
        {
            moduleType = ModuleInventPurchSales::Sales;
        }
        else if (_eventDefinition.DataSourceName == dataEntityDataSourceStr(EcoResReleasedDistinctProductCDSEntity, UnitOfMeasureInvent))
        {
            moduleType = ModuleInventPurchSales::Invent;
        }
        else
        {
            return null;
        }

        InventDistinctProduct inventDistinctProduct;
        InventTableModule inventTableModule;
        UnitOfMeasure unitOfMeasure;

        while select RecId from inventDistinctProduct
            exists join inventTableModule
            exists join unitOfMeasure
            where inventDistinctProduct.ItemId == inventTableModule.ItemId
                && unitOfMeasure.Symbol == inventTableModule.UnitId
                && unitOfMeasure.RecId == _changedRecordId
                && inventTableModule.ModuleType == moduleType
        {
            impactedRecIds.addEnd(inventDistinctProduct.RecId);
        }

        return impactedRecIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>