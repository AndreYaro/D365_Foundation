<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCommitmentWFCancelManager_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchCommitmentWFCancelManager_PSN</c> class is used to cancel a commitment
/// workflow.
/// </summary>
/// <remarks>
/// This class inherits from the <c>WorkflowCancelManager</c> class and handles the update of the commitment
/// record when the Cancel button has been pressed. The commitment is set into a
/// pending cancellation status and this is presented to the user immediately.The default dialog box
/// and cancel functionality from the <c>WorkflowCancelManager</c> class is reused.
/// </remarks>
public class PurchCommitmentWFCancelManager_PSN extends WorkflowCancelManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>WorkflowCancelDialog</c> class to surface a cancel dialog box and performs the
    ///    cancellation logic for the selected workflow instance or instances.
    /// </summary>
    /// <param name="_args">
    ///    The arguments for the <c>WorkflowCancelManager</c> class.
    /// </param>
    /// <exception cref="M:Exception::Error">
    ///    The specified arguments are null.
    /// </exception>
    public void run(Args _args)
    {
        if (!_args)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        super(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the commitment document workflow status for the cancel action.
    /// </summary>
    /// <param name="_args">
    /// The arguments for the <c>PurchCommitmentWFCancelManager_PSN</c> class.
    /// </param>
    public void updateDocument(Args _args)
    {
        FormDataSource                  purchCommitmentHeader_PSN_ds;
        PurchCommitmentHeader_PSN       purchCommitmentHeader_PSN;

        purchCommitmentHeader_PSN = _args.record() as PurchCommitmentHeader_PSN;

        if (purchCommitmentHeader_PSN)
        {
            PurchCommitmentHeader_PSN::setWorkflowState(purchCommitmentHeader_PSN.RecId, PurchCommitmentWorkflowApprovalState_PSN::NotSubmitted);

            if (FormDataUtil::getFormDataSource(purchCommitmentHeader_PSN))
            {
                // Update the data source when called from a client form.
                purchCommitmentHeader_PSN_ds = FormDataUtil::getFormDataSource(purchCommitmentHeader_PSN);
                purchCommitmentHeader_PSN_ds.research(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>PurchCommitmentWFCancelManager_PSN</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>PurchCommitmentWFCancelManager_PSN</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PurchCommitmentWFCancelManager_PSN construct()
    {
        return new PurchCommitmentWFCancelManager_PSN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is primary main method to be invoked via the selection of a menu item.
    /// </summary>
    /// <param name="_args">
    /// Menu item arguments.
    /// </param>
    public static void main(Args _args)
    {
        PurchCommitmentWFCancelManager_PSN   workflowCancelManager = PurchCommitmentWFCancelManager_PSN::construct();

        workflowCancelManager.run(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>