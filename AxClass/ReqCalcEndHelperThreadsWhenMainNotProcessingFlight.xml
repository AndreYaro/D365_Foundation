<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqCalcEndHelperThreadsWhenMainNotProcessingFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqCalcEndHelperThreadsWhenMainNotProcessingFlight</c> controls whether helper tasks periodically check if the main thread is stuck 
/// when no more tasks are available for processing.
/// If this condition is detected, the helper is terminated to free up capacity, and the main thread is allowed to recreate helpers when it resumes execution.
/// </summary>
/// <remarks>
/// Sometimes, when the number of tasks in a batch exceeds the maximum batch thread limit, the main thread may become stuck after a Batch Service restart. 
/// In this scenario, the main thread remains in the 'Ready' status while all available helper threads are in the 'Executing' status. 
/// This behavior is during MRP native restart - resume.
/// </remarks>
internal final class ReqCalcEndHelperThreadsWhenMainNotProcessingFlight extends Flight
{
    private static ReqCalcEndHelperThreadsWhenMainNotProcessingFlight singleton = new ReqCalcEndHelperThreadsWhenMainNotProcessingFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static ReqCalcEndHelperThreadsWhenMainNotProcessingFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>