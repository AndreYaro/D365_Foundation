<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankAccountStatementDateUpdateProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class BankAccountStatementDateUpdateProcessor
{
    private BankAccountStatement bankAccountStatement;
    private TransDate newStatementDate;
    private BankAccountStatementNum newStatementNum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>performUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the update of all tables that need updating when a bank account statement is edited.
    /// </summary>
    internal void performUpdate() 
    {
        TransDate oldStatementDate = bankAccountStatement.AccountStatementDate;
        BankAccountStatementNum oldStatementNum = bankAccountStatement.AccountStatementNum;
        CompanyBankAccountId accountId = bankAccountStatement.AccountId;
        RefRecId originalRecId = bankAccountStatement.RecId;

        ttsbegin;
        this.updateBankAccountStatement(newStatementDate, newStatementNum);

        this.updateBankAccountTrans(oldStatementDate, newStatementDate, oldStatementNum, newStatementNum, accountId);

        this.logUpdate(oldStatementDate, newStatementDate, oldStatementNum, newStatementNum, accountId, originalRecId);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankAccountStatement</Name>
				<Source><![CDATA[
    private void updateBankAccountStatement(
        TransDate _newStatementDate,
        BankAccountStatementNum _newStatementNum)
    {
        BankAccountStatement bankAccountStatementLocal;

        update_recordset bankAccountStatementLocal
            setting
                AccountStatementDate = _newStatementDate,
                AccountStatementNum = _newStatementNum
            where 
                bankAccountStatementLocal.RecId == bankAccountStatement.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankAccountTrans</Name>
				<Source><![CDATA[
    private void updateBankAccountTrans(
        TransDate _oldStatementDate,
        TransDate _newStatementDate,
        BankAccountStatementNum _oldStatementNum,
        BankAccountStatementNum _newStatementNum,
        CompanyBankAccountId _bankAccountId)
    {
        BankAccountTrans bankAccountTrans;

        update_recordset bankAccountTrans
            setting
                AccountStatementDate = _newStatementDate,
                AccountStatement = _newStatementNum
            where
                bankAccountTrans.AccountStatementDate == _oldStatementDate
                    && bankAccountTrans.AccountStatement == _oldStatementNum
                    && bankAccountTrans.AccountId == _bankAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logUpdate</Name>
				<Source><![CDATA[
    private void logUpdate(
        TransDate _oldStatementDate,
        TransDate _newStatementDate,
        BankAccountStatementNum _oldStatementNum,
        BankAccountStatementNum _newStatementNum,
        CompanyBankAccountId _bankAccountId,
        RefRecId _originalRecId)
    {
        BankAccountStatementChanged::insertChangedBankStatement(
            _oldStatementDate, _newStatementDate, _oldStatementNum, _newStatementNum, _bankAccountId, _originalRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBankAccountStatement</Name>
				<Source><![CDATA[
    internal static BankAccountStatementDateUpdateProcessor newFromBankAccountStatement(
        BankAccountStatement _bankAccountStatement,
        TransDate _newStatementDate,
        BankAccountStatementNum _newStatementNum)
    {
        BankAccountStatementDateUpdateProcessor bankAccountStatementDateUpdateProcessor = new BankAccountStatementDateUpdateProcessor();

        bankAccountStatementDateUpdateProcessor.bankAccountStatement = _bankAccountStatement;
        bankAccountStatementDateUpdateProcessor.newStatementDate = _newStatementDate;
        bankAccountStatementDateUpdateProcessor.newStatementNum = _newStatementNum;

        return bankAccountStatementDateUpdateProcessor;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>