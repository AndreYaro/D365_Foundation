<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionInquiryRequestLedgerCov</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetTransactionInquiryRequestLedgerCov</c> class extends the
/// <c>BudgetTransactionInquiryRequest</c> class to specify additional information that is required to
/// inquire on the budget transactions for the <c>LedgerCov</c> records.
/// </summary>
public class BudgetTransactionInquiryRequestLedgerCov extends BudgetTransactionInquiryRequest
{
    RefRecId budgetTransactionLineId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addLineRangesToQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds the <c>BudgetTransactionLine</c> record query ranges to the specified query.
    /// </summary>
    /// <param name="_query">
    ///    The query for which to add the ranges.
    /// </param>
    public void addLineRangesToQuery(Query _query)
    {
        QueryBuildDataSource budgetTransactionLineDS;

        super(_query);

        if (budgetTransactionLineId)
        {
            budgetTransactionLineDS = _query.dataSourceTable(tableNum(BudgetTransactionLine));

            if (budgetTransactionLineDS)
            {
                // Add a range so that only the BudgetTransactionLine that is associated to the cashflow record is returned.
                budgetTransactionLineDS.clearRange(fieldnum(BudgetTransactionLine, RecId));
                budgetTransactionLineDS.addRange(fieldnum(BudgetTransactionLine, RecId)).value(SysQuery::value(budgetTransactionLineId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>BudgetTransactionInquiryRequestLedgerCov</c> class.
    /// </summary>
    /// <param name="_common">
    ///    The record from which to initialize.
    /// </param>
    public void initialize(Common _common)
    {
        LedgerCov ledgerCov;

        if (_common &&
            _common.TableId == tableNum(LedgerCov))
        {
            ledgerCov = _common as LedgerCov;

            if (ledgerCov.TransTableId == tableNum(BudgetTransactionLine))
            {
                budgetTransactionLineId = ledgerCov.TransRecId;
            }
            else
            {
                budgetTransactionLineId = 0;
            }
        }
        else
        {
            budgetTransactionLineId = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an instance of the <c>BudgetTransactionInquiryRequestLedgerCov</c> class.
    /// </summary>
    /// <param name="_common">
    ///    The record from which to construct the instance; optional.
    /// </param>
    /// <returns>
    ///    An instance of the <c>BudgetTransactionInquiryRequestLedgerCov</c> class.
    /// </returns>
    public static BudgetTransactionInquiryRequestLedgerCov construct(Common _common)
    {
        BudgetTransactionInquiryRequestLedgerCov transactionInquiryRequest;

        transactionInquiryRequest = new BudgetTransactionInquiryRequestLedgerCov();
        transactionInquiryRequest.initialize(_common);

        return transactionInquiryRequest;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>