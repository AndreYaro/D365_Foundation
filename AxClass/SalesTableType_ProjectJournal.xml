<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTableType_ProjectJournal</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SalesLineTypeFactoryAttribute(SalesType::Journal, NoYes::Yes)]
class SalesTableType_ProjectJournal extends SalesTableType_Project
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canConfirmationBeUpdated</Name>
				<Source><![CDATA[
    boolean  canConfirmationBeUpdated(DocumentStatus _documentStatus = DocumentStatus::Confirmation)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCreditNoteBeCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the sales order can be credited.
    /// </summary>
    /// <returns>
    ///    Always returns false.
    /// </returns>
    public boolean canCreditNoteBeCreated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchaseType</Name>
				<Source><![CDATA[
    public PurchaseType purchaseType()
    {
        return PurchaseType::Journal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canExplosionBeExecuted</Name>
				<Source><![CDATA[
    boolean canExplosionBeExecuted()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canInvoiceBeUpdated</Name>
				<Source><![CDATA[
    boolean  canInvoiceBeUpdated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPackingslipBeUpdated</Name>
				<Source><![CDATA[
    boolean  canPackingslipBeUpdated(DocumentStatus _documentStatus = DocumentStatus::PackingSlip)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPickingListBeUpdated</Name>
				<Source><![CDATA[
    boolean  canPickingListBeUpdated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canTypeBeChanged</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the sales order type can be changed.
    /// </summary>
    /// <returns>
    ///    true if the sales order type can be changed; otherwise, false.
    /// </returns>
    public boolean canTypeBeChanged()
    {
        boolean ret = super();

        if (salesTable.SalesType != salesTable.orig().SalesType &&
            salesTable.agreementIsLinked())
        {
            ret = checkFailed("@SYS135977");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUpdateRemainingQty</Name>
				<Source><![CDATA[
    boolean canUpdateRemainingQty()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventLotInvoke</Name>
				<Source><![CDATA[
    boolean  inventLotInvoke()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventReservationInvoke</Name>
				<Source><![CDATA[
    boolean  inventReservationInvoke()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransactInvoke</Name>
				<Source><![CDATA[
    boolean  inventTransactInvoke()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mayConfirmationBeUpdated</Name>
				<Source><![CDATA[
    boolean  mayConfirmationBeUpdated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mayInvoiceBeUpdated</Name>
				<Source><![CDATA[
    boolean mayInvoiceBeUpdated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mayPackingSlipBeUpdated</Name>
				<Source><![CDATA[
    boolean mayPackingSlipBeUpdated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mayPickingListBeRegistered</Name>
				<Source><![CDATA[
    boolean  mayPickingListBeRegistered()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mayPickingListBeUpdated</Name>
				<Source><![CDATA[
    boolean mayPickingListBeUpdated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeCovPlanned</Name>
				<Source><![CDATA[
    boolean  mustBeCovPlanned()
    {
        LedgerCov::deleteTransact(salesTable.TableId, salesTable.RecId);

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showProductionMenu</Name>
				<Source><![CDATA[
    boolean  showProductionMenu()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean  validateWrite()
    {
        boolean ok = true;

        ok = super();

        if (!salesTable.CustAccount)
        {
            ok = checkFailed("@SYS16702");
        }

        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
