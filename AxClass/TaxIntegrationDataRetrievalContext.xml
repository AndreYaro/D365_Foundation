<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationDataRetrievalContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntegrationDataRetrievalContext</c> class is a context for data retrieval activity.
/// </summary>
internal final class TaxIntegrationDataRetrievalContext
{
    private Map shipmentAddressCache;
    private Map salesPurchTotalsDiscCache;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        shipmentAddressCache = new Map(Types::String, Types::Class);
        salesPurchTotalsDiscCache = new Map(Types::String, Types::Real);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShipmentAddressObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets shipment address object. Return null if no such key in the cache.
    /// </summary>
    /// <param name = "_key">The cache key.</param>
    /// <returns>The <c>TaxIntegrationAddressObject</c>.</returns>
    public TaxIntegrationAddressObject getShipmentAddressObject(str _key)
    {
        TaxIntegrationAddressObject result = null;

        if (shipmentAddressCache.exists(_key))
        {
            result = shipmentAddressCache.lookup(_key);
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cacheShipmentAddressObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Caches shipment adddress object. If the key already exists in the cache, the value is updated.
    /// </summary>
    /// <param name = "_key">The cache key.</param>
    /// <param name = "_addressObject">The <c>TaxIntegrationAddressObject</c>.</param>
    /// <returns>true if the key did not already exist in the cache and has been inserted; otherwise, false.</returns>
    public boolean cacheShipmentAddressObject(str _key, TaxIntegrationAddressObject _addressObject)
    {
        return shipmentAddressCache.insert(_key, _addressObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesPurchTotalsDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total discount percent of sales or purchase. Return 0 if no such key in the cache.
    /// </summary>
    /// <param name = "_key">The cache key.</param>
    /// <param name = "_skipExistenceCheck">true if should skip the validation of the cache key existence; otherwise, false.</param>
    /// <returns>The total discount percent of sales or purchase</returns>
    /// <remarks>
    /// If the validation of the cache key existence is checked, set <typeparamref name="_skipExistenceCheck"/> to true to avoid
    /// duplicate check; otherwise false.
    /// </remarks>
    public DiscPct getSalesPurchTotalsDiscPercent(str _key, boolean _skipExistenceCheck = false)
    {
        DiscPct result;

        if (_skipExistenceCheck || salesPurchTotalsDiscCache.exists(_key))
        {
            result = salesPurchTotalsDiscCache.lookup(_key);
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cacheSalesPurchTotalsDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Caches the total discount percent of sales or purchase. If the key already exists in the cache, the value is updated.
    /// </summary>
    /// <param name = "_key">The cache key.</param>
    /// <param name = "_discPct">The total discount percent of sales or purchase.</param>
    /// <returns>true if the key did not already exist in the cache and has been inserted; otherwise, false.</returns>
    public boolean cacheSalesPurchTotalsDiscPercent(str _key, DiscPct _discPct)
    {
        return salesPurchTotalsDiscCache.insert(_key, _discPct);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsSalesPurchTotalsDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the total discount percent of sales or purchase existed.
    /// </summary>
    /// <param name = "_key">The cache key.</param>
    /// <returns>true if the key did already exist in the cache; otherwise, false.</returns>
    public boolean existsSalesPurchTotalsDiscPercent(str _key)
    {
        return salesPurchTotalsDiscCache.exists(_key);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>