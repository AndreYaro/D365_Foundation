<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSGS1DefaultParsingSetupCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class WHSGS1DefaultParsingSetupCreator
{
    RecordInsertList parsingSetupList;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSGS1DefaultParsingSetupCreator::createDefaultParsingSetup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDefaultParsingSetup</Name>
				<Source><![CDATA[
    private static void createDefaultParsingSetup()
    {
        ttsbegin;

        WHSGS1DefaultParsingSetupCreator::clearParsingSetup();
        WHSGS1DefaultParsingSetupCreator defaultParsingSetupCreator = new WHSGS1DefaultParsingSetupCreator();
        defaultParsingSetupCreator.insertDefaultValues();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearParsingSetup</Name>
				<Source><![CDATA[
    private static void clearParsingSetup()
    {
        WHSGS1ParsingSetup parsingSetup;

        delete_from parsingSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDefaultValues</Name>
				<Source><![CDATA[
    private void insertDefaultValues()
    {
        parsingSetupList = new RecordInsertList(tableNum(WHSGS1ParsingSetup));

        this.populateRecordInsertList();

        parsingSetupList.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateRecordInsertList</Name>
				<Source><![CDATA[
    private void populateRecordInsertList()
    {
        this.addRecord(WHSGS1DefaultIdentifiers::SSCCIdentifier, 'SSCC', NoYes::Yes, 18, WHSGS1Type::Numeric);
        this.addRecord(WHSGS1DefaultIdentifiers::GTINIdentifier, 'GTIN', NoYes::Yes, 14, WHSGS1Type::Numeric);
        this.addRecord(WHSGS1DefaultIdentifiers::GTIN2Identifier, 'GTIN (EAN-14)', NoYes::Yes, 14, WHSGS1Type::Numeric);
        this.addRecord(WHSGS1DefaultIdentifiers::BatchIdentifier, 'Batch', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord(WHSGS1DefaultIdentifiers::ProdDateIdentifier, 'Production date', NoYes::Yes, 6, WHSGS1Type::Date);
        this.addRecord(WHSGS1DefaultIdentifiers::BBDateIdentifier, 'Best Before date', NoYes::Yes, 6, WHSGS1Type::Date);
        this.addRecord(WHSGS1DefaultIdentifiers::ExpDateIdentifier, 'Expiry date', NoYes::Yes, 6, WHSGS1Type::Date);
        this.addRecord(WHSGS1DefaultIdentifiers::SerialIdentifier, 'Serial number', NoYes::No, 20, WHSGS1Type::Numeric);
        this.addRecord(WHSGS1DefaultIdentifiers::QtyIdentifier, 'Quantity', NoYes::No, 8, WHSGS1Type::Numeric);
        this.addRecord(WHSGS1DefaultIdentifiers::CountIdentifier, 'Count of trade items', NoYes::No, 8, WHSGS1Type::Numeric);

        this.addRecord('12', 'Due date (YYMMDD)', NoYes::Yes, 6, WHSGS1Type::Numeric);
        this.addRecord('13', 'Packaging date (YYMMDD)', NoYes::Yes, 6, WHSGS1Type::Numeric);
        this.addRecord('16', 'Sell by date (YYMMDD)', NoYes::Yes, 6, WHSGS1Type::Numeric);
        this.addRecord('20', 'Internal product variant', NoYes::Yes, 2, WHSGS1Type::Numeric);
        this.addRecord('22', 'Consumer product variant', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('235', 'Third Party Controlled, Serialised Extension of Global Trade Item Number (GTIN) (TPX)', NoYes::No, 28, WHSGS1Type::Alfanumeric);
        this.addRecord('240', 'Additional product identification assigned by the manufacturer', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('241', 'Customer part number', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('242', 'Made-to-Order variation number', NoYes::No, 6, WHSGS1Type::Numeric);
        this.addRecord('243', 'Packaging component number', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('250', 'Secondary serial number', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('251', 'Reference to source entity', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('254', 'Global Location Number (GLN) extension component', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('310n', 'Net weight, kilograms (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('311n', 'Length or first dimension, metres (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('312n', 'Width, diameter, or second dimension, metres (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('313n', 'Depth, thickness, height, or third dimension, metres (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('314n', 'Area, square metres (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('315n', 'Net volume, litres (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('316n', 'Net volume, cubic metres (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('320n', 'Net weight, pounds (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('321n', 'Length or first dimension, inches (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('322n', 'Length or first dimension, feet (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('323n', 'Length or first dimension, yards (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('324n', 'Width, diameter, or second dimension, inches (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('325n', 'Width, diameter, or second dimension, feet (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('326n', 'Width, diameter, or second dimension, yards (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('327n', 'Depth, thickness, height, or third dimension, inches (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('328n', 'Depth, thickness, height, or third dimension, feet (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('329n', 'Depth, thickness, height, or third dimension, yards (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('330n', 'Logistic weight, kilograms', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('331n', 'Length or first dimension, metres', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('332n', 'Width, diameter, or second dimension, metres', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('333n', 'Depth, thickness, height, or third dimension, metres', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('334n', 'Area, square metres', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('335n', 'Logistic volume, litres', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('336n', 'Logistic volume, cubic metres', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('337n', 'Kilograms per square metre', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('340n', 'Logistic weight, pounds', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('341n', 'Length or first dimension, inches', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('342n', 'Length or first dimension, feet', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('343n', 'Length or first dimension, yards', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('344n', 'Width, diameter, or second dimension, inches', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('345n', 'Width, diameter, or second dimension, feet', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('346n', 'Width, diameter, or second dimension, yard', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('347n', 'Depth, thickness, height, or third dimension, inches', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('348n', 'Depth, thickness, height, or third dimension, feet', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('349n', 'Depth, thickness, height, or third dimension, yards', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('350n', 'Area, square inches (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('351n', 'Area, square feet (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('352n', 'Area, square yards (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('353n', 'Area, square inches', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('354n', 'Area, square feet', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('355n', 'Area, square yards', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('356n', 'Net weight, troy ounces (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('357n', 'Net weight (or volume), ounces (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('360n', 'Net volume, quarts (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('361n', 'Net volume, gallons U.S. (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('362n', 'Logistic volume, quarts', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('363n', 'Logistic volume, gallons U.S.', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('364n', 'Net volume, cubic inches (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('365n', 'Net volume, cubic feet (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('366n', 'Net volume, cubic yards (variable measure trade item)', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('367n', 'Logistic volume, cubic inches', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('368n', 'Logistic volume, cubic feet', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('369n', 'Logistic volume, cubic yards', NoYes::Yes, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('390n', 'Applicable amount payable or Coupon value, local currency', NoYes::No, 15, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('3910', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3911', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3912', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3913', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3914', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3915', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3916', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3917', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3918', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3919', 'Applicable amount payable with ISO currency code', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('392n', 'Applicable amount payable, single monetary area (variable measure trade item)', NoYes::No, 15, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('3930', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3931', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3932', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3933', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3934', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3935', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3936', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3937', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3938', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('3939', 'Applicable amount payable with ISO currency code (variable measure trade item)', NoYes::No, 18, WHSGS1Type::Alfanumeric);
        this.addRecord('394n', 'Percentage discount of a coupon', NoYes::No, 4, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('395n', 'Amount Payable per unit of measure single monetary area (variable measure trade item)', NoYes::No, 6, WHSGS1Type::Numeric, NoYes::Yes);
        this.addRecord('400', 'Customers purchase order number', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('401', 'Global Identification Number for Consignment (GINC)', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('402', 'Global Shipment Identification Number (GSIN)', NoYes::No, 17, WHSGS1Type::Numeric);
        this.addRecord('403', 'Routing code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('410', 'Ship to / Deliver to Global Location Number (GLN)', NoYes::Yes, 13, WHSGS1Type::Numeric);
        this.addRecord('411', 'Bill to / Invoice to Global Location Number (GLN)', NoYes::Yes, 13, WHSGS1Type::Numeric);
        this.addRecord('412', 'Purchased from Global Location Number (GLN)', NoYes::Yes, 13, WHSGS1Type::Numeric);
        this.addRecord('413', 'Ship for / Deliver for - Forward to Global Location Number (GLN)', NoYes::Yes, 13, WHSGS1Type::Numeric);
        this.addRecord('414', 'Identification of a physical location - Global Location Number (GLN)', NoYes::Yes, 13, WHSGS1Type::Numeric);
        this.addRecord('415', 'Global Location Number (GLN) of the invoicing party', NoYes::Yes, 13, WHSGS1Type::Numeric);
        this.addRecord('416', 'Global Location Number (GLN) of the production or service location', NoYes::Yes, 13, WHSGS1Type::Numeric);
        this.addRecord('417', 'Party Global Location Number (GLN)', NoYes::Yes, 13, WHSGS1Type::Numeric);
        this.addRecord('420', 'Ship to / Deliver to postal code within a single postal authority', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('421', 'Ship to / Deliver to postal code with ISO country code', NoYes::No, 12, WHSGS1Type::Alfanumeric);
        this.addRecord('422', 'Country of origin of a trade item', NoYes::No, 3, WHSGS1Type::Numeric);
        this.addRecord('423', 'Country of initial processing', NoYes::No, 15, WHSGS1Type::Alfanumeric);
        this.addRecord('424', 'Country of processing', NoYes::No, 3, WHSGS1Type::Numeric);
        this.addRecord('425', 'Country of disassembly', NoYes::No, 15, WHSGS1Type::Alfanumeric);
        this.addRecord('426', 'Country covering full process chain', NoYes::No, 3, WHSGS1Type::Numeric);
        this.addRecord('427', 'Country subdivision Of origin', NoYes::No, 3, WHSGS1Type::Alfanumeric);
        this.addRecord('4300', 'Ship-to / Deliver-to company name', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addRecord('4301', 'Ship-to / Deliver-to contact', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addRecord('4302', 'Ship-to / Deliver-to address line 1', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4303', 'Ship-to / Deliver-to address line 2', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4304', 'Ship-to / Deliver-to suburb', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4305', 'Ship-to / Deliver-to locality', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4306', 'Ship-to / Deliver-to region', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4307', 'Ship-to / Deliver-to country code', NoYes::No, 2, WHSGS1Type::Alfanumeric);
        this.addRecord('4308', 'Ship-to / Deliver-to telephone number', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('4309', 'Ship-to / Deliver-to GEO location', NoYes::No, 20, WHSGS1Type::Numeric);
        this.addRecord('4310', 'Return-to company name', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addRecord('4311', 'Return-to contact', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addRecord('4312', 'Return-to address line 1', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4313', 'Return-to address line 2', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4314', 'Return-to suburb', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4315', 'Return-to locality', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4316', 'Return-to region', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('4317', 'Return-to country code', NoYes::No, 2, WHSGS1Type::Alfanumeric);
        this.addRecord('4318', 'Return-to postal code', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('4319', 'Return-to telephone number', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('4320', 'Service code description', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addRecord('4321', 'Dangerous goods flag', NoYes::No, 1, WHSGS1Type::Numeric);
        this.addRecord('4322', 'Authority to leave', NoYes::No, 1, WHSGS1Type::Numeric);
        this.addRecord('4323', 'Signature required flag', NoYes::No, 1, WHSGS1Type::Numeric);
        this.addRecord('4324', 'Not before delivery date time', NoYes::No, 10, WHSGS1Type::Numeric);
        this.addRecord('4325', 'Not after delivery date time', NoYes::No, 10, WHSGS1Type::Numeric);
        this.addRecord('4326', 'Release date', NoYes::No, 6, WHSGS1Type::Numeric);
        this.addRecord('7001', 'NATO Stock Number (NSN)', NoYes::No, 13, WHSGS1Type::Numeric);
        this.addRecord('7002', 'UN/ECE meat carcasses and cuts classification', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7003', 'Expiration date and time', NoYes::No, 10, WHSGS1Type::Numeric);
        this.addRecord('7004', 'Active potency', NoYes::No, 4, WHSGS1Type::Numeric);
        this.addRecord('7005', 'Catch area', NoYes::No, 12, WHSGS1Type::Alfanumeric);
        this.addRecord('7006', 'First freeze date', NoYes::No, 6, WHSGS1Type::Numeric);
        this.addRecord('7007', 'Harvest date', NoYes::No, 12, WHSGS1Type::Numeric);
        this.addRecord('7008', 'Species for fishery purposes', NoYes::No, 3, WHSGS1Type::Alfanumeric);
        this.addRecord('7009', 'Fishing gear type', NoYes::No, 10, WHSGS1Type::Alfanumeric);
        this.addRecord('7010', 'Production method', NoYes::No, 2, WHSGS1Type::Alfanumeric);
        this.addRecord('7020', 'Refurbishment lot ID', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('7021', 'Functional status', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('7022', 'Revision status', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('7023', 'Global Individual Asset Identifier (GIAI) of an assembly', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7030', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7031', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7032', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7033', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7034', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7035', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7036', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7037', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7038', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7039', 'Number of processor with ISO Country Code', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7040', 'GS1 UIC with Extension 1 and Importer index', NoYes::No, 3, WHSGS1Type::Numeric);
        this.addRecord('710', 'National Healthcare Reimbursement Number (NHRN) - Germany PZN', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('711', 'National Healthcare Reimbursement Number (NHRN) - France CIP', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('712', 'National Healthcare Reimbursement Number (NHRN) - Spain CN', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('713', 'National Healthcare Reimbursement Number (NHRN) - Brasil DRN', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('714', 'National Healthcare Reimbursement Number (NHRN) - Portugal AIM', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('715', 'National Healthcare Reimbursement Number (NHRN) - United States of America NDC', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('7230', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7231', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7232', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7233', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7234', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7235', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7236', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7237', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7238', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7239', 'Certification reference', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('7240', 'Protocol ID', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('8001', 'Roll products (width, length, core diameter, direction, splices)', NoYes::No, 14, WHSGS1Type::Numeric);
        this.addRecord('8002', 'Cellular mobile telephone identifier', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('8003', 'Global Returnable Asset Identifier (GRAI)', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('8004', 'Global Individual Asset Identifier (GIAI)', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('8005', 'Price per unit of measure', NoYes::No, 6, WHSGS1Type::Numeric);
        this.addRecord('8006', 'Identification of an individual trade item piece (ITIP)', NoYes::No, 4, WHSGS1Type::Alfanumeric);
        this.addRecord('8007', 'International Bank Account Number (IBAN)', NoYes::No, 34, WHSGS1Type::Alfanumeric);
        this.addRecord('8009', 'Optically Readable Sensor Indicator', NoYes::No, 50, WHSGS1Type::Alfanumeric);
        this.addRecord('8010', 'Component/Part Identifier (CPID)', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('8011', 'Component/Part Identifier serial number (CPID SERIAL)', NoYes::No, 12, WHSGS1Type::Numeric);
        this.addRecord('8012', 'Software version', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addRecord('8013', 'Global Model Number (GMN)', NoYes::No, 25, WHSGS1Type::Alfanumeric);
        this.addRecord('8017', 'Global Service Relation Number (GSRN) to identify the relationship between an organisation offering services and the provider of services', NoYes::No, 18, WHSGS1Type::Numeric);
        this.addRecord('8018', 'Global Service Relation Number (GSRN) to identify the relationship between an organisation offering services and the recipient of services', NoYes::No, 18, WHSGS1Type::Numeric);
        this.addRecord('8019', 'Service Relation Instance Number (SRIN)', NoYes::No, 10, WHSGS1Type::Numeric);
        this.addRecord('8020', 'Payment slip reference number', NoYes::No, 25, WHSGS1Type::Alfanumeric);
        this.addRecord('8026', 'Identification of pieces of a trade item (ITIP) contained in a logistic unit', NoYes::No, 4, WHSGS1Type::Alfanumeric);
        this.addRecord('8110', 'Coupon code identification for use in North America', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('8111', 'Loyalty points of a coupon', NoYes::No, 4, WHSGS1Type::Numeric);
        this.addRecord('8112', 'Paperless coupon code identification for use in North America', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('8200', 'Extended Packaging URL', NoYes::No, 70, WHSGS1Type::Alfanumeric);
        this.addRecord('90', 'Information mutually agreed between trading partners', NoYes::No, 30, WHSGS1Type::Alfanumeric);
        this.addRecord('91', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);
        this.addRecord('92', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);
        this.addRecord('93', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);
        this.addRecord('94', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);
        this.addRecord('95', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);
        this.addRecord('96', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);
        this.addRecord('97', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);
        this.addRecord('98', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);
        this.addRecord('99', 'Company internal information', NoYes::No, 90, WHSGS1Type::Alfanumeric);        

        this.addANSIMHRecord('14D', 'Expiration Date (YYYYMMDD)', NoYes::Yes, 8, WHSGS1Type::DateCustom, 'yyyyMMdd');
        this.addANSIMHRecord('15D', 'Expiration Date (DDMMYYYY)', NoYes::Yes, 8, WHSGS1Type::DateCustom, 'ddMMyyyy');
        this.addANSIMHRecord('16D', 'Production Date (YYYYMMDD)', NoYes::Yes, 8, WHSGS1Type::DateCustom, 'yyyyMMdd');
        this.addANSIMHRecord('17D', 'Production Date (DDMMYYYY)', NoYes::Yes, 8, WHSGS1Type::DateCustom, 'ddMMyyyy');

        this.addANSIMHRecord('J', 'Unique license plate number', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('1J', 'Unique license plate number assigned to a transport unit which is the lowest level of packaging, the unbreakable unit', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('2J', 'Unique license plate number assigned to a transport unit which contains multiple packages', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('3J', 'Unique license plate number assigned to a transport unit which is the lowest level of packaging, the unbreakable unit, with EDI data', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('4J', 'Unique license plate number assigned to a transport unit which contains multiple packages, with EDI data', NoYes::No, 35, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('5J', 'Unique license plate number assigned to a mixed transport unit containing unlike items on a single customer transaction', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('6J', 'Unique license plate number assigned to a master transport unit containing like items on a single customer transaction', NoYes::No, 20, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('7J', 'Vehicle Registration License Plate Number', NoYes::No, 20, WHSGS1Type::Alfanumeric);

        this.addANSIMHRecord('K', 'Order number assigned by Customer to identify a Purchasing Transaction', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('1K', 'Order number assigned by Supplier to identify a Purchasing Transaction', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('2K', 'Bill of Lading/Waybill/Shipment Identification Code assigned by Supplier/Shipper', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('4K', 'Line number of the order assigned by Customer to identify a Purchasing Transaction', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('5K', 'Reference Number assigned by the Customer to identify a Shipment Authorization (Release) against an established Purchase Order.', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('9K', 'Generic Transaction Reference Code (internally assigned or mutually defined)', NoYes::No, 100, WHSGS1Type::Alfanumeric);

        this.addANSIMHRecord('L', 'Storage Location', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('1L', 'Location', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('2L', 'Ship To Location Code defined by an industry standard or mutually defined', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('3L', 'Ship From Location Code defined by an industry standard or mutually defined', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('4L', 'Country of Origin, two-character ISO 3166 country code', NoYes::Yes, 2, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('20L', 'First Level (internally assigned)', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('21L', 'Second Level (internally assigned)', NoYes::No, 100, WHSGS1Type::Alfanumeric);

        this.addANSIMHRecord('P', 'Item Identification Code assigned by Customer', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('1P', 'Item Identification Code assigned by Supplier', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('2P', 'Code assigned to specify the revision level for an Item', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('8P', '14-digit GS1 format for GTIN-14 code structure', NoYes::No, 14, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('12P', 'Document Type (internally assigned or mutually defined)', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('20P', 'First Level (Customer Assigned)', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('21P', 'Second Level (Customer Assigned)', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('30P', 'First Level (Supplier Assigned)', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('31P', 'Second Level (Supplier Assigned)', NoYes::No, 100, WHSGS1Type::Alfanumeric);

        this.addANSIMHRecord('Q', 'Quantity, Number of Pieces, or Amount (numeric only) (unit of measure and significance mutually defined)', NoYes::No, 100, WHSGS1Type::Numeric);
        this.addANSIMHRecord('3Q', 'Unit of Measure', NoYes::No, 3, WHSGS1Type::Alfanumeric);

        this.addANSIMHRecord('S', 'Serial number or code assigned by the Supplier to an entity for its lifetime', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('1S', 'Additional code assigned by the Supplier to an entity for its lifetime', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('2S', 'Advance Shipment Notification (ASN) Shipment ID (SID)', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('3S', 'Unique Package Identification Assigned by Supplier', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('4S', 'Package Identification Assigned by Supplier to master packaging containing like items on a single customer order', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('5S', 'Package Identification Assigned by Supplier to master packaging containing unlike items on a single customer order', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('6S', 'Package Identification Assigned by Supplier to master packaging containing like items over multiple customer orders', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('7S', 'Package Identification Assigned by Supplier to master packaging containing unlike items over multiple customer orders', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('8S', 'Supplier ID/Unique Container ID presented in the data format specified by the GS1 SSCC-18', NoYes::Yes, 18, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('12S', 'Document Number (internally assigned or mutually defined)', NoYes::Yes, 18, WHSGS1Type::Alfanumeric);

        this.addANSIMHRecord('T', 'Traceability Number assigned by the Customer to identify/trace a unique group of entities', NoYes::Yes, 18, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('1T', 'Traceability Number assigned by the Supplier to identify/trace a unique group of entities', NoYes::Yes, 18, WHSGS1Type::Alfanumeric);

        this.addANSIMHRecord('V', 'Supplier Code assigned by Customer', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('1V', 'Supplier Code assigned by Supplier', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('6V', 'Manufacturer\'s identification code (mutually defined)', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('8V', 'Customer code assigned by the customer', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('9V', 'Customer code assigned by the supplier', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('10V', 'Manufacturer ID', NoYes::No, 15, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('12V', 'DUNS number identifying manufacturer', NoYes::No, 13, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('13V', 'DUNS number identifying supplier', NoYes::No, 13, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('14V', 'DUNS number identifying customer', NoYes::No, 13, WHSGS1Type::Alfanumeric);

        this.addANSIMHRecord('Z', 'Other data', NoYes::No, 100, WHSGS1Type::Alfanumeric);
        this.addANSIMHRecord('1Z', 'Other data', NoYes::No, 100, WHSGS1Type::Alfanumeric);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addANSIMHRecord</Name>
				<Source><![CDATA[
    private void addANSIMHRecord(WHSGS1Identifier     _identifier,
        Description1000     _description,
        WHSGS1IsFixedLength _isFixedLength,
        WHSGS1Length        _length,
        WHSGS1Type          _type = WHSGS1Type::Alfanumeric,
        WHSBarcodeDataDateFormat _customDateFormat = '',
        WHSGS1Identifier    _dataElementCodeIdentifier = '',
        WHSGS1Length        _dataElementCodeLength  = 0)
    {
        WHSGS1ParsingSetup parsingSetup;

        parsingSetup.initValue();

        parsingSetup.Identifier = WHSMH1083Parser::MH1083ParsingSetupPrefix + _identifier;
        parsingSetup.Description = _description;
        parsingSetup.IsFixedLength = _isFixedLength;
        parsingSetup.Length = _length;
        parsingSetup.Type = _type;
        parsingSetup.CustomDateFormat = _customDateFormat;
        parsingSetup.DataElementCodeIdentifier = _dataElementCodeIdentifier;
        parsingSetup.DataElementCodeLength = _dataElementCodeLength;

        if (parsingSetup.validateWrite())
        {
            parsingSetupList.add(parsingSetup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRecord</Name>
				<Source><![CDATA[
    private void addRecord(WHSGS1Identifier     _identifier,
                            Description1000     _description,
                            WHSGS1IsFixedLength _isFixedLength,
                            WHSGS1Length        _length,
                            WHSGS1Type          _type = WHSGS1Type::Alfanumeric,
                            WHSGS1IsDecimal     _isDecimal = NoYes::No)
    {
        WHSGS1ParsingSetup parsingSetup;

        parsingSetup.initValue();

        parsingSetup.Identifier     = _identifier;
        parsingSetup.Description    = _description;
        parsingSetup.IsFixedLength  = _isFixedLength;
        parsingSetup.Length         = _length;
        parsingSetup.Type           = _type;
        parsingSetup.IsDecimal      = _isDecimal;

        if (parsingSetup.validateWrite())
        {
            parsingSetupList.add(parsingSetup);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>