<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmmCampaignQueries</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SmmCampaignQueries
{
    smmCampaignId               campaignId;
    smmCampaignQuery            campaignQuery;
    QueryRun                    qr;
    QueryRun                    tmpQueryRun;
    ClassName                   description;
    Dictionary                  dict;
    DirPartyTable               dirPartyTable;
    smmBusRelTable              busRelTable;
    CustTable                   custTable;
    VendTable                   vendTable;
    smmLeadTable                smmLeadTable;
    smmOpportunityTable         smmOpportunityTable;
    smmQuotationCompetitorGroup smmQuotationCompetitorGroup;
    ContactPerson               contactPerson;
    SalesTable                  salesTable;
    SalesLine                   salesLine;
    smmTMCallListTable          tMCallListTable;
    SalesQuotationTable         quotationTable;
    ProjTable                   projTable;
    smmMailings                 mailings;
    smmTMContactResponses       contactResponses;
    smmCampaignSelection        campaignSelection;
    MCRTargetList                mcrTargetList;
    RecordInsertList            campaignTempSelectionRIL;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public Name description()
    {
        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    private boolean initQuery()
    {
        container  con;
        boolean    ret;

        ret = tmpQueryRun.prompt();

        if (ret)
        {
            con = tmpQueryRun.pack();
            qr  = new QueryRun(con);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run(Args args)
    {
        campaignQuery            =  args.record();
        campaignId               =  campaignQuery.CampaignId;
        campaignTempSelectionRIL = new RecordInsertList(tableNum(smmCampaignTempSelection));

        smmCampaignTempSelection::delPreviousSelection(campaignQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static smmCampaignQueries construct(classId _classId)
    {
        switch (_classId)
        {
            case classnum(smmCampaignQueries_SmmBusRelTable)           :
                return new smmCampaignQueries_SmmBusRelTable();

            case classnum(smmCampaignQueries_CustTable)           :
                return new smmCampaignQueries_CustTable();

            case classnum(smmCampaignQueries_VendTable)           :
                return new smmCampaignQueries_VendTable();

            case classnum(smmCampaignQueries_LeadTable)           :
                return new smmCampaignQueries_LeadTable();

            case classnum(smmCampaignQueries_OpportunityTable)           :
                return new smmCampaignQueries_OpportunityTable();

            case classnum(smmCampaignQueries_Competitor)           :
                return new smmCampaignQueries_Competitor();

            case classnum(smmCampaignQueries_DirPartyTable)           :
                return new smmCampaignQueries_DirPartyTable();

            case classnum(smmCampaignQueries_SalesTable)               :
                return new smmCampaignQueries_SalesTable();

            case classnum(smmCampaignQueries_QuotationTable)           :
                return new smmCampaignQueries_QuotationTable();

            case classnum(smmCampaignQueries_Questionnaire)            :
                return new smmCampaignQueries_Questionnaire();

            case classnum(smmCampaignQueries_TMCallListTable)          :
                return new smmCampaignQueries_TMCallListTable();

            case classnum(smmCampaignQueries_ContactPerson)            :
                return new smmCampaignQueries_ContactPerson();

            case classnum(smmCampaignQueries_Mailings)                 :
                return new smmCampaignQueries_Mailings();

            case classnum(smmCampaignQueries_CampaignSelection)        :
                return new smmCampaignQueries_CampaignSelection();

            case classnum(smmCampaignQueries_ContactPersonInterest)    :
                return new smmCampaignQueries_ContactPersonInterest();
            case classnum(MCRSmmCampaignQueries_TargetList)    :
                return new MCRSmmCampaignQueries_TargetList();

            default                                                    :
                return new smmCampaignQueries();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void  main(Args args)
    {
        smmCampaignQueries  campaignQueries = smmCampaignQueries::construct(str2int(args.parm()));

        if (campaignQueries.initQuery())
        {
            campaignQueries.run(args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newQueryArgs</Name>
				<Source><![CDATA[
    static public Args newQueryArgs(smmCampaignQuery _campaignQuery)
    {
        Args args = new Args();

        switch (_campaignQuery.QueryClId)
        {
            case classnum(smmCampaignQueries_SmmBusRelTable) :
                args.parm(int2str(classnum(smmCampaignQueries_SmmBusRelTable)));
                break;

            case classnum(smmCampaignQueries_CustTable) :
                args.parm(int2str(classnum(smmCampaignQueries_CustTable)));
                break;

            case classnum(smmCampaignQueries_VendTable) :
                args.parm(int2str(classnum(smmCampaignQueries_VendTable)));
                break;

            case classnum(smmCampaignQueries_LeadTable) :
                args.parm(int2str(classnum(smmCampaignQueries_LeadTable)));
                break;

            case classnum(smmCampaignQueries_OpportunityTable) :
                args.parm(int2str(classnum(smmCampaignQueries_OpportunityTable)));
                break;

            case classnum(smmCampaignQueries_Competitor) :
                args.parm(int2str(classnum(smmCampaignQueries_Competitor)));
                break;

            case classnum(smmCampaignQueries_DirPartyTable) :
                args.parm(int2str(classnum(smmCampaignQueries_DirPartyTable)));
                break;

            case classnum(smmCampaignQueries_SalesTable) :
                args.parm(int2str(classnum(smmCampaignQueries_SalesTable)));
                break;

            case classnum(smmCampaignQueries_QuotationTable) :
                args.parm(int2str(classnum(smmCampaignQueries_QuotationTable)));
                break;

            case classnum(smmCampaignQueries_Questionnaire) :
                args.parm(int2str(classnum(smmCampaignQueries_Questionnaire)));
                break;

            case classnum(smmCampaignQueries_TMCallListTable) :
                args.parm(int2str(classnum(smmCampaignQueries_TMCallListTable)));
                break;

            case classnum(smmCampaignQueries_ContactPerson) :
                args.parm(int2str(classnum(smmCampaignQueries_ContactPerson)));
                break;

            case classnum(smmCampaignQueries_Mailings) :
                args.parm(int2str(classnum(smmCampaignQueries_Mailings)));
                break;

            case classnum(smmCampaignQueries_CampaignSelection) :
                args.parm(int2str(classnum(smmCampaignQueries_CampaignSelection)));
                break;

            case classnum(smmCampaignQueries_ContactPersonInterest) :
                args.parm(int2str(classnum(smmCampaignQueries_ContactPersonInterest)));
                break;
            // Support querying for targets on the PM target list table.
            case classnum(MCRSmmCampaignQueries_TargetList) :
                args.parm(int2str(classnum(MCRSmmCampaignQueries_TargetList)));
                break;
        }

        args.record(_campaignQuery);

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupClass</Name>
				<Source><![CDATA[
    public static classId lookupClass(container _classes, FormStringControl _lookupControl)
    {
        Object formRun = classfactory.createSysLookupPicklist();
        formRun.init();

        formRun.choices(_classes);
        formRun.caption("@SYS9678");
        _lookupControl.performFormLookup(formRun);

        return SmmCampaignQueries::getLookupClassId(formRun.choice());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLookupClassId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>ClassId</c> for the given <c>SysLookupPickList</c> choice.
    /// </summary>
    /// <param name = "_choice">The <c>str</c> value from the <c>SysLookupPickList</c> choice.</param>
    /// <returns>
    /// The <c>ClassId</c> associated with the <c>str</c> choice value.
    /// </returns>
    protected static ClassId getLookupClassId(str _choice)
    {
        ClassId id;

        if (!_choice)
        {
            return id;
        }

        switch (_choice)
        {
            // Campaign selections
            case "@SYS80298" :
                id = className2Id(classStr(smmCampaignQueries_CampaignSelection));
                break;

            // Contact person
            case "@SYS80299" :
                id = className2Id(classStr(smmCampaignQueries_ContactPerson));
                break;

            // Contact person Interest
            case "@SYS80300" :
                id = className2Id(classStr(smmCampaignQueries_ContactPersonInterest));
                break;

            // Mailings
            case "@SYS80301" :
                id = className2Id(classStr(smmCampaignQueries_Mailings));
                break;

            // Questionnaire
            case "@SYS80302" :
                id = className2Id(classStr(smmCampaignQueries_Questionnaire));
                break;

            // Quotations
            case "@SYS80163" :
                id = className2Id(classStr(smmCampaignQueries_QuotationTable));
                break;

            // Sales order table
            case "@SYS12847" :
                id = className2Id(classStr(smmCampaignQueries_SalesTable));
                break;

            // Business relation
            case "@SYS80138" :
                id = className2Id(classStr(smmCampaignQueries_SmmBusRelTable));
                break;

            // Call list table
            case "@SYS80303" :
                id = className2Id(classStr(smmCampaignQueries_TMCallListTable));
                break;

            // Directories
            case "@SYS105155":
                id = className2Id(classStr(smmCampaignQueries_DirPartyTable));
                break;

            // Customers
            case "@SYS11307" :
                id = className2Id(classStr(smmCampaignQueries_CustTable));
                break;

            // Vendors
            case "@SYS9449"  :
                id = className2Id(classStr(smmCampaignQueries_VendTable));
                break;

            // Leads
            case "@SYS103010":
                id = className2Id(classStr(smmCampaignQueries_LeadTable));
                break;

            // Opportunities
            case "@SYS81484" :
                id = className2Id(classStr(smmCampaignQueries_OpportunityTable));
                break;

            // Competitors
            case "@SYS79821" :
                id = className2Id(classStr(smmCampaignQueries_Competitor));
                break;

            // Target list table.
            case "@MCR25735" :
                id = className2Id(classStr(MCRSmmCampaignQueries_TargetList));
                break;
        }

        return id;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>