<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BarcodeUPCA</Name>
	<SourceCode>
		<Declaration><![CDATA[
[BarcodeTypeFactory(BarcodeType::UPCA)]
public class BarcodeUPCA extends BarcodeEAN_UPC
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>barcodeType</Name>
				<Source><![CDATA[
    public BarcodeType barcodeType()
    {
        return BarcodeType::UPCA;
    }

]]></Source>
			</Method>
			<Method>
				<Name>encodeString</Name>
				<Source><![CDATA[
    BarCodeString encodeString(BarCodeString _stringIn)
    {
        int             len = strLen(_stringIn);
        int             addtotal = 0;
        int             checkval = 0;
        int             i;
        int             charVal;
        BarCodeString   result;

        if (len != this.strlen() - 1)
        {
            return '';
        }

        // step through the text in string and perform character mapping
        for (i = 1; i<=len; i++)
        {
            charVal = char2num(_stringIn, i);
            if (charVal >= 48 && charVal <= 57)
            {
                if (i mod 2 == 0)
                {
                    checkval = charVal - 48;
                }
                else
                {
                    checkval = 3 * (charVal - 48);
                }
                addTotal += checkval;

                if (i <= 6)
                {
                    result += num2char(charVal);
                }
                else
                {
                    result += num2char(charVal + 10);
                }
            }

            // add middle guard bars
            if (i == 6)
            {
                result += num2char(47);
            }
        }

        // calculate check digit
        if (addtotal mod 10 == 0)
        {
            checkval = 0;
        }
        else
        {
            checkval = 10 - (addtotal mod 10);
        }

        barcodeStrHR = _stringIn + num2str(checkVal,1,0,0,0);

        // add start, check char, stop code and 0 terminate out string
        result = '.' + result + num2char(checkval + 58) + '.';
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>strlen</Name>
				<Source><![CDATA[
    public Integer strlen()
    {
        return 12;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BarcodeUPCA construct()
    {
        return new BarcodeUPCA();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>