<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdRouteUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProdRouteUpdate extends RouteUpdate
{
    ProdId prodId;

    #DEFINE.CurrentVersion(1)

    #LOCALMACRO.CurrentList
        prodId,
        info
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>load</Name>
				<Source><![CDATA[
    protected  void load()
    {
        ProdRoute        prodRoute;
        qty   = 0;

        while select prodRoute
            index NumOprNumIdx
            where prodRoute.ProdId== prodId
        {
            this.insert(prodRoute);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(ProdId _prodId)
    {
        super();
        prodId = _prodId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS22968";
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>super</c> method.
    /// </summary>
    /// <remarks>
    ///    This method is overridden to add a new attribute.
    /// </remarks>
    public void run()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    boolean unpack(container packedClass)
    {
        Integer         version         = conpeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = packedClass;
                break;

            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFlag</Name>
				<Source><![CDATA[
    void updateFlag()
    {
        ProdTable        prodTable= ProdTable::find(prodId,true);
        prodTable.CheckRoute= NoYes::No;
        prodTable.doUpdate();

        // If we make to here the route is ok
        if (info)
        {
            info(strfmt("@SYS27491",prodId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateNow</Name>
				<Source><![CDATA[
    void updateNow()
    {
        Integer          x;

        while (x < qty)
        {
            x += 1;

            if (! ok[x])
            {
                throw error(strfmt("@SYS25611", oprNum[x]));
            }

            ProdRoute prodRoute = ProdRoute::findRecId(recId[x],true);

            prodRoute.AccError  = acc[x];
            prodRoute.OprNumNext= nextRec[x];
            prodRoute.Level     = level[x];

            prodRoute.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    boolean  validate(Object _calledFrom = null)
    {
        if (! ProdTable::checkExist(prodId))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        if (! args.caller() || ! args.record().TableId)
        {
            throw error(strfmt("@SYS22828",funcname()));
        }

        Common buffer = args.record();

        ProdId prodId;
        if (fieldname2id(buffer.TableId,fieldstr(ProdTable,ProdId)))
        {
            prodId= buffer.(fieldname2id(buffer.TableId,fieldstr(ProdTable,ProdId)));
        }

        if (! prodId)
        {
            throw error(strfmt("@SYS22828",funcname()));
        }

        ProdRouteUpdate prodRouteUpdate= ProdRouteUpdate::newProdId(prodId);
        prodRouteUpdate.parmInfo(true);
        prodRouteUpdate.runOperation();

        if (args.caller() && args.caller().name() == formstr(ProdRoute))
        {
            args.caller().doResearch();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProdId</Name>
				<Source><![CDATA[
    static ProdRouteUpdate newProdId(ProdId _prodId)
    {
        return new ProdRouteUpdate(_prodId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
