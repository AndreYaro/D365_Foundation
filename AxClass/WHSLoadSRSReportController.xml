<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLoadSRSReportController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSLoadSRSReportController</c> class handles report run of <c>WHSLoad</c> SSRS report.
/// </summary>
class WHSLoadSRSReportController extends SrsReportRunController implements BatchRetryable
{
    private static const str CurUserIdParameterName = 'CurrentUserId';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        super();

        this.setLoadIdRange();
        this.parmShowDialog(false);

        SrsReportRdlDataContract rdlContract = this.parmReportContract().parmRdlContract();
        if (rdlContract.parameterExists(WHSLoadSRSReportController::CurUserIdParameterName))
        {
            rdlContract.getParameter(WHSLoadSRSReportController::CurUserIdParameterName).setValueTyped(curUserId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLoadIdRange</Name>
				<Source><![CDATA[
    private void setLoadIdRange()
    {
        if (this.parmArgs().dataset() != tableNum(WHSLoadTable) || !this.parmArgs().record())
        {
            throw error(Error::missingRecord(this.parmArgs().menuItemName()));
        }

        Query                query                = this.getFirstQuery();
        QueryBuildDataSource queryBuildDataSource = SysQuery::findOrCreateDataSource(query, tableNum(WHSLoadTable));
        QueryBuildRange      queryBuildRange      = SysQuery::findOrCreateRange(queryBuildDataSource, fieldNum(WHSLoadTable, LoadId));

        WHSLoadTable loadTable = this.parmArgs().record();
        queryBuildRange.value(queryValue(loadTable.LoadId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSLoadSRSReportController srsReportRun = new WHSLoadSRSReportController();
        srsReportRun.parmReportName(ssrsReportStr(WHSLoad, Report));
        srsReportRun.parmArgs(_args);
        srsReportRun.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>