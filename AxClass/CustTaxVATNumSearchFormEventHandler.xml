<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustTaxVATNumSearchFormEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This is a event handler class for customer tax exempt number search form , <c>CustTaxVATNumSearch</c>.
/// </summary>
public static class CustTaxVATNumSearchFormEventHandler
{
    private static CustTable selectedCust;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>CustTable_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the event handler for <c>CustTable</c> activated event.
    /// Base on the selected customer record, customer tax exempt number search form will enable/disable the copy button.
    /// </summary>
    /// <param name = "sender"> The form where the event happened, this should be <c>CustTaxVATNumSearch</c> form. </param>
    /// <param name = "e"> Arguments with the event. </param>
    [FormDataSourceEventHandler(formDataSourceStr(CustTaxVATNumSearch, CustTable), FormDataSourceEventType::Activated)]
    public static void CustTable_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun sendingForm = _sender.formRun();
   
        selectedCust = _sender.cursor();
        
        DirPartyTable party = DirPartyTable::findRec(selectedCust.Party);

        if (party)
        {
            boolean isCurCustAccountGlobal = sendingForm.parmIsCurCustAccountNumGlobal();
            boolean isCurCustAccountAlreadyExistInCurCompany = DirPartyView::IsPartyRoleExistInCompany(party.RecId, DirPartyRoleType::Customer, sendingForm.parmCurDataAreaId());
            boolean isDestinationCustAccountGlobal = CustVendCopyDataUtil::isCustAccountNumSequenceGlobal(selectedCust.dataAreaId);

            FormCommandButtonControl copyButton = _sender.formRun().design().controlName(formcontrolstr(CustTaxVATNumSearch, CopyButton));

            if (isCurCustAccountGlobal &&
                !isCurCustAccountAlreadyExistInCurCompany &&
                isDestinationCustAccountGlobal)
            {
                copyButton.visible(true);
            }
            else
            {
                copyButton.visible(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>CopyButton_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the event handler for Copy button clicked event.
    /// </summary>
    /// <param name = "sender">  The form where the event happened, this should be <c>CustTaxVATNumSearch</c> form. </param>
    /// <param name = "e">  Arguments with the event. </param>
    [FormControlEventHandler(formControlStr(CustTaxVATNumSearch, CopyButton), FormControlEventType::Clicked)]
    public static void CopyButton_OnClicked(FormControl _sender, FormControlEventArgs _e)
    {
        if (selectedCust)
        {
            FormRun custTableForm = _sender.formRun().args().caller();

            FormRun sendingForm = _sender.formRun();
            DataAreaId curCompany = sendingForm.parmCurDataAreaId();

            // Once one customer record is selected on the grid, curext() will return the company of the selected customer.
            // So we need to switch back to the copy destination company before copy.
            changecompany(curCompany)
            {
                CustVendCopyDataUtil::copyCustForm(selectedCust, custTableForm, false);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>