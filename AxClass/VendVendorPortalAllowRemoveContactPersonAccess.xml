<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendVendorPortalAllowRemoveContactPersonAccess</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchVendorAllowRemoveContactPersonVendorPortalAccess</c> class handles allowing or removing vendor portal access on the Contact person
/// </summary>
final class VendVendorPortalAllowRemoveContactPersonAccess
{
    ContactPerson   contactPerson;
    NoYes vendorPortalAccessAllowed;
    Args args;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendVendorPortalAllowRemoveContactPersonAccess construct()
    {
        return new VendVendorPortalAllowRemoveContactPersonAccess();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArgs</Name>
				<Source><![CDATA[
    private args parmArgs(Args _args = args)
    {
        args = _args;
        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactPerson</Name>
				<Source><![CDATA[
    private ContactPerson parmContactPerson(ContactPerson _contactPerson = contactPerson)
    {
        contactPerson = _contactPerson;
        return contactPerson;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramVendorPortalAccessAllowed</Name>
				<Source><![CDATA[
    private NoYes paramVendorPortalAccessAllowed(NoYes _vendorPortalAccessAllowed =  vendorPortalAccessAllowed)
    {
        vendorPortalAccessAllowed = _vendorPortalAccessAllowed;
        return vendorPortalAccessAllowed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    private void run()
    {
        boolean refreshDataSource;
        FormDataSource dataSource = FormDataUtil::getFormDataSource(contactPerson);

        ttsbegin;
        MultiSelectionHelper selectionHelper = MultiSelectionHelper::construct();

        selectionHelper.parmDataSource(dataSource);
        contactPerson = selectionHelper.getFirst();
        while (contactPerson)
        {
            refreshDataSource = contactPerson.setVendorPortalAccess(vendorPortalAccessAllowed);
            contactPerson = selectionHelper.getNext();
        }
        ttscommit;

        VendVendorPortalProvisionUser vendorPortalProvisionUser = VendVendorPortalProvisionUser::construct();
        if (vendorPortalProvisionUser.isVendorPortalUserProvisioningAllowed(contactPerson.Party))
        {
            vendorPortalProvisionUser.invokeVendorPortalUserProvisioning(this.parmArgs());
        }

        //The following lines of code is used to trigger an event on c# side
        //to let the datasource and the other consumer controls refresh
        //after an update
        if (refreshDataSource)
        {
            dataSource.setCurrent();
            dataSource.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (!_args || _args.dataset() != tablenum(ContactPerson)  || !FormDataUtil::getFormDataSource(_args.record()) )
        {
            throw error("@SYS104799");
        }

        VendVendorPortalAllowRemoveContactPersonAccess allowRemoveContactPersonPortalAccess = VendVendorPortalAllowRemoveContactPersonAccess::construct();

        ContactPerson contactPerson = _args.record() as ContactPerson;

        allowRemoveContactPersonPortalAccess.parmArgs(_args);
        allowRemoveContactPersonPortalAccess.parmContactPerson(contactPerson);
        allowRemoveContactPersonPortalAccess.paramVendorPortalAccessAllowed(_args.parmEnum());
        allowRemoveContactPersonPortalAccess.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>