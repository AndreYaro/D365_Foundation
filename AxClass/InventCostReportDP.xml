<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCostReportDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventCostReportDP</c> class handles the data extraction for the <c>InventCostValue</c>
///    report and writes the data to a temporary table.
/// </summary>
[
SRSReportQueryAttribute(queryStr(InventCostReport)),
SRSReportParameterAttribute(classStr(InventCostReportContract))
]
class InventCostReportDP extends SrsReportDataProviderPreProcess
{
    InventCostTmpTransBreakdown inventCostTmpTransBreakdown;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventCostTmpTransBreakdown</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the data from <c>InventCostTmpTransBreakdown</c> temporary table.
    /// </summary>
    /// <returns>
    ///    The table buffer with the report data.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(InventCostTmpTransBreakdown))]
    public InventCostTmpTransBreakdown getInventCostTmpTransBreakdown()
    {
        select inventCostTmpTransBreakdown;
        return inventCostTmpTransBreakdown;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
/// <summary>
    ///    Extracts and calculates data for the <c>InventCostValue</c> report.
    /// </summary>
    public void processReport()
    {
        inventCostTmpTransBreakdown.setConnection(this.parmUserConnection());

        InventCostReportContract inventCostReportContract = this.parmDataContract() as InventCostReportContract;

        // Generate temporary table with data
        InventCostReport_CostBase costBase = InventCostReport_CostBase::newInventCostReport_CostBaseType(inventCostReportContract.parmAxis(),
                                                                                                         inventCostReportContract.parmInventCostDateCodeContract().parmFromDate(),
                                                                                                         inventCostReportContract.parmInventCostDateCodeContract().parmToDate(),
                                                                                                         inventCostReportContract.parmLevel(),
                                                                                                         inventCostReportContract.parmDetail(),
                                                                                                         this.parmQuery(),
                                                                                                         inventCostReportContract.parmReportName(),
                                                                                                         inventCostReportContract.parmIncludeBeginning());
        costBase.parmUserConnection(this.parmUserConnection());
        costBase.run();
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventCostReportDP construct()
    {
        return new InventCostReportDP();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
