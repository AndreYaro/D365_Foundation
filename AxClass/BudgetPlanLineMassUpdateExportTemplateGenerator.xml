<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanLineMassUpdateExportTemplateGenerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanLineMassUpdateExportTemplateGenerator</c> class is responsible for exporting the budget plan lines of a budget plan
/// in an excel worksheet that can be used for mass updates.
/// </summary>
internal final class BudgetPlanLineMassUpdateExportTemplateGenerator
{
    private BudgetPlanHeader planHeader;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmBudgetPlanHeader</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public BudgetPlanHeader parmBudgetPlanHeader(BudgetPlanHeader _planHeader = planHeader)
    {
        planHeader = _planHeader;

        return planHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        // Verify that the necessary parameters have been specified
        if (!_args || _args.menuItemName() == BudgetPlanningConstants::emptyString)
        {
            throw error(Error::missingParameter(_args));
        }
        if (!_args.record())
        {
            throw error(Error::missingRecord(tableStr(BudgetPlanHeader)));
        }
        if (!(_args.record() is BudgetPlanHeader))
        {
            throw error(strFmt("@Budget:RecordBufferTypeNotSupported", tableId2Name(_args.record().TableId)));
        }

        if (_args.menuItemName() != menuItemActionStr(BudgetPlanLineMassUpdateTemplate))
        {
            throw error("@Budget:TemplateActionNotSupported");
        }

        BudgetPlanLineMassUpdateExportTemplateGenerator exportTemplateGenerator = BudgetPlanLineMassUpdateExportTemplateGenerator::construct();

        exportTemplateGenerator.parmBudgetPlanHeader(_args.record());

        exportTemplateGenerator.exportBudgetPlanLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exportBudgetPlanLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Exports budget plan lines of a budget plan.
    /// </summary>
    internal protected void exportBudgetPlanLines()
    {
        if (this.existsExportDefinitionGroup())
        {
            BudgetPlanLineMassUpdateDMFManager budgetPlanLineMassUpdateDMFManager = budgetPlanLineMassUpdateDMFManager::newFromBudgetPlanHeader(planHeader);
            budgetPlanLineMassUpdateDMFManager.exportBudgetPlanLines();
        }
        else
        {
            throw error("@Budget:MissingBudgetPlanLineMassUpdateExportDefinition");
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsExportDefinitionGroup</Name>
				<Source><![CDATA[
    private boolean existsExportDefinitionGroup()
    {
        DMFDefinitionGroup dmfDefinitionGroup;
        BudgetPlanLayout budgetPLanLayout;

        select firstonly RecId from dmfDefinitionGroup
            exists join budgetPLanLayout
                where dmfDefinitionGroup.RecId == budgetPlanLayout.DMFExportDefinitionGroup
                    && budgetPLanLayout.RecId == planHeader.Layout;

        return dmfDefinitionGroup.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static BudgetPlanLineMassUpdateExportTemplateGenerator construct()
    {
        return new BudgetPlanLineMassUpdateExportTemplateGenerator();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>