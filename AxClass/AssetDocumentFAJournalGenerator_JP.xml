<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDocumentFAJournalGenerator_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Asset fixed asset journal line generator.
/// </summary>
class AssetDocumentFAJournalGenerator_JP extends AssetDocumentGenerator_JP
{
    LedgerJournalTable       ledgerJournalTable;
    LedgerJournalTrans       ledgerJournalTrans;
    LedgerJournalEngine      ledgerJournalEngine;
    LedgerJournalTrans_Asset ledgerJournalTransAsset;

    AssetJournal             assetJournal;
    AssetBook                assetBook;
    AssetTransDate           transDate;
    AmountCur                transAmount;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create fixed asset journal line.
    /// </summary>
    protected void createTrans()
    {
        if (assetBook)
        {
            ttsbegin;
            assetJournal.createTrans(
                transAmount,
                assetBook,
                transDate,
                '',
                0,
                0,
                false,
                0,
                0,
                dateNull(),
                false,
                false,
                this.parmAssetDocumentTable().Type,
                this.parmAssetDocumentEntry().RecId);
            ttscommit;

            if (ledgerJournalTrans)
            {
                ledgerJournalEngine.voucherTotals(ledgerJournalTrans, true);
            }
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>getAssetTransTypeJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets asset transaction journal type.
    /// </summary>
    /// <returns>
    /// The asset transaction journal type.
    /// </returns>
    public AssetTransTypeJournal getAssetTransTypeJournal()
    {
        return AssetTransTypeJournal::None;
    }
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
/// <summary>
    /// Initializes asset document fixed asset journal generator instance based on imported <c>Args</c> instance.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object.
    /// </param>
    public void init(Args _args)
    {
        LedgerJournalTable              ledgerJournalTableLoc    = _args.caller().ledgerJournalTable();
        LedgerJournalEngine             ledgerJournalEngineLoc   = _args.caller().ledgerJournalEngine();
        LedgerJournalTrans              ledgerJournalTransLoc    = _args.record();

        super(_args);

        if (!ledgerJournalTrans.RecId && ledgerJournalTrans.Voucher)
        {
            ledgerJournalEngine.clearVoucher();
        }

        this.parmLedgerJournalTable(ledgerJournalTableLoc);
        this.parmLedgerJournalTrans(ledgerJournalTransLoc);
        this.parmLedgerJournalEngine(ledgerJournalEngineLoc);
        this.parmAssetJournal(new AssetJournal(ledgerJournalTable.JournalNum, this.getAssetTransTypeJournal()));
        this.parmAssetTransDate(ledgerJournalTrans.TransDate);
        if (ledgerJournalTrans.RecId)
        {
            this.parmLedgerJournalTransAsset(LedgerJournalTrans_Asset::find(ledgerJournalTrans.RecId));
            this.parmAssetBook(AssetBook::find(ledgerJournalTransAsset.AssetId, ledgerJournalTransAsset.BookId));
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmAssetBook</Name>
				<Source><![CDATA[
    public AssetBook parmAssetBook(AssetBook _assetBook = assetBook)
    {
        assetBook = _assetBook;
        return assetBook;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmAssetJournal</Name>
				<Source><![CDATA[
    public AssetJournal parmAssetJournal(AssetJournal _assetJournal = assetJournal)
    {
        assetJournal = _assetJournal;
        return assetJournal;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmAssetTransDate</Name>
				<Source><![CDATA[
    public AssetTransDate parmAssetTransDate(AssetTransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerJournalEngine</Name>
				<Source><![CDATA[
    public LedgerJournalEngine parmLedgerJournalEngine(LedgerJournalEngine _ledgerJournalEngine = ledgerJournalEngine)
    {
        ledgerJournalEngine = _ledgerJournalEngine;
        return ledgerJournalEngine;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerJournalTable</Name>
				<Source><![CDATA[
    public LedgerJournalTable parmLedgerJournalTable(LedgerJournalTable _ledgerJournalTable = ledgerJournalTable)
    {
        ledgerJournalTable = _ledgerJournalTable;
        return ledgerJournalTable;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerJournalTrans</Name>
				<Source><![CDATA[
    public LedgerJournalTrans parmLedgerJournalTrans(LedgerJournalTrans _ledgerJournalTrans = ledgerJournalTrans)
    {
        ledgerJournalTrans = _ledgerJournalTrans;
        return ledgerJournalTrans;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerJournalTransAsset</Name>
				<Source><![CDATA[
    public LedgerJournalTrans_Asset parmLedgerJournalTransAsset(LedgerJournalTrans_Asset _ledgerJournalTransAsset = ledgerJournalTransAsset)
    {
        ledgerJournalTransAsset = _ledgerJournalTransAsset;
        return ledgerJournalTransAsset;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmTransAmount</Name>
				<Source><![CDATA[
    public AmountCur parmTransAmount(AmountCur _transAmount = transAmount)
    {
        transAmount = _transAmount;
        return transAmount;
    }
]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    protected void refresh()
    {
        ledgerJournalEngine.ledgerJournalTableUpdateTotals(ledgerJournalTable,true);
        super();
    }
]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the asset document and fixed asset journal generator.
    /// </summary>
    /// <returns>
    /// True if it passed validation; otherwise, false.
    /// </returns>
    protected boolean validate()
    {
        boolean ret = true;

        ret = super();
        if (ret)
        {
            if ( !this.parmAssetBook()
                || this.parmAssetJournal() == null
                || this.parmLedgerJournalEngine() == null)
            {
                ret = false;
            }
        }

        return ret;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>