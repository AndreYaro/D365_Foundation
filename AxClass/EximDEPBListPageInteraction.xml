<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximDEPBListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The exim DEPB list page interaction class.
/// </summary>
class EximDEPBListPageInteraction extends ListPageInteraction
{
    EximDEPBSchemesTable_IN eximDEPBSchemesTable;

    #DEFINE.EximDEPBSchemesListPage (EximDEPBSchemesListPage_IN)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableAttachButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable the attach button of the exim depb list page.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void enableAttachButton()
    {
        FormControlName eximDEPBSchemesFunctions = formcontrolstr(#EximDEPBSchemesListPage, EximDEPBSchemesFunctions);
        FormControlName details                  = formcontrolstr(#EximDEPBSchemesListPage, Details);
        FormControlName exportOrderDetails       = formcontrolstr(#EximDEPBSchemesListPage, ExportOrderDetails);

        FormControlName approve  = formcontrolstr(#EximDEPBSchemesListPage, Approve);
        FormControlName reExport = formcontrolstr(#EximDEPBSchemesListPage, ReExport);
        FormControlName purchase = formcontrolstr(#EximDEPBSchemesListPage, Purchase);
        FormControlName sale     = formcontrolstr(#EximDEPBSchemesListPage, Sale);
        FormControlName reject   = formcontrolstr(#EximDEPBSchemesListPage, Reject);

        this.enableButton(eximDEPBSchemesFunctions, false);
        this.enableButton(details, false);
        this.enableButton(exportOrderDetails, false);
        this.enableButton(approve, false);
        this.enableButton(reExport, false);
        this.enableButton(purchase, false);
        this.enableButton(sale, false);
        this.enableButton(reject, false);

        if (eximDEPBSchemesTable && !eximDEPBSchemesTable.Closed)
        {
            switch (eximDEPBSchemesTable.Status)
            {
                case EximAuthorizationStatus_IN::Created :
                    this.enableButton(eximDEPBSchemesFunctions, true);
                    this.enableButton(reject, true);
                    switch (eximDEPBSchemesTable.Basis)
                    {
                        case EximDEPBBasis_IN::ExportOrder :
                            this.enableButton(exportOrderDetails, true);
                            break;
                        case EximDEPBBasis_IN::Purchase :
                            this.enableButton(purchase, true);
                            break;
                        case EximDEPBBasis_IN::ReExport :
                            this.enableButton(reExport, true);
                            break;
                    }
                    break;
                case EximAuthorizationStatus_IN::Applied :
                    this.enableButton(eximDEPBSchemesFunctions, true);
                    switch (eximDEPBSchemesTable.Basis)
                    {
                        case EximDEPBBasis_IN::ExportOrder :
                            this.enableButton(exportOrderDetails, true);
                            this.enableButton(approve, true);
                            this.enableButton(reject, true);
                            break;
                    }
                    break;
                case EximAuthorizationStatus_IN::Approved :
                    this.enableButton(eximDEPBSchemesFunctions, true);
                    this.enableButton(details, true);
                    this.enableButton(reject, false);
                    this.enableButton(sale, eximDEPBSchemesTable.Transferable);
                    break;
            }
        }
        else
        {
            if (eximDEPBSchemesTable.Status == EximAuthorizationStatus_IN::Approved)
            {
                this.enableButton(details, true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButton</Name>
				<Source><![CDATA[
        private void enableButton(str _controlName, boolean _enabled = true)
    {
        this.listPage().actionPaneControlEnabled(_controlName, _enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance of the <c>EximDEPBListPageInteraction</c> class.
    /// </summary>
    public void initializing()
    {
        if (!EximParameters_IN::checkDEPBParameters())
        {
            // '%1' parameter must be selected in the incentive scheme parameters to activate the '%2' form.
            // %1 = Duty entitlement pass book, %2 = DEPB schedules
            throw error(strFmt("@GLS62231","@GLS61848","@GLS61812" ));
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// The calling method when the selection page changed.
    /// </summary>
    public void selectionChanged()
    {
        super();
        eximDEPBSchemesTable = this.listPage().activeRecord(querydatasourcestr(EximDEPBSchemes_IN, EximDEPBSchemesTable_IN)) as EximDEPBSchemesTable_IN;
        this.setButtonAccess();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the button access property.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void setButtonAccess()
    {
        this.enableAttachButton();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>