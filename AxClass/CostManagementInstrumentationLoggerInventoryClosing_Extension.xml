<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostManagementInstrumentationLoggerInventoryClosing_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostManagementInstrumentationLoggerInventoryClosing_Extension</c> class adds activities for inventory closing to the cost management instrumentation logging.
/// </summary>
[ExtensionOf(classStr(CostManagementInstrumentationLogger))]
final internal class CostManagementInstrumentationLoggerInventoryClosing_Extension
{
    private CostManagementInstrumentationInventoryClosingActivities inventoryClosingActivities;
    private CostManagementInstrumentationInventoryClosingCalculateActivities inventoryClosingCalculateActivities;
    private CostManagementInstrumentationInventoryClosingResumeActivities inventoryClosingResumeActivities;
    private CostManagementInstrumentationInventoryClosingStopActivities inventoryClosingStopActivities;
    private CostManagementInstrumentationInventoryClosingLedgerPostingActivities inventoryClosingLedgerPostingActivities;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventoryClosingActivities</Name>
				<Source><![CDATA[
    final internal CostManagementInstrumentationInventoryClosingActivities inventoryClosingActivities()
    {
        if (!inventoryClosingActivities)
        {
            inventoryClosingActivities = CostManagementInstrumentationInventoryClosingActivities::newFromLogger(this);
        }

        return inventoryClosingActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryClosingCalculateActivities</Name>
				<Source><![CDATA[
    final internal CostManagementInstrumentationInventoryClosingCalculateActivities inventoryClosingCalculateActivities()
    {
        if (!inventoryClosingCalculateActivities)
        {
            inventoryClosingCalculateActivities = CostManagementInstrumentationInventoryClosingCalculateActivities::newFromLogger(this);
        }

        return inventoryClosingCalculateActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryClosingResumeActivities</Name>
				<Source><![CDATA[
    final internal CostManagementInstrumentationInventoryClosingResumeActivities inventoryClosingResumeActivities()
    {
        if (!inventoryClosingResumeActivities)
        {
            inventoryClosingResumeActivities = CostManagementInstrumentationInventoryClosingResumeActivities::newFromLogger(this);
        }

        return inventoryClosingResumeActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryClosingStopActivities</Name>
				<Source><![CDATA[
    final internal CostManagementInstrumentationInventoryClosingStopActivities inventoryClosingStopActivities()
    {
        if (!inventoryClosingStopActivities)
        {
            inventoryClosingStopActivities = CostManagementInstrumentationInventoryClosingStopActivities::newFromLogger(this);
        }

        return inventoryClosingStopActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryClosingLedgerPostingActivities</Name>
				<Source><![CDATA[
    final internal CostManagementInstrumentationInventoryClosingLedgerPostingActivities inventoryClosingLedgerPostingActivities()
    {
        if (!inventoryClosingLedgerPostingActivities)
        {
            inventoryClosingLedgerPostingActivities = CostManagementInstrumentationInventoryClosingLedgerPostingActivities::newFromLogger(this);
        }

        return inventoryClosingLedgerPostingActivities;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>