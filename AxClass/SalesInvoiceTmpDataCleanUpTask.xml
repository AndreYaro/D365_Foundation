<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesInvoiceTmpDataCleanUpTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data maintenance task to clean up sales invoice temp data used in sales invoice report.
/// </summary>
internal final class SalesInvoiceTmpDataCleanUpTask implements IDataMaintenanceTask
{
    #OCCRetryCount
    private DataMaintenanceTaskResult taskResult;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceTaskResult run()
    {
        System.Exception ex;

        taskResult = DataMaintenanceTaskResult::construct();

        ttsbegin;

        try
        {
            using (SysInstrumentationActivityContext activityContext = SalesInvoiceTmpDataCleanUpTaskHelper::getActivityContext(
                classStr(SalesInvoiceTmpDataCleanUpTask), "DeletionTaskForSalesInvoiceTmpRecords"))
            {
                this.deleteSalesInvoiceTmpData(activityContext);
                this.deleteSalesInvoiceTmp_INData(activityContext);
            }
        }
        catch (Exception::TransientSqlConnectionError)
        {
            if (SysTransientSqlConnectionErrorHandler::retryTransientSqlConnectionError())
            {
                retry;
            }
            else
            {
                throw Exception::Error;
            }
        }
        catch(ex)
        {
            throw ex;
        }

        ttscommit;

        return taskResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSalesInvoiceTmp_INData</Name>
				<Source><![CDATA[
    internal void deleteSalesInvoiceTmp_INData(SysInstrumentationActivityContext _actvityContext = null)
    {
        int impactedRows = 0;

        str sqlStatement = strfmt(@"
            DELETE FROM SALESINVOICETMP_IN
            WHERE RECID IN
            (SELECT TOP %1 SIT.RECID
            FROM SALESINVOICETMP_IN SIT
            WHERE CREATEDDATETIME <= DATEADD(DAY, -%2, GETDATE()))",
            SalesInvoiceTmpDataCleanUpTaskHelper::MaxRecordsToFix,
            SalesInvoiceTmpDataCleanUpTaskHelper::RetentionBoundaryDays);

        impactedRows = SalesInvoiceTmpDataCleanUpTaskHelper::executeSQL(sqlStatement);

        if (_actvityContext)
        {
            _actvityContext.addCustomProperty('DeletionTaskForSalesInvoiceTmpRecords',
                int2Str(impactedRows));
        }
        if (taskResult)
        {
            taskResult.addMessage(DataMaintenanceMessageContract::constructForLabel(Exception::Info,
            literalStr("@AccountsReceivable:SalesInvoiceTmp_INDataCleanupDeletionInfoMessage"),
            [int2Str(impactedRows)]));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSalesInvoiceTmpData</Name>
				<Source><![CDATA[
    internal void deleteSalesInvoiceTmpData(SysInstrumentationActivityContext _actvityContext = null)
    {
        int impactedRows = 0;

        str sqlStatement = strfmt(@"
            DELETE FROM SALESINVOICETMP
            WHERE RECID IN
            (SELECT TOP %1 SIT.RECID
            FROM SALESINVOICETMP SIT 
            WHERE DATEOFCREATION <= DATEADD(DAY, -%2, GETDATE()))",
            SalesInvoiceTmpDataCleanUpTaskHelper::MaxRecordsToFix,
            SalesInvoiceTmpDataCleanUpTaskHelper::RetentionBoundaryDays);

        impactedRows = SalesInvoiceTmpDataCleanUpTaskHelper::executeSQL(sqlStatement);

        if (_actvityContext)
        {
            _actvityContext.addCustomProperty('DeletionTaskForSalesInvoiceTmpRecords',
                int2Str(impactedRows));
        }
        if (taskResult)
        {
            taskResult.addMessage(DataMaintenanceMessageContract::constructForLabel(Exception::Info,
            literalStr("@AccountsReceivable:SalesInvoiceTmpDataCleanupDeletionInfoMessage"),
            [int2Str(impactedRows)]));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceCaption caption()
    {
        return literalStr("@AccountsReceivable:SalesInvoiceTmpDataCleanUpTaskCaption");
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>