<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetBalancesDataContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute]
class ProjBudgetBalancesDataContract
{
    // Hierarchy fields
    str                 id;
    str                 parentId;

    Description         TransName;

    // Groupings
    CategoryId          categoryId;
    ProjCategoryGroupId categoryGroupId;
    ProjTransType       projTransType;

    // Measurements
    AmountCur           originalBudget;
    AmountCur           revisedBudget;
    AmountCur           actualRevAndCosts;
    AmountCur           remainingBudget;
    AmountCur           committedCosts;
    AmountCur           amendedBudget;
    AmountCur           UnapprovedRevisions;
    AmountCur           carryForwardBudget;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new ()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjBudgetBalancesDataContract construct()
    {
        return new ProjBudgetBalancesDataContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newTmpProjBudgetBalances</Name>
				<Source><![CDATA[
    public static ProjBudgetBalancesDataContract newTmpProjBudgetBalances(TmpProjBudgetBalances _tmpProjBudgetBalances)
    {
        ProjBudgetBalancesDataContract projBudgetBalancesDataContract = new ProjBudgetBalancesDataContract();

        projBudgetBalancesDataContract.parmId(int642str(_tmpProjBudgetBalances.RecId));
        projBudgetBalancesDataContract.parmParentId(int642str(_tmpProjBudgetBalances.Parent));
        projBudgetBalancesDataContract.parmTransName(_tmpProjBudgetBalances.TransName ? _tmpProjBudgetBalances.TransName : _tmpProjBudgetBalances.CategoryId);

        projBudgetBalancesDataContract.parmCategoryId(_tmpProjBudgetBalances.CategoryId);
        projBudgetBalancesDataContract.parmCategoryGroupId(_tmpProjBudgetBalances.CategoryGroupId);
        projBudgetBalancesDataContract.parmProjTransType(_tmpProjBudgetBalances.ProjTranstype);

        projBudgetBalancesDataContract.parmOriginalBudget(_tmpProjBudgetBalances.OrigBudget);
        projBudgetBalancesDataContract.parmRevisedBudget(_tmpProjBudgetBalances.RevisedBudget);
        projBudgetBalancesDataContract.parmActualRevAndCosts(_tmpProjBudgetBalances.ActualRevAndCosts);
        projBudgetBalancesDataContract.parmRemainingBudget(_tmpProjBudgetBalances.RemainingBudget);
        projBudgetBalancesDataContract.parmCommittedCosts(_tmpProjBudgetBalances.CommittedCosts);
        projBudgetBalancesDataContract.parmAmendedBudget(_tmpProjBudgetBalances.AmendBudget);
        projBudgetBalancesDataContract.parmUnapprovedRevisions(_tmpProjBudgetBalances.UnapprovedRevisions);
        projBudgetBalancesDataContract.parmCarryForwardBudget(_tmpProjBudgetBalances.CarryForwardBudget);

        return projBudgetBalancesDataContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOriginalBudget</Name>
				<Source><![CDATA[
    [DataMemberAttribute("OriginalBudget")]
    public AmountCur parmOriginalBudget(AmountCur _originalBudget = originalBudget)
    {
        if (!prmIsDefault(_originalBudget))
        {
            originalBudget = _originalBudget;
        }
        return originalBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRevisedBudget</Name>
				<Source><![CDATA[
    [DataMemberAttribute("RevisedBudget")]
    public AmountCur parmRevisedBudget(AmountCur _revisedBudget = revisedBudget)
    {
        if (!prmIsDefault(_revisedBudget))
        {
            revisedBudget = _revisedBudget;
        }
        return revisedBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActualRevAndCosts</Name>
				<Source><![CDATA[
    [DataMemberAttribute("ActualRevAndCosts")]
    public AmountCur parmActualRevAndCosts(AmountCur _actualRevAndCosts = actualRevAndCosts)
    {
        if (!prmIsDefault(_actualRevAndCosts))
        {
            actualRevAndCosts = _actualRevAndCosts;
        }
        return actualRevAndCosts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainingBudget</Name>
				<Source><![CDATA[
    [DataMemberAttribute("RemainingBudget")]
    public AmountCur parmRemainingBudget(AmountCur _remainingBudget = remainingBudget)
    {
        if (!prmIsDefault(_remainingBudget))
        {
            remainingBudget = _remainingBudget;
        }
        return remainingBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCommittedCosts</Name>
				<Source><![CDATA[
    [DataMemberAttribute("CommittedCosts")]
    public AmountCur parmCommittedCosts(AmountCur _committedCosts = committedCosts)
    {
        if (!prmIsDefault(_committedCosts))
        {
            committedCosts = _committedCosts;
        }
        return committedCosts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmendedBudget</Name>
				<Source><![CDATA[
    [DataMemberAttribute("AmendedBudget")]
    public AmountCur parmAmendedBudget(AmountCur _amendedBudget = amendedBudget)
    {
        if (!prmIsDefault(_amendedBudget))
        {
            amendedBudget = _amendedBudget;
        }
        return amendedBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCarryForwardBudget</Name>
				<Source><![CDATA[
    [DataMemberAttribute("CarryForwardBudget")]
    public AmountCur parmCarryForwardBudget(AmountCur _carryForwardBudget = carryForwardBudget)
    {
        if (!prmIsDefault(_carryForwardBudget))
        {
            carryForwardBudget = _carryForwardBudget;
        }
        return carryForwardBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnapprovedRevisions</Name>
				<Source><![CDATA[
    [DataMemberAttribute("UnapprovedRevisions")]
    public AmountCur parmUnapprovedRevisions(AmountCur _unapprovedRevisions = unapprovedRevisions)
    {
        if (!prmIsDefault(_unapprovedRevisions))
        {
            unapprovedRevisions = _unapprovedRevisions;
        }
        return unapprovedRevisions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("Category")]
    public CategoryId parmCategoryId(CategoryId _categoryId = categoryId)
    {
        if (!prmIsDefault(_categoryId))
        {
            categoryId = _categoryId;
        }
        return _categoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryGroupId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("CategoryGroup")]
    public ProjCategoryGroupId parmCategoryGroupId(ProjCategoryGroupId _categoryGroupId = categoryGroupId)
    {
        if (!prmIsDefault(_categoryGroupId))
        {
            categoryGroupId = _categoryGroupId;
        }
        return categoryGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTransType</Name>
				<Source><![CDATA[
    [DataMemberAttribute("ProjTransType")]
    public ProjTransType parmProjTransType(ProjTransType _projTransType = projTransType)
    {
        if (!prmIsDefault(_projTransType))
        {
            projTransType = _projTransType;
        }
        return projTransType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransName</Name>
				<Source><![CDATA[
    [DataMemberAttribute("TransName")]
    public Description parmTransName(Description _transName = transName)
    {
        if (!prmIsDefault(_transName))
        {
            transName = _transName;
        }
        return transName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("id")]
    public str parmId(str _id = id)
    {
        if (!prmIsDefault(_id))
        {
            id = _id;
        }

        return _id;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParentId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("parentId")]
    public str parmParentId(str _parentId = parentId)
    {
        if (!prmIsDefault(_parentId))
        {
            parentId = _parentId;
        }

        return _parentId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
