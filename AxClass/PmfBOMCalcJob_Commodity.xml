<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfBOMCalcJob_Commodity</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// PmfFormulaCalcJob_Commodity is used to compute pricing for a formula item based on raw material commodity prices.
/// </summary>
public class PmfBOMCalcJob_Commodity extends BOMCalcJob_Item implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initForNewItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize this PmfFormulaCalcJob (Commodity pricing instance) for use with a new item.
    /// </summary>
    /// <param name="_itemId">
    /// Item id for the new calculation.
    /// </param>
    /// <param name="_inventDimId">
    /// Inventory dimension id for the new calculation.
    /// </param>
    /// <param name="_bomId">
    /// Id of BOM to use for the calculation.
    /// </param>
    /// <param name="_routeId">
    /// Id of Route to use for the calculation.
    /// </param>
    /// <remarks>
    /// <syntax>
    /// public void initForNewItem(ItemId _itemId, InventDimId _inventDimId, BOMId _BOMId, RouteId _routeId)
    /// </syntax>
    /// </remarks>
    public void initForNewItem(
        ItemId          _itemId,
        InventDimId     _inventDimId,
        BOMId           _bomId,
        RouteId         _routeId)
    {
        InventTable     workInventTable = InventTable::find(_itemId);

        this.parmItemId(_itemId);
        this.parmInventDimId(_inventDimId);
        this.parmBOMId(_bomId);
        this.parmRouteId(_routeId);
        this.parmItemQty(workInventTable.inventStandardQty());
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// substantiates the object
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launches commodity pricing calculation.
    /// </summary>
    public void run()
    {
        costPriceTransfer           = NoYes::No;
        costPriceInclInUnitPrice    = NoYes::No;
        costPriceRoundOff           = NoYes::No;

        salesPriceTransfer          = NoYes::No;
        salesPriceInclInUnitPrice   = NoYes::No;
        salesPriceRoundOff          = NoYes::No;

        netWeightTransfer           = NoYes::No;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Standard constructor pattern to create a new instance of PmfFormulaCalcJob_Commodity.
    /// </summary>
    /// <returns>
    /// New instance of PmfFormulaCalcJob_Commodity
    /// </returns>
    /// <remarks>
    /// <syntax>
    /// public static PmfFormulaCalcJob_Commodity construct()
    /// </syntax>
    /// </remarks>
    public static PmfBOMCalcJob_Commodity construct()
    {
        return new PmfBOMCalcJob_Commodity();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>