<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WrkCtrWorkingTimesCalendarDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>WrkCtrWorkingTimesCalendarDetail</c> class retrieves the working times for a specified
///    calendar in a specified interval.
/// </summary>
class WrkCtrWorkingTimesCalendarDetail extends WrkCtrWorkingTimes
{
    CalendarId  calendarId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWorkingTimes</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the working times for the calendar and the interval that was setup when creating the object.
    /// </summary>
    /// <returns>
    ///    A container that stores the working time records. Each element in the container is another
    ///    container that has the start date time, end date time, effectivity, and property ID, respectively.
    /// </returns>
    public container getWorkingTimes()
    {
        slotsToReturn = 0;

        this.processCalendarTimeInterval(calendarId,
                                         startDate,
                                         startTime,
                                         endDate,
                                         endTime,
                                         100,
                                         new Map(Types::String, Types::Real));

        return workingTimes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalendarId</Name>
				<Source><![CDATA[
        protected CalendarId parmCalendarId(CalendarId _calendarId = calendarId)
    {
        calendarId = _calendarId;
        return calendarId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static WrkCtrWorkingTimesCalendarDetail construct()
    {
        return new WrkCtrWorkingTimesCalendarDetail();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCalendarId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a <c>WrkCtrWorkingTimesCalendarDetail</c> object based on the specified interval, calendar
    ///    identifier, and the direction in which to fetch the data.
    /// </summary>
    /// <param name="_calendarId">
    ///    The <c>CalendarId</c> value that identifies the resource for which to fetch the working times.
    /// </param>
    /// <param name="_startDate">
    ///    The start date for the interval.
    /// </param>
    /// <param name="_startTime">
    ///    The start time for the interval.
    /// </param>
    /// <param name="_endDate">
    ///    The end date for the interval.
    /// </param>
    /// <param name="_endTime">
    ///    The end time for the interval.
    /// </param>
    /// <param name="_workingTimesCount">
    ///    The number of working time records to retrieve.
    /// </param>
    /// <param name="_forward">
    ///    The direction to start looking for working times. If true the direction is forward, starting at the
    ///    start date and start time. If false the direction is backwards, starting at the end date and end
    ///    time.
    /// </param>
    /// <returns>
    ///    A container that stores the working time records. Each element in the container is another
    ///    container that as the start date time, end date time, effectivity, and property ID, respectively.
    /// </returns>
    public static WrkCtrWorkingTimesCalendarDetail newCalendarId(CalendarId   _calendarId,
                                                                 date         _startDate,
                                                                 timeOfDay    _startTime,
                                                                 date         _endDate,
                                                                 timeOfDay    _endTime,
                                                                 int          _workingTimesCount,
                                                                 boolean      _forward)
    {
        WrkCtrWorkingTimesCalendarDetail wrkCtrWorkingTimesCalendarDetail = WrkCtrWorkingTimesCalendarDetail::construct();

        wrkCtrWorkingTimesCalendarDetail.parmCalendarId(_calendarId);
        wrkCtrWorkingTimesCalendarDetail.parmStartDate(_startDate);
        wrkCtrWorkingTimesCalendarDetail.parmStartTime(_startTime);
        wrkCtrWorkingTimesCalendarDetail.parmEndDate(_endDate);
        wrkCtrWorkingTimesCalendarDetail.parmEndTime(_endTime);
        wrkCtrWorkingTimesCalendarDetail.parmWorkingTimesCount(_workingTimesCount);
        wrkCtrWorkingTimesCalendarDetail.parmForward(_forward);

        return wrkCtrWorkingTimesCalendarDetail;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>