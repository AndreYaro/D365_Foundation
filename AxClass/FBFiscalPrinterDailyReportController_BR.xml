<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBFiscalPrinterDailyReportController_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FBFiscalPrinterDailyReportController_BR</c> class implements the controller of the <c>FBFiscalPrinterDailyReport</c> report.
/// </summary>
public class FBFiscalPrinterDailyReportController_BR extends SrsReportRunController implements BatchRetryable
{
    FiscalEstablishment_BR                  fiscalEstablishment;
    FBBookingPeriod_BR                      bookingPeriod;
    FBFiscalPrinterDailyReportContract_BR   contract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        #ISOCountryRegionCodes
        super();
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes(
                    [ [#isoPL, GlobalizationConstants::FeatureReferencePL00006] ],
                    funcName()
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
        protected void prePromptModifyContract()
    {
        FBFiscalPrinterDailyReport_BR   report;

        if (this.parmShowDialog())
        {
            return;
        }

        contract        = this.parmReportContract().parmRdpContract() as FBFiscalPrinterDailyReportContract_BR;
        report          = this.parmArgs().record();

        select bookingPeriod
            where bookingPeriod.RecId == report.FBBookingPeriod_BR;

        fiscalEstablishment = bookingPeriod.fiscalEstablishment();

        contract.parmFBBookingPeriodRecId       (bookingPeriod.RecId);

        if (this.parmArgs().parmEnum() == FBFiscalPrinterDailyReportType_BR::PrintAll)
        {
            contract.parmFromDate               (bookingPeriod.periodFrom());
            contract.parmToDate                 (bookingPeriod.periodTo());
        }
        else if (this.parmArgs().parmEnum() == FBFiscalPrinterDailyReportType_BR::PrintSelected)
        {
            contract.parmFromDate               (report.AccountingDate);
            contract.parmToDate                 (report.AccountingDate);
        }

        this.setNonVisibleContractParms();
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
        protected void preRunModifyContract()
    {
        if (!this.parmShowDialog())
        {
            return;
        }

        contract = this.parmReportContract().parmRdpContract() as FBFiscalPrinterDailyReportContract_BR;

        select firstOnly crossCompany fiscalEstablishment
            where fiscalEstablishment.FiscalEstablishmentId == contract.parmFiscalEstablishmentId()
                && fiscalEstablishment.dataAreaId == contract.parmFiscalEstablishmentDataArea();

        if (this.parmArgs().record())
        {
            contract.parmFBBookingPeriodRecId(this.parmArgs().record().RecId);
        }
        else
        {
            select firstOnly RecId from bookingPeriod
                where bookingPeriod.FiscalEstablishmentId == fiscalEstablishment.FiscalEstablishmentId
                    && bookingPeriod.FiscalEstablishmentDataArea == fiscalEstablishment.dataAreaId
                    && bookingPeriod.PeriodMonth == mthOfYr(contract.parmfromDate())
                    && bookingPeriod.PeriodYear == year(contract.parmToDate());

            contract.parmFBBookingPeriodRecId(bookingPeriod.RecId);
        }

        this.setNonVisibleContractParms();
    }

]]></Source>
			</Method>
			<Method>
				<Name>startReportOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Run the <c>FBFiscalPrinterDailyReport</c> report.
    /// </summary>
    /// <param name="_args">
    /// The report arguments.
    /// </param>
    protected void startReportOperation(Args _args)
    {
        this.parmReportName(ssrsReportStr(FBFiscalPrinterDailyReport_BR,Report));
        this.parmArgs(_args);
        this.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNonVisibleContractParms</Name>
				<Source><![CDATA[
        private void setNonVisibleContractParms()
    {
        LogisticsPostalAddress              postalAddress;

        contract.parmFiscalEstablishmentId      (fiscalEstablishment.FiscalEstablishmentId);
        contract.parmFiscalEstablishmentDataArea(fiscalEstablishment.dataAreaId);
        contract.parmFiscalEstablishmentName    (fiscalEstablishment.Name);

        contract.parmCnpj                       (fiscalEstablishment.CNPJCPFNum_BR);
        contract.parmIeNum                      (fiscalEstablishment.IENum_BR);
        contract.parmFiscalEstablishmentName    (fiscalEstablishment.Name);

        postalAddress = fiscalEstablishment.postalAddress();
        contract.parmCity                       (postalAddress.City);
        contract.parmState                      (postalAddress.State);
        contract.parmStreet                     (postalAddress.Street);
        contract.parmStreetNumber               (postalAddress.StreetNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container packedState)
    {
        boolean ret;

        ret = super(packedState);

        this.parmShowDialog(!args.record());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args args)
    {
        FBFiscalPrinterDailyReportController_BR controller = new FBFiscalPrinterDailyReportController_BR();
        controller.parmShowDialog(!args.record());
        controller.startReportOperation(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>