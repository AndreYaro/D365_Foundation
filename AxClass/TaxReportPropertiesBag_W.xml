<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportPropertiesBag_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    This class is used to pass the parameters from the controller classes <c>TaxReportController_SE</c> and <c>TaxReportController_FI</c>
///    to the class <c>TaxTransReport_W</c> via the static method on the <c>TaxTrans</c> table.
/// </summary>
class TaxReportPropertiesBag_W
{
    CurrencyCode taxCurrencyCode;
    CurrencyCode reportingCurrencyCode;
    boolean currencyRateOnReportingDate;
    TransDate reportingDate;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        taxCurrencyCode,
        reportingCurrencyCode,
        currencyRateOnReportingDate,
        reportingDate
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a container that holds the macros for <c>CurrentVersion</c> and <c>CurrentList</c>, which is defined in the <c>ClassDeclaration</c> method.
    /// </summary>
    /// <returns>
    ///    A container that holds the macros for <c>CurrentVersion</c> and <c>CurrentList</c>.
    /// </returns>
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyRateOnReportingDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Passes the parameter currencyRateOnReportingDate.
    /// </summary>
    /// <param name="_currencyRateOnReportingDate">
    ///    Parameter currencyRateOnReportingDate.
    /// </param>
    /// <returns>
    ///    Parameter currencyRateOnReportingDate.
    /// </returns>
    public boolean parmCurrencyRateOnReportingDate(boolean _currencyRateOnReportingDate = currencyRateOnReportingDate)
    {
        currencyRateOnReportingDate = _currencyRateOnReportingDate;

        return currencyRateOnReportingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportingCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Passes the parameter reportingCurrencyCode.
    /// </summary>
    /// <param name="_reportingCurrencyCode">
    ///    Parameter reportingCurrencyCode.
    /// </param>
    /// <returns>
    ///    Parameter reportingCurrencyCode.
    /// </returns>
    public CurrencyCode parmReportingCurrencyCode(CurrencyCode _reportingCurrencyCode = reportingCurrencyCode)
    {
        reportingCurrencyCode = _reportingCurrencyCode;

        return reportingCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportingDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Passes the parameter reportingDate.
    /// </summary>
    /// <param name="_reportingDate">
    ///    Parameter reportingDate.
    /// </param>
    /// <returns>
    ///    Parameter reportingDate.
    /// </returns>
    public TransDate parmReportingDate(TransDate _reportingDate = reportingDate)
    {
        reportingDate = _reportingDate;

        return reportingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Passes the parameter taxCurrencyCode.
    /// </summary>
    /// <param name="_taxCurrencyCode">
    ///    Parameter taxCurrencyCode.
    /// </param>
    /// <returns>
    ///    Parameter taxCurrencyCode.
    /// </returns>
    public CurrencyCode parmTaxCurrencyCode(CurrencyCode _taxCurrencyCode = taxCurrencyCode)
    {
        taxCurrencyCode = _taxCurrencyCode;

        return taxCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Unpacks what the <c>pack</c> method has packed.
    /// </summary>
    /// <param name="packedClass">
    ///    The packed class in a container.
    /// </param>
    /// <returns>
    ///    true if the container has been unpacked successfully; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    When the <c>isSwappingPrompt</c> method returns a value of true, it may be necessary to unpack some prompt-related variables as well.
    /// </remarks>
    public boolean unpack(container packedClass)
    {
        Version version = RunBase::getVersion(packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = packedClass;
                break;
            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates the object of <c>TaxReportPropertiesBag_W</c> class.
    /// </summary>
    /// <returns>
    ///    The object of the <c>TaxReportPropertiesBag_W</c> class.
    /// </returns>
    static public TaxReportPropertiesBag_W construct()
    {
        return new TaxReportPropertiesBag_W();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>