<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankPaymCancelLedgerAcctType_BankTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankPaymCancelLedgerAcctType_BankTrans</c> provides functionality specific to bank transactions.
/// </summary>
class BankPaymCancelLedgerAcctType_BankTrans extends BankPaymCancelLedgerAcctType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init(Common _common, BankAccountTrans _bankAccountTransToCancel)
    {
        bankAccountTransToCancel = _bankAccountTransToCancel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveCashGeneralJournalAccount</Name>
				<Source><![CDATA[
    public RecId retrieveCashGeneralJournalAccount()
    {
        return BankPaymCancelLedgerAcctType::findGenJourAcctEntryToCancel(bankAccountTransToCancel.Voucher,
            bankAccountTransToCancel.TransDate,
            bankAccountTransToCancel.DataAreaId,
            LedgerPostingType::Bank,
            bankAccountTransToCancel.PaymReference,
            bankAccountTransToCancel.BankTransAmountCur);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveOffsetToCancelGeneralJournal</Name>
				<Source><![CDATA[
    public RecId retrieveOffsetToCancelGeneralJournal()
    {
        return BankPaymCancelLedgerAcctType::findGenJourAcctEntryToCancel(bankAccountTransToCancel.Voucher,
            bankAccountTransToCancel.TransDate,
            bankAccountTransToCancel.DataAreaId,
            LedgerPostingType::LedgerJournal);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>