<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventLedgerConflictMessage</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventLedgerConflictMessage</c> class holds information about conflict messages for the
/// <c>InventLedgerConflict</c> report.
/// </summary>
class InventLedgerConflictMessage
{
    str         message;
    int         amountMultiplier;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountMultiplier</Name>
				<Source><![CDATA[
        public int parmAmountMultiplier(int _amountMultiplier = amountMultiplier)
    {
        amountMultiplier = _amountMultiplier;

        return amountMultiplier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMessage</Name>
				<Source><![CDATA[
        public str parmMessage(str _message = message)
    {
        message = _message;

        return message;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventLedgerConflictMessage construct()
    {
        return new InventLedgerConflictMessage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>InvetLedgerConflictMessage</c> class based on specified parameters.
    /// </summary>
    /// <param name="_message">
    /// The text for the conflict message.
    /// </param>
    /// <param name="_amountMultiplier">
    /// The amount multiplier for the transaction that is related to this conflict message.
    /// </param>
    /// <returns>
    /// An instance of the <c>InventLedgerConflictMessage</c> class.
    /// </returns>
    public static InventLedgerConflictMessage newFromParm(
        str _message,
        int _amountMultiplier = 1
        )
    {
        InventLedgerConflictMessage inventLedgerConflictMessage = InventLedgerConflictMessage::construct();
        inventLedgerConflictMessage.parmMessage(_message);
        inventLedgerConflictMessage.parmAmountMultiplier(_amountMultiplier);

        return inventLedgerConflictMessage;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
