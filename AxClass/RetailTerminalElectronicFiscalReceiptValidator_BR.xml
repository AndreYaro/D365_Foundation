<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTerminalElectronicFiscalReceiptValidator_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides the validations methods for fiscal documents electronic fiscal receipt fields that are owned by retail terminal.
/// </summary>
internal final class RetailTerminalElectronicFiscalReceiptValidator_BR
{
    private RetailTerminalTable retailTerminalTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of <c>RetailTerminalElectronicFiscalReceiptValidator_BR</c> class.
    /// </summary>
    /// <param name = "_retailTerminalTable">The retail terminal table record.</param>
    /// <returns>A new instance of <c>RetailTerminalElectronicFiscalReceiptValidator_BR</c> class.</returns>
    [Hookable(false)]
    public static RetailTerminalElectronicFiscalReceiptValidator_BR construct(RetailTerminalTable _retailTerminalTable)
    {
        RetailTerminalElectronicFiscalReceiptValidator_BR validator = new RetailTerminalElectronicFiscalReceiptValidator_BR();
        validator.retailTerminalTable = _retailTerminalTable;

        return validator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>RetailTerminalElectronicFiscalReceiptValidator_BR</c> class.
    /// </summary>
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateEFRRegisterNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates eletronic fiscal receipt register number.
    /// </summary>
    /// <returns>
    /// True if the number inside allowed range; otherwise, false.
    /// </returns>
    [Hookable(false)]
    internal boolean validateEFRRegisterNumber()
    {
        const int minValue = 0;
        const int maxValue = 999;

        boolean ret = true;

        if (retailTerminalTable.EFRRegisterNumber > maxValue || retailTerminalTable.EFRRegisterNumber < minValue)
        {
            ret = checkFailed(strFmt("@SYS344093", fieldPName(RetailTerminalTable, EFRRegisterNumber), minValue, maxValue));
        }
        else
        {
            RetailTerminalTable retailTerminalTableToCheck;

            select firstOnly RecId, TerminalId from retailTerminalTableToCheck
            where retailTerminalTableToCheck.StoreRecId == retailTerminalTable.StoreRecId
                && retailTerminalTableToCheck.EFRRegisterNumber == retailTerminalTable.EFRRegisterNumber
                && retailTerminalTableToCheck.terminalId != retailTerminalTable.terminalId;

            if (retailTerminalTableToCheck)
            {
                ret = checkFailed(strFmt("@Brazil_Retail:EFRRegisterNumberDuplicate", retailTerminalTable.EFRRegisterNumber, retailTerminalTableToCheck.terminalId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>