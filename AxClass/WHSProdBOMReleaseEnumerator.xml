<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSProdBOMReleaseEnumerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSProdBOMReleaseEnumerator</c> class is responsible for providing
/// a mechanism of enumerating over the production orders and the order bom lines
/// based on a specified collection ordered by produciton ID that should be released.
/// </summary>
public abstract class WHSProdBOMReleaseEnumerator
{
    protected boolean   end;
    protected boolean   firstLineInOrder;
    protected ProdTable currentProdTable;
    protected ProdBOM   currentProdBOM;
    protected ProdId    prodOrderLoopProdId; // Keeps track of the current production ID being looped over. Must be set before first call to nextProdBOMInOrder().

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmProdOrderLoopProdId</Name>
				<Source><![CDATA[
    public ProdId parmProdOrderLoopProdId(ProdId _prodOrderLoopProdId = prodOrderLoopProdId)
    {
        prodOrderLoopProdId = _prodOrderLoopProdId;

        return prodOrderLoopProdId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentProdBOM</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the produciton bom line that the enumerator is currently pointing at.
    /// </summary>
    /// <returns>
    /// The production bom line that the enumerator is currently pointing at.
    /// </returns>
    public ProdBOM currentProdBOM()
    {
        return currentProdBOM;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentProdTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the produciton order that the enumerator is currently pointing at.
    /// </summary>
    /// <returns>
    /// The produciton order that the enumerator is currently pointing at.
    /// </returns>
    public ProdTable currentProdTable()
    {
        return currentProdTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextProdBOM</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the next <c>prodBOM</c> record if there is one; otherwise, sets the end boolean to true.
    /// </summary>
    public abstract void nextProdBOM()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextProdBOMInOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the cursor to the next production bom line within the production order that enumerator is currently pointing at.
    /// </summary>
    /// <returns>
    /// true if there is another line for the current production order; otherwise, false.
    /// </returns>
    public boolean nextProdBOMInOrder()
    {
        // If the enumerator is on the first bom line of the order use it before moving to the next line.
        if (!firstLineInOrder)
        {
            this.nextProdBOM();
        }

        firstLineInOrder = prodOrderLoopProdId != currentProdBOM.ProdId;

        return !end && !firstLineInOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>restartFromFirstProdBOMLineInProdOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the enumerator to point at the first line of the current production order.
    /// </summary>
    public abstract void restartFromFirstProdBOMLineInProdOrder()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextProdOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the cursor to the next production order.
    /// </summary>
    /// <returns>
    /// true if there is another produciton order that fits the criteria; otherwise, false.
    /// </returns>
    public boolean nextProdOrder()
    {
        while (!end && prodOrderLoopProdId == currentProdBOM.ProdId)
        {
            this.nextProdBOM();
        }

        firstLineInOrder    = true;
        prodOrderLoopProdId = currentProdBOM.ProdId;

        if (currentProdTable.ProdId != prodOrderLoopProdId)
        {
            currentProdTable = this.getCurrentProdTable();
        }

        return !end;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentProdTable</Name>
				<Source><![CDATA[
    protected abstract ProdTable getCurrentProdTable()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>