<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceAutomationWorkflowManualEventTimelineEntryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Timeline entry builder for the paused by recall AP automation event.
/// </summary>
[Export(identifierStr(Dynamics.AX.Application.DocumentEventHistoryITimelineEntryBuilder))]
[ExportMetadata(classStr(DocumentEventHistoryITimelineEntryBuilder), enumStr(VendInvoiceAutomationHeaderWorkflowManualAction))]
internal final class VendInvoiceAutomationWorkflowManualEventTimelineEntryBuilder extends VendInvoiceAutomationHistoryBaseTimelineEntryBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldTimelineEntryBeShownInTimeline</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean shouldTimelineEntryBeShownInTimeline(DocumentEventHistoryEvent _historyEvent)
    {
        // Only render for Recalled actions
        return _historyEvent.getDocumentEventLog().EventEnumValue == VendInvoiceAutomationHeaderWorkflowManualAction::Recalled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTimelineEntryHeader</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected TimelineEntryHeader getTimelineEntryHeader(DocumentEventHistoryEvent _historyEvent)
    {
        VendInvoiceAutomationHeaderWorkflowManualAction workflowAction =
            _historyEvent.getDocumentEventLog().EventEnumValue;

        container eventParameters = _historyEvent.getDocumentEventLog().Parameters;
        UserId recallingUserId = conPeek(eventParameters, 1);

        return strFmt("@AccountsPayable:VendInvoiceAutomationPausedByRecallTimelineEntryHeader", recallingUserId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>