<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGSTAuditFileGenerationService_MY</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

/// <summary>
/// The service of GST audit file generation
/// </summary>
class TaxGSTAuditFileGenerationService_MY extends SysOperationServiceBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateGAFXml</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs full process of generating GST audit file.
    /// </summary>
    /// <param name="_contract">
    /// The contract instance
    /// </param>
    public void generateGAFXml(TaxGSTAuditFileGenerationDataContract_MY _contract)
    {
        TaxReportPeriod                             taxReportPeriod;
        TaxPeriod                                   taxPeriod;
        TransDate                                   fromDate;
        TransDate                                   creationDate;
        Filename                                    fileName;
        OperationsTax                               postingLayer;

        taxPeriod       = _contract.parmSettlementPeriod();
        fromDate        = _contract.parmFromDate();
        creationDate    = _contract.parmCreationDate();
        postingLayer    = new SysDictEnum(enumNum(OperationsTax)).name2Value(_contract.parmPostingLayer());

        taxReportPeriod = TaxReportPeriod::find(taxPeriod, _contract.parmFromDate());
        if (taxReportPeriod)
        {
            try
            {
                TaxGSTAuditFileDataProvider_MY dataProvider = TaxGSTAuditFileDataProvider_MY::construct(taxPeriod, taxReportPeriod.FromDate, taxReportPeriod.ToDate, creationDate, fromDate, postingLayer);
                ERIModelDefinitionParamsAction parameters = new ERModelDefinitionParamsUIActionComposite()
                    .add(
                        new ERModelDefinitionDatabaseContext()
                            .addTemporaryTable(dataProvider.fillGeneralLedger())
                            .addTemporaryTable(dataProvider.fillSupplyListing())
                            .addTemporaryTable(dataProvider.fillPurchaseListing())
                            .addTemporaryTable(dataProvider.parmTaxGSTAuditFileTotalTmp_MY()))
                    .add(new ERModelDefinitionObjectParameterAction(TaxGSTAuditFileConstants_MY::ERFormatModelName, TaxGSTAuditFileConstants_MY::ERModelDataSourceNameContract, _contract))
                    .add(
                        new ERModelDefinitionDatabaseContext()
                            .addValue(tableNum(TaxReportPeriod), fieldNum(TaxReportPeriod, RecId), queryValue(taxReportPeriod.RecId))
                            .addValue(tableNum(CompanyInfo), fieldNum(CompanyInfo, DataArea), curext()));

                // Call ER to generate the GAF.
                ERObjectsFactory::createFormatMappingRunByFormatMappingId(TaxParameters::find().GSTAuditFileFormatMapping_MY, TaxGSTAuditFileConstants_MY::GSTAuditFilename)
                    .withParameter(parameters)
                    .withFileDestination(_contract.getFileDestination())
                    .run();
            }
            catch
            {
                // An error occurred while exporting data.
                error("@SYP4861341");
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>