<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesAcceptanceReport_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesAcceptanceReport_RU extends SalesPurchAcceptanceReport_RU
{
    RecordSortedList custInvoiceJourList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initContragentData</Name>
				<Source><![CDATA[
    protected void initContragentData()
    {
        super();

        consignorData = new SalesPurchReportCounteragentData_RU(custVendInvoiceJour.LanguageId);

        consignorData.parmName(companyInfo.name());
        consignorData.parmAddress(companyInfo.postalAddress().Address);
        consignorData.parmPhone(companyInfo.phone());
        consignorData.parmTelefax(companyInfo.teleFax());
        consignorData.parmBankAccountTable(BankAccountTable::find(companyInfo.Bank));
        consignorData.parmOKDP(CompanyInfoHelper::partyOKDPasOfDate_RU(companyInfo, custVendInvoiceJour.InvoiceDate));
        consignorData.parmOKPO(CompanyInfoHelper::partyOKPOasOfDate_RU(companyInfo, custVendInvoiceJour.InvoiceDate));
        consignorData.parmINN(companyInfo.partyINNasOfDate_RU(custVendInvoiceJour.InvoiceDate));

        consigneeData = new SalesPurchReportCounteragentData_RU(custVendInvoiceJour.LanguageId);

        CustTable custTable = CustTable::find(custVendInvoiceJour.InvoiceAccount);

        consigneeData.parmName(custTable.name());
        consigneeData.parmAddress(custTable.postalAddress().Address);
        consigneeData.parmPhone(custTable.phone());
        consigneeData.parmTelefax(custTable.CustVendTable::teleFax());
        consigneeData.parmBankAccountTable(CustBankAccount::find(custTable.AccountNum, custTable.BankAccount));
        consigneeData.parmOKDP(custTable.partyOKDPasOfDate_RU(custVendInvoiceJour.InvoiceDate));
        consigneeData.parmOKPO(custTable.partyOKPOasOfDate_RU(custVendInvoiceJour.InvoiceDate));
        consigneeData.parmINN(custTable.partyINNasOfDate_RU (custVendInvoiceJour.InvoiceDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (_args)
        {
            SalesAcceptanceReport_RU report;

            boolean reportRanSuccessfully = false;

            if (_args.record())
            {
                report = new SalesAcceptanceReport_RU();
                report.parmInvoiceJour(_args.record());
                report.run();

                reportRanSuccessfully = true;
            }

            if (_args.object())
            {
                CustInvoiceJour custInvoiceJour;
                RecordSortedList rst = _args.object();

                boolean existsNext = rst.first(custInvoiceJour);

                if (!reportRanSuccessfully)
                {
                    reportRanSuccessfully = existsNext;
                }

                while (existsNext)
                {
                    report = new SalesAcceptanceReport_RU();
                    report.parmInvoiceJour(custInvoiceJour);
                    report.run();

                    existsNext = rst.next(custInvoiceJour);
                }
            }

            if (reportRanSuccessfully)
            {
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceRU00056, funcName());
            }
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>