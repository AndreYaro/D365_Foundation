<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AdvancedLedgerEntrySubledgerJournalizerExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AdvancedLedgerEntrySubledgerJournalizerExtension</c> class for Advanced Ledger Entry extension events.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(SourceDocument_AdvancedLedgerEntry), SourceDocument_AdvancedLedgerEntry::AdvancedLedgerEntry)]
public class AdvancedLedgerEntrySubledgerJournalizerExtension extends SubledgerJournalizerExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFiscalCalendarPeriodEventHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a fiscal calendar period.
    /// </summary>
    /// <param name="_accountingDate">
    /// An accounting date.
    /// </param>
    /// <param name="_legalEntity">
    /// A record Id of legal entity.
    /// </param>
    /// <param name="_subledgerJournalizerExtensionArgs">
    /// A class to hold a fiscal calendar record Id,
    /// </param>
    public void getFiscalCalendarPeriodEventHandler(
        AccountingDate   _accountingDate,
        CompanyInfoRecId _legalEntity,
        SubledgerJournalizerExtensionArgs _subledgerJournalizerExtensionArgs)
    {
        FiscalCalendarPeriodRecId   fiscalCalendarPeriodRecId;
        SourceDocumentHeader        sourceDocumentHeader;

        if (_subledgerJournalizerExtensionArgs)
        {
            sourceDocumentHeader =  this.parmSubledgerJournalizer().parmSourceDocument().parmSourceDocumentHeader();

            if (sourceDocumentHeader.SourceRelationType == tableNum(AdvancedLedgerEntryHeader))
            {
                fiscalCalendarPeriodRecId = AdvancedLedgerEntryHeader::findBySourceDocumentHeader(sourceDocumentHeader.RecId).FiscalCalendarPeriod;

                if (fiscalCalendarPeriodRecId)
                {
                    _subledgerJournalizerExtensionArgs.parmFiscalCalendarPeriodRecId(fiscalCalendarPeriodRecId);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the Advanced Ledger Entry extension events.
    /// </summary>
    protected void subscribe()
    {
        subledgerJournalizer.gettingFiscalCalendarPeriod += eventhandler(this.getFiscalCalendarPeriodEventHandler);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AdvancedLedgerEntrySubledgerJournalizerExtension construct()
    {
        return new AdvancedLedgerEntrySubledgerJournalizerExtension();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>