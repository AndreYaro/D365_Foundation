<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendBankAccountChangeProposalApply</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendBankAccountChangeProposalApply</c> contains functionality for applying an approved change proposal to <c>VendBankAccount</c>.
/// </summary>
public class VendBankAccountChangeProposalApply
{
    VendBankAccountChangeProposal proposal;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmVendBankAccountChangeProposal</Name>
				<Source><![CDATA[
    public VendBankAccountChangeProposal parmVendBankAccountChangeProposal(VendBankAccountChangeProposal _proposal)
    {
        this.proposal = _proposal;

        return proposal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newVendBankAccountChangeProposal</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static VendBankAccountChangeProposalApply newVendBankAccountChangeProposal(VendBankAccountChangeProposal _proposal)
    {
        VendBankAccountChangeProposalApply proposalApply = VendBankAccountChangeProposalApply::construct();
        proposalApply.parmVendBankAccountChangeProposal(_proposal);
        return proposalApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static VendBankAccountChangeProposalApply construct()
    {
        return new VendBankAccountChangeProposalApply();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyProposedChanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the proposed changes to the original <c>VenBankAccount</c> record.
    /// </summary>
    [Hookable(false)]
    public void applyProposedChanges()
    {
        VendBankAccount vendBankAccount = VendBankAccount::findByRecId(proposal.VendBankAccount, true);
        if(vendBankAccount.RecId)
        {
            this.updateChangeContolledFields(vendBankAccount);
            
            ttsbegin;
            vendBankAccount.update();
            this.removeVendBankAccountChangeProposal();
            ttscommit;
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateChangeContolledFields</Name>
				<Source><![CDATA[
    protected void updateChangeContolledFields(VendBankAccount _vendBankAccount)
    {
        this.updateProposedField(_vendBankAccount,proposal.IsChangedBankGroupID,fieldNum(VendBankAccount,BankGroupID),fieldNum(VendBankAccountChangeProposal,BankGroupID));
        this.applyBankGroupIdDefaultLogic(_vendBankAccount,proposal.IsChangedBankGroupID);
        this.updateProposedField(_vendBankAccount,proposal.IsChangedAccountID,fieldNum(VendBankAccount,AccountID),fieldNum(VendBankAccountChangeProposal,AccountID));
        this.updateProposedField(_vendBankAccount,proposal.IsChangedAccountNum,fieldNum(VendBankAccount,AccountNum),fieldNum(VendBankAccountChangeProposal,AccountNum));
        this.updateProposedField(_vendBankAccount,proposal.IsChangedActiveDate,fieldNum(VendBankAccount,ActiveDate),fieldNum(VendBankAccountChangeProposal,ActiveDate));
        this.updateProposedField(_vendBankAccount,proposal.IsChangedBankIBAN,fieldNum(VendBankAccount,BankIBAN),fieldNum(VendBankAccountChangeProposal,BankIBAN));
        this.updateProposedField(_vendBankAccount,proposal.IsChangedCurrencyCode,fieldNum(VendBankAccount,CurrencyCode),fieldNum(VendBankAccountChangeProposal,CurrencyCode));
        this.updateProposedField(_vendBankAccount,proposal.IsChangedExpiryDate,fieldNum(VendBankAccount,ExpiryDate),fieldNum(VendBankAccountChangeProposal,ExpiryDate));
        this.updateProposedField(_vendBankAccount,proposal.IsChangedName,fieldNum(VendBankAccount,Name),fieldNum(VendBankAccountChangeProposal,Name));
        this.updateProposedField(_vendBankAccount,proposal.IsChangedRegistrationNum,fieldNum(VendBankAccount,RegistrationNum),fieldNum(VendBankAccountChangeProposal,RegistrationNum));
        this.updateProposedField(_vendBankAccount,proposal.IsChangedSWIFTNo,fieldNum(VendBankAccount,SWIFTNo),fieldNum(VendBankAccountChangeProposal,SWIFTNo));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProposedField</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected void updateProposedField(VendBankAccount _vendBankAccount, boolean _updateField, FieldId _vendBankAccountFieldId, FieldId _changeProposalFieldId)
    {
        if(_updateField)
        {
            _vendBankAccount.(_vendBankAccountFieldId) = proposal.(_changeProposalFieldId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyBankGroupIdDefaultLogic</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies defaulting logic when the <c>BankGroup</c> is changed.
    /// Defaulting logic will be applied only when the change is approved and applied.
    /// </summary>
    /// <param name = "_vendBankAccount">The corresponding vendor bank account</param>
    /// <param name = "_updateField">A boolean value that determines if the bank group id should be modified</param>
    protected void applyBankGroupIdDefaultLogic(VendBankAccount _vendBankAccount, boolean _updateField)
    {
        if(_updateField)
        {
            _vendBankAccount.BankGroupID = proposal.BankGroupID;
            BankGroup bankGroup = BankGroup::find(_vendBankAccount.BankGroupID);
            if(this.shouldApplyBankGroupDefaultLogic(_vendBankAccount)
                && bankGroup.RecId)
            {
                _vendBankAccount.initFromBankGroup(bankGroup);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldApplyBankGroupDefaultLogic</Name>
				<Source><![CDATA[
    protected boolean shouldApplyBankGroupDefaultLogic(VendBankAccount _vendBankAccount)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeVendBankAccountChangeProposal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the change proposal, typically after it is successfully applied.
    /// </summary>
    private void removeVendBankAccountChangeProposal()
    {
        VendBankAccountChangeProposal proposalToDelete;
        ttsbegin;
        proposal.selectForUpdate(true);
        proposal.delete();
        ttscommit;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>