<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEXsdElement_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEXsdElement_W
{
    boolean                 optional;
    boolean                 hasDynamicTable;
    boolean                 dynamic;
    str                     name;
    str                     annotation;
    str                     xsdDataType;
    str                     xpath;
    RefRecId                sectionRecId;
    XmlSchemaElement        schemaElement;
    XmlSchemaType           schemaType;
    List                    attributes;
    List                    children;
    LedgerRRGEXsdElement_W  parent;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>annotation</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str annotation()
    {
        return annotation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>attributes</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List attributes()
    {
        return attributes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>children</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List children()
    {
        return children;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dynamic</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean dynamic()
    {
        return dynamic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasDynamicTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean hasDynamicTable()
    {
        return hasDynamicTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str name()
    {
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(str                     _name,
                    str                     _xpath,
                    XmlSchemaElement        _schemaElement,
                    LedgerRRGEXsdElement_W  _parent)
    {
       
        parent          = _parent;
        name            = _name;
        xpath           = _xpath;
        schemaElement   = _schemaElement;

        if (schemaElement)
        {
            schemaType  = schemaElement.elementSchemaType();
            annotation  = LedgerRRGESchemaParser_W::annotation(schemaElement);

            if (schemaElement.minOccurs() == 1 && schemaElement.maxOccurs() > 1)
            {
                dynamic         = true;
            }

            if (schemaElement.minOccurs() == 0 && schemaElement.maxOccurs() > 1)
            {
                hasDynamicTable = true;
            }
        }

        attributes      = new List(Types::Class);
        children        = new List(Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parent</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEXsdElement_W parent()
    {
        return parent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDynamic</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmDynamic(boolean _dynamic = dynamic)
    {
       
        dynamic = _dynamic;
        return dynamic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOptional</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmOptional(boolean _optional = optional)
    {
       
        optional = _optional;
        return optional;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSectionRecId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId parmSectionRecId(RefRecId _sectionRecId = sectionRecId)
    {
        sectionRecId = _sectionRecId;
        return sectionRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmXsdDatatype</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmXsdDatatype(str _xsdDataType = xsdDataType)
    {
        xsdDataType = _xsdDataType;
        return xsdDataType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>schemaElement</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public XmlSchemaElement schemaElement()
    {
        return schemaElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>schemaSimpleType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public XmlSchemaSimpleType schemaSimpleType()
    {
        XmlSchemaSimpleType schemaSimpleType;

        if (classNum(XmlSchemaSimpleType) == classIdGet(schemaType))
        {
            schemaSimpleType = schemaType;
        }

        return schemaSimpleType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>schemaType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public XmlSchemaType schemaType()
    {
        return schemaType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>xpath</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str xpath()
    {
        return xpath;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>