<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxConsistencyCheck</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxConsistencyCheck</c> class provides a consistency check and correction of the sales tax.
///    This class is derived from the <see cref="T:SysConsistencyCheck" />.
/// </summary>
public class TaxConsistencyCheck extends SysConsistencyCheck implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>configurationKey</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the configuration key number for the LedgerBasic configuration key.
    /// </summary>
    /// <returns>
    ///    The <c>configurationKeyId</c>.
    /// </returns>
    configurationKeyId configurationKey()
    {
        return configurationKeyNum(LedgerBasic);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executionOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the integer 10; hard-coded.
    /// </summary>
    /// <returns>
    ///    Integer
    /// </returns>
    Integer executionOrder()
    {
        return 10;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    void run()
    {
        // TaxTable
        this.kernelCheckTable(tableNum(TaxTable));

        // TaxGroupHeading
        this.kernelCheckTable(tableNum(TaxGroupHeading));

        // TaxGroupData
        this.kernelCheckTable(tableNum(TaxGroupData));

        // TaxItemGroupHeading
        this.kernelCheckTable(tableNum(TaxItemGroupHeading));

        // TaxOnItem
        this.kernelCheckTable(tableNum(TaxOnItem));

        // TaxLedgerAccountGroup
        this.kernelCheckTable(tableNum(TaxLedgerAccountGroup));

        // TaxAuthorityAddress
        this.kernelCheckTable(tableNum(TaxAuthorityAddress));

        // TaxReportPeriod
        this.kernelCheckTable(tableNum(TaxReportPeriod));

        // TaxPeriodHead
        this.kernelCheckTable(tableNum(TaxPeriodHead));

        // TaxParameters
        this.kernelCheckTable(tableNum(TaxParameters));
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeParentClassId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the class number for the <c>LedgerConsistencyCheck</c> class.
    /// </summary>
    /// <returns>
    ///    The <c>classId</c>.
    /// </returns>
    classId treeParentClassId()
    {
        return classNum(LedgerConsistencyCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SYS5878";
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpText</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the label @SYS58190, which is: Consistency check and calculation of the sales tax.
    /// </summary>
    /// <returns>
    ///    A <c>HelpTxt</c> label.
    /// </returns>
    static HelpTxt helpText()
    {
        return "@SYS58190";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        SysConsistencyCheckJob          consistencyCheckJob;

        consistencyCheckJob = new SysConsistencyCheckJob(classNum(TaxConsistencyCheck));

        if (! consistencyCheckJob.prompt())
            return;

        consistencyCheckJob.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>