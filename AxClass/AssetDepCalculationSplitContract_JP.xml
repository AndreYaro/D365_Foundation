<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepCalculationSplitContract_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetDepCalculationSplitContract_JP</c> is responsible for holding the split information for the asset depreciation calculation.
/// </summary>
internal final class AssetDepCalculationSplitContract_JP
{
    private AssetAmount splitAmount;
    private LedgerJournalId journalNum;
    private AssetTransType transType;
    private TransDate transDate;
    private TransDate startDateYear;
    private AssetAmount priorYearSplitAmount;
    private boolean isSplitBrokenUpByYear;
    private AssetId depreciationAdjustmentAssetId;
    private AssetBookId depreciationAdjustmentBookId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static AssetDepCalculationSplitContract_JP construct(
        AssetAmount _currentSplitAmount,
        LedgerJournalId _currentJournalNum,
        AssetTransType _currentTransType,
        TransDate _currentTransDate,
        TransDate _startDateYear)
    {
        AssetDepCalculationSplitContract_JP contract = new AssetDepCalculationSplitContract_JP();
        contract.splitAmount = _currentSplitAmount;
        contract.journalNum = _currentJournalNum;
        contract.transType = _currentTransType;
        contract.transDate = _currentTransDate;
        contract.startDateYear = _startDateYear;

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSplitAmount</Name>
				<Source><![CDATA[
    internal AssetAmount getSplitAmount()
    {
        return splitAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalNum</Name>
				<Source><![CDATA[
    internal LedgerJournalId getJournalNum()
    {
        return journalNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransType</Name>
				<Source><![CDATA[
    internal AssetTransType getTransType()
    {
        return transType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransDate</Name>
				<Source><![CDATA[
    internal TransDate getTransDate()
    {
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartDateYear</Name>
				<Source><![CDATA[
    internal TransDate getStartDateYear()
    {
        return startDateYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsSplitBrokenUpByYear</Name>
				<Source><![CDATA[
    internal boolean parmIsSplitBrokenUpByYear(boolean _isSplitBrokenUpByYear = isSplitBrokenUpByYear)
    {
        isSplitBrokenUpByYear = _isSplitBrokenUpByYear;
        return isSplitBrokenUpByYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriorYearSplitAmount</Name>
				<Source><![CDATA[
    internal AssetAmount parmPriorYearSplitAmount(AssetAmount _priorYearSplitAmount = priorYearSplitAmount)
    {
        priorYearSplitAmount = _priorYearSplitAmount;
        return priorYearSplitAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDepreciationAdjustmentAssetId</Name>
				<Source><![CDATA[
    internal AssetId parmDepreciationAdjustmentAssetId(AssetId _depreciationAdjustmentAssetId = depreciationAdjustmentAssetId)
    {
        depreciationAdjustmentAssetId = _depreciationAdjustmentAssetId;
        return depreciationAdjustmentAssetId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDepreciationAdjustmentBookId</Name>
				<Source><![CDATA[
    internal AssetBookId parmDepreciationAdjustmentBookId(AssetBookId _depreciationAdjustmentBookId = depreciationAdjustmentBookId)
    {
        depreciationAdjustmentBookId = _depreciationAdjustmentBookId;
        return depreciationAdjustmentBookId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>