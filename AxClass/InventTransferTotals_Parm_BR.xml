<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferTotals_Parm_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>InventTransferTotals_Parm_BR</c> provides functions to calculate totals for transfer order update.
/// </summary>
class InventTransferTotals_Parm_BR extends InventTransferTotals_BR
{
    InventTransferParmTable inventTransferParmTable;
    InventTransferParmLine  inventTransferParmLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventTransId</Name>
				<Source><![CDATA[
    protected InventTransId inventTransId()
    {
        return inventTransferParmLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    protected ItemId itemId()
    {
        return inventTransferParmLine.itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    protected LineAmount lineAmount(SalesQty salesQty)
    {
        if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
        {
            return inventTransferParmLine.inventTransferLine().calcLineAmount_BR(salesQty);
        }

        return inventTransferParmLine.inventTransferLine().calcReceiveLineAmount_BR(salesQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(Common _common, ParmId _parmId)
    {
        super(_common, _parmId);

        inventTransferParmTable = _common;

        recordSortedListLine = new RecordSortedList(tablenum(inventTransferParmLine));
        recordSortedListLine.sortOrder(fieldnum(inventTransferParmLine, RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLine</Name>
				<Source><![CDATA[
    protected boolean nextLine()
    {
        boolean lineExist = false;
        inventTransferParmLine = null;

        while (queryTransact.next())
        {
            inventTransferParmLine = this.queryGet(queryTransact);

            if (inventTransferParmLine)
            {
                inventTransferLine inventTransferLine = inventTransferParmLine.inventTransferLine();

                lineExist = true;
                break;
            }
        }

        return lineExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderLine_orderTable</Name>
				<Source><![CDATA[
    protected common orderLine_orderTable()
    {
        return inventTransferParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyInvent</Name>
				<Source><![CDATA[
    protected InventQty qtyInvent()
    {
        if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
        {
            return inventTransferParmLine.QtyShipNow;
        }

        return inventTransferParmLine.QtyReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyUnit</Name>
				<Source><![CDATA[
    protected UnitQty  qtyUnit()
    {
        if (inventTransferParmTable.UpdateType == InventTransferUpdateType::Shipment)
        {
            return inventTransferParmLine.QtyShipNow;
        }

        return inventTransferParmLine.QtyReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    protected QueryRun queryBuild()
    {
        return new QueryRun(SysQuery::queryFromTableRelation(inventTransferParmTable, tablenum(inventTransferParmLine)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGet</Name>
				<Source><![CDATA[
    protected common queryGet(QueryRun  _queryRun)
    {
        if (_queryRun.changed(tablenum(inventTransferParmLine)))
        {
            inventTransferParmLine = _queryRun.get(tablenum(inventTransferParmLine));
        }

        return inventTransferParmLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
