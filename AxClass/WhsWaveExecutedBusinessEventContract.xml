<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWaveExecutedBusinessEventContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.ApplicationPlatform.Environment;
/// <summary>
/// The data contract for a <c>WhsWaveExecutedBusinessEvent</c>.
/// </summary>
[DataContract]
public final class WhsWaveExecutedBusinessEventContract extends BusinessEventsContract
{
    private WHSWaveId waveId;
    private WHSWaveExecutionID waveExecutionId;
    private LegalEntityDataAreaId legalEntity;
    private boolean success;
    private WHSNumWorkCreated numWorkCreated;

    private InventSiteId site;
    private InventLocationId warehouse;
    private WHSWaveTemplateName waveTemplateName;
    private WHSWaveStatus waveStatus;
    private UserId waveCreatedBy;

    private InfologText exceptionMessage;

    private str waveTableFormUrl;
   
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromWaveExecution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>WhsWaveExecutedBusinessEventContract</c> from wave execution results.
    /// </summary>
    /// <param name="_waveTable">A <c>WHSWaveTable</c> record of the executed wave.</param>
    /// <param name="_waveExecutionId">The execution ID of the wave execution.</param>
    /// <param name="_success">true if the wave execution ended successfully; otherwise, false.</param>
    /// <param name="_numWorkCreated">Number of work records created by the wave execution.</param>
    /// <param name="_exceptionMessage">Exception that occured during wave execution.</param>
    /// <returns>A <c>WhsWaveExecutedBusinessEventContract</c>.</returns>
    public static WhsWaveExecutedBusinessEventContract newFromWaveExecution(WHSWaveTable _waveTable,
                                                                            WHSWaveExecutionID _waveExecutionId,
                                                                            boolean _success,
                                                                            WhsNumWorkCreated _numWorkCreated,
                                                                            InfologText _exceptionMessage)
    {
        WhsWaveExecutedBusinessEventContract contract = new WhsWaveExecutedBusinessEventContract();
                     
        contract.waveId = _waveTable.WaveId;
        contract.waveExecutionId = _waveExecutionId;
        contract.legalEntity = _waveTable.DataAreaId;
        contract.success = _success;
        contract.numWorkCreated = _numWorkCreated;
        contract.exceptionMessage = _exceptionMessage;

        contract.site = _waveTable.InventSiteId;
        contract.warehouse = _waveTable.InventLocationId;
        contract.waveTemplateName = _waveTable.WaveTemplateName;
        contract.waveStatus = _waveTable.WaveStatus;
        contract.waveCreatedBy = _waveTable.CreatedBy;

        contract.waveTableFormUrl = contract.generateWaveTableFormUrl();

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateWaveTableFormUrl</Name>
				<Source><![CDATA[
    private str generateWaveTableFormUrl()
    {
        try
        {
            var generator = new Microsoft.Dynamics.AX.Framework.Utilities.UrlHelper.UrlGenerator();
            var environment = EnvironmentFactory::GetApplicationEnvironment();
            var currentHost = new System.Uri(environment.get_Infrastructure().get_HostURL());
     
            generator.HostUrl = currentHost.GetLeftPart(System.UriPartial::Authority);
            generator.Company = curext();
            generator.MenuItemName = menuItemDisplayStr(WHSWaveTable);
            generator.Partition = getCurrentPartition();
            generator.PageType = FormViewOption::Details;

            var requestQueryParameterCollection = generator.RequestQueryParameterCollection;
            requestQueryParameterCollection.AddRequestQueryParameter(
                formDataSourceStr(WHSWaveTable, WHSWaveTable),
                fieldStr(WHSWaveTable, WaveId),
                this.parmWaveId());

            System.Uri fullURI = generator.GenerateFullUrl();
            
            return fullURI.AbsoluteUri;
        }
        catch
        {
            // Make sure we don't throw exceptions because of a notification problem
            return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWaveId</Name>
				<Source><![CDATA[
    [DataMember('WaveId'), BusinessEventsDataMember("@WAX1496")]
    public WHSWaveId parmWaveId(WHSWaveId _waveId = waveId)
    {
        waveId = _waveId;

        return waveId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWaveExecutionId</Name>
				<Source><![CDATA[
    [DataMember('WaveExecutionId'), BusinessEventsDataMember("@WAX3233")]
    public WHSWaveExecutionID parmWaveExecutionId(WHSWaveExecutionID _waveExecutionId = waveExecutionId)
    {
        waveExecutionId = _waveExecutionId;

        return waveExecutionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntity</Name>
				<Source><![CDATA[
    [DataMember('LegalEntity'), BusinessEventsDataMember("@SYS315616")]
    public LegalEntityDataAreaId parmLegalEntity(LegalEntityDataAreaId _legalEntity = legalEntity)
    {
        legalEntity = _legalEntity;

        return legalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSuccess</Name>
				<Source><![CDATA[
    [DataMember('Success'), BusinessEventsDataMember("@SYS80122")]
    public boolean parmSuccess(boolean _success = success)
    {
        success = _success;

        return success;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumWorkCreated</Name>
				<Source><![CDATA[
    [DataMember('NumWorkCreated'), BusinessEventsDataMember("@WAX1621")]
    public WHSNumWorkCreated parmNumWorkCreated(WHSNumWorkCreated _numWorkCreated = numWorkCreated)
    {
        numWorkCreated = _numWorkCreated;

        return numWorkCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSite</Name>
				<Source><![CDATA[
    [DataMember('Site'), BusinessEventsDataMember("@SYS122446")]
    public InventSiteId parmSite(InventSiteId _site = site)
    {
        site = _site;

        return site;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWarehouse</Name>
				<Source><![CDATA[
    [DataMember('Warehouse'), BusinessEventsDataMember("@SYS6437")]
    public InventLocationId parmWarehouse(InventLocationId _warehouse = warehouse)
    {
        warehouse = _warehouse;

        return warehouse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWaveTemplateName</Name>
				<Source><![CDATA[
    [DataMember('WaveTemplateName'), BusinessEventsDataMember("@WAX3059")]
    public WHSWaveTemplateName parmWaveTemplateName(WHSWaveTemplateName _waveTemplateName = waveTemplateName)
    {
        waveTemplateName = _waveTemplateName;

        return waveTemplateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWaveStatus</Name>
				<Source><![CDATA[
    [DataMember('WaveStatus'), BusinessEventsDataMember("@WAX1507")]
    public WHSWaveStatus parmWaveStatus(WHSWaveStatus _waveStatus = waveStatus)
    {
        waveStatus = _waveStatus;

        return waveStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWaveCreatedBy</Name>
				<Source><![CDATA[
    [DataMember('WaveCreatedBy'), BusinessEventsDataMember("@WAX:WaveExecutedEvent_WaveCreatedBy")]
    public CreatedBy parmWaveCreatedBy(CreatedBy _waveCreatedBy = waveCreatedBy)
    {
        waveCreatedBy = _waveCreatedBy;

        return waveCreatedBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExceptioNMessage</Name>
				<Source><![CDATA[
    [DataMember('ExceptionMessage'), BusinessEventsDataMember("@WAX:WaveExecutedEvent_ExceptionMessage")]
    public InfologText parmExceptioNMessage(InfologText _exceptionMessage = exceptionMessage)
    {
        exceptionMessage = _exceptionMessage;

        return exceptionMessage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWaveTableFormUrl</Name>
				<Source><![CDATA[
    [DataMember('WaveTableFormUrl'), BusinessEventsDataMember("@WAX:WaveExecutedEvent_LinkToWaveForm")]
    public str parmWaveTableFormUrl(str _waveTableFormUrl = waveTableFormUrl)
    {
        waveTableFormUrl = _waveTableFormUrl;

        return waveTableFormUrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>