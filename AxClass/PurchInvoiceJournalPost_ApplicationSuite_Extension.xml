<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchInvoiceJournalPost_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.AX.Framework.Utilities.UrlHelper;

[ExtensionOf(classStr(PurchInvoiceJournalPost))]
public final class PurchInvoiceJournalPost_ApplicationSuite_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLine</Name>
				<Source><![CDATA[
    protected void postLine()
    {
        if (FeatureStateProvider::isFeatureEnabled(PostingZeroInvoicesInGeneralLedgerFeature::instance()))
        {
            LedgerVoucherObject ledgerVoucherObject = ledgerVoucher.findLedgerVoucherObject();

            if (!ledgerVoucherObject.isZeroInvoiceAlreadySet_IT())
            {
                ledgerVoucherObject.setIsZeroInvoice_IT(purchTotals.purchTotalAmount() == 0);
            }
        }

        next postLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSingleLine</Name>
				<Source><![CDATA[
    protected void postSingleLine(
        boolean _countryRegion_RU,
        boolean _hasQualityOrder,
        boolean _isExciseEnableIN,
        boolean _isVATEnableIN,
        boolean _isCustomsEnableIN,
        boolean _isConfigurationkeyRetailEnabled)
    {
        if (FeatureStateProvider::isFeatureEnabled(PostingZeroInvoicesInGeneralLedgerFeature::instance()))
        {
            LedgerVoucherObject ledgerVoucherObject = ledgerVoucher.findLedgerVoucherObject();

            if (!ledgerVoucherObject.isZeroInvoiceAlreadySet_IT())
            {
                ledgerVoucherObject.setIsZeroInvoice_IT(purchTotals.purchTotalAmount() == 0);
            }
        }

        next postSingleLine(
            _countryRegion_RU,
            _hasQualityOrder,
            _isExciseEnableIN,
            _isVATEnableIN,
            _isCustomsEnableIN,
            _isConfigurationkeyRetailEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>endPost</Name>
				<Source><![CDATA[
    protected void endPost()
    {
        next endPost();

        if (FeatureStateProvider::isFeatureEnabled(ElectronicInvoicingServiceIntegrationFeature::instance())
            && vendInvoiceInfoTable
            && vendInvoiceJour)
        {
            VendInvoiceInfoTable_W vendInvoiceInfoTable_W;
            BusinessDocumentSubmissionExternal businessDocumentSubmissionExternal;

            vendInvoiceInfoTable_W = vendInvoiceInfoTable.vendInvoiceInfoTable_W();

            update_recordset businessDocumentSubmissionExternal
                setting RefTableId = tableNum(vendInvoiceJour),
                        RefRecId = vendInvoiceJour.RecId
                where businessDocumentSubmissionExternal.UID == vendInvoiceInfoTable_W.BusinessDocumentSubmissionId_W;
        }

        if (FeatureStateProvider::isFeatureEnabled(InvoiceCaptureFeature::instance())
            && VendInvoiceCapturedInvoiceInfoQueryStringFlight::instance().isEnabled()
            && vendInvoiceInfoTable)
        {
            this.updateVendInvoiceCapturedInvoiceInfo();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendInvoiceCapturedInvoiceInfo</Name>
				<Source><![CDATA[
    private void updateVendInvoiceCapturedInvoiceInfo()
    {
        VendInvoiceCapturedInvoiceInfo vendInvoiceCapturedInvoiceInfo;
        select forupdate vendInvoiceCapturedInvoiceInfo
            where vendInvoiceCapturedInvoiceInfo.RefTableId == vendInvoiceInfoTable.TableId
                && vendInvoiceCapturedInvoiceInfo.RefRecId == vendInvoiceInfoTable.RecId;
        if (vendInvoiceCapturedInvoiceInfo.RecId != 0)
        {
            RequestQueryParameterCollection queryParameters = new RequestQueryParameterCollection();
            queryParameters.AddRequestQueryParameter(tableStr(VendInvoiceJour), fieldStr(VendInvoiceJour, InvoiceId), vendInvoiceInfoTable.Num);
            vendInvoiceCapturedInvoiceInfo.QueryString = VendInvoiceCapturedInvoiceInfoEntity::generateQueryString(menuItemDisplayStr(VendInvoiceJournal), queryParameters);
            vendInvoiceCapturedInvoiceInfo.doUpdate();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>