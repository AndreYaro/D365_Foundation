<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransArchivingReverse_End</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransArchivingReverse_End extends InventTransArchivingReverse implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static InventTransArchivingReverse_End construct()
    {
        return new InventTransArchivingReverse_End();
    }

]]></Source>
			</Method>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void execute()
    {
        InventInstrumentationLogger logger = InventInstrumentationLogger::createLogger(classStr(InventTransArchivingReverse_End));

        using (var activityContext = logger.inventTransArchivingReverse_End().logMeasure(funcName()))
        {
            InventTransArchiveTask inventTransArchiveTask;

            ttsbegin;

            // Clean up cancellation tasks
            delete_from inventTransArchiveTask
                 where inventTransArchiveTask.SessionId == inventTransArchiveTable.SessionId;
 
            if (reverseInventTransArchiveTable.InventTransArchiveState < InventTransArchiveState::Ended)
            {
                delete_from inventTransArchiveTask
                    where inventTransArchiveTask.SessionId == reverseInventTransArchiveTable.SessionId;
            }

            if (!reverseInventTransArchiveTable.selectForUpdate())
            {
                reverseInventTransArchiveTable.selectForUpdate(true);
            }
            reverseInventTransArchiveTable.Active = NoYes::No;
            reverseInventTransArchiveTable.InventTransArchiveState = InventTransArchiveState::Ended;
            reverseInventTransArchiveTable.skipTTSCheck(true);
            reverseInventTransArchiveTable.update();

            if (!inventTransArchiveTable.selectForUpdate())
            {
                inventTransArchiveTable.selectForUpdate(true);
            }

            inventTransArchiveTable.Active = NoYes::No;
            inventTransArchiveTable.InventTransArchiveState = InventTransArchiveState::Ended;
            inventTransArchiveTable.skipTTSCheck(true);
            inventTransArchiveTable.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ClassDescription caption()
    {
        return "@SCM:InventTransArchivingReverseEndDescription";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>