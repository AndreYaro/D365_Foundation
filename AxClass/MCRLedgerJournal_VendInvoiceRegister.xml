<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRLedgerJournal_VendInvoiceRegister</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>MCRLedgerJournal_VendInvoiceRegister</c> creates
/// vendor invoice journals.
/// </summary>
class MCRLedgerJournal_VendInvoiceRegister extends MCRLedgerJournal
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createLedgerJournalTrans</Name>
				<Source><![CDATA[
    public LedgerJournalTrans createLedgerJournalTrans(AmountCurCredit      _amtCurCredit,
                                                       AmountCurDebit       _amtCurDebit,
                                                       LedgerJournalACType  _LedgerJournalACType = LedgerJournalACType::Bank)
    {
        LedgerJournalTrans ledgerJournalTrans;

        //Validate the input to the ledger journal trans and ensure that a ledgerjournaltable
        //exists before creating the ledger journalTrans.

        if (this.validateInputLedgerJourTrans(_amtCurCredit,_amtCurDebit)
            && ledgerJournalTable.RecId != 0)
        {
            this.initLedgerJournalTrans(ledgerJournalTrans);

            ledgerJournalTrans.JournalNum = ledgerJournalTable.JournalNum;
            ledgerJournalTrans.AccountType = LedgerJournalACType::Vend;

            if (!ledgerAccount)
            {
                ledgerAccount = LedgerDynamicAccountHelper::getDynamicAccountFromAccountNumber(accountNum, LedgerJournalACType::Vend);
            }

            ledgerJournalTrans.LedgerDimension = ledgerAccount;
            ledgerJournalTrans.OffsetAccountType = ledgerOffsetAccountType;
            ledgerJournalTrans.OffsetLedgerDimension = ledgerOffsetAccount;
            ledgerJournalTrans.TransactionType = transactionType;
            ledgerJournalTrans.BankTransType = bankTransType;
            ledgerJournalTrans.PaymReference = paymReference;
            ledgerJournalTrans.Txt = transTxt;
            ledgerJournalTrans.PaymMode = paymentMode;
            ledgerJournalTrans.CurrencyCode = curCode;
            ledgerJournalTrans.ExchRate = exchRate;
            ledgerJournalTrans.Prepayment = prePay;
            ledgerJournalTrans.PostingProfile = postingProfile;
            ledgerJournalTrans.Invoice = InvoiceId;
            ledgerJournalTrans.Approver = approver;
            ledgerJournalTrans.Approved = approved;
            ledgerJournalTrans.Payment = paymTermId;

            if (_amtCurCredit != 0)
            {
                ledgerJournalTrans.AmountCurCredit = _amtCurCredit;
            }
            if (_amtCurDebit != 0)
            {
                ledgerJournalTrans.AmountCurDebit = _amtCurDebit;
            }

            ledgerJournalTrans.initValue();
            ledgerJournalTrans.defaultRow();

            ledgerJournalTrans.insert();
        }
        else
        {
            throw error("@MCR39760");
        }

        return ledgerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>MCRLedgerJournal_VendInvoiceRegister</c> class.
    /// </summary>
    /// <param name="_ledgerJournalType">
    /// The type of journal to be used in the instantiation of this class.
    /// </param>
    /// <param name="_journalName">
    /// The name of the journal to be used in the instantiation of this
    /// class; optional.
    /// </param>
    public void new(LedgerJournalType _ledgerJournalType,
                        LedgerJournalNameId _journalName="")
    {
        if (_ledgerJournalType != LedgerJournalType::VendInvoiceRegister)
        {
            throw error (strfmt("@MCR35774",funcName(),
            enum2str(LedgerJournalType::VendInvoiceRegister)));
        }
        super(_ledgerJournalType,_journalName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInputLedgerJourTrans</Name>
				<Source><![CDATA[
    protected boolean validateInputLedgerJourTrans(AmountCur _amtCurCredit, AmountCur _amtCurDebit)
    {
        boolean ret;

        ret = super(_amtCurCredit, _amtCurDebit);

        if (ret)
        {
            if (accountNum == "" && ledgerAccount == 0)
            {
                error(strfmt("@MCR35842",LedgerJournalType::VendInvoiceRegister));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>