<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfInventProductType_MainItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class adds functionality over the PmfProductType field found on InventTable.
/// </summary>
public class PmfInventProductType_MainItem extends PmfInventProductType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBeDefaultOrderTypePurchase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the item production type is allowed to have a default order type of <c>ReqPOType::Purch</c>.
    /// </summary>
    /// <returns>
    /// A Boolean whether the item production type is allowed to have a default order type of <c>ReqPOType::Purch</c>.
    /// </returns>
    public boolean canBeDefaultOrderTypePurchase()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBePlannedOrderTypePurchase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the item coverage type is allowed to have the <c>Purch</c> enumeration value of the <c>ReqPOType</c> enumeration type.
    /// </summary>
    /// <returns>
    /// A Boolean whether the item coverage type is allowed to have the <c>Purch</c> enumeration value of the <c>ReqPOType</c> enumeration type.
    /// </returns>
    public boolean canBePlannedOrderTypePurchase()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBePlannedOrderTypeTransfer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the item coverage type is allowed to have the <c>Transfer</c> enumeration value of the <c>ReqPOType</c> enumeration type.
    /// </summary>
    /// <returns>
    /// A Boolean whether the item coverage type is allowed to have the <c>Transfer</c> enumeration value of the <c>ReqPOType</c> enumeration type.
    /// </returns>
    public boolean canBePlannedOrderTypeTransfer()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canInventUpd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether the product type is allowed to have inventory transactions or not.
    /// </summary>
    /// <returns>
    /// Whether the product type is allowed to have inventory transactions or not.
    /// </returns>
    /// <example>
    /// if (pmfInventProductType.canInventUpd())
    /// {
    ///     //...
    /// }
    /// </example>
    public boolean canInventUpd()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// A protected new.
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pmfProductType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the PmfProductType associated with the current PmfInventProductType instance.
    /// </summary>
    /// <returns>
    /// The PmfProductType associated with the current PmfInventProductType instance.
    /// </returns>
    /// <exception cref="missingOverride" label="funcname()">
    /// Thrown when executed against an invalid PmfInventProductType instance.
    /// </exception>
    /// <example>
    /// if (pmfInventProductType.pmfProductType() == PmfProductType::MainItem)
    /// {
    ///     //...
    /// }
    /// </example>
    public PmfProductType pmfProductType()
    {
        return PmfProductType::MainItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePmfProductType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the current <c>InventTable</c> record can be set to the current <c>PmfInventProductType</c> production type or not.
    /// </summary>
    /// <returns>
    /// True if the <c>InventTable</c> record can be set to the current <c>PmfInventProductType</c> production type enumeration value; otherwise false.
    /// </returns>
    /// <exception>
    /// The item has inventory transactions.
    /// </exception>
    public boolean validatePmfProductType()
    {
        boolean ret = true;

        if ((select inventTrans
                where inventTrans.ItemId == inventTable.ItemId).ItemId)
        {
            ret = checkFailed("@PRO2632");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of PmfInventProductType_MainItem.
    /// </summary>
    /// <returns>
    /// A new instance of PmfInventProductType_MainItem
    /// </returns>
    /// <example>
    /// PmfInventProductType_MainItem pmfInventProductType_MainItem = PmfInventProductType_MainItem::construct();
    /// </example>
    public static PmfInventProductType_MainItem construct()
    {
        return new PmfInventProductType_MainItem();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>