<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseInitiationWizardOutboundSortTemplateCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSWarehouseInitiationWizardOutboundSortTemplateCreator extends WHSWarehouseInitiationWizardEntityCreatorBase
{
    private WHSOutboundSortTemplateId outboundSortingTemplateId;
    private InventLocationId warehouseId;
    private WhsWarehouseGroupId warehouseGroupId;
    private WhsWarehouseGroupAll warehouseSelection;
    private boolean isMoveSortedContainersCreateWork;
    private WMSLocationId sortLocation;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>entityName</Name>
				<Source><![CDATA[
    public str entityName()
    {
        return tablePName(WHSOutboundSortTemplate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFrom</Name>
				<Source><![CDATA[
    public static WHSWarehouseInitiationWizardOutboundSortTemplateCreator newFrom(
        WHSWarehouseInitiationWizardEntitiesCreatorMode _mode,
        WHSWarehouseInitiationWizardEntitiesCreationSummaryBuilder _summaryBuilder,
        WHSOutboundSortTemplateId _outboundSortingTemplateId,
        InventLocationId _warehouseId,
        Set _warehouseIds,
        WhsWarehouseGroupId _warehouseGroupId,
        WhsWarehouseGroupAll _warehouseSelection,
        boolean _isMoveSortedContainersCreateWork,
        WMSLocationId _sortLocation)
    {
        WHSWarehouseInitiationWizardOutboundSortTemplateCreator creator = new WHSWarehouseInitiationWizardOutboundSortTemplateCreator(_mode, _summaryBuilder);
        creator.outboundSortingTemplateId = _outboundSortingTemplateId;
        creator.warehouseId = _warehouseId;
        creator.warehouseGroupId = _warehouseGroupId;
        creator.warehouseSelection = _warehouseSelection;
        creator.isMoveSortedContainersCreateWork = _isMoveSortedContainersCreateWork;
        creator.sortLocation = _sortLocation;
        return creator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCreate</Name>
				<Source><![CDATA[
    protected boolean canCreate()
    {
        return outboundSortingTemplateId != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    protected boolean exist()
    {
        WHSOutboundSortTemplate outboundSortingTemplateExists = WHSOutboundSortTemplate::find(outboundSortingTemplateId);
        if(outboundSortingTemplateExists)
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    protected void insert()
    {
        WHSOutboundSortTemplate outboundSortingTemplateExists = WHSOutboundSortTemplate::find(outboundSortingTemplateId);
        
        if(!outboundSortingTemplateExists)
        {
            WHSOutboundSortTemplate outboundSortingTemp;
            outboundSortingTemp.SortTemplateId = outboundSortingTemplateId;
            outboundSortingTemp.Description = outboundSortingTemplateId;
            outboundSortingTemp.SortTemplateType = WHSOutboundSortTemplateType::Container;
            outboundSortingTemp.CreateWorkOnPositionClose = isMoveSortedContainersCreateWork;
            outboundSortingTemp.WarehouseGroupAll = warehouseSelection;
            if (warehouseSelection == WhsWarehouseGroupAll::Group)
            {
                outboundSortingTemp.WarehouseGroupId = warehouseGroupId;
            }
            else if(warehouseSelection == WhsWarehouseGroupAll::Warehouse)
            {
                outboundSortingTemp.InventLocationId = warehouseId;
                outboundSortingTemp.WMSLocationId = sortLocation;
            }
            outboundSortingTemp.insert();
        }

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>