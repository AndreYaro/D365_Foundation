<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchParmLineVendDocumentLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>PurchParmLineVendDocumentLine</c> class contains <c>PurchParmLine</c> table specific functionality and mapped fields
/// related to the <c>VendDocumentLineMap</c> table map.
/// </summary>
[ExportMetadata(classStr(VendDocumentLineInterface), tableStr(PurchParmLine)), ExportAttribute('Dynamics.AX.Application.VendDocumentLineInterface')]
class PurchParmLineVendDocumentLine extends VendDocumentLineInterface
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPurchParmLine</Name>
				<Source><![CDATA[
    protected PurchParmLine parmPurchParmLine()
    {
        return vendDocumentLineMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountExcludingTax</Name>
				<Source><![CDATA[
    public AmountCur amountExcludingTax(AmountCur _amountCur, Qty _qty, TransDate _transDate, Tax _tax = null, VendDocumentTableMap _parmTable = null, boolean _keepEndDisc = false, boolean _skipRounding = false)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        TaxBaseCur taxOrigin = purchParmLine.amountExcludingTax(_amountCur, _qty, _transDate, _tax);
        
        return taxOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId, Common _sourceDocumentLineImplementation = null)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        PurchLine localPurchLine = _sourceDocumentLineImplementation as PurchLine;

        purchParmLine.defaultField(_fieldId, localPurchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    public void defaultRow(
        PurchLine _purchLine = null,
        PurchParmUpdate _purchParmUpdate = null,
        PurchQty _receiveNow = naReal(),
        InventQty _inventNow = naReal(),
        PdsCWInventQty _cwReceiveNow = naReal(),
        Set _tableToLineFields	= null,
        PurchUpdate _specQty = _purchParmUpdate.SpecQty)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        
        purchParmLine.defaultRow(
            _purchLine,
            _purchParmUpdate,
            _receiveNow,
            _inventNow,
            _cwReceiveNow,
            _tableToLineFields,
            _specQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdvancedPricingInvoiceCalculationId</Name>
				<Source><![CDATA[
    public PDSCalculationId getAdvancedPricingInvoiceCalculationId()
    {
        return this.parmPurchParmLine().purchLine().PDSCalculationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>header</Name>
				<Source><![CDATA[
    public VendDocumentTableMap header(boolean _forUpdate = false)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        return purchParmLine.purchParmTable(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeTax</Name>
				<Source><![CDATA[
    public boolean includeTax(PurchTable _purchTable = null, Common _header = null)
    {
        PurchParmTable purchParmTable;

        if (_header)
        {
            purchParmTable = _header;
        }

        boolean inclTax = this.parmPurchParmLine().includeTax(_purchTable, purchParmTable);

        inclTax = this.includeTaxGeneralTax(inclTax);

        return inclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAsset</Name>
				<Source><![CDATA[
    public VendDocumentLineAssetMap lineAsset(boolean _forUpdate)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        VendDocumentLineAssetMap lineAsset = purchParmLine.purchParmLine_Asset(_forUpdate);
        
        return lineAsset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchParmUpdate</Name>
				<Source><![CDATA[
    public PurchParmUpdate purchParmUpdate(boolean _forUpdate = false)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        return purchParmLine.purchParmUpdate(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssessableValue_IN</Name>
				<Source><![CDATA[
    public PurchLineAmount parmAssessableValue_IN(PurchLineAmount _assessableValue_IN = 0)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        PurchParmLine_IN purchParmLineIN = purchParmLine.purchParmLine_IN();
        
        if (!prmisDefault(_assessableValue_IN))
        {
            purchParmLineIN.AssessableValueTransactionCurrency = _assessableValue_IN;
            purchParmLine.packPurchParmLine_IN(purchParmLineIN);
        }

        return purchParmLineIN.AssessableValueTransactionCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCFOPTable_BR</Name>
				<Source><![CDATA[
    public RefRecId parmCFOPTable_BR(RefRecId _cfopTable_BR = 0)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();

        if (!prmisDefault(_cfopTable_BR))
        {
            purchParmLine.cfopTable_BR = _cfopTable_BR;
        }

        return purchParmLine.cfopTable_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsBillOfEntryNumberTable_IN</Name>
				<Source><![CDATA[
    public RefRecId parmCustomsBillOfEntryNumberTable_IN(RefRecId _customsBillOfEntryNumberTable_IN = 0)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        PurchParmLine_IN purchParmLineIN = purchParmLine.purchParmLine_IN();
        
        if (!prmisDefault(_customsBillOfEntryNumberTable_IN))
        {
            purchParmLineIN.CustomsBillOfEntryNumberTable = _customsBillOfEntryNumberTable_IN;
        }

        return purchParmLineIN.CustomsBillOfEntryNumberTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsImportInvoiceNumberTable_IN</Name>
				<Source><![CDATA[
    public RefRecId parmCustomsImportInvoiceNumberTable_IN(RefRecId _customsImportInvoiceNumberTable_IN = 0)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        PurchParmLine_IN purchParmLineIN = purchParmLine.purchParmLine_IN();

        if (!prmisDefault(_customsImportInvoiceNumberTable_IN))
        {
            purchParmLineIN.CustomsImportInvoiceNumberTable = _customsImportInvoiceNumberTable_IN;
        }

        return purchParmLineIN.CustomsImportInvoiceNumberTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsInvoiceRegnRecId_IN</Name>
				<Source><![CDATA[
    public RefRecId parmCustomsInvoiceRegnRecId_IN(RefRecId _customsInvoiceRegnRecId_IN = 0)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        PurchParmLine_IN purchParmLineIN = purchParmLine.purchParmLine_IN();

        if (!prmisDefault(_customsInvoiceRegnRecId_IN))
        {
            purchParmLineIN.CustomsInvoiceRegnRecId = _customsInvoiceRegnRecId_IN;
        }

        return purchParmLineIN.CustomsInvoiceRegnRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeviationQty_RU</Name>
				<Source><![CDATA[
    public PurchDeviationQty_RU parmDeviationQty_RU(PurchDeviationQty_RU _purchDeviationQty_RU = 0)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();

        if (!prmisDefault(_purchDeviationQty_RU))
        {
            purchParmLine.DeviationQty_RU = _purchDeviationQty_RU;
        }

        return purchParmLine.DeviationQty_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventProfileType_RU</Name>
				<Source><![CDATA[
    public InventProfileType_RU parmInventProfileType_RU(InventProfileType_RU _inventProfileType_RU = InventProfileType_RU::NotSpecified)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();

        if (!prmisDefault(_inventProfileType_RU))
        {
            purchParmLine.InventProfileType_RU = _inventProfileType_RU;
        }

        return purchParmLine.InventProfileType_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    public MaximumRetailPrice_IN parmMaximumRetailPrice_IN(MaximumRetailPrice_IN _maximumRetailPrice_IN = 0)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        PurchParmLine_IN purchParmLineIN = purchParmLine.purchParmLine_IN();
                
        if (!prmisDefault(_maximumRetailPrice_IN))
        {
            purchParmLineIN.MaximumRetailPrice = _maximumRetailPrice_IN;
        }

        return purchParmLineIN.MaximumRetailPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile_RU</Name>
				<Source><![CDATA[
    public VendPostingProfile parmPostingProfile_RU(VendPostingProfile _postingProfile_RU = '')
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();

        if (!prmisDefault(_postingProfile_RU))
        {
            purchParmLine.PostingProfile_RU = _postingProfile_RU;
        }

        return purchParmLine.PostingProfile_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxServiceCode_BR</Name>
				<Source><![CDATA[
    public TaxServiceCodeId_BR parmTaxServiceCode_BR(TaxServiceCodeId_BR _taxServiceCodeId_BR = '')
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();

        if (!prmisDefault(_taxServiceCodeId_BR))
        {
            purchParmLine.TaxServiceCode_BR = _taxServiceCodeId_BR;
        }

        return purchParmLine.TaxServiceCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWSetQty</Name>
				<Source><![CDATA[
    public void pdsCWSetQty(DocumentStatus _documentStatus, boolean _creditRemaining)
    {
        PurchLine purchLine = this.purchLine();
        
        this.parmPurchParmLine().revertPreviousVersionChanges(purchLine);
        
        super(_documentStatus, _creditRemaining);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventReceiveNow</Name>
				<Source><![CDATA[
    public void setInventReceiveNow(boolean setInventNow = true)
    {
        this.setPurchaseInventReceiveNow(setInventNow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQty</Name>
				<Source><![CDATA[
    public void setQty(DocumentStatus _documentStatus,
        boolean _creditRemaining,
        boolean _setInventNow = true,
        boolean _setInventQtys = true)
    {
        if (VendorInvoiceQuantityAutoRoundingFeatureV3::instance().isEnabled())
        {
            this.parmPurchParmLine().ReceiveNow = 
                VendInvoiceUnitOfMeasureRounding::roundedQuantityBasedOnUnitOfMeasure(this.parmPurchParmLine().ReceiveNow, this.purchLine().PurchUnit);
        }

        this.setPurchaseQty(_documentStatus, _creditRemaining, _setInventNow, _setInventQtys);
    }

]]></Source>
			</Method>
			<Method>
				<Name>revertPreviousPurchParmLineChanges</Name>
				<Source><![CDATA[
    protected PurchParmLine revertPreviousPurchParmLineChanges(PurchLine _purchLine)
    {
        this.parmPurchParmLine().revertPreviousVersionChanges(_purchLine);
        return vendDocumentLineMap.data();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainAfterInvent</Name>
				<Source><![CDATA[
    public void setRemainAfterInvent()
    {
        this.setPurchaseRemainAfterInvent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>subHeader</Name>
				<Source><![CDATA[
    public VendDocumentSubTableMap subHeader(boolean _forUpdate = false)
    {
        PurchParmLine purchParmLine = this.parmPurchParmLine();
        return purchParmLine.purchParmSubTable(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsVendBOETrans_IN</Name>
				<Source><![CDATA[
    public static CustomsVendBOETrans_IN getCustomsVendBOETrans_IN(RecId _parmLineRecId, ParmId _parmLineParmId)
    {
        PurchParmSubLine purchParmSubLineCopy;
        CustomsVendBOETrans_IN customsVendBOETrans;

        select firstonly purchParmSubLineCopy
            where purchParmSubLineCopy.LineRefRecId == _parmLineRecId
                && purchParmSubLineCopy.ParmId == _parmLineParmId;

        if (purchParmSubLineCopy && purchParmSubLineCopy.JournalRefTableId == customsVendBOETrans.TableId)
        {
            customsVendBOETrans = CustomsVendBOETrans_IN::find(purchParmSubLineCopy.JournalRefRecId);
        }

        return customsVendBOETrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>