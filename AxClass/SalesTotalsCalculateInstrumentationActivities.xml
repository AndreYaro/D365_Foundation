<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTotalsCalculateInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesTotalsCalculateInstrumentationActivities</c> class provides activity contexts to the sales totals calculation instrumentation logging.
/// </summary>
internal final class SalesTotalsCalculateInstrumentationActivities
{
    private const str PricePrefix = 'Price';
    private const str RunThread = 'RunThread';
    private const str CleanupObsoleteBundles = 'CleanupObsoleteBundles';
    private const str Cleanup = 'Cleanup';
    private const str CalculateSalesOrderTotals = 'CalculateSalesOrderTotals';
    private const str CalcualteSalesQuotationTotals = 'CalcualteSalesQuotationTotals';
    private const str CalculateTotalsForOrder = 'CalculateTotalsForOrder';
    private const str CalculateTotalsForAllOrders = 'CalculateTotalsForAllOrders';
    private const str CalculateForSalesOrder = 'CalculateForSalesOrder';
    private const str CalculateForSalesLine = 'CalculateForSalesLine';
    private const str CalculateTotalsForQuotation = 'CalculateTotalsForQuotation';
    private const str CalculateTotalsForAllQuotations = 'CalculateTotalsForAllQuotations';
    private const str CalculateForSalesQuotation = 'CalculateForSalesQuotation';
    private const str CalculateForSalesQuotationLine = 'CalculateForSalesQuotationLine';
    private const str UpdatePrices = 'UpdatePrices';
    private const str UpdateTotals = 'UpdateTotals';
    private const str CalculatePrices = 'CalculatePrices';
    private const str UpdateLinesPriceDisc = 'UpdateLinesPriceDisc';
    private const str DoCalculate = 'DoCalculate';
    private const str ForceSyncRecordsToCDS = 'ForceSyncRecordsToCDS';

    private SalesTotalsCalculateInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(SalesTotalsCalculateInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static SalesTotalsCalculateInstrumentationActivities newFromLogger(SalesTotalsCalculateInstrumentationLogger _logger)
    {
        return new SalesTotalsCalculateInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return logger.activityContext(strFmt('%1.%2', PricePrefix, _activityName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runThread</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runThread(boolean _isMain, SalesTotalsCalculateNumThreads _numberOfThreads, RefRecId _batchJobId)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(RunThread);
        
        activityContext
            .addCustomProperty('isMain', any2Str(_isMain))
            .addCustomProperty('numberOfThreads', int2Str(_numberOfThreads))
            .addCustomProperty('batchJobId', int642Str(_batchJobId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanupObsoleteBundles</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext cleanupObsoleteBundles()
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(CleanupObsoleteBundles);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanup</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext cleanup()
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(Cleanup);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateSalesOrderTotals</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateSalesOrderTotals(SalesTotalsCalculateBundleId _bundleId)
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateSalesOrderTotals);
        
        activityContext.addCustomProperty('bundleId', guid2Str(_bundleId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcualteSalesQuotationTotals</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calcualteSalesQuotationTotals(SalesTotalsCalculateBundleId _bundleId)
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalcualteSalesQuotationTotals);
        
        activityContext.addCustomProperty('bundleId', guid2Str(_bundleId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalsForOrder</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateTotalsForOrder()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateTotalsForOrder);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalsForAllOrders</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateTotalsForAllOrders()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateTotalsForAllOrders);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateForSalesOrder</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateForSalesOrder()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateForSalesOrder);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateForSalesLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateForSalesLine()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateForSalesLine);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalsForQuotation</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateTotalsForQuotation()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateTotalsForQuotation);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalsForAllQuotations</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateTotalsForAllQuotations()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateTotalsForAllQuotations);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateForSalesQuotation</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateForSalesQuotation()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateForSalesQuotation);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateForSalesQuotationLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculateForSalesQuotationLine()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculateForSalesQuotationLine);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrices</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updatePrices()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(UpdatePrices);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTotals</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updateTotals()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(UpdateTotals);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculatePrices</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext calculatePrices()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(CalculatePrices);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLinesPriceDisc</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updateLinesPriceDisc()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(UpdateLinesPriceDisc);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doCalculate</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext doCalculate()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(DoCalculate);
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>forceSyncRecordsToCDS</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext forceSyncRecordsToCDS()
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(ForceSyncRecordsToCDS);
        
        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>