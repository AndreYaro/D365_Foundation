<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerInterCompanyViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Provides access to inter company view models.
/// </summary>
[ExportMetadataAttribute("LedgerIInterCompanyViewModel", "DefaultProvider"),ExportAttribute("Dynamics.AX.Application.LedgerIInterCompanyViewModel")]
public class LedgerInterCompanyViewModel implements LedgerIInterCompanyViewModel
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getIntercompanyLegalEntitiesLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates the lookup view model for the legal entity.
    /// </summary>
    /// <returns>
    ///    The lookup view model.
    /// </returns>
    /// <remarks>
    ///    Only legal entities that are in an intercompany relationship can be selected on an accounting
    ///    distribution.
    /// </remarks>
    public SysLookupViewModel getIntercompanyLegalEntitiesLookup()
    {
        LedgerInterCompany          ledgerInterCompany;
        TableId                     tableId;
        Query                       query;
        QueryBuildDataSource        queryBuildDataSource;
        SysLookupViewModel          lookupViewModel;
        List                        fields;

        tableId = tableNum(CompanyInfo);

        query = new Query();
        queryBuildDataSource = query.addDataSource(tableId);
        queryBuildDataSource.addOrderByField(fieldNum(CompanyInfo, DataArea), SortOrder::Ascending);
        queryBuildDataSource.addRange(fieldNum(CompanyInfo, DataArea)).value(curext());

        while select DestinationCompany from ledgerInterCompany
            where ledgerInterCompany.OriginatingCompany == curExt()
        {
            queryBuildDataSource.addRange(fieldNum(CompanyInfo, DataArea)).value(ledgerInterCompany.DestinationCompany);
        }

        lookupViewModel = new SysLookupViewModel();
        lookupViewModel.parmQuery(query);
        lookupViewModel.parmTable(tableId);

        fields = new List(Types::Integer);
        fields.addEnd(fieldNum(CompanyInfo,DataArea));

        lookupViewModel.parmFields(fields);

        return lookupViewModel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>