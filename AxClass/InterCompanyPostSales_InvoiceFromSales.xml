<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyPostSales_InvoiceFromSales</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InterCompanyPostSales_InvoiceFromSales extends InterCompanyPostSales_Invoice
{
    SalesParmLine   salesParmLine;
    SalesFormLetter fromSalesFormLetter;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>creditRemaining</Name>
				<Source><![CDATA[
        NoYesId creditRemaining()
    {
        SalesFormLetter localSalesFormLetter = this.fromFormLetter() as SalesFormLetter;
        return localSalesFormLetter.salesParmUpdate().CreditRemaining;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formLetterCollect</Name>
				<Source><![CDATA[
        void formLetterCollect()
    {
        ttsbegin;

        changeFromDataAreaId = curext();
        mapDataAreaId = new Map(Types::String,Types::Class);
        while (interCompanyJour)
        {
            salesParmLine = interCompanyJour;
            salesLine     = this.getSalesLine(salesParmLine);
            salesTable    = null;
            salesTable    = salesLine.salesTable();

            mapDataAreaId = new Map(Types::String,Types::Class);

            if (salesTable.InterCompanyCompanyId
            &&  salesParmLine.interCompanyDoExternalPosting()
            &&  salesLine.InterCompanyInventTransId)
            {
                if (mapDataAreaId.exists(salesTable.InterCompanyCompanyId))
                {
                    interCompanyMapRecord = mapDataAreaId.lookup(salesTable.InterCompanyCompanyId);
                }
                else
                {
                    mapDataAreaId.insert(salesTable.InterCompanyCompanyId,InterCompanyMapRecord::construct());
                    interCompanyMapRecord = mapDataAreaId.lookup(salesTable.InterCompanyCompanyId);
                }

                changecompany(salesTable.InterCompanyCompanyId)
                {
                    setprefix(strfmt("@SYS93821",TradeInterCompany::curCompanyName()));

                    purchLine   = PurchLine::findInventTransId(salesLine.InterCompanyInventTransId);
                    salesTable  = null;
                    salesTable  = SalesTable::find(purchLine.InventRefId,true);

                    if (!salesTable.ProjId)
                    {
                        interCompanyMapRecord.insert(salesTable);
                    }
                }
            }

            this.formLetterPost();

            if (!useJournalList)
                break;
            if (!journalList.next(salesParmLine))
                break;
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromFormLetter</Name>
				<Source><![CDATA[
        FormLetterServiceController fromFormLetter()
    {
        fromSalesFormLetter = fromFormLetter;
        return fromSalesFormLetter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesLine</Name>
				<Source><![CDATA[
        SalesLine  getSalesLine(SalesParmLine   _salesParmLine,
                            boolean         _forUpdate = false)
    {
        SalesLine  salesLineLocal;

        salesLineLocal.selectForUpdate(_forUpdate);

        select firstonly salesLineLocal
             index hint recId
             where salesLineLocal.RecId == _salesParmLine.SalesLineRecId;

        if (! SalesTable::exist(salesLineLocal.SalesId))
        {
            throw error("@SYS16740");
        }

        return salesLineLocal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>