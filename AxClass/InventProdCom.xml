<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventProdCom</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventProdCom extends RunBase
{
    private const str FeatureReference = 'BE-00020';

    InventTable               inventTable;
    InventProdcomSetup        inventProdcomSetup;

    InventProdComOwnProduct   ownProduct;
    InventProdComDelivery     otherDelivery;
    InventProdComCreationWork creationWork;

    DialogField               dlgOwnProduct;
    DialogField               dlgOtherDelivery;
    DialogField               dlgCreationWork;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    ///    interface.
    /// </summary>
    /// <returns>
    ///    A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    ///    in the Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        Dialog prodComDialog = new DialogRunbase(strfmt('%1 - %2', "@SYS92036", inventTable.ItemId), this);

        dlgOwnProduct    = prodComDialog.addField(enumstr(NoYes), "@SYS92053");
        dlgOtherDelivery = prodComDialog.addField(enumstr(NoYes), "@SYS92047");
        dlgCreationWork  = prodComDialog.addField(enumstr(NoYes), "@SYS92045");

        inventProdcomSetup = InventProdcomSetup::findByItemId(inventTable.ItemId);
        dlgOwnProduct.value(inventProdcomSetup.OwnProduct);
        dlgOtherDelivery.value(inventProdcomSetup.OtherDelivery);
        dlgCreationWork.value(inventProdcomSetup.CreationWork);

        return prodComDialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        ownProduct    = dlgOwnProduct.value();
        creationWork  = dlgCreationWork.value();
        otherDelivery = dlgOtherDelivery.value();

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public InventTable inventTable (InventTable _inventTable = inventTable)
    {
        inventTable = _inventTable;

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        ttsbegin;
        inventProdcomSetup = InventProdcomSetup::findByItemId(inventTable.ItemId, true);
        inventProdcomSetup.CreationWork  = creationWork;
        inventProdcomSetup.OtherDelivery = otherDelivery;
        inventProdcomSetup.OwnProduct    = ownProduct;
        if (inventProdcomSetup)
        {
          inventProdcomSetup.update();
        }
        else
        {
          inventProdcomSetup.ItemId = inventTable.ItemId;
          inventProdcomSetup.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deserializes the <paramref name="packedClass" /> parameter value to an instance of the
    ///    <c>InventProdCom</c> class.
    /// </summary>
    /// <param name="packedClass">
    ///    The container from which to deserialize the instance.
    /// </param>
    /// <returns>
    ///    true if deserialization was successful; otherwise, false.
    /// </returns>
    public boolean unpack(container packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null)
    {
        boolean ret = super(calledFrom);

        if (dlgOwnProduct.value() == NoYes::No
            && (dlgCreationWork.value() == NoYes::Yes
            || dlgOtherDelivery.value() == NoYes::Yes))
        {
            ret = false;
            error("@SYS98360");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static InventProdCom construct()
    {
        return new InventProdCom();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        InventProdCom inventProdCom = InventProdCom::construct();

        if (_args.dataset() == tablenum(InventTable))
        {
            inventProdCom.inventTable(_args.record());

            if (inventProdCom.prompt())
            {
                inventProdCom.runOperation();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>