<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjListProjTrans_HourRate</Name>
	<SourceCode>
		<Declaration><![CDATA[
class   ProjListProjTrans_HourRate
extends ProjListProjTrans

{
    DialogField     dialogFixedPrice,
                    dialogTimeMaterial,
                    dialogInternalCost,
                    dialogInvestment,
                    dialogTime,
                    dialogHour,
                    dialogExpenses,
                    dialogRevenue,
                    dialogOnAcc,
                    dialogItem;

    boolean         fixedPrice;
    boolean         timeMaterial;
    boolean         internalCost;
    boolean         investment;
    boolean         time;
    boolean         hour;
    boolean         expenses;
    boolean         revenue;
    boolean         onAcc;
    boolean         item;

    //
    // The dontShowDialog variable in ProjListProjTran is use to hide information
    // in the 2 Period reports and show not be used by the classes that extend from it.
    //
    boolean         dontShowDialog1;

    #define.CurrentVersion(1)

    #localmacro.CurrentList
        projFromDate,
        projToDate,
        ledgerFromDate,
        ledgerToDate,
        fixedPrice,
        timeMaterial,
        internalCost,
        investment,
        time,
        hour,
        expenses,
        revenue,
        onAcc,
        item
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
Object dialog(Object _dialog)
    {

        DialogRunbase   dialog = _dialog;
        DialogGroup     dialogMainGroup;
        ;

        if (! dontShowDialog1)
        {
            dialogMainGroup   = dialog.addGroup();
            dialogMainGroup.columns(2);
            dialogMainGroup.frameType(FormFrameType::None);

            dialog.addGroup("@SYS78367",dialogMainGroup);

            dialogTimeMaterial  = dialog.addFieldValue(extendedtypestr(ProjOptionTM),         timeMaterial, "@SYS53874", "@SYS78362");
            dialogFixedPrice    = dialog.addFieldValue(extendedtypestr(ProjOptionFixedPrice), fixedPrice,   "@SYS3237",  "@SYS78361");
            dialogInvestment    = dialog.addFieldValue(extendedtypestr(ProjOptionInvestment), investment,   "@SYS78353", "@SYS78364");
            dialogInternalCost  = dialog.addFieldValue(extendedtypestr(ProjOptionInternal),   internalCost, "@SYS78366", "@SYS78363");
            dialogTime          = dialog.addFieldValue(extendedtypestr(ProjOptionTime),       time,         "@SYS8827",  "@SYS78365");

            dialog.addGroup("@SYS78373",dialogMainGroup);

            dialogHour         = dialog.addFieldValue(extendedtypestr(ProjOptionHours),      true,         "@SYS5269",  "@SYS78368");
            dialogHour.allowEdit(false);
            dialogExpenses     = dialog.addFieldValue(extendedtypestr(ProjOptionCost),       expenses,     "@SYP4882014", "@SYS78369");
            dialogItem         = dialog.addFieldValue(extendedtypestr(ProjOptionItem),       item,         "@SYS7407",  "@SYS78372");
            dialogRevenue      = dialog.addFieldValue(extendedtypestr(ProjOptionRevenue),    revenue,      "@SYS9154",  "@SYS78818");
            dialogOnAcc        = dialog.addFieldValue(extendedtypestr(ProjOptionOnAcc),      onAcc,        "@SYS7659",  "@SYS78371");

            dialog = super(dialog);
        }

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
        public boolean getFromDialog()
    {
        ;

        if (!dontShowDialog1)
        {
            super();

            fixedPrice      = dialogFixedPrice.value();
            timeMaterial    = dialogTimeMaterial.value();
            internalCost    = dialogInternalCost.value();
            investment      = dialogInvestment.value();
            time            = dialogTime.value();

            hour            = true;
            expenses        = dialogExpenses.value();
            revenue         = dialogRevenue.value();
            onAcc           = dialogOnAcc.value();
            item            = dialogItem.value();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustShowAmount</Name>
				<Source><![CDATA[
        boolean mustShowAmount()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustShowHourQty</Name>
				<Source><![CDATA[
        boolean mustShowHourQty()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        void new(ProjListStateId _listStateId)
    {
        ;
        super(_listStateId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        return [#CurrentVersion, #currentList] + [super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDontShowDialog1</Name>
				<Source><![CDATA[
        public boolean parmDontShowDialog1(boolean _dontShowDialog1 = dontShowDialog1)
    {
        ;

        dontShowDialog1 = _dontShowDialog1;

        return dontShowDialog1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExpenses</Name>
				<Source><![CDATA[
        public boolean parmExpenses(boolean _expenses = expenses)
    {
        ;
        expenses = _expenses;

        return expenses;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedPrice</Name>
				<Source><![CDATA[
        public boolean parmFixedPrice(boolean _fixedPrice = fixedPrice)
    {
        ;
        fixedPrice = _fixedPrice;

        return fixedPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHour</Name>
				<Source><![CDATA[
        public boolean parmHour(boolean _hour = hour)
    {
        ;
        hour = _hour;

        return hour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInternalCost</Name>
				<Source><![CDATA[
        public boolean parmInternalCost(boolean _internalCost = internalCost)
    {
        ;
        internalCost = _internalCost;

        return internalCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvestment</Name>
				<Source><![CDATA[
        public boolean parmInvestment(boolean _investment = investment)
    {
        ;
        investment = _investment;

        return investment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItem</Name>
				<Source><![CDATA[
        public boolean parmItem(boolean _item = item)
    {
        ;
        item = _item;

        return item;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnAcc</Name>
				<Source><![CDATA[
        public boolean parmOnAcc(boolean _onAcc = onAcc)
    {
        ;
        onAcc = _onAcc;

        return onAcc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRevenue</Name>
				<Source><![CDATA[
        public boolean parmRevenue(boolean _revenue = revenue)
    {
        ;
        revenue = _revenue;

        return revenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTime</Name>
				<Source><![CDATA[
        public boolean parmTime(boolean _time = time)
    {
        ;
        time = _time;

        return time;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeMaterial</Name>
				<Source><![CDATA[
        public boolean parmTimeMaterial(boolean _timeMaterial = timeMaterial)
    {
        ;
        timeMaterial = _timeMaterial;

        return timeMaterial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDisplayFlags</Name>
				<Source><![CDATA[
        container setDisplayFlags(ProjAmountQty _amountQty)
    {
        int     showQtyHour     = 1;
        int     showValueFactor = 1;
        int     showRevenue     = 1;
        int     showSalary      = 1;
        int     showMargin      = 1;

        if (_amountQty == ProjAmountQty::Amount)
        {
            showQtyHour = 0;
        }

        if (_amountQty == ProjAmountQty::Qty)
        {
            showValueFactor = 0;
            showRevenue = 0;
            showSalary = 0;
            showMargin = 0;
        }

        // When both "Expense" and "Item" has been deselected in the hour rate reports, the two columns
        // "Revenue hour rate" and "Value added hour rate" is always the same.
        // Therefore the "Value added hour rate" should be deselected.
        if (!this.parmItem() && ! this.parmExpenses())
        {
            showValueFactor = 0;
        }

        return [showQtyHour, showValueFactor, showRevenue, showSalary, showMargin];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container _packedClass)
    {
        boolean         ret;
        Integer         version    = RunBase::getVersion(_packedClass);
        container       conListProjTrans;

        switch (version)
        {
            case #CurrentVersion:
                [version, #currentList, conListProjTrans] = _packedClass;
                super(conListProjTrans);
                ret = true;
                break;
            default:
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
        boolean validate()
    {
        boolean ret;

        ret = super();

        if (!ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled() &&
            !(fixedPrice || timeMaterial || internalCost || investment || time))
        {
            // Project type not selected
            ret = checkFailed("@SYS91026");
        }

        if (!(hour || expenses || revenue || onAcc || item))
        {
            // Transaction type not selected
            ret = checkFailed("@SYS91027");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>