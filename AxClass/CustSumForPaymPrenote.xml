<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustSumForPaymPrenote</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustSumForPaymPrenote</c> class generates customer prenotes.
/// </summary>
class CustSumForPaymPrenote extends CustSumForPaym
{
    List prenoteTrans;
    List journalList;
    Filename filename;
    StreamIo file;
    PrenoteExportFormats prenoteExportFormats;
    CustOutPaymPrenote_NACHA custOutPaymPrenote_NACHA;
    private EffectiveDate effectiveEntryDate;

    #DEFINE.strPrenote('Prenote')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPrenoteJournalId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new number from the prenotes number sequence for prenote identification.
    /// </summary>
    /// <returns>
    /// <c>LedgerJournalId</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    LedgerJournalId getPrenoteJournalId()
    {
        extendedTypeId id = extendedtypenum(BankPrenoteNum);
        NumberSeq num;

        try
        {
            num = NumberSeq::newGetNum(NumberSeqReference::findReference(id));
            return num.num();
        }
        catch
        {
            infolog.clear(0);
            throw error("@SYS128969");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustVendOutPaym</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CustVendOutPaym</c> class if the <c>PaymMode</c> object is
    /// initialized.
    /// </summary>
    public void initCustVendOutPaym()
    {
        paymMode = #strPrenote;

        custOutPaymPrenote_NACHA = CustOutPaymPrenote_NACHA::newCustVendSumForPaym(this, file);
        custOutPaymPrenote_NACHA.parmJournalList(prenoteTrans);
        custOutPaymPrenote_NACHA.setFileName(filename);
        custOutPaymPrenote_NACHA.parmFileNACHAFormat(prenoteExportFormats);
        custOutPaymPrenote_NACHA.parmBankAccountID(bankAccountID);
        custOutPaymPrenote_NACHA.parmLedgerJournalId(ledgerJournalId);
        custOutPaymPrenote_NACHA.parmEffectiveEntryDate(effectiveEntryDate);
        paymFormat = custOutPaymPrenote_NACHA.interfaceName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFileName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Filename parmFileName(Filename _filename = filename)
    {
        filename = _filename;

        return filename;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEffectiveEntryDate</Name>
				<Source><![CDATA[
    internal EffectiveDate parmEffectiveEntryDate(EffectiveDate _effectiveDate = effectiveEntryDate)
    {
        effectiveEntryDate = _effectiveDate;

        return effectiveEntryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFile</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public StreamIo parmFile(StreamIo _file = file)
    {
        file = _file;

        return file;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalList</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List parmJournalList(List _journalList = journalList)
    {
        journalList = _journalList;

        return journalList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrenoteExportFormats</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PrenoteExportFormats parmPrenoteExportFormats(PrenoteExportFormats _prenoteExportFormats = prenoteExportFormats)
    {
        prenoteExportFormats = _prenoteExportFormats;

        return prenoteExportFormats;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrenoteTrans</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List parmPrenoteTrans(List _prenoteTrans = prenoteTrans)
    {
        prenoteTrans = _prenoteTrans;

        return prenoteTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSelectOnPaymFormat</Name>
				<Source><![CDATA[
    public boolean parmSelectOnPaymFormat(boolean _selectOnPaymFormat = false)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymModeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CustPaymModeTable</c> class that has an export format of National
    /// Automated Clearing House Association.
    /// </summary>
    /// <returns>
    /// <c>CustPaymModeTable</c> table.
    /// </returns>
    public CustVendPaymModeTable paymModeTable()
    {
        CustPaymModeTable custPaymModeTable;
        CustOutPaym_NACHA custOutPaym_NACHA = new CustOutPaym_NACHA();

        custPaymModeTable.actionClassName(true, custOutPaym_NACHA.interfaceName());
        custPaymModeTable.ClassId = classnum(CustOutPaymPrenote_NACHA);
        custPaymModeTable.Name = #strPrenote;

        return custPaymModeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a customer prenote file.
    /// </summary>
    public void run()
    {
        this.initCustVendOutPaym();

        if (! this.validate())
        {
            return;
        }

        if (!custOutPaymPrenote_NACHA.validate())
        {
            throw error("@SYS18447");
        }

        custOutPaymPrenote_NACHA.open();
        custOutPaymPrenote_NACHA.generatePaymentLines();
        custOutPaymPrenote_NACHA.close();
        file = custOutPaymPrenote_NACHA.parmFile();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Bypasses journal validation for prenote file generation.
    /// </summary>
    /// <param name="_calledFrom">
    /// Identifies the object from which this method is called. Default value is null.
    /// </param>
    /// <returns>
    /// true
    /// </returns>
    public boolean validate(Object _calledFrom = null)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static CustVendSumForPaym construct(List _list,Filename _filename, PrenoteExportFormats _prenoteExportFormats, CompanyBankAccount _companyBankAccountId)
    {
        CustSumForPaymPrenote custSumForPaymPrenote;

        custSumForPaymPrenote = new CustSumForPaymPrenote();
        custSumForPaymPrenote.parmPrenoteTrans(_list);
        custSumForPaymPrenote.parmLedgerJournalId(custSumForPaymPrenote.getPrenoteJournalId());
        custSumForPaymPrenote.parmFileName(_filename);
        custSumForPaymPrenote.parmBankAccountID(_companyBankAccountId);
        custSumForPaymPrenote.parmPrenoteExportFormats(_prenoteExportFormats);
        return custSumForPaymPrenote;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>