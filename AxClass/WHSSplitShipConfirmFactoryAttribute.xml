<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSSplitShipConfirmFactoryAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSSplitShipConfirmFactoryAttribute</c> class allows decorating classes with a <c>WHSLoadSplitShipConfirmMethod</c> enum. This enables construction of classes using the extension framework.
/// </summary>
internal final class WHSSplitShipConfirmFactoryAttribute extends SysAttribute implements SysExtensionIAttribute
{
    private WHSLoadSplitShipConfirmMethod splitShipConfirm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new 
    /// </summary>
    /// <param name = "_splitShipConfirm">
    /// Enum value to determine which extension of the <c>WHSSplitShipConfirm</c> class to create.
    /// </param>
    public void new(WHSLoadSplitShipConfirmMethod _splitShipConfirm)
    {
        splitShipConfirm = _splitShipConfirm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCacheKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the key used for storing cached data for this attribute.
    /// </summary>
    /// <returns>
    /// A string representing the cache key.
    /// </returns>
    public str parmCacheKey()
    {
        return classStr(WHSSplitShipConfirmFactoryAttribute)+';'+enum2Str(splitShipConfirm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSingleton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the same instance should be returned by the extension framework for a given extension.
    /// </summary>
    /// <returns>
    /// False.
    /// </returns>
    public boolean useSingleton()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>