<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AmountAdjustEngineCustInvoice_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class AmountAdjustEngineCustInvoice_W extends AmountAdjustEngine_W
{
    private CustInvoiceJour custInvoiceJour;
    private CurrencyCode standardCurrency;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcLine_CustInvoiceTrans</Name>
				<Source><![CDATA[
    protected container calcLine_CustInvoiceTrans(CustInvoiceTrans _line)
    {
        
        AmountMST amountCalculated, amountLocked;

        if (custInvoiceJour.CurrencyCode == CompanyInfoHelper::standardCurrency())
        {
            amountLocked     = _line.LineAmount;
        }
        else
        {
            amountCalculated = custInvoiceJour.amountMST(_line.LineAmount);
        }

        return [ amountCalculated, amountLocked ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLine_MarkupTrans</Name>
				<Source><![CDATA[
    protected container calcLine_MarkupTrans(MarkupTrans _line)
    {
        AmountMST amountCalculated, amountLocked;

        if (_line.CurrencyCode == CompanyInfoHelper::standardCurrency())
        {
            amountLocked     = _line.CalculatedAmount;
        }
        else
        {
            amountCalculated = CurrencyExchangeHelper::mstAmount(_line.CalculatedAmount, _line.CurrencyCode, custInvoiceJour.InvoiceDate, Currency::noYes2UnknownNoYes(custInvoiceJour.Triangulation), _line.CurrencyCode == custInvoiceJour.CurrencyCode ? custInvoiceJour.ExchRate : 0, _line.CurrencyCode == custInvoiceJour.CurrencyCode ? custInvoiceJour.ExchRateSecondary : 0);
        }

        return [ amountCalculated, amountLocked ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustInvoiceJour</Name>
				<Source><![CDATA[
    protected void parmCustInvoiceJour(CustInvoiceJour _custInvoiceJour)
    {
        ;
        custInvoiceJour = _custInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustInvoiceJour</Name>
				<Source><![CDATA[
    #ISOCountryRegionCodes
    public static void adjustInvoiceJour(CustInvoiceJour _invoiceJour)
    {
        AmountAdjustEngineCustInvoice_W adjustEngine = new AmountAdjustEngineCustInvoice_W();
        MarkupTrans                     markupTrans;
        CustInvoiceTrans                invoiceTrans;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ])
            && isConfigurationkeyEnabled(configurationkeynum(LogisticsBasic)))
        {

            adjustEngine.parmCustInvoiceJour(_invoiceJour);
            adjustEngine.parmTotalMST(_invoiceJour.InvoiceAmountMST   -
                                      _invoiceJour.SumTaxMST          -
                                      _invoiceJour.InvoiceRoundOffMST +
                                      _invoiceJour.EndDiscMST);
            adjustEngine.standardCurrency = CompanyInfoHelper::standardCurrency();

            ttsbegin;

            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(CustInvoiceTrans));
            queryBuildDataSource.addRange(fieldNum(CustInvoiceTrans, SalesId)).value(queryValue(_invoiceJour.SalesId));
            queryBuildDataSource.addRange(fieldNum(CustInvoiceTrans, InvoiceId)).value(queryValue(_invoiceJour.InvoiceId));
            queryBuildDataSource.addRange(fieldNum(CustInvoiceTrans, InvoiceDate)).value(queryValue(_invoiceJour.InvoiceDate));
            queryBuildDataSource.addRange(fieldNum(CustInvoiceTrans, NumberSequenceGroup)).value(queryValue(_invoiceJour.NumberSequenceGroup));
            QueryBuildDataSource queryBuildDataSource2 = queryBuildDataSource.addDataSource(tableNum(MarkupTrans));
            queryBuildDataSource2.relations(false);
            queryBuildDataSource2.addLink(fieldNum(CustInvoiceTrans, TableId), fieldNum(MarkupTrans, TransTableId));
            queryBuildDataSource2.addLink(fieldNum(CustInvoiceTrans, RecId), fieldNum(MarkupTrans, TransRecId));
            queryBuildDataSource2.joinMode(JoinMode::OuterJoin);

            QueryRun queryRun = new QueryRun(query);
            while(queryRun.next())
            {

                if (queryRun.changed(tableNum(CustInvoiceTrans)))
                {
                    invoiceTrans = queryRun.get(tableNum(CustInvoiceTrans));
                    invoiceTrans.selectForUpdate(true);
                    adjustEngine.addLine(invoiceTrans);
                }

                if (queryRun.changed(tableNum(MarkupTrans)))
                {
                    markupTrans = queryRun.get(tableNum(MarkupTrans));
                    markupTrans.selectForUpdate(true);
                    adjustEngine.addLine(markupTrans);
                }
            }

            adjustEngine.run();

            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>