<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportCreateHierarchyVersionController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxReportCreateHierarchyVersionController</c> class is the controller for <c>TaxReportCreateHierarchyVersionService</c> service.
/// </summary>
internal final class TaxReportCreateHierarchyVersionController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SysOperationController construct(Args _args)
    {
        SysOperationController controller = new TaxReportCreateHierarchyVersionController(
            classStr(TaxReportCreateHierarchyVersionService),
            methodStr(TaxReportCreateHierarchyVersionService, process));
        controller.parmArgs(_args);
        controller.parmDialogCaption("@TaxGSTSetoffHierarchyProfile:AddVersion");
        controller.parmExecutionMode(SysOperationExecutionMode::Synchronous);

        TaxReportCreateHierarchyVersionContract contract = controller.getDataContractObject();
        contract.parmTaxReportHierarchy(_args.record());

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (TaxReportCreateHierarchyVersionController::canStartNewBatch())
        {
            TaxReportCreateHierarchyVersionController::construct(_args).startOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canStartNewBatch</Name>
				<Source><![CDATA[
    private static boolean canStartNewBatch()
    {
        boolean ret = true;

        BatchJob batchJob;
        Batch batch;

        select firstonly batchJob
            where batchJob.Status != BatchStatus::Finished
                && batchJob.Status != BatchStatus::Canceled
                && batchJob.Status != BatchStatus::Error
            join batch
                where batch.BatchJobId == batchJob.RecId && batch.ClassNumber == classNum(TaxReportCreateHierarchyVersionController);

        if (batchJob)
        {
            ret = checkFailed(strFmt("@TaxGSTSetoffHierarchyProfile:CannotStartANewJob", "@TaxGSTSetoffHierarchyProfile:AddVersion"));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>