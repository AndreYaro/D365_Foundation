<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMVendRebateActionManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TAMVendRebateActionManager</c> class handles updating the
/// TAMVendRebate table when the workflow status changes.
/// </summary>
class TAMVendRebateActionManager extends TAMWorkflowActionManager
{
    TAMVendRebateAgreement          tamVendRebateAgreement;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the workflow approval status after the workflow action has been dispatched.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object contains the data needed for the updates.
    /// </param>
    protected void process(Args _args)
    {
        object                      tamVendRebateAgreement_ds;

        workflowWorkItemTable = _args.caller().getActiveWorkflowWorkItem();
        menuitemActionName = _args.menuItemName();
        workflowWorkItemActionType = WorkflowWorkItemActionManager::findActionTypeForMenuItem(workflowWorkItemTable, menuitemActionName);

        this.showDialog();

        if (workflowWorkItemActionDialog.parmIsClosedOK())
        {
            tamVendRebateAgreement = _args.record();

            switch (workflowWorkItemActionType)
            {
                case WorkflowWorkItemActionType::RecallLineItem:
                case WorkflowWorkItemActionType::CancelLineItem:
                    tamVendRebateAgreement.WFApprovalStatus = TAMVendRebateApprovalStatus::NotSubmitted;
                    break;

                case WorkflowWorkItemActionType::Complete:
                    tamVendRebateAgreement.WFApprovalStatus = TAMVendRebateApprovalStatus::Approved;
                    break;

                case WorkflowWorkItemActionType::Reassign:
                case WorkflowWorkItemActionType::Delegate:
                    tamVendRebateAgreement.WFApprovalStatus = TAMVendRebateApprovalStatus::Submitted;
                    break;

                case WorkflowWorkItemActionType::Return:
                case WorkflowWorkItemActionType::Deny:
                case WorkflowWorkItemActionType::RequestChange:
                    tamVendRebateAgreement.WFApprovalStatus = TAMVendRebateApprovalStatus::Rejected;
                    break;

                case WorkflowWorkItemActionType::Resubmit:
                    tamVendRebateAgreement.WFApprovalStatus = TAMVendRebateApprovalStatus::Submitted;
                    break;

                default:
                    tamVendRebateAgreement.WFApprovalStatus = TAMVendRebateApprovalStatus::NotSubmitted;
                    break;
            }

            ttsbegin;
            tamVendRebateAgreement.selectForUpdate(true);
            this.updateWorkflowWorkItem();
            tamVendRebateAgreement.update();
            ttscommit;

            tamVendRebateAgreement_ds = FormDataUtil::getFormDataSource(tamVendRebateAgreement);

            if (tamVendRebateAgreement_ds)
            {
                tamVendRebateAgreement_ds.research();
                tamVendRebateAgreement_ds.refresh();
            }

            _args.caller().updateWorkFlowControls();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TAMVendRebateActionManager construct()
    {
        return new TAMVendRebateActionManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        TAMVendRebateActionManager  tamVendRebateActionManager;

        if (_args.record())
        {
            tamVendRebateActionManager = TAMVendRebateActionManager::construct();
            tamVendRebateActionManager.process(_args);
        }
        else
        {
            throw error("@MCR27548");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>