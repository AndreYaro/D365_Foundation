<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMixedLicensePlateReturnsProcessSourceOrderCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal abstract class WHSMixedLicensePlateReturnsProcessSourceOrderCreator 
{
    protected WHSMixedLicensePlateReceipt mixedLicensePlateReceipt;
    protected boolean isReturnOrderCreationFromMobileDeviceEnabled;
    protected WHSDispositionCode dispositionCode;
    
    private Map inventDims = new Map(Types::String, Types::Record);
    private Map itemReceiptLineAboveLocationInventDimIds = new Map(Types::String, Types::String);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createSourceOrderAndLines</Name>
				<Source><![CDATA[
    internal abstract boolean createSourceOrderAndLines()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromMixedLp</Name>
				<Source><![CDATA[
    internal void initFromMixedLp(WHSMixedLicensePlateReceipt _mixedLicensePlateReceipt)
    {
        this.mixedLicensePlateReceipt = _mixedLicensePlateReceipt;
        this.isReturnOrderCreationFromMobileDeviceEnabled = WHSParameters::isReturnOrderCreationFromMobileDeviceEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDispositionCode</Name>
				<Source><![CDATA[
    internal WHSDispositionCode parmDispositionCode(WHSDispositionCode _dispositionCode = dispositionCode)
    {
        dispositionCode = _dispositionCode;

        return dispositionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    private InventDim inventDim(InventDimId _inventDimId)
    {
        if (!inventDims.exists(_inventDimId))
        {
            InventDim inventDim = InventDim::find(_inventDimId);

            inventDims.add(_inventDimId, inventDim);
        }

        return inventDims.lookup(_inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemReceiptLineAboveLocationInventDimId</Name>
				<Source><![CDATA[
    protected InventDimId itemReceiptLineAboveLocationInventDimId(InventTable _item, InventDimId _receiptLineInventDimId)
    {
        str key = _item.ItemId + _receiptLineInventDimId;

        if (!itemReceiptLineAboveLocationInventDimIds.exists(key))
        {
            InventDim receiptLineInventDim = this.inventDim(_receiptLineInventDimId);

            InventDimParm aboveLocationInventDimParm = WHSReservationHierarchyInventDimUtil::initInventDimParmAboveLocation(_item);

            InventDim inventDimAboveLocation;
            inventDimAboveLocation.initFromInventDimParmNonBlank(receiptLineInventDim, aboveLocationInventDimParm);

            inventDimAboveLocation = InventDim::findOrCreate(inventDimAboveLocation);

            itemReceiptLineAboveLocationInventDimIds.add(key, inventDimAboveLocation.inventDimId);
        }

        return itemReceiptLineAboveLocationInventDimIds.lookup(key);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>