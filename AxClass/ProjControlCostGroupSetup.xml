<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjControlCostGroupSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjControlCostGroupSetup extends SysListPanel
{
    ProjCostGroupId     costGroupId;
    ProjControlId       controlId;
    ProjCategoryType    categoryType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    /*
        In the format [Id1, Id2, ...]
        Where Ids are the Ids given with getData()
    */
    public void addData(container data)
    {
        ProjControlCostGroupSetupServer::addCategory(data, this.parmCostGroupId(),this.parmControlId(), this.parmCategoryType());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /*
        Must be in the format [[Id, column1, column2], [Id, column1, column2], ...]
        Where Id is the Ids used when adding and removing items
    */
    container getData()
    {
        container selectedData  = ProjControlCostGroupSetupServer::getCategoryInGroup(this.parmControlId(),this.parmCostGroupId(),this.parmCategoryType());
        container availableData = ProjControlCostGroupSetupServer::getCategoryNotInGroup(this.parmControlId(),this.parmCostGroupId(),this.parmCategoryType());
        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfColumnsSelected</Name>
				<Source><![CDATA[
    int numOfColumnsSelected()
    {
        return 2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfColumnsAvailable</Name>
				<Source><![CDATA[
    int numOfColumnsAvailable()
    {
        return 3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryType</Name>
				<Source><![CDATA[
    ProjCategoryType parmCategoryType(ProjCategoryType _categoryType = categoryType)
    {
        categoryType = _categoryType;
        return categoryType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmControlId</Name>
				<Source><![CDATA[
    ProjControlId parmControlId(ProjControlId _controlId = controlId)
    {
        controlId = _controlId;
        return controlId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostGroupId</Name>
				<Source><![CDATA[
    ProjCostGroupId parmCostGroupId(ProjCostGroupId _costGroupId = costGroupId)
    {
        costGroupId = _costGroupId;
        return costGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemsNeeded</Name>
				<Source><![CDATA[
    int parmItemsNeeded(int _itemsNeeded = itemsNeeded)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    /*
        In the format [Id1, Id2, ...]
        Where Ids are the Ids given with getData()
    */
    public void removeData(container data)
    {
        ProjControlCostGroupSetupServer::deleteProjLine(data, this.parmCostGroupId(), this.parmControlId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static ProjControlCostGroupSetup construct()
    {
        return new ProjControlCostGroupSetup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    static ProjControlCostGroupSetup newForm(FormRun          formRun,
                                             int              parentId,
                                             str              captionSelected,
                                             str              captionAvailable)
    {
        ProjControlCostGroupSetup costGroupSetup = ProjControlCostGroupSetup::construct();

        costGroupSetup.parmFormRun(formRun);
        costGroupSetup.parmParentId(parentId);
        costGroupSetup.parmCaptionAvailable(captionAvailable);
        costGroupSetup.parmCaptionSelected(captionSelected);
        costGroupSetup.build();

        return costGroupSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCategoryInGroupCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// getCategoryInGroupCount
    /// </summary>
    /// <returns>Number of categories in the InGroup (Selected Categories)</returns>
    int getCategoryInGroupCount()
    {
        return conLen(ProjControlCostGroupSetupServer::getCategoryInGroup(
                                                            this.parmControlId(),
                                                            this.parmCostGroupId(),
                                                            this.parmCategoryType()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>