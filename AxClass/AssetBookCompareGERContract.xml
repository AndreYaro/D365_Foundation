<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetBookCompareGERContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract class for the <c>AssetBookCompare</c> GER report.
/// </summary>
[DataContractAttribute]
[SysOperationContractProcessingAttribute(classStr(AssetBookCompareGERUIBuilder))]
[SysOperationGroupAttribute('FirstBook', "@SYS96917", '1')]
[SysOperationGroupAttribute('SecondBook', "@SYS96918", '2')]
internal final class AssetBookCompareGERContract extends ERFormatMappingRunBaseContract implements SysOperationValidatable
{
    private ERFormatMappingId formatMapping;
    private AssetBookMergeId firstAssetBookId;
    private AssetBookMergeId secondAssetBookId;
    private StartDate startDate;
    private LedgerCurrencySelection ledgerCurrencySelection;
    private str query;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFormatMapping</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FormatMapping'),
        SysOperationLabelAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationHelpTextAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationDisplayOrderAttribute('1')
    ]
    internal ERFormatMappingId parmFormatMapping(ERFormatMappingId _formatMapping = formatMapping)
    {
        formatMapping = _formatMapping;
        return formatMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFirstAssetBookId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('BookId1'),
        SysOperationLabelAttribute(literalstr("@SYS95794")),
        SysOperationGroupMemberAttribute('FirstBook'),
        SysOperationDisplayOrderAttribute('2'),
        SysOperationHelpTextAttribute(literalstr("@SYS97093"))
    ]
    internal AssetBookMergeId parmFirstAssetBookId(AssetBookMergeId _firstAssetBookId = firstAssetBookId)
    {
        firstAssetBookId = _firstAssetBookId;
        return firstAssetBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSecondAssetBookId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('BookId2'),
        SysOperationLabelAttribute(literalstr("@SYS95794")),
        SysOperationGroupMemberAttribute('SecondBook'),
        SysOperationDisplayOrderAttribute('3'),
        SysOperationHelpTextAttribute(literalstr("@SYS97093"))
    ]
    internal AssetBookMergeId parmSecondAssetBookId(AssetBookMergeId _secondAssetBookId = secondAssetBookId)
    {
        secondAssetBookId = _secondAssetBookId;
        return secondAssetBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencySelection</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('CurrencySelection'),
        SysOperationLabelAttribute(literalstr("@SYS129076")),
        SysOperationHelpTextAttribute(literalstr("@FixedAssets:FA_Reports_CurrencySelectionText")),
        SysOperationGroupMemberAttribute('FirstBook'),
        SysOperationDisplayOrderAttribute('4')
    ]
    internal LedgerCurrencySelection parmCurrencySelection(LedgerCurrencySelection _ledgerCurrencySelection = ledgerCurrencySelection)
    {
        ledgerCurrencySelection = _ledgerCurrencySelection;
        return ledgerCurrencySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the <C>ledgerCurrencySelection</C> parameter as a string such that it can be mapped in GER.
    /// </summary>
    /// <returns>
    /// The value of the <C>ledgerCurrencySelection</C> parameter as a string.
    /// </returns>
    [Hookable(false)]
    public str parmCurrencyType()
    {
        if (ledgerCurrencySelection == LedgerCurrencySelection::Reporting)
        {
            return "@SYS29141";
        }
        else
        {
            return "@SYS83782";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartdate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('startdate')
    ]
    internal StartDate parmStartdate(StartDate _startDate = startDate)
    {
        startDate = _startDate;
        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        AifQueryTypeAttribute('_query', querystr(AssetBookCompareBaseData))
    ]
    internal str parmQuery(str _query = query)
    {
        query = _query;
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the report parameters.
    /// </summary>
    /// <returns>
    ///    true if no errors; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean validate()
    {
        boolean isValid = true;

        if (!formatMapping)
        {
            isValid = checkFailed(strFmt("@SYS26332", new SysDictType(extendedTypeNum(ERFormatMappingId)).label()));
        }

        if (firstAssetBookId == '' || secondAssetBookId == '')
        {
            isValid = checkFailed("@SYS97593");
        }
        else if (firstAssetBookId == secondAssetBookId)
        {
            isValid = checkFailed("@SYS99489");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>