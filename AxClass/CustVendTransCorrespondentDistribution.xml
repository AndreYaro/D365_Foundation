<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransCorrespondentDistribution</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///   Distributon with offset account
/// </summary>
class CustVendTransCorrespondentDistribution extends CustVendTransDistribution
{
    LedgerDimensionAccount offsetLedgerDimension;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Makes a copy of object that has replacement of amounts.
    /// </summary>
    /// <param name="_transactionAmount">
    /// The transaction amount.
    /// </param>
    /// <param name="_accountingAmount">
    /// The accounting amount.
    /// </param>
    /// <param name="_reportingAmount">
    /// The reporting amount.
    /// </param>
    /// <returns>
    /// A copy of the object.
    /// </returns>
    public CustVendTransDistribution clone(Money _transactionAmount=this.transactionAmount(), Money _accountingAmount=this.accountingAmount(), Money _reportingAmount=this.reportingAmount())
    {
        return new CustVendTransCorrespondentDistribution(this.ledgerDimension(), this.offsetLedgerDimension(), _transactionAmount, _accountingAmount, _reportingAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(LedgerDimensionAccount _ledgerDimension,
                    LedgerDimensionAccount _offsetLedgerDimension,
                    money _transactionAmount = 0.0,
                    money _accountingAmount = 0.0,
                    money _reportingAmount = 0.0
                    )
    {
        super(_ledgerDimension, _transactionAmount, _accountingAmount, _reportingAmount);
        offsetLedgerDimension = _offsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>offsetLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Offsets ledger dimension.
    /// </summary>
    /// <returns>
    /// The ledger dimension account.
    /// </returns>
    public LedgerDimensionAccount offsetLedgerDimension()
    {
        return offsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Visualization for debugging.
    /// </summary>
    /// <returns>
    /// A string representation.
    /// </returns>
    public str toString()
    {
        return strFmt('%1 - %2: (%3, %4, %5)',
            LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(this.ledgerDimension()),
            LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(this.offsetLedgerDimension()),
            this.transactionAmount(),
            this.accountingAmount(),
            this.reportingAmount());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>