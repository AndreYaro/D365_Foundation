<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTableWizardParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjTableWizardParameters</c> class provides parameters for the <c>ProjTableWizard</c> class.
public class ProjTableWizardParameters implements System.IDisposable
{
    private static ProjTableWizardParameters instance;
    private boolean isWizard;
    private ProjId projId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw Error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static ProjTableWizardParameters construct()
    {
        return new ProjTableWizardParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>_isWizard</c> value based on whether <c>ProjTableWizard</c> is used.
    /// </summary>
    /// <param name="_isWizard">
    /// A boolean value which determines whether project copy wizard is used.
    /// </param>
    /// <returns>
    /// An instance of <c>ProjTableWizardParameters</c> which contains parameters.
    /// </returns>
    public static ProjTableWizardParameters setParameters(ProjId _projId, boolean _isWizard)
    {
        ProjTableWizardParameters projParameters = ProjTableWizardParameters::construct();
        projParameters.projId(_projId);
        projParameters.isWizard(_isWizard);

        return projParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWizard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>_isWizard</c> value based on whether <c>ProjTableWizard</c> is used.
    /// </summary>
    /// <param name="_isWizard">
    /// A boolean value which determines whether project copy wizard is used.
    /// </param>
    /// <returns>
    /// True, if project copy wizard is used otherwise false.
    /// </returns>
    public boolean isWizard(boolean _isWizard = isWizard)
    {
        if (_isWizard)
        {
            isWizard = _isWizard;
        }

        return isWizard;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>_projId</c> value which is being used in <c>ProjTableWizard</c>.
    /// </summary>
    /// <param name="_projId">
    /// The project identifier.
    /// </param>
    /// <returns>
    /// The project ID which is used in copy wizard.
    /// </returns>
    public ProjId projId(ProjId _projId = projId)
    {
        if (_projId)
        {
            projId = _projId;
        }

        return projId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disposes the current instance of <c>ProjTableWizardParameters</c>.
    /// </summary>
    [Hookable(false), Wrappable(false)]
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current instance of <c>ProjTableWizardParameters</c>.
    /// </summary>
    /// <returns>The current instance of <c>ProjTableWizardParameters</c>.</returns>
    [Hookable(false), Wrappable(false)]
    public static ProjTableWizardParameters current()
    {
        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>