<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TSTimesheetInstrumentationLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TSTimesheetInstrumentationLogger</c> serves as the base logger class for logging
/// events in Expense management.
/// </summary>
/// <Remarks>
/// To create a logger, use <c>createLogger</c> method and pass the name of the class from
/// where the logger is defined.
/// </Remarks>
internal class TSTimesheetInstrumentationLogger extends SysInstrumentationLoggerBase
{
    internal const str InstrumentationNamespace = 'TimesheetFinOps';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>namespace</Name>
				<Source><![CDATA[
    protected final str namespace()
    {
        return InstrumentationNamespace;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLogger</Name>
				<Source><![CDATA[
    internal static TSTimesheetInstrumentationLogger createLogger(str _name)
    {
        return new TSTimesheetInstrumentationLogger(InstrumentationNamespace + '.' + _name);
    }

]]></Source>
			</Method>
			<Method>
				<Name>properties</Name>
				<Source><![CDATA[
    internal TSTimesheetInstrumentationLoggerProperties properties()
    {
        return new TSTimesheetInstrumentationLoggerProperties();
    }

]]></Source>
			</Method>
			<Method>
				<Name>logInformation</Name>
				<Source><![CDATA[
    internal void logInformation(str _message)
    {
        logger.logInformation(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logWarning</Name>
				<Source><![CDATA[
    internal void logWarning(str _message)
    {
        logger.logWarning(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logError</Name>
				<Source><![CDATA[
    internal void logError(str _message)
    {
        logger.logError(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logCritical</Name>
				<Source><![CDATA[
    internal void logCritical(str _message)
    {
        logger.logCritical(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logSummary</Name>
				<Source><![CDATA[
    internal void logSummary(TSTimesheetInstrumentationActivities _activity, SysInstrumentationActivityContext _context, TSTimesheetInstrumentationLoggerProperties _properties, Map _values)
    {
        MapEnumerator valueEnumerator = _values.getEnumerator();

        while(valueEnumerator.current())
        {
            str key = valueEnumerator.currentKey();
            int value = valueEnumerator.currentValue();
            _activity.addCustomProperty(_context, _properties.documentCount(key, value));
            valueEnumerator.moveNext();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>