<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductTranslationFallbackFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.BusinessPlatform.SharedTypes;

/// <summary>
/// When <c>EcoResProductTranslationFallbackFeature</c> is enabled, it will allow the user to see a product translation based on the user language,
/// and if a translation doesn't exist it will default to the system language translation. A parameter needs to be enabled in the
/// Product information management parameters form.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class EcoResProductTranslationFallbackFeature implements IFeatureMetadata, IFeatureLifecycle, IFeatureMetadataEnablementNotifiable
{
    private static EcoResProductTranslationFallbackFeature instance = new EcoResProductTranslationFallbackFeature();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static EcoResProductTranslationFallbackFeature instance()
    {
        return EcoResProductTranslationFallbackFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@SCM:EcoResProductTranslationFallbackFeature");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::ProductInformationManagement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@SCM:EcoResProductTranslationFallbackFeatureDescription");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://go.microsoft.com/fwlink/p/?linkid=2212007';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Drops the existing <c>EcoResProductTranslations</c> view and re-creates the view with a new structure.
    /// The new view is an union of two views, <c>EcoResProductTranslationsView</c> view and <c>EcoResProductTranslationsFallback</c> view.
    /// </summary>
    [Hookable(false)]
    public void onEnabled()
    {
        var metadataHelper = new Microsoft.Dynamics.AX.Framework.Analytics.Shared.MetadataHelper(Microsoft.Dynamics.AX.Framework.Analytics.Shared.AggregateMetadataHelper::MetadataProvider);
        var translationsView = Microsoft.Dynamics.Ax.Xpp.MetadataSupport::GetView(viewstr(EcoResProductTranslations));
        var extensions = metadataHelper.GetExtensionsForView(translationsView);
        var enumerator = extensions.getEnumerator();
        EcoResProductTranslationsViewBuilder::buildEcoResProductTranslationsView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// When disabling the feature, we need to set the parameter to No so that we have the default behavior. Furthermore, we need to synchronize
    /// the <c>EcoResProductTranslations</c> view.
    /// </summary>
    [Hookable(false)]
    public void onDisabled()
    {        
        try
        {
            appl.dbSynchronize(tableNum(EcoResProductTranslations));
        }
        catch
        {
            throw error(strFmt("@SCM:EcoResProductTranslationFallbackFeatureDbSyncError", viewstr(EcoResProductTranslations)));
        }

        ttsbegin;

        EcoResProductParameters ecoResProductParameters = EcoResProductParameters::find(true);
        ecoResProductParameters.UseFallbackTranslation = NoYes::No;
        ecoResProductParameters.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>