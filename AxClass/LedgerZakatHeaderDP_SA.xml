<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerZakatHeaderDP_SA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerZakatHeaderDP_SA</c> class is the Report Data Provider class that supports the ledger
///    zakat reports header information.
/// </summary>
/// <remarks>
///    This class provides the methods that are used by the Zakat Reports
/// </remarks>
public class LedgerZakatHeaderDP_SA extends SrsReportDataProviderBase
{
    // temporary data store
    LedgerZakatHeaderTmp_SA                 ledgerZakatHeaderTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLedgerZakatHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method is used to query the <c>LedgerZakatHeaderTmp_SA</c> table and then returns the data
    ///    table.
    /// </summary>
    /// <returns>
    ///    The required report data table.
    /// </returns>
    [SRSReportDataSetAttribute('LedgerZakatHeaderTmp')]
    public LedgerZakatHeaderTmp_SA getLedgerZakatHeader()
    {
        select * from ledgerZakatHeaderTmp;
        return ledgerZakatHeaderTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the report business logic.
    /// </summary>
    /// <remarks>
    ///    This method is used to process the report business logic that is used by the
    ///    <c>LedgerZakatReports_SA</c> report.
    /// </remarks>
    public void processReport()
    {
        LedgerReportIndexZakat_SA ledgerReportIndexZakat;
        CompanyInfo               companyInfo               = CompanyInfo::find();
        LogisticsPostalAddress    postalAddress             = companyInfo.postalAddress();

        // write the relevant field data to the temporary data store
        ledgerZakatHeaderTmp.Name                 = companyInfo.name();
        ledgerZakatHeaderTmp.TradeName            = companyInfo.KnownAs;
        ledgerZakatHeaderTmp.BusinessActivity     = companyInfo.BusinessActivity_SA;
        ledgerZakatHeaderTmp.BusinessActivityDesc = companyInfo.BusinessActivityDesc_SA;
        ledgerZakatHeaderTmp.PostBox              = postalAddress.PostBox;
        ledgerZakatHeaderTmp.Phone                = companyInfo.phone();
        ledgerZakatHeaderTmp.TeleFax              = companyInfo.teleFax();
        ledgerZakatHeaderTmp.Email                = companyInfo.email();
        ledgerZakatHeaderTmp.Building             = postalAddress.BuildingCompliment;
        ledgerZakatHeaderTmp.Street               = postalAddress.Street;
        ledgerZakatHeaderTmp.County               = postalAddress.County;
        ledgerZakatHeaderTmp.City                 = postalAddress.City;
        ledgerZakatHeaderTmp.FileNumber           = companyInfo.FileNumber_SA;
        ledgerZakatHeaderTmp.Organization         = companyInfo.CoRegNum;

        select firstonly RecId, dataAreaId
            from ledgerReportIndexZakat;

        ledgerZakatHeaderTmp.CompanyLogo          = CompanyImage::find(ledgerReportIndexZakat.dataAreaId, ledgerReportIndexZakat.TableId, ledgerReportIndexZakat.RecId).Image;
        ledgerZakatHeaderTmp.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>