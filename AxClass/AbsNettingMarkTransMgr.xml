<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AbsNettingMarkTransMgr</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal abstract class AbsNettingMarkTransMgr implements INettingMarkTrans
{
    private const str TransOpenRecId = 'TransOpenRecId';
    private const str RefTaleId = 'RefTableId';
    private const str RefRecId = 'RefRecId';

    protected const str AmountCurFieldName = 'AmountCur';
    protected const int BundleSize = 1500;

    protected NettingMarked markedResult;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>markTransWithPolicy</Name>
				<Source><![CDATA[
    public abstract INettingMarked markTransWithPolicy(Query _debitQuery, TableId _debitTableId, CompanyId _debitCompany, Query _creditQuery, TableId _creditTableId, CompanyId _creditCompany)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected internal boolean init()
    {
        markedResult = new NettingMarked();
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTableId</Name>
				<Source><![CDATA[
    protected internal TableId getTableId(TableId _sourceTableId, Common _record)
    {
        return _sourceTableId == tableNum(VendNettingTransView) ? tableNum(VendTransOpen) : _record.getFieldValue(RefTaleId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRecId</Name>
				<Source><![CDATA[
    protected internal RecId getRecId(TableId _sourceTableId, Common _record)
    {
        return _sourceTableId == tableNum(VendNettingTransView) ? _record.getFieldValue(TransOpenRecId): _record.getFieldValue(RefRecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>