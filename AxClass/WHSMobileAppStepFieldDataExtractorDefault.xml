<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppStepFieldDataExtractorDefault</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppStepFieldDataExtractorDefault</c> class provides default way to extract field value based on input type.
/// </summary>
internal final class WHSMobileAppStepFieldDataExtractorDefault extends WHSMobileAppStepFieldDataExtractor
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>extract</Name>
				<Source><![CDATA[
    public Map extract(Set _fields, container _formContainer)
    {
        Map fieldsData = new Map(Types::Integer, Types::String);

        var length = conLen(_formContainer);

        for (int i = #FieldControlStartLoc; i <= length; ++i)
        {
            container controlCon = conPeek(_formContainer, i);

            var fieldId = copyFromFlowFieldProvider.getCopyFromFieldIdFromControl(controlCon);
            if (_fields.in(fieldId))
            {
                str controlType = conPeek(controlCon, #controlType);
                if (controlType == #RFText)
                {
                    fieldsData.insert(fieldId, conPeek(controlCon, #data));
                }
                else if (controlType == #RFLabel)
                {
                    fieldsData.insert(fieldId, this.extractLabelData(controlCon));
                }
            }
        }

        if (_fields.in(extendedTypeNum(ProcessGuideRefreshPageType)))
        {
            fieldsData.insert(extendedTypeNum(ProcessGuideRefreshPageType), #DataButtonClicked);
        }

        return fieldsData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>extractLabelData</Name>
				<Source><![CDATA[
    private str extractLabelData(container _labelCon)
    {
        str labelValue = conPeek(_labelCon, #label);

        if (conPeek(_labelCon, #name) != #RFError)
        {
            int colonPos = strFind(labelValue, ':', 1, strLen(labelValue));

            if (colonPos > 0)
            {
                return strLTrim(strDel(labelValue, 1, colonPos));
            }
        }

        return labelValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>