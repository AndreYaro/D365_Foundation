<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWarehouseCycleCountCreatePlanInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WhsWarehouseCycleCountCreatePlanInstrumentationActivities
{
    private WHSInstrumentationLogger logger;
    private const str ActivityNamePrefix = 'WarehouseProcessCycleCountingPlan.';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static WhsWarehouseCycleCountCreatePlanInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WhsWarehouseCycleCountCreatePlanInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processCycleCountingPlan</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext processCycleCountingPlan()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'ProcessCycleCountingPlan'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateItemAndDimensionsMap</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext populateItemAndDimensionsMap()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'PopulateItemAndDimensionsMap'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPartialLocationCycleCountingWorkLines</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext createPartialLocationCycleCountingWorkLines()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'CreatePartialLocationCycleCountingWorkLines'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFullLocationCycleCountingWorkLine</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext createFullLocationCycleCountingWorkLine()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'CreateFullLocationCycleCountingWorkLine'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCycleCountingWorkOrders</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext createCycleCountingWorkOrders()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'CreateCycleCountingWorkOrders'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfLocations</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void numberOfLocations(int _locationCounter)
    {
        logger.logInformation(strFmt('Number of Locations:%1', _locationCounter));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfCycleCountWorkTablesRecords</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void numberOfCycleCountWorkTablesRecords(int _createdCycleCountWorkTablesCounter)
    {
        logger.logInformation(strFmt('Number of Work Records Created:%1', _createdCycleCountWorkTablesCounter));
    }

]]></Source>
			</Method>
			<Method>
				<Name>cycleCountPlanMaxCount</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void cycleCountPlanMaxCount(int _maxCounts)
    {
        logger.logInformation(strFmt('Cycle Count Plan Max Count :%1', _maxCounts));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>