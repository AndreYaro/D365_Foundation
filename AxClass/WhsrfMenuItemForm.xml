<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsrfMenuItemForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WhsrfMenuItemForm</c> class contains the business logic of the <c>WhsrfMenuItem</c> form.
/// </summary>
class WhsrfMenuItemForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayOverrideInventBatchId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether override batch number must be shown on the form for a selected RF menu item.
    /// </summary>
    /// <param name="_workCreationProcess">
    ///     The work creation process for the selected menu item.
    /// </param>
    /// <returns>
    ///     Returns true if override batch number must be visible; otherwise, false.
    /// </returns>
    public boolean displayOverrideInventBatchId(WHSWorkCreationProcess _workCreationProcess)
    {
        switch (_workCreationProcess)
        {
            case WHSWorkCreationProcess::ReportAsFinished:
            case WHSWorkCreationProcess::ReportAsFinishedAndLocate:
            case WHSWorkCreationProcess::KanbanPut:
            case WHSWorkCreationProcess::KanbanPutAndLocate:
                return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayShowBatchDisposition</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the 'Show batch disposition' field must be shown on the form for a selected RF menu item.
    /// </summary>
    /// <param name="_workCreationProcess">
    ///     The work creation process for the selected menu item.
    /// </param>
    /// <returns>
    ///     Returns true if the show batch disposition must be visible; otherwise, false.
    /// </returns>
    public boolean displayShowBatchDisposition(WHSWorkCreationProcess _workCreationProcess)
    {
        if (#PdsShelfEnabled)
        {
            switch (_workCreationProcess)
            {
                case WHSWorkCreationProcess::PurchaseOrderItemReceiving:
                case WHSWorkCreationProcess::PurchaseOrderItemReceivingAndLocate:
                case WHSWorkCreationProcess::LoadItemReceiving:
                case WHSWorkCreationProcess::LoadItemReceivingAndLocate:
                case WHSWorkCreationProcess::PurchaseOrderLineReceiving:
                case WHSWorkCreationProcess::PurchaseOrderLineReceivingAndLocate:
                case WHSWorkCreationProcess::ReportAsFinished:
                case WHSWorkCreationProcess::ReportAsFinishedAndLocate:
                case WHSWorkCreationProcess::MixedLPReceiving:
                case WHSWorkCreationProcess::MixedLPReceivingAndLocate:
                    return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>whsMenuItemDirectedBy_modified</Name>
				<Source><![CDATA[
	/// <summary>
	/// Changes PickPack value of menu item when directed by field of a menu item is modified.
	/// </summary>
	/// <param name="_whsrfMenuItemTable">
	/// Menu item that is modified.
	/// </param>
	/// <returns>
	/// PickPack value of menu item.
	/// </returns>
    WHSPickPack whsMenuItemDirectedBy_modified(WHSRFMenuItemTable  _whsrfMenuItemTable)
    {
        if (_whsrfMenuItemTable.MenuItemDirectedBy != WHSMenuItemDirectedBy::SystemDirected ||
            _whsrfMenuItemTable.isUserDirectedMenuItem())
        {
            _whsrfMenuItemTable.PickPack = NoYes::No;
        }

        return _whsrfMenuItemTable.PickPack;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processGuideUseFramework_modified</Name>
				<Source><![CDATA[
    internal void processGuideUseFramework_modified(WHSRFMenuItemTable _whsrfMenuItemTable)
    {
        if (!_whsrfMenuItemTable.ProcessGuideUseFramework && _whsrfMenuItemTable.WorkCreationProcess == WHSWorkCreationProcess::AdjustmentOut)
        {
            _whsrfMenuItemTable.DefaultData = NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableEditReasonCodeControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables edit reason code control if the display reason code is set to line.
    /// </summary>
    /// <param name = "_editReasonCodeControl">
    /// Edit reason code control.
    /// </param>
    /// <param name = "_rfMenuItemTable">
    /// The <c>WHSRFMenuItemTable</c> table record.
    /// </param>
    public void enableEditReasonCodeControl(FormCheckBoxControl _editReasonCodeControl, WHSRFMenuItemTable _rfMenuItemTable)
    {
        _editReasonCodeControl.enabled(_rfMenuItemTable.DisplayCountingReasonCode == WHSDisplayCountingReasonCode::Line);
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookUpForCountingReasonCodesBasedOnCountingReasonCodeGroup</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void performLookUpForCountingReasonCodesBasedOnCountingReasonCodeGroup(FormControl _defaultCountingReasonCodeControl, InventCountingReasonCodeGroupName _countingReasonCodeGroup) 
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(InventCountingReasonCode), _defaultCountingReasonCodeControl);
        sysTableLookup.addLookupField(fieldNum(InventCountingReasonCode, ReasonCode));
        sysTableLookup.addLookupField(fieldNum(InventCountingReasonCode, Description));

        Query query = new Query();

        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(InventCountingReasonCode));
        queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(InventCountingReasonCodeGroupRelation));
        queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
        queryBuildDataSource.addLink(fieldNum(InventCountingReasonCode, ReasonCode), fieldNum(InventCountingReasonCodeGroupRelation, ReasonCode));
        queryBuildDataSource.addRange(fieldNum(InventCountingReasonCodeGroupRelation, ReasonCodeGroupName)).value(queryValue(_countingReasonCodeGroup));

        sysTableLookup.parmQuery(query);
    
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>