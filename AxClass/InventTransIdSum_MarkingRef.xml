<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransIdSum_MarkingRef</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransIdSum_MarkingRef extends InventTransIdSum
{
    InventTransOriginId markingRefInventTransOrigin;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcSumImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and stores the results that are shown in internal variables.
    /// </summary>
    [Replaceable]
    protected void calcSumImplementation()
    {
        InventTrans     inventTrans;
        InventDim       inventDimTest;

        if (filterDimensions)
        {
            while select sum(PdsCWQty), sum(Qty)
                from inventTrans
                group by StatusIssue, StatusReceipt
                where   inventTrans.InventTransOrigin             == transOriginId
                    && (inventTrans.TransChildType                == childType                        || !perChildType)
                    && (inventTrans.TransChildRefId               == childRefId                       || !perChildType)
                    && (inventTrans.MarkingRefInventTransOrigin   == markingRefInventTransOrigin      || !markingRefInventTransOrigin)
                #InventDimExistsJoin(inventTrans.inventDimId, inventDimTest, inventDimCriteria, inventDimParmCriteria)
            {
                this.addInventTransToTotals(inventTrans);
            }
        }
        else
        {
            while select sum(PdsCWQty), sum(Qty)
                from inventTrans
                group by StatusIssue, StatusReceipt
                where   inventTrans.InventTransOrigin             == transOriginId
                    && (inventTrans.TransChildType                == childType                        || !perChildType)
                    && (inventTrans.TransChildRefId               == childRefId                       || !perChildType)
                    && (inventTrans.MarkingRefInventTransOrigin   == markingRefInventTransOrigin      || !markingRefInventTransOrigin)
            {
                this.addInventTransToTotals(inventTrans);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkingRefInventTransOrigin</Name>
				<Source><![CDATA[
        public InventTransOriginId parmMarkingRefInventTransOrigin(InventTransOriginId _markingRefInventTransOrigin = markingRefInventTransOrigin)
    {
        markingRefInventTransOrigin = _markingRefInventTransOrigin;
        return markingRefInventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMarkingRef</Name>
				<Source><![CDATA[
        public static InventTransIdSum_MarkingRef newMarkingRef(
        InventTransOriginId   _transOriginId,
        InventTransOriginId   _markingRefInventTransOrigin,
        boolean               _perChildType   = false,
        InventTransChildType  _childType      = InventTransChildType::None,
        InventTransChildRefId _childRefId     = '')
    {
        InventTransIdSum_MarkingRef     inventTransIdSum_MarkingRef = InventTransIdSum_MarkingRef::newTransOriginId(_transOriginId);

        inventTransIdSum_MarkingRef.parmPerChildType(_perChildType);
        inventTransIdSum_MarkingRef.parmChildType(_childType);
        inventTransIdSum_MarkingRef.parmChildRefId(_childRefId);
        inventTransIdSum_MarkingRef.parmMarkingRefInventTransOrigin(_markingRefInventTransOrigin);

        return inventTransIdSum_MarkingRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newTransOriginId</Name>
				<Source><![CDATA[
        public static InventTransIdSum_MarkingRef newTransOriginId(InventTransOriginId _transOriginId)
    {
        return new InventTransIdSum_MarkingRef(_transOriginId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>