<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscAdmTransPartyCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Base class that holds the common data sources and filters for the price and discount search for customer and vendor.
/// </summary>
abstract class PriceDiscAdmTransPartyCopy extends PriceDiscAdmTransCopy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Joins <c>CustTable</c> to <c>PriceDiscTable</c>.
    /// </summary>
    /// <param name = "_qbdsPriceDiscTable">The <c>PriceDiscTable</c> datasource to modify.</param>
    protected void addDataSources()
    {
        this.applyPriceTypeCriteria();
        this.addPriceDiscAdmTableDataSource();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPriceDiscAdmTableDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Joins <c>PriceDiscTableRefTmp</c> to <c>PriceDiscTable</c>.
    /// </summary>
    /// <param name = "_qbdsPriceDiscTable">The <c>PriceDiscTable</c> datasource to join to.</param>
    private void addPriceDiscAdmTableDataSource()
    {
        QueryBuildDataSource qbdsPriceDiscTableRefTmp = qbdsPriceDiscTable.addDataSource(tableNum(PriceDiscAdmTable));
        qbdsPriceDiscTableRefTmp.relations(false);
        qbdsPriceDiscTableRefTmp.fetchMode(QueryFetchMode::One2One);
        qbdsPriceDiscTableRefTmp.addRange(fieldNum(PriceDiscAdmTable, JournalNum)).value(queryValue(priceDiscAdmSearch.parmJournalNum()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyRUFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies item Russian specific filtering to <c>PriceDiscTable</c>.
    /// </summary>
    /// <param name = "_qbdsPriceDiscTable">The datasource to modify.</param>
    private void applyRUFilter()
    {
        if (agreementHeaderExtRecId)
        {
            qbdsPriceDiscTable.addRange(fieldNum(PriceDiscTable, AgreementHeaderExt_RU)).value(queryValue(agreementHeaderExtRecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyFilters</Name>
				<Source><![CDATA[
    protected void applyFilters()
    {
        super();
        this.applyRUFilter();

    }

]]></Source>
			</Method>
			<Method>
				<Name>populateData</Name>
				<Source><![CDATA[
    protected void populateData()
    {
        PriceDiscAdmSearchPriceDiscTableRefTmpPopulator populator = PriceDiscAdmSearchPriceDiscTableRefTmpPopulator::newPopulator(PriceDiscAdmSearch.parmPriceDiscTableRefTmp(), query);
        populator.execute();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPriceDiscAdmTransPartyCopy</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static PriceDiscAdmTransPartyCopy newPriceDiscAdmTransPartyCopy(PriceDiscPartyCodeType _partyCodeType, ModuleInventCustVend _partyRoleModule, PriceDiscAdmSearch _priceDiscAdmSearch)
    {
        PriceDiscPartyCodeTypeFactoryAttribute attr = new PriceDiscPartyCodeTypeFactoryAttribute(_partyCodeType);
        PriceDiscAdmTransPartyCopy instance = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(PriceDiscAdmTransPartyCopy), attr);

        if (!instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance.partyRoleModule = _partyRoleModule;
        instance.priceDiscAdmSearch = _priceDiscAdmSearch;

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>