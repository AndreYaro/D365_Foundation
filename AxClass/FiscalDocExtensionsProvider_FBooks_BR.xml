<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalDocExtensionsProvider_FBooks_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The Fiscal books fiscal document extension provider.
/// </summary>
[FiscalDocExtensionsProviderAttribute_BR]
public class FiscalDocExtensionsProvider_FBooks_BR extends FiscalDocumentExtensionsProvider_BR
{
    const str DataSourceNameFiscalDocument = formDataSourceStr(FiscalDocument_BR, FiscalDocument_BR);
    const str DataSourceNameFiscalDocumentLine = formDataSourceStr(FiscalDocument_BR, FiscalDocumentLine_BR);
    const str DataSourceNameFiscalDocumentTaxTrans = formDataSourceStr(FiscalDocument_BR, FiscalDocumentTaxTrans);
    const str DataSourceNameBookingPeriodFiscalDocument = formDataSourceStr(FiscalDocument_BR, FBBookingPeriodFiscalDocument_BR);

    FormDataSource  dsfiscalDocument;
    FormDataSource  dsfiscalDocumentLine;
    FormDataSource  dsfiscalDocumentTaxTrans;
    FormDataSource  dsBookingPeriodFiscalDocument;

    FormCommandButtonControl    fiscalDocumentAdjustmentIcms;
    FormCommandButtonControl    fiscalDocumentAdjustmentIcmsDiff;
    FormCommandButtonControl    fiscalDocumentAdjustmentIcmsSt;
    FormCommandButtonControl    fiscalDocumentAdjustmentIpi;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>adjustmentMenuButton_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// The overridden clicking event for the <c>AdjustmentMenuButton</c>,
    /// which calls the method responsable for enabling the right <c>FormControls</c>.
    /// </summary>
    /// <param name="_formControl">
    /// The Adjustment <c>FormControl</c> instance.
    /// </param>
    private void adjustmentMenuButton_clicked(FormCommandButtonControl _formControl)
    {
        this.enableAdjustmentButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canFiscalDocumentBeAdjusted</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Verifies whether the fiscal document can be adjusted.
    /// </summary>
    /// <param name="_fiscalDocument">
    ///     A <c>FiscalDocument_BR</c> table record.
    /// </param>
    /// <returns>
    ///     A <c>container</c> with 4 elements:
    ///         1st - canAdjustICMS; boolean; if ICMS can be adjusted.
    ///         2nd - canAdjustICMSST; boolean; if ICMS-ST can be adjusted.
    ///         3rd - canAdjustICMSDIF; boolean; if ICMS-DIF can be adjusted.
    ///         4th - canAdjustIPI; boolean; if the IPI can be adjusted.
    /// </returns>
    protected container canFiscalDocumentBeAdjusted(FiscalDocument_BR _fiscalDocument)
    {

        boolean canAdjustICMS;
        boolean canAdjustICMSST;
        boolean canAdjustICMSDIF;
        boolean canAdjustIPI;

        FBBookingPeriodFiscalDocument_BR fbBookingPeriodFiscalDocument = FBBookingPeriodFiscalDocument_BR::findByFiscalDocument(_fiscalDocument.RecId);

        if (fbBookingPeriodFiscalDocument.RecId
            && (fbBookingPeriodFiscalDocument.FiscalSituation == FBFiscalDocumentSituation_BR::Regular
                || fbBookingPeriodFiscalDocument.FiscalSituation == FBFiscalDocumentSituation_BR::SpecialLegislation))
        {
            if (FiscalDocModel_BR::find(_fiscalDocument.Model).CanBeAdjusted)
            {
                LogisticsPostalAddress thirdPartyPostalAddress = LogisticsPostalAddress::findRecId(_fiscalDocument.ThirdPartyPostalAddress);

                //If the respective tax assessment exists
                canAdjustICMS   = FBTaxAssessment_BR::findByDate(_fiscalDocument.AccountingDate, TaxType_BR::ICMS, fbBookingPeriodFiscalDocument.FBBookingPeriod_BR).RecId;
                canAdjustICMSST = FBTaxAssessment_BR::findByDate(_fiscalDocument.AccountingDate, TaxType_BR::ICMSST, fbBookingPeriodFiscalDocument.FBBookingPeriod_BR, thirdPartyPostalAddress.State).RecId;
                canAdjustICMSDIF = FBTaxAssessment_BR::findByDate(_fiscalDocument.AccountingDate, TaxType_BR::ICMSDiff, fbBookingPeriodFiscalDocument.FBBookingPeriod_BR).RecId;
                canAdjustIPI = FBTaxAssessment_BR::findByDate(_fiscalDocument.AccountingDate, TaxType_BR::IPI, fbBookingPeriodFiscalDocument.FBBookingPeriod_BR).RecId;
            }
        }

        return [canAdjustICMS, canAdjustICMSST, canAdjustICMSDIF, canAdjustIPI];
    }

]]></Source>
			</Method>
			<Method>
				<Name>configureFormDataSources</Name>
				<Source><![CDATA[
    public void configureFormDataSources(Form _form)
    {
        FormBuildDataSource fbdsBookingPeriod;

        fbdsBookingPeriod = _form.addDataSource(tableStr(FBBookingPeriodFiscalDocument_BR));
        fbdsBookingPeriod.table(tableNum(FBBookingPeriodFiscalDocument_BR));
        fbdsBookingPeriod.joinSource(DataSourceNameFiscalDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableAdjustmentButtons</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Enables or disables the ICMS, ICMS-Diff and ICMS-ST adjustments.
    /// </summary>
    private void enableAdjustmentButtons()
    {
        FiscalDocument_BR fiscalDocument = this.parmFiscalDocumentDataSource().cursor();
        FiscalDocumentTaxTransOutgoingICMSDif_BR taxTransOutgoingICMSDif;

        select firstOnly RecId from taxTransOutgoingICMSDif
            where taxTransOutgoingICMSDif.FiscalDocument == fiscalDocument.RecId;

        boolean canAdjustICMS;
        boolean canAdjustICMSST;
        boolean canAdjustICMSDIF;
        boolean canAdjustIPI;
        boolean enableICMS;
        boolean enableICMSDiff;
        boolean enableICMSST;
        boolean enableIPI;

        [canAdjustICMS, canAdjustICMSST, canAdjustICMSDIF, canAdjustIPI] = this.canFiscalDocumentBeAdjusted(fiscalDocument);

        if (canAdjustICMS || canAdjustICMSST || canAdjustICMSDIF || canAdjustIPI)
        {
            for (FiscalDocumentTaxTrans_BR fiscalDocumentTaxTrans = this.parmFiscalDocumentTaxTransDataSource().getFirst();
                fiscalDocumentTaxTrans;
                fiscalDocumentTaxTrans = this.parmFiscalDocumentTaxTransDataSource().getNext())
            {
                switch (fiscalDocumentTaxTrans.Type)
                {
                    case TaxType_BR::ICMS:
                        enableICMS = true;
                        break;

                    case TaxType_BR::ICMSDiff:
                        enableICMSDiff = true;
                        break;

                    case TaxType_BR::ICMSST:
                        enableICMSST = true;
                        break;

                    case TaxType_BR::IPI :
                        enableIPI = true;
                        break;

                    default :
                        break;
                }

                if (enableICMS && enableICMSDiff && enableICMSST && enableIPI)
                {
                    break;
                }
            }
        }

        fiscalDocumentAdjustmentIcms.enabled(canAdjustICMS && enableICMS);
        fiscalDocumentAdjustmentIcmsSt.enabled(canAdjustICMSST && enableICMSST);

        if (taxTransOutgoingICMSDif)
        {
            // ICMS-DIF Tax assessment outgoing fiscal documents scenario.
            fiscalDocumentAdjustmentIcmsDiff.enabled(canAdjustICMSDIF && enableICMSDiff);
        }
        else
        {
            // ICMS Tax Assessment incoming fiscal documents scenario.
            fiscalDocumentAdjustmentIcmsDiff.enabled(canAdjustICMS && enableICMSDiff);
        }

        fiscalDocumentAdjustmentIpi.enabled(canAdjustIPI && enableIPI);
    }

]]></Source>
			</Method>
			<Method>
				<Name>extendHeaderDetailTab</Name>
				<Source><![CDATA[
    public void extendHeaderDetailTab(FormTabControl _headerTabDetailsControl)
    {
        str                     prefix;
        FormGroupControl        groupControl;
        FormTabPageControl      tabPage;
        FormComboBoxControl     fbFiscalDocumentSituation;
        FormComboBoxControl     paymentTerms;
        FormStringControl       fbBookingPeriod;

        prefix = classId2Name(classIdGet(this));

        tabPage = _headerTabDetailsControl.addControl(FormControlType::TabPage, prefix+'tabpage');
        tabPage.caption(this.getName());

        groupControl = tabPage.addControl(FormControlType::Group, prefix+'titlegroup');
        groupControl.style(GroupStyle::TOCTitleContainer);

        fbFiscalDocumentSituation = groupControl.addControl(FormControlType::ComboBox, 'fbFiscalDocumentSituation');
        paymentTerms              = groupControl.addControl(FormControlType::ComboBox, 'paymentTerms');
        fbBookingPeriod           = groupControl.addControl(FormControlType::String,   'fbBookingPeriod');

        fbFiscalDocumentSituation.dataSource(this.parmBookingPeriodFiscalDocument().id());
        fbFiscalDocumentSituation.dataMethod(tableMethodStr(FBBookingPeriodFiscalDocument_BR, showFiscalSituation));
        fbFiscalDocumentSituation.widthMode(FormWidth::ColumnWidth);

        paymentTerms.dataSource(this.parmFiscalDocumentDataSource().id());
        paymentTerms.dataMethod(tableMethodStr(FiscalDocument_BR, paymentTerms));
        paymentTerms.widthMode(FormWidth::ColumnWidth);

        fbBookingPeriod.dataSource(this.parmBookingPeriodFiscalDocument().id());
        fbBookingPeriod.dataMethod(tableMethodStr(FBBookingPeriodFiscalDocument_BR, showBookingPeriod));
        fbBookingPeriod.widthMode(FormWidth::ColumnWidth);
    }

]]></Source>
			</Method>
			<Method>
				<Name>extendLineActionPane</Name>
				<Source><![CDATA[
    public void extendLineActionPane(FormActionPaneTabControl _actionPaneTabControl)
    {
        FormButtonGroupControl      fbButtonGroupControl  = _actionPaneTabControl.addControl(FormControlType::ButtonGroup, 'FBButtonGroup');
        FormMenuButtonControl       adjustmentMenuButton  = fbButtonGroupControl.addControl(FormControlType::MenuButton, 'adjustmentMenuButton');

        fiscalDocumentAdjustmentIcms     = adjustmentMenuButton.addControl(FormControlType::CommandButton, 'fbFiscalDocumentAdjustmentICMS');
        fiscalDocumentAdjustmentIcmsDiff = adjustmentMenuButton.addControl(FormControlType::CommandButton, 'fbFiscalDocumentAdjustmentICMSDiff');
        fiscalDocumentAdjustmentIcmsSt   = adjustmentMenuButton.addControl(FormControlType::CommandButton, 'fbFiscalDocumentAdjustmentICMSSt');
        fiscalDocumentAdjustmentIpi      = adjustmentMenuButton.addControl(FormControlType::CommandButton, identifierStr(fbFiscalDocumentAdjustmentIpi));

        adjustmentMenuButton.text("@SYS55579");
        adjustmentMenuButton.helpText("@SYS4001558");
        adjustmentMenuButton.needsRecord(true);
        adjustmentMenuButton.registerOverrideMethod(methodStr(FormMenuButtonControl, clicked),
                                                    methodStr(FiscalDocExtensionsProvider_FBooks_BR, adjustmentMenuButton_clicked),
                                                    this);

        fiscalDocumentAdjustmentIcms.text("@GLS893");
        fiscalDocumentAdjustmentIcms.registerOverrideMethod(methodStr(FormCommandButtonControl, clicked),
                                                            methodStr(FiscalDocExtensionsProvider_FBooks_BR, fiscalDocumentAdjustmentIcms_clicked),
                                                            this);

        fiscalDocumentAdjustmentIcmsDiff.text("@SYS4000762");
        fiscalDocumentAdjustmentIcmsDiff.registerOverrideMethod(methodStr(FormCommandButtonControl, clicked),
                                                                methodStr(FiscalDocExtensionsProvider_FBooks_BR, fiscalDocumentAdjustmentIcmsDiff_clicked),
                                                                this);

        fiscalDocumentAdjustmentIcmsSt.text("@SYS4082237");
        fiscalDocumentAdjustmentIcmsSt.registerOverrideMethod(methodStr(FormCommandButtonControl, clicked),
                                                              methodStr(FiscalDocExtensionsProvider_FBooks_BR, fiscalDocumentAdjustmentIcmsSt_clicked),
                                                              this);

        fiscalDocumentAdjustmentIpi.text("@GLS894");
        fiscalDocumentAdjustmentIpi.registerOverrideMethod(
            methodStr(FormCommandButtonControl, clicked),
            methodStr(FiscalDocExtensionsProvider_FBooks_BR, fiscalDocumentAdjustmentIpi_clicked),
            this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentAdjustmentIcms_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// The overridden clicking event for the ICMS fiscal document adjustment <c>MenuButton</c>,
    /// which creates an <c>Args</c> class passing as record the content of the
    /// <c>parmFiscalDocumentLineDataSource</c> method and runs the
    /// <c>FBFiscalDocumentAdjustmentICMS_BR</c> display string menu item.
    /// </summary>
    /// <param name="_formControl">
    /// The icms fiscal document adjustment <c>FormControl</c> instance.
    /// </param>
    private void fiscalDocumentAdjustmentIcms_clicked(FormCommandButtonControl _formControl)
    {
        Args args = new Args();

        args.record(this.parmFiscalDocumentLineDataSource().cursor());

        new MenuFunction(menuitemDisplayStr(FBFiscalDocumentAdjustmentICMS_BR), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentAdjustmentIcmsDiff_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// The overridden clicking event for the ICMS diff fiscal document adjustment <c>MenuButton</c>,
    /// which creates an <c>Args</c> class passing as record the content of the
    /// <c>parmFiscalDocumentLineDataSource</c> method and runs the
    /// <c>FBFiscalDocumentAdjustmentICMSDiff_BR</c> display string menu item.
    /// </summary>
    /// <param name="_formControl">
    /// The icms fiscal document adjustment <c>FormControl</c> instance.
    /// </param>
    private void fiscalDocumentAdjustmentIcmsDiff_clicked(FormCommandButtonControl _formControl)
    {
        Args args = new Args();

        args.record(this.parmFiscalDocumentLineDataSource().cursor());

        new MenuFunction(menuitemDisplayStr(FBFiscalDocumentAdjustmentICMSDiff_BR), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentAdjustmentIcmsSt_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// The overridden clicking event for the ICMS st fiscal document adjustment <c>MenuButton</c>,
    /// which creates an <c>Args</c> class passing as record the content of the
    /// <c>parmFiscalDocumentLineDataSource</c> method and runs the
    /// <c>FBFiscalDocumentAdjustmentICMSSt_BR</c> display string menu item.
    /// </summary>
    /// <param name="_formControl">
    /// The icms fiscal document adjustment <c>FormControl</c> instance.
    /// </param>
    private void fiscalDocumentAdjustmentIcmsSt_clicked(FormCommandButtonControl _formControl)
    {
        Args args = new Args();

        args.record(this.parmFiscalDocumentLineDataSource().cursor());

        new MenuFunction(menuitemDisplayStr(FBFiscalDocumentAdjustmentICMSSt_BR), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentAdjustmentIpi_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// The overridden clicking event for the IPI fiscal document adjustment <c>MenuButton</c>, which creates an <c>Args</c> class passing as record the content of the <c>parmFiscalDocumentLineDataSource</c> method and runs the <c>FBFiscalDocumentAdjustmentIPI_BR</c> display string menu item.
    /// </summary>
    /// <param name="_formControl">
    /// The IPI fiscal document adjustment <c>FormCommandButtonControl</c> instance.
    /// </param>
    private void fiscalDocumentAdjustmentIpi_clicked(FormCommandButtonControl _formControl)
    {
        Args args = new Args();

        args.record(this.parmFiscalDocumentLineDataSource().cursor());

        new MenuFunction(menuitemDisplayStr(FBFiscalDocumentAdjustmentIPI_BR), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getName</Name>
				<Source><![CDATA[
    public str getName()
    {
        return "@SYS4082186";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    public boolean isEnabled()
    {
        return BrazilParameters::isFiscalBooksEnabled_BR()
            && hasTableAccess(tableNum(FBBookingPeriodFiscalDocument_BR));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBookingPeriodFiscalDocument</Name>
				<Source><![CDATA[
    public FormDataSource parmBookingPeriodFiscalDocument(FormDataSource _dsBookingPeriodFiscalDocument = dsBookingPeriodFiscalDocument)
    {
        dsBookingPeriodFiscalDocument = _dsBookingPeriodFiscalDocument;
        return dsBookingPeriodFiscalDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalDocumentDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmFiscalDocumentDataSource(FormDataSource _dsFiscalDocument = dsFiscalDocument)
    {
        dsFiscalDocument = _dsFiscalDocument;
        return dsFiscalDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalDocumentLineDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmFiscalDocumentLineDataSource(FormDataSource _dsFiscalDocumentLine = dsFiscalDocumentLine)
    {
        dsFiscalDocumentLine = _dsFiscalDocumentLine;
        return dsFiscalDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalDocumentTaxTransDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmFiscalDocumentTaxTransDataSource(FormDataSource _dsFiscalDocumentTaxTrans = dsFiscalDocumentTaxTrans)
    {
        dsFiscalDocumentTaxTrans = _dsFiscalDocumentTaxTrans;
        return dsFiscalDocumentTaxTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormRun</Name>
				<Source><![CDATA[
    public FormRun parmFormRun(FormRun _formRun = formRun)
    {
        FormRun ret;

        ret = super(_formRun);

        this.parmFiscalDocumentDataSource(_formRun.dataSource(DataSourceNameFiscalDocument));
        this.parmFiscalDocumentLineDataSource(_formRun.dataSource(DataSourceNameFiscalDocumentLine));
        this.parmFiscalDocumentTaxTransDataSource(_formRun.dataSource(DataSourceNameFiscalDocumentTaxTrans));
        this.parmBookingPeriodFiscalDocument(_formRun.dataSource(DataSourceNameBookingPeriodFiscalDocument));

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>