<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchOrderSourceDocLineStateCompleted</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
SourceDocumentClassExtensionAttribute(tableStr(PurchLine)),
SourceDocumentClassExtensionAttribute(tableStr(PurchTable))
]
/// <summary>
/// Handles purchase order completed source document line state.
/// </summary>
class PurchOrderSourceDocLineStateCompleted extends SourceDocumentLineStateCompleted
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doTransition</Name>
				<Source><![CDATA[
    protected boolean doTransition()
    {
        super();

        if (this.parmTargetSourceDocLineAccountingStatus() == SourceDocumentLineAccountingStatus::Finalized)
        {
            this.doTransitionFinalize();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doTransitionFinalize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the state transition to finalized state.
    /// </summary>
    protected void doTransitionFinalize()
    {
        PurchTable              purchTable;
        PurchLine               purchLine;

        switch (sourceDocumentLine.SourceRelationType)
        {
            case tableNum(PurchLine):
                purchLine = PurchLine::findBySourceDocumentLine(sourceDocumentLine.RecId, true);
                if (purchLine.canFinalize(false))
                {
                    purchLine.IsFinalized = true;
                    purchLine.doUpdate();
                }
                else
                {
                    PurchInstrumentationLogger instrumentationLogger = PurchInstrumentationLogger::createLogger(classId2Name(classIdGet(this)));

                    using (SysInstrumentationActivityContext activityContext = instrumentationLogger.purchFinalize().doTransitionFinalize(purchLine, sourceDocumentLine))
                    {
                        if (purchLine.IsFinalized)
                        {
                            throw error(strFmt("@ProcurementAndSourcing:PurchFinalizeLineFinalized", purchLine.LineNumber, purchLine.PurchId));
                        }
                        else
                        {
                            throw error(strFmt("@SYS335902", purchLine.LineNumber, purchLine.PurchId));
                        }
                    }
                }
                break;
            case tableNum(PurchTable):
                purchTable = PurchTable::findSourceDocumentHeader(sourceDocumentLine.SourceDocumentHeader, true);

                //Release all marked invoices before finalize purchase order.       
                SpecTransManager specTransManager = SpecTransManager::newFromSpec(purchTable, false);

                if (specTransManager.getSpecTransCount() > 0)
                {
                    specTransManager.deleteAll();
                }

                VersioningPurchaseOrder::newPurchaseOrder(purchTable).close();
                break;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>