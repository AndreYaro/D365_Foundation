<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceAttributeChannelProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
[PriceAttributeProvider]
internal final class PriceAttributeChannelProvider implements IPriceAttributeProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupAllowedValues</Name>
				<Source><![CDATA[
    public void lookupAllowedValues(PriceAttributeDefinition attribute, FormStringControl formControl)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReference</Name>
				<Source><![CDATA[
    public Common lookupReference(PriceAttributeDefinition attribute, FormReferenceControl formControl)
    {
        return formControl.lookupReference();
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRef</Name>
				<Source><![CDATA[
    public void jumpRef(PriceAttributeDefinition attribute, FormControl formControl)
    {
        RetailChannelTable channel;
        FormReferenceControl formReferenceControl = formControl;

        select firstonly ChannelType, RecId
                from channel
                where channel.RecId == formReferenceControl.value();

        if (!channel)
        {
            return ;
        }
        
        Args args = new Args();
        MenuFunction menuFunction;
        switch (channel.ChannelType)
        {
            case RetailChannelType::RetailStore:
                menuFunction = new MenuFunction(menuitemDisplayStr(RetailStoreTable), MenuItemType::Display);
                args.record(RetailStoreTable::findRecId(channel.RecId));
                break;

            case RetailChannelType::SharePointOnlineStore:
                menuFunction = new MenuFunction(menuitemDisplayStr(RetailOnlineChannels), MenuItemType::Display);
                args.record(RetailOnlineChannelTable::find(channel.RecId));
                break;

            case RetailChannelType::MCRCallCenter:
                menuFunction = new MenuFunction(menuitemDisplayStr(RetailCallCenters), MenuItemType::Display);
                args.record(RetailMCRChannelTable::findRecId(channel.RecId));
                break;

            default:
                return ;
        }

        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dataType</Name>
				<Source><![CDATA[
    public PriceAttributeDataType dataType(PriceAttributeDefinition attribute)
    {
        // Channel name - the well-known identifier for channel is not unique. See DirPartyTable - Name.
        // The natural key channel id is not commonly used to identify channels.
        return PriceAttributeDataType::Reference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceFieldNum</Name>
				<Source><![CDATA[
    public FieldId referenceFieldNum(PriceAttributeDefinition attribute)
    {
        return fieldNum(PricingRuleApplicability, RetailChannelTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSupported</Name>
				<Source><![CDATA[
    boolean isSupported(PriceAttributeDefinition attribute)
    {
        return attribute.AttributeType == PriceAttributeType::Predefined
            && attribute.PredefinedField == PricePredefinedField::RetailChannel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>source</Name>
				<Source><![CDATA[
    PriceAttributeSource source(PriceAttributeDefinition attribute)
    {
        return PriceAttributeSource::Channel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>