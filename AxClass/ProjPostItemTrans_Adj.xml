<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPostItemTrans_Adj</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjPostItemTrans_Adj extends ProjPostItemTrans
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>projTransUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allows for extensibility in creating a transaction posting.
    /// </summary>
    /// <remarks>
    /// This method is called by the <c>postTrans</c> method after the <c>ledgerTransActionsCrea</c> method
    /// when the <c>parmUpdateTrans</c> method is true.
    /// </remarks>
    public void projTransUpdate()
    {
        if (this.parmAdjustBuffer())
        {
            projItemTrans.LedgerDimension   = this.parmAdjustBuffer().LedgerDimension;
            projItemTrans.TaxItemGroupId    = this.parmAdjustBuffer().TaxItemGroupId;
            projItemTrans.TaxGroupId        = this.parmAdjustBuffer().TaxgroupId;
            projItemTrans.Txt               = this.parmAdjustBuffer().Txt;
            projItemTrans.LinePropertyId    = this.parmAdjustBuffer().LinePropertyId;
            projItemTrans.CurrencyId        = this.parmAdjustBuffer().CurrencyId;
            projItemTrans.DefaultDimension  = this.parmAdjustBuffer().DefaultDimension;            
        }        
        else
        {
            // Updating the original transaction that has a reference VendTrans. This needs to be cleared out since the reference is transferred to the newly created adjusted transaction
            projItemTrans.VendInvoiceTransRecId = 0;

            if (FeatureStateProvider::isFeatureEnabled(ProjProjectTransactionsListPageVendFeature::instance()))
            {
                projItemTrans.VendorAccount = '';
                projItemTrans.VendorName = '';
            }
        }

        projItemTrans.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerStatusCostOrig</Name>
				<Source><![CDATA[
    public boolean parmLedgerStatusCostOrig(boolean _useLedgerStatusCostOrig = ledgerStatusCostOrig)
    {
        ledgerStatusCostOrig = _useLedgerStatusCostOrig;
		if (projTrans)
        {
            projTrans.parmLedgerStatusCostOrig(_useLedgerStatusCostOrig);
        }
        return ledgerStatusCostOrig;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>