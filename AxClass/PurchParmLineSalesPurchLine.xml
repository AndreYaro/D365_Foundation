<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchParmLineSalesPurchLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchParmLineSalesPurchLine</c> class contains <c>PurchParmLine</c> table specific functionality and mapped fields
/// related to the <c>SalesPurchLine</c> table map.
/// </summary>
[SalesPurchLineInterfaceFactory(tableStr(PurchParmLine))]
class PurchParmLineSalesPurchLine extends SalesPurchLineInterface
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPurchParmLine</Name>
				<Source><![CDATA[
    protected PurchParmLine parmPurchParmLine()
    {
        return this.parmSalesPurchLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public LineNum parmLineNum()
    {
        return this.parmPurchParmLine().LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryId</Name>
				<Source><![CDATA[
    public EcoResCategoryId parmCategoryId()
    {
        return this.parmPurchParmLine().ProcurementCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmCurrencyCode()
    {
        return this.parmPurchParmLine().CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId()
    {
        return this.parmPurchParmLine().InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId()
    {
        return this.parmPurchParmLine().ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQty</Name>
				<Source><![CDATA[
    public UnitQty parmQty()
    {
        return this.parmPurchParmLine().ReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignQty</Name>
				<Source><![CDATA[
    protected void assignQty(UnitQty _qty)
    {
        this.parmPurchParmLine().ReceiveNow = _qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitId</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol parmUnitId()
    {
        return this.parmPurchParmLine().purchLine().PurchUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignUnitId</Name>
				<Source><![CDATA[
    protected void assignUnitId(UnitOfMeasureSymbol _unitId)
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventQty</Name>
				<Source><![CDATA[
    public InventQty parmInventQty()
    {
        return this.parmPurchParmLine().InventNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignInventQty</Name>
				<Source><![CDATA[
    protected void assignInventQty(InventQty _inventQty)
    {
        this.parmPurchParmLine().InventNow = _inventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCWQty</Name>
				<Source><![CDATA[
    public PdsCWInventQty parmCWQty()
    {
        return this.parmPurchParmLine().PdsCWReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrice</Name>
				<Source><![CDATA[
    public PriceCur parmPrice()
    {
        return this.parmPurchParmLine().PurchPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignPrice</Name>
				<Source><![CDATA[
    protected void assignPrice(PriceCur _price)
    {
        this.parmPurchParmLine().PurchPrice = _price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    public PriceUnit parmPriceUnit()
    {
        return this.parmPurchParmLine().PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignPriceUnit</Name>
				<Source><![CDATA[
    protected void assignPriceUnit(PriceUnit _priceUnit)
    {
        this.parmPurchParmLine().PriceUnit = _priceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    public LineAmount parmLineAmount()
    {
        return this.parmPurchParmLine().LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLineAmount</Name>
				<Source><![CDATA[
    protected void assignLineAmount(LineAmount _lineAmount)
    {
        this.parmPurchParmLine().LineAmount = _lineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDiscAmount</Name>
				<Source><![CDATA[
    public DiscAmount parmLineDiscAmount()
    {
        return this.parmPurchParmLine().LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLineDiscAmount</Name>
				<Source><![CDATA[
    protected void assignLineDiscAmount(DiscAmount _lineDiscAmount)
    {
        this.parmPurchParmLine().LineDisc = _lineDiscAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmLineDiscPercent()
    {
        return this.parmPurchParmLine().LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLineDiscPercent</Name>
				<Source><![CDATA[
    protected void assignLineDiscPercent(DiscPct _lineDiscPercent)
    {
        this.parmPurchParmLine().LinePercent = _lineDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkup</Name>
				<Source><![CDATA[
    public PriceMarkup parmMarkup()
    {
        return this.parmPurchParmLine().PurchMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignMarkup</Name>
				<Source><![CDATA[
    protected void assignMarkup(PriceMarkup _markup)
    {
        this.parmPurchParmLine().PurchMarkup = _markup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmDiscPercent()
    {
        return this.parmPurchParmLine().discPercent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscAmount</Name>
				<Source><![CDATA[
    public DiscAmount parmDiscAmount()
    {
        return this.parmPurchParmLine().discAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModuleType</Name>
				<Source><![CDATA[
    public ModuleInventPurchSales parmModuleType()
    {
        return this.parmPurchParmLine().purchLine().moduleType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderId</Name>
				<Source><![CDATA[
    public Num parmOrderId()
    {
        return this.parmPurchParmLine().OrigPurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasOrderId</Name>
				<Source><![CDATA[
    public boolean hasOrderId()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile_RU</Name>
				<Source><![CDATA[
    public PostingProfile parmPostingProfile_RU(PostingProfile _postingProfile_RU = '')
    {
        if (!prmisDefault(_postingProfile_RU))
        {
            this.parmPurchParmLine().PostingProfile_RU = _postingProfile_RU;
        }

        return this.parmPurchParmLine().PostingProfile_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup parmTaxGroup()
    {
        return this.parmPurchParmLine().TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroup</Name>
				<Source><![CDATA[
    public TaxItemGroup parmTaxItemGroup()
    {
        return this.parmPurchParmLine().TaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemLineDiscCode</Name>
				<Source><![CDATA[
    protected LineDiscCode parmItemLineDiscCode()
    {
        return this.parmPurchParmLine().purchLine().itemLineDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountLineDiscCode</Name>
				<Source><![CDATA[
    protected LineDiscCode parmAccountLineDiscCode()
    {
        return this.parmPurchParmLine().purchLine().lineDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDate</Name>
				<Source><![CDATA[
    protected TransDate parmPriceDate()
    {
        return this.parmPurchParmLine().purchLine().priceDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceGroupId</Name>
				<Source><![CDATA[
    protected PriceGroupId parmPriceGroupId()
    {
        return this.parmPurchParmLine().purchLine().priceGroupId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountExclTax</Name>
				<Source><![CDATA[
    public AmountCur amountExclTax(
        AmountCur _amountCur,
        Qty       _qty,
        TransDate _transDate,
        Tax       _tax = null,
        boolean   _skipRounding = false,
        boolean   _useRoundedTaxOrigin = true)
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (this.inventDim().inventProfile_RU().taxUpdateIncoming() == TaxUpdateMode_RU::NoCalc)
            {
                return _amountCur;
            }
        }

        return super(_amountCur, _qty, _transDate, _tax, _skipRounding, _useRoundedTaxOrigin);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineAmount</Name>
				<Source><![CDATA[
    public AmountCur calcLineAmount(Qty _qty = this.parmQty())
    {
        return this.parmPurchParmLine().calculateLineAmount(_qty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineAmountForced</Name>
				<Source><![CDATA[
    public AmountCur calcLineAmountForced(Qty _qty = this.parmQty(), PriceDiscPolicyCheckPolicy  _checkPolicy = null)
    {
        return this.parmPurchParmLine().VendDocumentLineMap::calculatePrice2LineAmount(_qty, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPrice2LineAmount</Name>
				<Source><![CDATA[
    public AmountCur calcPrice2LineAmount(Qty _qty, boolean _forceLineAmountCalculation)
    {
        return this.parmPurchParmLine().calculatePrice2LineAmount(_qty, _forceLineAmountCalculation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountExclTax</Name>
				<Source><![CDATA[
    public AmountCur lineAmountExclTax(
        TransDate _transDate    = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        Tax       _tax          = null,
        boolean   _skipRounding = false)
    {
        return this.parmPurchParmLine().lineAmountExcludingTax(_transDate, _tax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountModified</Name>
				<Source><![CDATA[
    public void lineAmountModified()
    {
        this.parmPurchParmLine().PurchPrice     = 0;
        this.parmPurchParmLine().LineDisc       = 0;
        this.parmPurchParmLine().LinePercent    = 0;
        this.parmPurchParmLine().MultiLnDisc    = 0;
        this.parmPurchParmLine().MultiLnPercent = 0;
        this.parmPurchParmLine().PurchMarkup    = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inclTax</Name>
				<Source><![CDATA[
    public boolean inclTax()
    {
        return this.parmPurchParmLine().includeTax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditDisc</Name>
				<Source><![CDATA[
    protected boolean canEditDisc()
    {
        return this.parmPurchParmLine().purchLine().canEditDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDisc</Name>
				<Source><![CDATA[
    protected void initFromPriceDisc(
        PriceDisc_Price             _priceDisc,
        PriceDiscPolicyCheckPolicy  _checkPolicy,
        boolean                     _initDateFields,
        RetailOrderCalculator       _retailCalculator)
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxDate</Name>
				<Source><![CDATA[
    public TransDate taxDate(TransDate _transDate)
    {
        return this.parmPurchParmLine().purchLine().taxDate(_transDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the <c>SalesPurchTable</c> map for the purchase parameter table.
    /// </summary>
    /// <returns> A <c>SalesPurchTable</c> table map.</returns>
    public SalesPurchTable salesPurchTable()
    {
        return this.parmPurchParmLine().purchParmTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>