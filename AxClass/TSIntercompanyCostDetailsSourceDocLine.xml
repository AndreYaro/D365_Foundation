<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TsIntercompanyCostDetailsSourceDocLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TSIntercompanyCostDetailsSourceDocLine</c> class provides the information to handle the
/// distributions and sub-ledger journal account entries for an intercompany cost detail line.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(SourceDocLine_TimesheetsIntercompany), SourceDocLine_TimesheetsIntercompany::IntercompanyCostDetails)]
class TsIntercompanyCostDetailsSourceDocLine extends SourceDocumentLineItem
{
    TSIntercompanyCostDetails tsIntercompanyCostDetails;
    TSTimesheetTrans    tsTimesheetTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateDefaultDimension</Name>
				<Source><![CDATA[
    protected DimensionDefault calculateDefaultDimension()
    {
        TSIntercompanyCost tsIntercompanyCost = TSIntercompanyCost::find(tsIntercompanyCostDetails.tsIntercompanyCost);
        TSTimesheetTable tsTimesheetTable = TSTimesheetTable::findRecId(tsIntercompanyCost.tsTimesheetTable);

        return TSResource::defaultDimension(tsTimesheetTable.Resource);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateLegalEntityRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the legal entity for the line.
    /// </summary>
    /// <returns>
    /// The current company value.
    /// </returns>
    protected LegalEntityRecId calculateLegalEntityRecId()
    {
        return CompanyInfo::current();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateSourceDocumentAmountMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the amount map for the line.
    /// </summary>
    /// <returns>
    /// A new <c>SourceDocumentAmountMap</c> instance.
    /// </returns>
    /// <remarks>
    /// This map is cached on the <c>SourceDocumentLineItem</c> class in the
    /// <c>parmSourceDocumentAmountMap</c> method.
    /// </remarks>
    protected SourceDocumentAmountMap calculateSourceDocumentAmountMap()
    {
        SourceDocumentAmountMap     sourceDocumentAmountMap;
        SourceDocumentAmount        extendedPrice;

        // Create map
        sourceDocumentAmountMap = SourceDocumentAmountMap::construct();

        // Extended price source document monetary amount
        extendedPrice = SourceDocumentAmount::newFromParameters(this.parmSourceDocumentLine(), tsIntercompanyCostDetails.TransactionCurrencyAmount, MonetaryAmount::ExtendedPrice, false);
        sourceDocumentAmountMap.insert(extendedPrice);

        return sourceDocumentAmountMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentsBusinessEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>SourceDocumentLineItem</c> class documents a business event.
    /// </summary>
    /// <returns>
    /// true if the <c>SourceDocumentLineItem</c> class documents a business event; otherwise, false.
    /// </returns>
    public BusinessEvent documentsBusinessEvent()
    {
        BusinessEvent       businessEvent;

        businessEvent = new BusinessEvent(enumNum(BusinessEvent_ProjectTimesheets), BusinessEvent_ProjectTimesheets::TimesheetsIntercompanyRevenue);

        return businessEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentsInterCompanyBusinessEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>SourceDocumentLineItem</c> documents an intercompany business event.
    /// </summary>
    /// <returns>
    /// true if the <c>SourceDocumentLineItem</c> documents an intercompany business event; otherwise,
    /// false.
    /// </returns>
    public boolean documentsInterCompanyBusinessEvent()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance variables.
    /// </summary>
    /// <param name="_sourceDocumentLineImplementation">
    /// A source document line implementation record.
    /// </param>
    /// <param name="_additionalInformation">
    /// A map to hold buffers of pre initiliazed objects need by the framework to the source document.
    /// </param>
    protected void initializeImplementation(SourceDocumentLineImplementation _sourceDocumentLineImplementation, Map _additionalInformation = null)
    {
        tsIntercompanyCostDetails = _sourceDocumentLineImplementation;
        tsTimesheetTrans = TSTimesheetTrans::findRecId(tsIntercompanyCostDetails.tsTimesheetTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDate</Name>
				<Source><![CDATA[
    public AccountingDate parmAccountingDate()
    {
        return tsTimesheetTrans.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBusinessEventDate</Name>
				<Source><![CDATA[
    public DocumentDate parmBusinessEventDate()
    {
        return tsTimesheetTrans.ProjTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmTransactionCurrencyCode()
    {
        return Currency::findRecId(tsIntercompanyCostDetails.Currency).CurrencyCode;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>