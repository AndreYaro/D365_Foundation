<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemPriceActivationJob_DemoDataPost</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventItemPriceActivationJob_DemoDataPost</c> exposes extended functionality to allow the demo data posting framework to
/// automatically activate costing versions.
/// </summary>
public final class InventItemPriceActivationJob_DemoDataPost extends InventItemPriceActivationJob implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPurchasePrice</Name>
				<Source><![CDATA[
    public NoYes parmPurchasePrice(NoYes _purchasePrice = purchasePrice)
    {
        purchasePrice = _purchasePrice;
        return purchasePrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPrice</Name>
				<Source><![CDATA[
    public NoYes parmSalesPrice(NoYes _salesPrice = salesPrice)
    {
        salesPrice = _salesPrice;
        return salesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostPrice</Name>
				<Source><![CDATA[
    public NoYes parmCostPrice(NoYes _costPrice = costPrice)
    {
        costPrice = _costPrice;
        return costPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventItemPriceActivationJob_DemoDataPost construct()
    {
        return new InventItemPriceActivationJob_DemoDataPost();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>