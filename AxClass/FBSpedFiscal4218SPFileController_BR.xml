<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBSpedFiscal4218SPFileController_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>FBSpedFiscal4218SPFileController_BR</c> class is the controller class for the SPED Fiscal file generation operation.
/// </summary>
[
    FBTaxStatement_BRAttribute("@FBCat4218SP:cat4218SP", menuitemDisplayStr(FBSpedFiscal4218SPFileExporter_BR)),
    FBTaxStatementTaxType_BRAttribute(TaxType_BR::ICMS),
    FBTaxStatementTaxType_BRAttribute(TaxType_BR::ICMSST),
    FBTaxStatementTaxType_BRAttribute(TaxType_BR::ICMSDiff),
    FBTaxStatementTaxType_BRAttribute(TaxType_BR::IPI),
    FBTaxStatementLocation_BRAttribute('BRA', 'SP'),
    FBTaxStatementSetupTable_BRAttribute(tableStr(FBSpedFiscal4218SPFileParameters_BR))
]
public class FBSpedFiscal4218SPFileController_BR extends FBTaxStatementController_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates the pre-requisites that must be met in order to start the file creation process.
    /// </summary>
    /// <returns>
    ///     A boolean value indicating whether the pre-requisites are met; false otherwise.
    /// </returns>
    protected boolean validate()
    {
        boolean ret = super();
        FBSpedFiscal4218SPFileContract_BR contract;

        contract = this.getDataContractObject();

        if (ret
        && FBFile_BR::fileExistsOnAOS(contract.parmSpedFileName()))
        {
            if (Box::yesNo(strfmt("@SYS18625", contract.parmSpedFileName()) + ' ' + "@SYS54006", DialogButton::Yes) == DialogButton::No)
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Contructs a new instance of the <c>FBSpedFiscal4218SPFileController_BR</c> class.
    /// </summary>
    /// <param name="_args">
    ///     <c>Args</c> class instance representing the arguments used to construct the controller class.
    /// </param>
    /// <returns>
    ///     An instance of the <c>FBSpedFiscal4218SPFileController_BR</c> class.
    /// </returns>
    /// <exception cref="Exception::Error">
    ///     Exception indicating that the appropriate tax assessment has not been created yet.
    /// </exception>
    public static SysOperationController construct(Args _args)
    {   
        FBSpedFiscal4218SPFileController_BR controller = new FBSpedFiscal4218SPFileController_BR();

        if (controller.canRetrieveBookingPeriodFromArgs(_args))
        {
            controller.initializeFromArgs(_args);

            FBSpedFiscal4218SPFileContract_BR contract = controller.getDataContractObject();

            FBBookingPeriod_BR bookingPeriod = controller.bookingPeriod();

            FBSpedFiscal4218SPFileParameters_BR spedFiscalParameters = FBSpedFiscal4218SPFileParameters_BR::find(bookingPeriod.FiscalEstablishmentId, bookingPeriod.FiscalEstablishmentDataArea);

            contract.parmFiscalEstablishmentId(bookingPeriod.FiscalEstablishmentId);
            contract.parmFiscalEstablishmentDataArea(bookingPeriod.FiscalEstablishmentDataArea);
            contract.parmMonth(bookingPeriod.PeriodMonth);
            contract.parmYr(bookingPeriod.PeriodYear);
            contract.parmBookingPeriod(bookingPeriod);
            contract.parmSpedFileName(spedFiscalParameters.FileLocation);
            contract.parmVersion(spedFiscalParameters.Version);
            contract.parmFileType(spedFiscalParameters.FBSpedFiscal4218FileType);

            controller.parmExecutionMode(SysOperationExecutionMode::ReliableAsynchronous);
            controller.parmShowProgressForm(true);
        }
        else
        {
            throw error("@SYS22996");
        }

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FBSpedFiscal4218SPFileController_BR::construct(_args).startOperation();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>