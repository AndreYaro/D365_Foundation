<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanStagingTableCustomerProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ReqDemPlanStagingTableCustomerProcessor</c> class is responsible for updating customer account and customer group
///     fields in the staging table with historical data.
/// </summary>
[ReqDemPlanStagingTableProcessorAttribute]
class ReqDemPlanStagingTableCustomerProcessor extends ReqDemPlanStagingTableProcessor
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public ReqDemPlanStagingTableProcessorDesc description()
    {
        return "@DMP1438";
    }

]]></Source>
			</Method>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
        public int64 execute(
        ReqDemPlanCubeStagingTable              _stagingTable,
        ReqDemPlanExportBaseDataContract        _dataContract,
        RefRecId                                _forecastVersion)
    {
        InventTransOrigin   inventTransOrigin;
        CustTable           custTable;
        boolean             customerAttributeEnabled = _dataContract.attributeManager().isAttributeEnabled(ReqDemPlanForecastAttributeType::CustAccount);
        boolean             customerGroupAttributeEnabled = _dataContract.attributeManager().isAttributeEnabled(ReqDemPlanForecastAttributeType::CustGroupId);
        int64               recordsProcessed = 0;
        int64               rowCountReal = 0;

        if (customerAttributeEnabled || customerGroupAttributeEnabled)
        {
            update_recordSet _stagingTable
                setting CustAccount = custTable.AccountNum,
                        CustGroupId = custTable.CustGroup
                where _stagingTable.Version == _forecastVersion
                join inventTransOrigin
                where inventTransOrigin.RecId == _stagingTable.InventTransOrigin
                    && (inventTransOrigin.ReferenceCategory == InventTransType::Sales
                    || inventTransOrigin.ReferenceCategory == InventTransType::SalesQuotation)
                join custTable
                where custTable.Party == inventTransOrigin.Party;

            rowCountReal  = _stagingTable.RowCount();
            recordsProcessed += recordsProcessed + rowCountReal;

            if (!customerAttributeEnabled)
            {
                update_recordSet _stagingTable
                setting CustAccount = ''
                where
                    _stagingTable.Version == _forecastVersion
                    && _stagingTable.CustAccount;

                rowCountReal  = _stagingTable.RowCount();
                recordsProcessed += recordsProcessed + rowCountReal;
            }
        }

        return recordsProcessed;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>