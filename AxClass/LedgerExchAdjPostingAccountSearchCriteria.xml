<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerExchAdjPostingAccountSearchCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class LedgerExchAdjPostingAccountSearchCriteria extends LedgerExchAdjPostingSearchCriteria
{
    private LedgerExchAdjPostingSearchParameters searchParameters;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new (LedgerExchAdjPostingSearchParameters _searchParameters)
    {
        searchParameters = _searchParameters;

        this.buildSearchValuesList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildSearchValuesList</Name>
				<Source><![CDATA[
    protected void buildSearchValuesList()
    {
        this.buildSearchValuesListForTableGroupAll();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static LedgerExchAdjPostingAccountSearchCriteria construct(LedgerExchAdjPostingSearchParameters _searchParameters)
    {
        return new LedgerExchAdjPostingAccountSearchCriteria(_searchParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateSearchFilters</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void populateSearchFilters(anytype _searchValue)
    {
        LedgerExchAdjPosting ledgerExchAdjPosting = searchState.parmLedgerExchAdjPosting();
        ledgerExchAdjPosting.initSearchParm(searchParameters);
        ledgerExchAdjPosting.AccountCode = _searchValue;
        ledgerExchAdjPosting.AccountRelation = LedgerExchAdjPosting::accountRelationForAccount(_searchValue, searchParameters.parmAccountNum(), searchParameters.parmAccountGroup());
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSearchCriteria</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean mustSearchCriteria(anytype _searchValue)
    {
        PostingProfileAccountRelation accountRelation = LedgerExchAdjPosting::accountRelationForAccount(_searchValue, searchParameters.parmAccountNum(), searchParameters.parmAccountGroup());

        return this.accountRelationExists(_searchValue, accountRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountRelationExists</Name>
				<Source><![CDATA[
    private boolean accountRelationExists(
        TableGroupAll _accountCode,
        PostingProfileAccountRelation _accountRelation)
    {
        LedgerExchAdjPosting ledgerExchAdjPosting;

        if (_accountCode == TableGroupAll::All || _accountRelation == '')
        {
            return true;
        }

        select firstonly RecId from ledgerExchAdjPosting
            where ledgerExchAdjPosting.AccountCode == _accountCode
               && ledgerExchAdjPosting.AccountRelation == _accountRelation;

        return ledgerExchAdjPosting.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>