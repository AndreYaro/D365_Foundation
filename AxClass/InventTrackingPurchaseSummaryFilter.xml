<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTrackingPurchaseSummaryFilter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventTrackingPurchaseSummaryFilter</c> class provides tracing hierarchy filtering for
///    the <see cref="PurchLine form"/> form.
/// </summary>
class InventTrackingPurchaseSummaryFilter extends InventTrackingTraceSummaryFilter
{
    FormDataSource              purchTableDataSource;
    FormDataSource              inventDimDataSource;
    FormDataSource              inventBatchDataSource;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyFilter</Name>
				<Source><![CDATA[
    public void applyFilter()
    {
        super();

        filterDataSource.queryBuildDataSource().clearLinks();
        filterDataSource.queryBuildDataSource().addLink(fieldNum(PurchLine, InventTransId), fieldNum(PurchLineTmpFilter, InventTransId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dataSourceInitPost</Name>
				<Source><![CDATA[
    public void dataSourceInitPost()
    {
        super();

        if (!purchTableDataSource || !inventDimDataSource || !inventBatchDataSource)
        {
            throw(error(error::wrongUseOfFunction(funcName())));
        }

        purchTableDataSource.joinSource(mainDataSource.id());
        purchTableDataSource.linkType(FormLinkType::InnerJoin);

        inventBatchDataSource.joinSource(inventDimDataSource.id());
        inventBatchDataSource.linkType(FormLinkType::OuterJoin);
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterTableType</Name>
				<Source><![CDATA[
    protected TableId filterTableType()
    {
        return tableNum(PurchLineTmpFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeInFilterDTO</Name>
				<Source><![CDATA[
    protected boolean includeInFilterDTO(InventTrackingDimTracingInventTransDTO _inventTransDTO, InventTrackingDimTracingInventTransOriginDTO _inventTransOriginDTO)
    {
        return _inventTransOriginDTO.referenceCategory() == InventTransType::Purch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertKeyDataDTO</Name>
				<Source><![CDATA[
    protected void insertKeyDataDTO(InventTrackingDimTracingInventTransDTO _inventTransDTO, InventTrackingDimTracingInventTransOriginDTO _inventTransOriginDTO)
    {
        PurchLineTmpFilter  purchLineTmpFilter = filterTmp as PurchLineTmpFilter;

        purchLineTmpFilter.InventTransId = _inventTransOriginDTO.inventTransId();
        purchLineTmpFilter.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventBatchDataSourceInitPost</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs initialization necessary after <c>InventBatch</c> data source has been initialized.
    /// </summary>
    /// <remarks>
    ///    This method must be called from the form data source <c>init</c> method (after <c>super()</c>).
    /// </remarks>
    public void inventBatchDataSourceInitPost()
    {
        QueryBuildDataSource dsInventBatch = inventBatchDataSource.query().dataSourceTable(tableNum(InventBatch));
        dsInventBatch.addLink(fieldNum(PurchLine, ItemId), fieldNum(InventBatch, ItemId), mainDataSource.name());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventBatchDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmInventBatchDataSource(FormDataSource _inventBatchDataSource = inventBatchDataSource)
    {
        inventBatchDataSource = _inventBatchDataSource;

        return inventBatchDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmInventDimDataSource(FormDataSource _inventDimDataSource = inventDimDataSource)
    {
        inventDimDataSource = _inventDimDataSource;

        return inventDimDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchTableDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmPurchTableDataSource(FormDataSource _purchTableDataSource = purchTableDataSource)
    {
        purchTableDataSource = _purchTableDataSource;

        return purchTableDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transKeyDTO</Name>
				<Source><![CDATA[
    protected str transKeyDTO(InventTrackingDimTracingInventTransDTO _inventTransDTO, InventTrackingDimTracingInventTransOriginDTO _inventTransOriginDTO)
    {
        return _inventTransOriginDTO.inventTransId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventTrackingPurchaseSummaryFilter construct()
    {
        return new InventTrackingPurchaseSummaryFilter();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>InventTrackingPurchaseSummaryFilter</c> class with a given tracing hierarchy.
    /// </summary>
    /// <param name="_hierarchy">
    ///    The tracing hierarchy to use.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>InventTrackingPurchaseSummaryFilter</c> class.
    /// </returns>
    public static InventTrackingPurchaseSummaryFilter newHierarchy(
        InventTrackingDimTracingHierarchy   _hierarchy)
    {
        InventTrackingPurchaseSummaryFilter filter = InventTrackingPurchaseSummaryFilter::construct();

        filter.parmTracingHierarchy(_hierarchy);

        return filter;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
