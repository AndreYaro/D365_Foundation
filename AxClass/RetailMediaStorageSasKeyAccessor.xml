<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMediaStorageSasKeyAccessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.DynamicsOnline.Infrastructure.Components.SharedServiceUnitStorage;
/// <summary>
/// Media storage shared access signature key accessor.
/// </summary>
class RetailMediaStorageSasKeyAccessor
{
    private static container CachedSasKeyDetails = ['', null];

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getMediaStorageSasKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return the media storage shared access signature key from the cache.
    /// </summary>
    /// <returns>This container contains four values, 1.the result state, 2.error message, 3.shared access signature key, 4.shared access signature key expiration time in UTC.</returns>
    public static container getMediaStorageSasKey()
    {
        str cachedSasKey = conPeek(CachedSasKeyDetails, 1);
        var cachedSasKeyExpirationDateTimeInUtc = conPeek(CachedSasKeyDetails, 2);

        container sasKeyDetails = [false, '', '', null];
        var currentUtcDateTime = DateTimeUtil::utcNow();

        if (cachedSasKey && cachedSasKeyExpirationDateTimeInUtc)
        {
            int64 sasKeyValidityInSeconds = DateTimeUtil::getDifference(cachedSasKeyExpirationDateTimeInUtc, currentUtcDateTime);
            int sasRecyleWindowInSeconds = RetailSharedParameters::ClxSasKeyRecycleWindowInHours() * 3600;
            if (sasKeyValidityInSeconds > 0) //valid sas key.
            {
                sasKeyDetails = [true, '', cachedSasKey, cachedSasKeyExpirationDateTimeInUtc];
                return sasKeyDetails;
            }
        }

        return sasKeyDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMediaStorageSasKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the media storage shared access signature key into the cache.
    /// </summary>
    /// <param name = "sasKey">The shared access signature key.</param>
    /// <param name = "sasKeyExpirationDatetimeUtc">The shared access signature key expiration time.</param>
    public static void setMediaStorageSasKey(str sasKey, utcdatetime sasKeyExpirationDatetimeUtc)
    {
        CachedSasKeyDetails = [sasKey, sasKeyExpirationDatetimeUtc];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>