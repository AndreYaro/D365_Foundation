<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetTransactionListingDP_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetTransactionListingDP_IN</c> class declares the variables and tables required for the <c>AssetTransactionListing_IN</c> report.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(AssetTransactionListing_IN))
]
class AssetTransactionListingDP_IN extends SrsReportDataProviderPreProcessTempDB
{
    AssetTransactionListingTmp_IN assetTransactionListingTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetgroupNetBookValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method calculates the groupNetBookValue for a particular asset Group and asset book combination.
    /// </summary>
    /// <param name="_currentAssetGroupId">
    /// Passes the asset group ID to this method.
    /// </param>
    /// <param name="_currentBookId">
    /// Passes the asset book ID to this method.
    /// </param>
    /// <returns>
    /// Group net book value for a particular assetGroup and assetbook combination.
    /// </returns>
    private AssetNetBookValue getAssetgroupNetBookValue(
        AssetGroupId  _currentAssetGroupId,
        AssetBookId   _currentBookId)
    {
        return AssetSumCalc_Trans_IN::newAssetYear(
                _currentAssetGroupId,
                _currentBookId).netBookValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssetTransactionListing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches the data from <c>AssetTransactionListingTmp_IN</c> table.
    /// </summary>
    /// <returns>
    /// The temporary table <c>AssetTransactionListingTmp_IN</c>.
    /// </returns>
    [
        SRSReportDataSetAttribute(tablestr(AssetTransactionListingTmp_IN))
    ]
    public AssetTransactionListingTmp_IN getAssetTransactionListing()
    {
        return assetTransactionListingTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertAssetTransactionListingTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts records into temporary table <c>AssetTransactionListingTmp_IN</c>.
    /// </summary>
    /// <param name="_assetTable">
    /// Passes the cursor of <c>AssetBook</c> table to this method.
    /// </param>
    /// <param name="_assetBook">
    /// Passes the cursor of <c>AssetBook</c> table to this method.
    /// </param>
    /// <param name="_assetGroupTransMerge">
    /// Passes the cursor of <c>AssetGroupTransMerge_IN</c> view to this method.
    /// </param>
    private void insertAssetTransactionListingTmp(
        AssetTable              _assetTable,
        AssetBook          _assetBook,
        AssetGroupTransMerge_IN _assetGroupTransMerge)
    {
        AssetSumCalc    assetSumCalc;

        assetTransactionListingTmp.AssetGroup = _assetBook.AssetGroup;
        assetTransactionListingTmp.AssetID    = _assetBook.AssetId;
        assetTransactionListingTmp.BookID     = _assetBook.BookId;
        assetTransactionListingTmp.AmountCur  = _assetGroupTransMerge.AmountCur;
        assetTransactionListingTmp.AmountMst  = _assetGroupTransMerge.AmountMST;

        assetSumCalc = AssetSumCalc_Trans::newAssetYear(
                _assetBook.AssetId,
                _assetBook.BookId);

        assetTransactionListingTmp.AquisitionValue = assetSumCalc.acquisitionValueAll();
        assetTransactionListingTmp.NetBookValue    = assetSumCalc.netBookValue();
        assetTransactionListingTmp.AssetName       = _assetTable.Name;
        assetTransactionListingTmp.CurrencyCode    = _assetGroupTransMerge.CurrencyCode;
        assetTransactionListingTmp.Location        = _assetTable.Location;
        assetTransactionListingTmp.Status          = _assetBook.Status;
        assetTransactionListingTmp.Voucher         = _assetGroupTransMerge.Voucher;
        assetTransactionListingTmp.Transdate       = _assetGroupTransMerge.TransDate;
        assetTransactionListingTmp.TransType       = _assetGroupTransMerge.TransType;
        assetTransactionListingTmp.Txt             = _assetGroupTransMerge.Txt;

        assetTransactionListingTmp.AssetGroupNetBookValue = this.getAssetgroupNetBookValue(
            _assetBook.AssetGroup,
            _assetBook.BookId);

        assetTransactionListingTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches the required data for the <c>AssetTransactionListing_IN</c>report.
    /// </summary>
    public void processReport()
    {
        Query                       query;
        QueryRun                    queryRun;
        AssetTable                  assetTable;
        AssetBook              assetBook;

        AssetGroupTransMerge_IN     assetGroupTransMerge;

        if (AssetParameters::checkAssetParameters_IN())
        {
            query    = this.parmQuery();
            queryRun = new QueryRun(query);

            while (queryRun.next())
            {
                assetTable              = queryRun.get(tableNum(AssetTable));
                assetBook          = queryRun.get(tableNum(AssetBook));
                assetGroupTransMerge    = queryRun.get(tableNum(AssetGroupTransMerge_IN));

                this.insertAssetTransactionListingTmp(
                    assetTable,
                    assetBook,
                    assetGroupTransMerge);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>