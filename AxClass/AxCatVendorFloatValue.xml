<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCatVendorFloatValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AxCatVendorFloatValue</c> is the <c>AxBC</c> table class for the <c>CatVendorFloatValue</c>
/// table.
/// </summary>
class AxCatVendorFloatValue extends AxCatVendProdCandidateAttributeValue
{
    CatVendorFloatValue catVendorFloatValue;
    UnitOfMeasureSymbol unitOfMeasureSymbol;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>catVendorFloatValue</Name>
				<Source><![CDATA[
    public CatVendorFloatValue catVendorFloatValue(CatVendorFloatValue _catVendorFloatValue = catVendorFloatValue)
    {
        if (!prmisdefault(_catVendorFloatValue))
        {
            this.setCurrentRecordFromExternal(_catVendorFloatValue);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the current record in the <c>CatVendorFloatValue</c> table.
    /// </summary>
    /// <param name="_catVendorFloatValue">
    /// The <c>CatVendorFloatValue</c> record to set; optional.
    /// </param>
    /// <returns>
    /// A <c>CatVendorFloatValue</c> record.
    /// </returns>
    public Common currentRecord(Common _catVendorFloatValue = catVendorFloatValue)
    {
        if (!prmisdefault(_catVendorFloatValue))
        {
            super(_catVendorFloatValue);
            catVendorFloatValue = _catVendorFloatValue;
        }
        else
        {
            super();
        }

        return catVendorFloatValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>CatVendorFloatValue</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>CatVendorFloatValue</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        CatVendorFloatValue localCatVendorFloatValue;
        return localCatVendorFloatValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFloatUnitOfMeasure</Name>
				<Source><![CDATA[
    public SysInt64 parmFloatUnitOfMeasure(SysInt64 _floatUnitOfMeasure = 0)
    {
        if (!prmisdefault(_floatUnitOfMeasure))
        {
            this.setField(fieldnum(CatVendorFloatValue, FloatUnitOfMeasure), _floatUnitOfMeasure);
        }

        return catVendorFloatValue.FloatUnitOfMeasure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFloatUnitOfMeasureSymbol</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol parmFloatUnitOfMeasureSymbol(UnitOfMeasureSymbol _unitOfMeasureSymbol = unitOfMeasureSymbol)
    {
        UnitOfMeasure                   unitOfMeasure;
        if (!prmisdefault(_unitOfMeasureSymbol))
        {
            unitOfMeasureSymbol = _unitOfMeasureSymbol;
            unitOfMeasure = UnitOfMeasure::findBySymbol(unitOfMeasureSymbol);
            if (unitOfMeasure)
            {
                this.parmFloatUnitOfMeasure(unitOfMeasure.RecId);
            }
        }

        return unitOfMeasureSymbol;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFloatValue</Name>
				<Source><![CDATA[
    public AttributeValueFloat parmFloatValue(AttributeValueFloat _floatValue = 0)
    {
        if (!prmisdefault(_floatValue))
        {
            this.setField(fieldnum(CatVendorFloatValue, FloatValue), _floatValue);
        }

        return catVendorFloatValue.FloatValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFloatUnitOfMeasure</Name>
				<Source><![CDATA[
    protected void setFloatUnitOfMeasure()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorFloatValue, FloatUnitOfMeasure)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFloatValue</Name>
				<Source><![CDATA[
    protected void setFloatValue()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorFloatValue, FloatValue)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls all of the default methods that must be called before a record is inserted or updated.
    /// </summary>
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setFloatValue();
        this.setFloatUnitOfMeasure();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxCatVendorFloatValue construct()
    {
        return new AxCatVendorFloatValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCatVendorFloatValue</Name>
				<Source><![CDATA[
    public static AxCatVendorFloatValue newCatVendorFloatValue(CatVendorFloatValue _catVendorFloatValue)
    {
        AxCatVendorFloatValue axCatVendorFloatValue = AxCatVendorFloatValue::construct();
        axCatVendorFloatValue.catVendorFloatValue(_catVendorFloatValue);

        return axCatVendorFloatValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>