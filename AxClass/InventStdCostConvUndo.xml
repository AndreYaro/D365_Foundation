<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventStdCostConvUndo</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class InventStdCostConvUndo
{
    InventStdCostConv inventStdCostConv;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(InventStdCostConv _inventStdCostConv)
    {
        inventStdCostConv = _inventStdCostConv;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    abstract public void run()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        if (!args || !args.record())
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        InventStdCostConvUndo inventStdCostConvUndo = InventStdCostConvUndo::newInventStdCostConv(args.record());
        inventStdCostConvUndo.run();

        Common common = args.record();
        if (FormDataUtil::isFormDataSource(common))
        {
            FormDataSource formDataSource = FormDataUtil::getFormDataSource(common);
            formDataSource.formRun().lock();
            formDataSource.reread();
            formDataSource.refreshEx();
            formDataSource.active();
            formDataSource.formRun().unLock();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInventStdCostConv</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an <c>InventStdCostConvUndo</c> object from the specified parameter.
    /// </summary>
    /// <param name="_inventStdCostConv">
    ///    An <c>InventStdCostConv</c> record buffer that must have the status reverted.
    /// </param>
    /// <returns>
    ///    An <c>InventStdCostConvUndo</c> object.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    An object could not be initialized because the status cannot be reverted.
    /// </exception>
    static public InventStdCostConvUndo newInventStdCostConv(InventStdCostConv _inventStdCostConv)
    {
        switch (_inventStdCostConv.Status)
        {
            case InventStdCostConvStatus::Ready:
                return InventStdCostConvUndo_Ready::construct(_inventStdCostConv);

            case InventStdCostConvStatus::InProgress:
                return InventStdCostConvUndo_InProgress::construct(_inventStdCostConv);
        }

        throw error(strFmt("@SYS120297", _inventStdCostConv.Status));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
