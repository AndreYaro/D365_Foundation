<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRPickWaveHeaderController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRPickWaveHeaderController</c> controlls the picking wave header report.
/// </summary>
class MCRPickWaveHeaderController extends SrsReportRunController implements BatchRetryable
{
    SRSPrintDestinationSettings printerSettings;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the class parameters for the picking wave header report.
    /// </summary>
    /// <param name="_args">
    /// The arguments that are to be passed as parameters into the pick wave header report.
    /// </param>
    protected void initController(Args _args)
    {
        this.initParmReportName();
        this.parmArgs(_args);
        this.parmShowDialog(false);
        this.parmDialogCaption("@MCR24927");
        this.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmReportName</Name>
				<Source><![CDATA[
    protected void initParmReportName()
    {
        this.parmReportName(ssrsReportStr(MCRPickWaveHeader, Report));
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
        protected void preRunModifyContract()
    {
        MCRPickWaveHeaderContract contract;

        contract = this.parmReportContract().parmRdpContract();
        contract.parmWaveRefId(this.parmArgs().parm());
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        MCRPickWaveHeaderController controller = new MCRPickWaveHeaderController();

        controller.initController(_args);
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>