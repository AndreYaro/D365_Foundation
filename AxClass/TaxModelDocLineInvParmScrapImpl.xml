<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineInvParmScrapImpl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The tax model class for Receipt <c>inventTransferParmLine</c> with scrap.
/// </summary>
public class TaxModelDocLineInvParmScrapImpl extends TaxModelDocLineInventParmImpl
    implements TaxModelTaxableScrap
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFullQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the scrap quantity.
    /// </summary>
    /// <returns>
    /// The scrap quantity.
    /// </returns>
    public Qty getFullQuantity()
    {
        return inventTransferParmLine.QtyReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventTransferUpdateType</Name>
				<Source><![CDATA[
    public InventTransferUpdateType getInventTransferUpdateType()
    {
        return InventTransferUpdateType::Receive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the quantity from the transaction line.
    /// </summary>
    /// <returns>
    ///    The quantity.
    /// </returns>
    /// <remarks>
    ///    If the transaction does not support quantities, 0 may be passed as the quantity. This will be used
    ///    to calculate taxes by unit.
    /// </remarks>
    public Qty getQuantity()
    {
        return inventTransferParmLine.QtyScrapNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getScrapPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the scrap percentage of the full quantity.
    /// </summary>
    /// <returns>
    /// The percentage
    /// </returns>
    public Percent getScrapPercent()
    {
        return this.getQuantity() / this.getFullQuantity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax direction.
    /// </summary>
    /// <returns>
    /// The tax direction
    /// </returns>
    public TaxDirection getTaxDirection()
    {
        return TaxDirection::OutgoingTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReceive</Name>
				<Source><![CDATA[
        public boolean isReceive()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isShipment</Name>
				<Source><![CDATA[
        public boolean isShipment()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>