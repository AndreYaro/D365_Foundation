<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IntrastatTransferFI</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Transfers intrastat in Finland country context.
/// </summary>
#ISOCountryRegionCodes
[IntrastatCountryRegion(#isoFI)]
class IntrastatTransferFI extends IntrastatTransfer implements BatchRetryable
{
    Map customerPostalAddressesByAccount = new Map(Types::String, Types::Record);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog box can be built by using the <c>Dialog</c> class or by using a class that is created in
    /// the Application Object Tree (AOT).
    /// </remarks>
    Object dialog()
    {
        dialog = super();

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromCustInvoiceJour</Name>
				<Source><![CDATA[
    public void loadFromCustInvoiceJour(IntrastatDirection _direction, CustInvoiceJour custInvoiceJour)
    {
        super(_direction, custInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromCustPckSlpJour</Name>
				<Source><![CDATA[
    public void loadFromCustPckSlpJour(IntrastatDirection _direction, CustPackingSlipJour  custPackingSlipJour)
    {
        super(_direction, custPackingSlipJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromProjInvoiceJour</Name>
				<Source><![CDATA[
    public void loadFromProjInvoiceJour(IntrastatDirection _direction, ProjInvoiceJour _projInvoiceJour)
    {
        super(_direction, _projInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromVendInvoiceIntrastat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Transfers the intrastat information from the <c>VendInvoiceIntrastat</c> table to the
    /// <c>Intrastat</c> table.
    /// </summary>
    /// <param name="_direction">
    /// The direction of intrastat transfer, which is either import or export.
    /// </param>
    /// <param name="_vendInvoiceJour">
    /// A <c>VendInvoiceJour</c> table buffer.
    /// </param>
    /// <param name="_invoiceTrans">
    /// true if the corresponding <c>VendInvoiceTrans</c> lines exist for the current
    /// <c>VendInvoiceJour</c> record otherwise, false.
    /// </param>
    /// <remarks>
    /// This method is called for each record in the <c>VendInvoiceJour</c> table. If a matching record is
    /// in the <c>VendInvoiceIntrastat</c> table, it is transferred to the <c>Intrastat</c> table.
    /// </remarks>
    public void loadFromVendInvoiceIntrastat(IntrastatDirection  _direction,
                                             VendInvoiceJour     _vendInvoiceJour,
                                             boolean             _invoiceTrans)
    {
        super(_direction, _vendInvoiceJour, _invoiceTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromVendInvoiceJour</Name>
				<Source><![CDATA[
    public void loadFromVendInvoiceJour(IntrastatDirection _direction, VendInvoiceJour vendInvoiceJour)
    {
        super(_direction, vendInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromVendPckSlpJour</Name>
				<Source><![CDATA[
    public void loadFromVendPckSlpJour(IntrastatDirection _direction, VendPackingSlipJour vendPackingSlipJour)
    {
        super(_direction, vendPackingSlipJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exportToBeIncludedCustInvoiceTrans</Name>
				<Source><![CDATA[
    protected boolean exportToBeIncludedCustInvoiceTrans(CustInvoiceJour         _custInvoiceJour,
                                                         CustInvoiceTrans        _custInvoiceTrans)
    {
        invoicePostalAddress = this.exportInvoicePostalAddress(_custInvoiceJour.InvoiceAccount, _custInvoiceJour.InvoicePostalAddress);

        deliveryPostalAddress = this.exportDeliveryPostalAddress(_custInvoiceJour.OrderAccount,
                                                                 _custInvoiceJour.DeliveryPostalAddress,
                                                                 _custInvoiceJour.SalesType,
                                                                 _custInvoiceTrans.InventTransId);

        return this.exportToBeIncluded(deliveryPostalAddress.CountryRegionId, _custInvoiceJour.RefNum, _custInvoiceTrans.CountryRegionOfShipment, invoicePostalAddress.CountryRegionId, _custInvoiceTrans.DeliveryType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exportToBeIncludedCustPckSlipTrans</Name>
				<Source><![CDATA[
    protected boolean exportToBeIncludedCustPckSlipTrans(CustPackingSlipJour     _custPackingSlipJour,
                                                         CustPackingSlipTrans    _custPackingSlipTrans)
    {
        invoicePostalAddress = this.exportInvoicePostalAddress(_custPackingSlipJour.InvoiceAccount, _custPackingSlipJour.InvoicePostalAddress);

        deliveryPostalAddress = this.exportDeliveryPostalAddress(_custPackingSlipJour.OrderAccount,
                                                                 _custPackingSlipJour.DeliveryPostalAddress,
                                                                 _custPackingSlipJour.SalesType,
                                                                 _custPackingSlipTrans.InventTransId);

        return this.exportToBeIncluded(deliveryPostalAddress.CountryRegionId, _custPackingSlipJour.RefNum, _custPackingSlipTrans.CountryRegionOfShipment, invoicePostalAddress.CountryRegionId, _custPackingSlipTrans.DeliveryType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>importToBeIncludedVendInvoiceTrans</Name>
				<Source><![CDATA[
    protected boolean importToBeIncludedVendInvoiceTrans(VendInvoiceJour     _vendInvoiceJour,
                                                         VendInvoiceTrans    _vendInvoiceTrans)
    {
        return this.importToBeIncluded(_vendInvoiceJour.OrderAccount, _vendInvoiceJour.CountryRegionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>importToBeIncludedVendPckSlipTrans</Name>
				<Source><![CDATA[
    protected boolean importToBeIncludedVendPckSlipTrans(VendPackingSlipJour     _vendPackingSlipJour,
                                                         VendPackingSlipTrans    _vendPackingSlipTrans)
    {
        return this.importToBeIncluded(_vendPackingSlipJour.OrderAccount, _vendPackingSlipJour.CountryRegionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntrastatFromCustInvoiceTrans</Name>
				<Source><![CDATA[
    protected Intrastat initIntrastatFromCustInvoiceTrans(CustInvoiceJour             _custInvoiceJour,
                                                          CustInvoiceTrans            _custInvoiceTrans,
                                                          CustInvoiceJour_Intrastat   _custInvoiceJour_Intrastat = null,
                                                          CustInvoiceTrans_Intrastat  _custInvoiceTrans_Intrastat = null)
    {
        return super(_custInvoiceJour, _custInvoiceTrans, _custInvoiceJour_Intrastat, _custInvoiceTrans_Intrastat);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntrastatFromCustPckSlpTrans</Name>
				<Source><![CDATA[
    protected Intrastat initIntrastatFromCustPckSlpTrans(CustPackingSlipJour             _custPackingSlipJour,
                                                         CustPackingSlipTrans            _custPackingSlipTrans,
                                                         CustPackingSlipJour_Intrastat   _custPackingSlipJour_Intrastat = null,
                                                         CustPackingSlipTrans_Intrastat  _custPackingSlipTrans_Intrastat = null)
    {
        return super(_custPackingSlipJour, _custPackingSlipTrans, _custPackingSlipJour_Intrastat, _custPackingSlipTrans_Intrastat);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntrastatFromProjInvoiceItem</Name>
				<Source><![CDATA[
    protected Intrastat initIntrastatFromProjInvoiceItem(ProjInvoiceJour         _projInvoiceJour,
                                                         ProjInvoiceItem         _projInvoiceItem)
    {
        return super(_projInvoiceJour, _projInvoiceItem); 
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntrastatFromVendInvoiceTrans</Name>
				<Source><![CDATA[
    protected Intrastat initIntrastatFromVendInvoiceTrans(VendInvoiceJour             _vendInvoiceJour,
                                                          VendInvoiceTrans            _vendInvoiceTrans,
                                                          VendInvoiceJour_Intrastat   _vendInvoiceJour_Intrastat = null,
                                                          VendInvoiceTrans_Intrastat  _vendInvoiceTrans_Intrastat = null)
    {
        Intrastat intrastat = super(_vendInvoiceJour, _vendInvoiceTrans, _vendInvoiceJour_Intrastat, _vendInvoiceTrans_Intrastat);

        intrastat.State = _vendInvoiceTrans.DestState;
        intrastat.County = _vendInvoiceTrans.DestCounty;

        return intrastat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntrastatFromVendPckSlpTrans</Name>
				<Source><![CDATA[
    protected Intrastat initIntrastatFromVendPckSlpTrans(VendPackingSlipJour             _vendPackingSlipJour,
                                                         VendPackingSlipTrans            _vendPackingSlipTrans,
                                                         VendPackingSlipJour_Intrastat   vendPackingSlipJour_Intrastat = null,
                                                         VendPackingSlipTrans_Intrastat  vendPackingSlipTrans_Intrastat = null)
    {
        Intrastat intrastat = super(_vendPackingSlipJour, _vendPackingSlipTrans, vendPackingSlipJour_Intrastat, vendPackingSlipTrans_Intrastat);

        intrastat.State = _vendPackingSlipTrans.DestState;
        intrastat.County = _vendPackingSlipTrans.DestCounty;

        return intrastat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>