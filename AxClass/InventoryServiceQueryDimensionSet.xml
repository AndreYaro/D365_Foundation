<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventoryServiceQueryDimensionSet</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContract]
internal final class InventoryServiceQueryDimensionSet
{
    private str batchId;
    private str sizeId;
    private str configId;
    private str colorId;
    private str styleId;
    private str siteId;
    private str locationId;
    private str wMSLocationId;
    private str serialId;
    private str licensePlateId;
    private str statusId;
    private str customDimension1;
    private str customDimension2;
    private str customDimension3;
    private str customDimension4;
    private str customDimension5;
    private str customDimension6;
    private str customDimension7;
    private str customDimension8;
    private str customDimension9;
    private str customDimension10;
    private str versionId;
    private str customDimension11;
    private str customDimension12;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmConfigId</Name>
				<Source><![CDATA[
    [DataMember('ConfigId')]
    public str parmConfigId(str _configId = configId)
    {
        configId = _configId;
        return configId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSizeId</Name>
				<Source><![CDATA[
    [DataMember('SizeId')]
    public str parmSizeId(str _sizeId = sizeId)
    {
        sizeId = _sizeId;
        return sizeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmColorId</Name>
				<Source><![CDATA[
    [DataMember('ColorId')]
    public str parmColorId(str _colorId = colorId)
    {
        colorId = _colorId;
        return colorId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStyleId</Name>
				<Source><![CDATA[
    [DataMember('StyleId')]
    public str parmStyleId(str _styleId = styleId)
    {
        styleId = _styleId;
        return styleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSiteId</Name>
				<Source><![CDATA[
    [DataMember('SiteId')]
    public str parmSiteId(str _siteId = siteId)
    {
        siteId = _siteId;
        return siteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocationId</Name>
				<Source><![CDATA[
    [DataMember('LocationId')]
    public str parmLocationId(str _locationId = locationId)
    {
        locationId = _locationId;
        return locationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBatchId</Name>
				<Source><![CDATA[
    [DataMember('BatchId')]
    public str parmBatchId(str _batchId = batchId)
    {
        batchId = _batchId;
        return batchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWMSLocationId</Name>
				<Source><![CDATA[
    [DataMember('WMSLocationId')]
    public str parmWMSLocationId(str _wMSLocationId = wMSLocationId)
    {
        wMSLocationId = _wMSLocationId;
        return wMSLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSerialId</Name>
				<Source><![CDATA[
    [DataMember('SerialId')]
    public str parmSerialId(str _serialId = serialId)
    {
        serialId = _serialId;
        return serialId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLicensePlateId</Name>
				<Source><![CDATA[
    [DataMember('LicensePlateId')]
    public str parmLicensePlateId(str _licensePlateId = licensePlateId)
    {
        licensePlateId = _licensePlateId;
        return licensePlateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatusId</Name>
				<Source><![CDATA[
    [DataMember('StatusId')]
    public str parmStatusId(str _statusId = statusId)
    {
        statusId = _statusId;
        return statusId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension1</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension1')]
    public str parmCustomDimension1(str _customDimension1 = customDimension1)
    {
        customDimension1 = _customDimension1;
        return customDimension1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension2</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension2')]
    public str parmCustomDimension2(str _customDimension2 = customDimension2)
    {
        customDimension2 = _customDimension2;
        return customDimension2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension3</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension3')]
    public str parmCustomDimension3(str _customDimension3 = customDimension3)
    {
        customDimension3 = _customDimension3;
        return customDimension3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension4</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension4')]
    public str parmCustomDimension4(str _customDimension4 = customDimension4)
    {
        customDimension4 = _customDimension4;
        return customDimension4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension5</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension5')]
    public str parmCustomDimension5(str _customDimension5 = customDimension5)
    {
        customDimension5 = _customDimension5;
        return customDimension5;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension6</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension6')]
    public str parmCustomDimension6(str _customDimension6 = customDimension6)
    {
        customDimension6 = _customDimension6;
        return customDimension6;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension7</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension7')]
    public str parmCustomDimension7(str _customDimension7 = customDimension7)
    {
        customDimension7 = _customDimension7;
        return customDimension7;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension8</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension8')]
    public str parmCustomDimension8(str _customDimension8 = customDimension8)
    {
        customDimension8 = _customDimension8;
        return customDimension8;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension9</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension9')]
    public str parmCustomDimension9(str _customDimension9 = customDimension9)
    {
        customDimension9 = _customDimension9;
        return customDimension9;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension10</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension10')]
    public str parmCustomDimension10(str _customDimension10 = customDimension10)
    {
        customDimension10 = _customDimension10;
        return customDimension10;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVersionId</Name>
				<Source><![CDATA[
    [DataMember('VersionId')]
    public str parmVersionId(str _versionId = versionId)
    {
        versionId = _versionId;
        return versionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension11</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension11')]
    public str parmCustomDimension11(str _customDimension11 = customDimension11)
    {
        customDimension11 = _customDimension11;
        return customDimension11;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomDimension12</Name>
				<Source><![CDATA[
    [DataMember('CustomDimension12')]
    public str parmCustomDimension12(str _customDimension12 = customDimension12)
    {
        customDimension12 = _customDimension12;
        return customDimension12;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRelatedOnHandCheckTable</Name>
				<Source><![CDATA[
    public InventoryServiceOnHandCheckTable findRelatedOnHandCheckTable(InventInventoryDataServiceDiagnosticsLogType _type, str _companyId, str _itemId)
    {
        InventoryServiceOnHandCheckTable onHandCheckTable;
        switch (_type)
        {
            case (InventInventoryDataServiceDiagnosticsLogType::Aggregation) :
                select forupdate firstonly1 onHandCheckTable
                    where (onHandCheckTable.Type == InventInventoryDataServiceDiagnosticsLogType::Aggregation
                        || onHandCheckTable.Type == InventInventoryDataServiceDiagnosticsLogType::WHS)
                    && onHandCheckTable.ItemId == _itemId
                    && onHandCheckTable.InventSiteId == siteId
                    && onHandCheckTable.InventLocationId == locationid;
                break;
            
            default :
                throw error("The other kinds of log type have not been implemented.");
        }

        return onHandCheckTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>