<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgFormPickControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>JmgFormPickControl</c> class supports the <c>JmgTimeCalcParameters</c> form.
/// </summary>
class JmgFormPickControl
{
    boolean             isListBoxCtrl;
    FormRadioControl    radioCtrl;
    FormListBoxControl  listboxCtrl;
    int                 _enumnum;
    container           entriesAllowed;
    int                 entryMap[];
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>expandContainer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the entries that are allowed on the calculation parameters form.
    /// </summary>
    private void expandContainer()
    {
        container   resultContainer;
        int         wrkStart;
        int         wrkEnd;
        Types       itemtype;

        container addDistinct(container inCont,int inEntry)
        {
            if (! confind(inCont,inEntry))
                inCont += inEntry;

            return inCont;
        }

        while (conlen(entriesAllowed))
        {
            itemtype = typeof(conpeek(entriesAllowed,1));
            switch (itemtype)
            {
                case Types::Integer :
                    resultContainer = addDistinct(resultContainer,conpeek(entriesAllowed,1));
                    break;

                case Types::Container :
                    [wrkStart, wrkEnd] = conpeek(entriesAllowed,1);
                    for (wrkstart = wrkstart;wrkstart <= wrkEnd;wrkstart++)
                        resultContainer = addDistinct(resultContainer,wrkstart);
                    break;
            }
            entriesAllowed      = condel(entriesAllowed,1,1);
        }
        entriesAllowed          = resultContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertListBoxItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the list box items allowed on the time calculation parameters form.
    /// </summary>
    private void insertListBoxItems()
    {
        int                 arrayIndex;
        int                 wrkIndex;
        DictEnum            dictEnum    = new DictEnum(_enumnum);

        if (isListBoxCtrl)
        {
            listboxCtrl.label(dictEnum.label());
            listboxCtrl.helpText(dictEnum.help());
        }
        else
        {
            radioCtrl.caption(dictEnum.label());
            radioCtrl.helpText(dictEnum.help());
        }

        for (arrayIndex = 1; arrayIndex <= conlen(entriesAllowed); arrayIndex++)
        {
            wrkIndex    = conpeek(entriesAllowed,arrayIndex);
            if (isListBoxCtrl)
            {
                listboxCtrl.add(dictEnum.index2Label(wrkIndex));
            }
            else
            {
                radioCtrl.add(dictEnum.index2Label(wrkIndex));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>JmgFormPickControl</c> object.
    /// </summary>
    /// <param name="inCtrl">
    ///    The control that is used to display the pick controls.
    /// </param>
    /// <param name="in_enumnum">
    ///    The enumeration which the pick controls are based.
    /// </param>
    /// <param name="inentriesAllowed">
    ///    The allowed entries.
    /// </param>
    /// <exception cref="M:Exception::Error">
    ///    The specified control is not a <c>FormListBoxControl</c> object or a <c>FormRadioControl</c> object.
    /// </exception>
    void new(FormControl inCtrl, int  in_enumnum, container inentriesAllowed)
    {
        if (SysDictClass::isEqualOrSuperclass(inCtrl.handle(),classnum(FormListBoxControl)))
        {
            isListBoxCtrl   = true;
            listboxCtrl     = inCtrl;
        }
        else
        if (SysDictClass::isEqualOrSuperclass(inCtrl.handle(),classnum(FormRadioControl)))
        {
            isListBoxCtrl   = false;
            radioCtrl       = inCtrl;
        }
        else
        {
            throw error("@SYS55194");
        }

        _enumnum            = in_enumnum;
        entriesAllowed      = inentriesAllowed;

        this.expandContainer();
        this.insertListBoxItems();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedEnumNo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the selected enumeration values.
    /// </summary>
    /// <param name="_no">
    /// The enumeration number value to retrieve.
    /// </param>
    /// <returns>
    /// the selected enumeration values.
    /// </returns>
    int selectedEnumNo(int _no = 0)
    {
        int wrkIndex;

        if (prmisdefault(_no))
            _no = (isListBoxCtrl ? listboxCtrl.selection() : radioCtrl.selection()) + 1;

        wrkIndex = conpeek(entriesAllowed,_no);

        return wrkIndex;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>