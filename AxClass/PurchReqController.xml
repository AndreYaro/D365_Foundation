<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchReqController</c> class is the controller class for the <c>PurchReq</c> SSRS report.
/// </summary>
public class PurchReqController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override this method to change the report contract before you run the report.
    /// </summary>
    protected void preRunModifyContract()
    {
        PurchReqContract        contract;
        PurchReqTableVersion    purchReqTableVersion;

        if (!this.parmArgs().record())
        {
            throw error("@SYS26348");
        }
        else
        {
            purchReqTableVersion = this.parmArgs().record();
        }

        if (purchReqTableVersion)
        {
            contract = this.parmReportContract().parmRdpContract() as PurchReqContract;

            if (contract)
            {
                contract.parmRecordId(purchReqTableVersion.RecId);
                contract.parmVersioningTimeStamp(purchReqTableVersion.VersionDateTime);
                contract.parmRequisitionPurpose(purchReqTableVersion.RequisitionPurpose());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PurchReqController construct()
    {
        return new PurchReqController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        SrsReportRunController controller  = PurchReqController::construct();
        controller.parmArgs(_args);
        controller.parmReportName(ssrsReportStr(Purchreq, Report));
        controller.parmShowDialog(false);
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>