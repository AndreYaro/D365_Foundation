<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxEInvoiceRefCust_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxEInvoiceRefCust_IT extends AxInternalBase
{
    EInvoiceRefCust_IT EInvoiceRefCust_IT;
}

]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _EInvoiceRefCust_IT = EInvoiceRefCust_IT)
    {
        if (!prmisdefault(_EInvoiceRefCust_IT))
        {
            super(_EInvoiceRefCust_IT);
            EInvoiceRefCust_IT = _EInvoiceRefCust_IT;
        }
        else
        {
            super();
        }

        return EInvoiceRefCust_IT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eInvoiceRefCust_IT</Name>
				<Source><![CDATA[
    public EInvoiceRefCust_IT eInvoiceRefCust_IT(EInvoiceRefCust_IT _eInvoiceRefCust_IT = eInvoiceRefCust_IT)
    {
        if (!prmisdefault(_eInvoiceRefCust_IT))
        {
            this.setCurrentRecordFromExternal(_eInvoiceRefCust_IT);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    protected Common emptyRecord()
    {
        EInvoiceRefCust_IT localEInvoiceRefCust_IT;
        ;
        return localEInvoiceRefCust_IT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEInvoice</Name>
				<Source><![CDATA[
    public RefRecId parmEInvoice(RefRecId _eInvoice = 0)
    {
        if (!prmisdefault(_eInvoice))
        {
            this.setField(fieldNum(EInvoiceRefCust_IT, EInvoice), _eInvoice);
        }

        return eInvoiceRefCust_IT.EInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoice</Name>
				<Source><![CDATA[
    public RefRecId parmInvoice(RefRecId _invoice = 0)
    {
        if (!prmisdefault(_invoice))
        {
            this.setField(fieldNum(EInvoiceRefCust_IT, Invoice), _invoice);
        }

        return eInvoiceRefCust_IT.Invoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxEInvoiceRefCust_IT construct()
    {
        return new AxEInvoiceRefCust_IT();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newEInvoiceRefCust_IT</Name>
				<Source><![CDATA[
    public static AxEInvoiceRefCust_IT newEInvoiceRefCust_IT(EInvoiceRefCust_IT _EInvoiceRefCust_IT)
    {
        AxEInvoiceRefCust_IT AxEInvoiceRefCust_IT = AxEInvoiceRefCust_IT::construct();
        ;
        AxEInvoiceRefCust_IT.EInvoiceRefCust_IT(_EInvoiceRefCust_IT);

        return AxEInvoiceRefCust_IT;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>