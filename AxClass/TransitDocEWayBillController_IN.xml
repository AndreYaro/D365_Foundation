<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransitDocEWayBillController_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Controller for maintaining the transit document attached to a transaction.
/// </summary>
/// <remarks>
/// Currently the controller class is only for the <c>TransitDocumentEWayBill_IN</c>
/// </remarks>
public class TransitDocEWayBillController_IN
{
    TransitDocumentManager_IN   manager;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>attachForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Attaches the document to specified transaction.
    /// </summary>
    /// <param name="_trans">
    /// The transaction table, to which the document will be attached.
    /// </param>
    /// <param name="_selectedForm">
    /// The transit documents.
    /// </param>
    /// <param name="_canUpdateStatus">
    /// The flag is to judge whether e-way bill status can be updated.
    /// It also indicates whether the method is invoked by E-Way bill button in Transfer order history form (true)
    /// or Setup -> E-Way bill button in Shipment/Receive form (false).
    /// </param>
    /// <remarks>
    /// When _canUpdateStatus is true, it is invoked by E-Way bill button in Transfer order history form.
    /// It can update e-way bill status, but can't create new e-way bill.
    /// When _canUpdateStatus is false, it is invoked by Setup -> E-Way bill button in Shipment/Receive form.
    /// If it doesn't find any related e-way bill or only finds e-way bill with empty e-way bill number,
    /// it will create new e-way bill; otherwise , it will attach existing e-way bill.
    /// </remarks>
    private void attachForm(Common _trans, TmpTransitDocumentEWayBill_IN _selectedForm, boolean _canUpdateStatus)
    {
        TransitDocumentEWayBill_IN  formToAttach;

        formToAttach = TransitDocumentEWayBill_IN::findByTmpEWayBill(_selectedForm);

        if (!formToAttach.RecId || (!formToAttach.EWayBillNo && !_canUpdateStatus))
        {
            formToAttach.clear();
            formToAttach.initFromTmpEWayBill(_selectedForm);
            formToAttach.insert();
        }
        else if (_canUpdateStatus)
        {
            formToAttach.updateStatusTo(_selectedForm.Status);
        }
        else
        {
            if (formToAttach.Status == TaxGSTEWayBillStatus_IN::Cancelled)
            {
                throw error(strFmt("@TaxGSTEWayBill:EWayBillAttachedErrorMessage", formToAttach.EWayBillNo));
            }
        }

        manager.addTransitDocument(_trans, formToAttach);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAttachedForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the list of transit document of the e-way bill type from the specified transaction.
    /// </summary>
    /// <param name="_trans">
    /// The transaction.
    /// </param>
    /// <returns>
    /// Returns a list of transit document from the specified transaction.
    /// </returns>
    private List findAttachedForms(Common _trans)
    {
        List                        result;
        TransitDocumentEWayBill_IN  formSample;

        result = new List(Types::Record);

        // Forms inward
        formSample.Direction = TaxGSTEWayBillBasis_IN::Inward;
        result.appendList(manager.findTransitDocuments(_trans, formSample));

        // Forms outward
        formSample.Direction = TaxGSTEWayBillBasis_IN::Outward;
        result.appendList(manager.findTransitDocuments(_trans, formSample));

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    private void init()
    {
        TransitDocumentType_IN  typeLocal;

        select firstOnly RecId from typeLocal
        where typeLocal.RefTableId == tableNum(TransitDocumentEWayBill_IN);

        if (typeLocal.RecId == 0)
        {
            TransitDocumentTransactionRuleHelper_IN::initRule();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(TransitDocumentManager_IN _manager)
    {
        manager = _manager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processRemovedEInvoiceEWayBills</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the removed E-way bills associated with a source transaction.
    /// </summary>
    /// <param name = "_trans">Source transaction.</param>
    public void processRemovedEInvoiceEWayBills(Common _trans)
    {
        manager.processRemovedEInvoiceEWayBill(_trans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeAttachedForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes the list of transit document of the e-way bill type from the specified transaction.
    /// </summary>
    /// <param name="_trans">
    /// The transaction.
    /// </param>
    public void removeAttachedForms(Common _trans)
    {
        TransitDocumentEWayBill_IN  formInward,
                                    formOutward;

        formInward.Direction    = TaxGSTEWayBillBasis_IN::Inward;
        formOutward.Direction   = TaxGSTEWayBillBasis_IN::Outward;

        manager.removeTransitDocuments(_trans, formInward);
        manager.removeTransitDocuments(_trans, formOutward);
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendSelectedForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Appends forms selected from the "available" list to the "attached" list.
    /// </summary>
    /// <param name="_selectedFormList">
    /// The selected forms.
    /// </param>
    /// <param name="_attachedForms">
    /// The temp table buffer for the "attached" list.
    /// </param>
    /// <returns>
    /// The temp table buffer for updated "attached" list.
    /// </returns>
    public client static TmpTransitDocumentEWayBill_IN appendSelectedForms(
        List                            _selectedFormList,
        TmpTransitDocumentEWayBill_IN   _attachedForms)
    {
        ListEnumerator                  listEnumerator;
        TmpTransitDocumentEWayBill_IN   selectedForm;
        TmpTransitDocumentEWayBill_IN   attachedForm;
        TmpTransitDocumentEWayBill_IN   formToAppend;

        ttsBegin;

        attachedForm.setTmpData(_attachedForms);
        formToAppend.setTmpData(_attachedForms);

        listEnumerator = _selectedFormList.getEnumerator();
        while (listEnumerator.moveNext())
        {
            selectedForm = listEnumerator.current();

            select attachedForm
                where attachedForm.EwayBillTypes == selectedForm.EwayBillTypes
                   && attachedForm.Direction     == selectedForm.Direction;

            if (attachedForm)
            {
                throw Global::error("@SYP4880657");
            }

            formToAppend.clear();
            formToAppend.Direction     = selectedForm.Direction;
            formToAppend.EwayBillTypes = selectedForm.EwayBillTypes;
            formToAppend.Type          = selectedForm.Type;
            formToAppend.Status        = TaxGSTEWayBillStatus_IN::Active;
            formToAppend.insert();
        }

        ttsCommit;

        return formToAppend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>confirmFormAttachmentChanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Confirms the changes to the e-way bill of the specified transaction.
    /// </summary>
    /// <param name="_trans">
    /// The transaction record.
    /// </param>
    /// <param name="_attachedForm">
    /// The e-way bill list to be updated for the transaction.
    /// </param>
    public server static void confirmFormAttachmentChanges(
        Common                          _trans,
        TmpTransitDocumentEWayBill_IN   _attachedForm)
    {
        TransitDocEWayBillController_IN::confirmFormAttachmentChangesV2(_trans, _attachedForm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of <c>TransitDocEWayBillController_IN</c>.
    /// </summary>
    /// <param name="_manager">
    /// The manager for maintaining transit document in the backend.
    /// </param>
    /// <returns>
    /// A new instance of <c>TransitDocEWayBillController_IN</c>.
    /// </returns>
    public static TransitDocEWayBillController_IN newController(
        TransitDocumentManager_IN   _manager)
    {
        TransitDocEWayBillController_IN     controller;

        controller = new TransitDocEWayBillController_IN(_manager);

        controller.init();

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateAttachedForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populate the temp table data source with forms attached to the specified transaction.
    /// </summary>
    /// <param name="_trans">
    /// The transaction record.
    /// </param>
    /// <returns>
    /// A temp table buffer containing attached forms.
    /// </returns>
    public server static TmpTransitDocumentEWayBill_IN populateAttachedForms(Common _trans)
    {
        TransitDocEWayBillController_IN     controller;
        List                                formList;
        ListEnumerator                      listEnumerator;
        TransitDocumentEWayBill_IN          currentForm;
        TmpTransitDocumentEWayBill_IN       attachedForm;

        controller = TransitDocEWayBillController_IN::newController(TransitDocumentManager_IN::newManager());

        formList = controller.findAttachedForms(_trans);
        listEnumerator = formList.getEnumerator();

        ttsBegin;
        while (listEnumerator.moveNext())
        {
            currentForm = listEnumerator.current();

            attachedForm.clear();
            attachedForm.initFromEWayBill(currentForm);
            attachedForm.insert();
        }
        ttsCommit;
        return attachedForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateAvailableForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populate the temp table data source with available forms.
    /// </summary>
    /// <param name="_taxType">
    /// The tax type for filtering the forms.
    /// </param>
    /// <returns>
    /// A temp table buffer containing all available forms.
    /// </returns>
    public server static TmpTransitDocumentEWayBill_IN populateAvailableForms(
        TaxType_IN _taxType)
    {
        TaxGSTEwaybillTypes_IN          ewayBillType;
        TmpTransitDocumentEWayBill_IN   availableForm;

        while select ewayBillType
            where ewayBillType.TaxType == _taxType
        {
            availableForm.clear();
            availableForm.initFromEWayBillType(ewayBillType);
            availableForm.insert();
        }

        return availableForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeSelectedForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Remove selected forms from the "attached" list.
    /// </summary>
    /// <param name="_selectedFormList">
    /// The selected forms.
    /// </param>
    /// <param name="_attachedForms">
    /// The attached forms.
    /// </param>
    /// <returns>
    /// The updated attached forms.
    /// </returns>
    public client static TmpTransitDocumentEwaybill_IN removeSelectedForms(
        List                            _selectedFormList,
        TmpTransitDocumentEwaybill_IN   _attachedForms)
    {
        ListEnumerator                  listEnumerator;
        TmpTransitDocumentEwaybill_IN   selectedForm;
        TmpTransitDocumentEwaybill_IN   formToRemove;

        ttsBegin;

        formToRemove.setTmpData(_attachedForms);

        listEnumerator = _selectedFormList.getEnumerator();
        while (listEnumerator.moveNext())
        {
            selectedForm = listEnumerator.current();

            delete_from formToRemove
                where formToRemove.RecId == selectedForm.RecId;
        }

        ttsCommit;

        return formToRemove;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs document transition from the source transaction to the target transaction.
    /// </summary>
    /// <param name="_source">
    /// The source transaction
    /// </param>
    /// <param name="_target">
    /// The target transaction
    /// </param>
    public void transit(Common _source, Common _target)
    {
        TransitDocumentEWayBill_IN  formInward,
                                    formOutward,
                                    currentForm,
                                    newForm;
        List                        list;
        ListEnumerator              listEnumerator;

        if (_target.RecId
            && TransitDocumentTransactionRule_IN::existRuleByTransAndTransitDoc(_source.TableId, tableNum(TransitDocumentEWayBill_IN))
            && TransitDocumentTransactionRule_IN::existRuleByTransAndTransitDoc(_target.TableId, tableNum(TransitDocumentEWayBill_IN)))
        {
            ttsBegin;

            this.removeAttachedForms(_target);

            if (_source.RecId)
            {

                formInward.Direction    = TaxGSTEWayBillBasis_IN::Inward;
                formOutward.Direction   = TaxGSTEWayBillBasis_IN::Outward;

                // Add E-way bill
                list = manager.findTransitDocuments(_source, formInward);
                list.appendList(manager.findTransitDocuments(_source, formOutward));
                listEnumerator = list.getEnumerator();
                while (listEnumerator.moveNext())
                {
                    currentForm = listEnumerator.current();

                    newForm = TransitDocumentEWayBill_IN::findOrCreateReverseForm(currentForm);

                    manager.addTransitDocument(_target, newForm);
                }
            }

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEWayBillStatusByJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the status of E-way bills attached to stock transfer order.
    /// </summary>
    /// <param name = "_inventTransferJour">Table <c>InventTransferJour</c>.</param>
    /// <param name = "_status">The status to be updated for attached E-way bill.</param>
    public static void updateEWayBillStatusByJournal(InventTransferJour _inventTransferJour, TaxGSTEWayBillStatus_IN _status)
    {
        TransitDocEWayBillController_IN controller = TransitDocEWayBillController_IN::newController(TransitDocumentManager_IN::newManager());

        List formList = controller.findAttachedForms(_inventTransferJour);

        ListEnumerator formListEnumerator = formList.getEnumerator();

        ttsbegin;

        while (formListEnumerator.moveNext())
        {
            TransitDocumentEWayBill_IN updateEWayBill = formListEnumerator.current();

            if (_inventTransferJour.UpdateType == InventTransferUpdateType::Shipment
                && _status == TaxGSTEWayBillStatus_IN::Cancelled)
            {
                if (updateEWayBill.canUpdateStatusTo(_status) || !updateEWayBill.Status)
                {
                    updateEWayBill.updateStatusTo(_status);
                }
                else
                {
                    throw error(strFmt("@TaxGSTEWayBill:EWayBillCancelledErrorMessage", enum2Str(updateEWayBill.Status)));
                }
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>confirmFormAttachmentChangesV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Confirms the changes to the e-way bill of the specified transaction version 2.
    /// </summary>
    /// <param name="_trans">
    /// The transaction record.
    /// </param>
    /// <param name="_attachedForm">
    /// The e-way bill list to be updated for the transaction.
    /// </param>
    /// <param name="_isFromJournalForm">
    /// The flag to judge if e-way bill.
    /// </param>
    public server static void confirmFormAttachmentChangesV2(
        Common                          _trans,
        TmpTransitDocumentEWayBill_IN   _attachedForm,
        boolean                         _isFromJournalForm = false)
    {
        TransitDocEWayBillController_IN controller;

        ttsBegin;

        controller = TransitDocEWayBillController_IN::newController(TransitDocumentManager_IN::newManager());

        // Remove all attached forms
        controller.removeAttachedForms(_trans);

        // Add forms in the grid
        while select _attachedForm
        {
            controller.attachForm(_trans, _attachedForm, _isFromJournalForm);
        }

        // Remove E-Invoice E-Way bills corresponding to removed E-Way bills.
        controller.processRemovedEInvoiceEWayBills(_trans);

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>