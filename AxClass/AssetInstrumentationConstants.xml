<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetInstrumentationConstants</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// For tracking common constant variable used throughout Fixed Asset telemetry.
/// </summary>
internal static class AssetInstrumentationConstants
{
    // Namespace
    internal const str InstrumentationNamespace = 'Asset';


    // Unique name for Asset Cache Telemetry---------->
    internal const str AssetCache = 'AssetCache';

    // Custom property names for Asset Cache
    internal const str AssetTransCacheFillingNoOfRecords = 'NumberOfCachedTransactions';
    // <------------Asset Cache Telemetry

    // Unique name for Asset Depreciation Proposal Run Telemetry---------->
    internal const str AssetDepreciationProposalRun = 'AssetProposalDepreciation.Run';
    
    // Custom property names for Asset Depreciation Proposal Run
    internal const str BuildTasks = 'RuntimeForBuildingBatchTasks';
    internal const str CalculateDepreciation = 'RuntimeForAllDepreciationProposalWithoutPosting';
    internal const str DepreciationPostJournal = 'RuntimeForPostingJournal';
    internal const str AssetTableMethodCalc = 'RuntimeForCalculatingDepreciationMethods';
    internal const str AssetTableMethodCalcReportingCur = 'RuntimeForCalculatingDepreciationMethodsRepCur';
    internal const str ConsumeTransListTime = 'RuntimeForConsumingJournalLines';
    internal const str NoOfDepreciationJournalLines = 'NumberOfCreatedJournalLines';
    internal const str NoOfAssetsInJournal = 'NumberOfAssetsInJournal';
    internal const str MaxBooksInDepreciationProposalJournal = 'MaxBooksInDepreciationProposalJournal';
    internal const str MaxBooksInSumDepreciationProposalJournal = 'MaxBooksInSumDepreciationProposalJournal';
    internal const str ElapsedTimeForCatchUpDepreciation = 'RuntimeForCatchUpDepreciation';
    internal const str ElapsedTimeForAllLocalFunc_JP = 'RuntimeForAllJapanFunctionality_JP';
    internal const str ElapsedTimeForAllocation_JP = 'RuntimeForAllocations_JP';
    internal const str ElapsedTimeForDocuments_JP = 'RuntimeForDocuments_JP';
    // <------------Asset Depreciation Proposal Run Telemetry

    // Constants for AssetPost class telemetry
    internal const str AssetMustBeSpecified = 'Asset posting check: Fixed asset must be specified';
    internal const str BookMustBeSpecified = 'Asset posting check: Book must be specified';
    internal const str TransactionTypeMustBeSpecified = 'Asset posting check: Fixed asset transaction type must be specified';
    internal const str DerogatoryBookDoesNotAssign = 'Asset posting check: Derogatory book does not properly assign';
    internal const str BookDoesNotExistForFixedAsset = 'Asset posting check: Book does not exists for fixed asset';
    internal const str TransactionTypeIsNotSupported = 'Asset posting check: Transaction type is not supported';
    internal const str FANeedsToBePostedInDecember = 'Asset posting check: Fixed asset acquired on January 1 needs to be posted on December previous year';
    internal const str TransTypeCanNotBePostedToFAWithCurrentStatus = 'Asset posting check: This transaction type cannot be posted to the fixed asset with current status';
    internal const str FAWithCurrentStatusCanNotBeDisposed = 'Asset posting check: Fixed asset in current status cannot be disposed';
    internal const str FAWithCurrentStatusCanNotBeDepreciated = 'Asset posting check: Fixed asset in current status cannot be depreciated';
    internal const str DisposedFACanNotBeDepreciated = 'Asset posting check: Disposed fixed asset cannot be depreciated';
    internal const str BookHasBeenSoldOrScrapped = 'Asset posting check: Book has been sold or scrapped';
    internal const str BookHasNotBeenSetupForDepreciation = 'Asset posting check: Book has not been setup for depreciation';
    internal const str AcquisitionDoesNotExistForBook = 'Asset posting check: Acquisition does not exists';
    internal const str FiscalPeriodIsNotOpen = 'Asset posting check: Fiscal period is not open';
    internal const str NetBookValueWillBeNegative = 'Asset posting check: Net book value will be negative';
    internal const str NetBookValueHigherThanAcquisition = 'Asset posting check: Net book value will be higher then acquisition cost';
    internal const str FACanNotBeDisposedOnThatDate = 'Asset posting check: Fixed asset cannot be disposed on that date due to last depreciation date';
    internal const str DisposalEarlierThanAcquisition = 'Asset posting check: The disposal date cannot be earlier than the acquisition date';
    internal const str SpecialDepreciationIsNotAllowed = 'Asset posting check: Depreciation for fixed asset already exists. Special depreciation is not allowed';
    internal const str FACanNotBeAdjusted = 'Asset posting check: Fixed asset cannot be adjusted in last depreciation period if depreciation convention is none';
    internal const str ConsumptionQuantityMustBeSpecified = 'Asset posting check: Consumption quantity must be specified';
    internal const str TransactionCannotBePostedToLowValuePool = 'Asset posting check: Transaction cannot be posted to low value pool';
    internal const str ReductionEntryAmountIsOverLimitation = 'Asset posting check: Reduction entry amount is over limitation';
    internal const str AcquisitionAlreadyExists = 'Asset posting check: Acquisition already exists'; 
    internal const str GroupMustBeSpecified = 'Asset posting check: Fixed asset group must be specified';
    internal const str DiscrepancyBetweenJournalAndBookPostingLayers = 'Asset posting check: Discrepancy between journal and book posting layers';
    // <------------Constants for AssetPost class telemetry

    internal const str DuplicateAssetTransFound = 'Duplicate asset transaction is found. RecId: %1. Is fixed: %2.';

    // Constants for AssetTransLedgerDimensionPopulateTask class telemetry
    internal const str AssetTransLedgerDimensionPopulateTaskRun = 'AssetTransLedgerDimensionPopulateTask.Run';
    internal const str CountOfLedgerDimensionRecIdDuplicates = 'CountOfLedgerDimensionRecIdDuplicates';
    internal const str MissingLedgerDimensionRecords = 'MissingLedgerDimensionRecords';
    // <------------Constants for AssetTransLedgerDimensionPopulateTask class telemetry

    // Constants for AssetReportingCurrencyEnablementDataMaintenanceAction class telemetry
    internal const str AssetReportingCurrencyEnablementDataMaintenanceActionOpportunityResult = 'AssetReportingCurrencyEnablementDataMaintenanceAction.OpportunityResult';
    internal const str DoesReportingCurrencyDebitAndCreditValuesExist = 'DoesReportingCurrencyDebitAndCreditValuesExist';
    // <------------Constants for AssetReportingCurrencyEnablementDataMaintenanceAction class telemetry

    // Constants for one voucher feature log
    internal const str AssetOneVoucherFeatureLog = 'AssetOneVoucherFeatureLog';
    internal const str Split = 'Split';
    internal const str DisposalWithDepreciationAdj = 'DisposalWithDepreciationAdj';
    internal const str TrueUpDepreciation = 'TrueUpDepreciation';
    // <------------Constants for one voucher feature log

    // Constants for positive depreciation scenario
    internal const str AssetPositiveDepreciation = 'AssetPositiveDepreciation';
    internal const str AssetPositiveDepreciationIsUsed = 'Fixed assets positive depreciation is used.';
    // <------------Constants for positive depreciation scenario

    // Constants for Asset balance report
    internal const str AssetBalanceReportColumnsDPRun = 'AssetBalanceReportColumnsDP.processReport';
    internal const str ProcessReport = 'ProcessReport';
    internal const str FromDate = 'FromDate';
    internal const str ToDate = 'ToDate';
    internal const str FromToDateDifference = 'FromToDateDifference';
    internal const str IsBookParameterUsed = 'IsBookParameterUsed';
    internal const str IsGroupParameterUsed = 'IsGroupParameterUsed';
    internal const str IsNumberParameterUsed = 'IsNumberParameterUsed';
    // <------------Constants for Asset balance report

}
]]></Declaration>
		<Methods />
	</SourceCode>
</AxClass>