<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceGetSelectedInvoiceAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

[DataContract]
[SysCopilotChatActionDefinition(identifierStr(MS.ServerForm.VendInvoiceCopilot.GetSelectedInvoice), 'Get selected vendor invoice', 'Returns selected vendor invoice number', 'VendInvoiceGetSelectedInvoiceAction', MenuItemType::Action)]
[ExportMetadata(formStr(VendInvoiceInfoListPage), identifierStr(FormName))]
[ExportMetadata('VendInvoiceCenterWorkspace', identifierStr(FormName))]
[ExportMetadata('VendInvoiceList', identifierStr(FormName))]
[Export(identifierstr(Microsoft.Dynamics.AX.Application.SysCopilotChatAction))]
public final class VendInvoiceGetSelectedInvoiceAction extends SysCopilotChatAction implements SysCopilotIPromptGuideProvider
{
    private const str metricNamespace = 'VendorInvoiceCopilot';
    private const str actionName = 'MS.ServerForm.VendInvoiceCopilot.GetSelectedInvoice';
    private str invoiceId;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInvoiceId</Name>
				<Source><![CDATA[
    [DataMember('invoiceId'),
     SysCopilotChatActionOutputParameter('Selected vendor invoice number')]
    public str parmInvoiceId(str _invoiceId = invoiceId)
    {
        invoiceId = _invoiceId;
        return invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeAction</Name>
				<Source><![CDATA[
    public void executeAction(SysCopilotChatActionDefinitionAttribute _actionDefinition, object _context)
    {
        SysInstrumentationLogger logger = SysInstrumentationLoggerFactory::CreateLogger(classStr(VendInvoiceGetSelectedInvoiceAction));

        using (var context = logger.activityContext(actionName, metricNamespace))
        {
            if (VendInvoiceCopilotMatchProductReceiptFlight::instance().isEnabled())
            {
                FormRun formRun = _context as FormRun;
                FormDataSource vendInvoiceTable_ds = formRun.dataSource(tableStr(VendInvoiceInfoTable));
                MultiSelectionHelper selectionHelper = MultiSelectionHelper::construct();
 
                selectionHelper.parmDataSource(vendInvoiceTable_ds);
                VendInvoiceInfoTable vendInvoiceInfoTable = selectionHelper.getFirst();

                this.parmInvoiceId(vendInvoiceInfoTable.RecId ? vendInvoiceInfoTable.Num : '');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPromptGuide</Name>
				<Source><![CDATA[
    public SysCopilotPromptGuide getPromptGuide()
    {
        return new SysCopilotPromptGuide(SysCopilotPromptGuideCategory::Guidance, '@AccountsPayable:CopilotAnalyzeGuidance');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>