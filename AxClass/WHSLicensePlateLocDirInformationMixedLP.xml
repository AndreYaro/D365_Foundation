<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLicensePlateLocDirInformationMixedLP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WHSLicensePlateLocDirInformationMixedLP extends WHSLicensePlateLocDirInformation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    public Query buildQuery()
    {
        Query setFlagsRun = new Query();

        QueryBuildDataSource mixedLPLinesDS = setFlagsRun.addDataSource(tableNum(WHSMixedLicensePlateReceiptLine));
        mixedLPLinesDS.addRange(fieldNum(WHSMixedLicensePlateReceiptLine, MixedLPReceivingTable)).value(SysQuery::value(mixedLPRecId));

        QueryBuildDataSource inventDimDS = mixedLPLinesDS.addDataSource(tableNum(InventDim));
        inventDimDS.addLink(fieldNum(WHSMixedLicensePlateReceiptLine, InventDimId), fieldNum(InventDim, InventDimId));

        return setFlagsRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQtyOnLicensePlate</Name>
				<Source><![CDATA[
    public InventQty getQtyOnLicensePlate()
    {
        return WHSMixedLicensePlateReceipt::getTotalQtyOnLicensePlate(licensePlateId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateWeightVolume</Name>
				<Source><![CDATA[
    public void calculateWeightVolume(
        UnitOfMeasureSymbol _putawayUnitId,
        boolean             _flexibleContainerVolume)
    {
        WHSMixedLicensePlateReceiptLine mixedLPLines;

        while select InventTransId, InventQty, InventDimId from mixedLPLines
            where mixedLPLines.MixedLPReceivingTable == mixedLPRecId
        {
            ItemId itemId = InventTransOrigin::findByInventTransId(mixedLPLines.InventTransId).ItemId;

            this.addWeightVolumeTotals(itemId,
                                       mixedLPLines.InventQty,
                                       _putawayUnitId,
                                       InventTableModule::find(itemId, ModuleInventPurchSales::Invent).UnitId,
                                       mixedLPLines.InventDimId,
                                       _flexibleContainerVolume);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSLicensePlateLocDirInformationMixedLP construct()
    {
        WHSLicensePlateLocDirInformationMixedLP licensePlateLocDirInformationMixedLP = new WHSLicensePlateLocDirInformationMixedLP();

        return licensePlateLocDirInformationMixedLP;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>