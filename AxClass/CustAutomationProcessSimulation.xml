<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAutomationProcessSimulation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustAutomationProcessSimulation</c> class runs process simulation for Collections process automation.
/// </summary>
internal static class CustAutomationProcessSimulation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildContractForSimulation</Name>
				<Source><![CDATA[
    internal static CustAutomationContract buildContractForSimulation(CustAutomationStrategy _strategy, ProcessExecutionId _executionId)
    {
        CustAutomationContract contract = CustAutomationContract::construct();
        contract.parmCustAutomationStrategy(_strategy);
        contract.parmExecutionId(_executionId);

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>simulateInvoiceBuilderForProcess</Name>
				<Source><![CDATA[
    internal static void simulateInvoiceBuilderForProcess(CustAutomationContract _contract)
    {
        CustAutomationAssignmentTmp assignmentTmp = CustAutomationProcessAssignment::newForStrategy(_contract.parmCustAutomationStrategy().StrategyName);
        CustAutomationInvoiceBuilder::populateCustAutomationInvoice(_contract, assignmentTmp);
        CustAutomationProcessSimulation::updateInvoiceStatusToSimulation(_contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runSimulationForStrategy</Name>
				<Source><![CDATA[
    internal static void runSimulationForStrategy(CustAutomationStrategy _strategy)
    {
        CustAutomationContract contract = CustAutomationProcessSimulation::buildContractForSimulation(_strategy, newGuid());
        CustAutomationProcessSimulation::simulateInvoiceBuilderForProcess(contract);
        str menuItemName = menuItemDisplayStr(CustAutomationProcessHistory);

        Args args = new Args();
        args.parmObject(contract);
        args.menuItemName(menuItemName);

        new MenuFunction(menuItemName, MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInvoiceStatusToSimulation</Name>
				<Source><![CDATA[
    private static void updateInvoiceStatusToSimulation(CustAutomationContract _contract)
    {
        CustAutomationInvoice invoice;

        update_recordset invoice
            setting Status = CustAutomationInvoiceStatus::Simulation
            where invoice.StrategyName == _contract.parmCustAutomationStrategy().StrategyName
                && invoice.ExecutionId == _contract.parmExecutionId();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>