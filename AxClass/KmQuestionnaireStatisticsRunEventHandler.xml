<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KmQuestionnaireStatisticsRunEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class KmQuestionnaireStatisticsRunEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>KmQuestionnaireStatisticsRun_buildQueryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// The buildQueryRun delegate event handler for the KmQuestionnaireStatisticsRun class
    /// </summary>
    /// <param name = "_kmQuestionnaireStatisticsRun">KmQuestionnaireStatisticsRun class instance</param>
    /// <param name = "_profileQueryName">profile query Name</param>
    /// <param name = "_profileType">The profiletype value to set</param>
    /// <param name = "_profileTypeOld">The profiletype value</param>
    [SubscribesTo(classStr(KmQuestionnaireStatisticsRun), delegateStr(KmQuestionnaireStatisticsRun, buildQueryRun))]
    public static void KmQuestionnaireStatisticsRun_buildQueryRun(KmQuestionnaireStatisticsRun _kmQuestionnaireStatisticsRun, str _profileQueryName, KMQuestionnaireStatisticsProfileType _profileType, KMQuestionnaireStatisticsProfileType _profileTypeOld)
    {
        boolean createNewQuery;
        Query query;
        QueryRun profileQueryRun;

        switch (_profileQueryName)
        {
            case queryStr(KMQuestionnaireStatisticsVendor):
                if (_profileType != KMQuestionnaireStatisticsProfileType::Vendor)
                {
                    createNewQuery = true;
                }
                break;

            case queryStr(KMQuestionnaireStatisticsCustomer):
                if (_profileType != KMQuestionnaireStatisticsProfileType::Customer)
                {
                    createNewQuery = true;
                }
                break;
        }

        if (createNewQuery)
        {
            switch (_profileType)
            {
                case KMQuestionnaireStatisticsProfileType::Vendor:
                    if (_profileTypeOld != KMQuestionnaireStatisticsProfileType::Vendor)
                    {
                        query = new Query(queryStr(KMQuestionnaireStatisticsVendor));
                        profileQueryRun = new QueryRun(query);
                        _kmQuestionnaireStatisticsRun.parmProfileQueryRun(profileQueryRun);
                    }
                    break;

                case KMQuestionnaireStatisticsProfileType::Customer:
                    if (_profileTypeOld != KMQuestionnaireStatisticsProfileType::Customer)
                    {
                        query = new Query(queryStr(KMQuestionnaireStatisticsCustomer));
                        profileQueryRun = new QueryRun(query);
                        _kmQuestionnaireStatisticsRun.parmProfileQueryRun(profileQueryRun);
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>KmQuestionnaireStatisticsRun_findContactPersonByPartyRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// The findContactPersonByPartyRecId delegate event handler for the findContactPersonByPartyRecId class
    /// </summary>
    /// <param name = "_kmQuestionnaireStatisticsRun">KmQuestionnaireStatisticsRun class instance</param>
    /// <param name = "_partyRecId">RecId of a party</param>
    [SubscribesTo(classStr(KmQuestionnaireStatisticsRun), delegateStr(KmQuestionnaireStatisticsRun, findContactPersonByPartyRecId))]
    public static void KmQuestionnaireStatisticsRun_findContactPersonByPartyRecId(KmQuestionnaireStatisticsRun _kmQuestionnaireStatisticsRun, DirPartyRecId _partyRecId)
    {
        _kmQuestionnaireStatisticsRun.parmContactPersonRecId(ContactPerson::findByPartyRecId(_partyRecId).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>KmQuestionnaireStatisticsRun_setRelationWithRootDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// The setRelationWithRootDataSource delegate event handler for the setRelationWithRootDataSource class
    /// </summary>
    /// <param name = "_kmQuestionnaireStatisticsRun">KmQuestionnaireStatisticsRun class instance</param>
    /// <param name = "_profileType">The profiletype value to set</param>
    /// <param name = "_queryBuildDataSourceAdded">queryBuildDataSource object</param>
    [SubscribesTo(classStr(KmQuestionnaireStatisticsRun), delegateStr(KmQuestionnaireStatisticsRun, setRelationWithRootDataSource))]
    public static void KmQuestionnaireStatisticsRun_setRelationWithRootDataSource(KmQuestionnaireStatisticsRun _kmQuestionnaireStatisticsRun, KMQuestionnaireStatisticsProfileType _profileType, QueryBuildDataSource _queryBuildDataSourceAdded)
    {
        // Set the relationship between HcmPersonView and the profileQuery root datasource.
        switch (_profileType)
        {
            case KMQuestionnaireStatisticsProfileType::Vendor:
            case KMQuestionnaireStatisticsProfileType::Customer:
                _queryBuildDataSourceAdded.addLink(fieldNum(HcmPersonView, Party), fieldNum(ContactPerson, Party));
                _kmQuestionnaireStatisticsRun.parmQueryBuildDataSourceAdded(_queryBuildDataSourceAdded);
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>