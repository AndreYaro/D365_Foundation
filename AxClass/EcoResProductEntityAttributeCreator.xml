<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityAttributeCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductEntityAttributeCreator</c> class is used for creating
/// new product entity attributes and attribute types.
/// </summary>
public class EcoResProductEntityAttributeCreator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
	/// <summary>
    /// Creates a new instance of the <c>EcoResIProductEntityAttributeTableFieldsCreator</c> class.
    /// </summary>
    /// <returns>The new instance of the <c>EcoResIProductEntityAttributeTableFieldsCreator</c> class.</returns>
    public static EcoResProductEntityAttributeCreator construct()
    {
        return new EcoResProductEntityAttributeCreator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateProductEntityAttribute</Name>
				<Source><![CDATA[
	/// <summary>
    /// Finds or creates the product entity attribute for the specified table field record. 
    /// </summary>
    /// <param name = "_tableFieldRecord">The table field record.</param>
    /// <returns>The name of the created attribute if one was created.</returns>
    public Name findOrCreateProductEntityAttribute(EcoResProductEntityAttributeTableField _tableFieldRecord)
    {
        Name attributeName = this.findProductEntityAssociatedAttributeName(_tableFieldRecord);

		if (!attributeName)
        {
            EcoResProductEntityAttributeNameProvider nameProvider = EcoResProductEntityAttributeNameProvider::construct();
            attributeName = nameProvider.getDefaultAttributeName(_tableFieldRecord.ApplicationTableId, _tableFieldRecord.ApplicationTableFieldId);

            if (attributeName)
            {
                if (this.attributeOrAttributeTypeExist(attributeName))
                {
                    attributeName = '';
                }
                else
                {
                    ttsbegin;

                    EcoResAttribute attribute = this.createProductEntityAttributeAndAttributeType(attributeName);
                    EcoResProductEntityAttributeTableFieldAssociator associator = EcoResProductEntityAttributeTableFieldAssociator::newFromAttributeTableField(_tableFieldRecord);
                    associator.createOrUpdateAttributeTableFieldAssociation(attribute);

                    ttscommit;
                }
            }
        }

        return attributeName; 
    }

]]></Source>
			</Method>
			<Method>
				<Name>findProductEntityAssociatedAttributeName</Name>
				<Source><![CDATA[
	private Name findProductEntityAssociatedAttributeName(EcoResProductEntityAttributeTableField _tableFieldRecord)
    {
        EcoResProductEntityAttributeTableFieldAssociation association =  EcoResProductEntityAttributeTableFieldAssociation::findByProductEntityAttributeTableFieldReference(_tableFieldRecord.RecId);

        if (association)
        {
            return EcoResAttribute::find(association.Attribute).Name;
        }
	
        return '';
	}

]]></Source>
			</Method>
			<Method>
				<Name>attributeOrAttributeTypeExist</Name>
				<Source><![CDATA[
    private boolean attributeOrAttributeTypeExist(Name _name)
    {
        EcoResAttributeType attributeType = EcoResAttributeType::findByName(_name);
        EcoResAttribute attribute;

        if (attributeType)
        {
            return true;
        }
		else
        {
            return EcoResAttribute::attributeWithNameAndModifierExists(_name, EcoResAttributeModifier::Product);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProductEntityAttributeAndAttributeType</Name>
				<Source><![CDATA[
    private EcoResAttribute createProductEntityAttributeAndAttributeType(Name _name)
    {
        EcoResAttributeType attributeType;
        attributeType.DataType = AttributeDataType::Text;
        attributeType.IsEnumeration = NoYes::No;
        attributeType.IsHidden = NoYes::No;
        attributeType.Name = _name;

        attributeType.insert();

        EcoResAttribute attribute;
        attribute.AttributeModifier = EcoResAttributeModifier::Product;
        attribute.AttributeType = attributeType.RecId;
        attribute.Name = attributeType.Name;

        attribute.insert();

        EcoResAttributeTranslation attributeTranslation;
        attributeTranslation.Attribute = attribute.RecId;
        attributeTranslation.Language = LanguageTable::defaultLanguage();
        attributeTranslation.FriendlyName = attribute.Name;

        attributeTranslation.insert();

        EcoResTextValue textValue;
        textValue.insert();
        EcoResAttributeDefaultValue::createEcoResValueAndDefaultValue(textValue, attribute);

        return attribute;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>