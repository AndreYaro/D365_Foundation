<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductData</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductData</c> class holds a product data.
/// </summary>
public class EcoResProductData
{
    private EcoResProductIdentificationData  identification;
    private EcoResProductReferenceGroupsData referenceGroups;
    private EcoResProductUnitsOfMeasureData  unitsOfMeasure;
    private EcoResProductVariantData         variant;
    private EcoResProductRetailData          retail;
    private EcoResProductTaxationData        taxation;
    private EcoResProductVendorData          vendor;
    private EcoResProductPricesData          prices;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>identification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product identification data.
    /// </summary>
    /// <returns>The product identification.</returns>
    public EcoResProductIdentificationData identification()
    {
        return identification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceGroups</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product reference groups data.
    /// </summary>
    /// <returns>The product reference groups.</returns>
    public EcoResProductReferenceGroupsData referenceGroups()
    {
        return referenceGroups;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitsOfMeasure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product units of measure data.
    /// </summary>
    /// <returns>The product units of measure.</returns>
    public EcoResProductUnitsOfMeasureData unitsOfMeasure()
    {
        return unitsOfMeasure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>variant</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product variant data.
    /// </summary>
    /// <returns>The product variant data.</returns>
    public EcoResProductVariantData variant()
    {
        return variant;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retail</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product retail data.
    /// </summary>
    /// <returns>The product retail data.</returns>
    public EcoResProductRetailData retail()
    {
        return retail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product taxation data.
    /// </summary>
    /// <returns>The product taxation data.</returns>
    public EcoResProductTaxationData taxation()
    {
        return taxation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product vendor data.
    /// </summary>
    /// <returns>The product vendor data.</returns>
    public EcoResProductVendorData vendor()
    {
        return vendor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prices</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product prices data.
    /// </summary>
    /// <returns>The product prices data.</returns>
    public EcoResProductPricesData prices()
    {
        return prices;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>EcoResProductData</c> class.
    /// </summary>
    /// <param name = "_isReleasedProduct">Is product a released product.</param>
    /// <returns>An instance of the <c>EcoResProductData</c> class.</returns>
    public static EcoResProductData construct(boolean _isReleasedProduct)
    {
        EcoResProductData productData = new EcoResProductData();
        productData.init(_isReleasedProduct);
        return productData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init(boolean _isReleasedProduct)
    {
        identification  = EcoResProductIdentificationData::construct(_isReleasedProduct);
        referenceGroups = EcoResProductReferenceGroupsData::construct(identification);
        unitsOfMeasure  = EcoResProductUnitsOfMeasureData::construct(identification);
        variant         = EcoResProductVariantData::construct(identification);
        retail          = EcoResProductRetailData::construct(identification);
        taxation        = EcoResProductTaxationData::construct(identification);
        vendor          = EcoResProductVendorData::construct(identification);
        prices          = EcoResProductPricesData::construct(identification);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>