<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalDocumentLine_BR_AppSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension of FiscalDocumentLine_BR table.
/// </summary>
[ExtensionOf(tableStr(FiscalDocumentLine_BR))]
public final class FiscalDocumentLine_BR_AppSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the inventory dimension for fiscal document line.
    /// </summary>
    /// <returns>
    /// Inventory dimension for fiscal document line.
    /// </returns>
    public display InventDimId displayInventDimId()
    {
        InventTransOrigin inventTransOrigin;
        InventTrans inventTrans;

        select firstOnly inventDimId from inventTrans
            where inventTrans.inventDimId
                && inventTrans.inventDimId != InventDim::inventDimIdBlank()
            exists join inventTransOrigin
                where inventTransOrigin.InventTransId == this.InventTransId
                    && inventTransOrigin.RecId == inventTrans.InventTransOrigin;

        return inventTrans.inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>origFiscalDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets original fiscal document line for return fiscal document line.
    /// </summary>
    /// <returns>An original <c>FiscalDocumentLine_BR</c> for which current fiscal document line is a return.</returns>
    public FiscalDocumentLine_BR origFiscalDocumentLine()
    {
        FiscalDocumentLine_BR origFiscalDocumentLine;

        switch (this.RefTableId)
        {
            case tableNum(CustInvoiceTrans):
                CustInvoiceTrans custInvoiceTransRet, custInvoiceTransOrig;
                SalesLine salesLineRet;

                select firstonly origFiscalDocumentLine
                    exists join custInvoiceTransOrig
                        where custInvoiceTransOrig.RecId == origFiscalDocumentLine.RefRecId
                            && custInvoiceTransOrig.TableId == origFiscalDocumentLine.RefTableId
                    exists join salesLineRet
                        where salesLineRet.InventTransIdReturn == custInvoiceTransOrig.InventTransId
                    exists join custInvoiceTransRet
                        where custInvoiceTransRet.InventTransId == salesLineRet.InventTransId
                            && custInvoiceTransRet.RecId == this.RefRecId;

                return origFiscalDocumentLine;
            case tableNum(VendInvoiceTrans):
                FiscalReferenceParm_BR fiscalReferenceParm;
                VendInvoiceJour vendInvoiceJourRet;
                VendInvoiceInfoTable vendInvoiceInfoTableRet;
                VendInvoiceTrans vendInvoiceTransRet, vendInvoiceTransOrig;
                FiscalDocument_BR fiscalDocumentOrig, fiscalDocumentRet;

                select firstonly RecId from fiscalDocumentOrig
                    exists join fiscalReferenceParm
                        where fiscalReferenceParm.RefRecID == fiscalDocumentOrig.RecId
                            && fiscalReferenceParm.RefTableId == fiscalDocumentOrig.TableId
                    exists join vendInvoiceInfoTableRet
                        where vendInvoiceInfoTableRet.RecId == fiscalReferenceParm.SourceRecId
                            && vendInvoiceInfoTableRet.TableId == fiscalReferenceParm.SourceTableId
                    exists join vendInvoiceJourRet
                        where vendInvoiceJourRet.ParmId == vendInvoiceInfoTableRet.ParmId
                    exists join fiscalDocumentRet
                        where fiscalDocumentRet.RefRecId == vendInvoiceJourRet.RecId
                            && fiscalDocumentRet.RefTableId == vendInvoiceJourRet.TableId
                            && fiscalDocumentRet.RecId == this.FiscalDocument;

                if (fiscalDocumentOrig.RecId)
                {
                    select firstonly origFiscalDocumentLine
                        where origFiscalDocumentLine.FiscalDocument == fiscalDocumentOrig.RecId
                        exists join vendInvoiceTransOrig
                            where vendInvoiceTransOrig.RecId == origFiscalDocumentLine.RefRecId
                                && vendInvoiceTransOrig.TableId == origFiscalDocumentLine.RefTableId
                        exists join vendInvoiceTransRet
                            where vendInvoiceTransRet.ItemId == vendInvoiceTransOrig.ItemId
                                && vendInvoiceTransRet.InventDimId == vendInvoiceTransOrig.InventDimId
                                && vendInvoiceTransRet.RecId == this.RefRecId;
                }

                return origFiscalDocumentLine;
            default:
                return null;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>