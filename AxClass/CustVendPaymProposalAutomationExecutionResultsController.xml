<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendPaymProposalAutomationExecutionResultsController</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>CustVendPaymProposalAutomationExecutionResultsController</c> class handles display properties and behaviors of execution results for
/// customer or vendor payment proposal automations.
/// </summary>
[Export(identifierStr(Dynamics.AX.Application.ProcessExecutionIResultsController))]
[ExportMetadata(extendedTypeStr(ProcessScheduleTypeName), 'VendPaymProposalAutomation')]
internal final class CustVendPaymProposalAutomationExecutionResultsController implements ProcessExecutionIResultsController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getResultsDialogContract</Name>
				<Source><![CDATA[
    [Hookable(false)]
    ProcessExecutionResultsDialogContract getResultsDialogContract()
    {
        ProcessExecutionResultsDialogContract dialogContract = ProcessExecutionResultsDialogContract::construct();
        dialogContract.parmShouldSourceLinkHeaderBeLinkToSourceLinkDetails(true);
        dialogContract.parmSourceLinkHeaderLabel("@SYS328705");

        return dialogContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>openSourceLinkDetails</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void openSourceLinkDetails(RefTableId _refTableId, RefRecId _refRecId)
    {
        if (_refRecId != 0 && _refTableId != 0 && _refTableId == tableNum(LedgerJournalTable))
        {
            SelectableDataArea company = this.getSeriesCompany(_refTableId, _refRecId);

            company = company ? company : curExt();

            if (company != curExt())
            {
                appl.setDefaultCompany(company, false);
            }

            LedgerJournalTable ledgerJournalTable = LedgerJournalTable::findByRecId(_refRecId);

            if (ledgerJournalTable.RecId != 0)
            {
                Args args = new Args();
                args.record(ledgerJournalTable);
                args.caller(this);
                
                MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(LedgerJournalTable5), MenuItemType::Display);
                menuFunction.run(args);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSeriesCompany</Name>
				<Source><![CDATA[
    private SelectableDataArea getSeriesCompany(RefTableId _refTableId, RefRecId _refRecId)
    {
        ProcessExecutionSourceLink sourceLink;
        ProcessScheduleSeriesPattern pattern;
        ProcessScheduleSeriesCompany seriesCompany;

        select firstonly LegalEntityId from seriesCompany
            exists join pattern
                where pattern.ProcessScheduleSeries == seriesCompany.ProcessScheduleSeries
            exists join sourceLink
                where sourceLink.ProcessScheduleSeriesPattern == pattern.RecId
                    && sourceLink.RefTableId == _refTableId
                    && sourceLink.RefRecId == _refRecId;
        
        return seriesCompany.LegalEntityId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>