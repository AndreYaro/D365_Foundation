<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransTaxInformationUIControllerSO</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller class for controlling all Sales Orders on new tax information UI and transaction update.
/// </summary>
[TransTaxInfoUIControllerAttribute(tableStr(SalesLine))]
public class TransTaxInformationUIControllerSO extends TransTaxInformationUIControllerAR
{
    SalesLine       salesLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform the preparative logics to set the UI and data on Tax information form.
    /// </summary>
    public void run()
    {
        super();

        if (salesLine.salesTable().SalesType == SalesType::ReturnItem && salesLine.InventTransIdReturn)
        {
            transTaxInformationDS.formRun().design().viewEditMode(ViewEditMode::View);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes UI controls and data source for Tax information form.
    /// </summary>
    protected void init()
    {
        if (sourceTable.TableId == tableNum(SalesLine))
        {
            salesLine = sourceTable as SalesLine;
        }
        
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToCustomsCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all customer ctrl tax controls on Tax information form.
    /// </summary>
    /// <remarks>
    /// To override and remove the parent logic
    /// </remarks>
    protected void setVisibleToCustomsCtrls()
    {}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>