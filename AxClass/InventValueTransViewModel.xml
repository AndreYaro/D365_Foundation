<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventValueTransViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>InventValueTransViewModel</c> is a view model for displaying cost entries.
/// </summary>
public class InventValueTransViewModel
{
    FormDateControl         fromDateControl;
    FormDateControl         toDateControl;
    FormDataSource          inventValueTransModelTable;
    InventValueTransModel   inventValueTransModel;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the view model.
    /// </summary>
    public void update()
    {
        inventValueTransModel.parmFromDate(fromDateControl.dateValue());
        inventValueTransModel.parmToDate(toDateControl.dateValue());
        inventValueTransModel.update();
        inventValueTransModelTable.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOnFormControlEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler that updates the view model.
    /// </summary>
    /// <param name = "_sender">
    /// The <c>FormControl</c> raising the event.
    /// </param>
    /// <param name = "_eventArgs">
    /// The <c>FormControlEventArgs</c> for the event.
    /// </param>
    public void updateOnFormControlEvent(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        this.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resolves the <c>InventDim</c> buffer.
    /// </summary>
    /// <param name = "_args">
    /// The instance of the <c>Args</c> class used to resolve the <c>InventDim</c>.
    /// </param>
    /// <returns>
    /// An <c>InventDim</c> buffer.
    /// </returns>
    private InventDim resolveInventDim(Args _args)
    {
        InventDim   InventDim;

        var inventDimDS = InventDim::callerInventDimDatasource(_args);

        if (inventDimDS)
        {
            inventDim = inventDimDS.cursor() as InventDim;
        }

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resolves the <c>ItemId</c>.
    /// </summary>
    /// <param name = "_args">
    /// The instance of the <c>Args</c> class used to resolve the <c>ItemId</c>.
    /// </param>
    /// <returns></returns>
    private ItemId resolveItemId(Args _args)
    {
        ItemId  itemId;

        var record = _args.record();

        switch (record.TableId)
        {
            case tableNum(InventTable):
                var inventTable = record as InventTable;
                itemId = inventTable.ItemId;
                break;

            case tableNum(InventSum):
                var inventSum = record as InventSum;
                itemId = inventSum.ItemId;
                break;
        }

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the view model.
    /// </summary>
    /// <param name = "_fromDateControl">
    /// The instance of the <c>FormDateControl</c> that implements the <c>FromDate</c> on the statement.
    /// </param>
    /// <param name = "_toDateControl">
    /// The instance of the <c>FormDateControl</c> that implements the <c>ToDate</c> on the statement.
    /// </param>
    /// <param name = "_inventValueTransModelTable">
    /// The instance of the <c>FormDataSource</c> that implements the <c>InventValueTransModelTable</c> table.
    /// </param>
    /// <param name = "_args">
    /// The instance of the <c>Args</c> class used to resolve the <c>InventDim</c> and <c>ItemId</c>.
    /// </param>
    private void initialize(
        FormDateControl     _fromDateControl,
        FormDateControl     _toDateControl,
        FormDataSource      _inventValueTransModelTable,
        Args                _args)
    {
        fromDateControl             = _fromDateControl;
        toDateControl               = _toDateControl;
        inventValueTransModelTable  = _inventValueTransModelTable;

        inventValueTransModel = InventValueTransModel::construct();
        inventValueTransModel.parmItemId(this.resolveItemId(_args));
        inventValueTransModel.parmInventDim(this.resolveInventDim(_args));
        inventValueTransModel.parmInventValueTransModelTable(inventValueTransModelTable.cursor());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>InventValueTransViewModel</c> class.
    /// </summary>
    /// <param name = "_fromDateControl">
    /// The instance of the <c>FormDateControl</c> that implements the <c>FromDate</c> on the statement.
    /// </param>
    /// <param name = "_toDateControl">
    /// The instance of the <c>FormDateControl</c> that implements the <c>ToDate</c> on the statement.
    /// </param>
    /// <param name = "_inventValueTransModelTable">
    /// The instance of the <c>FormDataSource</c> that implements the <c>InventValueTransModelTable</c> table.
    /// </param>
    /// <param name = "_args">
    /// The instance of the forms <c>Args</c> class.
    /// </param>
    /// <returns>
    /// An instance of the <c>InventValueTransViewModel</c> class.
    ///</returns>
    public static InventValueTransViewModel construct(
        FormDateControl     _fromDateControl,
        FormDateControl     _toDateControl,
        FormDataSource      _inventValueTransModelTable,
        Args                _args)
    {
        var inventValueTransViewModel = new InventValueTransViewModel();

        inventValueTransViewModel.initialize(_fromDateControl,
                                             _toDateControl,
                                             _inventValueTransModelTable,
                                             _args);

        return inventValueTransViewModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>