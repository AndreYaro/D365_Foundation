<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetReservationLookupForm_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetReservationLookupForm_PSN
{
    AccountingDate                          accountingDate;
    BudgetReservationRelievingDocument_PSN  budgetReservationRelievingDocument;
    BudgetReservationDocumentNumber_PSN     budgetReservationDocumentNumber;
    AgreementLineRecId                      agreementLineRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyHeaderLookupQueryFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the header query filters to the passed in query datasource builder.
    /// </summary>
    /// <param name="_budgetReservationHeaderQueryBuildDataSource">
    /// The query datasource builder to apply filters to.
    /// </param>
    public void applyHeaderLookupQueryFilters(QueryBuildDataSource _budgetReservationHeaderQueryBuildDataSource)
    {
        BudgetReservationFiltering_PSN::applyHeaderPostedRelievingDocDateFilters(
            _budgetReservationHeaderQueryBuildDataSource,
            budgetReservationRelievingDocument,
            accountingDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyLineLookupQueryFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the line query filters to the passed in query datasource builder.
    /// </summary>
    /// <param name="_budgetReservationLineQueryBuildDataSource">
    /// The query datasource builder to apply filters to.
    /// </param>
    public void applyLineLookupQueryFilters(QueryBuildDataSource _budgetReservationLineQueryBuildDataSource)
    {
        BudgetReservationFiltering_PSN::applyLinePostedAndOptionalHeaderFilters(_budgetReservationLineQueryBuildDataSource);
    
        if (budgetReservationRelievingDocument == BudgetReservationRelievingDocument_PSN::PurchaseRequisition
            && agreementLineRecId != 0
            && BudgetResLineAgreementLine_PSN::existsBudgetResLineForAgreementLine(agreementLineRecId))
        {
            BudgetReservationFiltering_PSN::applyLinePurchaseRequisitionAgreementLineFilter(
                _budgetReservationLineQueryBuildDataSource,
                agreementLineRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>budgetReservationDocumentNumberLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the lookup form when the user clicks on the document number drop down.
    /// </summary>
    /// <param name="_documentNumberFormControl">
    /// The form control that the user clicked.
    /// </param>
    public void budgetReservationDocumentNumberLookup(FormControl _documentNumberFormControl)
    {
        QueryBuildDataSource    queryBuildDataSource;
        Query                   query = new Query();
    
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(BudgetReservationHeader_PSN), _documentNumberFormControl);
    
        sysTableLookup.addLookupfield(fieldNum(BudgetReservationHeader_PSN, DocumentNumber));
        sysTableLookup.addLookupfield(fieldNum(BudgetReservationHeader_PSN, DocumentTitle));
    
        queryBuildDataSource = query.addDataSource(tableNum(BudgetReservationHeader_PSN));
    
        this.applyHeaderLookupQueryFilters(queryBuildDataSource);
    
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterForBudgetResHeaderSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add filters to the budget reservation line datasource based on the header document that the user selected.
    /// </summary>
    /// <param name="_budgetReservationLineQueryBuildDataSource">
    /// The budget reservation line query build data source to add the filters to.
    /// </param>
    public void filterForBudgetResHeaderSelection(QueryBuildDataSource _budgetReservationLineQueryBuildDataSource)
    {
        BudgetReservationHeader_PSN localBudgetReservationHeader;
    
        localBudgetReservationHeader = BudgetReservationHeader_PSN::findByDocumentNumber(budgetReservationDocumentNumber);
    
        _budgetReservationLineQueryBuildDataSource.clearRange(fieldNum(BudgetReservationLine_PSN, BudgetReservationHeader_PSN));
        _budgetReservationLineQueryBuildDataSource.addRange(fieldNum(BudgetReservationLine_PSN, BudgetReservationHeader_PSN)).value(queryValue(localBudgetReservationHeader.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDate</Name>
				<Source><![CDATA[
    public AccountingDate parmAccountingDate(AccountingDate _accountingDate = accountingDate)
    {
        accountingDate = _accountingDate;
    
        return accountingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementLineRecId</Name>
				<Source><![CDATA[
    public AgreementLineRecId parmAgreementLineRecId(AgreementLineRecId _agreementLineRecId = agreementLineRecId)
    {
        agreementLineRecId = _agreementLineRecId;
    
        return agreementLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetReservationDocumentNumber</Name>
				<Source><![CDATA[
    public BudgetReservationDocumentNumber_PSN parmBudgetReservationDocumentNumber(BudgetReservationDocumentNumber_PSN _budgetReservationDocumentNumber = budgetReservationDocumentNumber)
    {
        budgetReservationDocumentNumber = _budgetReservationDocumentNumber;
    
        return budgetReservationDocumentNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetReservationRelievingDocument</Name>
				<Source><![CDATA[
    public BudgetReservationRelievingDocument_PSN parmBudgetReservationRelievingDocument(BudgetReservationRelievingDocument_PSN _budgetReservationRelievingDocument = budgetReservationRelievingDocument)
    {
        budgetReservationRelievingDocument = _budgetReservationRelievingDocument;
    
        return budgetReservationRelievingDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BudgetReservationLookupForm_PSN construct()
    {
        BudgetReservationLookupForm_PSN budgetReservationLookupForm = new BudgetReservationLookupForm_PSN();
    
        return budgetReservationLookupForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromCallingTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the class variables based on the calling table for the <c>BudgetReservationLookup_PSN</c> form.
    /// </summary>
    /// <param name="_callingTable">
    /// The calling table for the <c>BudgetReservationLookup_PSN</c> form.
    /// </param>
    /// <returns>
    /// A new instance of the <c>BudgetReservationLookupForm_PSN</c> class.
    /// </returns>
    public static BudgetReservationLookupForm_PSN newFromCallingTable(Common _callingTable)
    {
        PurchLine                       purchLine;
        VendInvoiceInfoLine             vendInvoiceInfoLine;
        PurchReqLine                    purchReqLine;
        BudgetReservationLookupForm_PSN budgetReservationLookupForm = BudgetReservationLookupForm_PSN::construct();
    
        switch (_callingTable.TableId)
        {
            case purchLine.TableId :
                purchLine = _callingTable as PurchLine;
    
                budgetReservationLookupForm.parmAccountingDate(purchLine.purchTable().AccountingDate);
                budgetReservationLookupForm.parmBudgetReservationRelievingDocument(BudgetReservationRelievingDocument_PSN::PurchaseOrder);
            break;
    
            case vendInvoiceInfoLine.TableId :
                vendInvoiceInfoLine = _callingTable as VendInvoiceInfoLine;
    
                budgetReservationLookupForm.parmAccountingDate(vendInvoiceInfoLine.vendInvoiceInfoTable().TransDate);
                budgetReservationLookupForm.parmBudgetReservationRelievingDocument(BudgetReservationRelievingDocument_PSN::VendorInvoice);
            break;
    
            case purchReqLine.TableId :
                purchReqLine = _callingTable as PurchReqLine;
    
                budgetReservationLookupForm.parmAccountingDate(purchReqLine.TransDate);
                budgetReservationLookupForm.parmBudgetReservationRelievingDocument(BudgetReservationRelievingDocument_PSN::PurchaseRequisition);
                budgetReservationLookupForm.parmAgreementLineRecId(purchReqLine.PurchAgreement);
            break;
    
            default:
                throw error(error::wrongUseOfFunction(funcName()));
        }
    
        return budgetReservationLookupForm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>