<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxVendInvoiceInfoSubTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxVendInvoiceInfoSubTable extends AxInternalBase
{
    VendInvoiceInfoSubTable vendInvoiceInfoSubTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
        public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
        public Common currentRecord(Common _vendInvoiceInfoSubTable = vendInvoiceInfoSubTable)
    {
        if (!prmisdefault(_vendInvoiceInfoSubTable))
        {
            super(_vendInvoiceInfoSubTable);
            vendInvoiceInfoSubTable = _vendInvoiceInfoSubTable as VendInvoiceInfoSubTable;
        }

        return vendInvoiceInfoSubTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an empty record for the table that the <c>AxBC</c> class relates to.
    /// </summary>
    /// <returns>
    /// An empty record from the table that the <c>AxBC</c> class relates to.
    /// </returns>
    protected Common emptyRecord()
    {
        VendInvoiceInfoSubTable localVendInvoiceInfoSubTable;
        return localVendInvoiceInfoSubTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
        protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodstr(AxVendInvoiceInfoSubTable,parmTableRefId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigPurchId</Name>
				<Source><![CDATA[
        public PurchIdOrig parmOrigPurchId(PurchIdOrig _origPurchId = '')
    {
        if (!prmisdefault(_origPurchId))
        {
            this.setField(fieldnum(VendInvoiceInfoSubTable, OrigPurchId), _origPurchId);
        }

        return vendInvoiceInfoSubTable.OrigPurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTableRefId</Name>
				<Source><![CDATA[
        public TradeLineRefId parmTableRefId(TradeLineRefId _tableRefId = '')
    {
        if (!prmisdefault(_tableRefId))
        {
            this.setField(fieldnum(VendInvoiceInfoSubTable, TableRefId), _tableRefId);
        }

        return vendInvoiceInfoSubTable.TableRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrigPurchId</Name>
				<Source><![CDATA[
        protected void setOrigPurchId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendInvoiceInfoSubTable, OrigPurchId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
        protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setTableRefId();
        this.setOrigPurchId();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableRefId</Name>
				<Source><![CDATA[
        protected void setTableRefId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendInvoiceInfoSubTable, TableRefId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceInfoSubTable</Name>
				<Source><![CDATA[
        public VendInvoiceInfoSubTable vendInvoiceInfoSubTable(VendInvoiceInfoSubTable _vendInvoiceInfoSubTable = vendInvoiceInfoSubTable)
    {
        if (!prmisdefault(_vendInvoiceInfoSubTable))
        {
            this.setCurrentRecordFromExternal(_vendInvoiceInfoSubTable);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
        protected void write()
    {
        PurchTable purchTable = PurchTable::find(this.parmOrigPurchId());

        super();
        Markup::saveFromPurchOrder(purchTable, this.currentRecord(), purchTable.CurrencyCode);
        Markup::connectCustVendTo(purchTable, this.currentRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static AxVendInvoiceInfoSubTable construct()
    {
        return new AxVendInvoiceInfoSubTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newVendInvoiceInfoSubTable</Name>
				<Source><![CDATA[
        public static AxVendInvoiceInfoSubTable newVendInvoiceInfoSubTable(VendInvoiceInfoSubTable _vendInvoiceInfoSubTable)
    {
        AxVendInvoiceInfoSubTable axVendInvoiceInfoSubTable = AxVendInvoiceInfoSubTable::construct();

        axVendInvoiceInfoSubTable.vendInvoiceInfoSubTable(_vendInvoiceInfoSubTable);

        return axVendInvoiceInfoSubTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>