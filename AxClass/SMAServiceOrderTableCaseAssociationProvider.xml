<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAServiceOrderTableCaseAssociationProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Plug in for case associations.
/// </summary>
[ExportMetadataAttribute('CaseIAssociation', 'ServiceOrder'),ExportAttribute('Dynamics.AX.Application.CaseIAssociation')]
class SMAServiceOrderTableCaseAssociationProvider implements CaseIAssociation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertCaseAssociation</Name>
				<Source><![CDATA[
    public void insertCaseAssociation(CaseAssociation _caseAssociation)
    {
        SMAServiceOrderTable serviceOrderTable;
        select crosscompany CustAccount from serviceOrderTable where serviceOrderTable.RecId == _caseAssociation.RefRecId;

        CustTable custTable;
        select firstonly RecId from custTable where custTable.AccountNum == serviceOrderTable.CustAccount;
        if (custTable)
        {
            _caseAssociation.insertCaseAssociation(CaseEntityType::Customer, custTable.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedCompany</Name>
				<Source><![CDATA[
    public SelectableDataArea getLinkedCompany(RefRecId _parentRecId)
    {
        SMAServiceOrderTable serviceOrderTable;
        select crosscompany DataAreaId from serviceOrderTable where serviceOrderTable.RecId == _parentRecId;

        return serviceOrderTable.company();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedId</Name>
				<Source><![CDATA[
    public CaseAssociationLinkId getLinkedId(RefRecId _parentRecId)
    {
        SMAServiceOrderTable serviceOrderTable;
        select crosscompany ServiceOrderId from serviceOrderTable where serviceOrderTable.RecId == _parentRecId;

        return serviceOrderTable.ServiceOrderId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRecIdWithNaturalKey</Name>
				<Source><![CDATA[
    public RefRecId getRecIdWithNaturalKey(CaseAssociationLinkId _naturalKey)
    {
        SMAServiceOrderTable serviceOrderTable;
        select RecId from serviceOrderTable where serviceOrderTable.ServiceOrderId == _naturalKey;

        return serviceOrderTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedName</Name>
				<Source><![CDATA[
    public CaseLinkedName getLinkedName(RefRecId _parentRecId)
    {
        SMAServiceOrderTable serviceOrderTable;
        select crosscompany Description from serviceOrderTable where serviceOrderTable.RecId == _parentRecId;

        return serviceOrderTable.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJumpRefMenuItem</Name>
				<Source><![CDATA[
    public str getJumpRefMenuItem(args _args, CaseAssociation _association)
    {
        SMAServiceOrderTable serviceOrderTable;
        
        //We need this code in order not to lose the localization data in the opened form.
        SMAServiceOrderTable serviceOrderTableCrossCompany;

        select firstonly crosscompany DataAreaId, RecId from serviceOrderTableCrossCompany
            where serviceOrderTableCrossCompany.RecId == _association.RefRecId;

        if (serviceOrderTableCrossCompany.Recid)
        {
            changecompany (serviceOrderTableCrossCompany.DataAreaId)
            {
                select firstonly serviceOrderTable where serviceOrderTable.RecId == _association.RefRecId;
            }
        }

        _args.record(serviceOrderTable);
        return menuitemdisplaystr(SMAServiceOrderTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookup</Name>
				<Source><![CDATA[
    public void performLookup(FormStringControl callerControl, CaseAssociation _caseAssociation)
    {
        if (_caseAssociation.EntityType)
        {
            callerControl.performTypeLookup((new SysDictField(
                    tableNum(SMAServiceOrderTable),
                    fieldNum(SMAServiceOrderTable, ServiceOrderId)).typeId()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCaseEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the <c>CaseAssociation.getCaseEntityType()</c> event.
    /// </summary>
    /// <param name="_refTableId">
    /// The table ID of the table associated with the case.
    /// </param>
    /// <param name = "_eventArgs">
    /// The arguments for the event.
    /// </param>
    [SubscribesTo(tableStr(CaseAssociation), delegatestr(CaseAssociation, getCaseEntityType))]
    public static void getCaseEntityType(TableId _refTableId, CaseAssociationGetEntityTypeEventArgs _eventArgs)
    {
        if (_refTableId == tablenum(SMAServiceOrderTable))
        {
            _eventArgs.parmEntityType(CaseEntityType::ServiceOrder);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>