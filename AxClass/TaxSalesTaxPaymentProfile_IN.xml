<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSalesTaxPaymentProfile_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Saves some parameters for other object to use.
/// </summary>
public class TaxSalesTaxPaymentProfile_IN
{
    TaxReportHierarchyVersion_IN    setOffHierarchyVersion;
    TaxRegistrationNumbers_IN       regNumber;
    TaxRegistrationGroup_IN         regGroup;
    TaxPeriod                       taxPeriod;
    TaxAuthorityAddress             taxAuthority;
    TaxRepVersion                   taxRepVersion;
    boolean                         isCorrections;
    boolean                         usePLAInterimAccount;

    TransDate                       transactionDate;
    TransDate                       fromDate;
    TransDate                       taxPeriodFromDate;
    TransDate                       taxperiodToDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c> TaxSalesTaxPaymentProfile_IN </c>.
    /// </summary>
    /// <param name="_setOffHierarchyVersion">
    /// The instance of <c>TaxReportHierarchyVersion_IN</c> table.
    /// </param>
    /// <param name="_regNumber">
    /// The tax registration number.
    /// </param>
    /// <param name="_regGroup">
    /// The tax registration group.
    /// </param>
    /// <param name="_taxPeriod">
    /// The tax period.
    /// </param>
    /// <param name="_taxRepVersion">
    /// The tax version.
    /// </param>
    /// <param name="_fromDate">
    /// The from date.
    /// </param>
    /// <param name="_transactionDate">
    /// The transaction date.
    /// </param>
    /// <param name="_usePLAInterimAccount">
    /// This param is used to check whether use PLA interim account.
    /// </param>
    protected void new(
        TaxReportHierarchyVersion_IN    _setOffHierarchyVersion,
        TaxRegistrationNumbers_IN        _regNumber,
        TaxRegistrationGroup_IN         _regGroup,
        TaxPeriod                       _taxPeriod,
        TaxRepVersion                   _taxRepVersion,
        TransDate                       _fromDate,
        TransDate                       _transactionDate,
        boolean                         _usePLAInterimAccount)
    {
        TaxReportPeriod     taxReportPeriod;

        setOffHierarchyVersion = _setOffHierarchyVersion;
        regNumber = _regNumber;
        regGroup = _regGroup;
        taxPeriod = _taxPeriod;
        taxRepVersion = _taxRepVersion;
        fromDate = _fromDate;
        transactionDate = _transactionDate;
        usePLAInterimAccount = _usePLAInterimAccount;

        if (taxPeriod)
        {
            taxAuthority = TaxAuthorityAddress::find(taxAuthority.TaxAuthority);
        }

        if (taxPeriod && fromDate)
        {
            taxReportPeriod = TaxReportPeriod::find(taxPeriod, _fromDate);
            if (taxReportPeriod)
            {
                taxPeriodFromDate = taxReportPeriod.FromDate;
                taxPeriodToDate = taxReportPeriod.ToDate;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
        public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;

        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCorrections</Name>
				<Source><![CDATA[
        public boolean parmIsCorrections(boolean _isCorrections = isCorrections)
    {
        isCorrections = _isCorrections;
        return isCorrections;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSetOffHierarchyVersion</Name>
				<Source><![CDATA[
        public TaxReportHierarchyVersion_IN parmSetOffHierarchyVersion(
        TaxReportHierarchyVersion_IN _setOffHierarchyVersion = setOffHierarchyVersion)
    {
        setOffHierarchyVersion = _setOffHierarchyVersion;
        return setOffHierarchyVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxPeriod</Name>
				<Source><![CDATA[
        public TaxPeriod parmTaxPeriod(TaxPeriod _taxPeriod = taxPeriod)
    {
        taxPeriod = _taxPeriod;

        return taxPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRegistrationGroup</Name>
				<Source><![CDATA[
        public TaxRegistrationGroup_IN parmTaxRegistrationGroup(TaxRegistrationGroup_IN _regGroup = regGroup)
    {
        regGroup = _regGroup;
        return regGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRegistrationNumber</Name>
				<Source><![CDATA[
        public TaxRegistrationNumbers_IN parmTaxRegistrationNumber(TaxRegistrationNumbers_IN _regNumber = regNumber)
    {
        regNumber = _regNumber;
        return regNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRepVersion</Name>
				<Source><![CDATA[
        public TaxRepVersion parmTaxRepVersion(TaxRepVersion _taxRepVersion = taxRepVersion)
    {
        taxRepVersion = _taxRepVersion;
        return taxRepVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionDate</Name>
				<Source><![CDATA[
        public TransDate parmTransactionDate(TransDate _transactionDate = transactionDate)
    {
        transactionDate = _transactionDate;

        return transactionDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUsePLAInterimAccount</Name>
				<Source><![CDATA[
        public boolean parmUsePLAInterimAccount(boolean _usePLAInterimAccount = usePLAInterimAccount)
    {
        usePLAInterimAccount = _usePLAInterimAccount;
        return usePLAInterimAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAuthority</Name>
				<Source><![CDATA[
    /// <summary>
    /// Tax authority of the specified tax report period
    /// </summary>
    /// <returns>
    /// The tax authority
    /// </returns>
    public TaxAuthorityAddress taxAuthority()
    {
        return taxAuthority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxPeriodFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// The from date of the tax report period
    /// </summary>
    /// <returns>
    /// The from date
    /// </returns>
    public TransDate taxPeriodFromDate()
    {
        return taxPeriodFromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxPeriodToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// The to date of the tax report period
    /// </summary>
    /// <returns>
    /// The to date
    /// </returns>
    public TransDate taxPeriodToDate()
    {
        return taxPeriodToDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of <c> TaxSalesTaxPaymentProfile_IN </c>.
    /// </summary>
    /// <param name="_setOffHierarchyVersion">
    /// The instance of <c>TaxReportHierarchyVersion_IN</c> table.
    /// </param>
    /// <param name="_regNumber">
    /// The tax registration number.
    /// </param>
    /// <param name="_regGroup">
    /// The tax registration group.
    /// </param>
    /// <param name="_taxPeriod">
    /// The tax period.
    /// </param>
    /// <param name="_taxRepVersion">
    /// The tax version.
    /// </param>
    /// <param name="_fromDate">
    /// The from date.
    /// </param>
    /// <param name="_transactionDate">
    /// The transaction date.
    /// </param>
    /// <param name="_usePLAInterimAccount">
    /// This param is used to check whether use PLA interim account.
    /// </param>
    /// <returns>
    /// A new instance of <c> TaxSalesTaxPaymentProfile_IN </c>.
    /// </returns>
    public static TaxSalesTaxPaymentProfile_IN construct(
        TaxReportHierarchyVersion_IN    _setOffHierarchyVersion,
        TaxRegistrationNumbers_IN       _regNumber,
        TaxRegistrationGroup_IN         _regGroup,
        TaxPeriod                       _taxPeriod,
        TaxRepVersion                   _taxRepVersion,
        TransDate                       _fromDate,
        TransDate                       _transactionDate,
        boolean                         _usePLAInterimAccount)
    {
        TaxSalesTaxPaymentProfile_IN profile = new TaxSalesTaxPaymentProfile_IN(
            _setOffHierarchyVersion,
            _regNumber,
            _regGroup,
            _taxPeriod,
            _taxRepVersion,
            _fromDate,
            _transactionDate,
            _usePLAInterimAccount);

        return profile;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>