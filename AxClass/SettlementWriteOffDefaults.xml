<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SettlementWriteOffDefaults</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.AX.Platform.Extensibility;

/// <summary>
/// The <c>SettlementWriteOffDefaults</c> class provides invariant, module-specific defaults for use in settlement write off.
/// </summary>
[ExportInterfaceAttribute()]
internal abstract class SettlementWriteOffDefaults
{
    private LedgerJournalName journalName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doesBalanceQualifyForWriteOff</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the given balance qualifies for write off.
    /// </summary>
    /// <param name = "_balance">The given balance.</param>
    /// <returns>True if the balance qualifies for write off; otherwise, false.</returns>
    internal abstract boolean doesBalanceQualifyForWriteOff(AmountCur _balance)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the journal type associated with the module.
    /// </summary>
    /// <returns>The module journal type for payments.</returns>
    internal abstract LedgerJournalType getJournalType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the journal name for settlement write off.
    /// </summary>
    /// <returns>The journal name for settlement write off.</returns>
    internal LedgerJournalNameId getJournalName()
    {
        if (!journalName)
        {
            LedgerJournalNameId journalNameId = this.getSettleWriteOffJournalName();
            journalName = LedgerJournalName::find(journalNameId);
        }

        return journalName.JournalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLedgerJournalACType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ledger journal account type for payments.
    /// </summary>
    /// <returns>The ledger journal account type for payment.</returns>
    internal abstract LedgerJournalACType getLedgerJournalACType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModuleCustVend</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the module for customer or vendor.
    /// </summary>
    /// <returns>The customer or vendor module.</returns>
    internal abstract ModuleCustVend getModuleCustVend()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOpenTransactionTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the open transaction table id for the module.
    /// </summary>
    /// <returns>The open transaction table id.</returns>
    internal abstract TableId getOpenTransactionTableId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostingMenuFunction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the posting menu action for the module.
    /// </summary>
    /// <returns>The posting menu action.</returns>
    internal abstract MenuFunction getPostingMenuFunction()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSettleWriteOffJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the settlement write off journal name from the parameters for this module.
    /// </summary>
    /// <returns>The settlement write off journal name.</returns>
    internal abstract LedgerJournalNameId getSettleWriteOffJournalName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModuleLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the module label.
    /// </summary>
    /// <returns>The module label.</returns>
    internal abstract str getModuleLabel()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>