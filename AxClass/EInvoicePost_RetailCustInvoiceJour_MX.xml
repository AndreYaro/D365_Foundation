<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoicePost_RetailCustInvoiceJour_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>EInvoicePost_RetailCustInvoiceJour_MX</c> holds the retail specific logic for the <c>EInvoicePost_CustInvoiceJour_MX</c> table.
/// </summary>
public class EInvoicePost_RetailCustInvoiceJour_MX extends EInvoicePost_CustInvoiceJour_MX 
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPurpose</Name>
				<Source><![CDATA[
    protected EInvoiceExtCodeId_MX getPurpose()
    {
        EInvoiceExtCodeId_MX satCode = super();

        if (!satCode)
        {
            satCode = custInvoiceJour.custTable_InvoiceAccount().SATPurpose_MX;
            if (!satCode)
            {
                satCode = EInvoiceCFDIParameters_MX::find().getRetailPurpose();
            }
        }
        return satCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymMethod</Name>
				<Source><![CDATA[
    protected EInvoiceExtCodeId_MX getPaymMethod()
    {
        EInvoiceExtCodeId_MX satCode = super();

        if (!satCode)
        {
            satCode = custInvoiceJour.custTable_InvoiceAccount().SATPaymMethod_MX;
            if (!satCode)
            {
                satCode = EInvoiceCFDIParameters_MX::find().getRetailPaymMethod();
            }
        }
        return satCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInvoiceJour</Name>
				<Source><![CDATA[
    protected void initFromInvoiceJour()
    {
        super();

        eInvoiceJour.IsReturn = custInvoiceJour.SalesType == SalesType::ReturnItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCFDIReference</Name>
				<Source><![CDATA[
    protected void createCFDIReference()
    {
        super();
        
        if (eInvoiceJour.IsReturn && 
            EInvoiceCFDIParameters_MX::find().RetailEnableRelatedCFDIInReturns)
        {
            RetailEInvoiceCFDIRefProcessor_MX retailEInvoiceCFDIRefProcessor_MX = RetailEInvoiceCFDIRefProcessor_MX::construct(eInvoiceJour);

            if (retailEInvoiceCFDIRefProcessor_MX)
            {
                retailEInvoiceCFDIRefProcessor_MX.createCFDIStatementReference();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createElectronicInvoiceJour</Name>
				<Source><![CDATA[
    public void createElectronicInvoiceJour()
    {
        boolean success;
        
        System.Diagnostics.Stopwatch stopwatch = System.Diagnostics.Stopwatch::StartNew();
        RetailCFDITelemetry_MX::postNormalCFDIJourStart(funcName());
        int64 linesToProcess = this.linesToProcess();

        try
        {
            ttsbegin;
            super();

            RetailEInvoiceCFDICustInvoiceJourRefProcessor_MX::updateEInvoiceReturnReferences(eInvoiceJour.RecId);
            RetailEInvoiceCFDIRefProcessor_MX::reviseDraftReturnEInvoice(eInvoiceJour.RecId);
            ttscommit;
            success = true;
        }
        finally
        {
            stopwatch.Stop();
            RetailCFDITelemetry_MX::postNormalCFDIJourFinish(funcName(), success, stopwatch.ElapsedMilliseconds, linesToProcess);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>