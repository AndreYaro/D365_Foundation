<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RequisitionPurchaseOrderGenerationPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class holds the parameters for the purchase requisition purchase order generation policy parameters.
/// </summary>
class RequisitionPurchaseOrderGenerationPolicy
{
    boolean                             splitByRequisitioner;
    boolean                             splitByLineType;
    boolean                             splitByProductCategory;
    private boolean                     consolidateByAccountingDate;

    EcoResCategoryId                    procurementCategory;
    TransDate                           transDate;
    VendQuoteNumber                     vendQuoteNumber;
    VendAccount                         vendAccount;
    ProjId                              projId;
    AgreementHeaderRecId                purchAgreement;
    PurchReqRequesterRefRecId           requisitioner;
    PurchReqLineType                    purchReqLineType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeFromPurchReqPurchaseOrderGenerationRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the purchase order generation policy parameters from the <c>PurchReqPurchaseOrderGenerationRule</c> object.
    /// </summary>
    /// <param name = "_purchReqPurchaseOrderGenerationRule">A <c>PurchReqPurchaseOrderGenerationRule</c> record.</param>
    public void initializeFromPurchReqPurchaseOrderGenerationRule(PurchReqPurchaseOrderGenerationRule _purchReqPurchaseOrderGenerationRule)
    {
        if (_purchReqPurchaseOrderGenerationRule.hasPolicy())
        {
            PurchReqSourcingSplitRule purchReqSourcingSplitRule = _purchReqPurchaseOrderGenerationRule.purchReqSourcingSplitRule();
            this.parmSplitByRequisitioner(purchReqSourcingSplitRule.SplitByRequisitioner);
            this.parmSplitByLineType(purchReqSourcingSplitRule.SplitByLineType);
            this.parmSplitByProductCategory(purchReqSourcingSplitRule.SplitByProductCategory);
            this.parmConsolidateByAccountingDate(purchReqSourcingSplitRule.IsConsolidateByAccountingDate && !this.isBudgetControlEnabled());
        }
        else
        {
            this.parmSplitByRequisitioner(NoYes::No);
            this.parmSplitByLineType(NoYes::No);
            this.parmSplitByProductCategory(NoYes::No);
            this.parmConsolidateByAccountingDate(NoYes::No);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBudgetControlEnabled</Name>
				<Source><![CDATA[
    private boolean isBudgetControlEnabled()
    {
        return BudgetControlConfiguration::isControlConfigured() 
            && Ledger::isLedgerBudgetControlEnabled()
            && BudgetControlConfiguration::isSourceIntegratorEnabled(Ledger::current(), BudgetControlSourceIntegrator::PurchaseOrder);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCreatePurchaseOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the purchase order must be created based on the purchase order generation policy parameters and the purchase requisition sourcing policy rule.
    /// </summary>
    /// <param name = "_purchReqTmpSourcingPolicyRule">A <c>PurchReqTmpSourcingPolicyRule</c> record.</param>
    /// <returns>true if the the purchase order must be created; otherwise, false.</returns>
    public boolean mustCreatePurchaseOrder(PurchReqTmpSourcingPolicyRule _purchReqTmpSourcingPolicyRule)
    {
        return (this.parmVendQuoteNumber() != _purchReqTmpSourcingPolicyRule.VendQuoteNumber
            || this.parmPurchAgreement() != AgreementLine::find(_purchReqTmpSourcingPolicyRule.PurchAgreement).Agreement
            || this.parmVendAccount() != _purchReqTmpSourcingPolicyRule.VendAccount
            || (this.parmRequisitioner()  != _purchReqTmpSourcingPolicyRule.Requisitioner
                && this.parmSplitByRequisitioner())
            || (this.parmPurchReqLineType() != _purchReqTmpSourcingPolicyRule.LineType
                && this.parmSplitByLineType())
            || (this.parmProcurementCategory() != _purchReqTmpSourcingPolicyRule.ProcurementCategory
                && this.parmSplitByProductCategory())
            || (this.parmTransDate() != _purchReqTmpSourcingPolicyRule.TransDate
                && !this.parmConsolidateByAccountingDate())
            || (this.parmProjId() && !_purchReqTmpSourcingPolicyRule.ProjId)
            || (!this.parmProjId() && _purchReqTmpSourcingPolicyRule.ProjId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFromPurchReqTmpSourcingPolicyRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the purchase order generation policy parameters from the <c>PurchReqTmpSourcingPolicyRule</c> record.
    /// </summary>
    /// <param name = "_purchReqTmpSourcingPolicyRule">A <c>PurchReqTmpSourcingPolicyRule</c> record.</param>
    public void initializeFromPurchReqTmpSourcingPolicyRule(PurchReqTmpSourcingPolicyRule _purchReqTmpSourcingPolicyRule)
    {
        this.parmTransDate(_purchReqTmpSourcingPolicyRule.TransDate);
        this.parmVendQuoteNumber(_purchReqTmpSourcingPolicyRule.VendQuoteNumber);
        this.parmPurchAgreement(AgreementLine::find(_purchReqTmpSourcingPolicyRule.PurchAgreement).Agreement);
        this.parmVendAccount(_purchReqTmpSourcingPolicyRule.VendAccount);
        this.parmProjId(_purchReqTmpSourcingPolicyRule.ProjId);
        this.parmRequisitioner(_purchReqTmpSourcingPolicyRule.Requisitioner);
        this.parmPurchReqLineType(_purchReqTmpSourcingPolicyRule.LineType);
        this.parmProcurementCategory(_purchReqTmpSourcingPolicyRule.ProcurementCategory);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSplitByRequisitioner</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmSplitByRequisitioner(boolean _splitByRequisitioner = splitByRequisitioner)
    {
        splitByRequisitioner = _splitByRequisitioner;
        return splitByRequisitioner;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSplitByLineType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmSplitByLineType(boolean _splitByLineType = splitByLineType)
    {
        splitByLineType = _splitByLineType;
        return splitByLineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSplitByProductCategory</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmSplitByProductCategory(boolean _splitByProductCategory = splitByProductCategory)
    {
        splitByProductCategory = _splitByProductCategory;
        return splitByProductCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConsolidateByAccountingDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmConsolidateByAccountingDate(boolean _consolidateByAccountingDate = consolidateByAccountingDate)
    {
        consolidateByAccountingDate = _consolidateByAccountingDate;
        return consolidateByAccountingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcurementCategory</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public EcoResCategoryId parmProcurementCategory(EcoResCategoryId _procurementCategory = procurementCategory)
    {
        procurementCategory = _procurementCategory;
        return procurementCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public TransDate parmTransDate(TransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendQuoteNumber</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public VendQuoteNumber parmVendQuoteNumber(VendQuoteNumber _vendQuoteNumber = vendQuoteNumber)
    {
        vendQuoteNumber = _vendQuoteNumber;
        return vendQuoteNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendAccount</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public VendAccount parmVendAccount(VendAccount _vendAccount = vendAccount)
    {
        vendAccount = _vendAccount;
        return vendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchReqLineType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public PurchReqLineType parmPurchReqLineType(PurchReqLineType _purchReqLineType = purchReqLineType)
    {
        purchReqLineType = _purchReqLineType;
        return purchReqLineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ProjId parmProjId(ProjId _projId = projId)
    {
        projId = _projId;
        return projId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchAgreement</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public AgreementHeaderRecId parmPurchAgreement(AgreementHeaderRecId _purchAgreement = purchAgreement)
    {
        purchAgreement = _purchAgreement;
        return purchAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequisitioner</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public PurchReqRequesterRefRecId parmRequisitioner(PurchReqRequesterRefRecId _requisitioner = requisitioner)
    {
        requisitioner = _requisitioner;
        return requisitioner;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of <c>RequisitionPurchaseOrderGenerationPolicy</c> class.
    /// </summary>
    /// <returns>An instance of the <c>RequisitionPurchaseOrderGenerationPolicy</c> class.</returns>
    public static RequisitionPurchaseOrderGenerationPolicy construct()
    {
        return new RequisitionPurchaseOrderGenerationPolicy();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>