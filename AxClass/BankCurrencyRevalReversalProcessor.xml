<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankCurrencyRevalReversalProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankCurrencyRevalReversalProcessor</c> class handles the processing flow for Bank - foreign currency revaluation reversal records.
/// </summary>
internal final class BankCurrencyRevalReversalProcessor
{
    private BankCurrencyRevalReversalContract bankCurrencyRevalReversal;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the reversal of an existing Bank - foreign currency revaluation from the given <c>BankCurrencyRevalReversal</c> class instance.
    /// </summary>
    /// <param name = "_bankCurrencyRevalReversal">The <c>BankCurrencyRevalReversal</c> class instance that is used to drive the reversal processor.</param>
    internal void run(BankCurrencyRevalReversalContract bankCurrencyRevalReversalContract)
    {
        this.initialize(bankCurrencyRevalReversalContract);

        this.processReversal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(BankCurrencyRevalReversalContract _bankCurrencyRevalReversal)
    {
        bankCurrencyRevalReversal = _bankCurrencyRevalReversal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReversal</Name>
				<Source><![CDATA[
    private void processReversal()
    {
        BankCurrencyRevalHistory bankCurrencyRevalHistory = BankCurrencyRevalHistory::find(bankCurrencyRevalReversal.parmBankCurrencyRevalHistoryRecId());

        BankAccountTable bankAccountTableLocal = BankAccountTable::findByCompany(bankCurrencyRevalHistory.LegalEntity, bankCurrencyRevalHistory.BankAccountId);

        if (!BankCurrencyRevalTracking::lockBankAccountProcessingFCR(bankAccountTableLocal.RecId))
        {
            warning(strFmt("@CashManagement:BankCurrencyRevalRequireLockFailed", bankAccountTableLocal.AccountID));
            return;
        }

        try
        {
            ttsbegin;

            if (bankCurrencyRevalHistory.eligibleForReversal())
            {
                BankCurrencyRevalReversalDataInitializer reversalDataInitializer =
                BankCurrencyRevalReversalDataInitializer::newFromBankCurrencyRevalHistoryAndTransDate(bankCurrencyRevalHistory, bankCurrencyRevalReversal.parmTransDate());

                BankCurrencyRevalReversalPostingEngine reversalEngine;
                BankCurrencyRevalTmp bankCurrencyRevalTmp;

                if (FeatureStateProvider::isFeatureEnabled(BankCurrencyRevalEnhancementFeature::instance()))
                {
                    BankCurrencyRevalTmp bankCurrencyRevalTmpByDimension = reversalDataInitializer.createBankCurrencyRevalReversalDataByDimension();
                    bankCurrencyRevalTmp = reversalDataInitializer.createBankCurrencyRevalReversalData();
                    reversalEngine = BankCurrencyRevalReversalPostingEngine::newFromBankCurrencyRevalHistoryAndTempTableByDimension(bankCurrencyRevalHistory, bankCurrencyRevalTmpByDimension, bankCurrencyRevalTmp);
                }
                else
                {
                    bankCurrencyRevalTmp = reversalDataInitializer.createBankCurrencyRevalReversalData();
                    reversalEngine = BankCurrencyRevalReversalPostingEngine::newFromBankCurrencyRevalHistoryAndTempTable(bankCurrencyRevalHistory, bankCurrencyRevalTmp);
                }

                reversalEngine.run();
            }
            else
            {
                warning("@CashManagement:BankCurrencyRevalResetInvalidResetPostingDate");
            }

            ttscommit;
        }
        catch
        {
            exceptionTextFallThrough();
        }

        BankCurrencyRevalTracking::unlockBankAccountProcessingFCR(bankAccountTableLocal.RecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>