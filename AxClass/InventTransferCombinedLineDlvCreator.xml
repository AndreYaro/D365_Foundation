<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferCombinedLineDlvCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class provides API for creating or updating records in table <c>InventTransferCombinedLineDelivery</c>
/// </summary>
class InventTransferCombinedLineDlvCreator
{
    Map packageLinkedLines;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createOrUpdatePackageLinkOnTransferLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates the package information on table <c>InventTransferCombinedLineDelivery</c> for the transfer order lines
    /// </summary>
    /// <param name="_inventTransferLine">
    /// A instance of the transfer order line
    /// </param>
    /// <remarks>
    /// Map packageLinkedLines is a cached collection holding the TO lines already linked with the package.
    /// If the cached collection is not passed in, the method uses a query to see the TO line is package-linked.
    /// </remarks>
    public void createOrUpdatePackageLinkOnTransferLine(InventTransferLine _inventTransferLine)
    {
        RetailBuyersPushLineQty             retailBuyersPushLineQty;
        RetailBuyersPushLine                retailBuyersPushLine;
        RetailPackagePurch                  retailPackagePurch, retailPackagePurchTOLine;
        InventTransferCombinedLineDelivery  inventTransferCombinedLineDelivery;
        InventTransferLine                  inventTransferLinePackage;

        ttsBegin;

        select firstOnly retailBuyersPushLineQty
            where retailBuyersPushLineQty.RecId     == _inventTransferLine.RetailReplenishRefRecId
            &&    retailBuyersPushLineQty.TableId   == _inventTransferLine.RetailReplenishRefTableId;

        if (retailBuyersPushLineQty.RecId)
        {
            //now figure out how many packages the item corresponds to
            select firstOnly retailBuyersPushLine
                where retailBuyersPushLine.BuyersPushId == retailBuyersPushLineQty.BuyersPushId
                &&    retailBuyersPushLine.LineNum      == retailBuyersPushLineQty.LineNum;

            PurchLine purchLine = purchLine::findRecId(retailBuyersPushLine.RefRecId);

            select firstOnly retailPackagePurchTOLine
                where retailPackagePurchTOLine.PurchId    == purchLine.PurchId
                &&    retailPackagePurchTOLine.LineNum    == purchLine.RBOPackageLineNum
                &&    retailPackagePurchTOLine.PackageId  == purchLine.RetailPackageId;

            if (retailPackagePurchTOLine.RecId)
            {
                if (!packageLinkedLines)
                {
                    select firstOnly inventTransferCombinedLineDelivery
                        where inventTransferCombinedLineDelivery.TransferID == _inventTransferLine.TransferId
                        exists join inventTransferLinePackage
                        where inventTransferLinePackage.CombinedTransferOrderLineDelivery == inventTransferCombinedLineDelivery.RecId
                        &&    inventTransferLinePackage.TransferId == _inventTransferLine.TransferId
                        exists join retailBuyersPushLineQty
                        where retailBuyersPushLineQty.RecId     == inventTransferLinePackage.RetailReplenishRefRecId
                        &&    retailBuyersPushLineQty.TableId   == inventTransferLinePackage.RetailReplenishRefTableId
                        exists join retailBuyersPushLine
                        where retailBuyersPushLine.BuyersPushId == retailBuyersPushLineQty.BuyersPushId
                        &&    retailBuyersPushLine.LineNum      == retailBuyersPushLineQty.LineNum
                        exists join purchLine
                        where purchLine.RecId == retailBuyersPushLine.RefRecId
                        exists join retailPackagePurch
                        where retailPackagePurch.PurchId    == purchLine.PurchId
                        &&    retailPackagePurch.LineNum    == purchLine.RBOPackageLineNum
                        &&    retailPackagePurch.PackageId  == purchLine.RetailPackageId
                        &&    retailPackagePurch.RecId      == retailPackagePurchTOLine.RecId;
                }
                else
                {
                    if (packageLinkedLines.exists([retailPackagePurchTOLine.RecId, _inventTransferLine.TransferId]))
                    {
                        inventTransferCombinedLineDelivery = InventTransferCombinedLineDelivery::find(packageLinkedLines.lookup([retailPackagePurchTOLine.RecId, _inventTransferLine.TransferId]));
                    }
                }

                if (!inventTransferCombinedLineDelivery.recId)
                {
                    inventTransferCombinedLineDelivery.TransferID = _inventTransferLine.TransferId;
                    inventTransferCombinedLineDelivery.insert();

                    if (packageLinkedLines)
                    {
                        packageLinkedLines.insert([retailPackagePurchTOLine.RecId, _inventTransferLine.TransferId], inventTransferCombinedLineDelivery.RecId);
                    }
                }

                _inventTransferLine.CombinedTransferOrderLineDelivery = inventTransferCombinedLineDelivery.RecId;
            }
        }
        ttsCommit;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmPackageLinkedLines</Name>
				<Source><![CDATA[
    public Map parmPackageLinkedLines(Map _packageLinkedLines = packageLinkedLines)
    {
        packageLinkedLines = _packageLinkedLines;

        return packageLinkedLines;
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventTransferCombinedLineDlvCreator construct()
    {
        return new InventTransferCombinedLineDlvCreator();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
