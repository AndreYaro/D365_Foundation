<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleCommitFundsForExpProdExtPrice</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductRequisition), BusinessEvent_ProductRequisition::CommitBudgetFundsForExpensedProducts, MonetaryAmount::ExtendedPrice),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductRequisition), BusinessEvent_ProductRequisition::CommitBudgetFundsForExpensedProducts, MonetaryAmount::Charge),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductRequisition), BusinessEvent_ProductRequisition::CommitBudgetFundsForExpensedProducts, MonetaryAmount::TaxNonRecoverable)

]
public class AccDistRuleCommitFundsForExpProdExtPrice extends AccountingDistributionRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        ProjectAccDistRule                  projectAccDistRule;
        boolean                             isProject;
        SourceDocumentLineItemIProduct      iProduct;
        boolean                             isStocked;
        LedgerPostingType                   ledgerPostingType;

        if (this.parmMonetaryAmount() != MonetaryAmount::Charge)
        {
            projectAccDistRule = ProjectAccDistRule::newFromAccountingDistributionRule(this);
            isProject = projectAccDistRule.parmIsProject();
        }

        if (sourceDocumentLineItem is SourceDocumentLineItemIProduct)
        {
            iProduct = sourceDocumentLineItem as SourceDocumentLineItemIProduct;
            isStocked = iProduct.parmStocked();
        }

        if (isProject)
        {
            ledgerPostingType = projectAccDistRule.parmLedgerPostingType();
        }
        else if (isStocked)
        {
            ledgerPostingType = LedgerPostingType::PurchConsump;
        }
        else
        {
            ledgerPostingType = LedgerPostingType::PurchExpense;
        }

        return ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        return DebitCredit::Debit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>