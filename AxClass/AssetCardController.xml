<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetCardController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetCardController</c> class implements the controller to display and run the
/// <c>AssetCard</c> report.
/// </summary>
public class AssetCardController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the ability to modify the report contract before dialog is shown to the user for the
    /// <c>AssetCard</c> report.
    /// </summary>
    /// <remarks>
    /// This method changes the query to use passed buffer for the <c>AssetTable</c> record.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// The table buffer for <c>AssetTable</c> record is missing.
    /// </exception>
    protected void prePromptModifyContract()
    {
        AssetTable  assetTable;
        Query       q;

        if (this.parmArgs() == null)
        {
            throw error(strFmt("@SYS19324", this.parmArgs().menuItemName()));
        }
        else
        {
            assetTable = this.parmArgs().record() as AssetTable;

            if (assetTable.RecId == 0)
            {
                throw error(Error::missingRecord(tablePName(AssetTable)));
            }
            else
            {
                q = this.getFirstQuery();
                SysQuery::findOrCreateRange(
                    q.dataSourceTable(tableNum(AssetTable)),
                    fieldNum(AssetTable, AssetId)).value(assetTable.AssetId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides an entry point for the <c>AssetCardController</c> class when it is called from a menu item.
    /// </summary>
    /// <param name="_args">
    /// The arguments for the <c>AssetCardController</c> class.
    /// </param>
    static void main(Args _args)
    {
        AssetCardController controller = new AssetCardController();

        controller.parmReportName(ssrsReportStr(AssetCard, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>