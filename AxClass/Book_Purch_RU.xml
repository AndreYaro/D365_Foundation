<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Book_Purch_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class Book_Purch_RU extends Book_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createBook</Name>
				<Source><![CDATA[
        protected void createBook()
    {
        ;
        Book_Purch_RU::createEmptyBook();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTrans</Name>
				<Source><![CDATA[
        protected void deleteTrans()
    {
        PurchBookTrans_RU purchBookTrans;
        ;

        NumberSeq::releaseNumber(VendParameters::numRefPurchBookId_RU().NumberSequenceId, bookTable.BookId);

        delete_from purchBookTrans
            where purchBookTrans.PurchBookTable_RU == bookTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        protected boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if ( bookTable.ClosingDate && (! SalesBookTable_RU::canProcessDate(bookTable.ClosingDate)))
            {
                throw error("@GLS101321");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createEmptyBook</Name>
				<Source><![CDATA[
        private static void createEmptyBook()
    {
        PurchBookTable_RU   bookTable;
        NumberSeq           numberSeq;

        if (PurchBookTable_RU::existActiveBook())
        {
            throw error("@GLS101174");
        }

        ttsbegin;

        numberSeq = NumberSeq::newGetNum(VendParameters::numRefPurchBookId_RU());

        bookTable.BookId = numberSeq.num();

        bookTable.insert();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>