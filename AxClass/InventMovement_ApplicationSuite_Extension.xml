<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMovement_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventMovement))]
internal final class InventMovement_ApplicationSuite_Extension
{
    private boolean isItemWHSOverridden;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustPostingCreateInventTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the invoice will create inventory transactions based on document settings.
    /// </summary>
    /// <returns>
    /// Always true.
    /// </returns>
    internal boolean mustPostingCreateInventTrans()
    {
        #ISOCountryRegionCodes
        boolean ret = true;
        InventMov_SalesQuotation inventMovQuotation = this as InventMov_SalesQuotation;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoBR])
            && inventMovQuotation)
        {
            ret = inventMovQuotation.mustPostingCreateInventTrans();
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReservation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes inventory reservation
    /// </summary>
    public void updateReservation()
    {
        this.parmIsItemWHSOverridden_RU(InventMovement::enabledSplittingByGTD_RU());

        next updateReservation();

        this.parmIsItemWHSOverridden_RU(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabledSplittingByGTD_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines if splitting by GTD number is available
    /// </summary>
    /// <returns>true, if option is available; otherwise false</returns>
    internal static boolean enabledSplittingByGTD_RU()
    {        
        #ISOCountryRegionCodes

        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsItemWHSOverridden_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets value of <c>isItemWHSOverridden</c> variable
    /// </summary>
    /// <param name = "_isItemWHSOverridden">Value to be set</param>
    /// <returns>Value to be get</returns>
    public boolean parmIsItemWHSOverridden_RU(boolean _isItemWHSOverridden = isItemWHSOverridden)
    {
        isItemWHSOverridden = _isItemWHSOverridden;
        return isItemWHSOverridden;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemWHSEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines item WHS definition based on extended logic
    /// </summary>
    /// <returns>true, if item is WHS enabled; otherwise false</returns>
    public boolean isItemWHSEnabled()
    {
        boolean ret = next isItemWHSEnabled();

        if (!this.parmIsItemWHSOverridden_RU())
        {
            return ret;
        }

        if (ret)
        {
            InventDim       inventDimMov    = InventDim::find(this.inventDimId());
            InventLocation  inventLocation  = inventDimMov.inventLocation();
            WMSLocation     wmsLocation     = inventDimMov.wmsLocation();
            
            boolean isWHS   = inventLocation.WHSEnabled && WHSInventTable::exist(this.itemId());
            if (isWHS)
            {
                boolean isProd  = (ProdBOM::findTransId(this.transId()).RecId != 0);
                if (isProd)
                {
                    boolean isWPValid = !WHSWorkPolicy::isWorkAllowedToBeCreatedForWorkProcess(
                                            WHSWorkTransType::ProdPick,
                                            wmsLocation.inventLocationId,
                                            wmsLocation.wMSLocationId, 
                                            WhsWorkProcess::All,
                                            this.itemId());
                    if (isWPValid)
                    {
                        ret = false;
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>