<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepLimitCalculator_Special_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The Japan fixed asset special depreciation limit calculator.
/// </summary>
[AssetDepMethodAttribute_JP(AssetDepreciationMethod::SpecialDepreciation_JP)]
class AssetDepLimitCalculator_Special_JP extends AssetDepLimitCalculator_JP
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initAssetTableMethod</Name>
				<Source><![CDATA[
    protected void initAssetTableMethod()
    {
        assetTableMethod    = AssetTableMethod::construct(assetBook, dateMax(), assetBudgetModelId, false, false, true);

        super();
    }
]]></Source>
			</Method>
			<Method>
				<Name>updateLimitToDate</Name>
				<Source><![CDATA[
    protected void updateLimitToDate(ToDate _toDate, FromDate _fromDate = dateNull())
    {
        AssetTableMethod_JP     assetTableMethod_JP;
        AssetTransDate          specialDepReserveEndDate;
        AssetTransDate          specialDepAllocationStartDate;
        boolean                 isSpecialReserver;

        this.enableSelfCalculationMode();

        Debug::assert(assetTableMethod is AssetTableMethod_JP);
        assetTableMethod_JP = assetTableMethod AS AssetTableMethod_JP;

        if (assetDepreciationProfile.SpecialDepAccountingMethod_JP == AssetSpecialDepAccountingMethod_JP::Reserve)
        {
            isSpecialReserver = true;
            [specialDepReserveEndDate, specialDepAllocationStartDate] = AssetSpecialDepHelper_JP::calcAllocationStartDate(assetBook);
        }

        while (assetTableMethod.parmPeriodEnd() <= _toDate && assetTableMethod.next())
        {
            if (isSpecialReserver && assetTableMethod.parmPeriodEnd() > specialDepReserveEndDate)
            {
                break;
            }

            if (_fromDate <= assetTableMethod.parmPeriodEnd())
            {
                this.addLimitToCache(
                    assetTableMethod.parmPeriodstart(),
                    assetTableMethod.parmPeriodEnd(),
                    assetTableMethod.calc());
            }
            else
            {
                // Still do the calculation to move to next period. But not save the result.
                assetTableMethod.calc();
            }
        }
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>