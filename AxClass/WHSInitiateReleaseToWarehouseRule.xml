<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInitiateReleaseToWarehouseRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles setting the initial value of the field ReleaseToWarehouseRule on the table InventLocation.
/// </summary>
internal final class WHSInitiateReleaseToWarehouseRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeReleaseToWarehouseRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs logic to initiate release to warehouse rule.
    /// </summary>
    /// <returns>True if the logic ran; otherwise, false.</returns>
    internal final static boolean initializeReleaseToWarehouseRule()
    {
        boolean ret;
  
        if (WHSInitiateReleaseToWarehouseRule::validateToContinue())
        {
            WHSInitiateReleaseToWarehouseRule::updateReleaseToWarehouseRule();
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateToContinue</Name>
				<Source><![CDATA[
    private static boolean validateToContinue()
    {
        boolean initializeRTWRule;

        initializeRTWRule = Box::confirm("@WAX:InitializeRTWRule");

        return initializeRTWRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReleaseToWarehouseRule</Name>
				<Source><![CDATA[
    private static void updateReleaseToWarehouseRule()
    {
        InventLocation warehouse;

        ttsbegin;

        // Only update WHS warehouses with rule set to not applicable.  
        // If its require full, that means a user set this and it should not be overwritten.
        update_recordset warehouse
            setting ReleaseToWarehouseRule = WHSReleaseToWarehouseRule::AllowPartialReservation
            where warehouse.WHSEnabled == NoYes::Yes
            &&    warehouse.ReleaseToWarehouseRule == WHSReleaseToWarehouseRule::NotApplicable;   
        
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>