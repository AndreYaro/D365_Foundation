<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxProjectFormEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxProjectFormEventHandler</c> class is used to handle the event handler for project relative forms in tax controls.
/// </summary>
internal final class TaxProjectFormEventHandler
{
    private static boolean isTaxIntegrationEnabled = Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Project);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>overrideSalesTax_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Do something after UI override sales tax field is modified.
    /// </summary>
    /// <param name = "_sender">The form data object.</param>
    /// <param name = "_e">The form data field event args.</param>
    [
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetail, ProjProposalEmpl, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetailV2, ProjProposalEmpl, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetail, ProjProposalOnAcc, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetailV2, ProjProposalOnAcc, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetail, ProjProposalCost, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetailV2, ProjProposalCost, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetail, ProjProposalItem_SalesOrder, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetailV2, ProjProposalItem_SalesOrder, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetail, ProjProposalItem_Project, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetailV2, ProjProposalItem_Project, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetail, ProjProposalRevenue, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetailV2, ProjProposalRevenue, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetail, ProjProposalRevenueSubscription, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjInvoiceProposalDetailV2, ProjProposalRevenueSubscription, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjAdvancedJournalLine, ProjAdvancedJournalLine_Hours, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjAdvancedJournalLine, ProjAdvancedJournalLine_Expense, OverrideSalesTax), FormDataFieldEventType::Modified),
        FormDataFieldEventHandler(formDataFieldStr(ProjAdvancedJournalLine, ProjAdvancedJournalLine_Item, OverrideSalesTax), FormDataFieldEventType::Modified)
    ]
    public static void overrideSalesTax_OnModified(FormDataObject _sender, FormDataFieldEventArgs _e)
    {
        TaxProjectFormEventHandler::setControlsForOverrideSalesTax(_sender.datasource());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projectFormDataSource_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Do something after form data source is activated.
    /// </summary>
    /// <param name = "_sender">The form data source.</param>
    /// <param name = "_e">The form data source event args.</param>
    [
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalEmpl), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalEmpl), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalOnAcc), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalOnAcc), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalCost), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalCost), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalItem_SalesOrder), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalItem_SalesOrder), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalItem_Project), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalItem_Project), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalRevenue), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalRevenue), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalRevenueSubscription), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalRevenueSubscription), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjAdvancedJournalLine, ProjAdvancedJournalLine_Hours), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjAdvancedJournalLine, ProjAdvancedJournalLine_Expense), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjAdvancedJournalLine, ProjAdvancedJournalLine_Item), FormDataSourceEventType::Activated),
        FormDataSourceEventHandler(formDataSourceStr(ProjAdvancedJournalLine, ProjAdvancedJournalLine_Fee), FormDataSourceEventType::Activated)
    ]
    public static void projectFormDataSource_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        if (_sender.name() != formDataSourceStr(ProjAdvancedJournalLine, ProjAdvancedJournalLine_Fee))
        {
            TaxProjectFormEventHandler::setControlsForOverrideSalesTax(_sender);
        }

        TaxProjectFormEventHandler::setControlsForVATDueDate(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlsForVATDueDate</Name>
				<Source><![CDATA[
    private static void setControlsForVATDueDate(FormDataSource _formDataSource)
    {
        Common common = _formDataSource.cursor();

        if (common && common.TableId == tableNum(ProjAdvancedJournalLine))
        {
            FieldId vatDueDate_W_Field = fieldName2Id(common.TableId, fieldStr(ProjAdvancedJournalLine, VatDueDate_W));
            if (vatDueDate_W_Field)
            {
                boolean isTaxSpecifixExchangeRateEnabled = TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByBusinessProcess(TaxIntegrationBusinessProcess::Project);
                _formDataSource.object(vatDueDate_W_Field).visible(isTaxSpecifixExchangeRateEnabled);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlsForOverrideSalesTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the fields TaxGroup, TaxItemGroup to be editable or not.
    /// Sets the field OverrideSalesTax to be visiable or not.
    /// </summary>
    /// <param name = "_formDataSource">The data source.</param>
    private static void setControlsForOverrideSalesTax(FormDataSource _formDataSource)
    {
        const str OverrideSalesTax = 'OverrideSalesTax';
        Common common = _formDataSource.cursor();

        if (common)
        {
            FieldId overrideSalesTax_Field = fieldName2Id(Common.TableId, OverrideSalesTax);

            if (overrideSalesTax_Field)
            {
                _formDataSource.object(overrideSalesTax_Field).visible(isTaxIntegrationEnabled);

                if (isTaxIntegrationEnabled)
                {
                    str taxGroupFieldName = 'TaxGroupId';
                    str taxItemGroupFieldName = 'TaxItemGroupId';
                    if (common.TableId == tableNum(ProjAdvancedJournalLine))
                    {
                        taxGroupFieldName = 'TaxGroup';
                        taxItemGroupFieldName = 'TaxItemGroup';
                    }

                    FieldId taxGroupFieldId = fieldName2Id(Common.TableId, taxGroupFieldName);
                    FieldId taxItemGroupFieldId = fieldName2Id(Common.TableId, taxItemGroupFieldName);
                    boolean isOverrideSalesTax = common.(overrideSalesTax_Field);

                    if (taxGroupFieldId)
                    {
                        _formDataSource.object(taxGroupFieldId).allowEdit(isOverrideSalesTax);
                    }

                    if (taxItemGroupFieldId)
                    {
                        _formDataSource.object(taxItemGroupFieldId).allowEdit(isOverrideSalesTax);
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>Tax_Post_showTaxes</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(Tax), staticMethodStr(Tax, showTaxes))]
    public static void Tax_Post_showTaxes(XppPrePostArgs _args)
    {
        FormRun formRun = _args.getArg(identifierStr(_formRun));
        str displayStr = _args.getArg(identifierStr(_menuItemDisplayStr));
        TaxProjectFormEventHandler::researchForTaxIntegration_ProjInvoiceProposal(displayStr, formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>researchForTaxIntegration_ProjInvoiceProposal</Name>
				<Source><![CDATA[
    private static void researchForTaxIntegration_ProjInvoiceProposal(str _menuItemDisplayStr, FormRun _formRun)
    {
        if (_menuItemDisplayStr == menuitemDisplayStr(TaxTmpWorkProjectInvoiceProposal)
            && _formRun
            && (_formRun.name() == formStr(ProjInvoiceProposalDetail)
                || _formRun.name() == formStr(ProjInvoiceProposalDetailV2))
            && Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Project))
        {
            FormDataSource ProjProposalJour_DS = _formRun.dataSource(formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalJour));
            ProjProposalJour_DS.reread();

            TaxProjectFormEventHandler::researchDSAndRetainPosition(
                _formRun,
                formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalCost),
                fieldnum(ProjProposalCost,RecId));

            TaxProjectFormEventHandler::researchDSAndRetainPosition(
                _formRun,
                formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalEmpl),
                fieldnum(ProjProposalEmpl,RecId));

            TaxProjectFormEventHandler::researchDSAndRetainPosition(
                _formRun,
                formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalItem_Project),
                fieldnum(ProjProposalItem,RecId));

            TaxProjectFormEventHandler::researchDSAndRetainPosition(
                _formRun,
                formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalItem_SalesOrder),
                fieldnum(ProjProposalItem,RecId));

            TaxProjectFormEventHandler::researchDSAndRetainPosition(
                _formRun,
                formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalOnAcc),
                fieldnum(ProjProposalOnAcc,RecId));

            TaxProjectFormEventHandler::researchDSAndRetainPosition(
                _formRun,
                formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalRevenue),
                fieldnum(ProjProposalRevenue,RecId));

            TaxProjectFormEventHandler::researchDSAndRetainPosition(
                _formRun,
                formDataSourceStr(ProjInvoiceProposalDetail, ProjProposalRevenueSubscription),
                fieldnum(ProjProposalRevenue,RecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>researchDSAndRetainPosition</Name>
				<Source><![CDATA[
    private static void researchDSAndRetainPosition(FormRun _formRun, str _formDataSourceStr, int _RecIdFieldNum)
    {
        FormDataSource formDataSource = _formRun.dataSource(_formDataSourceStr);
        int position = formDataSource.getPosition();
        formDataSource.research(); // research(true) can't retain position in some cases, so use research() and setPosition() instead.
        if (position)
        {
            formDataSource.setPosition(position);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>