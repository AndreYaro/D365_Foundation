<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSlicedPriceReportRDPContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailSlicedPriceReportRDPContract</c> class is the contract class for the sliced price report.
/// </summary>
[DataContractAttribute]
internal class RetailSlicedPriceReportRDPContract
{
    private OMOperatingUnitRefRecId operatingUnitRecId;
    private date priceCalculationStartDate;
    private date priceCalculationEndDate;
    private boolean calculateVariantPrice;
    private boolean displayPriceChangesOnly;

    private str storeName;
    private InterCompanyInventLocationId inventLocation;

    private List inventDimIdList;
    private List retailVariantIdList;
    private List itemIdList;
    private List referenceRecIdList;
    private List salesUnitList;
    private List productNameList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmOMOperatingUnitRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("OMOperatingUnitRefRecId")]
    public OMOperatingUnitRefRecId parmOMOperatingUnitRecId(OMOperatingUnitRefRecId _operatingUnitRecId = operatingUnitRecId)
    {
        operatingUnitRecId = _operatingUnitRecId;
        return operatingUnitRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalculationStartDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute("priceCalculationStartDate")]
    public date parmCalculationStartDate(date _priceCalculationStartDate = priceCalculationStartDate)
    {
        priceCalculationStartDate = _priceCalculationStartDate;
        return priceCalculationStartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalculationEndDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute("priceCalculationEndDate")]
    public date parmCalculationEndDate(date _priceCalculationEndDate = priceCalculationEndDate)
    {
        priceCalculationEndDate = _priceCalculationEndDate;
        return priceCalculationEndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayPriceChangesOnly</Name>
				<Source><![CDATA[
    [DataMemberAttribute("displayPriceChangesOnly")]
    public boolean parmDisplayPriceChangesOnly(boolean _displayPriceChangesOnly = displayPriceChangesOnly)
    {
        displayPriceChangesOnly = _displayPriceChangesOnly;
        return displayPriceChangesOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalculateVariantPrice</Name>
				<Source><![CDATA[
    [DataMemberAttribute("calculateVariantPrice")]
    public boolean parmCalculateVariantPrice(boolean _calculateVariantPrice = calculateVariantPrice)
    {
        calculateVariantPrice = _calculateVariantPrice;
        return calculateVariantPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocation</Name>
				<Source><![CDATA[
    [DataMemberAttribute("inventLocation")]
    public InterCompanyInventLocationId parmInventLocation(InterCompanyInventLocationId _inventLocation = inventLocation)
    {
        inventLocation = _inventLocation;
        return inventLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStoreName</Name>
				<Source><![CDATA[
    [DataMemberAttribute("storeName")]
    public str parmStoreName(str _storeName = storeName)
    {
        storeName = _storeName;
        return _storeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimIdListList</Name>
				<Source><![CDATA[
    [DataMemberAttribute("inventDimIdList"),
        AifCollectionTypeAttribute('_inventDimIdList', Types::String, extendedtypestr(InventDimId))]
    public List parmInventDimIdListList(List _inventDimIdList = inventDimIdList)
    {
        inventDimIdList = _inventDimIdList;
        return inventDimIdList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailVariantIdList</Name>
				<Source><![CDATA[
    [DataMemberAttribute("retailVariantIdList"),
        AifCollectionTypeAttribute('_retailVariantIdList', Types::String, extendedtypestr(RetailVariantId))]
    public List parmRetailVariantIdList(List _retailVariantIdList = retailVariantIdList)
    {
        retailVariantIdList = _retailVariantIdList;
        return retailVariantIdList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemIdList</Name>
				<Source><![CDATA[
    [DataMemberAttribute("itemIdList"),
        AifCollectionTypeAttribute('_itemIdList', Types::String, extendedtypestr(ItemId))]
    public List parmItemIdList(List _itemIdList = itemIdList)
    {
        itemIdList = _itemIdList;
        return itemIdList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReferenceRecIdList</Name>
				<Source><![CDATA[
    [DataMemberAttribute("referenceRecIdList"),
        AifCollectionTypeAttribute('_referenceRecIdList', Types::Int64, extendedtypestr(RefRecId))]
    public List parmReferenceRecIdList(List _referenceRecIdList = referenceRecIdList)
    {
        referenceRecIdList = _referenceRecIdList;
        return referenceRecIdList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesUnitList</Name>
				<Source><![CDATA[
    [DataMemberAttribute("salesUnitList"),
        AifCollectionTypeAttribute('_salesUnitList', Types::String, extendedtypestr(SalesUnit))]
    public List parmSalesUnitList(List _salesUnitList = salesUnitList)
    {
        salesUnitList = _salesUnitList;
        return salesUnitList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductNameList</Name>
				<Source><![CDATA[
    [DataMemberAttribute("productNameList"),
        AifCollectionTypeAttribute('_productNameList', Types::String, extendedtypestr(EcoResProductName))]
    public List parmProductNameList(List _productNameList = productNameList)
    {
        productNameList = _productNameList;
        return productNameList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>