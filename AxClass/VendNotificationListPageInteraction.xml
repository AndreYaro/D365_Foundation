<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendNotificationListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendNotificationListPageInteraction</c> class initializes and controls the behavior of the
/// action pane buttons.
/// </summary>
class VendNotificationListPageInteraction extends ListPageInteraction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>VendNotificationListPage</c> query for the notifications list page so that the
    /// range is set to the current user ID.
    /// </summary>
    /// <param name="_query">
    /// The <c>VendNotificationListPage</c> query.
    /// </param>
    /// <remarks>
    /// Only the notifications for the current user are displayed.
    /// </remarks>

    public void initializeQuery(Query _query)
    {
        QueryBuildDataSource    inbox;
        QueryBuildRange         inboxRange;

        super(_query);

        inbox      =   _query.dataSourceName(querydatasourcestr(VendNotificationListPage, EventInbox));
        inboxRange =   inbox.addRange(fieldnum(EventInbox, UserId));
        inboxRange.value(SysQuery::value(curuserid()));
        inboxRange.status(RangeStatus::Hidden);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables the action pane controls if there are no notifications available.
    /// </summary>

    public void selectionChanged()
    {
        VendNotificationTemplate vendNotificationTemplateCurrent = this.listPage().activeRecord(querydatasourcestr(VendNotificationListPage, VendNotificationTemplate));

        vendNotificationTemplateCurrent = this.VendNotificationTemplate();
        super();

        if (vendNotificationTemplateCurrent == null)
        {
            // Disable Action pane buttons
            this.listPage().actionPaneControlEnabled(formcontrolstr(VendNotificationListPage, MenuItemButtonView), false);
            this.listPage().actionPaneControlEnabled(formcontrolstr(VendNotificationListPage, MenuItemButtonDelete), false);
            this.listPage().actionPaneControlEnabled(formcontrolstr(VendNotificationListPage, MenuItemButtonAttachments), false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>VendNotificationTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the active record of the <c>VendNotificationTemplate</c> table from the
    /// <c>VendNotificationListPage</c> form
    /// </summary>
    /// <returns>
    /// A record in the <c>VendNotificationTemplate</c> table.
    /// </returns>

    private VendNotificationTemplate VendNotificationTemplate()
    {
        return this.listPage().activeRecord(
            querydatasourcestr(VendNotificationListPage, VendNotificationTemplate)) as VendNotificationTemplate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>