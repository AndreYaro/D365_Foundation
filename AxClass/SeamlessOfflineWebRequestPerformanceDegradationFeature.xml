<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SeamlessOfflineWebRequestPerformanceDegradationFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation;
using Microsoft.Dynamics.BusinessPlatform.SharedTypes;

/// <summary>
/// The <c>SeamlessOfflineWebRequestPerformanceDegradationFeature</c> class defines the feature management capability for enhanced seamless offline
/// switching due to web request performance degradation.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class SeamlessOfflineWebRequestPerformanceDegradationFeature implements IFeatureMetadata, IFeaturePrerequisites
{
    private static SeamlessOfflineWebRequestPerformanceDegradationFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    private static void typeNew()
    {
        instance = new SeamlessOfflineWebRequestPerformanceDegradationFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static SeamlessOfflineWebRequestPerformanceDegradationFeature instance()
    {
        return SeamlessOfflineWebRequestPerformanceDegradationFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Retail:SeamlessOfflineWebRequestPerformanceDegradationFeatureLabel");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::Retail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Retail:SeamlessOfflineWebRequestPerformanceDegradationFeatureSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return "https://go.microsoft.com/fwlink/?linkid=2167647";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cannotEnableMessage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public LabelString cannotEnableMessage()
    {
        return "@Retail:SeamlessOfflineWebRequestPerformanceDegradationFeaturePrereqErrorMessage";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canEnable()
    {
        // We expect that at least one POS offline profile must have advanced offline switching enabled.
        // This may not enforce that the right offline profile is enabled but at least can remind users that
        // there is a relationship between these two configuration settings.
        RetailOfflineProfile profile;

        select firstonly EnableAdvancedOfflineSwitching from profile
            where profile.EnableAdvancedOfflineSwitching == true;

        return profile.EnableAdvancedOfflineSwitching;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>