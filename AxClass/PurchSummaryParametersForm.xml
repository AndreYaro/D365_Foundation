<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchSummaryParametersForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchSummaryParametersForm
{
    PurchSummaryFields  purchSummaryFields;
    FormListControl     selected;
    FormListControl     notSelected;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addFields</Name>
				<Source><![CDATA[
    void addFields()
    {
        PurchSummaryParameters  purchSummaryParameters;
        container               fieldIdList;
        int                     fieldId;

        int idx = notSelected.getNextItem(FormListNext::Selected);

        ttsbegin;

        while (idx != -1)
        {
            fieldId = notSelected.getItem(idx).data();

            if (purchSummaryFields.addFieldAllowed(fieldId))
            {
                purchSummaryParameters.clear();
                purchSummaryParameters.initValue();
                purchSummaryParameters.DocumentStatus = this.documentStatus();
                purchSummaryParameters.FieldId        = fieldId;
                purchSummaryParameters.insert();
                fieldIdList += fieldId;
            }
            else
            {
                checkFailed(strfmt("@SYS57775", PurchSummaryParameters::fieldName(fieldId), this.documentStatus()));
            }

            idx = notSelected.getNextItem(FormListNext::Selected, idx);
        }

        purchSummaryFields.invalidateItemCache();

        this.fillViews();
        PurchSummaryParametersForm::selectFields(selected, fieldIdList);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    DocumentStatus documentStatus()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillNotSelected</Name>
				<Source><![CDATA[
    void fillNotSelected()
    {
        notSelected.deleteAll();
        purchSummaryFields.initNotSelected();

        FieldId fieldId = purchSummaryFields.nextNotSelected();

        while (fieldId)
        {
            if (PurchSummaryParameters::fieldEnabled(fieldId))
            {
                FormListItem formListItem = new FormListItem(PurchSummaryParameters::fieldName(fieldId), 0, fieldId);
                notSelected.addItem(formListItem);
            }

            fieldId = purchSummaryFields.nextNotSelected();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillSelected</Name>
				<Source><![CDATA[
    void fillSelected()
    {
        selected.deleteAll();
        purchSummaryFields.initSelected();

        FieldId fieldId = purchSummaryFields.nextSelected();

        while (fieldId)
        {
            if (PurchSummaryParameters::fieldEnabled(fieldId))
            {
                FormListItem formListItem = new FormListItem(PurchSummaryParameters::fieldName(fieldId), 0, fieldId);
                selected.addItem(formListItem);
            }

            fieldId = purchSummaryFields.nextSelected();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillViews</Name>
				<Source><![CDATA[
    void fillViews()
    {
        this.fillSelected();
        this.fillNotSelected();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(FormListControl _selected, FormListControl _notSelected)
    {
        purchSummaryFields  = PurchSummaryFields::construct(this.documentStatus());
        selected            = _selected;
        notSelected         = _notSelected;

        selected.addColumn(1, new FormListColumn("@SYS3852", 1, 300));
        notSelected.addColumn(1, new FormListColumn("@SYS3852", 1, 300));
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeFields</Name>
				<Source><![CDATA[
    void removeFields()
    {
        PurchSummaryParameters  purchSummaryParameters;
        container               fieldIdList;
        int                     fieldId;
        int idx = selected.getNextItem(FormListNext::Selected);

        ttsbegin;

        while (idx != -1)
        {
            fieldId = selected.getItem(idx).data();

            if (purchSummaryFields.removeFieldAllowed(fieldId))
            {
                purchSummaryParameters = PurchSummaryParameters::find(this.documentStatus(), fieldId, true);
                purchSummaryParameters.delete();
                fieldIdList += fieldId;
            }
            else
            {
                checkFailed(strfmt("@SYS57774", PurchSummaryParameters::fieldName(fieldId), this.documentStatus()));
            }

            idx = selected.getNextItem(FormListNext::Selected, idx);
        }

        purchSummaryFields.invalidateItemCache();

        this.fillViews();
        PurchSummaryParametersForm::selectFields(notSelected, fieldIdList);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static PurchSummaryParametersForm construct(DocumentStatus  _documentStatus,
                                                FormListControl _selected,
                                                FormListControl _notSelected)
    {
        switch (_documentStatus)
        {
            // <GEERU>
            case DocumentStatus::Invoice4Paym_RU:
                return new PurchSummaryParametersForm_Inv4Paym_RU (_selected, _notSelected);
            // </GEERU>
            case DocumentStatus::ReceiptsList:
                return new PurchSummaryParametersForm_ReceiptsList(_selected, _notSelected);
            case DocumentStatus::PackingSlip:
                return new PurchSummaryParametersForm_PackingSlip(_selected, _notSelected);
            case DocumentStatus::Invoice:
                return new PurchSummaryParametersForm_Invoice(_selected, _notSelected);
        }

        throw error(strfmt("@SYS19306", funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldIdxInList</Name>
				<Source><![CDATA[
    static int fieldIdxInList(container _fieldIdList, int _fieldId)
    {
        return confind(_fieldIdList, _fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectFields</Name>
				<Source><![CDATA[
    static void selectFields(FormListControl _formListControl, container _fieldIdList)
    {
        int idx = _formListControl.getNextItem(FormListNext::All);

        while (idx != -1)
        {
            FormListItem formListItem = _formListControl.getItem(idx);
            int fieldId = formListItem.data();
            formListItem.stateSelected(PurchSummaryParametersForm::fieldIdxInList(_fieldIdList, fieldId) > 0);
            _formListControl.setItem(formListItem);
            idx = _formListControl.getNextItem(FormListNext::All, idx);
        }

        _formListControl.setFocus();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>