<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalWorkflowApprovalFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using KernelStateProvider = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.FeatureStateProvider;
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;

/// <summary>
/// The <c>InventJournalWorkflowApprovalFeature</c> class determines whether to enable the feature of adding option in sales line to create tranfer order.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
[Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
[SysObsolete('InventJournalWorkflowApprovalFeature has been obsoleted', false, 12\04\2024)]
public final class InventJournalWorkflowApprovalFeature implements IFeatureMetadata, IFeatureLifecycle
{
    private static InventJournalWorkflowApprovalFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new InventJournalWorkflowApprovalFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>InventJournalWorkflowApprovalFeature</c> instance.</returns>
    [Hookable(false)]
    public static InventJournalWorkflowApprovalFeature instance()
    {
        return InventJournalWorkflowApprovalFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the feature display name.
    /// </summary>
    /// <returns>The feature display name.</returns>
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@SCM:InventJournalWorkflowApprovalFeatureLabel");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the feature module.
    /// </summary>
    /// <returns>The feature module.</returns>
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::InventoryAndWarehouseManagement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the description of feature.
    /// </summary>
    /// <returns>The description of feature.</returns>
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@SCM:InventJournalWorkflowApprovalFeatureSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the web URL of feature.
    /// </summary>
    /// <returns>The web URL of feature.</returns>
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if the feature is enabled by default.
    /// </summary>
    /// <returns>False.</returns>
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if the feature can be disabled.
    /// </summary>
    /// <returns>true</returns>
    [Hookable(false)]
    public boolean canDisable()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if the feature is enabled.
    /// </summary>
    /// <returns>Ture if the feature is enabled; otherwise false.</returns>
    [Hookable(false)]
    public static boolean isEnabled()
    {
        return KernelStateProvider::isFeatureEnabled(InventJournalWorkflowApprovalFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    public FeatureLifecycleStage FeatureStage()
    {
        // The flight is listed as Released but it is based on the guidance for IFeatureLifecycle which allows this flight to still act as a "kill switch".
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemFlightingHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hides Inventory management workflows menu item based on feature status.
    /// </summary>
    /// <param name = "_rootMenu">Root menu.</param>
    /// <param name = "_subMenu">Sub menu.</param>
    /// <param name = "_visible">Whether or not the submenu should be visible.</param>
    /// <remarks>This will only hide the individual menu items if they are contained in a group that we will also be hiding.</remarks>
    [SubscribesTo(classstr(SysMenuNavigationObjectFactory), staticdelegatestr(SysMenuNavigationObjectFactory, checkAddSubMenuDelegate))]
    public static void menuItemFlightingHandler(SysDictMenu _rootMenu, SysDictMenu _subMenu, SysBoxedBoolean _visible)
    {
        if (_subMenu.isMenuItem())
        {
            var metaElement = _subMenu.GetMenuItemMetaElement();
            if (metaElement != null)
            {
                if (metaElement.Name == menuItemDisplayStr(WorkflowConfigurationInvent))
                {
                    _visible.value = InventJournalWorkflowApprovalFeature::isEnabled();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>