<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGCustomReportHelper_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class LedgerRRGCustomReportHelper_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustomReportData</Name>
				<Source><![CDATA[
    [SysClassNameAttribute(classStr(LedgerRRGCustomReportData_RU)), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static List getCustomReportData(
        LedgerRRGRepCode_RU _reportCode,
        TransDate	_baseDate,
        TransDate	_reportDate = dateNull())
    {
        LedgerRRGEBufferEvalReport_W reportEvaluator;
        Map calcResult;
        LedgerRRGReportTable_RU         reportTable;

        MapEnumerator mapEnum;
        List resultList = new List(Types::Class);

        if (!_reportCode)
            return resultList;

        select firstonly reportTable
            where reportTable.RepCode == _reportCode;
   
        if (!reportTable.RecId)
        {
            throw Error(strFmt("@LedgerRRG:LedgerRRG_ReportCodeNotFound", _reportCode));
        }

        reportEvaluator = LedgerRRGEBufferEvalReport_W::construct();
        reportEvaluator.initFromBuffer(reportTable);
        reportEvaluator.parms().baseDate(_baseDate);
        reportEvaluator.parms().calcMethod(_reportDate ?
            ReportCalcMethod_RU::ReportingDate : ReportCalcMethod_RU::AccountingDate);
        reportEvaluator.parms().reportOnDate(_reportDate);

        calcResult = reportEvaluator.evalReport();

        mapEnum = calcResult.getEnumerator();
  
        while (mapEnum.moveNext())
        {
            resultList.addEnd(LedgerRRGCustomReportData_RU::newData(
                mapEnum.currentKey(),
                mapEnum.currentValue()));
        }

        return resultList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomFunctionData</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static str getCustomFunctionData(
        LedgerRRGEQueryId_W _queryId,
        TransDate           _baseDate,
        TransDate           _reportDate)
    {
        LedgerRRGEQueries_W ledgerRRGEQueries_W;

        select firstonly ledgerRRGEQueries_W
            where ledgerRRGEQueries_W.QueryId == _queryId;

        LedgerRRGEBufferEval_W  bufferEval;

        bufferEval = LedgerRRGEBufferEvalEQuery_W::construct();

        bufferEval.initFromBuffer(ledgerRRGEQueries_W);
        bufferEval.parms().baseDate(_baseDate);
        bufferEval.parms().calcMethod(_reportDate ?
            ReportCalcMethod_RU::ReportingDate : ReportCalcMethod_RU::AccountingDate);
        bufferEval.parms().reportOnDate(_reportDate);

        return bufferEval.value();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>