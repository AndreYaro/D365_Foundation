<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlanActivityWizard</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PlanActivityWizard extends SysWizard
{
    PlanRefRecId    plan;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accessMenuFunction</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public MenuFunction accessMenuFunction()
    {
        return new MenuFunction(menuitemDisplayStr(PlanActivityWizard),MenuItemType::Display);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
    public FormName formName()
    {
        return formStr(PlanActivityWizard);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPlan</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PlanRefRecId parmPlan(PlanRefRecId _plan = plan)
    {
        plan = _plan;

        return plan;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTabsToSkip</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setTabsToSkip(
        boolean _skip,
        int     _tabpage)
    {
        skipTab[_tabpage] = _skip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePlanActivityName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a plan activity name.
    /// </summary>
    /// <param name="_planActivityName">
    /// The plan activity name to validate.
    /// </param>
    /// <returns>
    /// true if the validation is successful; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validatePlanActivityName(PlanActivityName _planActivityName)
    {
        boolean result = true;

        if (PlanActivity::findPlanActivityName(plan, _planActivityName).RecId != 0)
        {
            // The activity name that you entered already exists. Enter a new activity name.
            result = checkFailed("@SYS308668");
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PlanActivityWizard construct()
    {
        return new PlanActivityWizard();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        PlanActivityWizard wizard = new PlanActivityWizard();

        if (   !_args
            || !_args.record())
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        wizard.parmPlan(_args.record().RecId);

        if (wizard.prompt())
        {
            wizard.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOperatingUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a <c>DirPartyName</c> value.
    /// </summary>
    /// <param name="_operatingUnitName">
    /// The <c>DirPartyName</c> value in which to validate.
    /// </param>
    /// <returns>
    /// true if the validation is successful; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean validateOperatingUnit(DirPartyName _operatingUnitName)
    {
        boolean result = true;

        if (!OMOperatingUnit::findName(_operatingUnitName,OMOperatingUnitType::OMValueStream))
        {
            result = checkFailed("@SYS309742");
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUnitOfMeasure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a <c>UnitOfMeasureSymbol</c> value.
    /// </summary>
    /// <param name="_unitOfMeasureSymbol">
    /// The <c>UnitOfMeasureSymbol</c> value to validate.
    /// </param>
    /// <param name="_unitOfMeasureClass">
    /// The required <c>UnitOfMeasureClass</c> object.
    /// </param>
    /// <returns>
    /// true if the validation is successful; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean validateUnitOfMeasure(
        UnitOfMeasureSymbol _unitOfMeasureSymbol,
        UnitOfMeasureClass  _unitOfMeasureClass)
    {
        UnitOfMeasure   unitOfMeasure;
        boolean         result = true;

        unitOfMeasure = UnitOfMeasure::findBySymbol(_unitOfMeasureSymbol);

        if (!unitOfMeasure)
        {
            result = checkFailed(strFmt("@SYS332915",_unitOfMeasureSymbol));
        }
        else
        {
            result =    _unitOfMeasureClass == UnitOfMeasureClass::Undefined
                     || unitOfMeasure.belongsToUnitOfMeasureClass(_unitOfMeasureClass);
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWMSLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a <c>WMSLocationId</c> value.
    /// </summary>
    /// <param name="_inventLocationId">
    /// The <c>InventLocationId</c> value to validate.
    /// </param>
    /// <param name="_wmsLocationId">
    /// The <c>WMSLocationId</c> value to validate.
    /// </param>
    /// <returns>
    /// true if the validation is successful; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean validateWMSLocationId(
        InventLocationId _inventLocationId,
        WMSLocationId    _wmsLocationId)
    {
        boolean result = true;

        if (!WMSLocation::find(_wmsLocationId,_inventLocationId))
        {
            result = checkFailed(strFmt("@SYS332916",_inventLocationId,_wmsLocationId));
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWorkCell</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a <c>WrkCtrIdBase</c> value.
    /// </summary>
    /// <param name="_workCell">
    /// The <c>WrkCtrIdBase</c> value to validate.
    /// </param>
    /// <returns>
    /// true if the validation is successful; otherwise, <c>false</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean validateWorkCell(WrkCtrIdBase _workCell)
    {
        WrkCtrResourceGroup     wrkCtrResourceGroup;
        boolean                 result = true;

        wrkCtrResourceGroup = WrkCtrResourceGroup::findWrkCtrId(_workCell);

        if (!wrkCtrResourceGroup)
        {
            result = checkFailed(strFmt("@SYS332725",_workCell));
        }
        else
        {
            if (!wrkCtrResourceGroup.IsWorkCell)
            {
                result = checkFailed(strFmt("@SYS332726",_workCell));
            }
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>