<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGSTTaxTransReportDP_MY</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxGSTTaxTransReportDP_MY</c> class is the report data provider class.
/// </summary>
/// <remarks>
/// This is the RDP class for the <c>TaxGSTTaxTransReport_MY</c> SSRS Report.
/// </remarks>
[
    SRSReportParameterAttribute(classStr(TaxGSTTaxTransReportContact_MY))
]
public class TaxGSTTaxTransReportDP_MY extends SrsReportDataProviderPreProcessTempDB
{
    TaxGSTTaxTransReportTmp_MY taxGSTTaxTransReportTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRepFieldAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get configuration line amount by usage.
    /// </summary>
    /// <param name="_tmpTaxReportById">
    /// Reporting code results table.
    /// </param>
    /// <param name="_configurationLineRecId">
    /// Specific configuration line.
    /// </param>
    /// <param name="_usage">
    /// Usage of reporting codes.
    /// </param>
    /// <returns>
    /// Configuration line amount.
    /// </returns>
    protected Amount getRepFieldAmount(
        TmpTaxReportById                    _tmpTaxReportById,
        RefRecId                            _configurationLineRecId,
        TaxGSTReportConfigurationUsage_MY   _usage)
    {
        TaxReportCollection                     taxReportCollection;
        TaxGSTReportConfigurationLineCode_MY    configurationLineCode;

        select sum(Amount) from _tmpTaxReportById
            exists join taxReportCollection
                where taxReportCollection.TaxReportLayout == TaxReportLayout::Default
                    && taxReportCollection.TaxReportField == _tmpTaxReportById.TaxReportField
            exists join configurationLineCode
                where configurationLineCode.TaxGSTReportConfigurationLine   == _configurationLineRecId
                    && configurationLineCode.Usage                          == _usage
                    && configurationLineCode.TaxReportCollection            == taxReportCollection.RecId;

        return _tmpTaxReportById.Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxGSTTaxTransReportTmp_MY</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves data from the <c>TaxGSTTaxTransReportTmp_MY</c> table.
    /// </summary>
    /// <returns>
    /// The data from the <c>TaxGSTTaxTransReportTmp_MY</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(TaxGSTTaxTransReportTmp_MY))
    ]
    public TaxGSTTaxTransReportTmp_MY getTaxGSTTaxTransReportTmp_MY()
    {
        return taxGSTTaxTransReportTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        TaxGSTTaxTransReportContact_MY          contract;
        FromDate                                fromDate;
        ToDate                                  toDate;
        TaxPeriod                               taxPeriod;
        TaxGSTReportConfigurationName_MY        configurationName;
        TaxGSTReportConfigurationLine_MY        configurationLine;
        TaxGSTReportConfiguration_MY            configuration;
        TmpTaxReportById                        tmpTaxReportById;

        contract = this.parmDataContract() as TaxGSTTaxTransReportContact_MY;

        configurationName   = contract.parmReportConfiguration();
        fromDate            = contract.parmFromDate();
        toDate              = contract.parmToDate();
        taxPeriod           = contract.parmTaxPeriod();

        tmpTaxReportById = TaxTrans::taxAmountByReportId_Table(fromDate, toDate, taxPeriod, TaxRepVersion::Original);

        RecordInsertList taxGSTTaxTransReportTmpList =
            new RecordInsertList(tableNum(TaxGSTTaxTransReportTmp_MY), true, true, true, true, true, taxGSTTaxTransReportTmp);

        while select RecId, TypeOfTransaction from configurationLine
            exists join configuration
                where configurationLine.TaxGSTReportConfiguration   == configuration.RecId
                    && configuration.Name                           == configurationName
        {
            taxGSTTaxTransReportTmp.TypeOfTransaction               = configurationLine.TypeOfTransaction;
            taxGSTTaxTransReportTmp.TaxBaseAccountingCurrencyAmount = this.getRepFieldAmount(tmpTaxReportById, configurationLine.RecId, TaxGSTReportConfigurationUsage_MY::BaseAmount);
            taxGSTTaxTransReportTmp.TaxAccountingCurrencyAmount     = this.getRepFieldAmount(tmpTaxReportById, configurationLine.RecId, TaxGSTReportConfigurationUsage_MY::TaxAmount);

            taxGSTTaxTransReportTmpList.add(taxGSTTaxTransReportTmp);
        }

        taxGSTTaxTransReportTmpList.insertDatabase();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>