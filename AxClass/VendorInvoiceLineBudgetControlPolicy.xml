<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoiceLineBudgetControlPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendorInvoiceLineBudgetControlPolicy</c> class provides information that pertains to the
/// checking budget for vendor invoices.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_ProductOrder::ObligateBudgetFundsForExpensedProducts)]
public class VendorInvoiceLineBudgetControlPolicy extends BudgetControlSourceDocumentLinePolicy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canCheckBudget</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a budget check can be performed on the source document line.
    /// </summary>
    /// <returns>
    /// true if the budget check can be performed on the source document line; otherwise, false.
    /// </returns>
    public boolean canCheckBudget()
    {
        boolean canCheckBudget;
        VendorInvoiceLineSourceDocLineItem invoiceLineSourceDocLineItem;
        ChargeSourceDocLineItem headerChargeSourceDocLineItem;
        PurchId purchId;
        MarkupTrans markupTrans;
        VendInvoiceInfoSubTable vendInvoiceInfoSubTable;

        canCheckBudget = super();

        if (canCheckBudget)
        {
            invoiceLineSourceDocLineItem = budgetSourceSourceDocumentLineItem as VendorInvoiceLineSourceDocLineItem;

            if (invoiceLineSourceDocLineItem)
            {
                purchId = invoiceLineSourceDocLineItem.parmVendInvoiceLineMap().PurchID;
            }
            else
            {
                headerChargeSourceDocLineItem = budgetSourceSourceDocumentLineItem as ChargeSourceDocLineItem;

                if (headerChargeSourceDocLineItem)
                {
                    if (isDraftReservation && !isOnDemandBudgetCheck)
                    {
                        // Do not check budget funds availability on draft header charges because draft header charges should only be checked for on demand requests.
                        canCheckBudget = false;
                    }
                    else
                    {
                        // Check to see whether the header charges are related purchase order header charges.
                        markupTrans = headerChargeSourceDocLineItem.parmMarkupTrans();

                        if (markupTrans)
                        {
                            switch (markupTrans.TransTableId)
                            {
                                case tableNum(VendInvoiceInfoSubTable):
                                    vendInvoiceInfoSubTable = VendInvoiceInfoSubTable::findRecId(markupTrans.TransRecId);

                                    if (vendInvoiceInfoSubTable)
                                    {
                                        purchId = vendInvoiceInfoSubTable.OrigPurchId;
                                    }

                                    break;

                                // case tableNum(VendInvoiceInfoTable):
                                // Header charges are associated to VendInvoiceInfoTable when the user adds charges onto
                                // an arranged invoice. This type of header charges are not related to purchase order
                                // header charges.
                                default:
                                    break;
                            }
                        }
                    }
                }
            }
        }

        if (canCheckBudget && purchId && SourceDocument::newFromSourceDocumentImplementation(PurchTable::find(purchId)).parmSourceDocumentHeader().AccountingStatus != SourceDocumentAccountingStatus::Completed)
        {
            canCheckBudget = false;
        }

        return canCheckBudget;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>