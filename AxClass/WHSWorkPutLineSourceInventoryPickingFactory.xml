<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkPutLineSourceInventoryPickingFactory</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWorkPutLineSourceInventoryPickingFactory</c> is responsible for providing the <c>WHSWorkPutLineSourceInventoryPicking</c> 
/// implementation for a given <c>WHSWorkTransType</c>.
/// </summary>
internal class WHSWorkPutLineSourceInventoryPickingFactory
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newPickingFromPutWorkLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>WHSWorkPutLineSourceInventoryPicking</c> instance based on the provided <c>WHSWorkLine</c> record.
    /// </summary>
    /// <param name = "_putWorkLine">The <c>WHSWorkLine</c> record for which to create an instance of <c>WHSWorkPutLineSourceInventoryPicking</c>.</param>
    /// <returns>An instance of the <c>WHSWorkPutLineSourceInventoryPicking</c> class, based on the provided <c>WHSWorkLine</c> record.</returns>
    [Hookable(false)]
    internal static WHSWorkPutLineSourceInventoryPicking newPickingFromPutWorkLine(WHSWorkLine _putWorkLine)
    {
        WHSWorkTable work = WHSWorkTable::find(_putWorkLine.WorkId);
        var attr = new WHSWorkPutLineSourceInventoryPickingAttribute(work.WorkTransType);
        
        WHSWorkPutLineSourceInventoryPicking ret = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(WHSWorkPutLineSourceInventoryPicking), attr) as WHSWorkPutLineSourceInventoryPicking;
        ret.initializeFromParameters(work, _putWorkLine.LineNum);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>