<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesCalcTax_Proj</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesCalcTax_Proj extends SalesCalcTax_Sales
{
    boolean                             initMarkupTrans;
    LedgerDimensionDefaultAccount       operationAccount;
    LedgerPostingType                   operationPostingType;
    ProjInvoiceId                       projInvoiceId;
    ProjTrans                           projTrans;
    QueryRun                            queryTransact;
    RecId                               transOrigRecId;
    RecId                               transRecId;
    TableId                             transOrigTableId;
    TableId                             transTableId;
    ItemId                              itemId;
    TaxProj                             taxProj;
 //   SalesTable                          salesTable;
    TradeInventTransId                  transTransId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>markupAmount</Name>
				<Source><![CDATA[
    public MarkupAmount markupAmount()
    {
        AmountCur  value = 0;

        // Get markup amount either from projtrans sales price or sales total order balance
        // else return 0
        if (projTrans)
        {
            value = projTrans.transTurnover();
        }
        else if (salesTotals)
        {
            value =salesTotals.totalOrderBalance(markupTrans.TransRecId);
        }

        return  markupTrans.signedValue(Markup::calcTrans(markupTrans, this.transQty(), value, value, this.invoiceDate()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextMarkupLine</Name>
				<Source><![CDATA[
    public MarkupTrans nextMarkupLine()
    {
        if (this is SalesCalcTax_ProjProposal)
        {
            return super();
        }
        else
        {
            if (initMarkupTrans)
            {
                next markupTrans;
                this.setOrigMarkUp();
            }
        }

        return markupTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationAccount</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount operationAccount(LedgerDimensionDefaultAccount _operationAccount = operationAccount)
    {
        operationAccount = _operationAccount;

        return operationAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationPosting</Name>
				<Source><![CDATA[
    LedgerPostingType operationPosting(LedgerPostingType _operationPostingType = operationPostingType)
    {
        operationPostingType   = _operationPostingType;

        return operationPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContract</Name>
				<Source><![CDATA[
    protected TradeTotalsIContract parmContract()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransTransId</Name>
				<Source><![CDATA[
    public TradeInventTransId parmTransTransId(TradeInventTransId _transTransId = transTransId)
    {
        transTransId = _transTransId;

        return transTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTrans</Name>
				<Source><![CDATA[
    public ProjTrans projTrans()
    {
        return projTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    QueryRun  queryBuild()
    {
        QueryRun  query;

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGet</Name>
				<Source><![CDATA[
    Common  queryGet(QueryRun  transact)
    {
        return salesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrigMarkUp</Name>
				<Source><![CDATA[
    protected void setOrigMarkUp()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDimension</Name>
				<Source><![CDATA[
    public DimensionDefault transDimension()
    {
        if (projTrans)
        {
            return projTrans.defaultDimension();
        }

        return salesTable.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transItemId</Name>
				<Source><![CDATA[
    public ItemId transItemId(ItemId _itemId = itemId)
    {
        itemId  = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLineAmount</Name>
				<Source><![CDATA[
    public AmountCur transLineAmount()
    {
        return projTrans.transTaxBaseAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transPcsPrice</Name>
				<Source><![CDATA[
    public Price transPcsPrice()
    {
        Price price;

        if (projTrans)
        {
            price = projTrans.salesPrice();
        }

        return price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transQty</Name>
				<Source><![CDATA[
    public Qty transQty()
    {
        if (projTrans)
        {
            return projTrans.qty();
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transRecId</Name>
				<Source><![CDATA[
    public RecId transRecId(RecId _recId  = transRecId)
    {
        transRecId   = _recId;

        return transRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transSalesUnit</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol transSalesUnit()
    {
        UnitOfMeasureSymbol uom;
        if (projTrans)
        {
            uom = projTrans.salesUnit();
        }

        return uom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTableId</Name>
				<Source><![CDATA[
    public TableId transTableId(TableId _tableId = transTableId)
    {
        transTableId    = _tableId;

        return transTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup transTaxGroup()
    {
        TaxGroup taxGroup;
        if (projTrans)
        {
            taxGroup = projTrans.taxGroup();
        }

        return taxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxItemGroup</Name>
				<Source><![CDATA[
    public TaxItemGroup transTaxItemGroup()
    {
        TaxItemGroup taxItemGroup;
        if (projTrans)
        {
            taxItemGroup = projTrans.taxItemGroup();
        }

        return taxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTransId</Name>
				<Source><![CDATA[
    TradeInventTransId  transTransId()
    {
        return this.parmTransTransId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSalesTaxAdjustments</Name>
				<Source><![CDATA[
    public boolean useSalesTaxAdjustments()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>