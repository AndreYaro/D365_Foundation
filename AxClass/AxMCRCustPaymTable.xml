<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxMCRCustPaymTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AxBC</c> class that relates to the <c>MCRCustPaymTable</c> table.
/// </summary>
public class AxMCRCustPaymTable extends AxApplicationBase
{
    MCRCustPaymTable mcrCustPaymTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
public Common currentRecord(Common _mcrCustPaymTable = mcrCustPaymTable)
{
    if (!prmisDefault(_mcrCustPaymTable))
    {
        super(_mcrCustPaymTable);
        mcrCustPaymTable = _mcrCustPaymTable as MCRCustPaymTable;
    }
    else
    {
        super();
    }

    return mcrCustPaymTable;
}

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
protected Common emptyRecord()
{
    MCRCustPaymTable localMCRCustPaymTable;

    return localMCRCustPaymTable;
}

]]></Source>
			</Method>
			<Method>
				<Name>mcrCustPaymTable</Name>
				<Source><![CDATA[
/// <summary>
/// Gets or sets the record associated to the current instance.
/// </summary>
/// <param name="_mcrCustPaymTable">
/// The record to associate with the current class; optional.
/// </param>
/// <returns>
/// The record associated with the current class.
/// </returns>
public MCRCustPaymTable mcrCustPaymTable(MCRCustPaymTable _mcrCustPaymTable = mcrCustPaymTable)
{
    if (!prmisDefault(_mcrCustPaymTable))
    {
        this.setCurrentRecordFromExternal(_mcrCustPaymTable);
    }

    return this.currentRecord();
}

]]></Source>
			</Method>
			<Method>
				<Name>parmAmount</Name>
				<Source><![CDATA[
public AmountCur parmAmount(AmountCur _amount = 0)
{
    if (!prmisDefault(_amount))
    {
        this.setField(fieldNum(MCRCustPaymTable, Amount), _amount);
    }

    return mcrCustPaymTable.Amount;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmCardTypeId</Name>
				<Source><![CDATA[
public RetailStoreCardTypeId parmCardTypeId(RetailStoreCardTypeId _cardTypeId = '')
{
    if (!prmisDefault(_cardTypeId))
    {
        this.setField(fieldNum(MCRCustPaymTable, CardTypeId), _cardTypeId);
    }

    return mcrCustPaymTable.CardTypeId;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmChannel</Name>
				<Source><![CDATA[
public RetailChannelRecId parmChannel(RetailChannelRecId _channel = 0)
{
    if (!prmisDefault(_channel))
    {
        this.setField(fieldNum(MCRCustPaymTable, Channel), _channel);
    }

    return mcrCustPaymTable.Channel;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmCheckAuthorized</Name>
				<Source><![CDATA[
public NoYes parmCheckAuthorized(NoYes _checkAuthorized = NoYes::No)
{
    if (!prmisDefault(_checkAuthorized))
    {
        this.setField(fieldNum(MCRCustPaymTable, CheckAuthorized), _checkAuthorized);
    }

    return mcrCustPaymTable.CheckAuthorized;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmCheckNumber</Name>
				<Source><![CDATA[
public MCRCheckNumber parmCheckNumber(MCRCheckNumber _checkNumber = '')
{
    if (!prmisDefault(_checkNumber))
    {
        this.setField(fieldNum(MCRCustPaymTable, CheckNumber), _checkNumber);
    }

    return mcrCustPaymTable.CheckNumber;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
public CustCurrencyCode parmCurrencyCode(CustCurrencyCode _currencyCode = '')
{
    if (!prmisDefault(_currencyCode))
    {
        this.setField(fieldNum(MCRCustPaymTable, CurrencyCode), _currencyCode);
    }

    return mcrCustPaymTable.CurrencyCode;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
public str parmCustAccount(str _custAccount = '')
{
    DictField   dictField;
    CustAccount custAccount = _custAccount;

    if (!prmisDefault(_custAccount))
    {
        dictField = new DictField(tableNum(MCRCustPaymTable),fieldNum(MCRCustPaymTable,CustAccount));
        if (this.valueMappingInbound())
        {
            this.validateInboundString(custAccount,dictField,this.mapPolicy().xMLMapCustAccount());
            custAccount = this.axCustAccount(custAccount);
        }
        else
        {
            this.validateInboundString(custAccount,dictField);
        }
        this.setField(fieldNum(MCRCustPaymTable, CustAccount), custAccount);
    }

    if (this.valueMappingOutbound())
    {
        return this.axCustAccount(mcrCustPaymTable.CustAccount);
    }
    else
    {
        return mcrCustPaymTable.CustAccount;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>parmCustPaymType</Name>
				<Source><![CDATA[
public MCRCustPaymType parmCustPaymType(MCRCustPaymType _custPaymType = MCRCustPaymType::None)
{
    if (!prmisDefault(_custPaymType))
    {
        this.setField(fieldNum(MCRCustPaymTable, CustPaymType), _custPaymType);
    }

    return mcrCustPaymTable.CustPaymType;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPlanRefund</Name>
				<Source><![CDATA[
public NoYes parmIsPlanRefund(NoYes _isPlanRefund = NoYes::No)
{
    if (!prmisDefault(_isPlanRefund))
    {
        this.setField(fieldNum(MCRCustPaymTable, IsPlanRefund), _isPlanRefund);
    }

    return mcrCustPaymTable.IsPlanRefund;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrepay</Name>
				<Source><![CDATA[
public NoYes parmIsPrepay(NoYes _isPrepay = NoYes::No)
{
    if (!prmisDefault(_isPrepay))
    {
        this.setField(fieldNum(MCRCustPaymTable, IsPrepay), _isPrepay);
    }

    return mcrCustPaymTable.IsPrepay;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
public LineNum parmLineNum(LineNum _lineNum = 0)
{
    if (!prmisDefault(_lineNum))
    {
        this.setField(fieldNum(MCRCustPaymTable, LineNum), _lineNum);
    }

    return mcrCustPaymTable.LineNum;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmNumAuthRetry</Name>
				<Source><![CDATA[
public MCRCCNumAuthRetries parmNumAuthRetry(MCRCCNumAuthRetries _numAuthRetry = 0)
{
    if (!prmisDefault(_numAuthRetry))
    {
        this.setField(fieldNum(MCRCustPaymTable, NumAuthRetry), _numAuthRetry);
    }

    return mcrCustPaymTable.NumAuthRetry;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmOnAccountAuthorized</Name>
				<Source><![CDATA[
public NoYes parmOnAccountAuthorized(NoYes _onAccountAuthorized = NoYes::No)
{
    if (!prmisDefault(_onAccountAuthorized))
    {
        this.setField(fieldNum(MCRCustPaymTable, OnAccountAuthorized), _onAccountAuthorized);
    }

    return mcrCustPaymTable.OnAccountAuthorized;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigRefundRecId</Name>
				<Source><![CDATA[
public RefRecId parmOrigRefundRecId(RefRecId _refRecId = 0)
{
    if (!prmisDefault(_refRecId))
    {
        this.setField(fieldNum(MCRCustPaymTable, OrigRefundRecID), _refRecId);
    }

    return mcrCustPaymTable.OrigRefundRecID;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymSched</Name>
				<Source><![CDATA[
public PaymSchedId parmPaymSched(PaymSchedId _paymSchedId = '')
{
    if (!prmisDefault(_paymSchedId))
    {
        this.setField(fieldNum(MCRCustPaymTable, PaymSchedId), _paymSchedId);
    }

    return mcrCustPaymTable.PaymSchedId;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmPercentAmount</Name>
				<Source><![CDATA[
public Percent parmPercentAmount(Percent _percentAmount = 0)
{
    if (!prmisDefault(_percentAmount))
    {
        this.setField(fieldNum(MCRCustPaymTable, PercentAmount), _percentAmount);
    }

    return mcrCustPaymTable.PercentAmount;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmPostedAmount</Name>
				<Source><![CDATA[
public AmountCur parmPostedAmount(AmountCur _postedAmount = 0)
{
    if (!prmisDefault(_postedAmount))
    {
        this.setField(fieldNum(MCRCustPaymTable, PostedAmount), _postedAmount);
    }

    return mcrCustPaymTable.PostedAmount;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmRefRecId</Name>
				<Source><![CDATA[
public RefRecId parmRefRecId(RefRecId _refRecId = 0)
{
    if (!prmisDefault(_refRecId))
    {
        this.setField(fieldNum(MCRCustPaymTable, RefRecId), _refRecId);
    }

    return mcrCustPaymTable.RefRecId;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmRefTableId</Name>
				<Source><![CDATA[
public RefTableId parmRefTableId(RefTableId _refTableId = 0)
{
    if (!prmisDefault(_refTableId))
    {
        this.setField(fieldNum(MCRCustPaymTable, RefTableId), _refTableId);
    }

    return mcrCustPaymTable.RefTableId;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmStatus</Name>
				<Source><![CDATA[
public MCRCustPaymStatus parmStatus(MCRCustPaymStatus _status = MCRCustPaymStatus::NotSubmitted)
{
    if (!prmisDefault(_status))
    {
        this.setField(fieldNum(MCRCustPaymTable, Status), _status);
    }

    return mcrCustPaymTable.Status;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmTenderTypeId</Name>
				<Source><![CDATA[
public MCRRetailStoreTenderTypeId parmTenderTypeId(MCRRetailStoreTenderTypeId _tenderTypeId = '')
{
    if (!prmisDefault(_tenderTypeId))
    {
        this.setField(fieldNum(MCRCustPaymTable, TenderTypeId), _tenderTypeId);
    }

    return mcrCustPaymTable.TenderTypeId;
}

]]></Source>
			</Method>
			<Method>
				<Name>setAmount</Name>
				<Source><![CDATA[
protected void setAmount()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, Amount)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setCardTypeId</Name>
				<Source><![CDATA[
protected void setCardTypeId()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, CardTypeId)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setChannel</Name>
				<Source><![CDATA[
protected void setChannel()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, Channel)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setCheckNumber</Name>
				<Source><![CDATA[
protected void setCheckNumber()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, CheckNumber)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setCustAccount</Name>
				<Source><![CDATA[
protected void setCustAccount()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, CustAccount)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setCustPaymType</Name>
				<Source><![CDATA[
protected void setCustPaymType()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, CustPaymType)))
    {
        return;
    }

    this.setTenderTypId();
    this.setChannel();
    this.setCardTypeId();

    if (this.isFieldSet(fieldNum(MCRCustPaymTable, TenderTypeId)))
    {
        this.parmCustPaymType(MCRCustPaymTable::getMCRTypeFromTender(this.parmTenderTypeId(),
                                                                    this.parmChannel(),
                                                                    this.parmCardTypeId()));
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setIsPrepay</Name>
				<Source><![CDATA[
protected void setIsPrepay()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, IsPrepay)))
    {
        return;
    }

    this.setCustPaymType();

    if (this.isFieldSet(fieldNum(MCRCustPaymTable, TenderTypeId)))
    {
        if (this.parmCustPaymType() == MCRCustPaymType::Cash
            || this.parmCustPaymType() == MCRCustPaymType::Check)
        {
            this.parmIsPrepay(true);
        }
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
protected void setLineNum()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, LineNum)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setNumAuthRetry</Name>
				<Source><![CDATA[
protected void setNumAuthRetry()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, NumAuthRetry)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setPaymSchedId</Name>
				<Source><![CDATA[
protected void setPaymSchedId()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, PaymSchedId)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setPercentAmount</Name>
				<Source><![CDATA[
protected void setPercentAmount()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, PercentAmount)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setPostedAmount</Name>
				<Source><![CDATA[
protected void setPostedAmount()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, PostedAmount)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setRefRecId</Name>
				<Source><![CDATA[
protected void setRefRecId()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, RefRecId)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setRefTableId</Name>
				<Source><![CDATA[
protected void setRefTableId()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, RefTableId)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setStatus</Name>
				<Source><![CDATA[
protected void setStatus()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, Status)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
protected void setTableFields()
{
    super();

    useMapPolicy = false;

    this.setRefTableId();
    this.setPercentAmount();
    this.setAmount();
    this.setStatus();
    this.setCheckNumber();
    this.setLineNum();
    this.setIsPrepay();
    this.setCustAccount();
    this.setRefRecId();
    this.setPostedAmount();
    this.setCardTypeId();
    this.setTenderTypeId();
    this.setCustPaymType();
    this.setNumAuthRetry();
    this.setPaymSchedId();

    useMapPolicy = true;
}

]]></Source>
			</Method>
			<Method>
				<Name>setTenderTypeId</Name>
				<Source><![CDATA[
protected void setTenderTypeId()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, TenderTypeId)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setTenderTypId</Name>
				<Source><![CDATA[
protected void setTenderTypId()
{
    if (this.isMethodExecuted(funcName(), fieldNum(MCRCustPaymTable, TenderTypeId)))
    {
        return;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
public static AxMCRCustPaymTable construct()
{
    return new AxMCRCustPaymTable();
}

]]></Source>
			</Method>
			<Method>
				<Name>newMCRCustPaymTable</Name>
				<Source><![CDATA[
/// <summary>
/// Constructs a new instance of the <c>AxMCRCustPaymTable</c> class.
/// </summary>
/// <param name="_mcrCustPaymTable">
/// THe specified base record of the <c>MCRCustPaymTable</c> table.
/// </param>
/// <returns>
/// The instantiated and initialized object of the <c>axMCRCustPaymTable</c> class.
/// </returns>
public static AxMCRCustPaymTable newMCRCustPaymTable(MCRCustPaymTable _mcrCustPaymTable)
{
    AxMCRCustPaymTable axMCRCustPaymTable = AxMCRCustPaymTable::construct();
    ;
    axMCRCustPaymTable.mcrCustPaymTable(_mcrCustPaymTable);

    return axMCRCustPaymTable;
}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>