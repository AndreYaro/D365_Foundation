<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDisposalDPLV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The Report Data Provider <c>AssetDisposalDPLV</c> class declares table for the <c>AssetDisposalLV</c> Report.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(AssetDisposalLV)),
    SRSReportParameterAttribute(classStr(AssetDisposalContractLV))
]
public class AssetDisposalDPLV extends SrsReportDataProviderPreProcessTempDB
{
    AssetDisposalTmp assetDisposalTmp;
    AssetSumCalc_Trans assetSumCalc_Trans;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetDisposalTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Fetches data from <c>AssetDisposalTmp</c> table.
    /// </summary>
    /// <returns>
    ///     <c>AssetDisposalTmp</c> data for the report.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(AssetDisposalTmp))
    ]
    public AssetDisposalTmp getAssetDisposalTmp()
    {
        select assetDisposalTmp;
        return assetDisposalTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertAssetDisposalTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts all the values into <c>AssetDisposalTmp</c> temp table.
    /// </summary>
    /// <param name="_assetSumCalc">
    ///     The <c>AssetSumCalc</c> field to which to assign a value.
    /// </param>
    /// <param name="_assetTable">
    ///     The <c>AssetTable</c> field to which to assign a value.
    /// </param>
    /// <param name="_assetBook">
    ///     The <c>AssetBook</c> field to which to assign a value.
    /// </param>
    public void insertAssetDisposalTmp(
        AssetSumCalc    _assetSumCalc,
        AssetTable      _assetTable,
        AssetBook       _assetBook)
    {
        assetDisposalTmp.clear();
        assetDisposalTmp.AssetGroup             = _assetBook.AssetGroup;
        assetDisposalTmp.AssetId                = _assetBook.AssetId;
        assetDisposalTmp.AssetName              = _assetTable.Name;
        assetDisposalTmp.CategoryId             = _assetTable.CategoryId_LV;
        assetDisposalTmp.BookId                 = _assetBook.BookId;
        assetDisposalTmp.AcquisitionDate        = _assetTable.AcquisitionDate_W;
        assetDisposalTmp.DisposalDate           = _assetBook.DisposalDate;
        assetDisposalTmp.Status                 = _assetBook.Status;
        assetDisposalTmp.SaleValue              = _assetSumCalc.disposalValue();
        assetDisposalTmp.ScrapValue             = _assetBook.ScrapValue;
        assetDisposalTmp.LifeTime               = _assetBook.usedLifeTime_LV();
        assetDisposalTmp.FinancialValue         = _assetSumCalc.financialValueBeforeScrap_LV();
        assetDisposalTmp.Depreciation           = _assetSumCalc.depreciation();
        assetDisposalTmp.NetBookValue           = _assetSumCalc.netBookValueBeforeScrap_LV();

        assetDisposalTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Fetches the required data for the report.
    /// </summary>
    public void processReport()
    {
        Query query;
        QueryRun queryRun;
        AssetTable assetTable;
        AssetBook assetBook;
        AssetSumCalc assetSumCalc;
        AssetDisposalContractLV contract = this.parmDataContract() as AssetDisposalContractLV;

        query = this.parmQuery();
        queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            assetTable     = queryRun.get(tableNum(AssetTable)) as AssetTable;
            assetBook      = queryRun.get(tableNum(AssetBook)) as AssetBook;

            assetSumCalc = AssetSumCalc_Trans::newAssetYear(
                    assetBook.AssetId,
                    assetBook.BookId);

            this.insertAssetDisposalTmp(assetSumCalc, assetTable, assetBook);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>