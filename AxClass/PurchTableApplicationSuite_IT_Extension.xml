<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTableApplicationSuite_IT_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(PurchTable))]
public final class PurchTableApplicationSuite_IT_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        next modifiedField(_fieldId);

        if (_fieldId == fieldNum(PurchTable, IntentLetterId_IT) && FeatureStateProvider::isFeatureEnabled(PlafondFeature::instance()))
        {
            this.modifiedIntentLetterId_IT();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferInvoiceAccount</Name>
				<Source><![CDATA[
    public void transferInvoiceAccount()
    {
        next transferInvoiceAccount();

        if (FeatureStateProvider::isFeatureEnabled(PlafondFeature::instance()))
        {
            this.initUsualExporter_IT();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferOrderAccount</Name>
				<Source><![CDATA[
    public void transferOrderAccount()
    {
        next transferOrderAccount();

        if (FeatureStateProvider::isFeatureEnabled(PlafondFeature::instance()))
        {
            this.initUsualExporter_IT();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedIntentLetterId_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets tax group when intent letter ID is changed.
    /// </summary>
    public void modifiedIntentLetterId_IT()
    {
        if (this.IntentLetterId_IT)
        {
            if (IntentLetter_IT::find(this.IntentLetterId_IT).Status == IntentLetterStatus_IT::Open)
            {
                VendParameters vendParameters = VendParameters::find();

                if (vendParameters.PlafondTaxGroup_IT)
                {
                    this.setTaxGroup(vendParameters.PlafondTaxGroup_IT);
                    info("@ExtendedItallianLocalization:UsExpTaxGroupUsed");
                }
                else
                {
                    warning("@ExtendedItallianLocalization:UsExpTaxGroupNotSetVend");
                    this.IntentLetterId_IT = '';
                }
            }
        }
        else
        {
            this.setTaxGroup(this.vendTable_InvoiceAccount().TaxGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initUsualExporter_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes intent letter ID and tax group.
    /// </summary>
    public void initUsualExporter_IT()
    {
        IntentLetter_IT intentLetter;
        TransDate refDate;
        VendParameters vendParameters = VendParameters::find();

        refDate = this.deliveryDate ? this.DeliveryDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        if (vendParameters.AutomaticIntentLetterAssignment_IT)
        {
            intentLetter = IntentLetter_IT::findActiveIntentLetterByType(
                this.invoiceAccount,
                IntentLetterType_IT::Amount,
                refDate);
        }

        if (!intentLetter || !vendParameters.PlafondTaxGroup_IT)
        {
            this.IntentLetterId_IT = '';
        }

        if (intentLetter )
        {
            if (vendParameters.PlafondTaxGroup_IT 
                && (this.IntentLetterId_IT != intentLetter.IntentLetterId || this.TaxGroup != vendParameters.PlafondTaxGroup_IT))
            {
                this.IntentLetterId_IT = intentLetter.IntentLetterId;
                this.setTaxGroup(vendParameters.PlafondTaxGroup_IT);
                info("@ExtendedItallianLocalization:UsExpTaxGroupUsed");
            }
        }
        else
        {
            select firstonly RecId from intentLetter
                    where intentLetter.VendAccount == this.invoiceAccount
                        && intentLetter.IntentLetterType != IntentLetterType_IT::Period
                        && intentLetter.Status == IntentLetterStatus_IT::Open
                        && intentLetter.FromDate <= refDate && intentLetter.ToDate >= refDate;

            if (intentLetter)
            {
                info("@ExtendedItallianLocalization:IntentLettersArePresent");
            }
        }


        if (!intentLetter
            && vendParameters.PlafondTaxGroup_IT
            && this.TaxGroup == vendParameters.PlafondTaxGroup_IT)
        {
            warning("@ExtendedItallianLocalization:UsExpTaxGroupUsedButNoActiveLetters");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>