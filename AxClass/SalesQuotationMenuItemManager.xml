<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationMenuItemManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Redirects calls to <c>SalesQuotationListPage</c> form, to the <c>SalesQuotationTable</c> form.
/// </summary>
public class SalesQuotationMenuItemManager
{
    private FormRun formRun;
        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    [Hookable(false)]
    public void run()
    {
        if (formRun.name() != formStr(SalesQuotationListPage))
        {
            throw error("@SYS104799");
        }
        
        if (SalesParameters::find().IsSalesQuotationMenuItemManagerEnabled)
        {
            MenuFunction menuFunction = this.newMenuFunction();
            if (menuFunction)
            {
                menuFunction.run(this.newArgsFromArgs(formRun.args()));
                formRun.lifecycleHelper().exitForm();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMenuFunction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a <c>MenuFunction</c> class object if the SalesQuotationListPage menu item is shipped as part of the standard application.
    /// </summary>
    /// <returns>
    /// A <c>MenuFunction</c> class object.
    ///</returns>
    [Hookable(false)]
    private MenuFunction newMenuFunction()
    {
        MenuFunction menuFunction;
            
        void menuFunctionNewFormRun()
        {
            str menuItemDisplayName = 
                SalesQuotationMenuItemDisplayNameFlight::instance().isEnabled() 
                    ? menuItemDisplayStr(SalesQuotationTable) 
                    : formRun.args().menuItemName();
            menuFunction = new MenuFunction(menuItemDisplayName, MenuItemType::Display);
            menuFunction.objectType(MenuItemObjectType::Form);
            menuFunction.object(formStr(SalesQuotationTable));
            menuFunction.formViewOption(FormViewOption::Grid);
        }
        
        switch (formRun.args().menuItemName())
        {
            case menuItemDisplayStr(SalesQuotationListPage) :
            case menuItemDisplayStr(SalesQuotationListPageInfoPartMoreAction) :
                menuFunctionNewFormRun();
                break;

            case menuItemDisplayStr(SalesQuotationsListPage_MyQuotations) :
                menuFunctionNewFormRun();
                menuFunction.query(queryStr(SalesQuotationGridViewMyQuotations));
                break;

            case menuItemDisplayStr(SalesQuotationsListPage_Open) :
                menuFunctionNewFormRun();
                menuFunction.query(queryStr(SalesQuotationGridViewOpen));
                break;

            case menuItemDisplayStr(SalesQuotationsListPage_Expiring) :
                menuFunctionNewFormRun();
                menuFunction.query(queryStr(SalesQuotationGridViewExpiring));
                break;

            case menuItemDisplayStr(SalesQuotationsListPage_MyExpiring) :
                menuFunctionNewFormRun();
                menuFunction.query(queryStr(SalesQuotationGridViewMyExpiring));
                break;

            case menuItemDisplayStr(SalesQuotationListPage_New) :
            case menuItemDisplayStr(CustSalesQuotationListPage_New) :
                menuFunctionNewFormRun();
                menuFunction.query(queryStr(SalesQuotationGridViewNew));
                break;

            case menuItemDisplayStr(SalesQuotationListPage_Sent) :
                menuFunctionNewFormRun();
                menuFunction.query(queryStr(SalesQuotationGridViewSent));
                break;

            default : break;
        }

        return menuFunction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected static SalesQuotationMenuItemManager construct()
    {
        return new SalesQuotationMenuItemManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFormRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an object of the <c>SalesQuotationMenuItemManager</c> class.
    /// </summary>
    /// <param name = "_formRun">
    /// A <c>FormRun</c> class object.
    /// </param>
    /// <returns>
    /// A <c>SalesQuotationMenuItemManager</c> class object.
    /// </returns>
    [Hookable(false)]
    public static SalesQuotationMenuItemManager newFormRun(FormRun _formRun)
    {
        SalesQuotationMenuItemManager salesQuotationMenuItemManager = SalesQuotationMenuItemManager::construct();
        salesQuotationMenuItemManager.formRun = _formRun;
        return salesQuotationMenuItemManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newArgsFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates and initiates an new <c>Args</c> class object from an existing <c>Args</c> class object.
    /// </summary>
    /// <param name = "_args">
    /// An <c>Args</c> class object.
    /// </param>
    /// <returns>
    /// An <c>Args</c> class object.
    ///</returns>
    [Hookable(false)]
    internal Args newArgsFromArgs(Args _args)
    {
        Args args = new Args();
        args.parmEnumType(_args.parmEnumType());
        args.parmEnumeration(_args.parmEnumeration());

        if (SalesQuotationMenuItemManagerFilterQuotationsFromContactsFlight::instance().isEnabled())
        {
            if (this.shouldSetCallerRecord(_args))
            {
                args.record(_args.record());
            }
        }
        else
        {
            if (this.setCallerRecord(_args) || _args.record().TableId == tablenum(smmBusRelTable))
            {
                args.record(_args.record());
            }
            else if (SalesQuotationMenuItemManagerFilterQuotationsFromOpportunitiesFlight::instance().isEnabled())
            {
                if (_args.record().TableId == tablenum(smmOpportunityTable))
                {
                    args.record(_args.record());
                }
            }
        }

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCallerRecord</Name>
				<Source><![CDATA[
    protected boolean setCallerRecord(Args _args)
    {
        return TradeFormHelper::isCalledFromForm(_args, formStr(CustTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSetCallerRecord</Name>
				<Source><![CDATA[
    protected boolean shouldSetCallerRecord(Args _args)
    {
        boolean ret;

        switch (_args.record().TableId)
        {
            case tablenum(ContactPerson) :
                ret = SalesQuotationMenuItemManagerFilterQuotationsFromContactsFlight::instance().isEnabled();
                break;

            case tablenum(smmOpportunityTable) :
                ret = SalesQuotationMenuItemManagerFilterQuotationsFromOpportunitiesFlight::instance().isEnabled();
                break;

            case tablenum(smmBusRelTable) :
                ret = true;
                break;

            case tablenum(CustTable) :
                ret = true;
                break;

            default :
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>