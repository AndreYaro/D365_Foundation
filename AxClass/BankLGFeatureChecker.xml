<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLGFeatureChecker</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLGFeatureChecker</c> class is used to check the features of the Letter of Guarantee
///    feature.
/// </summary>
class BankLGFeatureChecker extends BankDocumentFeatureCheckerBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCheckFailedMessage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The method returns the failed message definition.
    /// </summary>
    /// <returns>
    ///    The message.
    /// </returns>
    public str getCheckFailedMessage()
    {
        // The parameter "Enable Letter of Guarantee" should be marked to access this form.
        return "@SYS314700";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFeatureName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The message returns the feature name.
    /// </summary>
    /// <returns>
    ///    The name of the feature.
    /// </returns>
    public str getFeatureName()
    {
        // Letter of Guarantee
        return "@SYS314671";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFeatureRelatedCountryRegionCodes</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The feature is a global feature.
    /// </summary>
    /// <returns>
    ///    Always return an empty container.
    /// </returns>
    protected container getFeatureRelatedCountryRegionCodes()
    {
        return connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Check to see whether the Letter of Guarantee feature is enabled or disabled.
    /// </summary>
    /// <returns>
    ///    true if the feature is enabled; otherwise, false.
    /// </returns>
    protected boolean isFeatureEnabled()
    {
        return BankParameters::find().BankLGEnable == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new(boolean _isAllowCaching = true)
    {
        super(_isAllowCaching);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkBankLGEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The static API to check if the Letter of Guarantee feature is enabled or disabled.
    /// </summary>
    /// <param name="_raiseError">
    ///    true if the error should be raised if the feature is not enabled; otherwise, false.
    /// </param>
    /// <returns>
    ///    true if the feature is enabled; otherwise, false.
    /// </returns>
    public static boolean checkBankLGEnabled(boolean _raiseError = false)
    {
        return BankLGFeatureChecker::construct(false).checkFeatureEnabled(_raiseError);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>BankLGFeatureChecker</c> class.
    /// </summary>
    /// <param name="_isAllowCaching">
    /// If the value is true, the check result will be cached.
    /// The default parameter value is true.
    /// </param>
    /// <returns>
    /// A new instance of the <c>BankLGFeatureChecker</c> class.
    /// </returns>
    public static BankLGFeatureChecker construct(boolean _isAllowCaching = true)
    {
        return new BankLGFeatureChecker(_isAllowCaching);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>