<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerDependencyProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Provides <c>Ledger</c> dependency information.
/// </summary>
[ExportMetadataAttribute("LedgerIDependencyProvider", "DefaultProvider"),ExportAttribute("Dynamics.AX.Application.LedgerIDependencyProvider")]
public class LedgerDependencyProvider implements LedgerIDependencyProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doDependentRecordsExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether activity exists for the ledger.
    /// </summary>
    /// <param name="_ledgerRecId">
    /// The ID of ledger.
    /// </param>
    /// <returns>
    /// true if activity exists for the ledger; otherwise, false.
    /// </returns>
    public boolean doDependentRecordsExist(LedgerRecId _ledgerRecId)
    {
        return GeneralJournalEntry::existForLedger(_ledgerRecId) ||
            SubledgerJournalEntry::existForLedger(_ledgerRecId) ||
            BudgetTransactionHeader::existForLedger(_ledgerRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistMainAccountNum_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if existing transaction for specific account
    /// </summary>
    /// <param name="_accountNum">
    /// Main account number
    /// </param>
    /// <param name="_chartOfAccounts">
    /// Rec id of chart of accounts
    /// </param>
    /// <returns>
    /// True if existing related transaction
    /// </returns>
    public boolean checkExistMainAccountNum_CN(
        MainAccountNum _accountNum,
        RecId          _chartOfAccounts)
    {
        return GeneralJournalAccountEntry::checkExistMainAccountNum_CN(_accountNum, _chartOfAccounts);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistMainAccountRecId_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if existing transaction for specific account recid
    /// </summary>
    /// <param name="_accountNumRecId">
    /// RecId of main account
    /// </param>
    /// <returns>
    /// True if existing related transaction
    /// </returns>
    public boolean checkExistMainAccountRecId_CN(RecId _accountNumRecId)
    {
        return GeneralJournalAccountEntry::checkExistMainAccountRecId_CN(_accountNumRecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>