<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocLineItemConstraintCharges</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Source document line item constraint for charges on a vendor invoice line
/// </summary>
[
SourceDocumentEnumExtensionAttribute(enumStr(SourceDocumentLine_VendorInvoice), SourceDocumentLine_VendorInvoice::VendorInvoiceChargeLine)
]
class SourceDocLineItemConstraintCharges extends SourceDocumentLineItemConstraint
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>proRateUsingParentAccountingDistribution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constrains accounting distributions to be prorated using parent accounting distributions.
    /// </summary>
    /// <returns>
    /// true if the constraint is not required; otherwise, false.
    /// </returns>
    public boolean proRateUsingParentAccountingDistribution()
    {
        VendorInvoiceLineSourceDocLineItem  vendorInvoiceLineSourceDocLineItem;
        SourceDocumentLineItem              parentSourceDocumentLineItem = sourceDocumentLineItem.parmParentSourceDocumentLineItem();
        boolean                             proRateUsingParentAccountingDistribution = true;  // typically charges will use their parents distributions to find an account.

        if (parentSourceDocumentLineItem)
        {
            vendorInvoiceLineSourceDocLineItem = parentSourceDocumentLineItem;

            if (vendorInvoiceLineSourceDocLineItem.parmStocked())
            {
                // if the item is stocked, don't use the parent distribution to find an account.
                proRateUsingParentAccountingDistribution = false;
            }
        }

        return proRateUsingParentAccountingDistribution;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>