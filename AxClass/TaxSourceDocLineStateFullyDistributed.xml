<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSourceDocLineStateFullyDistributed</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxSourceDocLineStateFullyDistrubuted</c> class is a fully distributed source document line
/// state of tax.
/// </summary>
[SourceDocumentClassExtensionAttribute(tableStr(TaxUncommitted))]
class TaxSourceDocLineStateFullyDistributed extends SourceDocumentLineStateFullyDistributed
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateAllAccountsFullyQualified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether all ledger dimension should be validated.
    /// </summary>
    /// <returns>
    /// true if all ledger dimension should be validated; otherwise, false.
    /// </returns>
    protected boolean validateAllAccountsFullyQualified()
    {
        boolean                 validateAllAccountsFullyQualified;
        TaxSourceDocSublineItem taxSourceDocSublineItem;
        Common                  sourceRecord;
        MarkupTrans             markupTrans;

        if (!lineProcessor.parmIsProcessForDocument())
        {
            taxSourceDocSublineItem = processor.parmCurrentItem();
            sourceRecord = taxSourceDocSublineItem.parmParentSourceDocumentLineItem().parmSourceDocumentLineImplementation();

            switch (sourceRecord.TableId)
            {
                case tableNum(MarkupTrans):
                    markupTrans = sourceRecord as MarkupTrans;

                    switch (markupTrans.TransTableId)
                    {
                        case tableNum(PurchTable):
                        case tableNum(PurchLine) :
                            validateAllAccountsFullyQualified = PurchTable::mustValidateAllAccountsFullyQualified();
                            break;

                        default:
                            validateAllAccountsFullyQualified = super();
                    }
                    break;

                case tableNum(PurchTable):
                case tableNum(PurchLine) :
                    validateAllAccountsFullyQualified = PurchTable::mustValidateAllAccountsFullyQualified();
                    break;

                default:
                    validateAllAccountsFullyQualified = super();
                    break;
            }
        }

        return validateAllAccountsFullyQualified;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>