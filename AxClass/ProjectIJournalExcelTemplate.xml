<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjectIJournalExcelTemplate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public interface ProjectIJournalExcelTemplate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isJournalTypeSupported</Name>
				<Source><![CDATA[
    /// <summary>
    /// A boolean value which indicates whether the journal type is supported for the Excel template.
    /// </summary>
    /// <param name = "_projJournalType">The Proj journal type.</param>
    /// <returns>True if the journal type is supported; otherwise, false.</returns>
    public boolean isJournalTypeSupported(ProjJournalType _projJournalType)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentTemplateName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the document template name.
    /// </summary>
    /// <returns>The document template name</returns>
    public DocuTemplateName documentTemplateName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateJournalForTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the journal is valid for the template.
    /// </summary>
    /// <param name = "_projJournalTable">The <c>ProjJournalTable</c> record.</param>
    /// <returns>True if the journal is valid for the template; otherwise, false.</returns>
    public boolean validateJournalForTemplate(ProjJournalTable _projJournalTable)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>headerEntityName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The resource name of the header entity.
    /// </summary>
    /// <returns>The resource name of the header entity.</returns>
    public EntityName headerEntityName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>projLineEntityName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The resource name of the line entity.
    /// </summary>
    /// <returns>The resource name of the line entity.</returns>
    public DocuTemplateName projLineEntityName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>headerJournalBatchNumberFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The field name for the header journal batch number.
    /// </summary>
    /// <returns>The field name for the header journal batch number.</returns>
    public FieldName headerJournalBatchNumberFieldName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>headerDataAreaFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The field name for the header data area.
    /// </summary>
    /// <returns>The field name for the header data area.</returns>
    public FieldName headerDataAreaFieldName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineJournalBatchNumberFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The field name for the line journal batch number.
    /// </summary>
    /// <returns>The field name for the line journal batch number.</returns>
    public FieldName lineJournalBatchNumberFieldName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineDataAreaFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The field name for the line data area.
    /// </summary>
    /// <returns>The field name for the line data area.</returns>
    public FieldName lineDataAreaFieldName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendHeaderEntityFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Append additional filter to the default filtering behavior.
    /// </summary>
    /// <returns>The original filter with new filter(s) appended; Otherwise, the original filter</returns>
    public Microsoft.Dynamics.Platform.Integration.Office.FilterCollectionNode appendHeaderEntityFilters(Microsoft.Dynamics.Platform.Integration.Office.FilterCollectionNode _headerFilter, ExportToExcelFilterTreeBuilder _headerFilterBuilder)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendLineEntityFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Append additional filter to the default filtering behavior.
    /// </summary>
    /// <returns>The original filter with new filter(s) appended; Otherwise, the original filter</returns>
    public Microsoft.Dynamics.Platform.Integration.Office.FilterCollectionNode appendLineEntityFilters(Microsoft.Dynamics.Platform.Integration.Office.FilterCollectionNode _lineFilter, ExportToExcelFilterTreeBuilder _lineFilterBuilder)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>