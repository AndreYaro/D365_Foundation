<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanAllocateReqByLedgerAllocRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetPlanAllocateReqByLedgerAllocRule</c> class is used to capture the information
///    that is required to allocate budget plans lines by ledger allocation rule.
/// </summary>
public class BudgetPlanAllocateReqByLedgerAllocRule extends BudgetPlanAllocateRequest
{
    BudgetPlanHeaderRecId   parentBudgetPlanHeaderRecId;
    BudgetPlanScenarioRecId sourceBudgetPlanScenarioRecId;
    BudgetPlanScenarioRecId basisBudgetPlanScenarioRecId;
    boolean                 useSourceEffectiveDateForAllocation;
    LedgerAllocationRuleID  ledgerAllocationRuleID;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmUseSourceEffectiveDateForAllocation</Name>
				<Source><![CDATA[
    public boolean parmUseSourceEffectiveDateForAllocation(boolean _useSourceEffectiveDateForAllocation = useSourceEffectiveDateForAllocation)
    {
        useSourceEffectiveDateForAllocation = _useSourceEffectiveDateForAllocation;

        return useSourceEffectiveDateForAllocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetPlanAllocateType</Name>
				<Source><![CDATA[
    public BudgetPlanAllocateType getBudgetPlanAllocateType()
    {
        return BudgetPlanAllocateType::AllocateByLedgerRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBasisBudgetPlanScenarioRecId</Name>
				<Source><![CDATA[
    public BudgetPlanScenarioRecId parmBasisBudgetPlanScenarioRecId(
        BudgetPlanScenarioRecId _basisBudgetPlanScenarioRecId = basisBudgetPlanScenarioRecId)
    {
        basisBudgetPlanScenarioRecId = _basisBudgetPlanScenarioRecId;

        return basisBudgetPlanScenarioRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerAllocationRuleID</Name>
				<Source><![CDATA[
    public LedgerAllocationRuleID parmLedgerAllocationRuleID(LedgerAllocationRuleID _ledgerAllocationRuleID = ledgerAllocationRuleID)
    {
        ledgerAllocationRuleID = _ledgerAllocationRuleID;

        return ledgerAllocationRuleID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParentBudgetPlanHeaderRecId</Name>
				<Source><![CDATA[
    public BudgetPlanHeaderRecId parmParentBudgetPlanHeaderRecId(
        BudgetPlanHeaderRecId _parentBudgetPlanHeaderRecId = parentBudgetPlanHeaderRecId)
    {
        parentBudgetPlanHeaderRecId = _parentBudgetPlanHeaderRecId;

        return parentBudgetPlanHeaderRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceBudgetPlanScenarioRecId</Name>
				<Source><![CDATA[
    public BudgetPlanScenarioRecId parmSourceBudgetPlanScenarioRecId(
        BudgetPlanScenarioRecId _sourceBudgetPlanScenarioRecId = sourceBudgetPlanScenarioRecId)
    {
        sourceBudgetPlanScenarioRecId = _sourceBudgetPlanScenarioRecId;

        return sourceBudgetPlanScenarioRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean isValid;
        LedgerAllocationRule ledgerAllocationRule;

        changeCompany (CompanyInfo::getDataArea(this.parmLegalEntityRecId()))
        {
            if (ledgerAllocationRuleID)
            {
                ledgerAllocationRule = LedgerAllocationRule::find(ledgerAllocationRuleID);

                if (parentBudgetPlanHeaderRecId &&
                    (ledgerAllocationRule.DataSource == LedgerAllocationSource::FixedValue ||
                    (ledgerAllocationRule.DataSource != LedgerAllocationSource::FixedValue &&
                    sourceBudgetPlanScenarioRecId)))
                {
                    isValid = super();

                    if ((ledgerAllocationRule.AllocationMethod == LedgerAllocationMethod::Basis) && (basisBudgetPlanScenarioRecId == 0))
                    {
                        isValid = false;
                    }
                }
            }
        }
        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BudgetPlanAllocateReqByLedgerAllocRule construct()
    {
        return new BudgetPlanAllocateReqByLedgerAllocRule();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>