<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjStatistic</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjStatistic</c> class holds the parameters that are used to calculate project statistics
/// in memory.
/// </summary>
/// <remarks>
/// This class consists almost exclusively of methods to get or set parameters that are used to
/// calculate project statistics in memory. Used primarily by the project statistics form. Many of the
/// parameters are chosen by the user on that form, whereas others are set based on the selected
/// project. For more information about project statistics and the fields available to restrict the
/// calculation, see the application documentation for the Project statistics form.
/// </remarks>
class   ProjStatistic extends RunBase
{
    boolean             fixedPrice;
    boolean             timeMaterial;
    boolean             internalCost;
    boolean             investment;
    boolean             time;

    TransDate           projFromDate;
    TransDate           projToDate;
    TransDate           ledgerFromDate;
    TransDate           ledgerToDate;

    boolean             hour;
    boolean             expenses;
    boolean             revenue;
    boolean             onAcc;
    boolean             item;

    ItemId              itemId;
    ResourceRecId       resource;
    ResourceCategoryRecId resourceCategory;
    SMASubscriptionId       subscriptionId;
    SMASubscriptionGroupId subscriptionGroupId;

    ProjCategoryId      categoryId;
    ProjCategoryGroupId categoryGroupId;

    ProjId              projId;
    boolean             projTree;
    ProjWipId           projWipId;
    ProjGrantId         projGrantId;

    ProjSort            sorting1;
    ProjSort            sorting2;
    ProjSort            sorting3;

    ProjGroupId         projGroupId;
    ProjInvoiceProjId   projInvoiceProjId;
    CustAccount         custAccount;

    TransDate           ledgerBreakDate;
    TransDate           projBreakDate;

    boolean             actual;
    ForecastModelId     forecastModelId;

    ProjActualBudget    actualBudget;
    str                 m_sForecastModelIds;
    Level               m_iDisplayLevel;
    PSAProjOriginakVsCurrent  m_iOriginalCurrent;

    #define.CurrentVersion(6)
    #localmacro.CurrentList
    fixedPrice,
    timeMaterial,
    internalCost,
    investment,
    time,
    projFromDate,
    projToDate,
    ledgerFromDate,
    ledgerToDate,
    hour,
    expenses,
    revenue,
    onAcc,
    item,
    itemId,
    resource,
    resourceCategory,
    subscriptionId,
    subscriptionGroupId,
    categoryId,
    categoryGroupId,
    projId,
    projTree,
    projWipId,
    sorting1,
    sorting2,
    sorting3,
    projGroupId,
    projInvoiceProjId,
    custAccount,
    ledgerBreakDate,
    projBreakDate,
    actual,
    forecastModelId,
    m_sForecastModelIds,
    m_iDisplayLevel,
    actualBudget,
    projGrantId
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGrantId</Name>
				<Source><![CDATA[
    public ProjGrantId parmGrantId(ProjGrantId _grantId = projGrantId)
    {
        projGrantId = _grantId;

        return projGrantId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActual</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Actual</c> parameter.
    /// </summary>
    /// <param name="_actual">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Actual</c> parameter.
    /// </returns>
    public boolean parmActual(boolean _actual = actual)
    {
        actual = _actual;

        return actual;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActualBudget</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ActualBudget</c> parameter.
    /// </summary>
    /// <param name="_actualBudget">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ActualBudget</c> parameter.
    /// </returns>
    public ProjActualBudget parmActualBudget(ProjActualBudget _actualBudget = actualBudget)
    {
        actualBudget = _actualBudget;

        return actualBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CategoryGroupId</c> parameter.
    /// </summary>
    /// <param name="_categoryGroupId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CategoryGroupId</c> parameter.
    /// </returns>
    public ProjCategoryGroupId parmCategoryGroupId(ProjCategoryGroupId _categoryGroupId = categoryGroupId)
    {
        categoryGroupId  = _categoryGroupId;

        return categoryGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CustAccount</c> parameter.
    /// </summary>
    /// <param name="_custAccount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CustAccount</c> parameter.
    /// </returns>
    public CustAccount parmCustAccount(CustAccount _custAccount = custAccount)
    {
        custAccount  = _custAccount;

        return custAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExpenses</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Expenses</c> parameter.
    /// </summary>
    /// <param name="_expenses">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Expenses</c> parameter.
    /// </returns>
    public boolean parmExpenses(boolean _expenses = expenses)
    {
        expenses = _expenses;

        return expenses;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>FixedPrice</c> parameter.
    /// </summary>
    /// <param name="_fixedPrice">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>FixedPrice</c> parameter.
    /// </returns>
    public boolean parmFixedPrice(boolean _fixedPrice = fixedPrice)
    {
        fixedPrice = _fixedPrice;

        return fixedPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmForecastModelId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ForecastModelId</c> parameter.
    /// </summary>
    /// <param name="_forecastModelId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ForecastModelId</c> parameter.
    /// </returns>
    public ForecastModelId parmForecastModelId(ForecastModelId _forecastModelId = forecastModelId)
    {
        forecastModelId = _forecastModelId;

        return forecastModelId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHour</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Hour</c> parameter.
    /// </summary>
    /// <param name="_hour">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Hour</c> parameter.
    /// </returns>
    public boolean parmHour(boolean _hour = hour)
    {
        hour = _hour;

        return hour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInternalCost</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InternalCost</c> parameter.
    /// </summary>
    /// <param name="_internalCost">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InternalCost</c> parameter.
    /// </returns>
    public boolean parmInternalCost(boolean _internalCost = internalCost)
    {
        internalCost = _internalCost;

        return internalCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvestment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Investment</c> parameter.
    /// </summary>
    /// <param name="_investment">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Investment</c> parameter.
    /// </returns>
    public boolean parmInvestment(boolean _investment = investment)
    {
        investment = _investment;

        return investment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Item</c> parameter.
    /// </summary>
    /// <param name="_item">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Item</c> parameter.
    /// </returns>
    public boolean parmItem(boolean _item = item)
    {
        item = _item;

        return item;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmitemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>itemId</c> parameter.
    /// </summary>
    /// <param name="_itemId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>itemId</c> parameter.
    /// </returns>
    public ItemId parmitemId(ItemId _itemId = itemId)
    {
        itemId  = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerBreakDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LedgerBreakDate</c> parameter.
    /// </summary>
    /// <param name="_breakFromDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LedgerBreakDate</c> parameter.
    /// </returns>
    public TransDate parmLedgerBreakDate(TransDate _breakFromDate = ledgerBreakDate)
    {
        ledgerBreakDate = _breakFromDate;

        if (ledgerBreakDate)
        {
            return ledgerBreakDate;
        }

        return dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerFromDate</Name>
				<Source><![CDATA[
    public TransDate parmLedgerFromDate(TransDate _ledgerfromDate = ledgerfromDate)
    {
        ledgerfromDate = _ledgerfromDate;

        if (ledgerfromDate)
        {
            return ledgerfromDate;
        }

        return dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerToDate</Name>
				<Source><![CDATA[
    public TransDate parmLedgerToDate(TransDate _ledgerToDate = ledgerToDate)
    {
        ledgerToDate = _ledgerToDate;

        if (ledgerToDate)
        {
            return ledgerToDate;
        }

        return dateMax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnAcc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>OnAcc</c> parameter.
    /// </summary>
    /// <param name="_onAcc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>OnAcc</c> parameter.
    /// </returns>
    public boolean parmOnAcc(boolean _onAcc = onAcc)
    {
        onAcc = _onAcc;

        return onAcc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjBreakDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjBreakDate</c> parameter.
    /// </summary>
    /// <param name="_breakToDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjBreakDate</c> parameter.
    /// </returns>
    public TransDate parmProjBreakDate(TransDate _breakToDate = projBreakDate)
    {
        projBreakDate = _breakToDate;

        if (projBreakDate)
        {
            return projBreakDate;
        }

        return dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjCategoryId</c> parameter.
    /// </summary>
    /// <param name="_projCategoryId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjCategoryId</c> parameter.
    /// </returns>
    public ProjCategoryId parmProjCategoryId(ProjCategoryId _projCategoryId = categoryId)
    {
        categoryId  = _projCategoryId;

        return categoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjFromDate</c> parameter.
    /// </summary>
    /// <param name="_projfromDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjFromDate</c> parameter.
    /// </returns>
    public TransDate parmProjFromDate(TransDate _projfromDate = projfromDate)
    {
        projfromDate = _projfromDate;

        if (projfromDate)
        {
            return projfromDate;
        }

        return dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjGroupId</c> parameter.
    /// </summary>
    /// <param name="_projGroupId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjGroupId</c> parameter.
    /// </returns>
    public ProjGroupId parmProjGroupId(ProjGroupId _projGroupId = projGroupId)
    {
        projGroupId  = _projGroupId;

        return projGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    public ProjId parmProjId(ProjId _projId = projId)
    {
        projId  = _projId;

        return projId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjInvoiceProjId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjInvoiceProjId</c> parameter.
    /// </summary>
    /// <param name="_projInvoiceProjId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjInvoiceProjId</c> parameter.
    /// </returns>
    public ProjInvoiceProjId parmProjInvoiceProjId(ProjInvoiceProjId _projInvoiceProjId = projInvoiceProjId)
    {
        projInvoiceProjId  = _projInvoiceProjId;

        return projInvoiceProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjToDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjToDate</c> parameter.
    /// </summary>
    /// <param name="_projToDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjToDate</c> parameter.
    /// </returns>
    public TransDate parmProjToDate(TransDate _projToDate = projToDate)
    {
        projToDate = _projToDate;

        if (projToDate)
        {
            return projToDate;
        }

        return dateMax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTree</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjTree</c> parameter.
    /// </summary>
    /// <param name="_projTree">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjTree</c> parameter.
    /// </returns>
    public boolean parmProjTree(boolean _projTree = projTree)
    {
        projTree    = _projTree;

        return projTree;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjWIPId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ProjWIPId</c> parameter.
    /// </summary>
    /// <param name="_projWipId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ProjWIPId</c> parameter.
    /// </returns>
    public ProjWipId parmProjWIPId(ProjWipId _projWipId = projWipId)
    {
        projWipId  = _projWipId;

        return projWipId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResource</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>resource</c> variable.
    /// </summary>
    /// <param name="_resourceRecId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>resource</c> variable.
    /// </returns>
    public ResourceRecId parmResource(ResourceRecId _resourceRecId = resource)
    {
        resource  = _resourceRecId;

        return resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>resourceCategory</c> variable.
    /// </summary>
    /// <param name="_resourceCategoryRecId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>resourceCategory</c> variable.
    /// </returns>
    public ResourceCategoryRecId parmResourceCategory(ResourceCategoryRecId _resourceCategoryRecId = resourceCategory)
    {
        resourceCategory  = _resourceCategoryRecId;

        return resourceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRevenue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Revenue</c> parameter.
    /// </summary>
    /// <param name="_revenue">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Revenue</c> parameter.
    /// </returns>
    public boolean parmRevenue(boolean _revenue = revenue)
    {
        revenue = _revenue;

        return revenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSorting1</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Sorting1</c> parameter.
    /// </summary>
    /// <param name="_sorting1">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Sorting1</c> parameter.
    /// </returns>
    public ProjSort parmSorting1(ProjSort _sorting1 = sorting1)
    {
        sorting1  = _sorting1;

        return sorting1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSorting2</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Sorting2</c> parameter.
    /// </summary>
    /// <param name="_sorting2">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Sorting2</c> parameter.
    /// </returns>
    public ProjSort parmSorting2(ProjSort _sorting2 = sorting2)
    {
        sorting2  = _sorting2;

        return sorting2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSorting3</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Sorting3</c> parameter.
    /// </summary>
    /// <param name="_sorting3">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Sorting3</c> parameter.
    /// </returns>
    public ProjSort parmSorting3(ProjSort _sorting3 = sorting3)
    {
        sorting3  = _sorting3;

        return sorting3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubscriptionGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SubscriptionGroupId</c> parameter.
    /// </summary>
    /// <param name="_subscriptionGroupId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SubscriptionGroupId</c> parameter.
    /// </returns>
    public SMASubscriptionGroupId parmSubscriptionGroupId(SMASubscriptionGroupId _subscriptionGroupId = subscriptionGroupId)
    {
        subscriptionGroupId  = _subscriptionGroupId;

        return subscriptionGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubscriptionId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SubscriptionId</c> parameter.
    /// </summary>
    /// <param name="_subscriptionId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SubscriptionId</c> parameter.
    /// </returns>
    public SMASubscriptionId parmSubscriptionId(SMASubscriptionId _subscriptionId = subscriptionId)
    {
        subscriptionId  = _subscriptionId;

        return subscriptionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTime</Name>
				<Source><![CDATA[
    public boolean parmTime(boolean _time = time)
    {
        time = _time;

        return time;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeMaterial</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>TimeMaterial</c> parameter.
    /// </summary>
    /// <param name="_timeMaterial">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>TimeMaterial</c> parameter.
    /// </returns>
    public boolean parmTimeMaterial(boolean _timeMaterial = timeMaterial)
    {
        timeMaterial = _timeMaterial;

        return timeMaterial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaParmDisplayLevel</Name>
				<Source><![CDATA[
    public Level psaParmDisplayLevel(Level _iDisplayLevel = m_iDisplayLevel)
    {
        m_iDisplayLevel = _iDisplayLevel;

        return m_iDisplayLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaParmForecastModelIds</Name>
				<Source><![CDATA[
    public str psaParmForecastModelIds(str _sForecastModelIds = m_sForecastModelIds)
    {
        m_sForecastModelIds = _sForecastModelIds;

        return m_sForecastModelIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaParmOriginalCurrent</Name>
				<Source><![CDATA[
    public PSAProjOriginakVsCurrent psaParmOriginalCurrent(PSAProjOriginakVsCurrent _iOriginalCurrent = m_iOriginalCurrent)
    {
        m_iOriginalCurrent = _iOriginalCurrent;

        return m_iOriginalCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer     version     = conPeek(_packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = _packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    protected static ClassDescription description()
    {
        return "@SYS112619";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>