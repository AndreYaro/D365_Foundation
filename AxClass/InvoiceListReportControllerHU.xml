<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InvoiceListReportControllerHU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The controller class for Invoice list report.
/// </summary>
class InvoiceListReportControllerHU extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        InvoiceListReportControllerHU controller = InvoiceListReportControllerHU::construct(_args);

        controller.initContract();
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initContract</Name>
				<Source><![CDATA[
    public void initContract()
    {
        this.parmDialogCaption('@AccountsReceivable:InvoiceList2016Hungary');

        InvoiceListReportContractHU contract = this.getDataContractObject() as InvoiceListReportContractHU;

        if (!contract.getQuery().dataSourceCount())
        {
            contract.initQuery();
        }
        this.queryChanged(strFmt('%1.parmQuery', this.getContractParameterName()), contract.getQuery());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SysOperationController construct(Args _args)
    {
        SysOperationController controller = new InvoiceListReportControllerHU(classstr(InvoiceListReportServiceHU),
                                                    methodstr(InvoiceListReportServiceHU, run),
                                                    SysOperationExecutionMode::Synchronous);
        controller.parmArgs(_args);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContractParameterName</Name>
				<Source><![CDATA[
    private str getContractParameterName()
    {
        SysDictMethod dictMethod = new SysDictMethod(UtilElementType::ClassInstanceMethod, className2Id(this.parmClassName()), this.parmMethodName());
        return dictMethod.parameterName(1);
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>