<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rTax25RegCalc_NonInvReceiptMult</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rTax25RegCalc_NonInvReceiptMult extends RTax25RegCalc_LedgerMultiply implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createBody</Name>
				<Source><![CDATA[
    protected void createBody()
    {
        AmountMST   advanceAdjAmount;
        AmountMST   markupAdjAmount;

        if (stdDocuments.amount())
        {
            [advanceAdjAmount, markupAdjAmount] = this.getAdvanceAdjAmount();

            regQuery.addBodyRecord(stdDocuments.profitTableRecId(),
                                  [stdDocuments.itemName() ? stdDocuments.itemName() : stdDocuments.txt(),
                                   stdDocuments.transDate(),
                                   stdDocuments.docName(),
                                   stdDocuments.assetId(),
                                   stdDocuments.paymModeName(),
                                   RTax25RegisterProfit::find(registerId, stdDocuments.profitTableRecId()).PaymentCondition,
                                   stdDocuments.qty(),
                                   stdDocuments.price() + advanceAdjAmount / stdDocuments.qty(),
                                   stdDocuments.amount() + advanceAdjAmount],
                                   stdDocuments.tableId(),
                                   stdDocuments.recId(),
                                   RTax25RegisterProfit::find(registerId, stdDocuments.profitTableRecId()).PaymentCondition,
                                   -startCount);
            startCount++;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>footerContainer</Name>
				<Source><![CDATA[
    protected container footerContainer()
    {
        return ["",dateNull(),"","","","", lastProfitTableRecId ? profitQty : totalQty, 0.0, lastProfitTableRecId ? profitAmount : totalAmount];
    }
]]></Source>
			</Method>
			<Method>
				<Name>initRunItem</Name>
				<Source><![CDATA[
    protected boolean initRunItem()
    {
        boolean ret;

        ret      = super();
        linesSet = new Set(Types::Container);

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>totals</Name>
				<Source><![CDATA[
    protected void totals(RTax25RegisterTransMap _trans)
    {
        RTax25RegisterTrans_NonInventReceipt trans = _trans;
        totalAmount     +=  trans.ReceiptCostValue;
        profitAmount    +=  trans.ReceiptCostValue;
        totalQty        +=  trans.ReceiptInventQty;
        profitQty       +=  trans.ReceiptInventQty;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>