<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCountStatisticsCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventCountStatisticsCreate
{
    QueryRun                    queryRun;
    TmpInventCountStatistics    tmpInventCountStatistics;
    InventDimParm               inventDimParm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addInventCountJour</Name>
				<Source><![CDATA[
    protected void addInventCountJour(InventCountJour _inventCountJour)
    {
        InventDim       inventDim   = InventDim::find(_inventCountJour.InventDimId);
        ItemId          itemId      = (inventDimParm.ItemIdFlag) ? _inventCountJour.ItemId : '';

        inventDim.clearNotSelectedDim(inventDimParm);
        InventDimId inventDimId = InventDim::findOrCreate(inventDim).InventDimId;

        select firstonly forupdate tmpInventCountStatistics
            where tmpInventCountStatistics.ItemId       == itemId
               && tmpInventCountStatistics.InventDimId  == inventDimId;

        if (tmpInventCountStatistics)
        {
            if (_inventCountJour.Ok)
            {
                tmpInventCountStatistics.QtyOK++;
            }
            else
            {
                tmpInventCountStatistics.QtyNotOK++;
            }
            tmpInventCountStatistics.update();
        }
        else
        {
            tmpInventCountStatistics.ItemId         = itemId;
            tmpInventCountStatistics.InventDimId    = inventDimId;
            if (_inventCountJour.Ok)
            {
                tmpInventCountStatistics.QtyOK++;
            }
            else
            {
                tmpInventCountStatistics.QtyNotOK++;
            }
            tmpInventCountStatistics.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(InventCountJour));
        List                    productDimFields = InventDim::dimProductDimFieldList();
        ListEnumerator          enumerator = (productDimFields) ? productDimFields.getEnumerator() : null;

        #InventDimDevelop

        super();

        queryBuildDataSource.addRange(fieldNum(InventCountJour, ItemId));
        queryBuildDataSource.addRange(fieldNum(InventCountJour, CountDate));
        queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(InventDim));
        queryBuildDataSource.joinMode(JoinMode::InnerJoin);
        queryBuildDataSource.relations(true);

        queryBuildDataSource.addRange(fieldNum(InventDim, InventSiteId));
        queryBuildDataSource.addRange(fieldNum(InventDim, InventLocationId));
        if (enumerator)
        {
            while (enumerator.moveNext())
            {
                FieldId inventDimFieldId = enumerator.current();
                queryBuildDataSource.addRange(inventDimFieldId);
                inventDimParm.(InventDim::dim2dimParm(inventDimFieldId)) = NoYes::Yes;
            }
        }

        queryRun = new QueryRun(query);

        inventDimParm.ItemIdFlag        = NoYes::Yes;

        inventDimParm.InventSiteIdFlag = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimParm</Name>
				<Source><![CDATA[
    public InventDimParm parmInventDimParm(InventDimParm _inventDimParm = inventDimParm)
    {
        inventDimParm = _inventDimParm;
        return inventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQueryRun</Name>
				<Source><![CDATA[
    public QueryRun parmQueryRun(QueryRun _queryRun = queryRun)
    {
        queryRun = _queryRun;
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpInventCountStatistics</Name>
				<Source><![CDATA[
    public TmpInventCountStatistics parmTmpInventCountStatistics(TmpInventCountStatistics _tmpInventCountStatistics = tmpInventCountStatistics)
    {
        tmpInventCountStatistics = _tmpInventCountStatistics;
        return tmpInventCountStatistics;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        while (queryRun.next())
        {
            this.addInventCountJour(queryRun.getNo(1) as InventCountJour);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
