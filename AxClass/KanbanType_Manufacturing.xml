<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanType_Manufacturing</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>KanbanType_Manufacturing</c> class controls kanbans of the Manufacturing type.
/// </summary>
public class KanbanType_Manufacturing extends KanbanType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canHaveBOM</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a kanban can have a BOM.
    /// </summary>
    /// <returns>
    /// true if the kanban can have a BOM; otherwise, false .
    /// </returns>
    public boolean canHaveBOM()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canHaveNonDefaultReceivedQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a kanban can have a non default received quantity.
    /// </summary>
    /// <returns>
    ///    true if the kanban can have a non default received quantity; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    Always returns true.
    /// </remarks>
    public boolean canHaveNonDefaultReceivedQty()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canHaveScrapQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a kanban job can have a scrap quantity.
    /// </summary>
    /// <returns>
    ///    true if the job can have a scrap quantity; otherwise, false.
    /// </returns>
    public boolean canHaveScrapQty()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerTransType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the <c>LedgerTransType</c> enumeration value to use with ledger postings.
    /// </summary>
    /// <returns>
    ///    A <c>LedgerTransType</c> value.
    /// </returns>
    public LedgerTransType ledgerTransType()
    {
        return LedgerTransType::Production;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustHaveTransferJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the kanban must have a transfer job.
    /// </summary>
    /// <returns>
    ///    true if the kanban must have a transfer job; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    A manufacturing kanban may have one or more transfer jobs, depending on the kanban flow.
    /// </remarks>
    public boolean mustHaveTransferJob()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sysModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the <c>SysModule</c> enumeration value to use with ledger postings.
    /// </summary>
    /// <returns>
    ///    A <c>SysModule</c> enumeration value.
    /// </returns>
    /// <remarks>
    ///    The base class method is abstract.
    /// </remarks>
    public SysModule sysModule()
    {
        return SysModule::Prod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>KanbanType_Manufacturing</c> class.
    /// </summary>
    /// <param name="_kanban">
    ///    The <c>Kanban</c> table buffer that is used to initialize the class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>KanbanType_Manufacturing</c> class.
    /// </returns>
    public static KanbanType construct(Kanban _kanban)
    {
        return new KanbanType_Manufacturing(_kanban);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>