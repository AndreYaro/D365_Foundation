<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcAdaptorSourceDocumentLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PcAdaptorSourceDocumentLine
{
    Common sourceLine;

    // mapping fields
    InventQty   inventQuantity;
    SalesPrice  price;

    InventDim inventDim;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBOMId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the bill of material ID of a source document line.
    /// </summary>
    /// <returns>
    /// The bill of material ID.
    /// </returns>
    public BOMId getBOMId()
    {
        ProdTable                   prodTable;

        BOMId ret;

        switch (sourceLine.TableId)
        {
            case tableNum(SalesLine)                :
            case tableNum(SalesQuotationLine)       :
            case tableNum(PurchLine)                :
            case tableNum(SalesBasketLine)          :
            case tableNum(SalesQuotationBasketLine) :
            ret = sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesLine, ItemBOMId)));
            break;
            case tableNum(ProdTable)                :
            prodTable   = sourceLine;
            ret = prodTable.bomId;
            break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getConfiguration</Name>
				<Source><![CDATA[
    public EcoResConfigurationName getConfiguration()
    {
        return inventDim.ConfigId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the item number from a source document line.
    /// </summary>
    /// <returns>
    /// The item number.
    /// </returns>
    public ItemId getItemNumber()
    {
        return sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesLine, ItemId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLotId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the invent transaction ID of a source document line.
    /// </summary>
    /// <returns>
    /// The invent transaction ID.
    /// </returns>
    public InventTransId getLotId()
    {
        SalesBasketLine             salesBasketLine;
        SalesQuotationBasketLine    salesQuotationBasketLine;

        InventTransId ret;

        switch (sourceLine.TableId)
        {
            case tableNum(SalesLine)                :
            case tableNum(SalesQuotationLine)       :
            case tableNum(ProdTable)                :
            case tableNum(PurchLine)                :
            ret = sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesLine, InventTransId)));
            break;
            case tableNum(SalesBasketLine)          :
            salesBasketLine = sourceLine;
            ret = salesBasketLine.SalesBasketId;
            break;
            case tableNum(SalesQuotationBasketLine) :
            salesQuotationBasketLine = sourceLine;
            ret = salesQuotationBasketLine.SalesQuotationBasketId;
            break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrice</Name>
				<Source><![CDATA[
    protected SalesPrice getPrice()
    {
        SalesPrice ret;

        switch (sourceLine.TableId)
        {
            case tableNum(SalesLine)                :
            case tableNum(SalesQuotationLine)       :
            case tableNum(SalesBasketLine)          :
            case tableNum(SalesQuotationBasketLine) :
            ret = sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesLine, SalesPrice)));
            break;
            case tableNum(ProdTable)                :
            // has no sales price
            break;
            case tableNum(PurchLine)                :
            ret = sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(PurchLine, PurchPrice)));
            break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantity</Name>
				<Source><![CDATA[
    protected InventQty getQuantity()
    {
        ProdTable                   prodTable;

        InventQty ret;

        switch (sourceLine.TableId)
        {
            case tableNum(SalesLine)                :
            case tableNum(SalesQuotationLine)       :
            case tableNum(PurchLine)                :
            ret = sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesLine, QtyOrdered)));
            break;
            case tableNum(ProdTable)                :
            prodTable   = sourceLine;
            ret = prodTable.QtySched;
            break;
            case tableNum(SalesBasketLine)          :
            case tableNum(SalesQuotationBasketLine) :
            ret = sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesBasketLine, SalesQty)));
            break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRouteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the route operation ID of a source document line.
    /// </summary>
    /// <returns>
    /// A route operation ID.
    /// </returns>
    public RouteId getRouteId()
    {
        ProdTable                   prodTable;

        RouteId ret;

        switch (sourceLine.TableId)
        {
            case tableNum(SalesLine)                :
            case tableNum(SalesQuotationLine)       :
            case tableNum(PurchLine)                :
            case tableNum(SalesBasketLine)          :
            case tableNum(SalesQuotationBasketLine) :
            ret = sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesLine, ItemRouteId)));
            break;
            case tableNum(ProdTable)                :
            prodTable   = sourceLine;
            ret = prodTable.RouteId;
            break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSiteID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the site ID from a source document line.
    /// </summary>
    /// <returns>
    /// The site ID.
    /// </returns>
    public InventSiteId getSiteID()
    {
        return inventDim.InventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a source document line.
    /// </summary>
    /// <returns>
    /// The source document line.
    /// </returns>
    public Common getSourceDocumentLine()
    {
        return sourceLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrice</Name>
				<Source><![CDATA[
    public SalesPrice parmPrice(SalesPrice _price = price)
    {
        this.setPrice(_price);

        return this.getPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantity</Name>
				<Source><![CDATA[
    public InventQty parmQuantity(InventQty _quantity = inventQuantity)
    {
        this.setQuantity(_quantity);

        return this.getQuantity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPrice</Name>
				<Source><![CDATA[
    protected void setPrice(SalesPrice _price)
    {
        price = _price;

        switch (sourceLine.TableId)
        {
            case tableNum(SalesLine)                :
            case tableNum(SalesQuotationLine)       :
            case tableNum(SalesBasketLine)          :
            case tableNum(SalesQuotationBasketLine) :
            sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesLine, SalesPrice))) = price;
            break;
            case tableNum(ProdTable)                :
            // has no sales price
            break;
            case tableNum(PurchLine)                :
            sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(PurchLine, PurchPrice))) = price;
            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantity</Name>
				<Source><![CDATA[
    protected void setQuantity(InventQty _quantity)
    {
        ProdTable                   prodTable;

        inventQuantity = _quantity;

        switch (sourceLine.TableId)
        {
            case tableNum(SalesLine)                :
            case tableNum(SalesQuotationLine)       :
            case tableNum(PurchLine)                :
            sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesLine, QtyOrdered))) = inventQuantity;
            break;
            case tableNum(ProdTable)                :
            prodTable   = sourceLine;
            prodTable.QtySched = inventQuantity;
            break;
            case tableNum(SalesBasketLine)          :
            case tableNum(SalesQuotationBasketLine) :
            sourceLine.(fieldName2id(sourceLine.TableId, fieldStr(SalesBasketLine, SalesQty))) = inventQuantity;
            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSourceLine</Name>
				<Source><![CDATA[
    protected void setSourceLine(Common _sourceLine)
    {
        sourceLine = _sourceLine;

        inventDim = InventDim::find(sourceLine.(fieldName2id(_sourceLine.TableId, fieldStr(SalesLine, InventDimId))));

        // initialize mapping fields
        inventQuantity  = this.getQuantity();
        price           = this.getPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceLine</Name>
				<Source><![CDATA[
    protected void validateSourceLine(Common _sourceLine)
    {
        if (!this.isSourceLineValid(_sourceLine))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSourceLineValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates source document line.
    /// </summary>
    /// <param name="_sourceLine">The source document line.</param>
    /// <returns>true if source document line is valid; otherwise, false.</returns>
    protected boolean isSourceLineValid(Common _sourceLine)
    {
        boolean ret;

        switch (_sourceLine.TableId)
        {
            case tableNum(SalesLine)                :
            case tableNum(SalesQuotationLine)       :
            case tableNum(SalesBasketLine)          :
            case tableNum(SalesQuotationBasketLine) :
            case tableNum(PurchLine) :
            case tableNum(ProdTable) :
                ret = true;
                break;
            default:
                ret = false;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCAdaptorSourceDocumentLine construct(Common _sourceLine)
    {
        PCAdaptorSourceDocumentLine sourceDocumentLine = new PCAdaptorSourceDocumentLine();

        sourceDocumentLine.validateSourceLine(_sourceLine);
        sourceDocumentLine.setSourceLine(_sourceLine);

        return sourceDocumentLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>