<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupPeriodChargeCalculateModeAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class MarkupPeriodChargeCalculateModeAttribute extends SysAttribute implements SysExtensionIAttribute
{
    MarkupPeriodChargeRuleLineType periodChargeRuleLineType;
    boolean useSingleton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(
        MarkupPeriodChargeRuleLineType _periodChargeRuleLineType,
        boolean _useSingleton = false)
    {
        super();
        periodChargeRuleLineType = _periodChargeRuleLineType;
        useSingleton = _useSingleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodChargeRuleLineType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal MarkupPeriodChargeRuleLineType parmPeriodChargeRuleLineType()
    {
        return periodChargeRuleLineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCacheKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the key used for storing cached data for this attribute.
    /// </summary>
    /// <returns>
    /// A string representing the cache key.
    /// </returns>
    public str parmCacheKey()
    {
        return classStr(MarkupPeriodChargeCalculate)+';'+int2str(enum2int(periodChargeRuleLineType))+';'+int2Str(useSingleton);
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSingleton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the same instance should be returned by the extension framework for a given extension.
    /// </summary>
    /// <returns>
    /// true, if the same instance should be used; otherwise, false.
    /// </returns>
    public boolean useSingleton()
    {
        return useSingleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>