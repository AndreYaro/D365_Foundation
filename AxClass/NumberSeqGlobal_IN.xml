<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqGlobal_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>NumberSeqGlobal_IN</c> class is the global number sequence.
/// </summary>
class NumberSeqGlobal_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildModulesMapBasedOnParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds module map based on Incentive scheme parameter. If Incentive scheme parmeter is disable and the module map contains India EXIM module, then remove India EXIM module from the module list.
    /// </summary>
    /// <param name="_modulesMap">
    /// Map which contains module list
    /// </param>
    /// <returns>
    /// Returns module list based on whether Incentive scheme is not marked
    /// </returns>
    /// <remarks>
    /// Removes EXIM module from module list if Apply incentive scheme is not marked
    /// Returns Same module list if Apply incentive scheme is marked
    /// </remarks>
    public Map buildModulesMapBasedOnParameter(Map _modulesMap)
    {
        if (!TaxParameters::isEximIncentiveSchemEnable_IN()
            && _modulesMap.exists(NumberSeqModule::EXIM_IN))
        {
            _modulesMap.remove(NumberSeqModule::EXIM_IN);
        }

        return _modulesMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds module map based on Incentive scheme parameter, triggered when delegate doPopulateModuleComboBox in NumberSequenceAddReference is called.
    /// </summary>
    /// <param name = "_moduleMap">Map which contains module list</param>
    [SubscribesTo(formstr(NumberSequenceAddReference), delegatestr(NumberSequenceAddReference, doPopulateModuleComboBox))]
    public static void buildModulesMapHandler(Map _moduleMap)
    {
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            var nsGlobalMap = new NumberSeqGlobal_IN();
            nsGlobalMap.buildModulesMapBasedOnParameter(_moduleMap);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>