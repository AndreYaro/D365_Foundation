<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailB2BProspectENInfo_Approved</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Generates email notification for approved B2B prospects.
/// </summary>
internal class RetailB2BProspectENInfo_Approved extends RetailB2BProspectENInfo
{
    // Email template placeholders
    private const str Email = 'email';
    private const str ZipCode = 'zipcode';
    private const str Comments = 'comments';
    private const str StoreName = 'storename';
    private const str StoreUrl = 'storeurl';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>EventNotificationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the event notification type.
    /// </summary>
    /// <returns>
    /// Event notification type.
    /// </returns>
    public RetailEventNotificationType EventNotificationType()
    {
        return RetailEventNotificationType::B2BProspectApproved;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParameterMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills map with the values for placeholders.
    /// </summary>
    protected void initParameterMap()
    {
        LogisticsPostalAddress  address;

        super();

        if (b2bProspect)
        {
            // Add extra params here
            address = DirParty::primaryPostalAddress(b2bProspect.Party);

            parameterMap.insert(Email, emailAddress);
            parameterMap.insert(ZipCode, address.ZipCode);
            parameterMap.insert(Comments, b2bProspectComments);
            parameterMap.insert(StoreName, channel.name());
            parameterMap.insert(StoreUrl, '');
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>