<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>AxDirPerson</Name>
  <SourceCode>
    <Declaration><![CDATA[
class AxDirPerson extends AxDirPartyTable
{
    DirPerson   dirPerson;
    str         personSuffix;
    str         personTitle;
    boolean     personSuffixSet;
    boolean     personTitleSet;
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>axOrig</Name>
        <Source><![CDATA[
        public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
      </Method>
      <Method>
        <Name>currentRecord</Name>
        <Source><![CDATA[
        public Common currentRecord(Common _dirPerson = dirPerson)
    {
        if (!prmisdefault(_dirPerson))
        {
            super(_dirPerson);
            dirPerson = _dirPerson;
        }
        else
        {
            super();
        }

        return dirPerson;
    }

]]></Source>
      </Method>
      <Method>
        <Name>dirPerson</Name>
        <Source><![CDATA[
        public DirPerson dirPerson(DirPerson _dirPerson = dirPerson)
    {
        if (!prmisdefault(_dirPerson))
        {
            this.setCurrentRecordFromExternal(_dirPerson);
        }

        return this.currentRecord();
    }

]]></Source>
      </Method>
      <Method>
        <Name>emptyRecord</Name>
        <Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>DirPerson</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>DirPerson</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        DirPerson localDirPerson;
        return localDirPerson;
    }
]]></Source>
      </Method>
      <Method>
        <Name>initMandatoryFieldsExemptionList</Name>
        <Source><![CDATA[
        protected void initMandatoryFieldsExemptionList()
    {
        super();

        this.setParmMethodAsNotMandatory(methodstr(AxDirPerson, parmNameSequence));
    }

]]></Source>
      </Method>
      <Method>
        <Name>new</Name>
        <Source><![CDATA[
        public void new()
    {
        isPartyNumberSpecified = false;
        super();
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmAnniversaryDay</Name>
        <Source><![CDATA[
        public Day parmAnniversaryDay(Day _anniversaryDay = 0)
    {
        if (!prmisdefault(_anniversaryDay))
        {
            this.setField(fieldnum(DirPerson, AnniversaryDay), _anniversaryDay);
        }

        return dirPerson.AnniversaryDay;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmAnniversaryMonth</Name>
        <Source><![CDATA[
        public MonthsOfYear parmAnniversaryMonth(MonthsOfYear _anniversaryMonth = MonthsOfYear::None)
    {
        if (!prmisdefault(_anniversaryMonth))
        {
            this.setField(fieldnum(DirPerson, AnniversaryMonth), _anniversaryMonth);
        }

        return dirPerson.AnniversaryMonth;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmAnniversaryYear</Name>
        <Source><![CDATA[
        public int parmAnniversaryYear(int _anniversaryYear = 0)
    {
        if (!prmisdefault(_anniversaryYear))
        {
            this.setField(fieldnum(DirPerson, AnniversaryYear), _anniversaryYear);
        }

        return dirPerson.AnniversaryYear;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmBirthDay</Name>
        <Source><![CDATA[
        public Day parmBirthDay(Day _birthDay = 0)
    {
        if (!prmisdefault(_birthDay))
        {
            this.setField(fieldnum(DirPerson, BirthDay), _birthDay);
        }

        return dirPerson.BirthDay;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmBirthMonth</Name>
        <Source><![CDATA[
        public MonthsOfYear parmBirthMonth(MonthsOfYear _birthMonth = MonthsOfYear::None)
    {
        if (!prmisdefault(_birthMonth))
        {
            this.setField(fieldnum(DirPerson, BirthMonth), _birthMonth);
        }

        return dirPerson.BirthMonth;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmBirthYear</Name>
        <Source><![CDATA[
        public int parmBirthYear(int _birthYear = 0)
    {
        if (!prmisdefault(_birthYear))
        {
            this.setField(fieldnum(DirPerson, BirthYear), _birthYear);
        }

        return dirPerson.BirthYear;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmChildrenNames</Name>
        <Source><![CDATA[
        public DirPersonChildrenNames parmChildrenNames(DirPersonChildrenNames _childrenNames = '')
    {
        if (!prmisdefault(_childrenNames))
        {
            this.setField(fieldnum(DirPerson, ChildrenNames), _childrenNames);
        }

        return dirPerson.ChildrenNames;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmCommunicatorSignIn</Name>
        <Source><![CDATA[
        public LogisticsElectronicAddressRecId parmCommunicatorSignIn(LogisticsElectronicAddressRecId _communicatorSignIn = 0)
    {
        if (!prmisdefault(_communicatorSignIn))
        {
            this.setField(fieldnum(DirPerson, CommunicatorSignIn), _communicatorSignIn);
        }

        return dirPerson.CommunicatorSignIn;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmGender</Name>
        <Source><![CDATA[
        public Gender parmGender(Gender _gender = Gender::Unknown)
    {
        if (!prmisdefault(_gender))
        {
            this.setField(fieldnum(DirPerson, Gender), _gender);
        }

        return dirPerson.Gender;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmHobbies</Name>
        <Source><![CDATA[
        public DirPersonHobbies parmHobbies(DirPersonHobbies _hobbies = '')
    {
        if (!prmisdefault(_hobbies))
        {
            this.setField(fieldnum(DirPerson, Hobbies), _hobbies);
        }

        return dirPerson.Hobbies;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmInitials</Name>
        <Source><![CDATA[
        public DirPersonInitials parmInitials(DirPersonInitials _initials = '')
    {
        if (!prmisdefault(_initials))
        {
            this.setField(fieldnum(DirPerson, Initials), _initials);
        }

        return dirPerson.Initials;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmMaritalStatus</Name>
        <Source><![CDATA[
        public DirPersonMaritalStatus parmMaritalStatus(DirPersonMaritalStatus _maritalStatus = DirPersonMaritalStatus::None)
    {
        if (!prmisdefault(_maritalStatus))
        {
            this.setField(fieldnum(DirPerson, MaritalStatus), _maritalStatus);
        }

        return dirPerson.MaritalStatus;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmNameSequence</Name>
        <Source><![CDATA[
        public DirNameSequenceRecId parmNameSequence(DirNameSequenceRecId _nameSequence = 0)
    {
        if (!prmisdefault(_nameSequence))
        {
            this.setField(fieldnum(DirPerson, NameSequence), _nameSequence);
        }

        return dirPerson.NameSequence;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPersonalSuffix</Name>
        <Source><![CDATA[
        public DirNameAffixRecId parmPersonalSuffix(DirNameAffixRecId _personalSuffix = 0)
    {
        if (!prmisdefault(_personalSuffix))
        {
            this.setField(fieldnum(DirPerson, PersonalSuffix), _personalSuffix);
        }

        return dirPerson.PersonalSuffix;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPersonalTitle</Name>
        <Source><![CDATA[
        public DirNameAffixRecId parmPersonalTitle(DirNameAffixRecId _personalTitle = 0)
    {
        if (!prmisdefault(_personalTitle))
        {
            this.setField(fieldnum(DirPerson, PersonalTitle), _personalTitle);
        }

        return dirPerson.PersonalTitle;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPersonSuffix</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Sets or gets the suffix string value of the person name.
    /// </summary>
    /// <param name="_suffix">
    ///    The string to represent the person name suffix.
    /// </param>
    /// <returns>
    ///    The string that represents the person name suffix.
    /// </returns>
    public DirNameAffixValue parmPersonSuffix(DirNameAffixValue _suffix = '')
    {
        DirPerson       dirPersonRecord;
        DirNameAffix    nameAffix;

        if (!prmisdefault(_suffix))
        {
            // Set
            personSuffixSet = true;
            personSuffix = _suffix;
        }
        else if (!personSuffixSet)
        {
            // Set
            personSuffixSet = true;
            // Get the person title
            dirPersonRecord = DirPerson::find(this.parmRecId(), false);
            select Affix from nameAffix where nameAffix.RecId == dirPersonRecord.PersonalSuffix;
            personSuffix = nameAffix.Affix;
        }

        return personSuffix;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPersonTitle</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Gets or sets the title string value of the person name.
    /// </summary>
    /// <param name="_title">
    ///    The string to represent the person name title.
    /// </param>
    /// <returns>
    ///    The string to represent the person name title.
    /// </returns>
    public DirNameAffixValue parmPersonTitle(DirNameAffixValue _title = '')
    {
        DirPerson       dirPersonRecord;
        DirNameAffix    nameAffix;

        if (!prmisdefault(_title))
        {
            // Set
            personTitleSet = true;
            personTitle = _title;
        }
        else if (!personTitleSet)
        {
            // Set
            personTitleSet = true;
            // Get the person title
            dirPersonRecord = DirPerson::find(this.parmRecId(), false);
            select Affix from nameAffix where nameAffix.RecId == dirPersonRecord.PersonalTitle;
            personTitle = nameAffix.Affix;
        }

        return personTitle;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPhoneticFirstName</Name>
        <Source><![CDATA[
        public DirPhoneticFirstName parmPhoneticFirstName(DirPhoneticFirstName _phoneticFirstName = '')
    {
        if (!prmisdefault(_phoneticFirstName))
        {
            this.setField(fieldnum(DirPerson, PhoneticFirstName), _phoneticFirstName);
        }

        return dirPerson.PhoneticFirstName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPhoneticLastName</Name>
        <Source><![CDATA[
        public DirPhoneticLastName parmPhoneticLastName(DirPhoneticLastName _phoneticLastName = '')
    {
        if (!prmisdefault(_phoneticLastName))
        {
            this.setField(fieldnum(DirPerson, PhoneticLastName), _phoneticLastName);
        }

        return dirPerson.PhoneticLastName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPhoneticMiddleName</Name>
        <Source><![CDATA[
        public DirPhoneticMiddleName parmPhoneticMiddleName(DirPhoneticMiddleName _phoneticMiddleName = '')
    {
        if (!prmisdefault(_phoneticMiddleName))
        {
            this.setField(fieldnum(DirPerson, PhoneticMiddleName), _phoneticMiddleName);
        }

        return dirPerson.PhoneticMiddleName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmProfessionalSuffix</Name>
        <Source><![CDATA[
        public DirNameProfessionalSuffix parmProfessionalSuffix(DirNameProfessionalSuffix _professionalSuffix = '')
    {
        if (!prmisdefault(_professionalSuffix))
        {
            this.setField(fieldnum(DirPerson, ProfessionalSuffix), _professionalSuffix);
        }

        return dirPerson.ProfessionalSuffix;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmProfessionalTitle</Name>
        <Source><![CDATA[
        public DirNameProfessionalTitle parmProfessionalTitle(DirNameProfessionalTitle _professionalTitle = '')
    {
        if (!prmisdefault(_professionalTitle))
        {
            this.setField(fieldnum(DirPerson, ProfessionalTitle), _professionalTitle);
        }

        return dirPerson.ProfessionalTitle;
    }

]]></Source>
      </Method>
      <Method>
        <Name>resetInternalValues</Name>
        <Source><![CDATA[
        public void resetInternalValues()
    {
        personTitleSet = false;
        personSuffixSet = false;
        super();
    }

]]></Source>
      </Method>
      <Method>
        <Name>setTableFields</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the <c>TableFields</c> parameter.
    /// </summary>
    protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
      </Method>
      <Method>
        <Name>construct</Name>
        <Source><![CDATA[
        static AxDirPerson construct()
    {
        return new AxDirPerson();
    }

]]></Source>
      </Method>
      <Method>
        <Name>newDirPerson</Name>
        <Source><![CDATA[
        public static AxDirPerson newDirPerson(DirPerson _dirPerson)
    {
        AxDirPerson axDirPerson = AxDirPerson::construct();
        axDirPerson.dirPerson(_dirPerson);

        return axDirPerson;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>