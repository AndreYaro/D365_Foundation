<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxEngineTaxDocumentEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The event handler for tax engine service.
/// </summary>
class TaxEngineTaxDocumentEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>onTaxDocumentSave</Name>
				<Source><![CDATA[
    /// <summary>
    /// Save tax document and processs other relevant logics.
    /// </summary>
    /// <param name = "_taxDocumentGUID">The tax document GUID.</param>
    [SubscribesTo(classstr(TaxEngineService), delegateStr(TaxEngineService, onTaxDocumentSave))]
    public static void onTaxDocumentSave(GUID _taxDocumentGUID)
    {
        TaxDocumentExtensionUtils::saveTaxDocumentExtensionTable(_taxDocumentGUID);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onTaxDocumentPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post tax document.
    /// </summary>
    /// <param name = "_taxDocumentGUID">The tax document GUID.</param>
    [SubscribesTo(classstr(TaxEngineService), delegateStr(TaxEngineService, onTaxDocumentPost))]
    public static void onTaxDocumentPost(GUID _taxDocumentGUID)
    {
        //This is left for TaxDocumentExtension.
        TaxDocument taxDocument;
        ITaxDocument taxDocumentObject;

        taxDocument = TaxDocument::findByGUID(_taxDocumentGUID);
        taxDocumentObject = taxDocument.toObject();

        TaxDocumentExtensionUtils::postTaxDocumentExtension(taxDocument, taxDocumentObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onLoadSourceTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Load source transaction.
    /// </summary>
    /// <param name = "_taxDocumentGUID">The tax document GUID.</param>
    /// <param name = "_result">The event handler result.</param>
    [SubscribesTo(classstr(TaxDocumentProxy), delegateStr(TaxDocumentProxy, onLoadSourceTransaction))]
    public static void onLoadSourceTransaction(GUID _taxDocumentGUID, EventHandlerResult _result)
    {
        TaxDocumentTransitDocument      tansitTable;
        Common                          sourceTransaction;

        select firstOnly tansitTable 
            where tansitTable.TaxDocument == _taxDocumentGUID;

        sourceTransaction = tansitTable.getSourceTransaction();
        _result.result(sourceTransaction);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onLoadSourceRowTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Load source tax document row transaction.
    /// </summary>
    /// <param name = "_taxDocumentLineGUID">The tax document line GUID.</param>
    /// <param name = "_result">The result of source transaction.</param>
    [SubscribesTo(classstr(TaxDocumentLineProxy), delegateStr(TaxDocumentLineProxy, onLoadSourceTransaction))]
    public static void onLoadSourceRowTransaction(GUID _taxDocumentLineGUID, EventHandlerResult _result)
    {
        TaxDocumentRowTransitDocument      tansitTable;
        Common                             sourceTransaction;

        select firstOnly tansitTable
            where tansitTable.TaxDocumentRow == _taxDocumentLineGUID;

        sourceTransaction = tansitTable.getSourceTransaction();
        _result.result(sourceTransaction);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onLoadTaxDocumentRowGUIDBySource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Load tax document row.
    /// </summary>
    /// <param name = "_tableId">The table Id of the original source transaction line.</param>
    /// <param name = "_recId">The record Id of the original source transaction line.</param>
    /// <param name = "_result">The result of tax document row GUID.</param>
    [SubscribesTo(classstr(TaxDocumentProxy), delegateStr(TaxDocumentProxy, onLoadTaxDocumentRowGUIDBySource))]
    public static void onLoadTaxDocumentRowGUIDBySource(RefTableId _tableId, RefRecId _recId, EventHandlerResult _result)
    {
        TaxDocumentRowTransitDocument   rowTransitDoc;

        rowTransitDoc = TaxDocumentTransitUtil::findTransitDocForLineByTransaction(_tableId, _recId);
        _result.result(rowTransitDoc.TaxDocumentRow);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>