<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendRequestStatusChangeWkItmActMgr</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>VendRequestStatusChangeWkItmActMgr</c> class is used when the <c>VendRequestStatusChange</c>
///    menu item is selected.
/// </summary>
class VendRequestStatusChangeWkItmActMgr
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canDeny</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the reason code has been entered by the user.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the vendor request item to check.
    /// </param>
    /// <returns>
    ///    true if the reason code is entered; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean canDeny(RecId _recId)
    {
        boolean     ret;

        if (VendRequestStatusChange::find(_recId).ReasonRef == 0)
        {
            ret = checkFailed("@SYS134421"); //Please provide a reason code for rejecting the request.
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Provides an entry point for the <c>VendRequestStatusChangeWkItmActMgr</c> class.
    /// </summary>
    /// <param name="_args">
    ///    The arguments for the class.
    /// </param>
    /// <exception cref="M:Exception::Error">
    ///    The valid action type for the corresponding work item could not be found.
    /// </exception>
    public static void main(Args _args)
    {
        WorkflowWorkItemTable           workItem;
        WorkflowWorkItemActionDialog    workflowWorkItemActionDialog;
        WorkflowWorkItemActionType      workItemActionType;
        boolean                         canDeny;
        RecId                           vendRequestRecId;

        workItem = _args.caller().getActiveWorkflowWorkItem();

        if (workItem.RecId != 0)
        {
            // get document record id
            vendRequestRecId = workItem.RefRecId;
            workItemActionType = WorkflowWorkItemActionManager::findActionTypeForMenuItem(  workItem, _args.menuItemName());

            if (workItemActionType == WorkflowWorkItemActionType::None)
            {
                throw error("@SYS109040"); //Could not find workflow work item action for the selected menu item
            }
            if (workItemActionType == WorkflowWorkItemActionType::Deny)
            {
                canDeny = VendRequestStatusChangeWkItmActMgr::canDeny(vendRequestRecId);
            }
            if (canDeny)
            {
                workflowWorkItemActionDialog = WorkflowWorkItemActionDialog::construct( workItem, workItemActionType, new MenuFunction(_args.menuItemName(), _args.menuItemType()));
                workflowWorkItemActionDialog.run();
                if (workflowWorkItemActionDialog.parmIsClosedOK())
                {
                    WorkflowWorkItemActionManager::dispatchWorkItemAction( workItem,workflowWorkItemActionDialog.parmWorkflowComment(), workflowWorkItemActionDialog.parmTargetUser(), workItemActionType, _args.menuItemName());
                }
            }
            _args.caller().updateWorkflowControls();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>