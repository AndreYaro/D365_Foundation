<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationJumpRef</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesQuotationJumpRef
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args _args)
    {
        Args                localArgs = new Args();

        QuotationIdBase quotationId = _args.lookupValue();

        if (!quotationId)
        {
            return;
        }

        SalesQuotationTable salesQuotationTable = SalesQuotationTable::find(quotationId);

        localArgs.caller(_args.caller());
        localArgs.record(salesQuotationTable);

        if (SalesQuotationJumpRef::mustCopyCallerQuery(localArgs))
        {
            localArgs.copyCallerQuery(CopyCallerQuery::Yes);
        }
        else
        {
            localArgs.copyCallerQuery(CopyCallerQuery::No);
        }
        

        MenuFunction menuFunction = SalesQuotationJumpRef::getMenuFunction(salesQuotationTable.QuotationType);
        menuFunction.run(localArgs);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCopyCallerQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if caller query must be copied.
    /// </summary>
    /// <param name = "_localArgs">
    /// Arguments where the caller query will be copied.
    /// </param>
    /// <returns>
    /// true if the caller query must be copied; otherwise, false.
    /// </returns>
    protected static boolean mustCopyCallerQuery(Args _localArgs)
    {
        return !_localArgs.caller() || _localArgs.caller().name() != formStr(PSAResourceAssignments);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMenuFunction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>MenuFunction</c> instance based on the specified <c>QuotationType</c>.
    /// </summary>
    /// <param name = "_quotationType">A <c>QuotationType</c> value.</param>
    /// <returns>The <c>MenuFunction</c> instance.</returns>
    protected static MenuFunction getMenuFunction(QuotationType _quotationType)
    {
        if (_quotationType == QuotationType::Project)
        {
            return new MenuFunction(menuitemdisplaystr(SalesQuotationProjTable), MenuItemType::Display);
        }

        return new MenuFunction(menuitemdisplaystr(SalesQuotationTable), MenuItemType::Display);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>