<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendNettingCandidateQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CustVendNettingCandidateQueryBuilder
{
    private const str AccountNum = 'AccountNum';
    private const str DueDate = 'DueDate';
    private const str CurrencyCode = 'CurrencyCode';
    private const str AmountCur = 'AmountCur';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildVendTransQueryFromTmpNettingBalance</Name>
				<Source><![CDATA[
    internal static void buildVendTransQueryFromTmpNettingBalance(QueryBuildDataSource _qbdsVendNettingTrans, CustVendNettingBalanceTmp _tmpNettingBalance)
    {
        CustVendNettingCandidateQueryBuilder::buildNettingCandidateQuery(
            _qbdsVendNettingTrans,
            tableNum(VendNettingTransView),
            _tmpNettingBalance.VendAccountNum,
            _tmpNettingBalance.StartDate,
            _tmpNettingBalance.ExpireDate,
            _tmpNettingBalance.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildCustTransQueryFromTmpNettingBalance</Name>
				<Source><![CDATA[
    internal static void buildCustTransQueryFromTmpNettingBalance(QueryBuildDataSource _qbdsCustNettingTrans, CustVendNettingBalanceTmp _tmpNettingBalance)
    {
        CustVendNettingCandidateQueryBuilder::buildNettingCandidateQuery(
            _qbdsCustNettingTrans,
            tableNum(CustNettingTransTotalView),
            _tmpNettingBalance.CustAccountNum,
            _tmpNettingBalance.StartDate,
            _tmpNettingBalance.ExpireDate,
            _tmpNettingBalance.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildNettingCandidateQuery</Name>
				<Source><![CDATA[
    internal static void buildNettingCandidateQuery(
        QueryBuildDataSource _qbds,
        TableId _dataSourceTable,
        CustVendAC _account,
        TransDate _fromDate,
        TransDate _toDate,
        CurrencyCode _currencyCode,
        str _amountCurRange = '')
    {
        _qbds.addRange(fieldName2Id(_dataSourceTable, AccountNum)).value(SysQuery::value(_account));
        _qbds.addRange(fieldName2Id(_dataSourceTable, DueDate)).value(SysQuery::range(_fromDate, _toDate));
        _qbds.addRange(fieldName2Id(_dataSourceTable, CurrencyCode)).value(SysQuery::value(_currencyCode));
        if (_amountCurRange)
        {
            _qbds.addRange(fieldName2Id(_dataSourceTable, AmountCur)).value(_amountCurRange);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>