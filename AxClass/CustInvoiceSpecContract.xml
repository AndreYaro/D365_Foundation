<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceSpecContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustInvoiceSpecContract</c> class is the Data Contract class for the <c>CustInvoiceSpec</c>
/// SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(CustInvoiceSpecUIBuilder)),
    SysOperationGroupAttribute('PrintOut', literalStr("@SYS12608"),'1'),
    SysOperationGroupAttribute('Criteria',literalStr("@SYS1046"),'2')
]
public class CustInvoiceSpecContract
    implements SysOperationValidatable, SysOperationInitializable
{
    boolean newPage;
    boolean printDimensions;

    List billingClassification;
    NoYes inclTransWithNoBillingClass;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes data contract values.
    /// </summary>
    public void initialize()
    {
        billingClassification = new List(Types::String);

        if (!CustParameters::isBillingClassificationEnabled())
        {
            billingClassification.addEnd(SysLabel::labelId2String(literalStr("@GLS223107")));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingClassification</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('BillingClassification'),
        SysOperationLabelAttribute(literalStr("@SPS371")),
        SysOperationHelpTextAttribute(literalStr("@SPS677")),
        SysOperationDisplayOrderAttribute('1'),
        AifCollectionTypeAttribute('return', Types::String)
    ]
    public List parmBillingClassification(List _billingClassification = billingClassification)
    {
        billingClassification = _billingClassification;
        return billingClassification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTransWithNoBillingClass</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('InclTransWithNoBillingClass'),
        SysOperationLabelAttribute(literalStr("@SPS691")),
        SysOperationHelpTextAttribute(literalStr("@SPS1009")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public NoYes parmInclTransWithNoBillingClass(NoYes _inclTransWithNoBillingClass = inclTransWithNoBillingClass)
    {
        inclTransWithNoBillingClass = _inclTransWithNoBillingClass;
        return inclTransWithNoBillingClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewPage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter NewPage.
    /// </summary>
    /// <param name="_newPage">
    /// The new value of the data contract parameter NewPage; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter NewPage.
    /// </returns>
    [
        DataMemberAttribute('NewPage'),
        SysOperationLabelAttribute(literalstr("@SYS15349")),
        SysOperationHelpTextAttribute(literalstr("@SYS76962")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public boolean parmNewPage(boolean _newPage = newPage)
    {
        newPage = _newPage;
        return newPage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter PrintDimensions.
    /// </summary>
    /// <param name="_printDimensions">
    /// The new value of the data contract parameter PrintDimensions; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter PrintDimensions.
    /// </returns>
    [
        DataMemberAttribute('PrintDimensions'),
        SysOperationLabelAttribute(literalstr("@SYS138491")),
        SysOperationGroupMemberAttribute('PrintOut'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public boolean parmPrintDimensions(boolean _printDimensions = printDimensions)
    {
        printDimensions = _printDimensions;
        return printDimensions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the dialog values for errors.
    /// </summary>
    /// <returns>
    /// false if an error has occurred in the dialog values; otherwise, true .
    /// </returns>
    /// <remarks>
    /// The dialog values are handled through the contract.
    /// </remarks>
    public boolean validate()
    {
        return CustBillingClassificationReportManager::validate(billingClassification, inclTransWithNoBillingClass);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>