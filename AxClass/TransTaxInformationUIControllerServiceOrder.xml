<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransTaxInformationUIControllerServiceOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller class for controlling all Service Order on new tax information UI and transaction update.
/// </summary>
[TransTaxInfoUIControllerAttribute(tableStr(SMAServiceOrderLine))]
class TransTaxInformationUIControllerServiceOrder extends TransTaxInformationUIControllerAP
{
    SMAServiceOrderLine smaServiceOrderLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setVisibleToCustTaxInfoCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Customs tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToCustTaxInfoCtrls()
    {
        super();
        transTaxInformationCustTaxInfoCtrl.parmCustomerTaxInformation().visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToVendTaxInfoCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all vendor tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToVendTaxInfoCtrls()
    {
        super();
        transTaxInformationVendorTaxInfoCtrl.parmVendorTaxInformation().visible(smaServiceOrderLine.TransactionType == SMATransactionType::Expense);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes UI controls and data source for Tax information form.
    /// </summary>
    protected void init()
    {
        if (sourceTable.TableId == tableNum(SMAServiceOrderLine))
        {
            smaServiceOrderLine = sourceTable;
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>