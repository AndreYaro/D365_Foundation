<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgDateTimeRange</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class for specifying Date Ranges
/// </summary>
/// <remarks>
/// Designed for use in services requiring date filter
/// </remarks>
[DataContractAttribute('DateTimeRange')]
public class JmgDateTimeRange
{
    utcDateTime fromDateTime;
    utcDateTime toDateTime;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRangeAsString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string represenation of the current <c>DateTimeRange</c> object
    /// </summary>
    /// <returns>
    /// String representation of the current object
    /// </returns>
    public str getRangeAsString()
    {
        if (fromDateTime && toDateTime)
        {
            return SysQuery::range(fromDateTime, toDateTime);
        }
        else if (fromDateTime)
        {
            return SysQuery::range(fromDateTime, DateTimeUtil::maxValue());
        }
        else if (toDateTime)
        {
            return SysQuery::range(DateTimeUtil::minValue(), toDateTime);
        }
        else
        {
            return "";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDateTime</Name>
				<Source><![CDATA[
        [DataMemberAttribute('FromDateTime')]
    public utcDateTime parmFromDateTime(utcDateTime _fromDateTime = fromDateTime)
    {
        fromDateTime = _fromDateTime;
        return fromDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDateTime</Name>
				<Source><![CDATA[
        [DataMemberAttribute('ToDateTime')]
    public utcDateTime parmToDateTime(utcDateTime _toDateTime = toDateTime)
    {
        toDateTime = _toDateTime;
        return toDateTime;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>