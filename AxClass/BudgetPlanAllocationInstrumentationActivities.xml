<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanAllocationInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BudgetPlanAllocationInstrumentationActivities
{
    private BudgetInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(BudgetInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static BudgetPlanAllocationInstrumentationActivities newFromLogger(BudgetInstrumentationLogger _logger)
    {
        return new BudgetPlanAllocationInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>budgetPlanAllocationContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext budgetPlanAllocationContext(BudgetPlanAllocateContract _allocateContract)
    {
        SysInstrumentationActivity activity = logger.activity(BudgetInstrumentationConstants::BudgetPlanAllocateService);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(BudgetInstrumentationConstants::TargetBudgetPlanScenarioRecId, int642Str(_allocateContract.parmTargetBudgetPlanScenarioRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::SourceBudgetPlanScenarioRecId, int642Str(_allocateContract.parmSourceBudgetPlanScenarioRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::BudgetAllocationFactor, int2Str(_allocateContract.parmFactor()))
            .addCustomProperty(BudgetInstrumentationConstants::AllocationMethod, any2Str(_allocateContract.parmAllocationMethod()))
            .addCustomProperty(BudgetInstrumentationConstants::AppendLines, any2Str(_allocateContract.parmAppendLines()))
            .addCustomProperty(BudgetInstrumentationConstants::ParentBudgetPlanHeaderRecId, int642Str(_allocateContract.parmParentBudgetPlanHeaderRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::SourceBudgetPlanHeaderRecId, int642Str(_allocateContract.parmSourceBudgetPlanHeaderRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::BasisBudgetPlanScenarioRecId, int642Str(_allocateContract.parmBasisBudgetPlanScenarioRecId()))
            .addCustomProperty(BudgetInstrumentationConstants::UseSourceEffectiveDateForAllocation, any2Str(_allocateContract.parmUseSourceEffectiveDateForAllocation()));

        logger.logBucketizedCount(activityContext, conLen(_allocateContract.parmSelectedPlanLines()));

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>