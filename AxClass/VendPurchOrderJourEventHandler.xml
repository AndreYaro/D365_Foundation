<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPurchOrderJourEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The Event handler class for <c>VendPurchOrderJournal</c> table and <c>VendPurchOrderJournal</c> form control
/// </summary>
internal static final class VendPurchOrderJourEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>vendPurchOrderJour_onInserted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Data event handler for Inserted event on <c>VendPurchOrderJournal</c> table
    /// </summary>
    /// <param name="sender">
    /// The table buffer that fires the Inserted event
    /// </param>
    /// <param name="e">
    /// DataEventArgs argument for the Inserted event
    /// </param>
    [DataEventHandler(tableStr(VendPurchOrderJour), DataEventType::Inserted)]
    public static void vendPurchOrderJour_onInserted(Common _sender, DataEventArgs _e)
    {
       
        CatCXMLPurchRequestMaintain::updateOrderJour(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRequest_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// The form control event handler for the <c>VendPurchOrderJournal</c> form
    /// </summary>
    /// <param name="sender">
    /// The opening form
    /// </param>
    /// <param name="e">
    /// The form event arguments
    /// </param>
    [FormControlEventHandler(formControlStr(VendPurchOrderJournal, PurchRequest), FormControlEventType::Clicked)]
    public static void purchRequest_OnClicked(FormControl _sender, FormControlEventArgs _e)
    {
        Args args = new Args();
        Args menuargs = new Args();
        FormButtonControl callerButton = _sender as FormButtonControl;
        FormRun form = callerButton.formRun();
        MenuFunction menuFunction;

        FormDataSource cxmlPurchRequestHistory_ds = form.dataSource(formDataSourceStr(VendPurchOrderJournal,CatCXMLPurchRequestHistory)) as FormDataSource;
        CatCXMLPurchRequestHistory cxmlPurchRequestHistory = cxmlPurchRequestHistory_ds.cursor();        

        menuargs.record(CatCXMLPurchRequest::findByPurchId(cxmlPurchRequestHistory.PurchId));
        menuFunction = new MenuFunction(menuItemDisplayStr(CatCXMLPurchRequest), MenuItemType::Display);
        new MenuFunction(menuItemDisplayStr(CatCXMLPurchRequest), MenuItemType::Display).run(menuargs);        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>