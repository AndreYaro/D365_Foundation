<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchSADJournalCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class creates purchase order invoices via SAD
/// </summary>
class PurchSADJournalCreate extends PurchInvoiceJournalCreate
{
    PurchFormLetterSADContract  sadContract;
    PlSADNumberCode             sadNumberCode;
    ExchRate                    sadExchRate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initJournalHeader</Name>
				<Source><![CDATA[
    protected void initJournalHeader()
    {
        super();

        vendInvoiceJour.ExchRate = this.parmSADExchRate_PL();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initJournalHeaderFromSAD_PL</Name>
				<Source><![CDATA[
    protected void initJournalHeaderFromSAD_PL()
    {
        super();

        vendInvoiceJour.initFromSADInvoice_PL(PlSADInvoice::findInvoice(this.parmSADNumberCode_PL(),
                                                                        vendInvoiceJour.PurchId));
        vendInvoiceJour.ExchRate = this.parmSADExchRate_PL();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSADContract</Name>
				<Source><![CDATA[
    public PurchFormLetterSADContract parmSADContract(PurchFormLetterSADContract _sadContract = sadContract)
    {
        sadContract = _sadContract;
        return sadContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSADExchRate_PL</Name>
				<Source><![CDATA[
    public ExchRate parmSADExchRate_PL(ExchRate _sadExchRate = sadExchRate)
    {
        sadExchRate = _sadExchRate;
        return sadExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSADNumberCode_PL</Name>
				<Source><![CDATA[
    public PlSADNumberCode parmSADNumberCode_PL(PlSADNumberCode _sadNumberCode = sadNumberCode)
    {
        sadNumberCode = _sadNumberCode;
        return sadNumberCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        VendInvoiceInfoTable localVendInvoiceInfoTable;
        RecId recId = vendInvoiceInfoTable.RecId;

        if (VendInvoiceJour::findSourceDocumentHeader(vendInvoiceInfoTable.SourceDocumentHeader).RecId)
            return;

        while select forUpdate localVendInvoiceInfoTable
            where localVendInvoiceInfoTable.ParmId == purchParmUpdate.ParmId
        {
            vendInvoiceInfoTable = localVendInvoiceInfoTable;
            journalNumber        = '';
            this.resetTotals(vendInvoiceInfoTable);

            super();

            if (isFlightEnabled(LocalizationFlights::SADDocumentsWithMultipleInvoicesPosting))
            {
                appl.globalCache().clear(classStr(SysTransactionScopeCache));
            }
            else
            {
                SysTransactionScopeCache::clear(classStr(PurchTotals)+ '::' + staticmethodStr(PurchTotals, newParmTable));
            }
        }

        // Roll back context info.
        vendInvoiceInfoTable = VendInvoiceInfoTable::findRecId(recId, true);
        purchTotals = PurchTotals::newParmTable(vendInvoiceInfoTable, PurchUpdate::All, purchParmUpdate.ParmId, purchParmUpdate.SumPurchId, documentStatus, PurchTotalsCachingMethod::Reuse);
        this.parmTotals(null);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetTotals</Name>
				<Source><![CDATA[
    private void resetTotals(VendInvoiceInfoTable _vendInvoiceInfoTable)
    {
        PurchTotals_ParmTrans localPurchTotals = totals;

        if (isFlightEnabled(LocalizationFlights::SADDocumentsWithMultipleInvoicesPosting) || localPurchTotals)
        {
            Common localVendInvoiceTable = localPurchTotals.parmTable();
            if (localVendInvoiceTable.TableId == tableNum(vendInvoiceInfoTable) &&
            localVendInvoiceTable.RecId != _vendInvoiceInfoTable.RecId)
            {
                totals = null;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PurchSADJournalCreate construct()
    {
        return new PurchSADJournalCreate();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>