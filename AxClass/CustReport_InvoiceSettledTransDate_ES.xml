<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustReport_InvoiceSettledTransDate_ES</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Provides additional functions to the bill-invoice relation by transaction date report data provider.
/// </summary>
public class CustReport_InvoiceSettledTransDate_ES
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findCustTransVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a previous customer transaction.
    /// </summary>
    /// <param name = "_custTrans">
    ///     The table record that holds the customer transactions details.
    /// </param>
    /// <returns>
    ///     A <c>custTrans</c> table.
    /// </returns>
    public CustTrans findCustTransVoucher(CustTrans _custTrans)
    {
        CustTrans       custTrans;

        select firstonly crosscompany custTrans
               index hint RecId
               where custTrans.Voucher == _custTrans.LastSettleVoucher
                && custTrans.DataAreaId == _custTrans.LastSettleCompany;

        return custTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoicesTxt</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Concatenates all invoices numbers related to a payment.
    /// </summary>
    /// <param name = "_custTransDS">
    ///     The table record that holds the customer transactions details.
    /// </param>
    /// <returns>
    ///     The formatted invoice text.
    /// </returns>
    public FreeText invoicesTxt(CustTrans _custTransDS)
    {
        CustSettlement      custSettlement;
        CustTrans           custTrans;
        FreeText            invoices;

        while select crosscompany invoice from custTrans join custSettlement
             where custTrans.RecID == custSettlement.OffsetRecid
                   && custTrans.DataAreaId == custSettlement.OffsetCompany
                   && custSettlement.TransRecId  == _custTransDS.RecId
                   && custSettlement.TransCompany == _custTransDS.company()
        {
            if (custTrans.Invoice)
            {
                if (invoices)
                {
                    invoices = strfmt('%1, %2', invoices, custTrans.Invoice);
                }
                else
                {
                    invoices = custTrans.Invoice;
                }
            }
            else
            {
                if (invoices)
                {
                    invoices = strfmt('%1, %2', invoices, "@SYS92708");
                }
                else
                {
                    invoices = "@SYS92708";
                }
            }
        }
        return invoices;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>