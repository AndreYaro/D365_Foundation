<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBookTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBookTable extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncUpgradeAssetDepBookTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Move AssetDepbBookTable data into a temporary table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeScriptTableAttribute('AssetDepBookTable', true, false, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpgradeAssetDepBookTable()
    {
        // Drop the AssetDepBookTableUpgradeTmp table if it exists.
        this.executeSqlStatement(this.getSQLDropAssetDepBookTableUpgradeTmp());

        // Create temp upgrade table.
        this.executeSqlStatement(this.getSQLCreateAssetTempUpgradeDepBookTable());

        // Move AssetDepBookTable rows to temp table.
        this.executeSqlStatement(this.getSQLInsertAssetTempUpgradeDepBookTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpgradeAssetDepBookTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the AssetDepBookTable data from the temporary table into AssetBook table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeScriptTableAttribute(tableStr(AssetBookTable), true, true, true, false),
     UpgradeScriptTableAttribute('AssetDepBookTable', false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpgradeAssetDepBookTable()
    {
        // Move the data into the AssetBookTable from the AssetDepBookTableUpgradeTmp table
        this.executeSqlStatement(this.getSQLInsertAssetBookTable());

        // drop temporary upgrade table
        this.executeSqlStatement(this.getSQLDropAssetDepBookTableUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDropAssetDepBookTableUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLDropAssetDepBookTableUpgradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETDEPBOOKTABLEUPGRADETMP', 'U') IS NOT NULL
                DROP TABLE ASSETDEPBOOKTABLEUPGRADETMP";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetBookTable</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetBookTable()
    {
        str sqlStatement =
            strFmt(@"
                INSERT INTO [dbo].[ASSETBOOKTABLE]
                    ([ACQUISITIONONFIRSTDAYCHECKTYPE_JP]
                    ,[BOOKID]
                    ,[CURRENTOPERATIONSTAX]
                    ,[DEPRECIATION]
                    ,[DEPRECIATIONACCELERATEDPROFILE_JP]
                    ,[DEPRECIATIONALTPROFILE]
                    ,[DEPRECIATIONEXTPROFILE]
                    ,[DEPRECIATIONPROFILE]
                    ,[DESCRIPTION]
                    ,[EXCEEDINGNETBOOKVALUE]
                    ,[FISCALCALENDAR]
                    ,[ISTRUEUPDEPRECIATION]
                    ,[NEGATIVENETBOOKVALUE]
                    ,[NETBOOKVALUEREST]
                    ,[ROUNDOFFDEPRECIATION]
                    ,[ROUNDOFFTYPE_W]
                    ,[DATAAREAID]
                    ,[PARTITION])
                SELECT [ACQUISITIONONFIRSTDAYCHECKTYPE_JP]
                      ,[DEPRECIATIONBOOKID]
                      ,%1
                      ,[DEPRECIATION]
                      ,[DEPRECIATIONACCELERATEDPROFILE_JP]
                      ,[DEPRECIATIONALTPROFILE]
                      ,[DEPRECIATIONEXTPROFILE]
                      ,[DEPRECIATIONPROFILE]
                      ,[DESCRIPTION]
                      ,[EXCEEDNETBOOKVALUE]
                      ,[FISCALCALENDAR]
                      ,[ISTRUEUPDEPRECIATION]
                      ,[NEGATIVENETBOOKVALUE]
                      ,[NETBOOKVALUEREST]
                      ,[ROUNDOFFDEPRECIATION]
                      ,[ROUNDOFFTYPE_W]
                      ,[DATAAREAID]
                      ,[PARTITION]
                FROM [dbo].[ASSETDEPBOOKTABLEUPGRADETMP]
                WHERE NOT EXISTS
                    (SELECT RECID FROM [dbo].ASSETBOOKTABLE
                    WHERE ASSETBOOKTABLE.[BOOKID] = ASSETDEPBOOKTABLEUPGRADETMP.[DEPRECIATIONBOOKID]
                      AND ASSETBOOKTABLE.[DATAAREAID] = ASSETDEPBOOKTABLEUPGRADETMP.[DATAAREAID]
                      AND ASSETBOOKTABLE.[PARTITION] = ASSETDEPBOOKTABLEUPGRADETMP.[PARTITION])",
                enum2int(CurrentOperationsTax::None));

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetTempUpgradeDepBookTable</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetTempUpgradeDepBookTable()
    {
        str sqlStatement = @"
                INSERT INTO [dbo].[ASSETDEPBOOKTABLEUPGRADETMP]
                           ([DEPRECIATIONPROFILE]
                           ,[ACQUISITIONONFIRSTDAYCHECKTYPE_JP]
                           ,[ASSETGROUPDEPRECIATION_IN]
                           ,[DEPRECIATION]
                           ,[DEPRECIATIONACCELERATEDPROFILE_JP]
                           ,[DEPRECIATIONALTPROFILE]
                           ,[DEPRECIATIONBOOKID]
                           ,[DEPRECIATIONEXTPROFILE]
                           ,[DESCRIPTION]
                           ,[EXCEEDNETBOOKVALUE]
                           ,[FISCALCALENDAR]
                           ,[ISTRUEUPDEPRECIATION]
                           ,[NEGATIVENETBOOKVALUE]
                           ,[NETBOOKVALUEREST]
                           ,[ROUNDOFFDEPRECIATION]
                           ,[ROUNDOFFTYPE_W]
                           ,[MODIFIEDDATETIME]
                           ,[MODIFIEDBY]
                           ,[DATAAREAID]
                           ,[PARTITION])
                           SELECT [DEPRECIATIONPROFILE]
                                ,[ACQUISITIONONFIRSTDAYCHECKTYPE_JP]
                                ,[ASSETGROUPDEPRECIATION_IN]
                                ,[DEPRECIATION]
                                ,[DEPRECIATIONACCELERATEDPROFILE_JP]
                                ,[DEPRECIATIONALTPROFILE]
                                ,[DEPRECIATIONBOOKID]
                                ,[DEPRECIATIONEXTPROFILE]
                                ,[DESCRIPTION]
                                ,[EXCEEDNETBOOKVALUE]
                                ,[FISCALCALENDAR]
                                ,[ISTRUEUPDEPRECIATION]
                                ,[NEGATIVENETBOOKVALUE]
                                ,[NETBOOKVALUEREST]
                                ,[ROUNDOFFDEPRECIATION]
                                ,[ROUNDOFFTYPE_W]
                                ,[MODIFIEDDATETIME]
                                ,[MODIFIEDBY]
                                ,[DATAAREAID]
                                ,[PARTITION]
                            FROM [dbo].[ASSETDEPBOOKTABLE]";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLCreateAssetTempUpgradeDepBookTable</Name>
				<Source><![CDATA[
    private str getSQLCreateAssetTempUpgradeDepBookTable()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETDEPBOOKTABLEUPGRADETMP', 'U') IS NULL
                CREATE TABLE [dbo].[ASSETDEPBOOKTABLEUPGRADETMP](
                    [DEPRECIATIONPROFILE] [nvarchar](10) NOT NULL,
                    [ACQUISITIONONFIRSTDAYCHECKTYPE_JP] [int] NOT NULL,
                    [ASSETGROUPDEPRECIATION_IN] [int] NOT NULL,
                    [DEPRECIATION] [int] NOT NULL,
                    [DEPRECIATIONACCELERATEDPROFILE_JP] [nvarchar](10) NOT NULL,
                    [DEPRECIATIONALTPROFILE] [nvarchar](10) NOT NULL,
                    [DEPRECIATIONBOOKID] [nvarchar](10) NOT NULL,
                    [DEPRECIATIONEXTPROFILE] [nvarchar](10) NOT NULL,
                    [DESCRIPTION] [nvarchar](60) NOT NULL,
                    [EXCEEDNETBOOKVALUE] [int] NOT NULL,
                    [FISCALCALENDAR] [bigint] NOT NULL,
                    [ISTRUEUPDEPRECIATION] [int] NOT NULL,
                    [NEGATIVENETBOOKVALUE] [int] NOT NULL,
                    [NETBOOKVALUEREST] [numeric](32, 6) NOT NULL,
                    [ROUNDOFFDEPRECIATION] [numeric](32, 6) NOT NULL,
                    [ROUNDOFFTYPE_W] [int] NOT NULL,
                    [MODIFIEDDATETIME] [datetime] NOT NULL,
                    [MODIFIEDBY] [nvarchar](20) NOT NULL,
                    [DATAAREAID] [nvarchar](4) NOT NULL,
                    [PARTITION] [bigint] NOT NULL,
                 CONSTRAINT [I_13552DEPRECIATIONBOOKUPGRADETMPIDX] PRIMARY KEY CLUSTERED
                (
                    [PARTITION] ASC,
                    [DATAAREAID] ASC,
                    [DEPRECIATIONBOOKID] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                ) ON [PRIMARY]";

        return sqlStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>