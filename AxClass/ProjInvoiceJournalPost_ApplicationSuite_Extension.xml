<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjInvoiceJournalPost_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(ProjInvoiceJournalPost))]
public final class ProjInvoiceJournalPost_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>salesFromFormletterParmDelegate</Name>
				<Source><![CDATA[
    [SubscribesTo(classStr(ProjInvoiceJournalPost), delegateStr(ProjInvoiceJournalPost, salesFromFormletterParmDelegate))]
    public static void salesFromFormletterParmDelegate(FormLetter _formLetter,
        SalesFormLetter_InvoiceProject _salesFormLetter)
    {
        if (_formLetter is ProjFormLetter_Invoice)
        {
            ProjFormLetter_Invoice projFormLetter = _formLetter as ProjFormLetter_Invoice;

            container packedMap = SysOperationHelper::base64Decode(projFormLetter.parmAdvanceInvoiceSettlementPacked());

            _salesFormLetter.parmAdvanceInvoiceSettlement_W(
                AdvanceInvoiceSettlement_W::newUnpack(tableNum(ProjInvoiceJour),
                    packedMap));
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>endPost</Name>
				<Source><![CDATA[
    protected void endPost()
    {
        next endPost();

        if (!this.isProforma() && FeatureStateProvider::isFeatureEnabled(EInvoice_IN_Feature::instance()))
        {
            OnlineInvoicingHelper_IN::createEInvoice(projInvoiceJour);
            OnlineInvoicingHelper_IN::validateEInvoice(projInvoiceJour);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateJournalTable</Name>
				<Source><![CDATA[
    protected void updateJournalTable()
    {
        if (FeatureStateProvider::isFeatureEnabled(TaxInvoiceSerialNumberGenerateIndonesiaFeature::instance())
            && TaxInvoiceSerialNumberGenerator_ID::shouldGetNumber(projInvoiceJour, this.isProforma()))
        {
            TaxInvoiceSerialNumber_ID taxInvoiceSerialNumber = TaxInvoiceSerialNumberGenerator_ID::getNumber(
                    projInvoiceJour,
                    projProposalJour.TaxInvoiceTransactionCode_ID);

            ProjProposalItem projProposalItem_SalesOrder;

            select firstonly RecId from projProposalItem_SalesOrder
                where projProposalItem_SalesOrder.ProposalId == projProposalJour.ProposalId &&
                      projProposalItem_SalesOrder.ItemType == ProjItemType::SalesOrder;
            //If there is any line from SO need to update in a separate buffer otherwise update conflict will occur due to SourceDocumentHeader field updated
            if (projProposalItem_SalesOrder.RecId != 0)
            {
                ProjInvoiceJour projInvoiceJourLoc = ProjInvoiceJour::findRecId(projInvoiceJour.RecId, true);
                projInvoiceJourLoc.TaxInvoiceSalesId_ID = taxInvoiceSerialNumber;
                projInvoiceJourLoc.update();
            }
            else
            {
                projInvoiceJour.TaxInvoiceSalesId_ID = taxInvoiceSerialNumber;
            }
        }

        next updateJournalTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>