<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetComponentPostReversalDisassemble_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Post disassembling reversal.
/// </summary>
class AssetComponentPostReversalDisassemble_JP extends AssetComponentPost_JP
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isAssembling</Name>
				<Source><![CDATA[
    public boolean isAssembling()
    {
        return false;
    }
]]></Source>
			</Method>
			<Method>
				<Name>isReversal</Name>
				<Source><![CDATA[
    public boolean isReversal()
    {
        return true;
    }
]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(
        LedgerJournalTrans_Asset    _ledgerJournalTrans_Asset,
        LedgerJournalTrans          _ledgerJournalTrans,
        AssetTrans                  _assetTrans,
        LedgerVoucher               _ledgerVoucher)
    {
        super(_ledgerJournalTrans_Asset,
            _ledgerJournalTrans,
            _assetTrans,
            _ledgerVoucher);
    }
]]></Source>
			</Method>
			<Method>
				<Name>postMovement</Name>
				<Source><![CDATA[
    protected void postMovement(AssetComponent_JP _assetComponent)
    {
        InventMov_Component_JP      movement;
        InventUpd_Financial         updFinancial;
        RefRecId                    inventTransOriginRecId;
        RefRecId                    inventTransReverseOriginRecId;
        AssetComponent_JP           assetComponentOrigin;

        assetComponentOrigin = AssetComponent_JP::find(_assetComponent.StornoRecId);
        inventTransOriginRecId = InventTransOriginAssetComponent_JP::findInventTransOriginId(assetComponentOrigin.RecId);
        inventTransReverseOriginRecId = InventTransOriginAssetComponent_JP::findInventTransOriginId(_assetComponent.RecId);
        //marking
        InventTransOrigin::updateMarking(inventTransOriginRecId,
                                                inventTransReverseOriginRecId,
                                                assetComponentOrigin.Qty,
                                                assetComponentOrigin.Voucher);
        InventTransOrigin::updateMarking(inventTransReverseOriginRecId,
                                                inventTransOriginRecId,
                                                -assetComponentOrigin.Qty,
                                                assetComponentOrigin.Voucher);

        movement  = InventMovement::construct(_assetComponent);
        movement.cacheAccountOperations(ledgerJournalTrans.parmOffsetLedgerDimension());
        updFinancial = InventUpd_Financial::newPostAssetComponent_JP(movement, ledgerVoucher, -assetComponentOrigin.MarketAmount);
        updFinancial.updateNow();
    }
]]></Source>
			</Method>
			<Method>
				<Name>updateAssetComponentAfterPosting</Name>
				<Source><![CDATA[
    protected void updateAssetComponentAfterPosting(AssetComponent_JP _assetComponent)
    {
        AssetComponent_JP   assetComponentOrigin;
        AssetComponent_JP   assetComponentAssembling;

        assetComponentOrigin = AssetComponent_JP::find(_assetComponent.StornoRecId);
        if (assetComponentOrigin.ComponentRefRecId)
        {
            assetComponentAssembling = AssetComponent_JP::find(assetComponentOrigin.ComponentRefRecId, true);
            assetComponentAssembling.DisassembledQty -= assetComponentOrigin.Qty;
            assetComponentAssembling.update(true);
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new instance of <c>AssetComponentPost_JP</c>.
    /// </summary>
    /// <param name="_ledgerJournalTrans_Asset">
    /// The buffer of <c>LedgerJournalTrans_Asset</c>.
    /// </param>
    /// <param name="_ledgerJournalTrans">
    /// The buffer of <c>LedgerJournalTrans</c>.
    /// </param>
    /// <param name="_assetTrans">
    /// The buffer of <c>AssetTrans</c>.
    /// </param>
    /// <param name="_ledgerVoucher">
    /// The instance of <c>LedgerVoucher</c>.
    /// </param>
    /// <returns>
    /// An instance of <c>AssetComponentPost_JP</c>.
    /// </returns>
    public static AssetComponentPost_JP construct(
        LedgerJournalTrans_Asset    _ledgerJournalTrans_Asset,
        LedgerJournalTrans          _ledgerJournalTrans,
        AssetTrans                  _assetTrans,
        LedgerVoucher               _ledgerVoucher)
    {
        AssetComponentPost_JP assetComponentPost;

        assetComponentPost = new AssetComponentPostReversalDisassemble_JP(
            _ledgerJournalTrans_Asset,
            _ledgerJournalTrans,
            _assetTrans,
            _ledgerVoucher);

        return assetComponentPost;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>