<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetRelievingDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetRelievingDetail</c> class is used to capture the ledger dimension and the currency
///    amount details to check budget funds and the budget source, ledger dimension and currency amount
///    details to relieve budget funds for the budget funds available check.
/// </summary>
public class BudgetRelievingDetail extends BudgetSourceDetail implements SysPackable
{
    RecId legalEntityIdToRelieve;
    RecId budgetSourceIdToRelieve;
    LedgerDimensionBase ledgerDimensionToRelieve;
    Amount currencyAmountToRelieve;
    CurrencyCode currencyToRelieve;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        legalEntityId,
        ledgerDimension,
        currencyAmount,
        currency,
        legalEntityIdToRelieve,
        budgetSourceIdToRelieve,
        ledgerDimensionToRelieve,
        currencyAmountToRelieve,
        currencyToRelieve
    #endmacro
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetSourceIdToRelieve</Name>
				<Source><![CDATA[
    public RecId parmBudgetSourceIdToRelieve(RecId _budgetSourceIdToRelieve = budgetSourceIdToRelieve)
    {
        budgetSourceIdToRelieve = _budgetSourceIdToRelieve;

        return budgetSourceIdToRelieve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyAmountToRelieve</Name>
				<Source><![CDATA[
    public Amount parmCurrencyAmountToRelieve(Amount _currencyAmountToRelieve = currencyAmountToRelieve)
    {
        currencyAmountToRelieve = _currencyAmountToRelieve;

        return currencyAmountToRelieve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyToRelieve</Name>
				<Source><![CDATA[
    public CurrencyCode parmCurrencyToRelieve(CurrencyCode _currencyToRelieve = currencyToRelieve)
    {
        currencyToRelieve = _currencyToRelieve;

        return currencyToRelieve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerDimensionToRelieve</Name>
				<Source><![CDATA[
    public LedgerDimensionBase parmLedgerDimensionToRelieve(LedgerDimensionBase _ledgerDimensionToRelieve = ledgerDimensionToRelieve)
    {
        ledgerDimensionToRelieve = _ledgerDimensionToRelieve;

        return ledgerDimensionToRelieve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntityIdToRelieve</Name>
				<Source><![CDATA[
    public RecId parmLegalEntityIdToRelieve(RecId _legalEntityIdToRelieve = legalEntityIdToRelieve)
    {
        legalEntityIdToRelieve = _legalEntityIdToRelieve;

        return legalEntityIdToRelieve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedBudgetRelievingDetail)
    {
        int version = conpeek(_packedBudgetRelievingDetail, 1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedBudgetRelievingDetail;
                break;

            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BudgetRelievingDetail construct()
    {
        return new BudgetRelievingDetail();
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>BudgetRelievingDetail</c> class from a packed copy.
    /// </summary>
    /// <param name="_packedBudgetRelievingDetail">
    ///    The packed instance of the <c>BudgetRelievingDetail</c> class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>BudgetRelievingDetail</c> class.
    /// </returns>
    public static BudgetRelievingDetail create(container _packedBudgetRelievingDetail)
    {
        BudgetRelievingDetail budgetRelievingDetail = new BudgetRelievingDetail();

        budgetRelievingDetail.unpack(_packedBudgetRelievingDetail);

        return budgetRelievingDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBudgetRelievingDetail</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>BudgetRelievingDetail</c> class.
    /// </summary>
    /// <param name="_legalEntityId">
    /// The ID for the legal entity record to check budget.
    /// </param>
    /// <param name="_ledgerDimension">
    /// The ledger dimension to check budget.
    /// </param>
    /// <param name="_currencyAmount">
    /// The currency amount to check budget.
    /// </param>
    /// <param name="_currency">
    /// The currency to check budget.
    /// </param>
    /// <param name="_budgetSourceIdToRelieve">
    /// The ID of the budget source record to relieve budget funds.
    /// </param>
    /// <param name="_legalEntityIdToRelieve">
    /// The ID of the legal entity record to relieve budget funds.
    /// </param>
    /// <param name="_ledgerDimensionToRelieve">
    /// The ledger dimension to relieve budget funds.
    /// </param>
    /// <param name="_currencyAmountToRelieve">
    /// The currency amount to relieve budget funds.
    /// </param>
    /// <param name="_currencyToRelieve">
    /// The currency to relieve budget funds.
    /// </param>
    /// <returns>
    /// An instance of the <c>BudgetRelievingDetail</c> class.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// One or more required parameters are missing.
    /// </exception>
    public static BudgetRelievingDetail newBudgetRelievingDetail(
        RecId _legalEntityId,
        LedgerDimensionBase _ledgerDimension,
        Amount _currencyAmount,
        CurrencyCode _currency,
        RecId _budgetSourceIdToRelieve,
        RecId _legalEntityIdToRelieve,
        LedgerDimensionBase _ledgerDimensionToRelieve,
        Amount _currencyAmountToRelieve,
        CurrencyCode _currencyToRelieve)
    {
        BudgetRelievingDetail budgetRelievingDetail;

        budgetRelievingDetail = new BudgetRelievingDetail();
        budgetRelievingDetail.parmLegalEntityId(_legalEntityId);
        budgetRelievingDetail.parmLedgerDimension(_ledgerDimension);
        budgetRelievingDetail.parmCurrencyAmount(_currencyAmount);
        budgetRelievingDetail.parmCurrency(_currency);
        budgetRelievingDetail.parmBudgetSourceIdToRelieve(_budgetSourceIdToRelieve);
        budgetRelievingDetail.parmLegalEntityIdToRelieve(_legalEntityIdToRelieve);
        budgetRelievingDetail.parmLedgerDimensionToRelieve(_ledgerDimensionToRelieve);
        budgetRelievingDetail.parmCurrencyAmountToRelieve(_currencyAmountToRelieve);
        budgetRelievingDetail.parmCurrencyToRelieve(_currencyToRelieve);

        return budgetRelievingDetail;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>