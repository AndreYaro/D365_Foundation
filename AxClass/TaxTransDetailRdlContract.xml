<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransDetailRdlContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxTransDetailRdlContract</c> is the RDL contract class for the <c>TaxTransDetail</c> report.
/// </summary>
[
    DataContract,
    SysOperationGroup('printout', "@SYS12608", '3'),
    SysOperationContractProcessing(classStr(TaxTransDetailUIBuilder_W), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class TaxTransDetailRdlContract implements SysOperationValidatable
{
    TransDate fromDate;
    TransDate toDate;
    TransDate fromVATDate;
    TransDate toVATDate;
    boolean includeReversed;
    boolean displayCompanyForLedgerAccount;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDisplayCompanyForLedgerAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter DisplayCompanyForLedgerAccount.
    /// </summary>
    /// <param name="_displayCompanyForLedgerAccount">
    /// The new value of the data contract parameter DisplayCompanyForLedgerAccount;.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter DisplayCompanyForLedgerAccount.
    /// </returns>
    [DataMemberAttribute('DisplayCompanyForLedgerAccount')]
    public boolean parmDisplayCompanyForLedgerAccount(boolean _displayCompanyForLedgerAccount = displayCompanyForLedgerAccount)
    {
        displayCompanyForLedgerAccount = _displayCompanyForLedgerAccount;
        return displayCompanyForLedgerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [   DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalStr("@SYS5209")),
        SysOperationHelpTextAttribute(literalStr("@SYS5209")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeReversed</Name>
				<Source><![CDATA[
    [   DataMemberAttribute('IncludeReversed'),
        SysOperationLabelAttribute(literalStr("@SYS78625")),
        SysOperationHelpTextAttribute(literalStr("@SYS78625")),
        SysOperationGroupMemberAttribute('printout'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public boolean parmIncludeReversed(boolean _includeReversed = includeReversed)
    {
        includeReversed = _includeReversed;
        return includeReversed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [   DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalStr("@SYS14656")),
        SysOperationHelpTextAttribute(literalStr("@SYS14656")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromVATDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FromVATDate'),
        SysOperationLabelAttribute(literalStr("@Tax:TaxFromDateOfVATRegister")),
        SysOperationHelpTextAttribute(literalStr("@Tax:TaxFromDateOfVATRegister"))
    ]
    public TransDate parmFromVATDate(TransDate _fromVATDate = fromVATDate)
    {
        fromVATDate = _fromVATDate;
        return fromVATDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToVATDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ToVATDate'),
        SysOperationLabelAttribute(literalStr("@Tax:TaxToDateOfVATRegister")),
        SysOperationHelpTextAttribute(literalStr("@Tax:TaxToDateOfVATRegister"))
    ]
    public TransDate parmToVATDate(TransDate _toVATDate = toVATDate)
    {
        toVATDate = _toVATDate;
        return toVATDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the Microsoft SQL Server Reporting Services report parameters.
    /// </summary>
    /// <returns>
    /// true if validation is successful; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!fromDate)
        {
            isValid = checkFailed("@SYS97591");
        }

        if (!toDate)
        {
            isValid = checkFailed("@SYS97592");
        }

        if (fromDate && toDate)
        {
            if (fromDate > toDate)
            {
                isValid = checkFailed("@SYS120590");
            }
        }

        if (TaxParameters::isEasternEuropeOrVatDueDateFeatureEnabled())
        {
            if (isValid && fromVATDate > toVATDate)
            {
                isValid = checkFailed("@Tax:TaxCompareDateOfVATRegister");
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>