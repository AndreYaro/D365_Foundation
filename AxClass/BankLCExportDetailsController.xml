<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCExportDetailsController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCExportDetailsController</c> class is the report controller class for the
///    <c>BankLCExportDetails</c> SSRS report.
/// </summary>
class BankLCExportDetailsController extends SrsReportRunController implements BatchRetryable
{
    SalesId salesId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// New the controller class <c>BankLCExportDetailsController</c> instance of <c>BankLCExportDetails</c> SRS report.
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the class variable SalesId.
    /// </summary>
    /// <param name="_salesId">
    /// The new value of the class variable SalesId; optional.
    /// </param>
    /// <returns>
    ///  The current value of class variable SalesId
    /// </returns>
    public SalesId parmSalesId(SalesId _salesId = salesId)
    {
        salesId = _salesId;
        return salesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Modifies the RDP contract parameter of the <c>BankLCExportDetails</c> SSRS report object.
    /// </summary>
    protected void prePromptModifyContract()
    {
        BankLCExportDetailsContract dataContract;

        dataContract = this.parmReportContract().parmRdpContract();
        dataContract.parmSalesId(this.parmSalesId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the controller class <c>BankLCExportDetailsController</c> instance of <c>BankLCExportDetails</c> SRS report.
    /// </summary>
    /// <param name="_args">
    /// The parameters to run the report.
    /// </param>
    /// <returns>
    ///  The constructed <c>BankLCExportDetailsController</c> instance.
    /// </returns>
    public static BankLCExportDetailsController construct(Args _args)
    {
        BankLCExport                    bankLCExport;
        BankLCExportDetailsController   controller;

        #define.Report_Detail('BankLCExportDetails.Report')

        if (!_args || !_args.caller() || !_args.record())
        {
            throw(error(strfmt("@SYS29104", classstr(BankLCExportDetailsController))));
        }
        bankLCExport = _args.record();

        if (bankLCExport && bankLCExport.SalesTable != '')
        {
            controller = new BankLCExportDetailsController();
            controller.parmArgs(_args);
            controller.parmReportName(#Report_Detail);
            controller.parmSalesId(bankLCExport.SalesTable);
        }
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Main method for executing SRS report.
    /// </summary>
    /// <param name="_args">
    /// Event args
    /// </param>
    public static void main(Args _args)
    {
        BankLCExportDetailsController   controller;

        controller = BankLCExportDetailsController::construct(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>