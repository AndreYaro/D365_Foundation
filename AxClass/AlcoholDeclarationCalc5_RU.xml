<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AlcoholDeclarationCalc5_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///   The <c>AlcoholDeclarationCalc5_RU</c> class performs calculation of the 5th form of the alcohol declaration.
/// </summary>
class AlcoholDeclarationCalc5_RU extends AlcoholDeclarationCalc_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activityType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the activity type (wholesale or retail) of the current child of the <c>AlcoholDeclarationCalc_RU</c> class.
    /// </summary>
    /// <returns>
    ///    The activity type to which the current object corresponds.
    /// </returns>
    protected AlcoholActivityType_RU activityType()
    {
        return AlcoholActivityType_RU::Wholesale;
    }

]]></Source>
			</Method>
			<Method>
				<Name>declarationType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the declaration type of the current child of the <c>AlcoholDeclarationCalc_RU</c> class.
    /// </summary>
    /// <returns>
    ///    The declaration type to which the current object corresponds.
    /// </returns>
    protected AlcoholDeclarationType_RU declarationType()
    {
        return AlcoholDeclarationType_RU::Wholesale5;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteRecords</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the previously created calculation results.
    /// </summary>
    protected void deleteRecords()
    {
        this.deleteRecordsMovement();

        if (recalcReceiptIssue)
        {
            this.deleteRecordsReceiptIssue(AlcoholDeclarationTransType_RU::Receipt, AlcoholDeclarationType_RU::Wholesale7);
            this.deleteRecordsReceiptIssue(AlcoholDeclarationTransType_RU::Issue,   AlcoholDeclarationType_RU::Wholesale6);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes variables which will be often used during calculation.
    /// </summary>
    /// <returns>
    ///    true.
    /// </returns>
    public boolean init()
    {
        boolean                                     ret = super();
        AlcoholDeclarationJournalTransBranch_RU     journalTransBranchReceipt, journalTransBranchIssue;

        journalTransBranchReceipt = AlcoholDeclarationJournalTransBranch_RU::find(journalTransBranch.JournalId,
                                                                                  AlcoholDeclarationType_RU::Wholesale7,
                                                                                  journalTransBranch.BranchId);

        journalTransBranchIssue = AlcoholDeclarationJournalTransBranch_RU::find(journalTransBranch.JournalId,
                                                                                AlcoholDeclarationType_RU::Wholesale6,
                                                                                journalTransBranch.BranchId);

        calcMovement = (journalTransBranch.Status == AlcoholDeclarationStatus_RU::NotCalculated);
        calcReceipt  = (recalcReceiptIssue && journalTransBranchReceipt.Status == AlcoholDeclarationStatus_RU::NotCalculated);
        calcIssue    = (recalcReceiptIssue && journalTransBranchIssue.Status == AlcoholDeclarationStatus_RU::NotCalculated);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>