<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxElectronicDeclarationXslResolver</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Resolves dependent XSL files stored in resources for DE tax electronic declaration.
/// </summary>
class TaxElectronicDeclarationXslResolver implements Microsoft.Dynamics.XmlResolverWrapper.IXmlResolver
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>GetEntity</Name>
				<Source><![CDATA[
    public System.Object GetEntity(System.Uri absoluteUri, System.String role, System.Type ofObjectToReturn)
    {
        return this.getStreamByFilename(System.IO.Path::GetFileNameWithoutExtension(absoluteUri.LocalPath));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStreamByFilename</Name>
				<Source><![CDATA[
    private System.IO.Stream getStreamByFilename(System.String _filename)
    {
        return Microsoft.Dynamics.Ax.Xpp.MetadataSupport::GetResourceContentStream('TaxElectronicDeclarationXsl' + _filename);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createXmlResolver</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create instance of <c>XmlResolver</c> class.
    /// </summary>
    /// <returns><c>TaxElectronicDeclarationXslResolver</c> instance wrapped by <c>XmlResolverWrapper</c> class</returns>
    /// <remarks><c>XslCompiledTransform</c> class accepts this class as resolver instance.</remarks>
    public static System.Xml.XmlResolver createXmlResolver()
    {
        var taxElectronicDeclarationXslResolver = new TaxElectronicDeclarationXslResolver();
        return new Microsoft.Dynamics.XmlResolverWrapper.XmlResolverWrapper(taxElectronicDeclarationXslResolver);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>