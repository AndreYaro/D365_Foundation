<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailGrandTotalJournalCalc_MultiContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Calculates grand total journals.
/// </summary>
[
    DataContract,
    SysOperationContractProcessing(classstr(RetailGrandTotalJournalCalc_MultiUIBuilder))
]
public class RetailGrandTotalJournalCalc_MultiContract extends SysOperationDataContractBase implements SysOperationValidatable, SysPackable
{
    private Set selectedOMInternalOrgRecIds;
    private container packedOMUnits;
    private RecId oMHierarchyRecId;

    private FromDate fromDate;
    private ToDate toDate;

    private NoYes calcJournal;
    private NoYes annual;

    #define.CurrentVersion(2)
    #localmacro.CurrentList
        packedOMUnits,
        oMHierarchyRecId,
        fromDate,
        toDate,
        calcJournal,
        annual
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        if (selectedOMInternalOrgRecIds)
        {
            packedOMUnits = selectedOMInternalOrgRecIds.pack();
        }

        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer version = conpeek(packedClass, 1);

        switch (version)
        {
            case #CurrentVersion :
                [version, #CurrentList] = packedClass;
                break;

            case 1:
                [version,
                packedOMUnits,
                oMHierarchyRecId,
                fromDate,
                toDate,
                calcJournal] = packedClass;
                break;

            default :
                return false;
        }

        if (packedOMUnits)
        {
            selectedOMInternalOrgRecIds = Set::create(packedOMUnits);
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAnnual</Name>
				<Source><![CDATA[
    [DataMember]
    public NoYes parmAnnual(NoYes _annual = annual)
    {
        annual = _annual;
        return annual;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalcJournal</Name>
				<Source><![CDATA[
    [DataMember]
    public NoYes parmCalcJournal(NoYes _calcJournal = calcJournal)
    {
        calcJournal = _calcJournal;
        return calcJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [DataMember]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [DataMember]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOMHierarchyRecId</Name>
				<Source><![CDATA[
    [DataMember]
    public RecId parmOMHierarchyRecId(RecId _oMHierarchyRecId = oMHierarchyRecId)
    {
        oMHierarchyRecId = _oMHierarchyRecId;
        return oMHierarchyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSelectedOMInternalOrgRecIds</Name>
				<Source><![CDATA[
    public Set parmSelectedOMInternalOrgRecIds(Set _selectedOMInternalOrgRecIds = selectedOMInternalOrgRecIds)
    {
        selectedOMInternalOrgRecIds = _selectedOMInternalOrgRecIds;

        return selectedOMInternalOrgRecIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean ret = true;

        if (!fromDate)
        {
            ret = checkFailed(strFmt("@SYS26332", new DictType(extendedTypeNum(FromDate)).label()));
        }

        if (!toDate)
        {
            ret = checkFailed(strFmt("@SYS26332", new DictType(extendedTypeNum(ToDate)).label()));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>