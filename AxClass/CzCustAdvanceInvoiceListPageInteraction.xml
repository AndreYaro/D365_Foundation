<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CzCustAdvanceInvoiceListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The list page interaction class for the <c>CzCustAdvanceInvoiceListPage</c> form.
/// </summary>
class CzCustAdvanceInvoiceListPageInteraction extends SysListPageInteractionBase
{
    ListPage                    listPage;
    CzCustAdvanceInvoiceTable   advanceInvoiceTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currentAdvanceInvoiceTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the current <c>CzCustAdvanceInvoiceTable</c> record.
    /// </summary>
    /// <returns>
    ///    The active <c>CzCustAdvanceInvoiceTable</c> record.
    /// </returns>
    private CzCustAdvanceInvoiceTable currentAdvanceInvoiceTable()
    {
        return this.listPage().activeRecord(queryDataSourceStr(CzCustAdvanceInvoiceListPage, CzCustAdvanceInvoiceTable)) as CzCustAdvanceInvoiceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the current <c>CzCustAdvanceInvoiceTable</c> record.
    /// </summary>
    /// <remarks>
    ///    This method is called by the framework every time that a record is selected in the grid on the list
    ///    page.
    /// </remarks>
    public void selectionChanged()
    {
        advanceInvoiceTable = this.currentAdvanceInvoiceTable();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables action pane buttons according to the active record data.
    /// </summary>
    protected void setButtonEnabled()
    {
        #ISOCountryRegionCodes    // Macro containing all ISO Codes

        listPage = this.listPage();

        // These buttons should be enabled when the document is NOT posted
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, buttonCustPostAdvanceInvoice),
                    !advanceInvoiceTable.Posted);
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, buttonCreditNote),
                    !advanceInvoiceTable.Posted);

        // These buttons should be enabled when the document IS posted
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, buttonStatusChange),
                    advanceInvoiceTable.Posted);
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, fiscalDocChange_PL),
                    (advanceInvoiceTable.Posted &&
                    (advanceInvoiceTable.FiscalDocState_PL == PlFiscalDocState::FiscalDocument ||
                     advanceInvoiceTable.FiscalDocState_PL == PlFiscalDocState::PrintedFiscalDocument)));

        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, printAdvanceInvoice_Copy),
                    advanceInvoiceTable.Posted && advanceInvoiceTable.CustPostingProfile);
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, printAdvanceInvoice_Duplicate),
                    advanceInvoiceTable.Posted && advanceInvoiceTable.CustPostingProfile);
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, printAdvanceInvoice_PrintMgmt),
                    advanceInvoiceTable.Posted && advanceInvoiceTable.CustPostingProfile);

        // These buttons can be enabled for either posted or unposted
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, buttonAdvanceInvoiceLink),
                    (advanceInvoiceTable.Posted && advanceInvoiceTable.Status != CzAdvanceInvoiceStatus::Closed) ||
                        (!advanceInvoiceTable.Posted && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU])));

        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, fiscalDocChange_PL),
                    advanceInvoiceTable.Posted &&
                    (advanceInvoiceTable.FiscalDocState_PL == PlFiscalDocState::FiscalDocument ||
                     advanceInvoiceTable.FiscalDocState_PL == PlFiscalDocState::PrintedFiscalDocument));

        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, buttonSetSalesOrder),
                    advanceInvoiceTable.Status != CzAdvanceInvoiceStatus::Closed);
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, buttonSetFreeInvoice),
                    advanceInvoiceTable.Status != CzAdvanceInvoiceStatus::Closed);

        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, buttonErrorMessage),
                    advanceInvoiceTable.Log != '');
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, salesTableButton),
                    advanceInvoiceTable.SalesId != '');
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, freeInvoiceButton),
                    advanceInvoiceTable.FreeInvoiceRefRecId != 0);
        listPage.actionPaneControlEnabled(formControlStr(CzCustAdvanceInvoiceListPage, ledgerTransVoucherButton),
                    advanceInvoiceTable.Voucher != '');

        boolean projAdvanceInvoiceState = SalesTable::find(advanceInvoiceTable.SalesId).ProjId != '';
        listPage.actionPaneControlVisible(formControlStr(CzCustAdvanceInvoiceListPage, ProjAdvanceInvoiceSettlementList), projAdvanceInvoiceState);
        listPage.actionPaneControlVisible(formControlStr(CzCustAdvanceInvoiceListPage, SettlementsViewButton), !projAdvanceInvoiceState);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>