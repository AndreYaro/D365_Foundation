<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustFreeInvoiceCorrection_Partial_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides interface to perform partial credit note creation
/// </summary>
class CustFreeInvoiceCorrection_Partial_RU extends CustFreeInvoiceCorrection
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createMiscCharges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create charges for the corrected or adjusted free text invoice.
    /// </summary>
    /// <param name="_parentTransTableId">
    /// The table ID of the parent invoice line.
    /// </param>
    /// <param name="_parentTransRecId">
    /// The record ID of the parent invoice line.
    /// </param>
    /// <param name="_childTransTableId">
    /// The table ID of the corrected or adjusting invoice line.
    /// </param>
    /// <param name="_childTransRecId">
    /// The record ID of the corrected or adjusting invoice line.
    /// </param>
    /// <param name="_createTax">
    /// True if tax should be created.
    /// </param>
    public void createMiscCharges(
        RefTableId  _parentTransTableId = parentCustInvoiceJour.TableId,
        RefRecId    _parentTransRecId = parentCustInvoiceJour.RecId,
        RefTableId  _childTransTableId = tableNum(CustInvoiceTable),
        RefRecId    _childTransRecId = childCustInvoiceTableRecId,
        boolean     _createTax = false
        )
    {
        this.createMiscellaneousCharges(_parentTransTableId,
            _parentTransRecId,
            _childTransTableId,
            _childTransRecId,
            _createTax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustInvoiceTable</Name>
				<Source><![CDATA[

    public CustInvoiceTableRefRecId parmCustInvoiceTable(CustInvoiceTableRefRecId _value = childCustInvoiceTableRecId)
    {
        childCustInvoiceTableRecId = _value;
        return childCustInvoiceTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Invoice type
    /// </summary>
    /// <param name="_value">new value</param>
    /// <returns>current value</returns>
    public InvoiceAssociationType parmInvoiceType(InvoiceAssociationType _value = invoiceType)
    {
        invoiceType = _value;
        return invoiceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParentCustInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parent invoice jour
    /// </summary>
    /// <param name="_value">new value</param>
    /// <returns>current value</returns>
    public CustInvoiceJour parmParentCustInvoiceJour(CustInvoiceJour _value = parentCustInvoiceJour)
    {
        parentCustInvoiceJour = _value;
        return parentCustInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLineMiscCharges</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Copies charges from <c>CustInvoiceLine</c> to <c>CustInvoiceTrans</c>.
    /// </summary>
    /// <param name="_custInvoiceTrans">
    ///     The invoice transaction to copy charges to.
    /// </param>
    /// <param name="_custInvoiceLine">
    ///     The invoice line to copy charges from.
    /// </param>
    static void createLineMiscCharges(
        CustInvoiceTrans       _custInvoiceTrans,
        CustInvoiceLine        _custInvoiceLine)
    {
        CustFreeInvoiceCorrection_Partial_RU correction;
        correction = new CustFreeInvoiceCorrection_Partial_RU();
        correction.parmInvoiceType(InvoiceAssociationType::AdjustingInvoice);
        correction.createMiscellaneousCharges(_custInvoiceTrans.TableId,
            _custInvoiceTrans.RecId,
            _custInvoiceLine.TableId,
            _custInvoiceLine.RecId,
            false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCustInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create changes for _jour copied from table
    /// </summary>
    /// <param name="_custInvoiceJour">
    /// The invoice journal to copy changes
    /// </param>
    /// <param name="_custInvoiceTable">
    /// The invoice to copy changes from
    /// </param>
    /// <param name="_invoiceAssociationType">
    /// The invoice association type to be applied.
    /// </param>
    /// <returns>
    /// The class instance.
    /// </returns>
    static CustFreeInvoiceCorrection_Partial_RU newCustInvoiceJour(
        CustInvoiceJour         _custInvoiceJour,
        CustInvoiceTable        _custInvoiceTable,
        InvoiceAssociationType  _invoiceAssociationType = InvoiceAssociationType::AdjustingInvoice)
    {
        CustFreeInvoiceCorrection_Partial_RU correction;

        correction = new CustFreeInvoiceCorrection_Partial_RU();
        correction.parmParentCustInvoiceJour(_custInvoiceJour);
        correction.parmCustInvoiceTable(_custInvoiceTable.RecId);
        correction.parmInvoiceType(_invoiceAssociationType);

        return correction;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>