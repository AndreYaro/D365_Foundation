<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTrans_MX_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension methods for the <c>LedgerJournalTrans</c> class.
/// </summary>
public static class LedgerJournalTrans_MX_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateOperationType_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>OperationType_MX</c> field value when you post the journals when there is no common
    /// tax codes, that is, when the <c>DiotAddInfo_MX</c> check box is checked, are not attached.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">The journal line record.</param>
    public static void updateOperationType_MX(LedgerJournalTrans _ledgerJournalTrans)
    {
        if (_ledgerJournalTrans.AccountType != LedgerJournalACType::Vend
            && _ledgerJournalTrans.OffsetAccountType != LedgerJournalACType::Vend)
        {
            _ledgerJournalTrans.OperationType_MX = VendorOperationType_MX::Blank;
            _ledgerJournalTrans.doUpdate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkOpertaionType_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks for the operation type if it is blank.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">The journal line record.</param>
    /// <param name = "_ledgerJournalType">
    /// The value that is used to identify the journal.
    /// </param>
    /// <returns>
    /// true if the operation type is not blank; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The method is called to check whether the value of the operation type is available when the record
    /// is saved.
    /// </remarks>
    public static boolean checkOpertaionType_MX(LedgerJournalTrans _ledgerJournalTrans, LedgerJournalType  _ledgerJournalType)
    {
        boolean isCommonTaxCodeMarked;
        boolean isVendorType;
        boolean otherTypeNotAllowed;

        switch (_ledgerJournalType)
        {
            case LedgerJournalType::PurchaseLedger:

                if (_ledgerJournalTrans.OperationType_MX == VendorOperationType_MX::Blank
                    && (_ledgerJournalTrans.AccountType          == LedgerJournalACType::Vend
                        || _ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend))
                {
                    return checkFailed("@SYS312596");
                }
                break;

            case LedgerJournalType::Approval :
                if (_ledgerJournalTrans.OperationType_MX == VendorOperationType_MX::Blank)
                {
                    return checkFailed("@SYS312596");
                }
                break;

            case LedgerJournalType::Cost :
                if (_ledgerJournalTrans.OperationType_MX == VendorOperationType_MX::Blank)
                {
                    isCommonTaxCodeMarked = DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(_ledgerJournalTrans.TaxGroup, _ledgerJournalTrans.TaxItemGroup);
                    isVendorType          = DIOTAddlInfoForNoVendorLedger_MX::isOffsetTypeVend(_ledgerJournalTrans.OffsetAccountType);
                    otherTypeNotAllowed   = DIOTAddlInfoForNoVendorLedger_MX::isOffsetTypeNotAllowed(_ledgerJournalTrans.OffsetAccountType);

                    if (isVendorType || (!otherTypeNotAllowed && isCommonTaxCodeMarked))
                    {
                        return checkFailed("@SYS312596");
                    }
                }
                break;

            case LedgerJournalType::VendInvoiceRegister :
                if (_ledgerJournalTrans.OperationType_MX == VendorOperationType_MX::Blank)
                {
                    isCommonTaxCodeMarked = DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(_ledgerJournalTrans.TaxGroup, _ledgerJournalTrans.TaxItemGroup);
                    isVendorType          = DIOTAddlInfoForNoVendorLedger_MX::isVendType(_ledgerJournalTrans.AccountType, _ledgerJournalTrans.OffsetAccountType);
                    otherTypeNotAllowed   = DIOTAddlInfoForNoVendorLedger_MX::isOtherTypeNotAllowed(_ledgerJournalTrans.AccountType, _ledgerJournalTrans.OffsetAccountType);

                    if (isVendorType || (!otherTypeNotAllowed && isCommonTaxCodeMarked))
                    {
                        return checkFailed("@SYS312596");
                    }
                }
                break;

            default:
                break;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRFC_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the related Registro Federal de Contribuyentes (RFC) code (Mexico specific)
    /// </summary>
    /// <param name = "_ledgerJournalTrans">The journal line record.</param>
    /// <returns>
    /// The RFC code.
    /// </returns>
    public static RFC_MX getRFC_MX(LedgerJournalTrans _ledgerJournalTrans)
    {
        RFC_MX rfc;

        if (_ledgerJournalTrans.CustTransId)
        {
            rfc = _ledgerJournalTrans.findCustTable().rfc_MX;
        }
        else if (_ledgerJournalTrans.VendTransId)
        {
            rfc = _ledgerJournalTrans.findVendTable().rfc_MX;
        }

        return rfc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPaymentJournal_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a boolean value that indicates whether this is a mexican payment journal.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">The journal line record.</param>
    /// <returns>
    /// A boolean value that indicates if this is a mexican payment journal.
    /// </returns>
    public static boolean isPaymentJournal_MX(LedgerJournalTrans _ledgerJournalTrans)
    {
        return !_ledgerJournalTrans.CFDIUUID_MX && !_ledgerJournalTrans.ReverseEntry &&
            ((_ledgerJournalTrans.AccountType       == LedgerJournalACType::Bank && (_ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust || _ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)) ||
             (_ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank && (_ledgerJournalTrans.AccountType == LedgerJournalACType::Cust || _ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>