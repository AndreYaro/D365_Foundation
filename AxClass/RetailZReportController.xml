<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailZReportController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Initializes the query by adding datasource and ranges to run the <c>RetailZReport</c> report.
/// </summary>
public class RetailZReportController extends SrsReportRunController implements BatchRetryable
{
    RetailPosBatchTable posBatchTable;
    Args                posArgs;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifyQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds ranges to the report query as per the <c>Args</c> passed.
    /// </summary>
    /// <param name="_query">
    /// The <c>Query</c> object to modify.
    /// </param>
    /// <remarks>
    /// This modified query will be used by the report to fetch the specific statement.
    /// </remarks>
    public void modifyQuery(Query _query)
    {
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;
        Query                   query = _query;

        this.parmShowDialog(false);

        queryBuildDataSource = query.dataSourceTable(tablenum(RetailPosBatchTable));

        if (!queryBuildDataSource)
        {
            queryBuildDataSource = query.addDataSource(Tablenum(RetailPosBatchTable));
        }

        queryBuildRange = queryBuildDataSource.findRange(fieldnum(RetailPosBatchTable, storeId));

        if (!queryBuildRange)
        {
            queryBuildRange = queryBuildDataSource.addRange(fieldnum(RetailPosBatchTable, storeId));
        }

        if (posBatchTable)
        {
            queryBuildRange.value(posBatchTable.StoreId);
        }
        else
        {
            queryBuildRange.value("");
        }

        queryBuildRange = queryBuildDataSource.findRange(fieldnum(RetailPosBatchTable, TerminalId));

        if (!queryBuildRange)
        {
            queryBuildRange = queryBuildDataSource.addRange(fieldnum(RetailPosBatchTable, TerminalId));
        }

        if (posBatchTable)
        {
            queryBuildRange.value(posBatchTable.TerminalId);
        }
        else
        {
            queryBuildRange.value("");
        }

        queryBuildRange = queryBuildDataSource.findRange(fieldnum(RetailPosBatchTable, BatchId));

        if (!queryBuildRange)
        {
            queryBuildRange = queryBuildDataSource.addRange(fieldnum(RetailPosBatchTable, BatchId));
        }

        if (posBatchTable)
        {
            queryBuildRange.value(queryValue(posBatchTable.BatchId));
        }
        else
        {
            queryBuildRange.value("");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatementArgs</Name>
				<Source><![CDATA[
        public Args parmStatementArgs(Args _posArgs = posArgs)
    {
        if (_posArgs && _posArgs.dataset())
        {
            posArgs = _posArgs;

            switch (posArgs.dataset())
            {
                case(tablenum(RetailPosBatchTable))   :
                    posBatchTable = posArgs.record();
                    break;
            }
        }

        return posArgs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the method <c>modifyQuery</c> to modify query of Z report.
    /// </summary>
    protected void prePromptModifyContract()
    {
        super();
        this.modifyQuery(this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey()));
        this.parmDialogCaption("@RET5243");
    }

]]></Source>
			</Method>
			<Method>
				<Name>startOperation</Name>
				<Source><![CDATA[
        public SysOperationStartResult startOperation()
    {
        this.parmReportName(ssrsReportStr(RetailZReport, Report));
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public static ClassDescription description()
    {
        return "@RET5243";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        RetailZReportController retailZReportController = new RetailZReportController();

        retailZReportController.parmStatementArgs(_args);
        retailZReportController.parmArgs(_args);
        retailZReportController.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>