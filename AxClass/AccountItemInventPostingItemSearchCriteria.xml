<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccountItemInventPostingItemSearchCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AccountItemInventPostingItemSearchCriteria</c> class is responsible for populating the item related fields
/// in the <c>InventPostingSearchState</c>.
/// </summary>
class AccountItemInventPostingItemSearchCriteria extends InventPostingSearchCriteria
{
    private InventPostingAccountItemLedgerDimensionParameters   searchParameters;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new (InventPostingAccountItemLedgerDimensionParameters _searchParameters)
    {
        searchParameters    = _searchParameters;
        this.buildSearchValuesList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AccountItemInventPostingItemSearchCriteria construct(InventPostingAccountItemLedgerDimensionParameters _searchParameters)
    {
        return new AccountItemInventPostingItemSearchCriteria(_searchParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildSearchValuesList</Name>
				<Source><![CDATA[
    protected void buildSearchValuesList()
    {
        this.buildSearchValuesListForItemCode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateInventPostingSearchState</Name>
				<Source><![CDATA[
    public void populateInventPostingSearchState(anytype _searchValue)
    {
        InventPosting inventPosting = inventPostingSearchState.parmInventPosting();
        inventPosting.initFromPostingParameterBase(searchParameters);
        inventPosting.initializeItemFieldsFromAccountItemLedgerDimensionParameters(searchParameters, _searchValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSearchCriteria</Name>
				<Source><![CDATA[
    public boolean mustSearchCriteria(anytype _searchValue)
    {
        ItemRelation itemRelation = InventPosting::itemRelation(_searchValue, searchParameters.ItemId, searchParameters.ItemGroup);
        return inventPostingParameters.itemRelationEnabled(_searchValue) && this.itemRelationExists(_searchValue, itemRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemRelationExists</Name>
				<Source><![CDATA[
    private boolean itemRelationExists(
        InventPostingItemCode   _itemCode,
        ItemRelation            _itemRelation)
    {
        InventPosting   localInventPosting;
        container       cachedResult;
        boolean         result;

        if (_itemCode == InventPostingItemCode::All || _itemRelation == '')
        {
            // All always exists
            return true;
        }

        cachedResult = InventPostingSetupCache::getItemRelationExists(_itemCode, _itemRelation);
        if (cachedResult == conNull())
        {
            select firstonly RecId from localInventPosting
                where localInventPosting.ItemCode        == _itemCode
                      && localInventPosting.ItemRelation == _itemRelation;

            result = (localInventPosting.RecId != 0);
            InventPostingSetupCache::insertItemRelationExists(_itemCode, _itemRelation, result);
        }
        else
        {
            [result] = cachedResult;
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>