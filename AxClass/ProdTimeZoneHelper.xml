<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdTimeZoneHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ProdTimeZoneHelper</c> class is responsible for creating date and time with timezone information.
/// </summary>
internal class ProdTimeZoneHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>composeDateTimeWithUserTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns a string of date and time with applied user's timezone.
    /// </summary>
    /// <param name="_date">
    ///     The date in Utc+0.
    /// </param>
    /// <param name="_time">
    ///     The time.
    /// </param>
    /// <returns>
    ///    The composed string of the date time.
    /// </returns>
    public static str composeDateTimeWithUserTimeZone(date _date, TimeOfDay _time)
    {
        if(!_date)
        {
            return '';
        }

        return strUpr(strFmt("@SYS82282", DateTimeUtil::applyTimeZoneOffset(DateTimeUtil::newDateTime(_date, _time), DateTimeUtil::getUserPreferredTimeZone())));
    }

]]></Source>
			</Method>
			<Method>
				<Name>composeTimeWithUserTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns a string of time with applied user's timezone.
    ///     Uses system date to apply the time zone.
    /// </summary>
    /// <param name="_time">
    ///     The time.
    /// </param>
    /// <returns>
    ///    The composed string time.
    /// </returns>
    public static str composeTimeWithUserTimeZone(TimeOfDay _time)
    {
        date systemDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        return strUpr(strFmt("@SYS82282", time2Str(DateTimeUtil::time(DateTimeUtil::applyTimeZoneOffset(DateTimeUtil::newDateTime(systemDate, _time), DateTimeUtil::getUserPreferredTimeZone())), TimeSeparator::Auto, TimeSeparator::Auto)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>