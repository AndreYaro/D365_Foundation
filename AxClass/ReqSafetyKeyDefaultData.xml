<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqSafetyKeyDefaultData</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqSafetyKeyDefaultData extends SysDefaultDataAllocateKey
{
    ReqSafetyKey                buffer;
    ReqSafetyLine               bufferLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buffer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the table buffer that is declared in the <c>classDeclaration</c> method.
    /// </summary>
    /// <returns>
    ///    The table buffer that is used for the default data.
    /// </returns>
    public Common buffer()
    {
        return buffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bufferLine</Name>
				<Source><![CDATA[
        public AllocateTransMap bufferLine()
    {
        return bufferLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createdNumDB</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the number of records that already are in the current table.
    /// </summary>
    /// <returns>
    ///    An integer that contains the number of records.
    /// </returns>
    int64 createdNumDB()
    {
        switch (curTableNo)
        {
            case 1:
                return (select count(RecId) from reqSafetyKey).RecId;
            case 2:
                return (select count(RecId) from reqSafetyLine).RecId;
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existDBKey</Name>
				<Source><![CDATA[
        boolean existDBKey(ReqSafetyKeyId keyTmp)
    {
        return (select reqSafetyKey where reqSafetyKey.SafetyKeyId == keyTmp).RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existTmp</Name>
				<Source><![CDATA[
        protected boolean existTmp(Common _cursor = null)
    {
        ReqSafetyKey    cursor = _cursor as ReqSafetyKey;
        ReqSafetyKey    bufferExist;

        bufferExist = this.makeTmp();

        select firstonly recId from bufferExist
            index hint KeyIdx
            where bufferExist.SafetyKeyId  == cursor.SafetyKeyId;

        return bufferExist.RecId
            ? (bufferExist.RecId == cursor.RecId ? false : true)
            : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRecordLine</Name>
				<Source><![CDATA[
        protected void initRecordLine(int no)
    {
        bufferLine.SafetyFactor   = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>keyFieldId</Name>
				<Source><![CDATA[
        protected fieldId keyFieldId()
    {
        return fieldnum(ReqSafetyKey,SafetyKeyId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBuffer</Name>
				<Source><![CDATA[
        void setBuffer()
    {
        if (form_DS)
            buffer = form_DS.cursor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBufferLine</Name>
				<Source><![CDATA[
        void setBufferLine()
    {
        if (form_DSLine)
            bufferLine = form_DSLine.cursor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>suggestPeriodUnit</Name>
				<Source><![CDATA[
        PeriodUnit suggestPeriodUnit()
    {
        return PeriodUnit::Day;
    }

]]></Source>
			</Method>
			<Method>
				<Name>suggestUnit</Name>
				<Source><![CDATA[
        int suggestUnit()
    {
        return 7;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>