<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerParametersFormExtensionEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the form extension events for the <c>LedgerParameters</c> form.
/// </summary>
internal final class LedgerParametersFormExtensionEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>LedgerParametersElectronicReportingWHT_EG_ERFormatMappingWHT_EG_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// LedgerParameters ElectronicReportingWHT_EG_ERFormatMappingWHT_EG form control OnLookup event handler for the LedgerParameters form.
    /// </summary>
    /// <param name="_sender">The form control raising the event.</param>
    /// <param name="_e">Args for the event.</param>
    [FormControlEventHandler(formControlStr(LedgerParameters, ElectronicReportingWHT_EG_ERFormatMappingWHT_EG), FormControlEventType::Lookup)]
    public static void LedgerParametersElectronicReportingWHT_EG_ERFormatMappingWHT_EG_OnLookup(FormControl _sender, FormControlEventArgs _e)
    {
        ERFormatMappingTable::lookup(
            _sender,
            WHTDeclarationService_EG::ERModelName,
            WHTDeclarationService_EG::ERFormatRootDefinition);

        FormControlCancelableSuperEventArgs ce = _e as FormControlCancelableSuperEventArgs;
        if (ce)
        {
            ce.CancelSuperCall();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>EnableCalcWHTInInvoice_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles modified event for field EnableCalcWHTInInvoice of data source <c>TaxWithholdParameters</c>
    /// </summary>
    /// <param name = "_sender">The form data object.</param>
    /// <param name = "_e">The event arguments.</param>
    [FormDataFieldEventHandler(formDataFieldStr(LedgerParameters, TaxWithholdParameters, EnableCalcWHTInInvoice), FormDataFieldEventType::Modified)]
    public static void EnableCalcWHTInInvoice_OnModified(FormDataObject _sender, FormDataFieldEventArgs _e)
    {
        FormDataSource taxWithholdParameters_ds = _sender.dataSource();
        TaxWithholdParameters taxWithholdParameters = taxWithholdParameters_ds.cursor();

        FormRun formRun = taxWithholdParameters_ds.formRun();
        formRun.control(formRun.controlId(formControlStr(LedgerParameters, TaxWithholdParameters_CheckIntersection))).enabled(taxWithholdParameters.EnableCalcWHTInInvoice);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>