<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PMFSequencingModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Define the logic to use for a given type of sequence.
/// </summary>
public class PMFSequencingModel
{
    #define.maxRank(9999)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>maxRank</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the maximum value used for ranking.
    /// </summary>
    /// <returns>
    /// The maximum value for a rank.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected int maxRank()
    {
        return #maxRank;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>rank</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the rank of the current planned order within the list of planned orders for a given work center.
    /// </summary>
    /// <param name="_current">
    /// The current planned order to be evaluated.
    /// </param>
    /// <param name="_sequenceId">
    /// Th unqiue ID of the sequence that will be used to rank the planned order.
    /// </param>
    /// <param name="_unsortedSet">
    /// The list of all planned orders for the specified work center.
    /// </param>
    /// <returns>
    /// The rank of the specified planned order.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public int rank(
        Common          _current,
        PMFSequenceId   _sequenceId = '',
        Set             _unsortedSet = null)
    {
        ItemId                  itemId;
        ReqRoute                reqRoute;
        PMFSequenceItemTable    itemSequence;
        fieldId                 fieldId = fieldname2id(_current.TableId, fieldstr(InventTable, ItemId));
        ItemGroupId             itemGroupId;

        if (_current.TableId == tablenum(ReqRoute))
        {
            reqRoute    = _current;
            itemId      = ReqPO::find(reqRoute.PlanVersion, reqRoute.RefId).ItemId;
        }

        if (!itemId)
        {
            if (!fieldId)
            {
                return this.maxRank();
            }

            itemId = _current.(fieldId);

            if (!itemId)
            {
                return this.maxRank();
            }
        }

        itemGroupId     = inventItemGroupItem::findByItemIdLegalEntity(itemId).ItemGroupId;

        select firstonly itemSequence
            order by ItemCode
            where itemSequence.SequenceId           == _sequenceId
                && ((itemSequence.ItemCode          == TableGroupAll::Table
                    && itemSequence.ItemRelation    == itemId)
                || (itemSequence.ItemCode           == TableGroupAll::GroupId
                    && itemSequence.ItemRelation    == itemGroupId)
                || (itemSequence.ItemCode           == TableGroupAll::All
                    && !itemSequence.ItemRelation));

        if (!itemSequence)
        {
            return this.maxRank();
        }

        return PMFSequenceTableValue::find( _sequenceId, itemSequence.SequenceValue).SequenceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static PMFSequencingModel construct()
    {
        return new PMFSequencingModel();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>