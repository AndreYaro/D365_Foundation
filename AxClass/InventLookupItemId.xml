<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventLookupItemId</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventLookupItemId extends InventLookup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventLookupItemId</c> class.
    /// </summary>
    /// <param name="_lookupCtrl">
    ///    The currently selected form control.
    /// </param>
    /// <param name="_query">
    ///    The query to use for the lookup.
    /// </param>
    protected void new(
        Object     _lookupCtrl,
        Query      _query)
    {
        super(_lookupCtrl, _query, formStr(InventItemIdLookupSimple));
    }

]]></Source>
			</Method>
			<Method>
				<Name>newArgs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventLookupItemId</c> class from an <c>Args</c> object.
    /// </summary>
    /// <param name="_args">
    ///    The <c>Args</c> object from which to initialize.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>InventLookupItemId</c> class.
    /// </returns>
    /// <remarks>
    ///    The new instance is based on either the <c>_args.parmObject</c> method or the extended data type on
    ///    the caller control.
    /// </remarks>
    public static InventLookupItemId newArgs(Args _args)
    {
        InventLookupItemId      inventLookupItemId;

        if (_args.parmObject())
        {
            // The inventLookupItemId in parmObject() has had inventLookupItemId.init() called.
            inventLookupItemId = _args.parmObject();
        }
        else
        {
            ExtendedDataTypeName edtName = InventLookupItemId::extendedDataTypeNameFromArgs(_args);
            inventLookupItemId = InventLookupItemId::newExtendedDataTypeName(edtName, _args.caller().selectedControl());
        }

        return inventLookupItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>extendedDataTypeNameFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the extended data type behind the lookup based on an <c>Args</c> object.
    /// </summary>
    /// <param name = "_args">The <c>Args</c> object.</param>
    /// <returns></returns>
    public static ExtendedDataTypeName extendedDataTypeNameFromArgs(Args _args)
    {
        ExtendedDataTypeName edtName;

        switch (_args.dataset())
        {
            case 0: // No calling table
                break;

            case tableNum(TmpSysQuery): // Called from query dialog
                TmpSysQuery tmpSysQuery = _args.record() as TmpSysQuery;
                DictField dictField = new DictField(tmpSysQuery.Table_Id, tmpSysQuery.Field_Id);
                if (dictField)
                {
                    edtName         = extendedTypeId2name(dictField.typeId());
                }
                break;

            default:
                FormStringControl callerControl = SysTableLookup::getCallerStringControl(_args);
                dictField = new DictField(_args.dataset(), callerControl.dataField());
                if (dictField)
                {
                    edtName         = extendedTypeId2name(dictField.typeId());
                }
                break;
        }

        if (!edtName)
        {
            edtName = extendedTypeStr(ItemIdProduction);
        }
        return edtName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newExtendedDataTypeName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventLookupItemId</c> class by using an extended data type.
    /// </summary>
    /// <param name="_typeName">
    ///    The extended data type from which to initialize.
    /// </param>
    /// <param name="_selectedFormControl">
    ///    The currently selected form control on the <c>FormRun</c> caller.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>InventLookupItemId</c> class.
    /// </returns>
    static InventLookupItemId newExtendedDataTypeName(
        ExtendedDataTypeName    _typeName,
        FormControl             _selectedFormControl)
    {
        InventLookupItemId  inventLookupItemId;

        switch (_typeName)
        {
            case extendedTypeStr(ItemIdProduction):
                inventLookupItemId = InventLookupItemIdCanBeProduced::newLookupCtrl(_selectedFormControl);
                break;

            case extendedTypeStr(ItemIdInventoried):
                inventLookupItemId = InventLookupItemIdInventoried::newLookupCtrl(_selectedFormControl);
                break;

            default:
                inventLookupItemId = InventLookupItemId::newLookupCtrlQuery(_selectedFormControl, null);
                break;
        }
        inventLookupItemId.init();

        return inventLookupItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLookupCtrlQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventLookupItemId</c> class.
    /// </summary>
    /// <param name="_lookupCtrl">
    ///    The currently selected form control.
    /// </param>
    /// <param name="_query">
    ///    The query to use for the lookup.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>InventLookupItemId</c> class.
    /// </returns>
    static public InventLookupItemId newLookupCtrlQuery(
        Object     _lookupCtrl,
        Query      _query)
    {
        return new InventLookupItemId(_lookupCtrl, _query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the object.
    /// </summary>
    void init()
    {
        super();
        
        if (!query)
        {
            InventItemIdLookupSimple lookup = InventItemIdLookupSimple::construct();
            query = lookup.parmQuery();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>