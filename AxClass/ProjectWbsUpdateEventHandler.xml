<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjectWbsUpdateEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Event handler class for Project Wbs manipulation thru form or data create,update,delete operations.
/// </summary>
public class ProjectWbsUpdateEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lockUnlockProjectWbs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Locks/unlocks Wbs when the form is opened to prevent editing in other client. First client to open (AOS or Project) gets the lock
    /// </summary>
    /// <param name = "_hierarchy">HierarchyId of the Wbs</param>
    /// <param name = "_lockLocation">LockLocation, either AOS or Project</param>
    /// <param name = "_isLocked">True if locking the given Wbs, false if unlocking</param>
    public static void lockUnlockProjectWbs(HierarchyIdBase _hierarchy, ProjectWbsLockLocation _lockLocation, NoYes _isLocked)
    {
        ProjectWbsLockBox projectWbsLockBox;

        select projectWbsLockBox
            where projectWbsLockBox.HierarchyId == _hierarchy;

        ttsbegin;

        if(!projectWbsLockBox.RecId  && _isLocked)
        {
            UserInfo userInfo;

            select firstonly userInfo where userInfo.Id == curUserId() && userInfo.Enable == NoYes::Yes;

            projectWbsLockBox.HierarchyId = _hierarchy;
            projectWbsLockBox.LockLocation = _lockLocation;
            projectWbsLockBox.IsLocked = _isLocked;
            projectWbsLockBox.CurrentActiveUser = userInfo.networkAlias;
            projectWbsLockBox.insert();
        }
        else if (projectWbsLockBox.RecId && !_isLocked)
        {
            projectWbsLockBox.selectForUpdate(true);

            if (!projectWbsLockBox.FileId && projectWbsLockBox.LockLocation == ProjectWbsLockLocation::AOS)
            {
                projectWbsLockBox.delete();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeLockForPublishedWbs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Remove lock record when Wbs is published
    /// </summary>
    /// <param name = "_hierarchy">HierarchyId of the draft Wbs</param>
    public static void removeLockForPublishedWbs(HierarchyIdBase _hierarchy)
    {
        ProjectWbsLockBox projectWbsLockBox;

        select forupdate projectWbsLockBox
            where projectWbsLockBox.HierarchyId == _hierarchy;

        ttsbegin;

        if (projectWbsLockBox.RecId)
        {
            if (projectWbsLockBox.FileId)
            {
                ProjectWbsMppUploadResult::constructFromFileId(projectWbsLockBox.FileId).deleteResult();
            }

            projectWbsLockBox.delete();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>