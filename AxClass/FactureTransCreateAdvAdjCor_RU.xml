<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FactureTransCreateAdvAdjCor_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class FactureTransCreateAdvAdjCor_RU extends FactureTransCreate_RU
{
    FactureTrans_RU factureTransOriginal;
    AmountMST       lineAmountMST, taxAmountMST;
    ExchRate        exchRate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initTrans</Name>
				<Source><![CDATA[
    protected void initTrans()
    {
        factureTrans.data(factureTransOriginal);

        factureTrans.ExchRate        = exchRate;

        factureTrans.FactureId       = factureJour.FactureId;
        factureTrans.FactureLineType = FactureLineType_RU::AdvanceAdjustment;
        factureTrans.RefCorrectedFactureTrans = factureTransOriginal.RecId;

        factureTrans.LineAmount      = 0;
        factureTrans.TaxAmount       = 0;
        factureTrans.Excise          = 0;
        factureTrans.Price           = 0;
        factureTrans.vat             = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchRate</Name>
				<Source><![CDATA[
    public ExchRate parmExchRate(ExchRate _exchRate = exchRate)
    {
        exchRate = _exchRate;
        return exchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFactureTransOriginal</Name>
				<Source><![CDATA[
    public FactureTrans_RU parmFactureTransOriginal(FactureTrans_RU _factureTrans = factureTransOriginal)
    {
        factureTransOriginal = _factureTrans;
        return factureTransOriginal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmountMST</Name>
				<Source><![CDATA[
    public AmountMST parmLineAmountMST(AmountMST _lineAmountMST = lineAmountMST)
    {
        lineAmountMST = _lineAmountMST;
        return lineAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxAmountMST</Name>
				<Source><![CDATA[
    public AmountMST parmTaxAmountMST(AmountMST _taxAmountMST = taxAmountMST)
    {
        taxAmountMST = _taxAmountMST;
        return taxAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static FactureTransCreateAdvAdjCor_RU construct(FactureJourCreateAdvAdjCor_RU _factureJourCreate,
                                                           FactureTrans_RU               _factureTrans,
                                                           AmountMST                     _lineAmountMST,
                                                           AmountMST                     _taxAmountMST,
                                                           ExchRate                      _exchRate)
    {
        FactureTransCreateAdvAdjCor_RU  ret;

        switch (_factureTrans.Module)
        {
            case FactureModule_RU::Cust :
                ret = new FactureTransCreateAdvAdjCorCust_RU(_factureJourCreate, _factureTrans.RecId, _factureTrans.Qty, false);
                break;

            case FactureModule_RU::Vend :
                ret = new FactureTransCreateAdvAdjCorVend_RU(_factureJourCreate, _factureTrans.RecId, _factureTrans.Qty, false);
                break;

            default                     :
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        ret.parmFactureTransOriginal(_factureTrans);
        ret.parmLineAmountMST(_lineAmountMST);
        ret.parmTaxAmountMST(_taxAmountMST);
        ret.parmExchRate(_exchRate);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>