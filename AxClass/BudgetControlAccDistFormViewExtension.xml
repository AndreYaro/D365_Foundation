<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlAccDistFormViewExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetControlAccDistFormViewExtension</c> class is responsible for handling the various
///    accounting distribution form view events to satisfy budget control requirements.
/// </summary>
/// <remarks>
///    This class is an extension of the <c>AccDistViewExtension</c> class.
/// </remarks>
[SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_ProductRequisition), SourceDocument_ProductRequisition::PurchaseRequisition, classStr(AccountingDistributionFormView)),
SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_ProductOrder), SourceDocument_ProductOrder::PurchaseOrder, classStr(AccountingDistributionFormView)),
SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_VendorInvoice), SourceDocument_VendorInvoice::VendorInvoice, classStr(AccountingDistributionFormView)),
SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_ExpenseReport), SourceDocument_ExpenseReport::ExpenseReport, classStr(AccountingDistributionFormView)),
SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_TravelRequisition), SourceDocument_TravelRequisition::TravelRequisition, classStr(AccountingDistributionFormView)),
SourceDocumentEnumLiteralClassExtensionAttribute(enumStr(BudgetReservation_SourceDocument_PSN), enumLiteralStr(BudgetReservation_SourceDocument_PSN, BudgetReservation), classStr(AccountingDistributionFormView))]
public class BudgetControlAccDistFormViewExtension extends AccDistViewExtension
{
    boolean                     isAccountingDistributionUpdated;
    SourceDocumentLineItem      topParentSourceDocumentLineItem;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>closingView</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs a budget check in the accounting distribution view closing event.
    /// </summary>
    /// <remarks>
    ///    The Budget check is only performed if there is any update on the accounting distributions.
    /// </remarks>
    public void closingView()
    {
        if (isAccountingDistributionUpdated && topParentSourceDocumentLineItem)
        {
            BudgetControlSourceDocumentProcessor::submitSourceDocumentLineToCheckBudget(
                topParentSourceDocumentLineItem.parmSourceDocumentLine(),
                true,
                BudgetControlAccDistFormViewExtCaller::construct(),
                false,
                curUserId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCallerBudgetSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the caller source document type implements
    /// <c>SourceDocumentTypeIBudgetControl</c> interface.
    /// </summary>
    /// <returns>
    /// true if the caller source document type implements the <c>SourceDocumentTypeIBudgetControl</c>
    /// interface; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The top parent source document line in the source document line parent reference hierarchy is
    /// retrieved if the caller source document type implements the <c>SourceDocumentTypeIBudgetControl</c>
    /// interface.
    /// </remarks>
    protected boolean isCallerBudgetSource()
    {
        SourceDocumentLine      callerSourceDocumentLine;
        SourceDocumentLineItem  callerSourceDocumentLineItem;
        SourceDocumentLine      topParentSourceDocumentLine;
        boolean                 isCallerBudgetSource;

        callerSourceDocumentLine = accountingDistributionView.parmCallerSourceDocumentLine();

        if (callerSourceDocumentLine)
        {
            callerSourceDocumentLineItem = SourceDocumentLineItem::newFromSourceDocumentLine(callerSourceDocumentLine);

            if (callerSourceDocumentLineItem.parmSourceDocument().parmSourceDocumentType() is SourceDocumentTypeIBudgetControl)
            {
                isCallerBudgetSource = true;

                if (callerSourceDocumentLine.ParentSourceDocumentLine)
                {
                    topParentSourceDocumentLine = SourceDocumentLine::findTopParentSourceDocumentLine(callerSourceDocumentLine.RecId);
                    topParentSourceDocumentLineItem = SourceDocumentLineItem::newFromSourceDocumentLine(topParentSourceDocumentLine);
                }
                else
                {
                    topParentSourceDocumentLine = callerSourceDocumentLine;
                    topParentSourceDocumentLineItem = callerSourceDocumentLineItem;
                }
            }
        }

        return isCallerBudgetSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Subscribes to accounting distribution view extension events.
    /// </summary>
    protected void subscribe()
    {
        if (this.isCallerBudgetSource())
        {
            accountingDistributionView.updatedAccDistributionEventHandler += eventhandler(this.updatedAccountingDistribution);
            accountingDistributionView.closingViewEventHandler += eventhandler(this.closingView);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatedAccountingDistribution</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Tracks whether there is any update on the accounting distributions in the accounting distribution
    ///    view updated accounting distribution event.
    /// </summary>
    public void updatedAccountingDistribution()
    {
        isAccountingDistributionUpdated = true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>