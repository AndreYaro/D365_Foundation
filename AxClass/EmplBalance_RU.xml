<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EmplBalance_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EmplBalance_RU
{
    TransDate               toDate;
    boolean                 forecast;
    QueryRun                qrEmplTrans;

    AmountMST               amountMST;
    AmountCur               amountCur;
    AmountMSTExchAdjustment amountMSTExchAdjForecast;
    AmountMSTExchAdjustment amountMSTExchAdj;
    CurrencyCode            currencyCode;
    EmplAccount_RU          accountNum;
    PostingProfile          postingProfile;
    EmplSettleDynamic_RU    settleDynamic;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountNum</Name>
				<Source><![CDATA[
    public EmplAccount_RU accountNum()
    {
        return accountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountCur</Name>
				<Source><![CDATA[
    public AmountCur amountCur()
    {
        return amountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountMST</Name>
				<Source><![CDATA[
    public AmountMST amountMST()
    {
        return amountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountMSTExchAdj</Name>
				<Source><![CDATA[
    public AmountMSTExchAdjustment amountMSTExchAdj()
    {
        return amountMSTExchAdj;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountMSTExchAdjForecast</Name>
				<Source><![CDATA[
    public AmountMSTExchAdjustment amountMSTExchAdjForecast()
    {
        return amountMSTExchAdjForecast;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    protected void buildQuery()
    {
        Query                   query;
        QueryBuildDataSource    qbds;

        query = new Query();

        qbds = query.addDataSource(tablenum(EmplTrans_RU));
        qbds.addRange(fieldnum(EmplTrans_RU, EmplAccount));
        qbds.addRange(fieldnum(EmplTrans_RU, PostingProfile));

        qbds.orderMode(OrderMode::GroupBy);
        qbds.addSortField(fieldnum(EmplTrans_RU, TransType));

        qbds.addSelectionField(fieldnum(EmplTrans_RU, AmountMST), SelectionField::Sum);
        qbds.addRange(fieldnum(EmplTrans_RU, TransDate)).value(queryRange(dateNull(), toDate));
        qbds.addRange(fieldnum(EmplTrans_RU, Reversed)).value(queryValue(NoYes::No));

        qrEmplTrans = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    public void calc(EmplAccount_RU    _accountNum,
                     PostingProfile    _postingProfile = "")
    {
        this.clear();

        if (! qrEmplTrans)
        {
            return;
        }

        accountNum      = _accountNum;
        postingProfile  = _postingProfile;

        qrEmplTrans.query().dataSourceNo(1).findRange(fieldnum(EmplTrans_RU, EmplAccount)).value(accountNum);
        qrEmplTrans.query().dataSourceNo(1).findRange(fieldnum(EmplTrans_RU, PostingProfile)).value(postingProfile);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clear</Name>
				<Source><![CDATA[
    protected void clear()
    {
        amountMST = 0;
        amountCur = 0;
        amountMSTExchAdj = 0;
        amountMSTExchAdjForecast = 0;

        if (qrEmplTrans)
        {
            qrEmplTrans.reset();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dynamicSettleTrans</Name>
				<Source><![CDATA[
    protected EmplSettlement_RU dynamicSettleTrans()
    {
        if (! settleDynamic)
        {
            settleDynamic = new EmplSettleDynamic_RU(toDate);
            settleDynamic.initSettleTrans();
            settleDynamic.buildQueries();
        }
        settleDynamic.clearTransSettle();
        settleDynamic.settleEmployee(accountNum);

        return settleDynamic.transSettle();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(TransDate _toDate,
                    boolean   _forecast = false)
    {
        toDate          = _toDate;
        forecast        = _forecast;
        this.buildQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmCurrencyCode(CurrencyCode _currencyCode = currencyCode)
    {
        QueryBuildRange qbr;

        if (_currencyCode != currencyCode)
        {
            currencyCode = _currencyCode;
            qbr = qrEmplTrans.query().dataSourceNo(1).findRange(fieldnum(EmplTrans_RU, CurrencyCode));
            if (qbr)
            {
                qbr.value(currencyCode);
            }
        }
        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingProfile</Name>
				<Source><![CDATA[
    public PostingProfile postingProfile()
    {
        return postingProfile;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>