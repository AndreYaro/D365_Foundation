<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupCopyFromPurchOrderParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class holds the parameters used in copy of markup transactions in the class <c>Markup</c>.
/// </summary>
public class MarkupCopyFromPurchOrderParameters
{
    Common                             bufferFrom, bufferTo;
    Num                                interCompanyInvoiceNum;
    CurrencyCode                       currencyCode;
    SourceDocumentLineAccountingStatus targetAccountingStatus;
    PurchTable                         purchTable;
    boolean                            interCompanyInvoiceNumPassed;
    SysDaBinaryExpression bufferFromWhereClause;
    SysDaBinaryExpression bufferToWhereClause;
    DocumentStatus documentStatusToExclude;

    }
]]></Declaration>
		<Methods>
			<Method>
				<Name>createCopyFromPurchOrderParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the parameter class for copy of markup transactions.
    /// </summary>
    /// <param name="_fromTable">
    /// The source table record.
    /// </param>
    /// <param name="_toTable">
    /// The destination table record.
    /// </param>
    /// <param name="_interCompanyInvoiceNum">
    /// The invoice number used by an intercompany invoice.
    /// </param>
    /// <param name="_currencyCode">
    /// The currency code to use during conversion to the destination table record.
    /// </param>
    /// <param name="_targetAccountingStatus">
    /// The desired source document line accounting status.
    /// </param>
    /// <param name="_purchTable">
    /// The purch order used to resolve the _interCompanyInvoiceNum (last invoice) if it wasn't provided in the method call.
    /// </param>
    /// <param name="_interCompanyInvoiceNumPassed">
    /// A boolean which indicates if defaulting of _interCompanyInvoiceNum should be skipped.
    /// </param>
    /// <returns>
    /// An initialized <c>MarkupCopyFromPurchOrderParameters</c> class.
    /// </returns>
    /// <remarks>
    /// If no currency code is provided, the currency code of the destination table record will be used for conversion.
    /// </remarks>
    public static MarkupCopyFromPurchOrderParameters createCopyFromPurchOrderParameters(
        Common                             _fromTable,
        Common                             _toTable,
        Num                                _interCompanyInvoiceNum,
        CurrencyCode                       _currencyCode = '',
        SourceDocumentLineAccountingStatus _targetAccountingStatus = SourceDocumentLineAccountingStatus::None,
        PurchTable                         _purchTable = null,
        boolean                            _interCompanyInvoiceNumPassed = true)
    {
        MarkupCopyFromPurchOrderParameters copyFromPurchOrderParameters = MarkupCopyFromPurchOrderParameters::construct();

        copyFromPurchOrderParameters.parmBufferFrom(_fromTable);
        copyFromPurchOrderParameters.parmBufferTo(_toTable);
        copyFromPurchOrderParameters.parmInterCompanyInvoiceNum(_interCompanyInvoiceNum);
        copyFromPurchOrderParameters.parmCurrencyCode(_currencyCode);
        copyFromPurchOrderParameters.parmTargetAccountingStatus(_targetAccountingStatus);
        copyFromPurchOrderParameters.parmPurchTable(_purchTable);
        copyFromPurchOrderParameters.parmInterCompanyInvoiceNumPassed(_interCompanyInvoiceNumPassed);

        return copyFromPurchOrderParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of <c>MarkupCopyFromPurchOrderParameters</c>.
    /// </summary>
    /// <returns>
    /// An instance of the <c>MarkupCopyFromPurchOrderParameters</c> class.
    /// </returns>
    protected static MarkupCopyFromPurchOrderParameters construct()
    {
        return new MarkupCopyFromPurchOrderParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBufferFrom</Name>
				<Source><![CDATA[
    public Common parmBufferFrom(Common _bufferFrom = bufferFrom)
    {
        bufferFrom = _bufferFrom;
        return bufferFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBufferTo</Name>
				<Source><![CDATA[
    public Common parmBufferTo(Common _bufferTo = bufferTo)
    {
        bufferTo = _bufferTo;
        return bufferTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyInvoiceNum</Name>
				<Source><![CDATA[
    public Num parmInterCompanyInvoiceNum(Num _interCompanyInvoiceNum = interCompanyInvoiceNum)
    {
        interCompanyInvoiceNum = _interCompanyInvoiceNum;
        return interCompanyInvoiceNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTargetAccountingStatus</Name>
				<Source><![CDATA[
    public SourceDocumentLineAccountingStatus parmTargetAccountingStatus(SourceDocumentLineAccountingStatus _targetAccountingStatus = targetAccountingStatus)
    {
        targetAccountingStatus = _targetAccountingStatus;
        return targetAccountingStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchTable</Name>
				<Source><![CDATA[
    public PurchTable parmPurchTable(PurchTable _purchTable = purchTable)
    {
        purchTable = _purchTable;
        return purchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyInvoiceNumPassed</Name>
				<Source><![CDATA[
    public boolean parmInterCompanyInvoiceNumPassed(boolean _interCompanyInvoiceNumPassed = interCompanyInvoiceNumPassed)
    {
        interCompanyInvoiceNumPassed = _interCompanyInvoiceNumPassed;
        return interCompanyInvoiceNumPassed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmCurrencyCode(CurrencyCode _currencyCode = currencyCode)
    {
        currencyCode = _currencyCode;
        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBufferFromWhereClause</Name>
				<Source><![CDATA[
    public SysDaBinaryExpression parmBufferFromWhereClause(SysDaBinaryExpression _bufferFromWhereClause = bufferFromWhereClause)
    {
        bufferFromWhereClause = _bufferFromWhereClause;
        return bufferFromWhereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBufferToWhereClause</Name>
				<Source><![CDATA[
    public SysDaBinaryExpression parmBufferToWhereClause(SysDaBinaryExpression _bufferToWhereClause = bufferToWhereClause)
    {
        bufferToWhereClause = _bufferToWhereClause;
        return bufferToWhereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentStatusToExclude</Name>
				<Source><![CDATA[
    public DocumentStatus parmDocumentStatusToExclude(DocumentStatus _documentStatusToExclude = documentStatusToExclude)
    {
        documentStatusToExclude = _documentStatusToExclude;
        return documentStatusToExclude;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>