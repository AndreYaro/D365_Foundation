<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetsDataEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data entity related upgrade scripts for Fixed Assets.
/// </summary>
class ReleaseUpdateDB70_FixedAssetsDataEntity extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>myVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///     The script runs in any system having version < CTP8.
    /// </summary>
    /// <returns>Script version.</returns>
    public SysReleasedVersion myVersion()
    {
        return SysReleasedVersion::CTP8;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLRemoveColumnsWithBadTypes</Name>
				<Source><![CDATA[
    private str getSQLRemoveColumnsWithBadTypes()
    {
        str sql = @"
                    DECLARE @Constraint nvarchar(128)
                    SELECT @Constraint = NAME from SYS.DEFAULT_CONSTRAINTS
                    WHERE PARENT_OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING')
                    AND PARENT_COLUMN_ID = (SELECT COLUMN_ID FROM SYS.COLUMNS WHERE NAME = N'SPECIALDEPRECIATIONALLOCATIONPERIODS' AND OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING'))
                    IF @Constraint IS NOT NULL EXEC('ALTER TABLE ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING DROP CONSTRAINT ' + @Constraint)

                    SELECT @Constraint = NAME from SYS.DEFAULT_CONSTRAINTS
                    WHERE PARENT_OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING')
                    AND PARENT_COLUMN_ID = (SELECT COLUMN_ID FROM SYS.COLUMNS WHERE NAME = N'SPECIALDEPRECIATIONALLOCATIONSTARTCONVENTION' AND OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING'))
                    IF @Constraint IS NOT NULL EXEC('ALTER TABLE ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING DROP CONSTRAINT ' + @Constraint)

                    SELECT @Constraint = NAME from SYS.DEFAULT_CONSTRAINTS
                    WHERE PARENT_OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING')
                    AND PARENT_COLUMN_ID = (SELECT COLUMN_ID FROM SYS.COLUMNS WHERE NAME = N'SPECIALDEPRECIATIONALLOCATIONUNIT' AND OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING'))
                    IF @Constraint IS NOT NULL EXEC('ALTER TABLE ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING DROP CONSTRAINT ' + @Constraint)

                    IF EXISTS(SELECT * FROM SYS.COLUMNS WHERE NAME=N'SPECIALDEPRECIATIONALLOCATIONPERIODS' and OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING'))
                    BEGIN
                    ALTER TABLE ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING DROP COLUMN SPECIALDEPRECIATIONALLOCATIONPERIODS
                    END

                    IF EXISTS(SELECT * FROM SYS.COLUMNS WHERE NAME=N'SPECIALDEPRECIATIONALLOCATIONUNIT' and OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING'))
                    BEGIN
                    ALTER TABLE ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING DROP COLUMN SPECIALDEPRECIATIONALLOCATIONUNIT
                    END

                    IF EXISTS(SELECT * FROM SYS.COLUMNS WHERE NAME=N'SPECIALDEPRECIATIONALLOCATIONSTARTCONVENTION' and OBJECT_ID = OBJECT_ID(N'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING'))
                    BEGIN
                    ALTER TABLE ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING DROP COLUMN SPECIALDEPRECIATIONALLOCATIONSTARTCONVENTION
                    END

                    DELETE FROM SQLDICTIONARY WHERE NAME = 'SPECIALDEPRECIATIONALLOCATIONPERIODS' AND
                    TABLEID IN (SELECT ID FROM TABLEIDTABLE WHERE NAME = 'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING')

                    DELETE FROM SQLDICTIONARY WHERE NAME = 'SPECIALDEPRECIATIONALLOCATIONSTARTCONVENTION' AND
                    TABLEID IN (SELECT ID FROM TABLEIDTABLE WHERE NAME = 'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING')

                    DELETE FROM SQLDICTIONARY WHERE NAME = 'SPECIALDEPRECIATIONALLOCATIONUNIT' AND
                    TABLEID IN (SELECT ID FROM TABLEIDTABLE WHERE NAME = 'ASSETGROUPDEPRECIATIONBOOKSETUPSTAGING')
                    ";

        return sql;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncRemoveColumnsWithBadTypes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes columns from <c>AssetGroupDepreciationBookSetupStaging</c> table which had bad types in CTP7.
    /// The database synchronization will put them back with the correct types.
    /// </summary>
    [
        UpgradeScriptDescriptionAttribute("@FixedAssets:FA_UpgradeProgressAssetGroupDepreciationBookSetupStaging"),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
        UpgradeScriptTableAttribute('AssetGroupDepreciationBookSetupStaging', false, false, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncRemoveColumnsWithBadTypes()
    {
        str sqlStatement = this.getSQLRemoveColumnsWithBadTypes();

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdateWithParameters(sqlStatement, SqlParams::create());
        CodeAccessPermission::revertAssert();
        statement.close();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>