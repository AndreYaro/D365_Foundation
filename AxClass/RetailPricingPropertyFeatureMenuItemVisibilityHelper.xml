<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPricingPropertyFeatureMenuItemVisibilityHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Customize visibility of menu items according to the state of <c>RetailPricingPropertyFeature</c>.
/// </summary>
internal final class RetailPricingPropertyFeatureMenuItemVisibilityHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>menuItemVisibilityHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constrain navigation.
    /// </summary>
    /// <param name = "_rootMenu">Root menu.</param>
    /// <param name = "_subMenu">Sub menu.</param>
    /// <param name = "_subMenuVisibility">Parameters.</param>
    [SubscribesTo(classstr(SysMenuNavigationObjectFactory), staticdelegatestr(SysMenuNavigationObjectFactory, checkAddSubMenuDelegate))]
    public static void menuItemVisibilityHandler(SysDictMenu _rootMenu, SysDictMenu _subMenu, SysBoxedBoolean _subMenuVisibility)
    {
        if (_subMenu.isMenu())
        {
            if (_subMenu.name() == 'PriceGroups')
            {
                _subMenuVisibility.value = !RetailPricingFeatureToggle::isRetailPricingPropertyFeatureEnabled();
            }
        }
        else if (_subMenu.isMenuItem())
        {
            var metaElement = _subMenu.GetMenuItemMetaElement();
            if (metaElement != null)
            {
                switch (metaElement.Name)
                {
                    case menuItemDisplayStr(RetailPriceGroupApplicabilityRule):
                    case menuItemDisplayStr(RetailDiscountApplicabilityRule):
                        _subMenuVisibility.value = RetailPricingFeatureToggle::isRetailPricingPropertyFeatureEnabled();
                        break;
                    case menuItemDisplayStr(RetailDiscountsAll):
                    case menuItemDisplayStr(RetailPriceDiscGroup):
                        _subMenuVisibility.value = !RetailPricingFeatureToggle::isRetailPricingPropertyFeatureEnabled();
                        break;
                    case menuItemDisplayStr(RetailPricingPropertyDefinition):
                        _subMenuVisibility.value = RetailPricingFeatureToggle::isRetailPricingPropertyFeatureVisible();
                        break;
                    default:
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>