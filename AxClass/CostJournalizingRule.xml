<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostJournalizingRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostJournalizingRule</c> class determines if a entry should be journalized to general ledger.
/// </summary>
abstract public class CostJournalizingRule
{
    CostEntryBase       entry;
    boolean             journalize;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustJournalize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the entry must be jurnalized.
    /// </summary>
    /// <returns>
    /// true if if the entry must be jurnalized; otherwise false.
    /// </returns>
    public boolean mustJournalize()
    {
        return journalize;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEntry</Name>
				<Source><![CDATA[
    protected CostEntryBase parmEntry(CostEntryBase _entry = entry)
    {
        entry = _entry;

        return entry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolve</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resolves the journalizing rule.
    /// </summary>
    abstract protected void resolve()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new journalizing rule for the entry that is journalized.
    /// </summary>
    /// <param name="_entry">
    /// The entry that is journalized.
    /// </param>
    /// <returns>
    /// A new journalizing rule for the entry that is journalized.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// A rule was not found.
    /// </exception>
    public static CostJournalizingRule newRule(CostEntryBase _entry)
    {
        CostJournalizingRule        rule;

        switch (classIdGet(_entry.parmDescriptor()))
        {
            case classNum(CostProductCostDescriptor):
                CostProductCostDescriptor productCostDescriptor = _entry.parmDescriptor();
                rule = CostJournalizingRule::newRuleFromSource(productCostDescriptor.parmSource());
                break;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        rule.parmEntry(_entry);
        rule.resolve();

        return rule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newRuleFromSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new journalizing rule for the source that is journalized.
    /// </summary>
    /// <param name="_source">
    /// The source that is journalized.
    /// </param>
    /// <returns>
    /// A new journalizing rule for the source that is journalized.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// A rule was not found.
    /// </exception>
    private static CostJournalizingRule newRuleFromSource(CostEntrySource _source)
    {
        CostJournalizingRule    rule;

        switch (_source.parmSourceRelationType())
        {
            case tableNum(MarkupTrans):
                rule = new CostMarkupJournalizingRule();
                break;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        return rule;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
