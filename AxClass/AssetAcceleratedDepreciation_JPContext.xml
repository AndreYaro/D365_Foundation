<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAcceleratedDepreciation_JPContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetAcceleratedDepreciation_JPContext</c> class provides
///   additional context for the accelerated depreciation calculation.
/// </summary>
internal final class AssetAcceleratedDepreciation_JPContext implements System.IDisposable
{
    private static AssetAcceleratedDepreciation_JPContext instance;

    internal AssetAccrual accrual = -1; // set to -1 by default, because 0 is Yearly
    internal TransDate startOfDeprPeriod;
    internal TransDate fromDate;
    internal TransDate toDate;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(classStr(AssetAcceleratedDepreciation_JPContext)));
        }
    
        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    internal static AssetAcceleratedDepreciation_JPContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssetAccrual</Name>
				<Source><![CDATA[
    internal static AssetAccrual getAssetAccrual()
    {
        AssetAccrual accrual = -1; // set to -1 by default, because 0 is Yearly

        AssetAcceleratedDepreciation_JPContext context = AssetAcceleratedDepreciation_JPContext::current();
        if (context && context.accrual != -1)
        {
            accrual = context.accrual;
        }

        return accrual;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartOfDeprPeriod</Name>
				<Source><![CDATA[
    internal static TransDate getStartOfDeprPeriod()
    {
        TransDate startOfDeprPeriod;

        AssetAcceleratedDepreciation_JPContext context = AssetAcceleratedDepreciation_JPContext::current();
        if (context && context.startOfDeprPeriod)
        {
            startOfDeprPeriod = context.startOfDeprPeriod;
        }

        return startOfDeprPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDate</Name>
				<Source><![CDATA[
    internal static TransDate getFromDate()
    {
        TransDate fromDate;

        AssetAcceleratedDepreciation_JPContext context = AssetAcceleratedDepreciation_JPContext::current();
        if (context && context.fromDate)
        {
            fromDate = context.fromDate;
        }

        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getToDate</Name>
				<Source><![CDATA[
    internal static TransDate getToDate()
    {
        TransDate toDate;

        AssetAcceleratedDepreciation_JPContext context = AssetAcceleratedDepreciation_JPContext::current();
        if (context && context.toDate)
        {
            toDate = context.toDate;
        }

        return toDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>