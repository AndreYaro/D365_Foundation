<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalBonus</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalBonus extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncCopyAssetGroupSetupBonusIN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies AssetGroupSetupBonus_IN table into a staging table in order to migrated records to <c>AssetGroupSetupBonus</c>
    /// </summary>
    [
        UpgradeScriptDescriptionAttribute("@FixedAssets:FA_UpgradeTitle_AssetGroupSetupBonusINStaging"),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
        UpgradeScriptConfigKeyAttribute(configurationKeyStr(Asset)),
        UpgradeScriptTableAttribute('ASSETGROUPSETUPBONUS_IN', false, true, false, false),
        UpgradeScriptTableAttribute('AssetGroupSetupBonusINUpgradeTemp', true, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncCopyAssetGroupSetupBonusIN()
    {
        str sqlStatement;

        sqlStatement =
        @"IF OBJECT_ID ( '[dbo].[ASSETGROUPSETUPBONUSINUPGRADETEMP]', 'U') IS NOT NULL
            DROP TABLE [dbo].[ASSETGROUPSETUPBONUSINUPGRADETEMP]

        CREATE TABLE [dbo].[ASSETGROUPSETUPBONUSINUPGRADETEMP](
            [AMOUNT] [numeric](32, 6) NOT NULL,
            [ASSETGROUPID] [nvarchar](10) NOT NULL,
            [ASSETID] [nvarchar](20) NOT NULL,
            [BONUSID] [nvarchar](10) NOT NULL,
            [BOOKID] [nvarchar](10) NOT NULL,
            [DESCRIPTION] [nvarchar](60) NOT NULL,
            [PERCENTAGE] [numeric](32, 6) NOT NULL,
            [PRIORITY] [int] NOT NULL,
            [MODIFIEDDATETIME] [datetime] NOT NULL,
            [MODIFIEDBY] [nvarchar](20) NOT NULL,
            [DATAAREAID] [nvarchar](4) NOT NULL,
            [RECVERSION] [int] NOT NULL,
            [PARTITION] [bigint] NOT NULL,
            [RECID] [bigint] NOT NULL
            CONSTRAINT [ASSETGROUPSETUPBONUSINUPGRADETEMPRECID] PRIMARY KEY CLUSTERED
            ([RECID] ASC))

        CREATE UNIQUE NONCLUSTERED INDEX [ASSETGROUPSETUPBONUSINUPGRADETEMPBONUSIDX]
            ON [dbo].[ASSETGROUPSETUPBONUSINUPGRADETEMP]
            ([PARTITION] ASC,
            [DATAAREAID] ASC,
            [ASSETGROUPID] ASC,
            [BOOKID] ASC,
            [BONUSID] ASC)";

        this.executeSqlStatement(sqlStatement);

        sqlStatement =
            @"INSERT INTO [dbo].[ASSETGROUPSETUPBONUSINUPGRADETEMP]
                SELECT [AMOUNT], [ASSETGROUPID], [ASSETID], [BONUSID], [BOOKID],
                [DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
                [DATAAREAID], [RECVERSION], [PARTITION], [RECID]
                    FROM [dbo].[ASSETGROUPSETUPBONUS_IN]";

        this.executeSqlStatement(sqlStatement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncCopyAssetGroupDepBookSetupBonus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies AssetGroupDepBookSetupBonus table into a staging table in order to migrated records to <c>AssetGroupSetupBonus</c>
    /// </summary>
    [
        UpgradeScriptDescriptionAttribute("@FixedAssets:FA_UpgradeTitle_AssetGroupDepBookSetupBonusStaging"),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
        UpgradeScriptConfigKeyAttribute(configurationKeyStr(Asset)),
        UpgradeScriptTableAttribute('ASSETGROUPDEPBOOKSETUPBONUS', false, true, false, false),
        UpgradeScriptTableAttribute('ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP', true, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncCopyAssetGroupDepBookSetupBonus()
    {
        str sqlStatement;

        sqlStatement =
        @"IF OBJECT_ID ( '[dbo].[ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP]', 'U') IS NOT NULL
		DROP TABLE [dbo].[ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP]

		CREATE TABLE [dbo].[ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP](
			[AMOUNT] [numeric](32, 6) NOT NULL,
			[ASSETGROUPID] [nvarchar](10) NOT NULL,
			[BONUSID] [nvarchar](10) NOT NULL,
			[DEPRECIATIONBOOKID] [nvarchar](10) NOT NULL,
			[DESCRIPTION] [nvarchar](60) NOT NULL,
			[PERCENTAGE] [numeric](32, 6) NOT NULL,
			[PRIORITY] [int] NOT NULL,
			[MODIFIEDDATETIME] [datetime] NOT NULL,
			[MODIFIEDBY] [nvarchar](20) NOT NULL,
			[DATAAREAID] [nvarchar](4) NOT NULL,
			[RECVERSION] [int] NOT NULL,
			[PARTITION] [bigint] NOT NULL,
			[RECID] [bigint] NOT NULL,
			CONSTRAINT [ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMPRECID] PRIMARY KEY CLUSTERED
			([RECID] ASC))

		CREATE UNIQUE NONCLUSTERED INDEX [ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMPIDX]
			ON [dbo].[ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP]
		(
			[PARTITION] ASC,
			[DATAAREAID] ASC,
			[ASSETGROUPID] ASC,
			[DEPRECIATIONBOOKID] ASC,
			[BONUSID] ASC
		)";

        this.executeSqlStatement(sqlStatement);

        sqlStatement =
            @"INSERT INTO [dbo].[ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP]
				SELECT [AMOUNT], [ASSETGROUPID], [BONUSID], [DEPRECIATIONBOOKID],
				[DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
				[DATAAREAID], [RECVERSION], [PARTITION], [RECID]
					FROM [dbo].[ASSETGROUPDEPBOOKSETUPBONUS]";

        this.executeSqlStatement(sqlStatement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncInsertAssetGroupSetupBonus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserting records from staging table into <c>AssetGroupSetupBonus</c> table.
    /// The staging table will be dropped.
    /// </summary>
    [
    UpgradeScriptDescriptionAttribute("@FixedAssets:FA_UpgradeTitle_AssetGroupSetupBonusInsert"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
    UpgradeScriptConfigKeyAttribute(configurationKeyStr(Asset)),
    UpgradeScriptTableAttribute(tableStr(AssetGroupSetupBonus), true, true, false, false),
    UpgradeScriptTableAttribute('ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP', false, true, false, true),
    UpgradeScriptTableAttribute('ASSETGROUPSETUPBONUSINUPGRADETEMP', false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncInsertAssetGroupSetupBonus()
    {
        str sqlStatement;

        sqlStatement = 
		@"INSERT INTO [dbo].[ASSETGROUPSETUPBONUS]
            ([AMOUNT], [ASSETGROUPID], [BONUSID], [BOOKID],
            [DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
            [DATAAREAID], [PARTITION], [RECVERSION])
        SELECT [AMOUNT], [ASSETGROUPID], [BONUSID], [DEPRECIATIONBOOKID],
            [DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
            [DATAAREAID], [PARTITION], [RECVERSION]
        FROM [dbo].[ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP]
            WHERE NOT EXISTS (SELECT RECID FROM [dbo].[ASSETGROUPSETUPBONUS]
                WHERE ASSETGROUPSETUPBONUS.[ASSETGROUPID] = [ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP].[ASSETGROUPID]
                AND ASSETGROUPSETUPBONUS.[BONUSID] = [ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP].[BONUSID]
                AND ASSETGROUPSETUPBONUS.[BOOKID] = [ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP].[DEPRECIATIONBOOKID]
                AND ASSETGROUPSETUPBONUS.[DATAAREAID] = [ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP].[DATAAREAID]
                AND ASSETGROUPSETUPBONUS.[PARTITION] = [ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP].[PARTITION])";
        this.executeSqlStatement(sqlStatement);
		
        sqlStatement = @"IF OBJECT_ID ( '[dbo].[ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP]', 'U') IS NOT NULL
			DROP TABLE [dbo].[ASSETGROUPDEPBOOKSETUPBONUSUPGRADETEMP]";
        this.executeSqlStatement(sqlStatement);

        sqlStatement =
        @"INSERT INTO [dbo].[ASSETGROUPSETUPBONUS]
            ([AMOUNT], [ASSETGROUPID], [ASSETID], [BONUSID], [BOOKID],
            [DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
            [DATAAREAID], [PARTITION], [RECVERSION])
        SELECT [AMOUNT], [ASSETGROUPID], [ASSETID], [BONUSID], [BOOKID],
            [DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
            [DATAAREAID], [PARTITION], [RECVERSION]
        FROM [dbo].[ASSETGROUPSETUPBONUSINUPGRADETEMP]
            WHERE NOT EXISTS (SELECT RECID FROM [dbo].[ASSETGROUPSETUPBONUS]
                WHERE ASSETGROUPSETUPBONUS.[ASSETGROUPID] = [ASSETGROUPSETUPBONUSINUPGRADETEMP].[ASSETGROUPID]
                AND ASSETGROUPSETUPBONUS.[BONUSID] = [ASSETGROUPSETUPBONUSINUPGRADETEMP].[BONUSID]
                AND ASSETGROUPSETUPBONUS.[BOOKID] = [ASSETGROUPSETUPBONUSINUPGRADETEMP].[BOOKID]
                AND ASSETGROUPSETUPBONUS.[DATAAREAID] = [ASSETGROUPSETUPBONUSINUPGRADETEMP].[DATAAREAID]
                AND ASSETGROUPSETUPBONUS.[PARTITION] = [ASSETGROUPSETUPBONUSINUPGRADETEMP].[PARTITION])";
        this.executeSqlStatement(sqlStatement);

        sqlStatement = @"IF OBJECT_ID ('[dbo].[ASSETGROUPSETUPBONUSINUPGRADETEMP]', 'U') IS NOT NULL
            DROP TABLE [dbo].[ASSETGROUPSETUPBONUSINUPGRADETEMP]";
        this.executeSqlStatement(sqlStatement);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>