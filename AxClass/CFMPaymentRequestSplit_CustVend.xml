<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestSplit_CustVend</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class splits customer/vendor invoice payment request
/// </summary>
[CFMPaymentRequestSourceTypeAttribute(CFMPaymentRequestSourceType::CustInvoice)
,CFMPaymentRequestSourceTypeAttribute(CFMPaymentRequestSourceType::VendInvoice)]
public class CFMPaymentRequestSplit_CustVend extends CFMPaymentRequestSplit
{
    CustVendTrans sourceCustVendTrans;
    CustVendTransOpen sourceCustVendTransOpen;
    CustVendTransOpen splittedCustVendTransOpen;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes class instance form the payment request source.
    /// </summary>
    protected void initFromSource()
    {
        changecompany(paymentRequestTable.SourceDataAreaId)
        {
            switch (paymentRequestTable.SourceType)
            {
                case CFMPaymentRequestSourceType::CustInvoice:
                    sourceCustVendTrans = CustTrans::find(paymentRequestTable.HeaderRefRecId);
                    sourceCustVendTransOpen = CustTransOpen::find(paymentRequestTable.SourceRefRecId);
                    break;

                case CFMPaymentRequestSourceType::VendInvoice:
                    sourceCustVendTrans = VendTrans::find(paymentRequestTable.HeaderRefRecId);
                    sourceCustVendTransOpen = VendTransOpen::find(paymentRequestTable.SourceRefRecId);
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(CFMPaymentRequestTable _paymentRequestTable)
    {
        super(_paymentRequestTable);

        this.initFromSource();
    }

]]></Source>
			</Method>
			<Method>
				<Name>splitCashDiscounts</Name>
				<Source><![CDATA[
    protected void splitCashDiscounts(AmountCur _splitAmount, DueDate _splitPaymentDate)
    {
        // Not supported since cash discounts splitting does not supported by customer/vendor transaction reorganization function
    }

]]></Source>
			</Method>
			<Method>
				<Name>splitCustVendSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Splits the payment request source.
    /// </summary>
    /// <param name="_splitAmount">
    /// The amount to split.
    /// </param>
    /// <param name="_splitPaymentDate">
    /// The payment date of the splitted payment request.
    /// </param>
    protected void splitCustVendSource(AmountCur _splitAmount, DueDate _splitPaymentDate)
    {
        TmpCustVendTransReorg tmpCustVendTransReorg;
        CustVendTable custVendTable = paymentRequestTable.custVendTable();
        CustVendTransReorg custVendTransReorganizer = new CustVendTransReorg(sourceCustVendTrans,
            abs(_splitAmount),
            custVendTable.TableId,
            custVendTable.RecId,
            custVendTable.company());

        // Need to mark source open trans for settlement to split it with the CustVendTransReorg class
        SpecTransManager specTransManager = SpecTransManager::newFromSpec(custVendTable);

        specTransManager.deleteAll();
        specTransManager.insert(sourceCustVendTransOpen.DataAreaId,
        sourceCustVendTransOpen.TableId,
        sourceCustVendTransOpen.RecId,
        sourceCustVendTransOpen.AmountCur,
        sourceCustVendTrans.CurrencyCode);

        tmpCustVendTransReorg.AmountCur = _splitAmount;
        tmpCustVendTransReorg.DueDate   = _splitPaymentDate;
        tmpCustVendTransReorg.insert();

        custVendTransReorganizer.reorganize(tmpCustVendTransReorg);
        custVendTransReorganizer.end();
        specTransManager.deleteAll();
        splittedCustVendTransOpen = custVendTransReorganizer.custVendTransOpen();
        // Do not set Outdated sign on the original payment request (due to source open transaction amount decrease)
        paymentRequestTable.reread();
        paymentRequestTable.Outdated = false;
        paymentRequestTable.update();

        // updating source link of the splitted payment request
        paymentRequestTableSplitted.SourceRefRecId = splittedCustVendTransOpen.RecId;
        paymentRequestTableSplitted.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>splitPaymentRequest</Name>
				<Source><![CDATA[
    protected void splitPaymentRequest(AmountCur _splitAmount, DueDate _splitPaymentDate)
    {
        super(_splitAmount, _splitPaymentDate);

        this.splitCustVendSource(_splitAmount, _splitPaymentDate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>