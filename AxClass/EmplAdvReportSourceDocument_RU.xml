<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EmplAdvReportSourceDocument_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>SourceDocument_EmplAdvReport_RU</c> class provides the information to handle the
///    distributions and sub-ledger journal lines of a <c>EmplAdvLine_RU</c> record that is generated
///    from an employee advance report.
/// </summary>
[SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_EmplAdvReport_RU), SourceDocument_EmplAdvReport_RU::EmplAdvReport, tableStr(EmplAdvLine_RU))]
public class EmplAdvReportSourceDocument_RU extends SourceDocument
    implements SourceDocumentIAccountingRule,
               SourceDocumentIDataProvider,
               SourceDocumentIEmpl_RU
{
    EmplAdvLine_RU  advLine;
    EmplAdvTable_RU advTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>documentsBusinessEvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns Business event of advance report
    /// </summary>
    /// <returns>
    ///   <c>BusinessEvent</c>
    /// </returns>
    public BusinessEvent documentsBusinessEvent()
    {
        BusinessEvent       businessEvent;

        businessEvent = new BusinessEvent(enumNum(BusinessEvent_EmplAdvReport_RU), BusinessEvent_EmplAdvReport_RU::RegistrationOfAdvanceReport);

        return businessEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeImplementation</Name>
				<Source><![CDATA[
    protected void initializeImplementation(SourceDocumentHeaderImplementation _sourceDocumentImplementation)
    {
        advLine = _sourceDocumentImplementation;
        advTable = advLine.advTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDate</Name>
				<Source><![CDATA[
    public AccountingDate parmAccountingDate()
    {
        return advTable.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBusinessEventDate</Name>
				<Source><![CDATA[
    public DocumentDate parmBusinessEventDate()
    {
        DocumentDate ret;

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrentVoucher</Name>
				<Source><![CDATA[
    public Voucher parmCurrentVoucher(DataAreaId _dataAreaId)
    {
        if (advLine.advTable().Status == EmplAdvStatus_RU::Posted)
            return (select Voucher from emplTrans_RU
                        where emplTrans_RU.RefTableId == tableNum(EmplTrans_RU) &&
                              emplTrans_RU.RefRecId   == advLine.emplTrans().RecId).Voucher;
        return advLine.emplTrans().Voucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension()
    {
        return advTable.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDistributionTemplateRecId</Name>
				<Source><![CDATA[
    public AccountingDistributionTemplateRecId parmDistributionTemplateRecId()
    {
        return advLine.DistributionTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentNumber</Name>
				<Source><![CDATA[
    public DocumentNum parmDocumentNumber()
    {
        return advTable.AdvanceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmplId</Name>
				<Source><![CDATA[
    public EmployeeId_RU parmEmplId()
    {
        return advTable.EmplAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmplPostingProfile</Name>
				<Source><![CDATA[
    public EmplPostingProfile_RU parmEmplPostingProfile()
    {
        return this.parmPostingProfile();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsStornoForReversal_RU</Name>
				<Source><![CDATA[
    public boolean parmIsStornoForReversal_RU()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile</Name>
				<Source><![CDATA[
    public PostingProfile parmPostingProfile()
    {
        return advTable.PostingProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionText</Name>
				<Source><![CDATA[
    public str parmTransactionText()
    {
        TransactionTxt transactionTxt = TransactionTxt::construct();
        transactionTxt.setType(LedgerTransTxt::EmplAdvanceLedger_RU);
        transactionTxt.setDate(this.parmAccountingDate());
        transactionTxt.setVoucher(advLine.emplTrans().Voucher);

        str ret = transactionTxt.txt();

        if (!ret)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>