<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RcSalesListMark_UK</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RcSalesListMark_UK extends RunBase
{
    QueryRun        qrcSalesList;
    RCSalesList_UK  rcSalesList;
    ListStatus      listStatus;

    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        listStatus
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog box can be either built by using the <c>Dialog</c> class or by using a class that is
    /// created in the Application Object Tree (AOT).
    /// </remarks>
    Object dialog()
    {
        FormRun         formRun = classfactory.createQueryForm(this);

        formRun.init();
        return formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public boolean init()
    {
        str             statusValue;
        QueryBuildRange queryBuildRange;
        boolean         ret = super();

        switch (listStatus)
        {
            case ListStatus::Include    : statusValue = queryRange(ListStatus::Reported, ListStatus::Closed);
                                          break;
            case ListStatus::Reported   : statusValue = queryValue(ListStatus::Include);
                                          break;
            case ListStatus::Closed     : statusValue = queryValue(ListStatus::Reported);
                                          break;
        }

        queryBuildRange = SysQuery::findOrCreateRange(qrcSalesList.query().dataSourceTable(tablenum(RCSalesList_UK)), fieldnum(RCSalesList_UK, Status));
        queryBuildRange.value(statusValue);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    identifierName lastValueDesignName()
    {
        return new SysDictEnum(enumnum(ListStatus)).value2Symbol(listStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        super();

        qrcSalesList   = new QueryRun(querystr(RCsalesList_UK));

        qrcSalesList.query().dataSourceTable(tablenum(RCSalesList_UK)).addRange(fieldnum(RCSalesList_UK, TransDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList,qrcSalesList.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmListStatus</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    ListStatus parmListStatus(ListStatus _listStatus = listStatus)
    {
        listStatus = _listStatus;

        return listStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>QueryRun</c> object, which is used by the <c>QueryPrompt</c> object.
    /// </summary>
    /// <returns>
    /// The <c>QueryRun</c> object.
    /// </returns>
    /// <remarks>
    /// This method is used if a query prompt is the dialog, and if a Select menu item is added to a dialog
    /// box. Do not instantiate the <c>queryRun</c> object whenever the method is called. This should be
    /// done in the <c>unpack</c> method and the <c>initParmDefault</c> method; otherwise, it should be
    /// used in the <c>init</c> method (if this is used) or in the method only when it is not instantiated.
    /// </remarks>
    QueryRun queryRun()
    {
        return  qrcSalesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that performs the actual job of the class.
    /// </summary>
    void run()
    {
        ttsbegin;

        while (qrcSalesList.next())
        {
            rcSalesList = qrcSalesList.get(tablenum(RCSalesList_UK));

            switch (listStatus)
            {
                case ListStatus::Include    : rcSalesList.Status = ListStatus::Include;
                                              break;
                case ListStatus::Reported   : rcSalesList.Status = ListStatus::Reported;
                                              break;
                case ListStatus::Closed     : rcSalesList.Status = ListStatus::Closed;
                                              break;
            }

            rcSalesList.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    boolean unpack(container packedClass)
    {
        Integer          version         = conpeek(packedClass,1);
        container       packedQuery;

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList,packedQuery]      = packedClass;
                if (packedQuery)
                {
                    qrcSalesList   = new QueryRun(packedQuery);
                }
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        RCSalesListMark_UK  listMark;
        FormDataSource      rcSalesList_ds;

        rcSalesList_ds   = FormDataUtil::getFormDataSource(args.record());
        listMark         = new RCSalesListMark_UK();
        listMark.parmListStatus(args.parmEnum());
        listMark.init();

        if (listMark.prompt())
        {
            listMark.runOperation();
        }
        rcSalesList_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>