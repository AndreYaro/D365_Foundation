<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTurnoverAndBalanceContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    Data Contract class for the <c>CustVendTurnoverAndBalance</c> SSRS report.
/// </summary>
[DataContractAttribute]
public class CustVendTurnoverAndBalanceContract implements SysOperationValidatable
{
    TransDate fromDate;
    TransDate toDate;
    boolean doSumPerAccount;

    // The following parameters are not shown to the user. They are set to a specific value in the Controller class.
    str sysVersion;
    DirPartyName userName;
    ModuleCustVend moduleCustVend;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDoSumPerAccount</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('DoSumPerAccount'),
        SysOperationLabelAttribute(literalstr("@GLS110898")),
        SysOperationHelpTextAttribute(literalstr("@GLS220576")),
        SysOperationDisplayOrderAttribute('03')
    ]
    public boolean parmDoSumPerAccount(boolean _doSumPerAccount = doSumPerAccount)
    {
        doSumPerAccount = _doSumPerAccount;
        return doSumPerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[

    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS5209")),
        SysOperationHelpTextAttribute(literalstr("@GLS220907")),
        SysOperationDisplayOrderAttribute('01')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModuleCustVend</Name>
				<Source><![CDATA[

    [
        DataMemberAttribute('ModuleCustVend')
    ]
    public ModuleCustVend parmModuleCustVend(ModuleCustVend _moduleCustVend = moduleCustVend)
    {
        moduleCustVend = _moduleCustVend;
        return moduleCustVend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSysVersion</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the <c>ParmSysVersion</c> parameter.
    /// </summary>
    /// <param name="_sysVersion">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>ParmSysVersion</c> parameter.
    /// </returns>
    [
        DataMemberAttribute('SysVersion')
    ]
    public Description255 parmSysVersion(str _sysVersion = sysVersion)
    {
        sysVersion = _sysVersion;
        return sysVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[

    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS14656")),
        SysOperationHelpTextAttribute(literalstr("@GLS220906")),
        SysOperationDisplayOrderAttribute('02')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserName</Name>
				<Source><![CDATA[

    [
        DataMemberAttribute('UserName')
    ]
    public DirPartyName parmUserName(DirPartyName _userName = userName)
    {
        userName = _userName;
        return userName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Validates the SSRS report parameters.
    /// </summary>
    /// <returns>
    /// true if all report parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (fromDate && toDate)
        {
            if (fromDate > toDate)
            {
                isValid = checkFailed(strfmt("@SYS55013", date2StrUsr(fromDate, DateFlags::FormatAll), date2StrUsr(toDate, DateFlags::FormatAll)));
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>