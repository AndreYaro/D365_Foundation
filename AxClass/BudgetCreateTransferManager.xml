<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetCreateTransferManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetCreateTransferManager</c> class contains helper methods that are used in the create
///    transfer process.
/// </summary>
final class BudgetCreateTransferManager extends BudgetTransactionManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an instance of the <c>BudgetCreateTransferManager</c> class.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>BudgetCreateTransferManager</c> class.
    /// </returns>
    public static BudgetCreateTransferManager construct()
    {
        // Create a new instance and return.
        return new BudgetCreateTransferManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>launchCreateTransferForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the form for creating a budget transfer.
    /// </summary>
    /// <param name="_budgetCreateTransfer">
    ///    An instance of the <c>BudgetCreateTransfer</c> class that contains the values that describe the
    ///    budget transfer to create.
    /// </param>
    public static void launchCreateTransferForm(BudgetCreateTransfer _budgetCreateTransfer)
    {
        Args    args = new Args();
        FormRun createTransferForm;

        args.parmObject(_budgetCreateTransfer);

        // Invoke the display menu item and pass the BudgetCreateTransfer instance.
        createTransferForm = new MenuFunction(menuitemdisplaystr(BudgetCreateTransfer), MenuItemType::Display).create(args);

        if (createTransferForm)
        {
            createTransferForm.run();
            createTransferForm.wait();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBudgetTransactionCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs the lookup for the <c>BudgetTransactionCode</c> records.
    /// </summary>
    /// <param name="_ctrl">
    ///    The form control for which to perform the lookup.
    /// </param>
    public static void lookupBudgetTransactionCode(FormStringControl _ctrl)
    {
        SysTableLookup budgetTransactionCodeLookup;

        budgetTransactionCodeLookup = SysTableLookup::newParameters(tablenum(BudgetTransactionCode), _ctrl, true);

        // Add the fields to be shown in the lookup form
        budgetTransactionCodeLookup.addLookupfield(fieldnum(BudgetTransactionCode, Name));
        budgetTransactionCodeLookup.addLookupfield(fieldnum(BudgetTransactionCode, Description));
        budgetTransactionCodeLookup.addLookupfield(fieldnum(BudgetTransactionCode, BudgetTransactionType));

        // Add the query to the lookup form
        budgetTransactionCodeLookup.parmQuery(BudgetTransactionManager::getBudgetTransactionCodeQuery(true, BudgetTransactionType::Transfer));

        // Perform lookup
        budgetTransactionCodeLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBudgetTransactionCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Specifies whether the budget transaction code is valid.
    /// </summary>
    /// <param name="_budgetTransactionCode">
    ///    The budget transaction code to check.
    /// </param>
    /// <returns>
    ///    true if the budget transaction code is valid; otherwise, false.
    /// </returns>
    public static boolean validateBudgetTransactionCode(BudgetCode _budgetTransactionCode)
    {
        boolean isValid = true;
        BudgetTransactionCode budgetTransactionCode;

        budgetTransactionCode = BudgetTransactionCode::findByBudgetTransactionCode(_budgetTransactionCode);

        if (budgetTransactionCode.RecId == 0)
        {
            isValid = checkFailed(strfmt("@SYS127919", _budgetTransactionCode));
        }

        if (isValid && budgetTransactionCode.BudgetTransactionType != BudgetTransactionType::Transfer)
        {
            isValid = checkFailed(strfmt("@SYS128688", budgetTransactionCode.Name));
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>