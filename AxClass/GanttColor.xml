<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttColor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>GanttColor</c> class sets up colors for the Gantt.
/// </summary>
/// <remarks>
///    The base class can set up colors for timescale, table, grid and histogram areas. For more specific
///    colors, an inheritance is needed.This class is instantiated by the <see
///    cref="M:GanttClient.initGanttColor" /> method.For a code example, see one of the child classes.
/// </remarks>
abstract class GanttColor extends RunBase
{
    GanttClient ganttClient;

    OLE_Color   defaultNodeColor;

    Counter     progressCounter;

    // These values are hardcoded here since it is not possible to access the stylesheet on the server
    #define.defaultThemeAccent1(43, 136, 216)
    #define.defaultThemeAccent2(113, 175, 229)
    #define.defaultThemeSecondaryColor1(16, 127, 6)
    #define.defaultThemeAccentComplementaryColor(222, 129, 59)

    #define.NoOfBars(2)

#if.never
    #define.CurrentVersion(1)
    #localmacro.CurrentList
    #endmacro
#endif

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyChangedValues</Name>
				<Source><![CDATA[
    protected boolean applyChangedValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyChanges</Name>
				<Source><![CDATA[
    public boolean applyChanges()
    {
        if (!this.validateChanges())
        {
            return checkFailed("@SYS108453");
        }

        this.applyChangedValues();

        this.save();

        this.resetChangedValues();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultNodeColor</Name>
				<Source><![CDATA[
    public int defaultNodeColor()
    {
        return this.rgb2int(#defaultThemeAccent2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNodeColor</Name>
				<Source><![CDATA[
    // Must be overridden
    // Returns a color for the current node based on the color setup
    public OLE_Color getNodeColor(TableName _tableName,
                                  RecId     _recId,
                                  Common    _record = null)
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    // If you need to do any feature related changes to this method,
    // then copy/paste it to the derived class without calling super()
    public boolean init()
    {
        if (!super() || !this.validate())
        {
            throw Exception::Error;
        }

        this.getLast();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the internal variables.
    /// </summary>
    /// <remarks>
    ///    This method is called when no <c>SysLastValue</c> record can be found when calling the
    ///    <c>SysLastValue.GetLast</c> method. Remember to call the <c>super</c> method.
    /// </remarks>
    public void initParmDefault()
    {
        this.setDefaultColors();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();

        defaultNodeColor = this.defaultNodeColor();

        this.resetChangedValues();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGanttClient</Name>
				<Source><![CDATA[
    public GanttClient parmGanttClient(GanttClient _ganttClient = ganttClient)
    {
        ganttClient = _ganttClient;
        return ganttClient;
    }

]]></Source>
			</Method>
			<Method>
				<Name>progressFinish</Name>
				<Source><![CDATA[
    public void progressFinish()
    {
        if (progress)
        {
            this.progressKill();

            progress        = null;
            progressCounter = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>progressInit</Name>
				<Source><![CDATA[
    public void progressInit(str        _caption    = "@SYS20037",
                             int64      _total      = 1,
                             Filename   _animation  = #AviUpdate,
                             int        _numOfBars  = #NoOfBars,
                             FormBuildControl _embedded = null)
    {
        progressCounter = 0;

        super(_caption, _total, _animation, _numOfBars);
    }

]]></Source>
			</Method>
			<Method>
				<Name>progressUpdate</Name>
				<Source><![CDATA[
    public void progressUpdate(str  _text       = '',
                               int  _increment  = 1)
    {
        if (progress)
        {
            if (_increment)
            {
                progressCounter = progressCounter + _increment;
                progress.setCount(progressCounter);
            }

            if (!prmisdefault(_text))
            {
                progress.setText(_text);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetChangedValues</Name>
				<Source><![CDATA[
    protected void resetChangedValues()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>rgb2int</Name>
				<Source><![CDATA[
    public int rgb2int(int _r,
                       int _g,
                       int _b)
    {
        return WinAPI::RGBCon2int([_r, _g, _b]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        if (!this.applyChanges())
        {
            throw Exception::Error;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    // If you need to do any feature related changes to this method,
    // then copy/paste it to the derived class without calling super()
    public boolean save(boolean _validateChanges = true)
    {
        if (_validateChanges && !this.validateChanges())
        {
            return false;
        }

        this.saveLast();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultColors</Name>
				<Source><![CDATA[
    public void setDefaultColors()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null)
    {
        if (!this.parmGanttClient())
        {
            return checkFailed(strfmt("@SYS27147", classId2Name(classidget(this))));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateChanges</Name>
				<Source><![CDATA[
    public boolean validateChanges()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>