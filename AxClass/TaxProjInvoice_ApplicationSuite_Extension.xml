<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxProjInvoice_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(TaxProjInvoice))]
public final class TaxProjInvoice_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>intentLetterId_tpi_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the intent letter ID from various scenarios.
    /// </summary>
    /// <param name = "_sourceTableId">The table ID.</param>
    /// <param name = "_sourceRecId">The record ID.</param>
    /// <returns>The found intent letter ID.</returns>
    protected IntentLetterId_IT intentLetterId_tpi_IT(TableId _sourceTableId, RecId _sourceRecId)
    {
        ProjInvoiceJour projInvoiceJour;
        IntentLetterId_IT intentLetterId;

        switch (_sourceTableId)
        {
            case tableNum(ProjInvoiceEmpl):
                ProjInvoiceEmpl projInvoiceEmpl;
                select firstonly IntentLetterInternalId_IT from projInvoiceJour
                    exists join projInvoiceEmpl
                        where projInvoiceEmpl.InvoiceDate == projInvoiceJour.InvoiceDate
                            && projInvoiceEmpl.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                            && projInvoiceEmpl.RecId == _sourceRecId;

                intentLetterId = projInvoiceJour.IntentLetterInternalId_IT;
                break;

            case tableNum(ProjInvoiceItem):
                ProjInvoiceItem projInvoiceItem;
                select firstonly IntentLetterInternalId_IT from projInvoiceJour
                    exists join projInvoiceItem
                        where projInvoiceItem.InvoiceDate == projInvoiceJour.InvoiceDate
                            && projInvoiceItem.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                            && projInvoiceItem.RecId == _sourceRecId;

                intentLetterId = projInvoiceJour.IntentLetterInternalId_IT;
                break;
            case tableNum(ProjInvoiceOnAcc):
                ProjInvoiceOnAcc projInvoiceOnAcc;
                select firstonly IntentLetterInternalId_IT from projInvoiceJour
                exists join projInvoiceOnAcc
                    where projInvoiceOnAcc.InvoiceDate == projInvoiceJour.InvoiceDate
                        && projInvoiceOnAcc.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                        && projInvoiceOnAcc.RecId == _sourceRecId;
                intentLetterId = projInvoiceJour.IntentLetterInternalId_IT;
                break;
            case tableNum(ProjInvoiceRevenue):
                ProjInvoiceRevenue projInvoiceRevenue;
                select firstonly IntentLetterInternalId_IT from projInvoiceJour
                    exists join projInvoiceRevenue
                        where projInvoiceRevenue.InvoiceDate == projInvoiceJour.InvoiceDate
                            && projInvoiceRevenue.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                            && projInvoiceRevenue.RecId == _sourceRecId;
                intentLetterId = projInvoiceJour.IntentLetterInternalId_IT;
                break;
            case tableNum(ProjInvoiceCost):
                ProjInvoiceCost projInvoiceCost;
                select firstonly IntentLetterInternalId_IT from projInvoiceJour
                    exists join projInvoiceCost
                        where projInvoiceCost.InvoiceDate == projInvoiceJour.InvoiceDate
                            && projInvoiceCost.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                            && projInvoiceCost.RecId == _sourceRecId;
                intentLetterId = projInvoiceJour.IntentLetterInternalId_IT;
                break;

            default:
                break;
        }
    
        return intentLetterId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>