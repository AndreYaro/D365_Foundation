<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IdentityCodeImport_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///   Imports identity documents
/// </summary>
class IdentityCodeImport_RU extends ODBCImport_RU implements BatchRetryable
{
    /// <summary>
    ///  Imports file
    /// </summary>
    #IdentityCardValue_RU
    #define.cardCode(1)
    #define.fullName(2)
    #define.middleName(3)
    #define.shortName(4)
    #define.pattern(5)
    #define.selectStatement("SELECT D_CODE,D_FULL,D_MIDDLE,D_SHORT,D_SUBLON FROM KLDOK")
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>importFile</Name>
				<Source><![CDATA[
    public void importFile()
    {
        IdentityCardTable_RU identityCardTable;
        str                  identityCardPattern;
        int                  numberPos;

        try
        {
            setPrefix("@SYS28609");

            ttsbegin;

            delete_from identityCardTable;

            resultSet  = statement.executeQuery(#selectStatement);

            while (resultSet.next())
            {
                identityCardTable.clear();
                identityCardTable.IdentityCardCode       = resultSet.getString(#cardCode);
                identityCardTable.IdentityCardNameFull   = resultSet.getString(#fullName);
                identityCardTable.IdentityCardNamemiddle = resultSet.getString(#middleName);
                identityCardTable.IdentityCardNameShort  = resultSet.getString(#shortName);
                identityCardPattern          = resultSet.getString(#pattern);
                numberPos = strScan(identityCardPattern,
                            "@GLS102907",
                            strLen(identityCardPattern),
                            - strLen(identityCardPattern));

                if (numberPos)
                {
                    identityCardTable.IdentityCardPatternSeries = subStr(identityCardPattern, 1, numberPos - 1);
                    identityCardTable.IdentityCardPatternNumber = subStr(identityCardPattern, numberPos + 1, strLen(identityCardPattern) - numberPos);
                }
                else
                {
                    identityCardTable.IdentityCardPatternSeries = subStr(identityCardPattern, 1, strLen(identityCardPattern) - strLen(#IdentityNumberPattern) - 1);
                    identityCardTable.IdentityCardPatternNumber = #IdentityNumberPattern;
                }

                identityCardTable.insert();
            }
            info("@GLS105894");

            ttscommit;
        }
        catch (Exception::Error)
        {
            ttsabort;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        this.importFile();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static IdentityCodeImport_RU construct()
    {
        return new IdentityCodeImport_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static Name description()
    {
        return "@GLS106945";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        IdentityCodeImport_RU import = IdentityCodeImport_RU::construct();

        if (import.prompt())
        {
            import.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>