<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInvReserveAndDeltaQueryEnumerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInvReserveAndDeltaQueryEnumerator</c> class is used to iterate the <c>WHSInvReserveAndDeltaQueryCollection</c> class.
/// </summary>
class WHSInvReserveAndDeltaQueryEnumerator extends WHSInventOnHandCollectionEnumerator
{
    Query                   queryInventReserve;
    Query                   queryInventReserveDelta;
    QueryRun                queryRunInventReserve;
    QueryRun                queryRunInventReserveDelta;
    QueryRun                queryRunActive;
    WHSInventOnHandData     whsInventOnHandData;
    boolean                 atBeginningInventReserve;
    boolean                 atBeginningInventReserveDelta;
    boolean                 atTheEndInventReserve;
    boolean                 atTheEndInventReserveDelta;
    TableId                 sumTableIdInventReserve;
    TableId                 sumTableIdInventReserveDelta;
    TableId                 sumTableIdActive;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createQueryRunInventReserveFromQuery</Name>
				<Source><![CDATA[
    private void createQueryRunInventReserveFromQuery(Query _query)
    {
        queryRunInventReserve = new QueryRun(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createQueryRunInvReserveDeltaFromQuery</Name>
				<Source><![CDATA[
    private void createQueryRunInvReserveDeltaFromQuery(Query _query)
    {
        queryRunInventReserveDelta = new QueryRun(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the current element in the collection.
    /// </summary>
    /// <returns>
    /// The current element in the collection.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// The enumerator does not point to any element in the collection.
    /// </exception>
    public anyType current()
    {
        if ((atBeginningInventReserve        || atTheEndInventReserve)
        &&  (atBeginningInventReserveDelta   || atTheEndInventReserveDelta)
        ||   queryRunActive == null)
        {
            throw error("@SYS125456");
        }

        whsInventOnHandData = WHSInventOnHandData::newFromCommon(queryRunActive.get(sumTableIdActive),queryRunActive.get(tableNum(inventDim)));

        return whsInventOnHandData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>definitionString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the description for the <c>WHSInvReserveAndDeltaQueryEnumerator</c> class.
    /// </summary>
    /// <returns>
    /// The description for the <c>WHSInvReserveAndDeltaQueryEnumerator</c> class.
    /// </returns>
    public str definitionString()
    {
        return classStr(WHSInvReserveAndDeltaQueryEnumerator);
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Advances the enumerator to the next element of the collection.
    /// </summary>
    /// <returns>
    /// true if the enumerator was advanced; otherwise, false.
    /// </returns>
    public boolean moveNext()
    {
        whsInventOnHandData = null;
        queryRunActive      = null;

        if (!queryRunInventReserve.next())
        {
            atTheEndInventReserve = true;
        }
        else
        {
            queryRunActive = queryRunInventReserve;
            sumTableIdActive = sumTableIdInventReserve;
        }
        atBeginningInventReserve = false;

        //switch to the delta query if there are no more records in the queryRunInventReserve
        if (!queryRunActive)
        {
            if (!queryRunInventReserveDelta.next())
            {
                atTheEndInventReserveDelta = true;
            }
            else
            {
                queryRunActive = queryRunInventReserveDelta;
                sumTableIdActive = sumTableIdInventReserveDelta;
            }

            atBeginningInventReserveDelta = false;
        }

        return !(atTheEndInventReserve && atTheEndInventReserveDelta);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
        atBeginningInventReserve = true;
        atBeginningInventReserveDelta = true;

        atTheEndInventReserve = false;
        atTheEndInventReserveDelta = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQueryRunInventReserve</Name>
				<Source><![CDATA[
    public queryRun parmQueryRunInventReserve(queryRun _queryRunInventReserve = queryRunInventReserve)
    {
        queryRunInventReserve = _queryRunInventReserve;

        return queryRunInventReserve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSumTableIdInventReserve</Name>
				<Source><![CDATA[
    public tableId parmSumTableIdInventReserve(tableId _sumTableIdInventReserve = sumTableIdInventReserve)
    {
        sumTableIdInventReserve = _sumTableIdInventReserve;

        return sumTableIdInventReserve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSumTableIdInventReserveDelta</Name>
				<Source><![CDATA[
    public tableId parmSumTableIdInventReserveDelta(tableId _sumTableIdInventReserveDelta = sumTableIdInventReserveDelta)
    {
        sumTableIdInventReserveDelta = _sumTableIdInventReserveDelta;

        return sumTableIdInventReserveDelta;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the enumerator to its initial position, which is before the first element in the collection.
    /// </summary>
    public void reset()
    {
        queryRunInventReserve.reset();
        queryRunInventReserveDelta.reset();

        atBeginningInventReserve = true;
        atBeginningInventReserveDelta = true;

        atTheEndInventReserve = false;
        atTheEndInventReserveDelta = false;

        whsInventOnHandData = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQueryInventReserve</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the query that selects from the <c>WHSInventReserve</c> table that will be used to enumerate the reservation information .
    /// </summary>
    /// <param name="_queryInventReserve">
    /// The query the query that selects from the <c>WHSInventReserve</c> table.
    /// </param>
    public void setQueryInventReserve(Query _queryInventReserve)
    {
        queryInventReserve = _queryInventReserve;

        this.createQueryRunInventReserveFromQuery(queryInventReserve);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQueryInventReserveDelta</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the query that selects from the <c>WHSInventReserveDelta</c> table that will be used to enumerate the reservation information .
    /// </summary>
    /// <param name="_queryInventReserveDelta">
    /// The query the query that selects from the <c>WHSInventReserveDelta</c> table.
    /// </param>
    public void setQueryInventReserveDelta(Query _queryInventReserveDelta)
    {
        queryInventReserveDelta = _queryInventReserveDelta;

        this.createQueryRunInvReserveDeltaFromQuery(queryInventReserveDelta);
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the string representation of the collection element that enumerator points to.
    /// </summary>
    /// <returns>
    /// The string representation of the collection element that enumerator points to.
    /// </returns>
    public str toString()
    {
        str toString;

        if (whsInventOnHandData)
        {
            toString = whsInventOnHandData.toString();
        }
        else
        {
            toString = "@SYS344541";
        }

        return toString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSInvReserveAndDeltaQueryEnumerator construct()
    {
        return new WHSInvReserveAndDeltaQueryEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromQueryCollection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new instance of this class based on the parameter.
    /// </summary>
    /// <param name="_whsInvReserveAndDeltaQueryCollection">
    /// The collection that should be enumerated.
    /// </param>
    /// <returns>
    /// A new instance of this class
    /// </returns>
    public static WHSInvReserveAndDeltaQueryEnumerator newFromQueryCollection(
        WHSInvReserveAndDeltaQueryCollection _whsInvReserveAndDeltaQueryCollection)
    {
        WHSInvReserveAndDeltaQueryEnumerator whsInvReserveAndDeltaQueryEnumerator = WHSInvReserveAndDeltaQueryEnumerator::construct();
        whsInvReserveAndDeltaQueryEnumerator.setQueriesAndTableIds(_whsInvReserveAndDeltaQueryCollection);

        return whsInvReserveAndDeltaQueryEnumerator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQueriesAndTableIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the queries on this instance.
    /// </summary>
    /// <param name="_whsInvReserveAndDeltaQueryCollection">
    /// The collection that should be enumerated.
    /// </param>
    protected void setQueriesAndTableIds(
        WHSInvReserveAndDeltaQueryCollection _whsInvReserveAndDeltaQueryCollection)
    {
        //set query for inventreserve
        this.setQueryInventReserve(_whsInvReserveAndDeltaQueryCollection.parmQueryInventReserve());
        this.parmSumTableIdInventReserve(_whsInvReserveAndDeltaQueryCollection.parmSumTableIdInventReserve());

        //set query for inventreservedelta
        this.setQueryInventReserveDelta(_whsInvReserveAndDeltaQueryCollection.parmQueryInventReserveDelta());
        this.parmSumTableIdInventReserveDelta(_whsInvReserveAndDeltaQueryCollection.parmSumTableIdInventReserveDelta());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
