<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqCreatePlannedOrderFormDialogController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqCreatePlannedOrderFormDialogController</c> class is a controller class for <c>reqTransPoCreate</c> dialog.
/// </summary>
internal class ReqCreatePlannedOrderFormDialogController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new planned order dialog.
    /// </summary>
    /// <param name = "_formRun">A form run object of the parent form.</param>
    /// <param name = "_planId">A plan id for which to create a new planned order.</param>
    /// <param name = "_reqRefType">A new planned order reference type; optional.</param>
    /// <returns>A buffer of <c>ReqPo</c> table if new planned order created, otherwise null.</returns>
    internal static ReqPO createDialog(
        FormRun _formRun, 
        ReqPlanId _planId, 
        ReqRefType _reqRefType = ReqRefType::None)
    {
        ReqPO newReqPo;

        newReqPo.PlanVersion = ReqPlan::findReqPlanId(_planId).findActiveVersion().RecId;;
        newReqPo.RefType = _reqRefType;

        var args = new Args();
        args.name(formStr(reqTransPoCreate));
        args.caller(_formRun);
        args.record(newReqPo);
        args.parm(_planId);

        var formCreate = classfactory.formRunClass(args);
        formCreate.init();
        formCreate.run();

        formCreate.wait();

        if (newReqPo.RecId && formCreate.closedOk())
        {
            return newReqPo;
        }

        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>