<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailReceiptProfileCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>RetailReceiptProfileCopy</c> is a dialog class used to copy the receipt profile.
/// </summary>
public class RetailReceiptProfileCopy
{
    RetailReceiptProfileId      retailReceiptProfileId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmRetailReceiptProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the receipt profile ID.
    /// </summary>
    /// <param name="_retailReceiptProfileId">
    /// The record identifier of the retail receipt profile.
    /// </param>
    /// <returns>
    /// The record identifier of the receipt profile.
    /// </returns>
    public RetailReceiptProfileId parmRetailReceiptProfileId(RetailReceiptProfileId _retailReceiptProfileId = retailReceiptProfileId)
    {
        retailReceiptProfileId = _retailReceiptProfileId;
        return retailReceiptProfileId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyReceiptProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a copy of existing receipt profile.
    /// </summary>
    public void copyReceiptProfile()
    {
        RetailReceiptProfileId      newProfileId;
        Dialog                      dialog;
        DialogField                 dialogFieldProfileId;
  
        // Prompt for a new receipt id
        dialog = new Dialog();
        dialogFieldProfileId = dialog.addField('RetailReceiptProfileId', "@Retail:NewReceiptProfileID");
        if (dialog.run())
        {
            newProfileId = strLRTrim(dialogFieldProfileId.value());

            if (newProfileId == '')
            {
                throw error("@Retail:LabelForEmptyReceiptProfileID");
            }
        }
        else
        {
            // Dialog cancelled, exit.
            return;
        }

        // Create new receipt profile.
        this.copyReceiptProfileData(retailReceiptProfileId, newProfileId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyReceiptProfileData</Name>
				<Source><![CDATA[
    /// <summary>
    /// creating the new receipt profile.
    /// </summary>
    /// <param name="_retailReceiptProfileId">
    /// The record identifier of the original retail receipt profile.
    /// </param>
    /// <param name="_newProfileId">
    /// The record identifier of the new retail receipt profile.
    /// </param>
    public void copyReceiptProfileData(RetailReceiptProfileId _retailReceiptProfileId, RetailReceiptProfileId _newProfileId)
    {
        RetailReceiptProfile        originalReceiptProfile, newReceiptProfile;

        originalReceiptProfile = RetailReceiptProfile::find(_retailReceiptProfileId);

        ttsbegin;
        newReceiptProfile.data(originalReceiptProfile);
        originalReceiptProfile.ProfileID = _newProfileId;
        originalReceiptProfile.insert();
        
        // Duplicate all the associated line
        RetailReceiptProfileLine newReceiptProfileLine, originalReceiptProfileLine;

        while select originalReceiptProfileLine
                where originalReceiptProfileLine.ProfileId == newReceiptProfile.ProfileId
        {
            newReceiptProfileLine.data(originalReceiptProfileLine);
            newReceiptProfileLine.ProfileId = originalReceiptProfile.ProfileId;
            newReceiptProfileLine.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a copy of the receipt profile. 
    /// </summary>
    /// <param name="_args">
    /// An instance of <c>Args</c> class.
    /// </param>
    public static void main(Args _args)
    {
        RetailReceiptProfileCopy retailReceiptProfileCopy = new RetailReceiptProfileCopy();
        RetailReceiptProfile retailReceiptProfile;
            
        retailReceiptProfile = _args.record();
        retailReceiptProfileCopy.parmRetailReceiptProfileId(retailReceiptProfile.ProfileId);
        
        retailReceiptProfileCopy.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// If copy menu is clicked this method will triggered to create a coppy of existing receipt profile.
    /// </summary>
    public void run()
    {
        this.copyReceiptProfile();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>