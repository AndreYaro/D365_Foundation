<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineSalesHelper_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The helper class to support the implementation of document line domain object supporting Sales Tax.
/// </summary>
public class TaxModelDocLineSalesHelper_IN extends TaxModelDocLineHelper_IN
{
    TaxModelSalesTaxable_IN taxModelSalesTaxable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSalesReferenceTaxModelDocLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sales reference tax model document line.
    /// </summary>
    /// <returns>
    /// The instance of the <c>TaxModelSalesTaxable_IN</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected TaxModelSalesTaxable_IN getSalesReferenceTaxModelDocLine()
    {
        return taxModelTaxable.getReferenceTaxModelDocLine() as TaxModelSalesTaxable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTaxAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax account type based on the given <c>TaxOnItem</c>
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// The tax account type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxAccountType_IN getSalesTaxAccountType(TaxOnItem _taxOnItem)
    {
        TaxAccountType_IN ret;

        switch (taxModelTaxable.getTaxDirection())
        {
            case TaxDirection::IncomingTax :
                ret = TaxAccountType_IN::SalesTaxExpenseAccount;
                break;
            case TaxDirection::OutgoingTax :
                ret = TaxAccountType_IN::SalesTaxPayableAccount;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTaxFormTypesRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RecId</c> of <c>SalesTaxFormTypes_IN</c> related to this document line.
    /// </summary>
    /// <returns>
    /// The <c>RecId</c> of <c>SalesTaxFormTypes_IN</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public SalesTaxFormTypesRecId_IN getSalesTaxFormTypesRecId()
    {
        if (taxModelTaxable.isBasedOnReferenceTaxModelDocLine())
        {
            return this.getSalesReferenceTaxModelDocLine().getSalesTaxFormTypesRecId();
        }
        else
        {
            return transTaxInformation.SalesTaxFormTypes;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTaxFormTypeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>SalesTaxFormTypes_IN</c> related to this document line.
    /// </summary>
    /// <returns>
    /// The <c>SalesTaxFormTypes_IN</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public SalesTaxFormTypes_IN getSalesTaxFormTypeTable()
    {
        return SalesTaxFormTypes_IN::find(taxModelSalesTaxable.getSalesTaxFormTypesRecId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTaxOffsetAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax offset account type based on the given <c>TaxOnItem</c>
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// The tax account type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxAccountType_IN getSalesTaxOffsetAccountType(TaxOnItem _taxOnItem)
    {
        return TaxAccountType_IN::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTaxRegistrationNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Sales Tax Registration Number
    /// </summary>
    /// <returns>
    /// The <c>TaxRegistrationNumber_IN</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxRegistrationNumber_IN getSalesTaxRegistrationNumber()
    {
        TaxModelTaxable_IN taxModelTaxableIN = taxModelTaxable as TaxModelTaxable_IN;
        return taxModelTaxableIN.getTaxRegistrationNumber(TaxType_IN::SalesTax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTaxRegistrationRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RecId</c> of Sales Tax Registration.
    /// </summary>
    /// <returns>
    /// The <c>RefRecId</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId getSalesTaxRegistrationRefRecId()
    {
        TaxModelTaxable_IN taxModelTaxableIN = taxModelTaxable as TaxModelTaxable_IN;
        return taxModelTaxableIN.getTaxRegistrationNumberRefRecId(TaxType_IN::SalesTax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxModelSalesTaxable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the instance of <c>TaxModelSalesTaxable_IN</c>
    /// </summary>
    /// <param name="_taxModelSalesTaxable">
    /// The given instance of <c>TaxModelSalesTaxable_IN</c>
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setTaxModelSalesTaxable(TaxModelSalesTaxable_IN _taxModelSalesTaxable)
    {
        taxModelSalesTaxable = _taxModelSalesTaxable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSkipSalesTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Should the Sales Tax be skipped on this transaction line?
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c> on the transaction line.
    /// </param>
    /// <returns>
    /// True, it should be skipped; Otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean shouldSkipSalesTax(TaxOnItem _taxOnItem)
    {
        boolean ret;

        if (taxModelTaxable.isBasedOnReferenceTaxModelDocLine())
        {
            ret = this.getSalesReferenceTaxModelDocLine().shouldSkipSalesTax(_taxOnItem);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>