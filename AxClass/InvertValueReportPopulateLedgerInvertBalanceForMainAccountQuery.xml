<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InvertValueReportPopulateLedgerInvertBalanceForMainAccountQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InvertValueReportPopulateLedgerInvertBalanceForMainAccountQuery</c> class creates queries related to the <c>InventValueReportPopulateLedger</c> class.
/// </summary>
public final class InvertValueReportPopulateLedgerInvertBalanceForMainAccountQuery
{
    private MainAccount mainAccount;
    private DimensionAttributeValueTotallingCriteria dimAttrValueTotCrit;
    private RecId dimensionAttributeValueRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(
        MainAccount _mainAccount,
        DimensionAttributeValueTotallingCriteria _dimAttrValueTotCrit,
        RecId _dimensionAttributeValueRecId)
    {
        mainAccount = _mainAccount;
        dimAttrValueTotCrit = _dimAttrValueTotCrit;
        dimensionAttributeValueRecId = _dimensionAttributeValueRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSearchObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects records from the <c>DimensionAttributeValueTotallingCriteria</c> table.
    /// </summary>
    /// <param name = "_mainAccount">
    /// The <c>MainAccount</c> buffer.
    /// </param>
    /// <param name = "_dimAttrValueTotCrit">
    /// The <c>DimensionAttributeValueTotallingCriteria</c> buffer.
    /// </param>
    /// <param name = "_dimensionAttributeValueRecId">
    /// The <c>DimensionAttributeValue</c> record Id.
    /// </param>
    /// <returns>
    /// The selected records.
    /// </returns>
    internal static SysDaSearchObject createSearchObject(
        MainAccount _mainAccount,
        DimensionAttributeValueTotallingCriteria _dimAttrValueTotCrit,
        RecId _dimensionAttributeValueRecId)
    {
        InvertValueReportPopulateLedgerInvertBalanceForMainAccountQuery invertValueReportPopulateLedgerInvertBalanceForMainAccountQuery = new InvertValueReportPopulateLedgerInvertBalanceForMainAccountQuery();

        invertValueReportPopulateLedgerInvertBalanceForMainAccountQuery.initialize(_mainAccount, _dimAttrValueTotCrit, _dimensionAttributeValueRecId);

        SysDaQueryObject query = invertValueReportPopulateLedgerInvertBalanceForMainAccountQuery.createQueryObject();
        SysDaSearchObject searchObject = new SysDaSearchObject(query);

        return searchObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject createQueryObject()
    {
        SysDaQueryObject dimensionAttributeValueQueryObject = new SysDaQueryObject(dimAttrValueTotCrit);
        dimensionAttributeValueQueryObject.projection().add(fieldStr(DimensionAttributeValueTotallingCriteria, InvertTotalSign));

        this.addDimensionAttributeValueTotallingCriteriaFieldsToQueryObjectWhereClause(dimensionAttributeValueQueryObject);

        SysDaQueryObject mainAccountQueryObject = this.addMainAccountFieldsToQueryObjectWhereClause();

        dimensionAttributeValueQueryObject.joinClause(SysDaJoinKind::InnerJoin, mainAccountQueryObject);

        return dimensionAttributeValueQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDimensionAttributeValueTotallingCriteriaFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    private void addDimensionAttributeValueTotallingCriteriaFieldsToQueryObjectWhereClause(SysDaQueryObject _queryObject)
    {
        _queryObject.whereClause(new SysDaEqualsExpression(
            new SysDaFieldExpression(dimAttrValueTotCrit, fieldStr(DimensionAttributeValueTotallingCriteria, DimensionAttributeValue)), new SysDaValueExpression(dimensionAttributeValueRecId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addMainAccountFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the where clause expression to a query.
    /// </summary>
    [Wrappable(true)]
    protected final SysDaQueryObject addMainAccountFieldsToQueryObjectWhereClause()
    {
        SysDaQueryObject queryObject = new SysDaQueryObject(mainAccount);

        queryObject.whereClause(
            new SysDaAndExpression(new SysDaEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, LedgerChartOfAccounts)), new SysDaValueExpression(LedgerChartOfAccounts::current())),
                new SysDaGreaterThanOrEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, MainAccountId)), new SysDaFieldExpression(dimAttrValueTotCrit, fieldStr(DimensionAttributeValueTotallingCriteria, FromValue))))
            .and(new SysDaLessThanOrEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, MainAccountId)), new SysDaFieldExpression(dimAttrValueTotCrit, fieldStr(DimensionAttributeValueTotallingCriteria, ToValue))))
            .and(new SysDaEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, Type)), new SysDaValueExpression(DimensionLedgerAccountType::Equity))
                .or(new SysDaEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, Type)), new SysDaValueExpression(DimensionLedgerAccountType::Liability)))
                .or(new SysDaEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, Type)), new SysDaValueExpression(DimensionLedgerAccountType::Asset)))
                .or(new SysDaEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, Type)), new SysDaValueExpression(DimensionLedgerAccountType::BalanceSheet)))
                .or(new SysDaEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, Type)), new SysDaValueExpression(DimensionLedgerAccountType::Expense)))
                .or(new SysDaEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, Type)), new SysDaValueExpression(DimensionLedgerAccountType::Revenue)))
                .or(new SysDaEqualsExpression(new SysDaFieldExpression(mainAccount, fieldStr(MainAccount, Type)), new SysDaValueExpression(DimensionLedgerAccountType::ProfitAndLoss)))));

        return queryObject;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>