<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailBusinessPartnerAddUserProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailBusinessPartnerAddUserProcessor</c> class to process the add business partner user operation.
/// </summary>
internal class RetailBusinessPartnerAddUserProcessor extends RetailBusinessPartnerOperationProcessorBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>processInternal</Name>
				<Source><![CDATA[
    protected void processInternal(RetailBusinessPartnerOperation _operation)
    {
        CustHierarchy hierarchy = CustHierarchy::findByHierarchyId(_operation.BusinessPartnerID);

        if (!hierarchy.RecId)
        {
            throw error("@Retail:RetailB2BPartnerDoesNotExistError");
        }

        RetailBusinessPartnerManageUserContract contract = RetailBusinessPartnerManageUserContract::deserialize(_operation.Value);

        CustTable                   custTable;
        DirPartyTable               party;
        DirPartyRecId               partyRecId;
        LogisticsElectronicAddress  electronicAddress;

        select firstonly RecId from party
            join    electronicAddress where party.PrimaryContactEmail == electronicAddress.RecId
                &&  electronicAddress.Locator == contract.parmEmail()
            exists join custTable where party.RecId == custTable.Party;

        partyRecId = party.RecId;

        if (!partyRecId)
        {
            partyRecId = this.createNewCustomer(contract, _operation.Channel, hierarchy.CustHierarchyId);
        }

        CustHierarchyNode hierarchyNode = CustHierarchyNode::addNodeToHierarchy(hierarchy.CustHierarchyId, 0, partyRecId, CustHierarchyNodeType::Customer, CustHierarchyNodeRole::User);

        CustTable userCustTable = CustTable::findByPartyRecId(partyRecId);

        this.overrideUserAttributesWithAdminData(userCustTable.RecId, hierarchy.CustHierarchyId);

        this.overrideUserAttributesWithContractData(userCustTable.RecId, contract);

        boolean isB2BAdmin = hierarchyNode.Role == CustHierarchyNodeRole::Admin ? true : false;
        RetailCustTable::updateB2BFields(hierarchyNode.Party, hierarchyNode.RecId, isB2BAdmin, contract.parmB2BUserId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewCustomer</Name>
				<Source><![CDATA[
    private DirPartyRecId createNewCustomer(RetailBusinessPartnerManageUserContract _contract, RefRecId _channelRecId, CustHierarchyId _custHierarchyId)
    {
        CustTable adminCustTable = CustHierarchyUpdateHelper::getAdminCustTable(_custHierarchyId);
        RetailCustTable adminRetailCustTable = RetailCustTable::find(adminCustTable.AccountNum);
        DirPartyTable adminParty = DirPartyTable::findRec(adminCustTable.Party);
        str name = strFmt("%1 %2", _contract.parmFirstName(), _contract.parmLastName());
        
        container newCustomerResult = RetailTransactionServiceCustomer::newCustomer(
            name,
            null,                   // CustGroup
            null,                   // Currency
            adminParty.LanguageId,  
            null,                   // Street
            null,                   // ZipCode
            null,                   // State
            null,                   // County
            null,                   // Phone
            null,                   // CellularPhone
            _contract.parmEmail(),  
            null,                   // Url
            null,                   // MultiLineDisc
            null,                   // EndDisc
            null,                   // LineDisc
            null,                   // PriceGroup
            null,                   // TaxGroup
            0,                      // CreditMax
            0,                      // Blocked
            null,                   // OrgId
            0,                      // usePurchRequest
            null,                   // VATNum
            null,                   // InvoiceAccount
            0,                      // MandatoryCreditLimit
            null,                   // ContactPersonId
            false,                  // UseOrderNumberReference
            0,                      // ReceiptOption
            null,                   // ReceiptEmail
            null,                   // City
            null,                   // Country
            null,                   // IdentificationNumber
            _channelRecId,
            DirPartyType::Person);

        boolean customerCreated;
        if (conLen(newCustomerResult) >= 1)
        {
            customerCreated = conPeek(newCustomerResult, 1);
        }

        if (!customerCreated)
        {
            throw error("@CustHierarchy:CreateOrganizationCustomerError");
        }

        DirPartyRecId partyRecId = conPeek(newCustomerResult, 5);

        return partyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>overrideUserAttributesWithAdminData</Name>
				<Source><![CDATA[
    private void overrideUserAttributesWithAdminData(RecId _userCustTableRecId, CustHierarchyId _custHierarchyId)
    {
        CustHierarchyUpdateHelper::overrideCustHierarchyAttributes(_custHierarchyId, CustHierarchyPropertyGroup::General, _userCustTableRecId);
        CustHierarchyUpdateHelper::overrideCustHierarchyAttributes(_custHierarchyId, CustHierarchyPropertyGroup::MiscellaneousDetails, _userCustTableRecId);
        CustHierarchyUpdateHelper::overrideCustHierarchyAttributes(_custHierarchyId, CustHierarchyPropertyGroup::SalesDemographics, _userCustTableRecId);
        CustHierarchyUpdateHelper::overrideCustHierarchyAttributes(_custHierarchyId, CustHierarchyPropertyGroup::CreditAndCollections, _userCustTableRecId);
        CustHierarchyUpdateHelper::overrideCustHierarchyAttributes(_custHierarchyId, CustHierarchyPropertyGroup::SalesOrderDefaults, _userCustTableRecId);
        CustHierarchyUpdateHelper::overrideCustHierarchyAttributes(_custHierarchyId, CustHierarchyPropertyGroup::PaymentDefaults, _userCustTableRecId);
        CustHierarchyUpdateHelper::overrideCustHierarchyAttributes(_custHierarchyId, CustHierarchyPropertyGroup::InvoiceAndDelivery, _userCustTableRecId);
        CustHierarchyUpdateHelper::overrideCustHierarchyAttributes(_custHierarchyId, CustHierarchyPropertyGroup::Retail, _userCustTableRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>overrideUserAttributesWithContractData</Name>
				<Source><![CDATA[
    private void overrideUserAttributesWithContractData(RecId _userCustTableRecId, RetailBusinessPartnerManageUserContract _contract)
    {
        ttsbegin;

        CustTable userCustTable = CustTable::findRecId(_userCustTableRecId, true);

        userCustTable.CreditMax = _contract.parmSpendingLimit();
        userCustTable.update();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>