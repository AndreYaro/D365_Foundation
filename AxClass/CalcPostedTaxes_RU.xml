<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CalcPostedTaxes_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
//Russian taxes calculation - posted taxes
class CalcPostedTaxes_RU    extends CalcTaxes_RU
{
    TaxTrans    taxTrans;

    TaxValue    taxValue_VAT20;
    TaxValue    taxValue_VAT10;
    TaxValue    taxValue_VAT0;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
        public void calc()
    {
        TaxTable taxTable;
        ;

        this.clearResults();

        while (taxTrans)
        {
            taxTable = TaxTable::find(taxTrans.TaxCode);

            switch (taxTable.TaxType_W)
            {
                case TaxType_W::VAT :
                    tax_VAT20        += taxTrans.TaxAmount;
                    taxBase_VAT20    += taxTrans.TaxBaseAmount;
                    taxCur_VAT20     += taxTrans.taxAmountCur_W();
                    taxBaseCur_VAT20 += taxTrans.SourceBaseAmountCur;
                    taxValue_VAT     += taxValue_VAT   ? 0 : TaxData::percent(taxTable.TaxCode, taxTrans.TransDate, taxTable.TaxBase);
                    taxValue_VAT20   += taxValue_VAT20 ? 0 : TaxData::percent(taxTable.TaxCode, taxTrans.TransDate, taxTable.TaxBase);
                    taxCodes_VATFull.add(taxTable.TaxCode);
                    break;

                case TaxType_W::VATReduced :
                    tax_VAT10        += taxTrans.TaxAmount;
                    taxBase_VAT10    += taxTrans.TaxBaseAmount;
                    taxCur_VAT10     += taxTrans.taxAmountCur_W();
                    taxBaseCur_VAT10 += taxTrans.SourceBaseAmountCur;
                    taxValue_VAT     += taxValue_VAT   ? 0 : TaxData::percent(taxTable.TaxCode, taxTrans.TransDate, taxTable.TaxBase);
                    taxValue_VAT10   += taxValue_VAT10 ? 0 : TaxData::percent(taxTable.TaxCode, taxTrans.TransDate, taxTable.TaxBase);
                    taxCodes_VATReduced.add(taxTable.TaxCode);
                    break;

                case TaxType_W::VATZero :
                    tax_VAT0         += taxTrans.TaxAmount;
                    taxbase_VAT0     += taxTrans.TaxBaseAmount;
                    taxCur_VAT0      += taxTrans.taxAmountCur_W();
                    taxbaseCur_VAT0  += taxTrans.SourceBaseAmountCur;
                    taxValue_VAT     += taxValue_VAT   ? 0 : TaxData::percent(taxTable.TaxCode, taxTrans.TransDate, taxTable.TaxBase);
                    taxValue_VAT0    += taxValue_VAT0  ? 0 : TaxData::percent(taxTable.TaxCode, taxTrans.TransDate, taxTable.TaxBase);
                    taxCodes_VATZero.add(taxTable.TaxCode);
                    break;

                case TaxType_W::Excise :
                    tax_Excise       += taxTrans.TaxAmount;
                    taxBase_Excise   += taxTrans.TaxBaseAmount;
                    taxCur_Excise    += taxTrans.taxAmountCur_W();
                    taxBaseCur_Excise+= taxTrans.SourceBaseAmountCur;
                    taxValue_Excise  += TaxData::percent(taxTable.TaxCode, taxTrans.TransDate, taxTable.TaxBase);
                    break;

                default :
                    tax_Other        += taxTrans.TaxAmount;
                    taxBase_Other    += taxTrans.TaxBaseAmount;
                    taxCur_Other     += taxTrans.taxAmountCur_W();
                    taxBaseCur_Other += taxTrans.SourceBaseAmountCur;
            }
            next taxTrans;
        }

        if (taxBase_SalesTax != 0 )
        {
            totalValue_SalesTax = abs(tax_SalesTax / taxBase_SalesTax);
        }
        else
        {
            totalValue_SalesTax = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearResults</Name>
				<Source><![CDATA[
        protected void clearResults()
    {
        super();

        taxValue_VAT20 = 0;
        taxValue_VAT10 = 0;
        taxValue_VAT0  = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(TaxTrans _taxTrans = null)
    {
        ;
        taxTrans        = _taxTrans;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxTrans</Name>
				<Source><![CDATA[
        public TaxTrans setTaxTrans(TaxTrans _taxTrans)
    {
        ;
        taxTrans = _taxTrans;
        this.clearResults();

        return taxTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxValue_VATFull</Name>
				<Source><![CDATA[
        public TaxValue taxValue_VATFull()
    {
        return taxValue_VAT20;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxValue_VATReduced</Name>
				<Source><![CDATA[
        public TaxValue taxValue_VATReduced()
    {
        return taxValue_VAT10;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxValue_VATZero</Name>
				<Source><![CDATA[
        public TaxValue taxValue_VATZero()
    {
        return taxValue_VAT0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>