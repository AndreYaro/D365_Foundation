<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjListProjTrans_WIP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class   ProjListProjTrans_WIP extends ProjListProjTrans

{
    DialogField     dialogFixedPrice,
                    dialogTimeMaterial,
                    dialogInternalCost,
                    dialogInvestment,
                    dialogHour,
                    dialogExpenses,
                    dialogRevenue,
                    dialogOnAcc,
                    dialogItem;

    boolean         fixedPrice;
    boolean         timeMaterial;
    boolean         internalCost;
    boolean         investment;

    boolean         hour;
    boolean         expenses;
    boolean         revenue;
    boolean         onAcc;
    boolean         item;

    //
    // The dontShowDialog variable in ProjListProjTran is use to hide information
    // in the 2 Period reports and show not be used by the classes that extend from it.
    //
    boolean         dontShowDialog1;

    #define.CurrentVersion(1)

    #localmacro.CurrentList
        fixedPrice,
        timeMaterial,
        internalCost,
        investment,
        hour,
        expenses,
        revenue,
        onAcc,
        item
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
Object dialog(Object _dialog)
    {

        DialogRunbase dialog = _dialog;
        DialogGroup   dialogMainGroup;
        ;

        if (!dontShowDialog1)
        {
            dialogMainGroup = dialog.addGroup();
            dialogMainGroup.columns(2);
            dialogMainGroup.frameType(FormFrameType::None);

            dialog.addGroup("@SYS78367",dialogMainGroup);

            dialogTimeMaterial  = dialog.addFieldValue(extendedtypestr(ProjOptionTM),         timeMaterial, "@SYS53874", "@SYS78362");
            dialogFixedPrice    = dialog.addFieldValue(extendedtypestr(ProjOptionFixedPrice), fixedPrice,   "@SYS3237",  "@SYS78361");
            dialogInvestment    = dialog.addFieldValue(extendedtypestr(ProjOptionInvestment), investment,   "@SYS78353", "@SYS78364");
            dialogInternalCost  = dialog.addFieldValue(extendedtypestr(ProjOptionInternal),   internalCost, "@SYS15017", "@SYS90644");

            dialog.addGroup("@SYS78373",dialogMainGroup);

            dialogHour         = dialog.addFieldValue(extendedtypestr(ProjOptionHours),      hour,         "@SYS5269",  "@SYS78368");
            dialogExpenses     = dialog.addFieldValue(extendedtypestr(ProjOptionCost),       expenses,     "@SYP4882014", "@SYS78369");
            dialogItem         = dialog.addFieldValue(extendedtypestr(ProjOptionItem),       item,         "@SYS7407",  "@SYS78372");
            dialogRevenue      = dialog.addFieldValue(extendedtypestr(ProjOptionRevenue),    revenue,      "@SYS9154",  "@SYS78818");
            dialogOnAcc        = dialog.addFieldValue(extendedtypestr(ProjOptionOnAcc),      onAcc,        "@SYS7659",  "@SYS78371");

            dialog = super(dialog);
        }

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
        public boolean getFromDialog()
    {
        ;

        if (!dontShowDialog1)
        {
            super();

            fixedPrice      = dialogFixedPrice.value();
            timeMaterial    = dialogTimeMaterial.value();
            internalCost    = dialogInternalCost.value();
            investment      = dialogInvestment.value();

            hour            = dialogHour.value();
            expenses        = dialogExpenses.value();
            revenue         = dialogRevenue.value();
            onAcc           = dialogOnAcc.value();
            item            = dialogItem.value();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustShowHourQty</Name>
				<Source><![CDATA[
        boolean mustShowHourQty()
    {
        boolean ret;
        ;
        ret = super();

        return ret && !showDeviance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        return [#CurrentVersion, #currentList] + [super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDontShowDialog1</Name>
				<Source><![CDATA[
        public boolean parmDontShowDialog1(boolean _dontShowDialog1 = dontShowDialog1)
    {
        ;

        dontShowDialog1 = _dontShowDialog1;

        return dontShowDialog1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExpenses</Name>
				<Source><![CDATA[
        public boolean parmExpenses(boolean _expenses = expenses)
    {
        ;
        expenses = _expenses;

        return expenses;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedPrice</Name>
				<Source><![CDATA[
        public boolean parmFixedPrice(boolean _fixedPrice = fixedPrice)
    {
        ;
        fixedPrice = _fixedPrice;

        return fixedPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHour</Name>
				<Source><![CDATA[
        public boolean parmHour(boolean _hour = hour)
    {
        ;
        hour = _hour;

        return hour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInternalCost</Name>
				<Source><![CDATA[
        public boolean parmInternalCost(boolean _internalCost = internalCost)
    {
        ;
        internalCost = _internalCost;

        return internalCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvestment</Name>
				<Source><![CDATA[
        public boolean parmInvestment(boolean _investment = investment)
    {
        ;
        investment = _investment;

        return investment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItem</Name>
				<Source><![CDATA[
        public boolean parmItem(boolean _item = item)
    {
        ;
        item = _item;

        return item;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnAcc</Name>
				<Source><![CDATA[
        public boolean parmOnAcc(boolean _onAcc = onAcc)
    {
        ;
        onAcc = _onAcc;

        return onAcc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRevenue</Name>
				<Source><![CDATA[
        public boolean parmRevenue(boolean _revenue = revenue)
    {
        ;
        revenue = _revenue;

        return revenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeMaterial</Name>
				<Source><![CDATA[
        public boolean parmTimeMaterial(boolean _timeMaterial = timeMaterial)
    {
        ;
        timeMaterial = _timeMaterial;

        return timeMaterial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDisplayFlags</Name>
				<Source><![CDATA[
        container setDisplayFlags(boolean _hour, boolean _expenses, boolean _item, boolean _revenue, boolean _onAcc, ProjAmountQty _amountQty)
    {
        int     showCostValue = 1;
        int     showGross = 1;
        int     showNet = 1;
        int     showOnAccount = 1;
        int     showQtyHour = 1;
        int     showSalesValue = 1;

        if (_amountQty == ProjAmountQty::Amount || ! _hour)
        {
            showQtyHour =0;
        }
        if (! _onAcc)
        {
            showOnAccount = 0;
            showNet = 0;
        }

        if ((_onAcc || _hour) && !(_expenses || _item || _revenue))
        {
            if (!_hour ||
                (_hour && (_amountQty == ProjAmountQty::Qty)))
            {
                showCostValue = 0;
                showSalesValue = 0;
                showGross = 0;
                showNet = 0;
            }
        }

        if  (_revenue && !(_hour || _expenses || _item || _onAcc))
        {
            showCostValue = 0;
            showGross = 0;
        }

        if  (_revenue  && _onAcc  && !(_hour     || _expenses || _item))
        {
            showCostValue = 0;
            showGross = 0;
        }

        return [showQtyHour, showCostValue, showSalesValue, showOnAccount, showGross, showNet];
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDisplayFlags2Column</Name>
				<Source><![CDATA[
        container setDisplayFlags2Column(boolean _hour, boolean _expense, boolean _item, boolean _revenue, boolean _onAccount)
    {
        int     showOnAccount = 1;
        int     showNet       = 1;
        int     showGross     = 1;

        if (! _onAccount)
        {
            showOnAccount = 0;
            showNet = 0;
        }
        else if (!(_hour || _expense || _item || _revenue))
        {
            showGross = 0;
            showNet = 0;
        }
        return [showOnAccount, showNet, showGross];
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDisplayFlags2PeriodColumn</Name>
				<Source><![CDATA[
        container setDisplayFlags2PeriodColumn(boolean _hour, boolean _expenses, boolean _item, boolean _revenue, boolean _onAcc, ProjAmountQty _amountQty)
    {
        int showPeriodQty = 1;
        int showNet = 1;
        int showSalesPrice = 1;
        int showCostPrice = 1;

        if (_amountQty == ProjAmountQty::Amount || ! _hour)
        {
            showPeriodQty = 0;
        }

        if (! _onAcc)
        {
            showNet = 0;
            showSalesPrice = 0;
        }

        if ((_onAcc || _hour) && !(_expenses || _item || _revenue))
        {
            if (!_hour || (_hour && (_amountQty == ProjAmountQty::Qty)))
            {
               showCostPrice = 0;
               showNet = 0;
            }
        }

        return [showPeriodQty, showNet, showSalesPrice, showCostPrice];
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDisplayLabel</Name>
				<Source><![CDATA[
        container setDisplayLabel(boolean _hour, boolean _expense, boolean _item)
    {
        str costValueLabel  = "@SYS78440";
        str salesValueLabel = "@SYS78748";

        if (_hour && !(_expense || _item))
        {
            costValueLabel = "@SYS78746";
            salesValueLabel = "@SYS55369";
        }
        else if (_expense && !(_hour || _item))
        {
            costValueLabel = "@SYS78747";
            salesValueLabel = "@SYS55369";
        }
        else if (_item && !(_expense || _hour))
        {
            costValueLabel = "@SYS58393";
            salesValueLabel = "@SYS55369";
        }

        return [costValueLabel, salesValueLabel];
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDisplayLabel2Column</Name>
				<Source><![CDATA[
        container setDisplayLabel2Column(ProjShowAmount _showAmount, boolean _hour, boolean _expense, boolean _item, boolean _revenue, boolean _onAccount)
    {
        str grossWIPLabel   = "@SYS78441";
        str wipInvoiceLabel = "@SYS82747";
        str netWIPLabel     = "@SYS78442";
        str periodLabel     = this.formatPeriodLabel('', DateFlags::None);

        str devianceLabel;
        str selectionLabel;

        if  ((_revenue  || _onAccount) && !(_hour || _expense || _item))
        {
            grossWIPLabel = "@SYS78748";
        }

        selectionLabel    = this.formatSelection(_showAmount,false);
        devianceLabel     = ProjListProjHelpClass::descActualVsBudget(this.parmActualVsBudget());

        return [grossWIPLabel, wipInvoiceLabel, netWIPLabel, devianceLabel, selectionLabel, periodLabel];
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDisplayLabel2PeriodColumn</Name>
				<Source><![CDATA[
        str setDisplayLabel2PeriodColumn(boolean _hour, boolean _expenses, boolean _item, boolean _revenue, boolean _onAcc)
    {
        str costPriceLabel = "@SYS78441";

        if  ((_revenue  || _onAcc) && !(_hour || _expenses || _item))
        {
            costPriceLabel = "@SYS78748";
        }

        return costPriceLabel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container _packedClass)
    {
        boolean         ret;
        Integer         version    = RunBase::getVersion(_packedClass);
        container       conListProjTrans;

        switch (version)
        {
            case #CurrentVersion:
                [version, #currentList, conListProjTrans] = _packedClass;
                super(conListProjTrans);
                ret = true;
                break;
            default:
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
        boolean validate()
    {
        boolean ret;

        ret = super();

        // Check if project type has been selected
        if (!ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled() &&
            !(fixedPrice || timeMaterial || internalCost || investment))
        {
            ret = checkFailed("@SYS91026");
        }

        // Check if transaction type has been selected
        if (!(hour || expenses || revenue || onAcc || item))
        {
            ret = checkFailed("@SYS91027");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>