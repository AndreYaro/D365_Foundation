<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqTransPOMultiSelectionContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqTransPOMultiSelectionContext</c> is an abstract adapter that encapsulates
/// iteration through mutliple selected records.
/// </summary>
/// <remarks>
/// Planned order list pages and planned order details pages offers different incompatible
/// interfaces required to iterate through multiple selected records. The <c>ReqTransPOMultiSelectionContext</c>
/// implementations provide a unified interface expected by the clients (action classes).
/// </remarks>
abstract class ReqTransPOMultiSelectionContext
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFirst</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns first record from the selection.
    /// </summary>
    /// <returns>
    /// A <c>Common</c> record or empty record if no records available.
    /// </returns>
    public abstract Common getFirst()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns next record from the selection.
    /// </summary>
    /// <returns>
    /// A <c>Common</c> record or empty record if no records available.
    /// </returns>
    public abstract Common getNext()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Factory method which creates a concrete adapter based on the caller.
    /// </summary>
    /// <param name="_args">
    /// An <c>Args</c> value from the caller.
    /// </param>
    /// <returns>
    /// A <c>ReqTransPOMultiSelectionContext</c> based instance of concrete adapter.
    /// </returns>
    public static ReqTransPOMultiSelectionContext construct(Args _args)
    {
        ReqTransPOMultiSelectionContext ret;

        // Create concrete adapter based on the caller context
        // For ListPage - ListPageContext
        // For detailed page - DetailsPageContext
        if ( ReqTransPOMultiSelectionContext::isDetailsPage(_args))
        {
            ret = new ReqTransPOMultiSelectionDetailPage(_args);
        }
        else
        {
            ret = new ReqTransPOMultiSelectionListPage(_args);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDetailsPage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Helper method which validates if the caller is the supported details page.
    /// </summary>
    /// <param name="_args">
    /// An <c>Args</c> value from the caller.
    /// </param>
    /// <returns>
    /// true if the caller is the supported details page.
    /// </returns>
    private static boolean isDetailsPage(Args _args)
    {
        boolean retVal = false;
        FormRun caller;

        if ( _args && _args.caller() && _args.caller() is FormRun )
        {
            caller = _args.caller();
            retVal = caller && (caller.name() == formstr(ReqTransPO) || caller.name() == formstr(ReqSupplyDemandSchedule));
        }

        return retVal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>