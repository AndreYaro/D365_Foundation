<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscPolicyFindOrCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PriceDiscPolicyFindOrCreate</c> class is used to find or create a price discount change
///    policy.
/// </summary>
class PriceDiscPolicyFindOrCreate
{
    RefFieldId                       policyField;
    PriceDiscSystemSource            policySource;
    PriceDiscPolicyFieldMappingCache fieldMapping;
    PriceDiscResultFields            priceDiscResultFields;

    private PriceDiscPolicyField     mappedPolicyField;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createFromPolicyFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in the <c>PriceDiscChangePolicy</c> table and related records in the
    /// <c>PriceDiscPolicyFields</c> table.
    /// </summary>
    /// <param name="_policyFieldList">
    /// A <c>PriceDiscPolicyFieldList</c> object.
    /// </param>
    /// <param name="_searchKey">
    /// A hash key that represents the policy fields.
    /// </param>
    /// <returns>
    /// The record ID of the record in the <c>PriceDiscChangePolicy</c> table.
    /// </returns>
    [Hookable(false)]
    final protected PriceDiscChangePolicyRefRecId createFromPolicyFieldList(PriceDiscPolicyFieldList _policyFieldList, int _searchKey)
    {
        PriceDiscChangePolicy changePolicy;
        PriceDiscPolicyFields policyFields;
        RecordInsertList      insertList = new RecordInsertList(tableNum(PriceDiscPolicyFields));
        int i;

        ttsbegin;
        changePolicy.SearchKey = _searchKey;
        changePolicy.insert();

        Enumerator enumerator = _policyFieldList.getEnumerator();
        while (enumerator.moveNext())
        {
            PriceDiscPolicyField tableMapField = enumerator.current();

            policyFields.ChangePolicy   = changePolicy.RecId;
            policyFields.TableMapId     = PriceDiscPolicyFields::convertReferencedToStoredTableMapId(tableMapField.parmTableMapId());
            policyFields.FieldId        = tableMapField.parmTableMapFieldId();
            insertList.add(policyFields);
        }

        insertList.insertDatabase();
        ttscommit;

        return changePolicy.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateChangePolicy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds or creates a new price discount policy.
    /// </summary>
    /// <param name="_policyFields">
    ///    A container that contains the list of field IDs that represent the specified policy.
    /// </param>
    /// <returns>
    ///    The record ID of the record in the <c>PriceDiscChangePolicy</c> table that represents the found or
    ///    created price discount policy.
    /// </returns>
    [SysObsolete("Method is moved to findOrCreateChangePolicyFromPolicyFieldList.", false, 31\03\2018), Hookable(false)]
    final public PriceDiscChangePolicyRefRecId findOrCreateChangePolicy(container _policyFields)
    {
        PriceDiscPolicyFieldList policyFieldList = PriceDiscPolicyFieldList::newList();

        for (int i = 1; i<=conLen(_policyFields); i++)
        {
            policyFieldList.addPriceDiscResultField(conPeek(_policyFields, i));
        }

        return this.findOrCreateChangePolicyFromPolicyFieldList(policyFieldList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateChangePolicyFromPolicyFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates a new price discount policy from a <c>PriceDiscPolicyFieldList</c> objects.
    /// </summary>
    /// <param name="_policyFields">
    /// A <c>PriceDiscPolicyFieldList</c> object.
    /// </param>
    /// <returns>
    /// The record ID of the record in the <c>PriceDiscChangePolicy</c> table that represents the found or
    /// created price discount policy.
    /// </returns>
    [Hookable(false)]
    public PriceDiscChangePolicyRefRecId findOrCreateChangePolicyFromPolicyFieldList(PriceDiscPolicyFieldList _policyFieldList)
    {
        if (!_policyFieldList.policyFieldListElements())
        {
            return 0;
        }

        int searchKey = _policyFieldList.calculateSearchKey();

        PriceDiscChangePolicyRefRecId   changePolicyId  = PriceDiscChangePolicy::findSearchKey(searchKey);

        if (!changePolicyId)
        {
            try
            {
                ttsbegin;
                changePolicyId = this.createFromPolicyFieldList(_policyFieldList, searchKey);
                ttscommit;
            }
            catch (Exception::DuplicateKeyException)
            {
                changePolicyId = PriceDiscChangePolicy::findSearchKey(searchKey);
            }
        }
        return changePolicyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the instance variables.
    /// </summary>
    public void init()
    {
        fieldMapping    = PriceDiscResultFields::tableFieldMapping();
        mappedPolicyField  = fieldMapping.tableField2PolicyField(priceDiscResultFields.TableId, policyField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDiscPolicyField</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public PriceDiscPolicyField parmPriceDiscPolicyField()
    {
        return mappedPolicyField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAutoTotalDiscountEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether the automatic calculation of the total discount percentage parameter is enabled for
    ///    the sales order of a purchase order module.
    /// </summary>
    /// <returns>
    ///    true if the automatic calculation of the total discount percentage parameter is enabled for the
    ///    specified module; otherwise, false.
    /// </returns>
    protected boolean isAutoTotalDiscountEnabled()
    {
        return PriceDiscPolicyRule::createInstance(priceDiscResultFields).isAutoTotalDiscountEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPolicyField</Name>
				<Source><![CDATA[
    public RefFieldId parmPolicyField(RefFieldId _policyField = policyField)
    {
        policyField = _policyField;
        return policyField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPolicySource</Name>
				<Source><![CDATA[
    public PriceDiscSystemSource parmPolicySource(PriceDiscSystemSource _policySource = policySource)
    {
        policySource = _policySource;
        return policySource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDiscResultFields</Name>
				<Source><![CDATA[
    public PriceDiscResultFields parmPriceDiscResultFields(PriceDiscResultFields _priceDiscResultFields = priceDiscResultFields)
    {
        priceDiscResultFields = _priceDiscResultFields;
        return priceDiscResultFields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Distinguishes price discount policies based on automatically created and manually created records,
    ///    and also handles the special line amount scenario.
    /// </summary>
    /// <exception cref="M:Exception::UpdateConflict">
    ///    Standard update conflict resolution.
    /// </exception>
    /// <exception cref="M:Exception::UpdateConflictNotRecovered">
    ///    Standard update conflict resolution.
    /// </exception>
    public void run()
    {
        if (policySource == PriceDiscSystemSource::ManualEntry && !mappedPolicyField.parmTableMapFieldId())
        {
            return;
        }

        try
        {
            ttsbegin;
            this.findOrCreatePriceDiscPolicy();
            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreatePriceDiscPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds or creates a new price discount policy.
    /// </summary>
    private void findOrCreatePriceDiscPolicy()
    {
        switch (policySource)
        {
            case PriceDiscSystemSource::ManualEntry:
                if (this.validateManualEntryPolicy())
                {
                    PriceDiscPolicyFieldList manualPolicyFieldList = PriceDiscPolicyFieldList::newList();
                
                    if (priceDiscResultFields.ManualEntryChangePolicy)
                    {
                        PriceDiscPolicyField lineAmountField = PriceDiscPolicyField::newPriceDiscResultsField(fieldNum(PriceDiscResultFields, LineAmount));

                        if ((mappedPolicyField.parmTableMapId() == lineAmountField.parmTableMapId() && mappedPolicyField.parmTableMapFieldId() == lineAmountField.parmTableMapFieldId()) ||
                                PriceDiscPolicyFields::isPolicyFieldInPolicy(priceDiscResultFields.ManualEntryChangePolicy, lineAmountField))
                        {
                            manualPolicyFieldList.addPolicyField(lineAmountField);
                            priceDiscResultFields.ManualEntryChangePolicy = this.findOrCreateChangePolicyFromPolicyFieldList(manualPolicyFieldList);
                        }
                        else if (!PriceDiscPolicyFields::isPolicyFieldInPolicy(priceDiscResultFields.ManualEntryChangePolicy, mappedPolicyField))
                        {
                            manualPolicyFieldList = PriceDiscPolicyFields::retrievePolicyFieldList(priceDiscResultFields.ManualEntryChangePolicy);
                            manualPolicyFieldList.addPolicyField(mappedPolicyField);
                            priceDiscResultFields.ManualEntryChangePolicy = this.findOrCreateChangePolicyFromPolicyFieldList(manualPolicyFieldList);
                        }
                    }
                    else
                    {
                        manualPolicyFieldList.addPolicyField(mappedPolicyField);
                        priceDiscResultFields.ManualEntryChangePolicy = this.findOrCreateChangePolicyFromPolicyFieldList(manualPolicyFieldList);
                    }

                    if (priceDiscResultFields.SystemEntryChangePolicy)
                    {
                        priceDiscResultFields.SystemEntryChangePolicy = this.calculateSystemEntryChangePolicy(mappedPolicyField);
                        priceDiscResultFields.SystemEntrySource       = priceDiscResultFields.SystemEntryChangePolicy ? priceDiscResultFields.SystemEntrySource : PriceDiscSystemSource::None;
                    }
                }
                break;

            default:
                this.findOrCreateDefaultPriceDiscPolicy();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateDefaultPriceDiscPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds or creates a new price discount policy 
    ///     when the source is not manual entry.
    /// </summary>
    [Replaceable]
    protected void findOrCreateDefaultPriceDiscPolicy()
    {
        PriceDiscPolicyFieldList systemPolicyFieldList = this.retrieveSystemPolicyFieldList();
        priceDiscResultFields.SystemEntryChangePolicy = this.findOrCreateChangePolicyFromPolicyFieldList(systemPolicyFieldList);
        priceDiscResultFields.SystemEntrySource = policySource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSystemPolicyFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the default policy fields for the system based policies for header or line fields.
    /// </summary>
    /// <returns>
    /// The <c>PriceDiscPolicyFieldList</c> object containing policy fields.
    /// </returns>
    private PriceDiscPolicyFieldList retrieveSystemPolicyFieldList()
    {
        return PriceDiscPolicyRule::createInstance(priceDiscResultFields).retrieveSystemPolicyFieldList(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateSystemEntryChangePolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates system based policies to avoid redundancy to manual based policies.
    /// </summary>
    /// <param name="_policyField">
    /// A <c>PriceDiscPolicyField</c> object that will be removed from the policy.
    /// </param>
    /// <returns>
    /// The <c>PriceDiscPolicySystem</c> data type value that represents the record ID of a record in the
    /// <c>PriceDiscChangePolicy</c> table.
    /// </returns>
    /// <remarks>
    /// If a policy fields exists in a system based policy, and a new manual policy is created for the same
    /// field, it should be excluded from the system based policy.
    /// </remarks>
    [Wrappable(false)]
    final protected PriceDiscPolicySystem calculateSystemEntryChangePolicy(PriceDiscPolicyField _policyField)
    {
        PriceDiscPolicyFieldList     policyFieldList = PriceDiscPolicyFields::retrievePolicyFieldList(priceDiscResultFields.SystemEntryChangePolicy);
        boolean                 updatePolicy;
        PriceDiscPolicySystem   ret;

        if (_policyField.parmTableMapId() == tableNum(PriceDiscResultFields) && _policyField.parmTableMapFieldId() == fieldNum(PriceDiscResultFields, LineAmount))
        {
            policyFieldList = PriceDiscPolicyFieldList::newList();
            updatePolicy    = true;
        }
        else
        {
            updatePolicy    =  policyFieldList.removePolicyField(_policyField);
        }

        if (updatePolicy)
        {
            ret = this.findOrCreateChangePolicyFromPolicyFieldList(policyFieldList);
        }
        else
        {
            ret = priceDiscResultFields.SystemEntryChangePolicy;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateManualEntryPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a manual entry price discount policy can be created.
    /// </summary>
    /// <returns>
    ///    true if the price discount policy can be created; otherwise, false.
    /// </returns>
    protected boolean validateManualEntryPolicy()
    {
        boolean ret = true;

        if (ret
            && (mappedPolicyField.parmTableMapId() == tableNum(PriceDiscResultFields) && mappedPolicyField.parmTableMapFieldId() == fieldNum(PriceDiscResultFields, DiscPercent))
            && this.isAutoTotalDiscountEnabled())
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PriceDiscPolicyFindOrCreate construct()
    {
        return new PriceDiscPolicyFindOrCreate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>PriceDiscPolicyFindOrCreate</c> class and initializes the instance
    ///    variable.
    /// </summary>
    /// <param name="_priceDiscResultFields">
    ///    A <c>PriceDiscResultFields</c> map table.
    /// </param>
    /// <param name="_policyField">
    ///    A table field ID;
    /// </param>
    /// <param name="_policySource">
    ///    A <c>PriceDiscSystemSource</c> enumeration value that specifies the source of the policy.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>PriceDiscPolicyFindOrCreate</c> class initialized with the specified
    ///    parameters.
    /// </returns>
    public static PriceDiscPolicyFindOrCreate newFromParm(
        PriceDiscResultFields _priceDiscResultFields,
        RefFieldId            _policyField,
        PriceDiscSystemSource _policySource)
    {
        PriceDiscPolicyFindOrCreate priceDiscPolicyFindOrCreate = new PriceDiscPolicyFindOrCreate();
        priceDiscPolicyFindOrCreate.parmPolicyField(_policyField);
        priceDiscPolicyFindOrCreate.parmPolicySource(_policySource);
        priceDiscPolicyFindOrCreate.parmPriceDiscResultFields(_priceDiscResultFields);
        priceDiscPolicyFindOrCreate.init();
        return priceDiscPolicyFindOrCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPriceDiscResultFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>PriceDiscPolicyFindOrCreate</c> class and initializes the instance
    ///    variables.
    /// </summary>
    /// <param name="_priceDiscResultFields">
    ///    A <c>PriceDiscResultFields</c> map table.
    /// </param>
    /// <returns>
    ///    An instance of the <c>PriceDiscPolicyFindOrCreate</c> class.
    /// </returns>
    public static PriceDiscPolicyFindOrCreate newFromPriceDiscResultFields(PriceDiscResultFields _priceDiscResultFields)
    {
        PriceDiscPolicyFindOrCreate priceDiscPolicyFindOrCreate = PriceDiscPolicyFindOrCreate::construct();
        priceDiscPolicyFindOrCreate.parmPriceDiscResultFields(_priceDiscResultFields);
        priceDiscPolicyFindOrCreate.init();
        return priceDiscPolicyFindOrCreate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>