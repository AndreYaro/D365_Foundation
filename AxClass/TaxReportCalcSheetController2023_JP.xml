<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportCalcSheetController2023_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class TaxReportCalcSheetController2023_JP extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        #ISOCountryRegionCodes

        super();

        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
            [#isoJP, GlobalizationConstants::FeatureReferenceJP00004]],
            funcName()
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        TaxReportIOutputParameters_JP taxReportParameters = this.parmArgs() ? this.parmArgs().caller() as TaxReportIOutputParameters_JP : null;

        if (!taxReportParameters)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        TaxReportContract_JP contract = this.parmReportContract().parmRdpContract() as TaxReportContract_JP;

        contract.initializeFromOutputParameters(taxReportParameters);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPrintSettings</Name>
				<Source><![CDATA[
    public boolean showPrintSettings()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        SRSPrintDestinationSettings printSetting  = this.parmReportContract().parmPrintSettings();
        ISrsReportFileFormatContract fileFormatContract = this.parmReportContract().parmRdpContract() as ISrsReportFileFormatContract;
        SrsReportFileFormatControllerHelper::setPrintMedium(printSetting, fileFormatContract.parmFileFormat(), this.parmReportName());

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromArguments</Name>
				<Source><![CDATA[
    internal static TaxReportCalcSheetController2023_JP newFromArguments(Args _args)
    {
        TaxReportIOutputParameters_JP taxReportParameters = _args ? _args.caller() as TaxReportIOutputParameters_JP : null;

        if (!taxReportParameters)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        TaxReportCalcSheetController2023_JP controller = new TaxReportCalcSheetController2023_JP();

        controller.parmReportName(taxReportParameters.parmReportName());
        controller.parmShowDialog(false);
        controller.parmArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        TaxReportCalcSheetController2023_JP::newFromArguments(_args).startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>