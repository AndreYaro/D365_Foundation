<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceQualifiedInvoiceIssuerParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is being used to populate Qualified Invoice Issuer(QII) parameters for JP RegF feature.
/// The parameters will then be used to add QII Number to the SalesInvoice.Report_JP and FreeTextInvoice.Report_JP reports
/// </summary>
public class CustInvoiceQualifiedInvoiceIssuerParameters
{
    TaxRegistration taxRegistration;
    NoYes ShowQIINumber = NoYes::No;
    NoYes ShowQIILabel = NoYes::No;
    TaxRegistrationNumber QIINumber;
    LogisticsPostalAddress postalAddress;
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(InvoiceType_JP _invoiceType = InvoiceType_JP::None)
    {
        CustFormletterParameters custFormletterParameters = CustFormletterParameters::find(false);

        switch (_invoiceType)
        {
            case InvoiceType_JP::FreeTextInvoice:
                if (!custFormletterParameters.PrintQIIFreeTextInvoice)
                {
                    return;
                }

                break;

            case InvoiceType_JP::SalesOrderInvoice:
                if (!custFormletterParameters.PrintQIIInvoice)
                {
                    return;
                }

                break;

            case InvoiceType_JP::ConsolidatedInvoice:
                if (!custFormletterParameters.PrintQIIConsolidatedInvoice_JP)
                {
                    return;
                }

                break;

            default:
                throw error(strFmt("@AccountsReceivable:InvoiceTypeInvalid", _invoiceType, funcName()));
        }

        this.ShowQIILabel = NoYes::Yes;

        postalAddress = DirParty::primaryPostalAddress(CompanyInfo::find().RecId);

        taxRegistration = TaxRegistration::categoryTaxRegistration(CompanyInfo::current(), 
                                                                    TaxRegistrationTypesList::QualifiedInvoiceIssuer,
                                                                    #isoJP,
                                                                    DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                                                    postalAddress.recId);

        if (taxRegistration.RecId)
        {
            this.QIINumber = taxRegistration.RegistrationNumber;
            this.ShowQIINumber = NoYes::Yes;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowQIINumber</Name>
				<Source><![CDATA[
    public NoYes parmShowQIINumber()
    {
        return this.ShowQIINumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQIINumber</Name>
				<Source><![CDATA[
    public TaxRegistrationNumber parmQIINumber()
    {
        return this.QIINumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowQIILabel</Name>
				<Source><![CDATA[
    public NoYes parmShowQIILabel()
    {
        return this.ShowQIILabel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>