<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPlanCopyReqRoute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqPlanCopyReqRoute</c> class copies routes of planned production orders from the source master plan version
/// to the target master plan version.
/// </summary>
class ReqPlanCopyReqRoute extends SysQueryInsertRecordSet
{
    int reqRouteDatasourceId;
    int reqPlanVersionDatasourceId;

    ReqPlanVersion reqPlanVersionFrom;
    ReqPlanVersion reqPlanVersionTo;

    private QueryBuildRange range;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>oprNumRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the range of the query on the <c>OprNum</c> field.
    /// </summary>
    /// <param name = "_rangeValue">The range value for the query.</param>
    public void oprNumRange(OprNum _rangeValue)
    {
        this.init();

        range.value(queryValue(_rangeValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    protected void initFieldMapping()
    {
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, ToDate), fieldStr(ReqRoute, ToDate));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, FromDate), fieldStr(ReqRoute, FromDate));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, OprPriority), fieldStr(ReqRoute, OprPriority));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, OprId), fieldStr(ReqRoute, OprId));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, RefId), fieldStr(ReqRoute, RefId));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, OprNum), fieldStr(ReqRoute, OprNum));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, RouteOprRefRecId), fieldStr(ReqRoute, RouteOprRefRecId));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, OprNumNext), fieldStr(ReqRoute, OprNumNext));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, ErrorPct), fieldStr(ReqRoute, ErrorPct));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, AccError), fieldStr(ReqRoute, AccError));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, Level), fieldStr(ReqRoute, Level));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, RouteRefRecId), fieldStr(ReqRoute, RouteRefRecId));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, ToTime), fieldStr(ReqRoute, ToTime));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, FromTime), fieldStr(ReqRoute, FromTime));
        this.mapField(reqRouteDatasourceId, fieldStr(ReqRoute, LinkType), fieldStr(ReqRoute, LinkType));

        this.mapField(reqPlanVersionDatasourceId, fieldStr(ReqPlanVersion, RecId), fieldStr(ReqRoute, PlanVersion));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected Query initQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsReqRoute = query.addDataSource(tableNum(ReqRoute));
        qbdsReqRoute.addRange(fieldNum(ReqRoute, PlanVersion)).value(queryValue(reqPlanVersionFrom.RecId));
        range = qbdsReqRoute.addRange(fieldNum(ReqRoute, OprNum));
        reqRouteDatasourceId = qbdsReqRoute.uniqueId();
        
        // Join required as literals are not supported
        QueryBuildDataSource qbdsReqPlanVersion = qbdsReqRoute.addDataSource(tableNum(ReqPlanVersion));
        qbdsReqPlanVersion.addRange(fieldNum(ReqPlanVersion, RecId)).value(queryValue(reqPlanVersionTo.RecId));
        reqPlanVersionDatasourceId = qbdsReqPlanVersion.uniqueId();

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    protected Common initTargetCursor()
    {
        ReqRoute reqRouteInsert;

        reqRouteInsert.skipDataMethods(true);
        reqRouteInsert.skipAosValidation(true);

        return reqRouteInsert;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromReqPlanVersions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a new instance of the <c>ReqPlanCopyReqRoute</c> class.
    /// </summary>
    /// <param name="_reqPlanVersionFrom">
    ///     The version of the source master plan.
    /// </param>
    /// <param name="_reqPlanVersionTo">
    ///     The version of the target master plan.
    /// </param>
    /// <returns>A new instance.</returns>
    public static ReqPlanCopyReqRoute newFromReqPlanVersions(ReqPlanVersion _reqPlanVersionFrom, ReqPlanVersion _reqPlanVersionTo)
    {
        ReqPlanCopyReqRoute instance = new ReqPlanCopyReqRoute();
        instance.reqPlanVersionFrom = _reqPlanVersionFrom;
        instance.reqPlanVersionTo = _reqPlanVersionTo;

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>