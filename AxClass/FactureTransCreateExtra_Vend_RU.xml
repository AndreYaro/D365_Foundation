<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FactureTransCreateExtra_Vend_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class FactureTransCreateExtra_Vend_RU extends FactureTransCreateExtra_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkTrans</Name>
				<Source><![CDATA[
        protected boolean checkTrans()
    {
        VendInvoiceJour tmp = jour;
        boolean         ret = super();

        return ret && ! FactureTrans_RU::existExtraLines(FactureModule_RU::Vend,
                                                         tmp.PurchId,
                                                         tmp.InvoiceId,
                                                         tmp.InvoiceDate,
                                                         tmp.NumberSequenceGroup,
                                                         tmp.InternalInvoiceId,
                                                         this.lineType());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTrans</Name>
				<Source><![CDATA[
        protected void initTrans()
    {
        VendInvoiceJour tmp = jour;

        super();

        factureTrans.InternalInvoiceId = tmp.InternalInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(FactureJourCreate_RU _facture,
                    RecId                _recId,
                    Qty                  _qty,
                    NoYes                _recalcTaxes)
    {
        super(_facture, _recId, _qty, _recalcTaxes);

        jour = VendInvoiceJour::findRecId(_recId, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
        public void setParameters(RecId _recId, Qty _qty, NoYes _recalcTaxes)
    {
        super(_recId, _qty, _recalcTaxes);
        jour = VendInvoiceJour::findRecId(_recId, true);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>