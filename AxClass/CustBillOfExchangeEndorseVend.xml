<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBillOfExchangeEndorseVend</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustBillOfExchangeEndorseVend</c> class is used to handle the business logic to endorse
/// customer bills of exchange to vendor.
/// </summary>
public class CustBillOfExchangeEndorseVend extends CustBillOfExchangeEndorsePost
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>custTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>CustTrans</c> buffer to endorse a bill of exchange.
    /// </summary>
    /// <returns>
    /// The <c>CustTrans</c> buffer.
    /// </returns>
    protected CustTrans custTrans()
    {
        CustTrans custTrans;

        return custTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ledger posting type to endorse customer bills of exchange to a vendor.
    /// </summary>
    /// <returns>
    /// The ledger posting type.
    /// </returns>
    protected LedgerPostingType postingType()
    {
        return LedgerPostingType::VendBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the status to endorse customer bills of exchange to a vendor.
    /// </summary>
    /// <returns>
    /// return status of BOE
    /// </returns>
    protected CustVendNegInstStatus status()
    {
        return CustVendNegInstStatus::Endorsed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateNow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Execute the business logic of endorsing customer bill of exchange to vendor.
    /// </summary>
    protected void updateNow()
    {
        LedgerPostingController         ledgerPostingController;

        if (this.validate())
        {
            if (this.initPostTrans())
            {
                ledgerPostingController = LedgerPostingController::newForLedgerPostingJournal(ledgerVoucher);

                if (ledgerPostingController)
                {
                    ledgerPostingController.getReference().parmTransDate(postingDate);
                }

                this.parmAmountCur(custBillOfExchangeJour.amountDrawn());
                this.parmCurrencyCode(custBillOfExchangeJour.currencyCode());

                this.postTrans(LedgerJournalACType::Vend,  LedgerDynamicAccountHelper::getDynamicAccountFromAccountNumber(vendAccount, LedgerJournalACType::Vend));
                this.postTrans(LedgerJournalACType::Ledger, CustLedgerAccounts::endorseLedgerDimension(custBillOfExchangeJour.CustAccount));
                this.endPostTrans();

                // update BillOfExchangeSeqNum and status of CustBillOfExchangeJour
                this.updateCustBillOfExchangeJour(custBillOfExchangeJour.BillOfExchangeId);
                // reread record for table buffer custBillOfExchangeJour after update
                custBillOfExchangeJour.reread();

                // insert endorse bill of exchange info
                this.insertCustBillOfExchangeJourExtensionJP(custBillOfExchangeJour.BillOfExchangeId);
                this.insertCustBillOfExchangeTrans(custBillOfExchangeJour);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the endorsement date to endorse customer bills of exchange to a vendor.
    /// </summary>
    /// <returns>
    /// true if the endorsement is valid; otherwise, false.
    /// </returns>
    protected boolean validate()
    {
        if (endorseDate > custBillOfExchangeJour.DueDate)
        {
            // You cannot endorse this bill of exchange because it has expired. Select a valid bill of exchange.
            return checkFailed("@GLS221471");
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a <c>VendTrans</c> record to endorse a bill of exchange.
    /// </summary>
    /// <returns>
    /// The <c>VendTrans</c> record.
    /// </returns>
    protected VendTrans vendTrans()
    {
        VendTrans   vendTrans;

        return vendTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>