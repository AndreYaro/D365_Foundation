<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceSimulatedPostProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendInvoiceSimulatedPostProcessor</c> class contains methods for simulated post of single and multiple invoices.
/// </summary>
internal final class VendInvoiceSimulatedPostProcessor
{
    private VendInvoiceInfoTable vendInvoiceInfoTable;
    private VendInvoiceSimulatedPostResult vendInvoiceSimulatedPostResult;
    private List simulatedPostResults;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static VendInvoiceSimulatedPostProcessor construct()
    {
        return new VendInvoiceSimulatedPostProcessor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>simulateMultipleInvoices</Name>
				<Source><![CDATA[
    internal void simulateMultipleInvoices(List _invoiceHeaders)
    {
        if (_invoiceHeaders.elements() == 0)
        {
            return;
        }

        simulatedPostResults = new List(Types::Class);
        ListEnumerator listEnumerator = _invoiceHeaders.getEnumerator();

        while (listEnumerator.moveNext())
        {
            vendInvoiceInfoTable = listEnumerator.current();

            VendInvoiceSimulatedPostInvoice vendInvoiceSimulatedPostInvoice = VendInvoiceSimulatedPostFactory::getVendInvoiceSimulatedPost(
                VendInvoiceSimulatedPostType::InitializePurchFormLetterInvoice);
            vendInvoiceSimulatedPostInvoice.initFromVendInvoiceInfoTable(vendInvoiceInfoTable);

            vendInvoiceSimulatedPostResult = vendInvoiceSimulatedPostInvoice.simulatePosting();

            this.logResult();
        }

        this.displayResults();
    }

]]></Source>
			</Method>
			<Method>
				<Name>simulateSingleInvoice</Name>
				<Source><![CDATA[
    internal void simulateSingleInvoice(PurchFormLetter_Invoice _purchFormLetter)
    {
        simulatedPostResults = new List(Types::Class);

        VendInvoiceSimulatedPostInvoiceFromController vendInvoiceSimulatedPostInvoiceFromController = VendInvoiceSimulatedPostFactory::getVendInvoiceSimulatedPost(
            VendInvoiceSimulatedPostType::SkipInitializePurchFormLetterInvoice);
        vendInvoiceSimulatedPostInvoiceFromController.initFromPurchFormLetterInvoice(_purchFormLetter);
        vendInvoiceInfoTable = vendInvoiceSimulatedPostInvoiceFromController.parmVendInvoiceInfoTable();

        vendInvoiceSimulatedPostResult = vendInvoiceSimulatedPostInvoiceFromController.simulatePosting();

        this.logResult();
        this.displayResults();
    }

]]></Source>
			</Method>
			<Method>
				<Name>logResult</Name>
				<Source><![CDATA[
    private void logResult()
    {
        VendInvoiceSimulatedPostResults::updateOrInsertResult(
            vendInvoiceInfoTable,
            vendInvoiceSimulatedPostResult);

        simulatedPostResults.addEnd(vendInvoiceSimulatedPostResult);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayResults</Name>
				<Source><![CDATA[
    private void displayResults()
    {
        VendInvoiceSimulatedPostResultsRenderer::newFromSimulatedPostResults(simulatedPostResults).displaySimulatedPostResults();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>