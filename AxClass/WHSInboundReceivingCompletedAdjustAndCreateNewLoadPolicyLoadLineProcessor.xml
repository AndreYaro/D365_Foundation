<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInboundReceivingCompletedAdjustAndCreateNewLoadPolicyLoadLineProcessor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInboundReceivingCompletedAdjustAndCreateNewLoadPolicyLoadLineProcessor</c> class 
/// is the implementation class for handling load line processing during inbound receiving completed
/// when delivery policy is set to AdjustAndCreateNewLoadForRemaining.
/// </summary>
[WHSLoadDeliveryPolicyAttribute(WHSReceivingCompletedLoadDeliveryPolicy::AdjustAndCreateNewLoadForRemaining)]
internal final class WHSInboundReceivingCompletedAdjustAndCreateNewLoadPolicyLoadLineProcessor extends WHSInboundReceivingCompletedLoadLineProcessor
{
    private WHSInboundLoadFromLoadCreator inboundLoadFromLoadCreator;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyDeliveryPolicy</Name>
				<Source><![CDATA[
    protected boolean applyDeliveryPolicy(WHSLoadLine _loadLine, InventQty _receivedInventQuantityForLoadLine)
    {
        if (!this.validateLoadLineProcessing(_loadLine, _receivedInventQuantityForLoadLine))
        {
            return false;
        }

        this.adjustLoadLineQtyAndCreateNewLoadLineForRemaining(_loadLine, _receivedInventQuantityForLoadLine);
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustLoadLineQtyAndCreateNewLoadLineForRemaining</Name>
				<Source><![CDATA[
    private void adjustLoadLineQtyAndCreateNewLoadLineForRemaining(WHSLoadLine _loadLine, InventQty _receivedInventQuantityForLoadLine)
    {
        Qty origQty = _loadLine.Qty;
        InventQty origInventQty = _loadLine.InventQty;
        
        this.adjustLoadLineQuantity(_loadLine, _receivedInventQuantityForLoadLine);

        Qty newQty = origQty - _loadLine.Qty;
        InventQty newInventQty = origInventQty - _loadLine.InventQty;

        boolean newLoadShouldBeCreatedForUnderReceivedQtyRemainder = newQty > 0 && newInventQty > 0;
        
        if (newLoadShouldBeCreatedForUnderReceivedQtyRemainder)
        {
            if (!inboundLoadFromLoadCreator)
            {
                inboundLoadFromLoadCreator = WHSInboundLoadFromLoadCreator::constructFromOrigLoad(this.parmLoad());
            }

            inboundLoadFromLoadCreator.addNewLoadLineWithNewQuantitiesFromOrigLoadLine(_loadLine, newQty, newInventQty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePostProcessing</Name>
				<Source><![CDATA[
    protected boolean validatePostProcessing()
    {
        return inboundLoadFromLoadCreator 
             ? inboundLoadFromLoadCreator.tryInsertNewLoadLines()
             : true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>