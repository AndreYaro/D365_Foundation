<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleEcoResProduct</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>NumberSeqModuleEcoResProduct</c> class contains the definition of the number sequences that
///    are needed in the Product Management area.
/// </summary>
public class NumberSeqModuleEcoResProduct extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates the number sequences for the product number.
    /// </summary>
    /// <remarks>
    ///    Detailed description of how to set up references for number sequences can be found in the
    ///    <c>loadModule</c> of the <c>NumberSeqApplicationModule</c> super class.
    /// </remarks>
    protected void loadModule()
    {
        NumberSeqDatatype   datatype =  NumberSeqDatatype::construct();

        /* Setup Product number */

        datatype.parmDatatypeId(extendedTypeNum(EcoResProductNumber));
        datatype.parmReferenceHelp(literalStr("@SYS301333"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);
        this.create(datatype);

        /* Constraint-based product configuration name */

        datatype.parmDatatypeId(extendedTypeNum(PCConstraintBasedConfigurationName));
        datatype.parmReferenceHelp(literalStr("@SYS304653"));
        datatype.parmConfigurationKeyId(configurationKeyNum(PC));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(5);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(2);
        this.create(datatype);

        // Setup item - barcode association id
        datatype.parmDatatypeId(extendedtypenum(EcoResProductBarcodeAssociationId));
        datatype.parmReferenceHelp(literalstr("@SCM:Help_NumberSeqModuleEcoResProduct_EcoResProductBarcodeAssociationId"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(5);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(3);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        datatype.parmWizardHighest(9999999999);

        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the product management number sequence module.
    /// </summary>
    /// <returns>
    ///    The Product Management number sequence module.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::EcoResProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleEcoResProduct), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>