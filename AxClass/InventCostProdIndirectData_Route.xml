<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCostProdIndirectData_Route</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventCostProdIndirectData_Route extends InventCostProdIndirectData
{
    Map            jobTypeRouteTransListMap;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmJobTypeRouteTransListMap</Name>
				<Source><![CDATA[
        public Map parmJobTypeRouteTransListMap(Map _jobTypeRouteTransListMap = jobTypeRouteTransListMap)
    {
        jobTypeRouteTransListMap = _jobTypeRouteTransListMap;

        return jobTypeRouteTransListMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        protected static InventCostProdIndirectData_Route construct()
    {
        return new InventCostProdIndirectData_Route();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newConsumptionFromLeanProductionFlow</Name>
				<Source><![CDATA[
        public static InventCostProdIndirectData newConsumptionFromLeanProductionFlow(
        PlanName                            _transRefId,        // Where do the transactions belong to
        DimensionDefault                    _defaultDimension,         // Which dimensions should be used for the posting
        InventSiteId                        _inventSiteId,      // From which site should the indirect factors be used
        Map                                 _jobTypeRouteTransListMap
        )
    {
        InventCostProdIndirectData_Route      prodIndirectData        = InventCostProdIndirectData_Route::construct();

        prodIndirectData.initReference(_transRefId,
                                       ProdTransRefType::ProductionFlow,
                                       NoYes::Yes,
                                       _inventSiteId,
                                       '',
                                       _defaultDimension);

        // For the production flow, no finished good item is set

        prodIndirectData.parmJobTypeRouteTransListMap(_jobTypeRouteTransListMap);

        return prodIndirectData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newConsumptionFromProdTable</Name>
				<Source><![CDATA[
        public static InventCostProdIndirectData newConsumptionFromProdTable(
        ProdRouteTrans      _prodRouteTrans,
        ProdTable           _prodTable,
        ProdJobType         _prodJobType
        )
    {
        InventCostProdIndirectData_Route       prodIndirectData          = InventCostProdIndirectData_Route::construct();
        Map                                    jobTypeRouteTransListMap  = new Map(Types::Enum, Types::Class);
        RecordSortedList                       routeTransList = new RecordSortedList(tablenum(ProdRouteTrans));

        // Set the reference
        prodIndirectData.initReference(_prodTable.ProdId,
                                       ProdTransRefType::Production,
                                       _prodTable.ProdStatus == ProdStatus::Completed ? NoYes::No : NoYes::Yes,
                                       _prodTable.inventDim().InventSiteId,
                                       _prodTable.InventTransId,
                                       _prodTable.DefaultDimension
                                       // <GEERU>
                                       , true
                                       , _prodRouteTrans.StornoPhysical_RU
                                       // </GEERU>
                                       );

        // No output based indirect cost for production route consumptions
        prodIndirectData.parmFinishedGood(_prodTable.ItemId);

        prodIndirectData.parmLevel(_prodTable.CollectRefLevel + 1);

        // Now build the map with the route consumptions
        routeTransList.sortOrder(fieldnum(ProdRouteTrans, RecId));
        routeTransList.ins(_prodRouteTrans, true);
        jobTypeRouteTransListMap.insert(_prodJobType.routeJobType(), routeTransList);

        prodIndirectData.parmJobTypeRouteTransListMap(jobTypeRouteTransListMap);

        return prodIndirectData;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>