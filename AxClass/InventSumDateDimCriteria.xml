<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumDateDimCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Calculates inventory sum on date based on a criteria.
/// </summary>
/// <remarks>
/// Criteria is stored in <c>InventDim</c> query build data source object.
/// </remarks>
class InventSumDateDimCriteria extends InventSumDateDim
{
    QueryBuildDataSource qbdsInventDim;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmQbdsInventDim</Name>
				<Source><![CDATA[
    public QueryBuildDataSource parmQbdsInventDim(QueryBuildDataSource _qbdsInventDim = qbdsInventDim)
    {
        qbdsInventDim = _qbdsInventDim;

        return qbdsInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventSum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects <c>InventSum</c> record that suits filter criteria.
    /// </summary>
    protected void selectInventSum()
    {
        InventDimParm inventDimParmLocal;

        inventDimParmLocal.ItemIdFlag = NoYes::Yes;

        Query q = InventSum::newQuery(null, itemId, null, inventDimParmLocal, null);

        InventSumDateDimCriteria::copyRangesForDatasource(qbdsInventDim, q.dataSourceTable(tableNum(InventDim)));

        QueryRun qr = new QueryRun(q);

        if (qr.next())
        {
            this.addInventSum(qr.get(tableNum(InventSum)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyRangesForDatasource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the ranges from the supplied _source <c>QueryBuildDataSource</c> object to the _destination <c>QueryBuildDataSource</c> object.
    /// </summary>
    /// <param name="_source">
    /// The <c>QueryBuildDataSource</c> object that the ranges should be copied from.
    /// </param>
    /// <param name="_destination">
    /// The <c>QueryBuildDataSource</c> object that the ranges should be copied to.
    /// </param>
    public static void copyRangesForDatasource(QueryBuildDataSource _source, QueryBuildDataSource _destination)
    {
        int             rangeNumber;

        if (_source.table() == _destination.table())
        {
            // Copy the ranges.
            for (rangeNumber = 1; rangeNumber <= _source.rangeCount(); rangeNumber++)
            {
                QueryBuildRange sourceRange = _source.range(rangeNumber);

                QueryBuildRange destinationRange = _destination.addRange(sourceRange.field());
                destinationRange.value(sourceRange.value());
                destinationRange.status(sourceRange.status());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new <c>InventSumDateDimCriteria</c> class instance.
    /// </summary>
    /// <param name="_perDate">
    /// Date to calculate on.
    /// </param>
    /// <param name="_itemId">
    /// Item identifier.
    /// </param>
    /// <param name="_qbdsInventDim">
    /// Filter criteria.
    /// </param>
    /// <returns>
    /// <c>InventSumDateDimCriteria</c> class instance.
    /// </returns>
    public static InventSumDateDimCriteria newParameters(TransDate _perDate, ItemId _itemId, QueryBuildDataSource _qbdsInventDim)
    {
        InventSumDateDimCriteria inventSumDateDimCriteria = new InventSumDateDimCriteria();

        inventSumDateDimCriteria.parmItemId(_itemId);
        inventSumDateDimCriteria.parmPerDate(_perDate);
        inventSumDateDimCriteria.parmQbdsInventDim(_qbdsInventDim);

        inventSumDateDimCriteria.init();

        return inventSumDateDimCriteria;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
