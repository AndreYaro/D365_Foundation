<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjForecastReduceVirtual</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjForecastReduceVirtual extends ProjForecastReduce
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkRemainingBudgetOnProject</Name>
				<Source><![CDATA[
        public boolean checkRemainingBudgetOnProject(ProjId _projId)
    {
        // Virtual reduction is temperarily reduce the forecast and will be returned in the same transaction
        // It won't check remaining budget
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reduceForecast</Name>
				<Source><![CDATA[
        public boolean reduceForecast(Qty _qty, Amount _amount,ForecastModelId  forecastModelId = '')
    {
        ProjForecastReductionHistory projForecastReductionHistory;

        // qty >0
        // remove the record in reduction history
        ttsbegin;

        select forupdate projForecastReductionHistory
            where projForecastReductionHistory.ProjTransId==this.parmProjTransId()
            &&    projForecastReductionHistory.QtyReduced == -_qty;
        if (projForecastReductionHistory)
        {
            projForecastReductionHistory.delete();
        }

        ttscommit;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnForecast</Name>
				<Source><![CDATA[
        public void returnForecast(Qty _qty, Amount _amount, ForecastModelId _modelId = '')
    {
        ProjForecastReductionHistory   projForecastReductionHistory;

        // qty>0
        projForecastReductionHistory.ProjTransId=this.parmProjTransId();
        projForecastReductionHistory.QtyReduced=-_qty;
        projForecastReductionHistory.ProjTransType = this.parmProjTransType();
        projForecastReductionHistory.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>