<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBillOfExchEndorseListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class of cust bill of exch endorse list page interaction.
/// </summary>
public class CustBillOfExchEndorseListPageInteraction extends ListPageInteraction
{
    ListPage                listPage;
    CustBillOfExchangeJour  custBillOfExchangeJour;

    boolean                 endorseToVendorEnabled;
    boolean                 vendOpenTransEnabled;
    boolean                 settledEndorsedBOEEnabled;
    boolean                 endorseReverseEnabled;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>setButtonEnabled</c> method to enable or disable the buttons upon record selection on
    /// the grid.
    /// </summary>
    /// <remarks>
    /// This method is called by the framework every time that a record is selected in the grid on the list
    /// page.
    /// </remarks>
    public void selectionChanged()
    {
        custBillOfExchangeJour = this.listPage().activeRecord(queryDataSourceStr(CustBillOfExchangeEndorseListPage, CustBillOfExchangeJour));

        super();

        this.setButtonEnabled(custBillOfExchangeJour.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables action pane buttons according to the active record data.
    /// </summary>
    /// <param name="hasRecord">
    /// true when the selected record is in list page; otherwise, false.
    /// </param>
    protected void setButtonEnabled(boolean hasRecord)
    {
        listPage = this.listPage();

        this.resetControlStatus();
        this.updateControlEnableStatus();

        // Update the enable status of button CustBillOfExchangeEndorseToVendor
        this.setEndorseToVendor(hasRecord && endorseToVendorEnabled);

        // Update the enable status of button CustBillOfExchangeEndorseReverse
        this.setEndorseReverse(hasRecord && endorseReverseEnabled);

        // Update the enable status of button CustBillOfExchangeSettledEndorsedBOE
        this.setSettledEndorsedBOE(hasRecord && settledEndorsedBOEEnabled);

        // Update the enable status of button Transactions
        this.setVendorInvoice(hasRecord && vendOpenTransEnabled);

        // Update the enable status of button VendOpenTrans
        this.setVendOpenTrans(hasRecord && vendOpenTransEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetControlStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reset the buttons enable status
    /// </summary>
    private void resetControlStatus()
    {
        endorseToVendorEnabled      = true;
        vendOpenTransEnabled        = true;
        settledEndorsedBOEEnabled   = true;
        endorseReverseEnabled       = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEndorseReverse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets button "Reverse endorsement" enable status
    /// </summary>
    /// <param name="_enabled">
    /// Enable or not
    /// </param>
    private void setEndorseReverse(boolean _enabled)
    {
        listPage.actionPaneControlEnabled(
            formControlStr(CustBillOfExchangeEndorseListPage, CustBillOfExchangeEndorseReverse),
            _enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEndorseToVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets button "Endorse to vendor" enable status
    /// </summary>
    /// <param name="_enabled">
    /// Enable or not
    /// </param>
    private void setEndorseToVendor(boolean _enabled)
    {
        listPage.actionPaneControlEnabled(
            formControlStr(CustBillOfExchangeEndorseListPage, CustBillOfExchangeEndorseToVendor),
            _enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSettledEndorsedBOE</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets button "Settle endorsed BOE" enable status
    /// </summary>
    /// <param name="_enabled">
    /// Enable or not
    /// </param>
    private void setSettledEndorsedBOE(boolean _enabled)
    {
        listPage.actionPaneControlEnabled(
            formControlStr(CustBillOfExchangeEndorseListPage, CustBillOfExchangeSettledEndorsedBOE),
            _enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendOpenTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets button "Settle vendor open transactions" enable status
    /// </summary>
    /// <param name="_enabled">
    /// Enable or not
    /// </param>
    private void setVendOpenTrans(boolean _enabled)
    {
        listPage.actionPaneControlEnabled(
            formControlStr(CustBillOfExchangeEndorseListPage, VendOpenTrans),
            _enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendorInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets button "Open vendor invoices" enable status
    /// </summary>
    /// <param name="_enabled">
    /// Enable or not
    /// </param>
    private void setVendorInvoice(boolean _enabled)
    {
        listPage.actionPaneControlEnabled(
            formControlStr(CustBillOfExchangeEndorseListPage, Transactions),
            _enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControlEnableStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the enable status base on selected records
    /// </summary>
    private void updateControlEnableStatus()
    {
        FormDataSource          formDataSource;
        CustBillOfExchangeJour  custBillOfExchangeJourLocal;
        VendAccount             vendAccount;
        VendAccount             vendAccountTmp;

        if (FormDataUtil::isFormDataSource(custBillOfExchangeJour))
        {
            formDataSource = FormDataUtil::getFormDataSource(custBillOfExchangeJour);

            for (custBillOfExchangeJourLocal = formDataSource.getFirst(true) ? formDataSource.getFirst(true) : formDataSource.cursor() ; custBillOfExchangeJourLocal; custBillOfExchangeJourLocal = formDataSource.getNext())
            {
                // This button(Endorse to vendor) should be enabled when all BOE are Drawn or Redrawn
                if (endorseToVendorEnabled &&
                    !(custBillOfExchangeJourLocal.Status == CustVendNegInstStatus::Drawn ||
                        custBillOfExchangeJourLocal.Status == CustVendNegInstStatus::Redrawn))
                {
                    endorseToVendorEnabled = false;
                }

                // These buttons should be enabled when all BOE are endorsed and all vendor account are same
                // Settle vendor open transactions
                // Inquire > Open vendor invoices
                if (vendOpenTransEnabled)
                {
                    if (custBillOfExchangeJourLocal.Status != CustVendNegInstStatus::Endorsed)
                    {
                        vendOpenTransEnabled = false;
                    }
                    else
                    {
                        vendAccountTmp = CustBillOfExchangeJourExtensionJP::findByBillOfExchangeId(custBillOfExchangeJourLocal.BillOfExchangeId).VendAccount;

                        if (!vendAccountTmp || (vendAccount && vendAccount != vendAccountTmp))
                        {
                            vendOpenTransEnabled = false;
                        }
                        else
                        {
                            vendAccount = vendAccountTmp;
                        }
                    }
                }

                // This button(Settle endorsed BOE) should be enabled when all BOE are endorsed and Due date < session date
                if (settledEndorsedBOEEnabled &&
                    !(custBillOfExchangeJourLocal.Status == CustVendNegInstStatus::Endorsed &&
                        DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) >= custBillOfExchangeJourLocal.DueDate))
                {
                    settledEndorsedBOEEnabled = false;
                }

                // This button(Reverse endorsement) should be enabled when the BOE is endorsed
                if (endorseReverseEnabled && custBillOfExchangeJourLocal.Status != CustVendNegInstStatus::Endorsed)
                {
                    endorseReverseEnabled = false;
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
