<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>StockTransferPriceCalcCostPrice_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>StockTransferPriceCalcCostPrice_IN</c> class performs calculation of the Cost price for Indian stock transfer.
/// </summary>
[StockTransferPriceCalcAttribute_IN(PriceType_IN::CostPrice)]
internal final class StockTransferPriceCalcCostPrice_IN extends StockTransferPriceCalc_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculatePrice</Name>
				<Source><![CDATA[
    protected StockTransferPrice_IN calculatePrice()
    {
        InventDimParm inventDimParmFinActive;
        InventDimGroupSetup::newItemId(inventTransferLine.itemId).inventDimParmActivefinancialInventory(inventDimParmFinActive);

        InventDim locInventDim = InventDim::findOrCreate(inventDim);

        InventDimParm inventDimParmFilledIn;
        inventDimParmFilledIn.initFromInventDim(locInventDim);

        InventDimParm inventDimParm = InventDimParm::andParms(inventDimParmFinActive, inventDimParmFilledIn);

        InventOnhand inventOnHand = InventOnhand::newParameters(inventTransferLine.ItemId, locInventDim, inventDimParm);

        InventSum inventSum = inventOnhand.inventSum();

        CostPrice costPrice;        

        if (inventSum)
        {
            costPrice = inventSum.costPricePcs();
        }

        if (!costPrice)
        {
            costPrice = InventTable::findCostPcsPrice(inventTransferLine.ItemId, locInventDim.InventDimId);
        }

        return StockTransferPrice_IN::construct(CurrencyExchangeHelper::price(costPrice, inventTransferLineIN.CurrencyCode), inventTransferLineIN.CurrencyCode);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>