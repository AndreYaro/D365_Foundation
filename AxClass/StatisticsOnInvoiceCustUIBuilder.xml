<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>StatisticsOnInvoiceCustUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>StatisticsOnInvoiceCustUIBuilder</c> class is a UI builder for statistics on invoices from customers calculation dialog.
/// </summary>
internal class StatisticsOnInvoiceCustUIBuilder extends SysOperationAutomaticUIBuilder
{
    private FormStringControl postingProfilesRecIdsControl;
    private FormStringControl custGroupIdsRecIdsControl;
    private const str PostingProfilesRecIdsControlName = 'postingProfilesRecIdsControl';
    private const str CustGroupIdsRecIdsControlName = 'custGroupIdsRecIdsControl';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    public void postBuild()
    {
        super();

        StatisticsOnInvoiceCustDataContract contract = this.dataContractObject();

        DialogField dialogFieldDateFrom = this.bindInfo().getDialogField(contract, methodStr(StatisticsOnInvoiceCustDataContract, parmDateFrom));
        dialogFieldDateFrom.fieldControl().mandatory(true);

        DialogField dialogFieldDateTo = this.bindInfo().getDialogField(contract, methodStr(StatisticsOnInvoiceCustDataContract, parmDateTo));
        dialogFieldDateTo.fieldControl().mandatory(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    public void postRun()
    {
        super();

        this.initPostingProfilesDialogField();
        this.initCustGroupIdsDialogField();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPostingProfilesDialogField</Name>
				<Source><![CDATA[
    private void initPostingProfilesDialogField()
    {
        DialogField postingProfilesField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(StatisticsOnInvoiceCustDataContract, parmPostingProfiles));
        postingProfilesField.registerOverrideMethod(
            methodStr(FormDateControl, lookup),
            methodStr(StatisticsOnInvoiceCustUIBuilder, postingProfilesLookup),
            this);
        postingProfilesField.lookupButton(FormLookupButton::Always);

        SysOperationDialog reportDialogBox = this.dialog();
        postingProfilesRecIdsControl = reportDialogBox.formRun().design().addControl(FormControlType::String, PostingProfilesRecIdsControlName);
        postingProfilesRecIdsControl.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingProfilesLookup</Name>
				<Source><![CDATA[
    private void postingProfilesLookup(FormStringControl _postingProfilesControl)
    {
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(CustLedger));
        QueryBuildFieldList qbfl = qbds.fields();
        qbfl.dynamic(false);
        qbfl.clearFieldList();
        qbfl.addField(fieldNum(CustLedger, PostingProfile));
        qbfl.addField(fieldNum(CustLedger, Name));

        container selectFields = [ tableNum(CustLedger), fieldNum(CustLedger, PostingProfile) ];

        SysLookupMultiSelectGrid::lookup(
            query,
            _postingProfilesControl,
            postingProfilesRecIdsControl,
            _postingProfilesControl,
            selectFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustGroupIdsDialogField</Name>
				<Source><![CDATA[
    private void initCustGroupIdsDialogField()
    {
        DialogField custGroupIdsField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(StatisticsOnInvoiceCustDataContract, parmCustGroupIds));
        custGroupIdsField.registerOverrideMethod(
            methodStr(FormDateControl, lookup),
            methodStr(StatisticsOnInvoiceCustUIBuilder, custGroupIdsLookup),
            this);
        custGroupIdsField.lookupButton(FormLookupButton::Always);

        SysOperationDialog reportDialogBox = this.dialog();
        custGroupIdsRecIdsControl = reportDialogBox.formRun().design().addControl(FormControlType::String, CustGroupIdsRecIdsControlName);
        custGroupIdsRecIdsControl.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>custGroupIdsLookup</Name>
				<Source><![CDATA[
    private void custGroupIdsLookup(FormStringControl _custGroupIdsControl)
    {
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(CustGroup));
        QueryBuildFieldList qbfl = qbds.fields();
        qbfl.dynamic(false);
        qbfl.clearFieldList();
        qbfl.addField(fieldNum(CustGroup, CustGroup));
        qbfl.addField(fieldNum(CustGroup, Name));

        container selectFields = [ tableNum(CustGroup), fieldNum(CustGroup, CustGroup) ];

        SysLookupMultiSelectGrid::lookup(
            query,
            _custGroupIdsControl,
            custGroupIdsRecIdsControl,
            _custGroupIdsControl,
            selectFields);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>