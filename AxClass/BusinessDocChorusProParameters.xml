<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocChorusProParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Table based Electronic document Chorus Pro related parameters.
/// </summary>
internal final class BusinessDocChorusProParameters implements BusinessDocChorusProIParameters
{
    private BusinessDocChorusProParameters_FR parametersTable;
    private BusinessDocChorusProAccessTokenCacheTable_FR accessTokenCacheTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getParametersTable</Name>
				<Source><![CDATA[
    private BusinessDocChorusProParameters_FR getParametersTable()
    {
        if (parametersTable.RecId == 0)
        {
            parametersTable = BusinessDocChorusProParameters_FR::find();
        }
        return parametersTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccessTokenCacheTable</Name>
				<Source><![CDATA[
    private BusinessDocChorusProAccessTokenCacheTable_FR getAccessTokenCacheTable()
    {
        if (accessTokenCacheTable.RecId == 0)
        {
            accessTokenCacheTable = BusinessDocChorusProAccessTokenCacheTable_FR::find();
        }
        return accessTokenCacheTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWebServiceURL</Name>
				<Source><![CDATA[
    public URL getWebServiceURL()
    {
        return this.getParametersTable().WebServiceURL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLoginServiceURL</Name>
				<Source><![CDATA[
    public URL getLoginServiceURL()
    {
        return this.getParametersTable().LoginServiceURL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getClientId</Name>
				<Source><![CDATA[
    public str getClientId()
    {
        return KeyVaultCertificateHelper::getManualSecretValue(this.getParametersTable().ClientIdKeyVaultRef);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getClientSecret</Name>
				<Source><![CDATA[
    public str getClientSecret()
    {
        return KeyVaultCertificateHelper::getManualSecretValue(this.getParametersTable().ClientSecretKeyVaultRef);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTechUserName</Name>
				<Source><![CDATA[
    public str getTechUserName()
    {
        return KeyVaultCertificateHelper::getManualSecretValue(this.getParametersTable().TechUserNameKeyVaultRef);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTechUserPassword</Name>
				<Source><![CDATA[
    public str getTechUserPassword()
    {
        return KeyVaultCertificateHelper::getManualSecretValue(this.getParametersTable().TechUserPasswordKeyVaultRef);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrePostInvoiceValidationEnabled</Name>
				<Source><![CDATA[
    public boolean isPrePostInvoiceValidationEnabled()
    {
        return this.getParametersTable().InvoicePrePostValidation == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccessToken</Name>
				<Source><![CDATA[
    public str getAccessToken()
    {
        return this.getAccessTokenCacheTable().getAccessToken();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccessTokenExpirationDateTime</Name>
				<Source><![CDATA[
    public utcdatetime getAccessTokenExpirationDateTime()
    {
        return this.getAccessTokenCacheTable().ExpirationDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccessToken</Name>
				<Source><![CDATA[
    public void setAccessToken(str _accessToken)
    {
        ttsbegin;
        var cacheTable = this.getAccessTokenCacheTable();
        cacheTable.selectForUpdate(true);
        cacheTable.editAccessToken(true, _accessToken);
        cacheTable.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccessTokenExpirationDateTime</Name>
				<Source><![CDATA[
    public void setAccessTokenExpirationDateTime(utcdatetime _expirationDateTime)
    {
        ttsbegin;
        var cacheTable = this.getAccessTokenCacheTable();
        cacheTable.selectForUpdate(true);
        cacheTable.ExpirationDateTime = _expirationDateTime;
        cacheTable.update();
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>