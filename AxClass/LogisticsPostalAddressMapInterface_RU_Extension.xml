<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsPostalAddressMapInterface_RU_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension class of class <c>LogisticsPostalAddressMapInterface</c>
/// </summary>
[ExtensionOf(classStr(LogisticsPostalAddressMapInterface))]
final class LogisticsPostalAddressMapInterface_RU_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clearAddressFields</Name>
				<Source><![CDATA[
    public void clearAddressFields(boolean _force)
    {
        next clearAddressFields(_force);
        LogisticsPostalAddressMapInterface::setSteadId(postalAddressMap, 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSteadId</Name>
				<Source><![CDATA[
    protected static void setSteadId(LogisticsPostalAddressMap _adressMap, RefRecId _steadId)
    {
        next setSteadId(_adressMap, _steadId);

        if (_adressMap.tableId == tableNum(LogisticsPostalAddress))
        {
            LogisticsPostalAddress logisticsPostalAddress = _adressMap;
            logisticsPostalAddress.SteadId_RU = _steadId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSteadIdFromLocation</Name>
				<Source><![CDATA[
	protected static RefRecId getSteadIdFromLocation(LogisticsPostalAddress _fromAddress)
    {
        next getSteadIdFromLocation(_fromAddress);

        return _fromAddress.SteadId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSteadIdFromMap</Name>
				<Source><![CDATA[
    protected static RefRecId getSteadIdFromMap(LogisticsPostalAddressMap _fromAddressMap)
    {
        next getSteadIdFromMap(_fromAddressMap);
        RefRecId ret;

        if (_fromAddressMap.tableId == tableNum(LogisticsPostalAddress))
        {
            ret = LogisticsPostalAddressMapInterface::getSteadIdFromLocation(_fromAddressMap as LogisticsPostalAddress);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findZipStead</Name>
				<Source><![CDATA[
    protected RefRecId findZipStead(RecId _zipCodeRecId)
    {
        next findZipStead(_zipCodeRecId);

        return LogisticsAddressSteadNumber_RU::findZip(_zipCodeRecId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSteadGNICode</Name>
				<Source><![CDATA[
    protected static void getSteadGNICode(LogisticsPostalAddress _logisticsPostalAddress, LogisticsAddressProperties_RU _logisticsAddressProperties)
    {
        next getSteadGNICode(_logisticsPostalAddress, _logisticsAddressProperties);

        LogisticsAddressSteadNumber_RU logisticsAddressSteadNumber;

        if (_logisticsPostalAddress.SteadId_RU && ! _logisticsAddressProperties.GniCode)
        {
            select firstonly GniCode from _logisticsAddressProperties
            exists join logisticsAddressSteadNumber
                where logisticsAddressSteadNumber.Properties == _logisticsAddressProperties.RecId &&
                      logisticsAddressSteadNumber.RecId      == _logisticsPostalAddress.SteadId_RU;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>