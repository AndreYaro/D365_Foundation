<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesSummary</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesSummary
extends SalesPurchSummary
{
    SalesSummaryFields  salesSummaryFields;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>areFieldsEqual</Name>
				<Source><![CDATA[
    public boolean areFieldsEqual(Common _orderTable, Common _summaryOrderTable, FieldId _fieldId)
    {
        SalesTable  salesTableLocal;
        SalesTable  summarySalesTableLocal;
        Common      orderTableLocal         = _orderTable;
        Common      summaryOrderTableLocal  = _summaryOrderTable;
        FieldId     fieldId                 = _fieldId;

        // Check if Brazilian extension table is being referenced
        // instead of SalesTable itself
        if (orderTableLocal.TableId == tableNum(SalesTable) &&
            SalesTable::getTableIdFromExt_BR(fieldId) == tableNum(SalesTable_BR))
        {
            fieldId = SalesTable::getFieldIdFromExt_BR(fieldId);

            salesTableLocal         = orderTableLocal;
            summarySalesTableLocal  = summaryOrderTableLocal;

            orderTableLocal = salesTableLocal.salesTable_BR();
            summaryOrderTableLocal = summarySalesTableLocal.salesTable_BR();
        }
        // <GTH>
        if (orderTableLocal.TableId == tableNum(SalesTable) &&
            SalesTable::getTableIdFromExt_BR(fieldId) == tableNum(SalesTableExtensionTH))
        {
            fieldId = SalesTable::getFieldIdFromExt_BR(fieldId);

            salesTableLocal         = orderTableLocal;
            summarySalesTableLocal  = summaryOrderTableLocal;

            orderTableLocal         = salesTableLocal.salesTableExtensionTH();
            summaryOrderTableLocal  = summarySalesTableLocal.salesTableExtensionTH();
        }
        // </GTH>

        return super(orderTableLocal, summaryOrderTableLocal, fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructSummaryFields</Name>
				<Source><![CDATA[
    protected void constructSummaryFields(DocumentStatus _documentStatus)
    {
        orderSummaryFields = SalesSummaryFields::construct(_documentStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumOrderTable_OrderId</Name>
				<Source><![CDATA[
    public fieldId fieldNumOrderTable_OrderId()
    {
        return fieldNum(SalesTable, SalesId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmSubLine_subId</Name>
				<Source><![CDATA[
    public fieldId fieldNumParmSubLine_subId()
    {
        return fieldNum(SalesParmSubLine, SubId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmTable_JournalRefRecId</Name>
				<Source><![CDATA[
    public fieldId fieldNumParmTable_JournalRefRecId()
    {
        return fieldNum(SalesParmSubTable, JournalRefRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmTable_OrderId</Name>
				<Source><![CDATA[
    public fieldId fieldNumParmTable_OrderId()
    {
        return fieldNum(SalesParmSubTable, OrigSalesId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmTable_ParmId</Name>
				<Source><![CDATA[
    public fieldId fieldNumParmTable_ParmId()
    {
        return fieldNum(SalesParmSubTable, ParmId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmTable_subId</Name>
				<Source><![CDATA[
    public fieldId fieldNumParmTable_subId()
    {
        return fieldNum(SalesParmSubTable, SubId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumParmTable_TableRefId</Name>
				<Source><![CDATA[
    public fieldId fieldNumParmTable_TableRefId()
    {
        return fieldNum(SalesParmSubTable, TableRefId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNumSalesPurchParmTable_JobStatus</Name>
				<Source><![CDATA[
    public fieldId fieldNumSalesPurchParmTable_JobStatus()
    {
        return fieldNum(SalesParmTable, ParmJobStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalRefRecId</Name>
				<Source><![CDATA[
    public SalesJournalLinkRefRecId journalRefRecId(Common  _salesParmSubTable)
    {
        SalesParmSubTable salesParmSubTable = _salesParmSubTable as SalesParmSubTable;
        return salesParmSubTable.JournalRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moduleAccount</Name>
				<Source><![CDATA[
    public int moduleAccount()
    {
        return enum2int(ModuleCustSales::Cust);
    }

]]></Source>
			</Method>
			<Method>
				<Name>moduleOrder</Name>
				<Source><![CDATA[
    public int moduleOrder()
    {
        return enum2int(ModuleCustSales::Sales);
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderId</Name>
				<Source><![CDATA[
    public SalesId orderId(Common _salesTable)
    {
        SalesTable salesTable = _salesTable as SalesTable;
        return salesTable.SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderTable</Name>
				<Source><![CDATA[
    public Common orderTable(Common _salesParmSubTable)
    {
        SalesParmSubTable salesParmSubTable = _salesParmSubTable as SalesParmSubTable;
        return salesParmSubTable.salesTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJobStatus</Name>
				<Source><![CDATA[
    public ParmJobStatus parmJobStatus()
    {
        return ParmJobStatus::Waiting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summarySalesId</Name>
				<Source><![CDATA[
    public SalesId summarySalesId(SalesId _summarySalesId = summaryOrderId)
    {
        summaryOrderId  = _summarySalesId;

        return summaryOrderId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumOrderTable</Name>
				<Source><![CDATA[
    public tableId tableNumOrderTable()
    {
        return tableNum(SalesTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumParentForSalesPurchParmTable_RU</Name>
				<Source><![CDATA[
    public tableId tableNumParentForSalesPurchParmTable_RU()
    {
        return orderSummaryFields.tableNumParentForSalesPurchParmTable_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumParmLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ID of the <c>SalesParmLine</c> table.
    /// </summary>
    /// <returns>
    /// The ID of the <c>SalesParmLine</c> table.
    /// </returns>
    public tableId tableNumParmLine()
    {
        return tableNum(SalesParmLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumParmSubLine</Name>
				<Source><![CDATA[
    public tableId tableNumParmSubLine()
    {
        return tableNum(SalesParmSubLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumParmTable</Name>
				<Source><![CDATA[
    public tableId tableNumParmTable()
    {
        return tableNum(SalesParmSubTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumSalesPurchParmTable</Name>
				<Source><![CDATA[
    public tableId tableNumSalesPurchParmTable()
    {
        return tableNum(SalesParmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableNumSalesPurchParmTable_RU</Name>
				<Source><![CDATA[
    public tableId tableNumSalesPurchParmTable_RU()
    {
        return orderSummaryFields.tableNumSalesPurchParmTable_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SalesSummary construct(
        AccountOrder    _accountOrder,
        ParmId          _parmId,
        SalesId         _sumSalesId,
        DocumentStatus  _documentStatus)
    {
        SalesSummary instance = SalesSummary::createSalesSummary(_accountOrder, _parmId, _sumSalesId, _documentStatus);
        
        if (!instance)
        {
            throw error(strFmt("@SYS19306",funcName()));
        }

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSalesSummary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the <c>SalesSummary</c> depending on the account order.
    /// </summary>
    /// <param name = "_accountOrder">The <c>AccountOrder</c> value.</param>
    /// <param name = "_parmId">The <c>ParmId</c> value.</param>
    /// <param name = "_sumSalesId">The <c>SalesId</c> value.</param>
    /// <param name = "_documentStatus">The <c>DomumentStatus</c> value.</param>
    /// <returns>An instance of the <c>SalesSummary</c> class.</returns>
    protected static SalesSummary createSalesSummary(
        AccountOrder    _accountOrder,
        ParmId          _parmId,
        SalesId         _sumSalesId,
        DocumentStatus  _documentStatus)
    {
        switch (_accountOrder)
        {
            case AccountOrder::None     :   return new SalesSummary_None   (_parmId, _sumSalesId, _documentStatus);
            case AccountOrder::Account  :   return new SalesSummary_Account(_parmId, _sumSalesId, _documentStatus);
            case AccountOrder::Order    :   return new SalesSummary_Order  (_parmId, _sumSalesId, _documentStatus);
            case AccountOrder::Auto     :   return new SalesSummary_Auto   (_parmId, _sumSalesId, _documentStatus);
            case AccountOrder::Journal  :   return new SalesSummary_Journal(_parmId, _sumSalesId, _documentStatus);
            
            default: return null;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>