<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferPrintDataProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventTransferPrintDataProvider</c> class is responsible for keeping the data that is needed
/// to print a Transfer Order report.
/// </summary>
public abstract class InventTransferPrintDataProvider implements SysPackable
{
    protected boolean isSomeThingPosted;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsSomeThingPosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets or gets the flag which determines if something has been posted during the transfer order update.
    /// </summary>
    /// <param name = "_isSomeThingPosted">The current flag to determine if something has been posted</param>
    /// <returns>True if any transfer order line has been posted; otherwise false.</returns>
    public boolean parmIsSomeThingPosted(boolean _isSomeThingPosted = isSomeThingPosted)
    {
        isSomeThingPosted = _isSomeThingPosted;

        return isSomeThingPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromUpdateType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and instantiates a <c>InventTransferPrintDataProvider</c> class based on the passed transfer order update type.
    /// </summary>
    /// <param name = "_updateType">The current update type used to determine what child class needs to be initialized.</param>
    /// <param name = "_packedDataProviderClass">A container with the packed instance of the <c>InventTransferPrintDataProvider</c> class.</param>
    /// <returns>An instance of <c>InventTransferPrintDataProvider</c> class</returns>
    public static InventTransferPrintDataProvider newFromUpdateType(InventTransferUpdateType _updateType, container _packedDataProviderClass)
    {
        InventTransferPrintAttribute printAttribute = new InventTransferPrintAttribute(_updateType);

        InventTransferPrintDataProvider dataProvider = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(InventTransferPrintDataProvider), printAttribute);

        if (!dataProvider)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        dataProvider.unpack(_packedDataProviderClass);

        return dataProvider;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>