<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlProcessProc</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>BudgetControlProcessProc</c> is a budget control stored procedure.
/// </summary>
[ExportMetadata(enumStr(BudgetControlSQLObjectType), BudgetControlSQLObjectType::StoredProcedure),
 ExportAttribute(identifierstr(Dynamics.AX.Application.BudgetControlISQLObject))]
internal final class BudgetControlProcessProc implements BudgetControlISQLObject
{
    private const str procName = 'BudgetControlProcessProc';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getName</Name>
				<Source><![CDATA[
    public str getName()
    {
        return procName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefinition</Name>
				<Source><![CDATA[
    public str getDefinition()
    {
        str sqlStatementText;

        sqlStatementText = @"

    CREATE PROCEDURE [BudgetControlProcessProc]
    (
         @PartitionId                   BIGINT
        ,@BudgetCheckGroup              BIGINT
        ,@ApplockTimeoutMs              INT = 120000
        ,@IsSerialize                   INT = 1
        ,@IsAnyRelieved                 INT = 1
        ,@IsDraftCleanUpRun             INT = 0
        ,@logErrorFl                    CHAR(1) = 'Y'
        ,@BudgetControlProcessingHeader BIGINT = 0
        ,@IsPurchYearEndProcess         INT
    )

    AS

    SET NOCOUNT ON

    -- declarations

    DECLARE  @SPName                    VARCHAR(126) = OBJECT_NAME(@@PROCID) -- the name of the stored proc
            ,@RetCode                   INT = 0
            ,@ErrorTrying               NVARCHAR(4000) -- string describing command that failed
            ,@Rowcount                  INT -- local variable for @@ROWCOUNT
            ,@Error_Number              INT -- from ERROR_NUMBER()
            ,@Error_Line                INT -- from ERROR_LINE()
            ,@Error_State               INT = 1 -- from ERROR_STATE()
            ,@Error_Severity            INT = 16 -- from ERROR_SEVERITY()
            ,@Error_Procedure           NVARCHAR(126) = OBJECT_NAME(@@PROCID) -- from ERROR_PROCEDURE()
            ,@ErrorMessage              NVARCHAR(4000) = N'' -- from ERROR_MESSAGE()
            ,@extendedErrorFl           CHAR(1) = 'Y'

            ,@_APPLOCKRESOURCE_Main                                 NVARCHAR(255)   = N'BudgetCheck_Main'

            ,@_RETCODE_IsFailure        INT = -1
            ,@_RETCODE_IsSuccess        INT = 0

            ,@BudgetControlProcessProcReturnCode INT = 0
            ,@BudgetControlProcessProcReturnMsg NVARCHAR(4000)
     ;

    BEGIN TRY

        IF @IsDraftCleanupRun = 0
          BEGIN

            SELECT @ErrorTrying = N'exec BudgetControlCheckBudgetProc ';

            EXEC @RetCode = [BudgetControlCheckBudgetProc]
                 @PartitionId                   = @PartitionId
                ,@BudgetCheckGroup              = @BudgetCheckGroup
                ,@ApplockTimeoutMs              = @ApplockTimeoutMs
                ,@IsSerialize                   = @IsSerialize
                ,@IsAnyRelieved                 = @IsAnyRelieved
                ,@logErrorFl                    = @logErrorFl
                ,@BudgetControlProcessingHeader = @BudgetControlProcessingHeader
                ,@ReturnCode = @BudgetControlProcessProcReturnCode OUTPUT
                ,@ReturnMsg = @BudgetControlProcessProcReturnMsg OUTPUT
                ,@IsPurchYearEndProcess = @IsPurchYearEndProcess
            ;
          END;

        ELSE -- @IsDraftCleanupRun = 1
          BEGIN

            SELECT @ErrorTrying = N'exec BudgetControlCleanUpDraftProc ';

            EXEC @RetCode = [BudgetControlCleanUpDraftProc]
                 @PartitionId                   = @PartitionId
                ,@BudgetCheckGroup              = @BudgetCheckGroup
                ,@ApplockTimeoutMs              = @ApplockTimeoutMs
                ,@IsSerialize                   = @IsSerialize
                ,@logErrorFl                    = @logErrorFl
                ,@ReturnCode                    = @BudgetControlProcessProcReturnCode OUTPUT
                ,@ReturnMsg                     = @BudgetControlProcessProcReturnMsg OUTPUT
            ;
          END;

    END TRY
    BEGIN CATCH
        SELECT   @Error_Number     = ERROR_NUMBER()
                ,@Error_Line       = ERROR_LINE()
                ,@Error_State      = ERROR_STATE()
                ,@Error_Severity   = ERROR_SEVERITY()
                ,@Error_Procedure  = ERROR_PROCEDURE()
                ,@ErrorMessage     = ERROR_MESSAGE();
        GOTO lblErrorTrap;
    END CATCH;

    --lblNormalTerm:

    SELECT  @ErrorTrying = @ErrorTrying + N'. ' + @BudgetControlProcessProcReturnMsg;

    SELECT @BudgetControlProcessProcReturnCode
          ,@ErrorTrying

    RETURN (@BudgetControlProcessProcReturnCode)

    -- error termination

    lblErrorTrap:

    BEGIN TRY -- make a best effort to release the applocks
        EXEC @RetCode = sp_releaseapplock
            @DBPrincipal = N'public'
            ,@Resource = @_APPLOCKRESOURCE_Main
            ,@LockOwner = N'Transaction'
        ;
    END TRY
    BEGIN CATCH
    END CATCH;
    
    SELECT  @ErrorTrying = @ErrorTrying + N'. ' + @BudgetControlProcessProcReturnMsg;

    SELECT @_RETCODE_IsFailure, @ErrorTrying;

    RETURN (@BudgetControlProcessProcReturnCode)
    ";

        return sqlStatementText;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>