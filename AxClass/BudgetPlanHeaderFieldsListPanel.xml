<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanHeaderFieldsListPanel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanHeaderFieldsListPanel</c> class supports a list panel for selecting headers
/// for the fields to be shown in the header of a budget planning template.
/// </summary>
public class BudgetPlanHeaderFieldsListPanel extends SysListPanel
{
    #Budget
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method overrides the abstract method of base class <c>SysListPanel</c>.
    /// </summary>
    /// <param name="data">
    /// A data container.
    /// </param>
    public void addData(container data)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the items for the left and right lists of the list panel.
    /// </summary>
    /// <returns>
    /// A container with the items to add to both the left and right lists of the list panel.
    /// </returns>
    public container getData()
    {
        container selectedData, availableData;

        // List of header columns that are supported in the template.
        availableData += [[tableStr(BudgetPlanHeader) + '.' + fieldStr(BudgetPlanHeader, BudgetingOrganization), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, BudgetingOrganization))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.' + fieldStr(BudgetPlanHeader, BudgetPlanningProcess), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, BudgetPlanningProcess))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, BudgetPlanningStage), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, BudgetPlanningStage))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, BudgetPlanPreparer), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, BudgetPlanPreparer))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, DocumentNumber), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, DocumentNumber))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, DocumentStatus), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, DocumentStatus))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, BudgetPlanPriority), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, BudgetPlanPriority))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, IsHistorical), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, IsHistorical))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, Name), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, Name))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, Rank), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, Rank))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, WorkflowStatus), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, WorkflowStatus))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, ModifiedDateTime), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, ModifiedDateTime))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, ModifiedBy), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, ModifiedBy))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, CreatedDateTime), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, CreatedDateTime))]];
        availableData += [[tableStr(BudgetPlanHeader) + '.'  + fieldStr(BudgetPlanHeader, CreatedBy), fieldId2pname(tableNum(BudgetPlanHeader), fieldNum(BudgetPlanHeader, CreatedBy))]];

        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method overrides the abstract method of base class <c>SysListPanel</c>.
    /// </summary>
    /// <param name="data">
    /// A data container.
    /// </param>
    public void removeData(container data)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>sortMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called by the system to determine how the items should be sorted.
    /// </summary>
    /// <returns>
    /// The type of sort on the list.
    /// </returns>
    protected FormListSort sortMethod()
    {
        // NoSort is used because the other values in FormListSort enum do not allow the 'Move Up' and
        // 'Move Down' buttons to rearrange the order of the rows.
        return FormListSort::NoSort;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes a new instance of the <c>BudgetPlanHeaderFieldsListPanel</c> class.
    /// </summary>
    /// <param name="_formRun">
    /// The form that will contain the list panel controls.
    /// </param>
    /// <param name="_parentId">
    /// The form control that will contain list panel controls.
    /// </param>
    /// <returns>
    /// An instance of the <c>BudgetPlanHeaderFieldsListPanel</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static BudgetPlanHeaderFieldsListPanel newForm(FormRun _formRun, int _parentId)
    {
        BudgetPlanHeaderFieldsListPanel listPanel;

        listPanel = new BudgetPlanHeaderFieldsListPanel();
        listPanel.parmFormRun(_formRun);
        listPanel.parmParentId(_parentId);
        listPanel.parmCaptionAvailable("@SYS30545");
        listPanel.parmCaptionSelected("@SYS5965");

        listPanel.parmHasAddAllButton(false);
        listPanel.parmHasRemoveAllButton(false);
        listPanel.parmHasUpDownButton(true);

        listPanel.build();

        return listPanel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>