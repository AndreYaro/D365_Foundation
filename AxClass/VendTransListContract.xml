<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTransListContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendTransListContract</c> class is the data contract class for the
/// <c>VendTransList</c>Microsoft SQL Server Reporting Services report.
/// </summary>
[DataContractAttribute]
public class VendTransListContract
{
    TransactionViewMode includeTransactions;
    boolean includeReversed;
    boolean settlementDetails;
    ExchAdjustment exchangeRates;
    boolean showReportingCurrency = false;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmExchangeRates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ExchangeRates.
    /// </summary>
    /// <param name="_exchangeRates">
    /// The new value of the datacontract parameter ExchangeRates; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ExchangeRates
    /// </returns>
    [
        DataMemberAttribute('ExchangeRates'),
        SysOperationLabelAttribute(literalstr("@SYS4996")),
        SysOperationHelpTextAttribute(literalstr("@SYS4996"))
    ]
    public ExchAdjustment parmExchangeRates(ExchAdjustment _exchangeRates = exchangeRates)
    {
        exchangeRates = _exchangeRates;
        return exchangeRates;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeReversed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter IncludeReversed.
    /// </summary>
    /// <param name="_includeReversed">
    /// The new value of the datacontract parameter IncludeReversed; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter IncludeReversed
    /// </returns>
    [
        DataMemberAttribute('IncludeReversed'),
        SysOperationLabelAttribute(literalstr("@SYS78625")),
        SysOperationHelpTextAttribute(literalstr("@SYS78627"))
    ]
    public boolean parmIncludeReversed(boolean _includeReversed = includeReversed)
    {
        includeReversed = _includeReversed;
        return includeReversed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter IncludeTransactions.
    /// </summary>
    /// <param name="_includeTransactions">
    /// The new value of the datacontract parameter IncludeTransactions; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter IncludeTransactions
    /// </returns>
    [
        DataMemberAttribute('IncludeTransactions'),
        SysOperationLabelAttribute(literalstr("@SYS71862")),
        SysOperationHelpTextAttribute(literalstr("@SYS16236"))
    ]
    public TransactionViewMode parmIncludeTransactions(TransactionViewMode _includeTransactions = includeTransactions)
    {
        includeTransactions = _includeTransactions;
        return includeTransactions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettlementDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter SettlementDetails.
    /// </summary>
    /// <param name="_settlementDetails">
    /// The new value of the datacontract parameter settlementDetails; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter settlementDetails
    /// </returns>
    [
        DataMemberAttribute('SettlementDetails'),
        SysOperationLabelAttribute(literalstr("@SYS86575")),
        SysOperationHelpTextAttribute(literalstr("@SYS83499"))
    ]
    public boolean parmSettlementDetails(boolean _settlementDetails = settlementDetails)
    {
        settlementDetails = _settlementDetails;
        return settlementDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowReportingCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hidden parameter for reporting currency column visibility.
    /// </summary>
    /// <param name = "_showReportingCurrency">
    /// boolean value.
    /// </param>
    /// <returns>
    /// Returns True if the current ledger's reporting currency is not blank and it is not same as accounting currency.
    /// </returns>
    [
        DataMemberAttribute('ShowReportingCurrency'),
        SysOperationControlVisibilityAttribute(false)
    ]
    public boolean parmShowReportingCurrency(boolean _showReportingCurrency = showReportingCurrency)
    {
        if (Ledger::reportingCurrency() && Ledger::accountingCurrency() != Ledger::reportingCurrency())
        {
            showReportingCurrency = true;
        }
        else
        {
            showReportingCurrency = _showReportingCurrency;
        }

        return showReportingCurrency;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>