<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailBusinessPartnerCreateProspectExtensions</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailBusinessPartnerCreateProspectExtensions</c> class is used to provide extensibility to Retail Business Partner Create Prospect.
/// </summary>
public class RetailBusinessPartnerCreateProspectExtensions
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preCreateProspect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point in <c>RetailBusinessPartnerCreateProspectProcessor</c> run before the prospect created.
    /// </summary>
    /// <param name = "operation">B2B create prospect contract.</param>
    [Replaceable]
    public static void preCreateProspect(RetailBusinessPartnerOperation operation)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>postCreateProspect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point in <c>RetailBusinessPartnerCreateProspectProcessor</c> run after the prospect created.
    /// </summary>
    /// <param name = "operation">B2B create prospect contract.</param>
    /// <param name = "prospect">smmBusRelTable object.</param>
    /// <param name = "b2bProspect">RetailSmmBusRelTable object.</param>
    [Replaceable]
    public static void postCreateProspect(RetailBusinessPartnerOperation operation, smmBusRelTable prospect, RetailSmmBusRelTable b2bProspect)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>findExistingPartyRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point in <c>RetailBusinessPartnerCreateProspectProcessor</c> to find the existing party ID by the prospect email.
    /// The return value of this method is used to determine whether to create a new or use an existing party for the prospect email.
    /// Therefore, extending this method will impact the underlying party objet of the B2B customer account.
    /// </summary>
    /// <param name = "_email">Prospect email.</param>
    /// <returns>
    ///     The identifier of the party.
    /// </returns>
    [Replaceable]
    public static DirPartyRecId findExistingPartyRecId(Email _email)
    {
        DirPartyTable               party;
        LogisticsElectronicAddress  electronicAddress;

        // If customer is already existing in HQ with same emailId which is passed as new prospect request's emailID
        // Change the behavior to only lookup for person.
        select firstonly RecId from party
                join electronicAddress
                    where party.InstanceRelationType == tableNum(DirPerson)
                    && electronicAddress.RecId == party.PrimaryContactEmail
                    && electronicAddress.Locator == _email;

        return party.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>