<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSDataEntityHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSDataEntityHelper</c> class contains the utility methods for data entities.
/// </summary>
internal static class WHSDataEntityHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>markEmptyDataEntityFieldAsNotSetForUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks data entity field as not set if it is empty.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context</param>
    /// <param name = "_dataEntityFieldId">Data entity field id.</param>
    /// <param name = "_targetTableFieldId">Target table field id.</param>
    [Hookable(false)]
    internal static void markEmptyDataEntityFieldAsNotSetForUpdate(
        DataEntityRuntimeContext           _entityCtx,
        DataEntityDataSourceRuntimeContext _dataSourceCtx,
        FieldId                            _dataEntityFieldId,
        FieldId                            _targetTableFieldId)
    {
        Common dataEntityRecord = _entityCtx.getEntityRecord();

        if (!dataEntityRecord.(_dataEntityFieldId) &&
            dataEntityRecord.isFieldSet(_dataEntityFieldId) &&
           (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert ||
            _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update))
        {
            // Data entity field value will not be copied into target table field
            dataEntityRecord.fieldState(_dataEntityFieldId, FieldState::NotSet);

            if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
            {
                Common targetTableRecord = _dataSourceCtx.getBuffer();

                // Workaround for the SysTableExtension framework, target table field will not be defaulted
                targetTableRecord.fieldState(_targetTableFieldId, FieldState::Set);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>