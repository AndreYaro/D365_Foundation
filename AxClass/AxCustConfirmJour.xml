<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCustConfirmJour</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AxCustConfirmJour</c> class handles the business logic for the <c>CustConfirmJour</c> table.
/// </summary>
/// <remarks>
///    This internal <c>AxBC</c> class is derived from the <c>AxInternalBase</c> Class
/// </remarks>
class AxCustConfirmJour extends AxApplicationBase
{
    CustConfirmJour custConfirmJour;

    str             county;
    str             state;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the original record of the <c>CustConfirmJour</c> table.
    /// </summary>
    /// <returns>
    ///    The <c>CustConfirmJour</c> record.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the buffer for the <c>CustConfirmJour</c> table.
    /// </summary>
    /// <param name="_custConfirmJour">
    ///    The <c>CustConfirmJour</c> buffer that is passed to this method; optional.
    /// </param>
    /// <returns>
    ///    The current record of the <c>CustConfirmJour</c> table.
    /// </returns>
    public Common currentRecord(Common _custConfirmJour = custConfirmJour)
    {
        if (!prmisDefault(_custConfirmJour))
        {
            super(_custConfirmJour);
            custConfirmJour = _custConfirmJour as CustConfirmJour;
        }
        else
        {
            super();
        }

        return custConfirmJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custConfirmJour</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an instance of the <c>CustConfirmJour</c> class.
    /// </summary>
    /// <param name="_custConfirmJour">
    ///    The <c>CustConfirmJour</c> value to set; optional.
    /// </param>
    /// <returns>
    ///    An instance of the <c>CustConfirmJour</c> class.
    /// </returns>
    public CustConfirmJour custConfirmJour(CustConfirmJour _custConfirmJour = custConfirmJour)
    {
        if (!prmisDefault(_custConfirmJour))
        {
            this.setCurrentRecordFromExternal(_custConfirmJour);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an empty record for the <c>CustConfirmJour</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record for the <c>CustConfirmJour</c> table.
    /// </returns>
    protected Common emptyRecord()
    {
        CustConfirmJour localCustConfirmJour;
        return localCustConfirmJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxCustConfirmJour</c> class.
    /// </summary>
    public void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CashDiscCode</c> parameter.
    /// </summary>
    /// <param name="_cashDiscCode">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CashDiscCode</c> parameter.
    /// </returns>
    public CustCashDiscCode parmCashDiscCode(CustCashDiscCode _cashDiscCode = '')
    {
        if (!prmisDefault(_cashDiscCode))
        {
            this.setField(fieldNum(CustConfirmJour, CashDiscCode), _cashDiscCode);
        }

        return custConfirmJour.CashDiscCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CashDiscPercent</c> parameter.
    /// </summary>
    /// <param name="_cashDiscPercent">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CashDiscPercent</c> parameter.
    /// </returns>
    public DiscPct parmCashDiscPercent(DiscPct _cashDiscPercent = 0)
    {
        if (!prmisDefault(_cashDiscPercent))
        {
            this.setField(fieldNum(CustConfirmJour, CashDiscPercent), _cashDiscPercent);
        }

        return custConfirmJour.CashDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ConfirmAmount</c> parameter.
    /// </summary>
    /// <param name="_confirmAmount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ConfirmAmount</c> parameter.
    /// </returns>
    public AmountCur parmConfirmAmount(AmountCur _confirmAmount = 0)
    {
        if (!prmisDefault(_confirmAmount))
        {
            this.setField(fieldNum(CustConfirmJour, ConfirmAmount), _confirmAmount);
        }

        return custConfirmJour.ConfirmAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ConfirmDate</c> parameter.
    /// </summary>
    /// <param name="_confirmDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ConfirmDate</c> parameter.
    /// </returns>
    public TransDate parmConfirmDate(TransDate _confirmDate = dateNull())
    {
        if (!prmisDefault(_confirmDate))
        {
            this.setField(fieldNum(CustConfirmJour, ConfirmDate), _confirmDate);
        }

        return custConfirmJour.ConfirmDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmDocNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ConfirmDocNum</c> parameter.
    /// </summary>
    /// <param name="_confirmDocNum">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ConfirmDocNum</c> parameter.
    /// </returns>
    public CustConfirmDocNum parmConfirmDocNum(CustConfirmDocNum _confirmDocNum = '')
    {
        if (!prmisDefault(_confirmDocNum))
        {
            this.setField(fieldNum(CustConfirmJour, ConfirmDocNum), _confirmDocNum);
        }

        return custConfirmJour.ConfirmDocNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ConfirmId</c> parameter.
    /// </summary>
    /// <param name="_confirmId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ConfirmId</c> parameter.
    /// </returns>
    public ConfirmId parmConfirmId(ConfirmId _confirmId = '')
    {
        if (!prmisDefault(_confirmId))
        {
            this.setField(fieldNum(CustConfirmJour, ConfirmId), _confirmId);
        }

        return custConfirmJour.ConfirmId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CostValue</c> parameter.
    /// </summary>
    /// <param name="_costValue">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CostValue</c> parameter.
    /// </returns>
    public SalesCostValue parmCostValue(SalesCostValue _costValue = 0)
    {
        if (!prmisDefault(_costValue))
        {
            this.setField(fieldNum(CustConfirmJour, CostValue), _costValue);
        }

        return custConfirmJour.CostValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CurrencyCode</c> parameter.
    /// </summary>
    /// <param name="_currencyCode">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CurrencyCode</c> parameter.
    /// </returns>
    public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;
        str         currencyCode;
        if (!prmisDefault(_currencyCode))
        {
            dictField = new DictField(tableNum(CustConfirmJour),fieldNum(CustConfirmJour,CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode,dictField);

            if (this.valueMappingInbound())
            {
                currencyCode = this.axCurrencyCode(_currencyCode);
            }

            if (currencyCode)
            {
                this.setField(fieldNum(CustConfirmJour, CurrencyCode), currencyCode);
            }
            else
            {
                this.setField(fieldNum(CustConfirmJour, CurrencyCode), _currencyCode);
            }
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(custConfirmJour.CurrencyCode);
        }
        else
        {
            return custConfirmJour.CurrencyCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CustGroup</c> parameter.
    /// </summary>
    /// <param name="_custGroup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CustGroup</c> parameter.
    /// </returns>
    public CustGroupId parmCustGroup(CustGroupId _custGroup = '')
    {
        if (!prmisDefault(_custGroup))
        {
            this.setField(fieldNum(CustConfirmJour, CustGroup), _custGroup);
        }

        return custConfirmJour.CustGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CustomerRef</c> parameter.
    /// </summary>
    /// <param name="_customerRef">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CustomerRef</c> parameter.
    /// </returns>
    public CustRef parmCustomerRef(CustRef _customerRef = '')
    {
        if (!prmisDefault(_customerRef))
        {
            this.setField(fieldNum(CustConfirmJour, CustomerRef), _customerRef);
        }

        return custConfirmJour.CustomerRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsExportOrder_IN</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CustomsExportOrder_IN</c> parameter.
    /// </summary>
    /// <param name="_customsExportOrder_IN">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>CustomsExportOrder_IN</c> parameter.
    /// </returns>
    public NoYesId parmCustomsExportOrder_IN(NoYes _customsExportOrder_IN = NoYes::No)
    {
        if (!prmisdefault(_customsExportOrder_IN))
        {
            this.setField(fieldnum(CustConfirmJour, CustomsExportOrder_IN), _customsExportOrder_IN);
        }

        return custConfirmJour.CustomsExportOrder_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[

    /// <summary>
    ///    Gets or sets the <c>DefaultDimension</c> parameter.
    /// </summary>
    /// <param name="_defaultDimension">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>DefaultDimension</c> parameter.
    /// </returns>
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.setField(fieldNum(CustConfirmJour, DefaultDimension), _defaultDimension);
        }

        return custConfirmJour.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DeliveryName</c> parameter.
    /// </summary>
    /// <param name="_deliveryName">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DeliveryName</c> parameter.
    /// </returns>
    public CustName parmDeliveryName(CustName _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(CustConfirmJour, DeliveryName), _deliveryName);
        }

        return custConfirmJour.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DeliveryPostalAddress</c> parameter.
    /// </summary>
    /// <param name="_deliveryPostalAddress">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>DeliveryPostalAddress</c> parameter.
    /// </returns>
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryPostalAddress = 0)
    {
        if (!prmisDefault(_deliveryPostalAddress))
        {
            this.setField(fieldNum(CustConfirmJour, DeliveryPostalAddress), _deliveryPostalAddress);
        }

        return custConfirmJour.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvMode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DlvMode</c> parameter.
    /// </summary>
    /// <param name="_dlvMode">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DlvMode</c> parameter.
    /// </returns>
    public str parmDlvMode(str _dlvMode = '')
    {
        DictField   dictField;
        str         dlvMode;
        if (!prmisDefault(_dlvMode))
        {
            dictField = new DictField(tableNum(CustConfirmJour),fieldNum(CustConfirmJour,DlvMode));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvMode,dictField,this.mapPolicy().xMLMapDlvMode());
                dlvMode = this.axDlvModeId(_dlvMode);
            }
            else
            {
                this.validateInboundString(_dlvMode,dictField);
            }
            if (dlvMode)
            {
                this.setField(fieldNum(CustConfirmJour, DlvMode), dlvMode);
            }
            else
            {
                this.setField(fieldNum(CustConfirmJour, DlvMode), _dlvMode);
            }
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvModeId(custConfirmJour.DlvMode);
        }
        else
        {
            return custConfirmJour.DlvMode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvTerm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DlvTerm</c> parameter.
    /// </summary>
    /// <param name="_dlvTerm">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DlvTerm</c> parameter.
    /// </returns>
    public str parmDlvTerm(str _dlvTerm = '')
    {
        DictField   dictField;
        str         dlvTerm;
        if (!prmisDefault(_dlvTerm))
        {
            dictField = new DictField(tableNum(CustConfirmJour),fieldNum(CustConfirmJour,DlvTerm));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvTerm,dictField,this.mapPolicy().xMLMapDlvTerm());
                dlvTerm = this.axDlvTermId(_dlvTerm);
            }
            else
            {
                this.validateInboundString(_dlvTerm,dictField);
            }
            if (dlvTerm)
            {
                this.setField(fieldNum(CustConfirmJour, DlvTerm), dlvTerm);
            }
            else
            {
                this.setField(fieldNum(CustConfirmJour, DlvTerm), _dlvTerm);
            }
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvTermId(custConfirmJour.DlvTerm);
        }
        else
        {
            return custConfirmJour.DlvTerm;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>EndDisc</c> parameter.
    /// </summary>
    /// <param name="_endDisc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>EndDisc</c> parameter.
    /// </returns>
    public SalesEndDiscAmount parmEndDisc(SalesEndDiscAmount _endDisc = 0)
    {
        if (!prmisDefault(_endDisc))
        {
            this.setField(fieldNum(CustConfirmJour, EndDisc), _endDisc);
        }

        return custConfirmJour.EndDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchRate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ExchRate</c> parameter.
    /// </summary>
    /// <param name="_exchRate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ExchRate</c> parameter.
    /// </returns>
    public CustExchRate parmExchRate(CustExchRate _exchRate = 0)
    {
        if (!prmisDefault(_exchRate))
        {
            this.setField(fieldNum(CustConfirmJour, ExchRate), _exchRate);
        }

        return custConfirmJour.ExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchRateSecondary</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ExchRateSecondary</c> parameter.
    /// </summary>
    /// <param name="_exchrateSecondary">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ExchRateSecondary</c> parameter.
    /// </returns>
    public ExchrateSecondary parmExchRateSecondary(ExchrateSecondary _exchrateSecondary = 0)
    {
        if (!prmisDefault(_exchrateSecondary))
        {
            this.setField(fieldNum(CustConfirmJour, ExchRateSecondary), _exchrateSecondary);
        }

        return custConfirmJour.ExchRateSecondary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>FixedDueDate</c> parameter.
    /// </summary>
    /// <param name="_fixedDueDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>FixedDueDate</c> parameter.
    /// </returns>
    public SalesFixedDueDate parmFixedDueDate(SalesFixedDueDate _fixedDueDate = dateNull())
    {
        if (!prmisDefault(_fixedDueDate))
        {
            this.setField(fieldNum(CustConfirmJour, FixedDueDate), _fixedDueDate);
        }

        return custConfirmJour.FixedDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InclTax</c> parameter.
    /// </summary>
    /// <param name="_inclTax">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InclTax</c> parameter.
    /// </returns>
    public InclTax parmInclTax(InclTax _inclTax = NoYes::No)
    {
        if (!prmisDefault(_inclTax))
        {
            this.setField(fieldNum(CustConfirmJour, InclTax), _inclTax);
        }

        return custConfirmJour.InclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyPosted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InterCompanyPosted</c> parameter.
    /// </summary>
    /// <param name="_interCompanyPosted">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InterCompanyPosted</c> parameter.
    /// </returns>
    public InterCompanyPosted parmInterCompanyPosted(NoYes _interCompanyPosted = NoYes::No)
    {
        if (!prmisDefault(_interCompanyPosted))
        {
            this.setField(fieldNum(CustConfirmJour, InterCompanyPosted), _interCompanyPosted);
        }

        return custConfirmJour.InterCompanyPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InvoiceAccount</c> parameter.
    /// </summary>
    /// <param name="_invoiceAccount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InvoiceAccount</c> parameter.
    /// </returns>
    public str parmInvoiceAccount(str _invoiceAccount = '')
    {
        DictField   dictField;
        str         invoiceAccount;
        if (!prmisDefault(_invoiceAccount))
        {
            dictField = new DictField(tableNum(CustConfirmJour),fieldNum(CustConfirmJour,InvoiceAccount));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_invoiceAccount,dictField,this.mapPolicy().xMLMapCustAccount());
                invoiceAccount = this.axCustAccount(_invoiceAccount);
            }
            else
            {
                this.validateInboundString(_invoiceAccount,dictField);
            }
            if (invoiceAccount)
            {
                this.setField(fieldNum(CustConfirmJour, InvoiceAccount), invoiceAccount);
            }
            else
            {
                this.setField(fieldNum(CustConfirmJour, InvoiceAccount), _invoiceAccount);
            }
        }

        if (this.valueMappingOutbound())
        {
            return this.axCustAccount(custConfirmJour.InvoiceAccount);
        }
        else
        {
            return custConfirmJour.InvoiceAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLanguageId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LanguageId</c> parameter.
    /// </summary>
    /// <param name="_languageId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LanguageId</c> parameter.
    /// </returns>
    public CustLanguageId parmLanguageId(CustLanguageId _languageId = '')
    {
        if (!prmisDefault(_languageId))
        {
            this.setField(fieldNum(CustConfirmJour, LanguageId), _languageId);
        }

        return custConfirmJour.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>OrderAccount</c> parameter.
    /// </summary>
    /// <param name="_orderAccount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>OrderAccount</c> parameter.
    /// </returns>
    public str parmOrderAccount(str _orderAccount = '')
    {
        DictField   dictField;
        str         orderAccount;
        if (!prmisDefault(_orderAccount))
        {
            dictField = new DictField(tableNum(CustConfirmJour),fieldNum(CustConfirmJour,OrderAccount));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_orderAccount,dictField,this.mapPolicy().xMLMapCustAccount());
                orderAccount = this.axCustAccount(_orderAccount);
            }
            else
            {
                this.validateInboundString(_orderAccount,dictField);
            }
            if (orderAccount)
            {
                this.setField(fieldNum(CustConfirmJour, OrderAccount), orderAccount);
            }
            else
            {
                this.setField(fieldNum(CustConfirmJour, OrderAccount), _orderAccount);
            }
        }

        if (this.valueMappingOutbound())
        {
            return this.axCustAccount(custConfirmJour.OrderAccount);
        }
        else
        {
            return custConfirmJour.OrderAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParmId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ParmId</c> parameter.
    /// </summary>
    /// <param name="_parmId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ParmId</c> parameter.
    /// </returns>
    public ParmId parmParmId(ParmId _parmId = '')
    {
        if (!prmisDefault(_parmId))
        {
            this.setField(fieldNum(CustConfirmJour, ParmId), _parmId);
        }

        return custConfirmJour.ParmId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Payment</c> parameter.
    /// </summary>
    /// <param name="_payment">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Payment</c> parameter.
    /// </returns>
    public CustPaymTermId parmPayment(CustPaymTermId _payment = '')
    {
        if (!prmisDefault(_payment))
        {
            this.setField(fieldNum(CustConfirmJour, Payment), _payment);
        }

        return custConfirmJour.Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchaseOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PurchaseOrder</c> parameter.
    /// </summary>
    /// <param name="_purchaseOrder">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PurchaseOrder</c> parameter.
    /// </returns>
    public CustPurchaseOrder parmPurchaseOrder(CustPurchaseOrder _purchaseOrder = '')
    {
        if (!prmisDefault(_purchaseOrder))
        {
            this.setField(fieldNum(CustConfirmJour, PurchaseOrder), _purchaseOrder);
        }

        return custConfirmJour.PurchaseOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Qty</c> parameter.
    /// </summary>
    /// <param name="_qty">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Qty</c> parameter.
    /// </returns>
    public SalesQty parmQty(SalesQty _qty = 0)
    {
        if (!prmisDefault(_qty))
        {
            this.setField(fieldNum(CustConfirmJour, Qty), _qty);
        }

        return custConfirmJour.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRoundOff</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>RoundOff</c> parameter.
    /// </summary>
    /// <param name="_roundOff">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>RoundOff</c> parameter.
    /// </returns>
    public RoundOff parmRoundOff(RoundOff _roundOff = 0)
    {
        if (!prmisDefault(_roundOff))
        {
            this.setField(fieldNum(CustConfirmJour, RoundOff), _roundOff);
        }

        return custConfirmJour.RoundOff;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesBalance</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SalesBalance</c> parameter.
    /// </summary>
    /// <param name="_salesBalance">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SalesBalance</c> parameter.
    /// </returns>
    public AmountCur parmSalesBalance(AmountCur _salesBalance = 0)
    {
        if (!prmisDefault(_salesBalance))
        {
            this.setField(fieldNum(CustConfirmJour, SalesBalance), _salesBalance);
        }

        return custConfirmJour.SalesBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SalesId</c> parameter.
    /// </summary>
    /// <param name="_salesId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SalesId</c> parameter.
    /// </returns>
    public SalesIdBase parmSalesId(SalesIdBase _salesId = '')
    {
        if (!prmisDefault(_salesId))
        {
            this.setField(fieldNum(CustConfirmJour, SalesId), _salesId);
        }

        return custConfirmJour.SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSumLineDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SumLineDisc</c> parameter.
    /// </summary>
    /// <param name="_sumLineDisc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SumLineDisc</c> parameter.
    /// </returns>
    public SalesSumLineDiscAmount parmSumLineDisc(SalesSumLineDiscAmount _sumLineDisc = 0)
    {
        if (!prmisDefault(_sumLineDisc))
        {
            this.setField(fieldNum(CustConfirmJour, SumLineDisc), _sumLineDisc);
        }

        return custConfirmJour.SumLineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSumMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SumMarkup</c> parameter.
    /// </summary>
    /// <param name="_sumMarkup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SumMarkup</c> parameter.
    /// </returns>
    public MarkupSumSales parmSumMarkup(MarkupSumSales _sumMarkup = 0)
    {
        if (!prmisDefault(_sumMarkup))
        {
            this.setField(fieldNum(CustConfirmJour, SumMarkup), _sumMarkup);
        }

        return custConfirmJour.SumMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSumTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SumTax</c> parameter.
    /// </summary>
    /// <param name="_sumTax">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SumTax</c> parameter.
    /// </returns>
    public TaxAmountCur parmSumTax(TaxAmountCur _sumTax = 0)
    {
        if (!prmisDefault(_sumTax))
        {
            this.setField(fieldNum(CustConfirmJour, SumTax), _sumTax);
        }

        return custConfirmJour.SumTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTriangulation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Triangulation</c> parameter.
    /// </summary>
    /// <param name="_triangulation">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Triangulation</c> parameter.
    /// </returns>
    public EUROTriangulation parmTriangulation(EUROTriangulation _triangulation = NoYes::No)
    {
        if (!prmisDefault(_triangulation))
        {
            this.setField(fieldNum(CustConfirmJour, Triangulation), _triangulation);
        }

        return custConfirmJour.Triangulation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVolume</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Volume</c> parameter.
    /// </summary>
    /// <param name="_volume">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Volume</c> parameter.
    /// </returns>
    public Volume parmVolume(Volume _volume = 0)
    {
        if (!prmisDefault(_volume))
        {
            this.setField(fieldNum(CustConfirmJour, Volume), _volume);
        }

        return custConfirmJour.Volume;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWeight</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Weight</c> parameter.
    /// </summary>
    /// <param name="_weight">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Weight</c> parameter.
    /// </returns>
    public Weight parmWeight(Weight _weight = 0)
    {
        if (!prmisDefault(_weight))
        {
            this.setField(fieldNum(CustConfirmJour, Weight), _weight);
        }

        return custConfirmJour.Weight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerSalesTaker</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>WorkerSalesTaker</c> parameter.
    /// </summary>
    /// <param name="_workerSalesTaker">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>WorkerSalesTaker</c> parameter.
    /// </returns>
    public SalesTaker parmWorkerSalesTaker(SalesTaker _workerSalesTaker = 0)
    {
        if (!prmisDefault(_workerSalesTaker))
        {
            this.setField(fieldNum(CustConfirmJour, WorkerSalesTaker), _workerSalesTaker);
        }

        return custConfirmJour.WorkerSalesTaker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CashDiscCode</c> field.
    /// </summary>
    protected void setCashDiscCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, CashDiscCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CashDiscPercent</c> field.
    /// </summary>
    protected void setCashDiscPercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, CashDiscPercent)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ConfirmAmount</c> field.
    /// </summary>
    protected void setConfirmAmount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, ConfirmAmount)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ConfirmDate</c> field.
    /// </summary>
    protected void setConfirmDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, ConfirmDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmDocNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ConfirmDocNum</c> field.
    /// </summary>
    protected void setConfirmDocNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, ConfirmDocNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ConfirmId</c> field.
    /// </summary>
    protected void setConfirmId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, ConfirmId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCostValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CostValue</c> field.
    /// </summary>
    protected void setCostValue()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, CostValue)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CurrencyCode</c> field.
    /// </summary>
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, CurrencyCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CustGroup</c> field.
    /// </summary>
    protected void setCustGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, CustGroup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustomerRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CustomerRef</c> field.
    /// </summary>
    protected void setCustomerRef()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, CustomerRef)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustomsExportOrder_IN</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CustomsExportOrder_IN</c> field.
    /// </summary>
    protected void setCustomsExportOrder_IN()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmJour, CustomsExportOrder_IN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[

    /// <summary>
    ///    Sets the value for the <c>DefaultDimension</c> field.
    /// </summary>
    protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, DefaultDimension)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DeliveryName</c> field.
    /// </summary>
    protected void setDeliveryName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, DeliveryName)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DeliveryPostalAddress</c> field.
    /// </summary>
    protected void setDeliveryPostalAddress()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, DeliveryPostalAddress)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record.
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method, so all the fields that are entity
    ///    specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldNum(CustConfirmJour, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvMode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DlvMode</c> field.
    /// </summary>
    protected void setDlvMode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, DlvMode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvTerm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DlvTerm</c> field.
    /// </summary>
    protected void setDlvTerm()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, DlvTerm)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEndDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>EndDisc</c> field.
    /// </summary>
    protected void setEndDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, EndDisc)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExchRate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ExchRate</c> field.
    /// </summary>
    protected void setExchRate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, ExchRate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExchRateSecondary</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ExchRateSecondary</c> field.
    /// </summary>
    protected void setExchRateSecondary()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, ExchRateSecondary)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFixedDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>FixedDueDate</c> field.
    /// </summary>
    protected void setFixedDueDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, FixedDueDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInclTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InclTax</c> field.
    /// </summary>
    protected void setInclTax()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, InclTax)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyPosted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InterCompanyPosted</c> field.
    /// </summary>
    protected void setInterCompanyPosted()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, InterCompanyPosted)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InvoiceAccount</c> field.
    /// </summary>
    protected void setInvoiceAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, InvoiceAccount)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLanguageId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LanguageId</c> field.
    /// </summary>
    protected void setLanguageId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, LanguageId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrderAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>OrderAccount</c> field.
    /// </summary>
    protected void setOrderAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, OrderAccount)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParmId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ParmId</c> field.
    /// </summary>
    protected void setParmId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, ParmId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPayment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Payment</c> field.
    /// </summary>
    protected void setPayment()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, Payment)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchaseOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PurchaseOrder</c> field.
    /// </summary>
    protected void setPurchaseOrder()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, PurchaseOrder)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Qty</c> field.
    /// </summary>
    protected void setQty()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, Qty)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRoundOff</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RoundOff</c> field.
    /// </summary>
    protected void setRoundOff()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, RoundOff)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesBalance</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SalesBalance</c> field.
    /// </summary>
    protected void setSalesBalance()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, SalesBalance)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SalesId</c> field.
    /// </summary>
    protected void setSalesId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, SalesId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSumLineDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SumLineDisc</c> field.
    /// </summary>
    protected void setSumLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, SumLineDisc)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSumMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SumMarkup</c> field.
    /// </summary>
    protected void setSumMarkup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, SumMarkup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSumTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SumTax</c> field.
    /// </summary>
    protected void setSumTax()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, SumTax)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Applies default values to fields of a table row.
    /// </summary>
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setConfirmId();
        this.setConfirmDate();
        this.setSalesId();
        this.setOrderAccount();
        this.setInvoiceAccount();
        this.setCustGroup();
        this.setPurchaseOrder();
        this.setDeliveryName();
        this.setDeliveryPostalAddress();
        this.setDlvTerm();
        this.setDlvMode();
        this.setPayment();
        this.setCashDiscCode();
        this.setCashDiscPercent();
        this.setInterCompanyPosted();
        this.setQty();
        this.setVolume();
        this.setWeight();
        this.setCostValue();
        this.setSumLineDisc();
        this.setSalesBalance();
        this.setSumMarkup();
        this.setEndDisc();
        this.setRoundOff();
        this.setConfirmAmount();
        this.setCurrencyCode();
        this.setExchRate();
        this.setWorkerSalesTaker();
        this.setSumTax();
        this.setDefaultDimension();
        this.setParmId();
        this.setConfirmDocNum();
        this.setExchRateSecondary();
        this.setTriangulation();
        this.setCustomerRef();
        this.setLanguageId();
        this.setInclTax();
        this.setFixedDueDate();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTriangulation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Triangulation</c> field.
    /// </summary>
    protected void setTriangulation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, Triangulation)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVolume</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Volume</c> field.
    /// </summary>
    protected void setVolume()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, Volume)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWeight</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Weight</c> field.
    /// </summary>
    protected void setWeight()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, Weight)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkerSalesTaker</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>WorkerSalesTaker</c> field.
    /// </summary>
    protected void setWorkerSalesTaker()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmJour, WorkerSalesTaker)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxCustConfirmJour</c> class.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>AxCustConfirmJour</c> class.
    /// </returns>
    public static AxCustConfirmJour construct()
    {
        return new AxCustConfirmJour();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCustConfirmJour</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>AxCustConfirmJour</c> class.
    /// </summary>
    /// <param name="_custConfirmJour">
    ///    An instance of the <c>AxCustConfirmJour</c> class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>AxCustConfirmJour</c> class.
    /// </returns>
    public static AxCustConfirmJour newCustConfirmJour(CustConfirmJour _custConfirmJour)
    {
        AxCustConfirmJour axCustConfirmJour = AxCustConfirmJour::construct();
        axCustConfirmJour.custConfirmJour(_custConfirmJour);

        return axCustConfirmJour;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>