<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchInstrumentation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchInstrumentation</c> class manages instrumentation in procurement code.
/// </summary>
internal class PurchInstrumentation extends TradeInstrumentation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static PurchInstrumentation construct()
    {
        return new PurchInstrumentation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInstrumentation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instrumentation object.
    /// </summary>
    /// <param name = "_context">The context of the measure.</param>
    /// <param name = "_contextInstanceId">The instance of the context of the measure.</param>
    /// <returns>An instance of the <c>PurchInstrumentation</c> class.</returns>
    internal static PurchInstrumentation newInstrumentation(
        TradeInstrumentationContext             _context, 
        TradeInstrumentationContextInstanceId   _contextInstanceId)
    {
        PurchInstrumentation instrumentation = PurchInstrumentation::construct();

        instrumentation.initialize(_context, _contextInstanceId);

        return instrumentation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeMeasure</Name>
				<Source><![CDATA[
    protected void writeMeasure(
        TradeInstrumentationContext     _context,
        str                             _contextInstanceId,
        TradeInstrumentationMeasureName _measureName,
        int64                           _measure,
        str                             _measureType)
    {
        Microsoft.Dynamics.Application.Instrumentation.ApplicationEventSource::EventWritePurchaseOrderDiagnostic(_context, _contextInstanceId, _measureName, _measure, _measureType);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>