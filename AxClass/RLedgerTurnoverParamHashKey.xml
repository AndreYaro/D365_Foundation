<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RLedgerTurnoverParamHashKey</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RLedgerTurnoverParamHashKey</c> handles creation of MD5-hash for a set of parameter values.
/// </summary>
class RLedgerTurnoverParamHashKey
{
    Map mapParamValues;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addParamValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a pair 'parameter name, parameter value' to an internal <c>Map</c>.
    /// </summary>
    /// <param name="_name">
    /// The name of the parameter.
    /// </param>
    /// <param name="_value">
    /// The value of the parameter.
    /// </param>
    public void addParamValue(str _name, str _value)
    {
        container value;

        if (mapParamValues.exists(_name))
        {
            value = mapParamValues.lookup(_name);
        }

        value += _value;

        mapParamValues.insert(_name, value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParamStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a set of parameter values as a string.
    /// </summary>
    /// <returns>
    /// The string containing all parameter values.
    /// </returns>
    public str getParamStr()
    {
        MapEnumerator   enumerator;
        Struct          struct = new Struct();

        enumerator = mapParamValues.getEnumerator();
        while (enumerator.moveNext())
        {
            struct.add(enumerator.currentKey(), con2Str(enumerator.currentValue(), '$'));
        }

        return struct.toString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapParamValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the internal <c>Map</c> containing parameter values.
    /// </summary>
    /// <returns>
    /// The internal <c>Map</c> containing parameter values.
    /// </returns>
    public Map mapParamValues()
    {
        return mapParamValues;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new()
    {
        mapParamValues = new Map(Types::String, Types::Container);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHash</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a hash key for a string.
    /// </summary>
    /// <param name="_paramStr">
    /// A string containing parameter values.
    /// </param>
    /// <returns>
    /// The hash key generated based upon the input string.
    /// </returns>
    public static HashKey getHash(str _paramStr)
    {
        HashKey                             hashKey;
        System.Security.Cryptography.MD5    md5;
        System.Text.Encoding                encoding;
        System.Byte[]                       hashBytes;
        InteropPermission                   permission = new InteropPermission(InteropKind::ClrInterop);

        permission.assert();

        md5         = System.Security.Cryptography.MD5::Create();
        encoding    = System.Text.Encoding::get_Default();
        hashBytes   = md5.ComputeHash(encoding.GetBytes(_paramStr));
        hashKey     = new System.Guid(hashBytes);

        CodeAccessPermission::revertAssert();

        return hashKey;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>