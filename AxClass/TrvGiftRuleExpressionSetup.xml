<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvGiftRuleExpressionSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TrvGiftRuleExpressionSetup extends TrvRuleExpressionSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmNumberOfGiftRecipients</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the number of gift recipients for a gift expense line.
    /// </summary>
    /// <param name="_companyId">
    ///    The company ID of the record.
    /// </param>
    /// <param name="_tableId">
    ///    The table ID of the record.
    /// </param>
    /// <param name="_recId">
    ///    The record ID of the expense line.
    /// </param>
    /// <returns>
    ///    The number of gift recipients.
    /// </returns>
    public TrvNumberOfGiftRecipients parmNumberOfGiftRecipients(
            CompanyId _companyId,
            TableId   _tableId,
            RecId     _recId)
    {
        TrvExpTransGuest     trvExpTransGuest;

        select count(RecId) from trvExpTransGuest where trvExpTransGuest.TrvExpTrans == _recId;
        return trvExpTransGuest.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainingGiftAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the amount for gifts not itemized to individual gift recipients.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID of the record.
    /// </param>
    /// <param name="_tableId">
    /// The <c>TrvExpTrans</c> table ID.
    /// </param>
    /// <param name="_recId">
    /// The record ID of the expense line record in the <c>TrvExpTrans</c> table.
    /// </param>
    /// <returns>
    /// The amount of the gift less the amount assigned to specific gift recipients.
    /// </returns>
    /// <remarks>
    /// This method is not used.
    /// </remarks>
    public TrvGiftAmountRemaining parmRemainingGiftAmount(CompanyId _companyId,
                                                                         TableId   _tableId,
                                                                         RecId     _recId)
    {
        TrvExpTrans             trvExpTrans;
        TrvExpTransGuest        trvExpTransGuest;
        TrvGiftAmountRemaining  amountRemaining = 0.0;

        if (_tableId != tableNum(TrvExpTrans))
        {
             // Unexpected table: %1
            throw error(strFmt("@SYS328858", tableId2name(_tableId)));
        }

        if (_recId == 0)
        {
            // Workflow context record id is zero.
            throw error("@SYS107964");
        }

        select firstonly AmountCurr, ExpType from trvExpTrans
            where trvExpTrans.RecId == _recId;

        if (trvExpTrans && trvExpTrans.ExpType == TrvExpType::Gift)
        {
            select sum(AmountCurr) from trvExpTransGuest where trvExpTransGuest.TrvExpTrans == _recId;
            amountRemaining = trvExpTrans.AmountCurr - trvExpTransGuest.AmountCurr;
        }

        return amountRemaining;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>