<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmaAgreementWizard</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SmaAgreementWizard extends SysWizard
{
    SalesTable              salesTable;
    SMAWizardCreateType     wizardCreateType;

    #localmacro.CurrentList
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>back</Name>
				<Source><![CDATA[
    public void back()
    {
        super();

        if (!formRun.prevPageOK())
        {
            this.back();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtons</Name>
				<Source><![CDATA[
    protected void enableButtons(boolean _setFocus = false)
    {
        super(_setFocus);

        backButton.saveRecord(false);
        nextButton.saveRecord(false);
        cancelButton.saveRecord(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
    public formName formName()
    {
        return formstr(SMAAgreementWizard);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formRun</Name>
				<Source><![CDATA[
    public FormRun formRun()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesTable</Name>
				<Source><![CDATA[
    public SalesTable getSalesTable()
    {
        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWizardCreateType</Name>
				<Source><![CDATA[
    public SMAWizardCreateType getWizardCreateType()
    {
        return wizardCreateType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    public void next()
    {
        super();

        if (!formRun.nextPageOK())
        {
            this.next();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesTable</Name>
				<Source><![CDATA[
    public void setSalesTable(SalesTable _salesTable)
    {
        salesTable = _salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTabsToSkip</Name>
				<Source><![CDATA[
    public void setTabsToSkip(boolean _skip, int _tabpage)
    {
        skipTab[_tabpage] = _skip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWizardCreateType</Name>
				<Source><![CDATA[
    public void setWizardCreateType(SMAWizardCreateType _wizardCreateType)
    {
        wizardCreateType = _wizardCreateType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SMAAgreementWizard construct()
    {
        return new SMAAgreementWizard();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        // Create agreement based on sales order
        return "@SYS102532";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        SMAAgreementWizard  smaAgreementWizard;
        FormRun callerForm;

        smaAgreementWizard = SMAAgreementWizard::newArgs(_args);
        if (smaAgreementWizard.prompt())
        {
            smaAgreementWizard.run();
            if (_args && _args.caller())
            {
                if (_args.caller().name() == formstr(SMAAgreementTable))
                {
                    _args.caller().refreshHeader();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newArgs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new <c>SMAAgreementWizard</c> instance from the given arguments.
    /// </summary>
    /// <param name="_args">
    ///    The given arguments to use to create the <c>SMAAgreementWizard</c> instance.
    /// </param>
    /// <returns>
    ///    The new <c>SMAAgreementWizard</c> instance.
    /// </returns>
    public static SMAAgreementWizard newArgs(Args _args)
    {
        SMAAgreementWizard      smaAgreementWizard;

        smaAgreementWizard = SMAAgreementWizard::construct();

        if (_args && _args.dataset() && _args.dataset() == tablenum(SalesTable))
        {
            smaAgreementWizard.setSalesTable(_args.record());
        }

        if (_args && _args.parmEnumType() && _args.parmEnumType() == enumnum(SMAWizardCreateType))
        {
            smaAgreementWizard.setWizardCreateType(_args.parmEnum());
        }

        return smaAgreementWizard;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>