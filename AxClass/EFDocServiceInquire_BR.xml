<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocServiceInquire_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class to provide a method to communicate to the inquire service
/// </summary>
public class EFDocServiceInquire_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inquire</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inquires status service based on parameters given
    /// Creates transport info and communicate
    /// </summary>
    /// <param name="_efDocServiceInquireParams">
    /// An <c>EFDocServiceInquireParams_BR</c> object with communication parameters
    /// </param>
    /// <param name="_transport">
    /// An <c>IEFDocMsgTransport</c> object with government web service communicator; optional.
    /// </param>
    /// <returns>
    /// An <c>EFiscalDocumentReturnInfo_BR</c> object filled with information retrieved from webservice
    /// </returns>
    public static EFiscalDocumentReturnInfo_BR inquire(EFDocServiceInquireParams_BR _efDocServiceInquireParams, IEFDocMsgTransport _transport = null)
    {
        IEFDocMsgTransport                  transport;
        EFDocMsg_ServiceInquire_BR          serviceInquireMessage;
        EFiscalDocumentReturnInfo_BR  returnInfo;

        serviceInquireMessage = new EFDocMsg_ServiceInquire_BR();

        if (!_transport)
        {
            transport = EFDocFactory_BR::construct().createServiceInquireTransport(_efDocServiceInquireParams);
        }
        else
        {
            transport = _transport;
        }

        returnInfo = serviceInquireMessage.inquire(_efDocServiceInquireParams, transport);

        return returnInfo;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>