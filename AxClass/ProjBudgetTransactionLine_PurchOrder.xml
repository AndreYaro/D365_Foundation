<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetTransactionLine_PurchOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjBudgetTransactionLine_PurchOrder</c> class is used to hold the budget transaction information associated with the purchase order line.
/// </summary>
class ProjBudgetTransactionLine_PurchOrder extends ProjBudgetTransactionLine
{
    PurchLine       purchLine;
    ProjCategoryId  projCategoryId;
    ProjId          projId;
    TransDate       transDate;
    CurrencyCode    costAmountCurrencyCode;
    CurrencyCode    salesAmountCurrencyCode;
    ProjTransIdBase projTransId;
    ProjActivityNumber  projActivityNumber;
    ProjLinePropertyId  linePropertyId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activityNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the project activity number of the transaction.
    /// </summary>
    /// <returns>
    /// The project activity number of the transaction.
    /// </returns>
    public ProjActivityNumber activityNumber()
    {
        return projActivityNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project category ID of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    The project category ID of the project budget transaction line.
    /// </returns>
    public ProjCategoryId categoryId()
    {
        return projCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the cost amount of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    A <c>CostAmount</c> extended data type value that represents the cost amount of the project budget
    ///    transaction line.
    /// </returns>
    public CostAmount costAmount()
    {
        return costAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmountCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the currency code of the cost amount of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    The currency code of the cost amount of the project budget transaction line.
    /// </returns>
    public CurrencyCode costAmountCurrencyCode()
    {
        return costAmountCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linePropertyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project Line Property ID of the transaction.
    /// </summary>
    /// <returns>
    ///    The project Line Property ID of the transaction.
    /// </returns>
    public ProjLinePropertyId linePropertyId()
    {
        return linePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>ProjBudgetTransactionLine_PurchOrder</c> class from the
    ///    purchase order line.
    /// </summary>
    /// <param name="_purchLine">
    ///    The <c>PurchLine</c> table buffer.
    /// </param>
    void new(PurchLine _purchLine)
    {
        super();
        purchLine               = _purchLine;
        projCategoryId          = purchLine.ProjCategoryId;
        costAmount              = purchLine.calcLineAmount(purchLine.PurchQty);
        projId                  = purchLine.ProjId;
        salesAmount             = CurrencyExchangeHelper::amount(purchLine.ProjSalesPrice * purchLine.PurchQty, purchLine.ProjSalesCurrencyId);
        transDate               = purchLine.DeliveryDate;
        costAmountCurrencyCode  = purchLine.CurrencyCode;
        salesAmountCurrencyCode = purchLine.ProjSalesCurrencyId;
        projTransId             = purchLine.ProjTransId;
        quantity                = purchLine.PurchQty;
        sourceDocumentLine      = purchLine.SourceDocumentLine;
        projActivityNumber      = purchLine.ActivityNumber;
        linePropertyId          = purchLine.ProjLinePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project ID of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    The project ID of the project budget transaction line.
    /// </returns>
    public ProjId projId()
    {
        return projId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the sales amount of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    The sales amount of the project budget transaction line.
    /// </returns>
    public SalesAmount salesAmount()
    {
        return salesAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmountCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the currency code of the sales amount of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    The currency code of the sales amount the sales amount of the project budget transaction line.
    /// </returns>
    public CurrencyCode salesAmountCurrencyCode()
    {
        return salesAmountCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction date of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    The transaction date of the project budget transaction line.
    /// </returns>
    public TransDate transDate()
    {
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction ID of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    The transaction ID of the project budget transaction line.
    /// </returns>
    public ProjTransIdBase transId()
    {
        return projTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction type of the project budget transaction line.
    /// </summary>
    /// <returns>
    ///    A <c>ProjTransType</c> enumeration value with the that represents the transaction type of the
    ///    project budget transaction line.
    /// </returns>
    public ProjTransType transType()
    {
        return ProjTransType::Item;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
