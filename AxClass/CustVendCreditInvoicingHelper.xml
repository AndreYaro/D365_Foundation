<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendCreditInvoicingHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustVendCreditInvoicingHelper</c> class provides helper methods for credit invoicing functionality.
/// </summary>
internal static class CustVendCreditInvoicingHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkTaxInvoiceOperation_ID</Name>
				<Source><![CDATA[
    internal static boolean checkTaxInvoiceOperation_ID(
        ReasonRefRecID _reasonRefRecID,
        CustVendInvoiceJour _custVendInvoiceJour,
        boolean _throwError = true)
    {
        str errorTxt = '';

        if (FeatureStateProvider::isFeatureEnabled(TaxInvoiceSerialNumberGenerateIndonesiaFeature::instance()))
        {
            ReasonTable reasonTable = ReasonTable::find(ReasonTableRef::find(_reasonRefRecID).Reason);

            switch (reasonTable.TaxInvoiceOperation_ID)
            {
                case TaxInvoiceOperationType_ID::Cancelation:
                    switch (_custVendInvoiceJour.TableId)
                    {
                        case tableNum(CustInvoiceJour):
                            CustInvoiceJour custInvoiceJour = _custVendInvoiceJour;
                            if (custInvoiceJour && !custInvoiceJour.TaxInvoiceSalesId)
                            {
                                errorTxt = strFmt("@ApplicationSuite_Localization:InvoiceWithEmptyFieldCannotBeCanceled", fieldPName(CustInvoiceJour, TaxInvoiceSalesId));
                            }
                            break;

                        case tableNum(ProjInvoiceJour) :
                            ProjInvoiceJour projInvoiceJour = _custVendInvoiceJour;
                            if (projInvoiceJour && !projInvoiceJour.TaxInvoiceSalesId_ID)
                            {
                                errorTxt = strFmt("@ApplicationSuite_Localization:InvoiceWithEmptyFieldCannotBeCanceled", fieldPName(ProjInvoiceJour, TaxInvoiceSalesId_ID));
                            }
                            break;

                        default:
                            break;
                    }
                    break;

                case TaxInvoiceOperationType_ID::Replacement:
                    switch (_custVendInvoiceJour.TableId)
                    {
                        case tableNum(CustInvoiceJour):
                            CustInvoiceJour custInvoiceJour = _custVendInvoiceJour;

                            if (custInvoiceJour && !custInvoiceJour.TaxInvoiceSalesId)
                            {
                                errorTxt = strFmt("@ApplicationSuite_Localization:InvoiceWithEmptyFieldCannotBeReplaced", fieldPName(CustInvoiceJour, TaxInvoiceSalesId));
                            }

                            if (custInvoiceJour && !errorTxt)
                            {
                                CustVendCreditInvoicingJour custVendCreditInvoicingJour;
                                ReasonTableRef reasonTableRef;
                                ReasonTable reasonTableCancel;

                                select firstonly RecId from custVendCreditInvoicingJour
                                    where custVendCreditInvoicingJour.InvoiceTableId == custInvoiceJour.TableId
                                        && custVendCreditInvoicingJour.CorrectedInvoiceRecId == custInvoiceJour.RecId
                                exists join reasonTableRef
                                    where reasonTableRef.RecId == custVendCreditInvoicingJour.ReasonRefRecID
                                exists join reasonTableCancel
                                    where reasonTableCancel.Reason == reasonTableRef.Reason
                                        && reasonTableCancel.TaxInvoiceOperation_ID == TaxInvoiceOperationType_ID::Cancelation;

                                if (!custVendCreditInvoicingJour)
                                {
                                    errorTxt = "@ApplicationSuite_Localization:InvoiceCannotBeReplacedWithoutBeingCanceledFirst";
                                }
                            }
                            break;

                        case tableNum(ProjInvoiceJour):
                            errorTxt = "@ApplicationSuite_Localization:ItIsImpossibleToCreateReplacementOfProjectInvoice";
                            break;

                        default:
                            break;
                    }
                    break;

                default:
                    break;
            }
        }

        if (errorTxt && _throwError)
        {
            throw error(errorTxt);
        }

        return errorTxt ? checkFailed(errorTxt) : true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>