<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqCalcTaskControllerTryFetchSameNotEndedBundleFirstToggle</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqCalcTaskControllerTryFetchSameNotEndedBundleFirstToggle</c> class handles the flighting logic to
/// determine if we should first try to fetch previously found not ended bundle when checking for not ended bundles
/// in the <c>ReqCalcTaskController</c> class.
///
/// When fetching that way the unique RecId index is utilized. Thanks to that the query is not susceptible to issues when
/// ghost records are not cleaned up.
///
/// Moreover, when not ended bundle has not been previously found, the top bundle in the reverse order to the order
/// in which they are processed is selected. This is done so that we can later utilize the faster query for as long as possible.
/// For example, in case of the class <c>ReqCalcScheduleItemTable</c> this will find "Statistics" bundle at the beginning
/// of the run and that bundle will be only ended once all the other bundles are ended. This means,
/// the optimized query, that takes advantage of the RecId index, will be used throughout the run.
/// </summary>
internal final class ReqCalcTaskControllerTryFetchSameNotEndedBundleFirstToggle extends WHSEnabledByDefaultToggle
{
    private static ReqCalcTaskControllerTryFetchSameNotEndedBundleFirstToggle singleton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>ReqCalcTaskControllerTryFetchSameNotEndedBundleFirstToggle</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    static internal ReqCalcTaskControllerTryFetchSameNotEndedBundleFirstToggle instance()
    {
        if (!singleton)
        {
            singleton = new ReqCalcTaskControllerTryFetchSameNotEndedBundleFirstToggle();
        }

        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>