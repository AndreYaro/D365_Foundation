<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCalcTax_PurchConfirmationRequest</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Implementation of the PurchCalcTax class for the purchase order Confirmation request.
/// </summary>
class       PurchCalcTax_PurchConfirmationRequest
extends     PurchCalcTax_PurchOrder
{
    PurchConfirmationRequestJour      purchConfirmationRequestJour;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the exchange rate from the current <c>PurchConfirmationRequestJour</c> record.
    /// </summary>
    /// <param name="_date">
    /// Date for the exchange rate; defaults dateNull(). Parameter is not actually used; it is there because parent class enforces it.
    /// </param>
    /// <returns>
    /// The <c>ExchRate</c> field value.
    /// </returns>
    public VendExchRate exchRate(date _date = dateNull())
    {
        return purchConfirmationRequestJour.ExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRateSecondary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the secondary exchange rate from the current <c>PurchConfirmationRequestJour</c> record.
    /// </summary>
    /// <param name="_date">
    /// Date for the exchange rate; defaults dateNull(). Parameter is not actually used; it is there because parent class enforces it.
    /// </param>
    /// <returns>
    /// The <c>ExchRateSecondary</c> field value.
    /// </returns>
    public ExchrateSecondary exchRateSecondary(date _date = dateNull())
    {
        return purchConfirmationRequestJour.ExchRateSecondary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportingCurrencyExchangeRate</Name>
				<Source><![CDATA[
    internal ReportingCurrencyExchRate reportingCurrencyExchangeRate(date _date = dateNull())
    {
        return 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCursor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes cursor used to select <c>PurchLine</c> records.
    /// </summary>
    public void initCursor()
    {
        select nofetch forupdate purchLine
            where purchLine.PurchId == purchConfirmationRequestJour.getPurchaseOrderId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new(PurchConfirmationRequestJour _purchConfirmationRequestJour)
    {
        PurchTableVersion purchTableVersion;

        super(_purchConfirmationRequestJour);

        purchConfirmationRequestJour = _purchConfirmationRequestJour;
        purchTable                   = purchConfirmationRequestJour.purchTable();
        purchTableVersion            = PurchTableVersion::find(purchConfirmationRequestJour.PurchTableVersion);
        update                       = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>triangulation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>Triangulation</c> enum value of the current <c>PurchConfirmationRequestJour</c> record.
    /// </summary>
    /// <param name="_date">
    /// Date; defaults to dateNull(). Parameter is not actually used; it is there because parent class enforces it.
    /// </param>
    /// <returns>
    /// The <c>EUROTriangulation</c> enum value.
    /// </returns>
    public EUROTriangulation triangulation(date _date = dateNull())
    {
        return purchConfirmationRequestJour.Triangulation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSubLedgerJournalLines</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Determines whether the current transaction to post supports the <c>SubLedgerDistributions</c> or
    /// <c>SubLedgerJournalLines</c> records.
    /// </summary>
    /// <returns>
    /// The boolean value of false.
    /// </returns>
    public boolean useSubLedgerJournalLines()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates instance of <c>PurchCalcTax_PurchConfirmationRequest</c> class.
    /// </summary>
    /// <param name="_purchConfirmationRequestJour">
    /// The record for which tax will be calculated.
    /// </param>
    /// <returns>
    /// Instance of <c>PurchCalcTax_PurchConfirmationRequest</c> class.
    /// </returns>
    public static PurchCalcTax_PurchConfirmationRequest construct(PurchConfirmationRequestJour _purchConfirmationRequestJour )
    {
        return new PurchCalcTax_PurchConfirmationRequest(_purchConfirmationRequestJour);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>