<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanProdFlowStatusAction_Approve</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LeanProdFlowStatusAction_Approve</c> class approves production flows.
/// </summary>
public class LeanProdFlowStatusAction_Approve extends LeanProdFlowStatusAction implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>approve</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the plan status.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void approve()
    {
        ttsbegin;
        Plan planLocal = Plan::find(this.plan().RecId,true);
        planLocal.Status = PlanStatus::Approved;
        planLocal.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a caption string.
    /// </summary>
    /// <returns>
    /// The caption.
    /// </returns>
    public ClassDescription caption()
    {
        return "@SYS303292";
    }

]]></Source>
			</Method>
			<Method>
				<Name>leanPlanStatusAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the action that is performed by the class.
    /// </summary>
    /// <returns>
    ///    A <c>LeanPlanStatusAction</c> enumeration value.
    /// </returns>
    public LeanPlanStatusAction leanPlanStatusAction()
    {
        return LeanPlanStatusAction::Approve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runStatusAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the status action.
    /// </summary>
    /// <returns>
    /// true if the approval succeeds; otherwise, false.
    /// </returns>
    public boolean runStatusAction()
    {
        LeanProdFlowStatusAction_Validate leanProdFlowStatusAction_Validate = LeanProdFlowStatusAction_Validate::newLeanProductionFlow(leanProductionFlow);
        boolean result = leanProdFlowStatusAction_Validate.runStatusAction();

        if (result)
        {
            this.approve();
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the input parameters.
    /// </summary>
    /// <param name="_calledFrom">
    ///    An <c>Object</c> that represents the caller; optional.
    /// </param>
    /// <returns>
    ///    true if the validation succeeds; otherwise, false.
    /// </returns>
    public boolean validate(Object _calledFrom = null)
    {
        boolean result = this.plan().Status < PlanStatus::Approved;

        if (!result)
        {
            warning(strfmt("@SYS303293",this.plan().Status));
        }

        result =    super(_calledFrom)
                 && result;

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static LeanProdFlowStatusAction_Approve construct()
    {
        return new LeanProdFlowStatusAction_Approve();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLeanProductionFlow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new <c>LeanProdFlowStatusAction_Approve</c> object.
    /// </summary>
    /// <param name="_leanProductionFlow">
    ///    A <c>LeanProductionFlow</c> record to use to initialize the object.
    /// </param>
    /// <returns>
    ///    A new <c>LeanProdFlowStatusAction_Approve</c> object.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LeanProdFlowStatusAction_Approve newLeanProductionFlow(LeanProductionFlow _leanProductionFlow)
    {
        LeanProdFlowStatusAction_Approve    leanProdFlowStatusAction = LeanProdFlowStatusAction_Approve::construct();

        leanProdFlowStatusAction.parmLeanProductionFlow(_leanProductionFlow);

        return leanProdFlowStatusAction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>