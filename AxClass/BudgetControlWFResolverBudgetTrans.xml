<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlWFResolverBudgetTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetControlWFResolverBudgetTrans</c> class extends the <c>BudgetControlWFResolver</c>
///    class to resolve a <c>WorkflowContext</c> object to a set of primary ledger and source ledger
///    dimensions to be budget checked when the <c>WorkflowContext</c> object represents a
///    <c>BudgetTransactionHeader</c> record document.
/// </summary>
public class BudgetControlWFResolverBudgetTrans extends BudgetControlWFResolver
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the specified instance of the <c>WorkflowContext</c> class into a set of primary ledger
    ///    and source ledger dimension combinations to be budget checked.
    /// </summary>
    /// <param name="_context">
    ///    The instance of the <c>WorkflowContext</c> class to process.
    /// </param>
    /// <exception cref="M:Exception::Error">
    ///    The workflow document must be <c>BudgetTransactionHeader</c>.
    /// </exception>
    protected void process(WorkflowContext _context)
    {
        BudgetTransactionHeader budgetTransactionHeader;
        BudgetTransactionLine budgetTransactionLine;

        if (_context.parmTableId() != tablenum(BudgetTransactionHeader))
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        while select LedgerDimension from budgetTransactionLine
            join PrimaryLedger from budgetTransactionHeader
                where budgetTransactionHeader.RecId == budgetTransactionLine.BudgetTransactionHeader &&
                    budgetTransactionHeader.RecId == _context.parmRecId()
        {
            this.add(budgetTransactionHeader.PrimaryLedger, budgetTransactionLine.LedgerDimension);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>