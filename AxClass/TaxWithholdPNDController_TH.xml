<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdPNDController_TH</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Controller class for <c>InventStockCard</c> SSRS report.
/// </summary>
class TaxWithholdPNDController_TH extends SrsReportRunController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the contract instance with type <c>TaxWithholdPNDContract</c>.
    /// </summary>
    /// <returns>
    /// The contract instance with type <c>TaxWithholdPNDContract</c>.
    /// </returns>
    protected TaxWithholdPNDContract_TH getContract()
    {
        TaxWithholdPNDContract_TH  contract = this.parmReportContract().parmRdpContract() as TaxWithholdPNDContract_TH;

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the report name based on PND type.
    /// </summary>
    /// <param name="_PNDType">
    /// The PND type.
    /// </param>
    /// <returns>
    /// The report name.
    /// </returns>
    public str getReportName(TaxWithholdReportLayout_TH _PNDType)
    {
        switch (_PNDType)
        {
            case TaxWithholdReportLayout_TH::ThaiPND3:
                return ssrsReportStr(TaxWithholdPND_TH, DesignPND3);

            case TaxWithholdReportLayout_TH::ThaiPND53:
                return ssrsReportStr(TaxWithholdPND_TH, DesignPND53);

            default:
                return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        TaxWithholdPNDContract_TH      contract = this.getContract();
        TaxWithholdCommonContract_TH   commonContract = contract.parmCommonContract();

        super();

        contract.parmPNDType(this.parmArgs().parmEnum());
        if (!commonContract.parmFromDate())
        {
            commonContract.parmFromDate(dateNull());
        }

        if (!commonContract.parmToDate())
        {
            commonContract.parmToDate(maxDate());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceTH00006, funcName());

        TaxWithholdPNDController_TH controller = new TaxWithholdPNDController_TH();
        str reportName = controller.getReportName(_args.parmEnum());

        if (reportName != '')
        {
            controller.parmReportName(reportName);
            controller.parmArgs(_args);
            controller.startOperation();
        }
        else
        {
            throw error(strFmt('@SYS320346', '@SYS17666', _args.parmEnum()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>