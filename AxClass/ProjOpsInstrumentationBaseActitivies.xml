<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjOpsInstrumentationBaseActitivies</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjOpsInstrumentationBaseActitivies</c> class serves as the base class for
/// instrumenting all the activities in project management and accounting module. All derived activities should
/// extend/implement this class.
/// </summary>
public abstract class ProjOpsInstrumentationBaseActitivies
{
    protected ProjOpsInstrumentationLogger logger;
    protected str Prefix = 'ProjOps.';

    // Generic custom properties
    public static const str ProjOpsFeatureEnabled = 'ProjOpsIntegEnabled';
    public static const str MultipleContractLineFeatureEnabled = 'MultipleContractLineFeatureEnabled';
    public static const str Company = 'Company';
    public static const str RecIdProperty = 'RecId';
    public static const str TableIdProperty = 'TableId';

    public static const str ActionProperty = 'Action';
    public static const str ActualIdProperty = 'ActualId';
    public static const str ActualsImportIdProperty = 'ActualsImportId';
    public static const str ContractIdProperty = 'ContractId';
    public static const str ContractLineIdProperty = 'ContractLineId';
    public static const str ProjectIdProperty = 'ProjectId';
    public static const str TransIdProperty = 'TransId';
    public static const str InvoiceProposalIdProperty = 'InvoiceProposalId';
    public static const str TaskIdProperty = 'TaskId';
    public static const str FundingSourceIdProperty = 'FundingSourceId';
    public static const str CategoryIdProperty = 'CategoryId';
    public static const str RoleIdProperty = 'RoleId';
    public static const str CallStackProperty = 'CallStack';
    public static const str IsBatch = 'IsBatch';
    public static const str HierarchyIdProperty = 'HierarchyId';
    public static const str PredecessorsProperty = 'Predecessors';

    internal static const str TransIdRefProperty = 'TransIdRef';
    internal static const str AdjRefTransIdProperty = 'AdjRefTransId';
    internal static const str TransactionOriginProperty = 'TransactionOrigin';
    internal static const str TransTypeProperty = 'TransType';
    internal static const str VoucherProperty = 'Voucher';
    internal static const str JournalNameProperty = 'JournalName';
    internal static const str JournalIdProperty = 'JournalId';
    internal static const str QtyProperty = 'Qty';
    internal static const str IsOpenProperty = 'IsOpen';
    internal static const str SourceDocumentLineProperty = 'SourceDocumentLine';
    internal static const str JournalListCountProperty = 'JournalListCount';
    internal static const str JournalNewListCountProperty = 'JournalNewListCount';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds new activity context for the given activity name.
    /// </summary>
    /// <param name = "_activityName">Activity name</param>
    /// <returns>Instrumentation activity context object</returns>
    internal SysInstrumentationActivityContext activityContext(str _activityName = '')
    {
        return logger.activityContext(this.activity(_activityName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds activity object for the given activity name.
    /// </summary>
    /// <param name = "_activityName">Activity name</param>
    /// <returns>Instrumentation activity object</returns>
    internal SysInstrumentationActivity activity(str _activityName = '')
    {
        return logger.activity(Prefix + _activityName);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>