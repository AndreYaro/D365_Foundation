<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProductionOrderReleasedBusinessEventContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract for a <c>ProductionOrderReleasedBusinessEvent</c>.
/// </summary>
[DataContract]
public final class ProductionOrderReleasedBusinessEventContract extends BusinessEventsContract
{
    private LegalEntityDataAreaId legalEntity;
    private ProdId productionOrderNumber;
    private str productionOrderType;
    private DateTimeExecuted productionOrderReleaseDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromProductionOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>ProductionOrderReleasedBusinessEventContract</c>.
    /// </summary>
    /// <param name = "_prodTable">The <c>ProdTable</c> record that has been released.</param>
    /// <param name = "_prodParmRelease">The <c>ProdParmRelease</c> record that holds criteria for the release.</param>
    /// <returns>An instance of <c>ProductionOrderReleasedBusinessEventContract</c>.</returns>
    public static ProductionOrderReleasedBusinessEventContract newFromProductionOrder(ProdTable _prodTable, ProdParmRelease _prodParmRelease)
    {
        ProductionOrderReleasedBusinessEventContract contract = new ProductionOrderReleasedBusinessEventContract();
        contract.initialize(_prodTable, _prodParmRelease);

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntity</Name>
				<Source><![CDATA[
    [DataMember('LegalEntity'), BusinessEventsDataMember("@SCM:LegalEntity")]
    public LegalEntityDataAreaId parmLegalEntity(LegalEntityDataAreaId _legalEntity = legalEntity)
    {
        legalEntity = _legalEntity;

        return legalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductionOrderNumber</Name>
				<Source><![CDATA[
    [DataMember("ProductionOrderNumber"), BusinessEventsDataMember("@SCM:ProductionOrderNumber")]
    public ProdId parmProductionOrderNumber(ProdId _productionOrderNumber = productionOrderNumber)
    {
        productionOrderNumber = _productionOrderNumber;

        return productionOrderNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductionOrderType</Name>
				<Source><![CDATA[
    [DataMember("ProductionOrderType"), BusinessEventsDataMember("@SCM:ProductionOrderType")]
    public str parmProductionOrderType(str _productionOrderType = productionOrderType)
    {
        productionOrderType = _productionORderType;

        return productionOrderType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductionOrderReleaseDate</Name>
				<Source><![CDATA[
    [DataMember("ProductionOrderReleaseDate"), BusinessEventsDataMember("@SCM:ProductionOrderReleaseDate")]
    public DateTimeExecuted parmProductionOrderReleaseDate(DateTimeExecuted _productionOrderReleaseDate = productionOrderReleaseDate)
    {
        productionOrderReleaseDate = _productionOrderReleaseDate;

        return productionOrderReleaseDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(ProdTable _prodTable, ProdParmRelease _prodParmRelease)
    {
        legalEntity = _prodTable.DataAreaId;
        productionOrderNumber = _prodTable.ProdId;
        productionOrderType = enum2Symbol(enumNum(ProdType), _prodTable.ProdType);
        productionOrderReleaseDate = _prodTable.ReleasedDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>