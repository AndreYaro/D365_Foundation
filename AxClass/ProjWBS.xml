<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjWBS</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjWBS implements IProjWBS
{
   HierarchyIdBase     hierarchyId;
   IProjProject        project;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRootActivityRecId</Name>
				<Source><![CDATA[
   /// <summary>
   /// Get root activity by project Id.
   /// </summary>
   /// <param name = "_projId">Project Id.</param>
   /// <returns>Activity rec Id.</returns>
   public static RecId getRootActivityRecId(ProjId _projId)
   {
        ProjTable           projTable;
        HierarchyLinkTable  hierarchyLinkTable;
        smmActivities       smmActivities;
        HierarchyTreeTable  hierarchyTreeTable;

        select firstonly RecId from smmActivities
            exists join RecId from hierarchyTreeTable
            where hierarchyTreeTable.RefRecId == smmActivities.RecId
                    && hierarchyTreeTable.ParentElementNumber == ""
                exists join RecId from hierarchyLinkTable
                where hierarchyLinkTable.HierarchyId == hierarchyTreeTable.HierarchyId
                    exists join RecId from projTable
                    where projTable.RecId == hierarchyLinkTable.RefRecId
                            && projTable.TableId == hierarchyLinkTable.RefTableId
                            && projTable.ProjId == _projId;

        return smmActivities.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get hierarchy Id.
    /// </summary>
    /// <returns>Hierarchy Id.</returns>
    public HierarchyIdBase getId()
    {
        return hierarchyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get <c>IProjProject</c> object.
    /// </summary>
    /// <returns><c>IProjProject</c> object.</returns>
    public IProjProject getProject()
    {
        ProjTable           projTable;
        HierarchyLinkTable  hierarchyLinkTable;

        if (!project)
        {
            select ProjId from projTable
            join RecId from hierarchyLinkTable
                where hierarchyLinkTable.RefRecId == projTable.RecId
                      && hierarchyLinkTable.RefTableId == projTable.TableId
                      && hierarchyLinkTable.HierarchyId == this.hierarchyId;
            project = ProjProject::construct(projTable.ProjId);
        }

        return project;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a new instance of <c>ProjWBS</c> object.
    /// </summary>
    /// <param name = "_hierarchyId">Hierarchy Id.</param>
    protected void new(HierarchyIdBase _hierarchyId)
    {
        hierarchyId = _hierarchyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct <c>ProjWBS</c> object.
    /// </summary>
    /// <param name = "_hierarchyId">Hierarchy Id.</param>
    /// <param name = "_project"></param>
    /// <returns>A new instance of <c>ProjWBS</c> object.</returns>
    public static ProjWBS construct(HierarchyIdBase _hierarchyId)
    {
        return new ProjWBS(_hierarchyId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>