<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationErrorHandlingActivityOnDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntegrationErrorHandlingActivityOnDocument</c> class is for error handling.
/// </summary>
public class TaxIntegrationErrorHandlingActivityOnDocument
    extends TaxIntegrationAbstractActivityOnDocument
{
    public const str LoggerName = 'Tax Integration - Error Handling';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationErrorHandlingActivityOnDocument</c>.
    /// </summary>
    private final void new()
    {
        super(LoggerName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationErrorHandlingActivityOnDocument</c>.
    /// </summary>
    /// <returns>The new <c>TaxIntegrationErrorHandlingActivityOnDocument</c>.</returns>
    public final static TaxIntegrationErrorHandlingActivityOnDocument construct()
    {
        return new TaxIntegrationErrorHandlingActivityOnDocument();
    }

]]></Source>
			</Method>
			<Method>
				<Name>actInternal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Conducts the activity on the document by handling error.
    /// </summary>
    /// <param name = "_document">The document.</param>
    [Replaceable]
    protected void actInternal(TaxIntegrationDocumentObject _document)
    {
        TaxIntegrationErrorHandlingActivityOnDocument::actStatic(_document);
    }

]]></Source>
			</Method>
			<Method>
				<Name>actStatic</Name>
				<Source><![CDATA[
    /// <summary>
    /// Conducts the activity on the document by handling error.
    /// </summary>
    /// <param name = "_document">The document.</param>
    protected static void actStatic(TaxIntegrationDocumentObject _document)
    {
        TaxIntegrationErrorCollection errorCollection = _document.getErrorCollection();

        errorCollection.displayErrors();
        errorCollection.clear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSkip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if this activity should be skipped for document.
    /// Error handling should not be skipped.
    /// </summary>
    /// <param name="_document">The <c>TaxIntegrationDoccumentObject</c> to determine the applicability.</param>
    /// <returns>true, if this activity should be skipped for document; otherwise, false.</returns>
    internal boolean shouldSkip(TaxIntegrationDocumentObject _document)
    {
        // Override super(), handle the error even if document is not OK.
        return !_document;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>