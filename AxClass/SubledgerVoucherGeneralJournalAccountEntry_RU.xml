<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerVoucherGeneralJournalAccountEntry_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides support for bonded transactions.
/// </summary>
public class SubledgerVoucherGeneralJournalAccountEntry_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasBondedTransactions_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a Boolean value that indicates whether the current record has any bonded transactions.
    /// </summary>
    /// <param name="_generalJournalEntryRecId">
    /// The identifier of the <c>GeneralJournalEntry</c> record.
    /// </param>
    /// <returns>
    /// true if the current record has any bonded transactions; otherwise, false
    /// </returns>
    public static boolean hasBondedTransactions_RU(GeneralJournalEntryRecId _generalJournalEntryRecId)
    {
        GeneralJournalAccountEntry accountEntry;
        GeneralJournalAccountEntry_W accountEntryW;

        select firstOnly RecId from accountEntry
            where accountEntry.GeneralJournalEntry == _generalJournalEntryRecId
        exists join accountEntryW
            where accountEntryW.GeneralJournalAccountEntry == accountEntry.RecId
                && accountEntryW.BondBatchTrans_RU != 0;

        return accountEntry != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBondedCompletly_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a Boolean value that indicates whether the current record is bonded completely.
    /// </summary>
    /// <param name="_generalJournalEntryRecId">
    /// The identifier of the <c>GeneralJournalEntry</c> record.
    /// </param>
    /// <returns>
    ///  true if the current record is bonded completely; otherwise, false
    /// </returns>
    public static boolean isBondedCompletly_RU(GeneralJournalEntryRecId _generalJournalEntryRecId)
    {
        GeneralJournalAccountEntry accountEntry;
        GeneralJournalAccountEntry_W accountEntryW;

        select firstOnly RecId from accountEntry
            where accountEntry.GeneralJournalEntry == _generalJournalEntryRecId
        exists join accountEntryW
            where accountEntryW.GeneralJournalAccountEntry == accountEntry.RecId
                && accountEntryW.BondBatchTrans_RU == 0;

        return accountEntry == null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>