<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferCalcTax_Order_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>InventTransferCalcTax_Order_BR</c> provides functions to calculate taxes for invent transfer order.
/// </summary>
class InventTransferCalcTax_Order_BR extends InventTransferCalcTax_BR
{
    InventTransferTable     inventTransferTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(Common _record)
    {
        super(_record);

        inventTransferTable = source;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLine</Name>
				<Source><![CDATA[
    public boolean nextLine()
    {
        inventTransferLine = null;

        while (queryTransact.next())
        {
            inventTransferLine = this.queryGet();
            break;
        }

        return inventTransferLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    protected QueryRun queryBuild()
    {
        return new QueryRun(SysQuery::queryFromTableRelation(inventTransferTable, tablenum(inventTransferLine)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGet</Name>
				<Source><![CDATA[
    public common queryGet()
    {
        if (queryTransact.changed(tablenum(inventTransferLine)))
        {
            inventTransferLine = queryTransact.get(tablenum(inventTransferLine));
        }

        return inventTransferLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxationOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the taxation origin of the current tranfer order line
    /// </summary>
    /// <returns>
    /// A taxation origin
    /// </returns>
    public FITaxationOrigin_BR taxationOrigin()
    {
        FITaxationOrigin_BR                 taxationOrigin;
        ImportedContentPerItem_BR           importedContentPerItem;

        if (inventTransferTable.TransferStatus == InventTransferStatus::Shipped)
        {
            FiscalDocumentType_BR fiscalDocumentType = FiscalDocumentType_BR::findRecId(inventTransferTable.inventTransferTableFiscalInfo_BR().ShipFiscalDocumentType_BR);
            importedContentPerItem = FciIdentifier_BR::getFciAndTaxationOrigin(fiscalDocumentType.fiscalEstablishment().FiscalEstablishmentId,
                                                                               fiscalDocumentType.FiscalDocumentModel,
                                                                               FiscalDocumentIssuer_BR::OwnEstablishment,
                                                                               FiscalDocDirection_BR::Outgoing,
                                                                               inventTransferTable.ShipDate,
                                                                               CFOPTable_BR::find(inventTransferLine.inventTransferLineFiscalInfo_BR().ShipCFOPTable_BR).CFOPId,
                                                                               inventTransferLine.ItemId);
        }

        if (importedContentPerItem)
        {
            taxationOrigin = importedContentPerItem.TaxationOrigin;
        }
        else
        {
            taxationOrigin = InventTable::find(inventTransferLine.ItemId).TaxationOrigin_BR;
        }

        return taxationOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLineAmount</Name>
				<Source><![CDATA[
    public AmountCur transLineAmount()
    {
        if (inventTransferTable.inventTransferTableFiscalInfo_BR().InventTransferOrderType == InventTransferOrderType_BR::ThirdPartyReturn)
        {
            return inventTransferLine.inventTransferLineFiscalInfo_BR().ReceivePrice * inventTransferLine.QtyRemainReceive;
        }

        return inventTransferLine.inventTransferLineFiscalInfo_BR().ShipPrice * inventTransferLine.QtyRemainShip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup transTaxGroup()
    {
        if (inventTransferTable.inventTransferTableFiscalInfo_BR().InventTransferOrderType == InventTransferOrderType_BR::ThirdPartyReturn)
        {
            return inventTransferLine.inventTransferLineFiscalInfo_BR().ReceiveTaxGroup;
        }

        return inventTransferLine.inventTransferLineFiscalInfo_BR().ShipTaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxItemGroup</Name>
				<Source><![CDATA[
    public TaxItemGroup transTaxItemGroup()
    {
        if (inventTransferTable.inventTransferTableFiscalInfo_BR().InventTransferOrderType == InventTransferOrderType_BR::ThirdPartyReturn)
        {
            return inventTransferLine.inventTransferLineFiscalInfo_BR().ReceiveTaxItemGroup;
        }

        return inventTransferLine.inventTransferLineFiscalInfo_BR().ShipTaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTransId</Name>
				<Source><![CDATA[
    public InventTransId transTransId()
    {
        return InventTransferLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the <c>InventTransferCalcTax_Order_BR</c> object
    /// </summary>
    /// <param name="_record">
    ///     The <c>InventTransferTable</c>record used to initialize the <c>InventTransferCalcTax_Order_BR</c> class
    /// </param>
    /// <returns>
    ///     New instance of <c>InventTransferCalcTax_Order_BR</c>
    /// </returns>

    public static InventTransferCalcTax_Order_BR construct(InventTransferTable _record)
    {
        return new InventTransferCalcTax_Order_BR(_record);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
