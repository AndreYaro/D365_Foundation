<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipmentOrderLineInventTransLinkTypeResetService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSShipmentOrderLineInventTransLinkTypeResetService</c> class is used to reset the OrderLineInventTransLinkType field on the <c>WHSShipmentTable</c> records.
/// </summary>
internal final class WHSShipmentOrderLineInventTransLinkTypeResetService extends SysOperationServiceBase
{
    private WHSInstrumentationLogger logger;
    private NumberOfRecords resetCounter;
    private NumberOfRecords maxResetRecordsCount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void execute(WHSShipmentOrderLineInventTransLinkTypeResetContract _contract)
    {
        if (!WHSSalesLoadLinePickingRouteFlight::instance().isEnabled())
        {
            info(strFmt("@WAX:WHSShipmentOrderLineInventTransLinkTypeResetServiceUpdatedRecords", resetCounter));
            return;
        }

        maxResetRecordsCount = _contract.parmMaxResetRecords();

        using (var resetInstrumentationActivitiesContext = this.activities().resetExecuting())
        {
            using (var committer = WHSRecordUpdateCommitter::construct())
            {
                WHSShipmentTable shipment;

                while select forupdate shipment
                    order by shipment.ShipmentId
                    where shipment.OrderLineInventTransLinkType == WHSShipmentOrderLineInventTransLinkType::PickingRoute
                {
                    shipment.OrderLineInventTransLinkType = WHSShipmentOrderLineInventTransLinkType::None;

                    if (!this.resetShipment(committer, shipment))
                    {
                        break;
                    }
                }
            }

            this.activities().parmResetCount(resetInstrumentationActivitiesContext, resetCounter);
        }

        info(strFmt("@WAX:WHSShipmentOrderLineInventTransLinkTypeResetServiceUpdatedRecords", resetCounter));
    }

]]></Source>
			</Method>
			<Method>
				<Name>activities</Name>
				<Source><![CDATA[
    private WHSShipmentOrderLineInventTransLinkTypeResetInstrumentationActivities activities()
    {
        if (!logger)
        {
            logger = WHSInstrumentationLogger::createLogger(classStr(WHSShipmentOrderLineInventTransLinkTypeResetService));
        }

        return logger.shipmentOrderLineInventTransLinkTypeReset();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetShipment</Name>
				<Source><![CDATA[
    private boolean resetShipment(WHSRecordUpdateCommitter _committer, WHSShipmentTable _shipment)
    {
        if (resetCounter >= maxResetRecordsCount)
        {
            return false;
        }

        resetCounter++;
        _committer.updateRecord(_shipment);

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>