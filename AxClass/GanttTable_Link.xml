<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttTable_Link</Name>
	<SourceCode>
		<Declaration><![CDATA[
class GanttTable_Link extends GanttTableBase
{
    GanttTmpLink ganttTmpLink;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initDefaultFieldCollection</Name>
				<Source><![CDATA[
    public void initDefaultFieldCollection()
    {
        List    listFields;
        listFields = GanttTableFieldCollection::listDefaultFields(this.tableId());

        this.fieldCollection().createFromList(listFields);

        // Visible field
        this.fieldCollection().findFieldName(fieldstr(GanttTmpLink, Visible),
                                             true,
                                             tablestr(GanttTmpLink)).parmEnum2Integer(true);
        // Marked field
        this.fieldCollection().findFieldName(fieldstr(GanttTmpLink, Marked),
                                             true,
                                             tablestr(GanttTmpLink)).parmEnum2Integer(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTableBuffer</Name>
				<Source><![CDATA[
    public Common parmTableBuffer(Common _ganttTmpLink = ganttTmpLink)
    {
        if (!prmisdefault(_ganttTmpLink))
        {
            ganttTmpLink.data(_ganttTmpLink);
        }
        return ganttTmpLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetTableBuffer</Name>
				<Source><![CDATA[
    protected void resetTableBuffer()
    {
        ganttTmpLink = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinkData</Name>
				<Source><![CDATA[
    public void setLinkData(RecId           _predecessorRecId,
                            RecId           _successorRecId,
                            NoYes           _visible            = NoYes::No,
                            NoYes           _marked             = NoYes::No,
                            GanttLinkType   _linkType           = GanttLinkType::FS)
    {
        ganttTmpLink.PredecessorRecId   = _predecessorRecId;
        ganttTmpLink.SuccessorRecId     = _successorRecId;
        ganttTmpLink.Visible            = _visible;
        ganttTmpLink.Marked             = _marked;

        ganttTmpLink.LinkType           = _linkType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDuplicate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a duplicate record based on the values of the current buffer.
    /// </summary>
    /// <returns>The duplicate buffer.</returns>
    public GanttTmpLink findDuplicate()
    {
        GanttTmpLink tmpLinkSearch;

        if (improvedPerformanceDuplicateSearchFeatureEnabled)
        {
            this.findDuplicateInternal(tmpLinkSearch);

            return tmpLinkSearch;
        }

        tmpLinkSearch.setTmpData(ganttTmpLink);

        select firstonly tmpLinkSearch
            where tmpLinkSearch.PredecessorRecId == ganttTmpLink.PredecessorRecId
               && tmpLinkSearch.SuccessorRecId == ganttTmpLink.SuccessorRecId
               && tmpLinkSearch.LinkType == ganttTmpLink.LinkType;

        return tmpLinkSearch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GanttTable_Link construct()
    {
        return new GanttTable_Link();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAllowUserModification</Name>
				<Source><![CDATA[
    public static GanttTable_Link newAllowUserModification(boolean _allowUserModification,
                                                           boolean _keepBaseData = _allowUserModification)
    {
        GanttTable_Link ganttTable;
        ganttTable = GanttTable_Link::construct();

        ganttTable.parmAllowUserModification(_allowUserModification);
        ganttTable.parmKeepBaseData(_keepBaseData);

        ganttTable.init();

        return ganttTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hashKey</Name>
				<Source><![CDATA[
    protected str hashKey()
    {
        str hashKey = int642Str(ganttTmpLink.PredecessorRecId) + '~'
            + int642Str(ganttTmpLink.SuccessorRecId) + '~'
            + enum2Str(ganttTmpLink.LinkType);

        return hashKey;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>