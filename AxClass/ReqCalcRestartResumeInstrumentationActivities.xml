<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqCalcRestartResumeInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Restart Resume native instrumentation activities.
/// </summary>
internal final class ReqCalcRestartResumeInstrumentationActivities
{
    public const str ReqCalcRestartResumePrefix = 'RestartResume.';

    public const str ReqCalcRestartResumeFailProcessAndCleanUp = 'FailProcessAndCleanUp';
    public const str ReqCalcRestartResumeRecoverReqProcessList = 'RecoverReqProcessList';
    public const str ReqCalcRestartResumeRestart = 'Restart';
    public const str ReqCalcRestartResumeResume = 'Resume';

    // Restart Resume parameters
    public const str ParmRecoveredProcessId= 'RecoveredProcessId';
    public const str ParmIsExecutingInBatch = 'IsExecutingInBatch';
    public const str ParmBatchJobId = 'BatchJobId';
    public const str ParmBatchTaskId = 'BatchTaskId';
    public const str ParmBatchRetriesOnFailure = 'BatchRetriesOnFailure';
    public const str ParmBatchRetryCount = 'BatchRetryCount';
    public const str ParmInfoMessage = "InfoMessage";
    public const str ParmMaximumRestartResumeAttempts = 'MaximumRestartResumeAttempts';
    public const str ParmRecoveredReqProcessThreadListRecId = 'RecoveredReqProcessThreadListRecId';

    private ReqInstrumentationLogger logger;
        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(ReqInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static ReqCalcRestartResumeInstrumentationActivities newFromLogger(ReqInstrumentationLogger _logger)
    {
        return new ReqCalcRestartResumeInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>failProcessAndCleanUp</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext failProcessAndCleanUp()
    {
        return this.createActivityContext(ReqCalcRestartResumeFailProcessAndCleanUp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recoverReqProcessList</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext recoverReqProcessList()
    {
        return this.createActivityContext(ReqCalcRestartResumeRecoverReqProcessList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>restart</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext restart()
    {
        return this.createActivityContext(ReqCalcRestartResumeRestart);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resume</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext resume()
    {
        return this.createActivityContext(ReqCalcRestartResumeResume);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createActivityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext createActivityContext(str _activityName)
    {
        SysInstrumentationActivity activity = logger.activity(ReqCalcRestartResumePrefix + _activityName);
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>