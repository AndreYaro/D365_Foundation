<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgDaysTotalWorkflow</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgDaysTotalWorkflow</c> class is used to open the total workflow of a day by calling the
///    <c>activateFromWorkflowTemplate</c> method of the <c>Workflow</c> class.
/// </summary>
public class JmgDaysTotalWorkflow
{
    JmgStampJournalTable        jmgStampJournalTable;
    WorkflowVersionTable        workflowVersionTable;
    WorkflowComment             workflowComment;
    boolean                     submit;
    WorkflowWorkItemTable       workflowWorkItemTable;
    userId                      userId;
    menuItemName                menuItemName;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialogOk</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Opens a dialog box for submitting a Days total record.
    /// </summary>
    /// <returns>
    ///    true if the dialog box was closed by pressing the Ok button; otherwise, false.
    /// </returns>
    public boolean dialogOk()
    {
        WorkflowSubmitDialog            workflowSubmitDialog;
        WorkflowWorkItemActionDialog    workflowWorkItemActionDialog;
        boolean                         ok = workflowComment != '';

        if (menuItemName == menuitemactionstr(JmgDaysTotalSubmitWorkflow) && !workflowComment)
        {
            workflowSubmitDialog = WorkflowSubmitDialog::construct(this.parmWorkflowVersionTable());
            workflowSubmitDialog.run();
            this.parmWorkflowComment(workflowSubmitDialog.parmWorkflowComment());
            ok = workflowSubmitDialog.parmIsClosedOK();
        }
        else if (menuItemName == menuitemactionstr(JmgDaysTotalResubmitWorkflow) && !workflowComment)
        {
            workflowWorkItemActionDialog = WorkflowWorkItemActionDialog::construct( workflowWorkItemTable,
                                                                                    WorkflowWorkItemActionType::Resubmit,
                                                                                    new MenuFunction(menuitemactionstr(JmgDaysTotalResubmitWorkflow), MenuItemType::Action));
            workflowWorkItemActionDialog.run();
            this.parmWorkflowComment(workflowWorkItemActionDialog.parmWorkflowComment());
            ok = workflowWorkItemActionDialog.parmIsClosedOK();
            userId = workflowWorkItemActionDialog.parmTargetUser();
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJmgStampJournalTable</Name>
				<Source><![CDATA[
    public JmgStampJournalTable parmJmgStampJournalTable(JmgStampJournalTable _jmgStampJournalTable = jmgStampJournalTable)
    {
        jmgStampJournalTable = _jmgStampJournalTable;

        return jmgStampJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    public menuItemName parmMenuItemName(menuItemName _menuItemName = menuItemName)
    {
        menuItemName = _menuItemName;

        return menuItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmit</Name>
				<Source><![CDATA[
    public boolean parmSubmit(boolean _submit = submit)
    {
        submit = _submit;

        return submit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowComment</Name>
				<Source><![CDATA[
    public WorkflowComment parmWorkflowComment(WorkflowComment _workflowComment = workflowComment)
    {
        workflowComment = _workflowComment;

        return workflowComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowVersionTable</Name>
				<Source><![CDATA[
    public WorkflowVersionTable parmWorkflowVersionTable(WorkflowVersionTable _workflowVersionTable = workflowVersionTable)
    {
        workflowVersionTable = _workflowVersionTable;

        return workflowVersionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowWorkItemtable</Name>
				<Source><![CDATA[
    public WorkflowWorkItemTable parmWorkflowWorkItemtable(WorkflowWorkItemTable _workflowWorkItemTable = workflowWorkItemTable)
    {
        workflowWorkItemTable = _workflowWorkItemTable;
        return workflowWorkItemTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resubmit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resubmits the days total workflow.
    /// </summary>
    /// <remarks>
    ///    This method resubmits the workflow configuration by calling the <c>activateFromWorkflowTemplate</c>
    ///    method on the <c>Workflow</c> class with information about the free text invoice record.
    /// </remarks>
    public void resubmit()
    {
        Object                  jmgStampJournalTable_ds;

        ttsbegin;
        WorkflowWorkItemActionManager::dispatchWorkItemAction(workflowWorkItemTable,
                                                              workflowComment,
                                                              userId,
                                                              WorkflowWorkItemActionType::Resubmit,
                                                              menuItemName);

        jmgStampJournalTable_ds = FormDataUtil::getFormDataSource(jmgStampJournalTable);
        jmgStampJournalTable.WorkflowStatus = JmgDaysTotalWorkflowStatus::Submitted;
        if (jmgStampJournalTable_ds)
        {
            jmgStampJournalTable_ds.write();
            jmgStampJournalTable_ds.refresh();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>submit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activates the days total workflow.
    /// </summary>
    /// <remarks>
    /// This method starts the workflow configuration by calling the <c>activateFromWorkflowType</c> method
    /// on the <c>Workflow</c> class with information about the days total record.
    /// </remarks>
    public void submit()
    {
        Object jmgStampJournalTable_ds;

        Workflow::activateFromWorkflowType(workflowtypestr(JmgDaysTotalType),
                                           jmgStampJournalTable.RecId,
                                           this.parmWorkflowComment(),
                                           false);

        jmgStampJournalTable_ds = FormDataUtil::getFormDataSource(jmgStampJournalTable);
        jmgStampJournalTable.WorkflowStatus = JmgDaysTotalWorkflowStatus::Submitted;

        if (jmgStampJournalTable_ds)
        {
            jmgStampJournalTable_ds.write();
            jmgStampJournalTable_ds.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static JmgDaysTotalWorkflow construct()
    {
        return new JmgDaysTotalWorkflow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Submits or resubmits a Days total document and starts corresponding workflow.
    /// </summary>
    /// <param name="args">
    ///    An <c>Args</c> value from the caller.
    /// </param>
    public static void main(Args args)
    {
        JmgDaysTotalWorkflow    jmgDaysTotalWorkflow;
        JmgStampJournalTable    jmgStampJournalTable;

        jmgStampJournalTable = args.record();
        jmgDaysTotalWorkflow = JmgDaysTotalWorkflow::construct();
        jmgDaysTotalWorkflow.parmJmgStampJournalTable(args.record());
        jmgDaysTotalWorkflow.parmMenuItemName(args.menuItemName());
        jmgDaysTotalWorkflow.parmWorkflowVersionTable(args.caller().getActiveWorkflowConfiguration());
        jmgDaysTotalWorkflow.parmWorkflowWorkItemtable(args.caller().getActiveWorkflowWorkItem());
        jmgDaysTotalWorkflow.parmSubmit(args.menuItemName() == menuitemactionstr(JmgDaysTotalSubmitWorkflow));
        jmgDaysTotalWorkflow.parmWorkflowComment(args.parm());

        if (jmgDaysTotalWorkflow.dialogOk())
        {
            if (jmgDaysTotalWorkflow.parmSubmit())
            {
                jmgDaysTotalWorkflow.submit();
            }
            else
            {
                jmgDaysTotalWorkflow.resubmit();
            }
            args.caller().updateWorkflowControls();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>