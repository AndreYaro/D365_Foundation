<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LegalEntityLocationSelectionLookup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LegalEntityLocationSelectionLookup</c> class is used to show an address lookup.
/// </summary>

class LegalEntityLocationSelectionLookup extends SysReferenceTableLookup
{
    container roleIds;
    Common entity, callingBuffer;
    FormRun callingForm;
    FormBuildDataSource locationDataSource;
    FormBuildDataSource postalAddressDataSource;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addRole</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds an address purpose to show in the lookup.
    /// </summary>
    /// <param name="_roleId">
    /// The <c>LogisticsLocationRoleRecId</c> of the address purpose to show in the lookup.
    /// </param>
    private void addRole(LogisticsLocationRoleRecId _roleId)
    {
        if (!conFind(roleIds, _roleId))
        {
            roleIds += _roleId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRoleByType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds an address purpose to show in the lookup.
    /// </summary>
    /// <param name="_roleType">
    /// The <c>LogisticsLocationRoleType</c> of the address purpose to show in the lookup.
    /// </param>
    private void addRoleByType(LogisticsLocationRoleType _roleType)
    {
        this.addRole(LogisticsLocationRole::findBytype(_roleType).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildAdditionalFormDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies additional data sources on the form.
    /// </summary>
    /// <param name="_form">
    /// The form to use for the lookup.
    /// </param>
    /// <remarks>
    /// This method should be overridden to add more data sources to the lookup form.
    /// </remarks>
    public void buildAdditionalFormDataSources(Form _form)
    {
        #define.LogisticsLocationRelationName('Location')
        #define.LogisticsPostalAddressRelationName('PostalAddress')
        super(_form);

        // Add LogisticsLocation
        locationDataSource = _form.addDataSource(tableStr(LogisticsLocation));
        locationDataSource.table(tableNum(LogisticsLocation));

        this.configureLookupDataSource(locationDataSource);
        locationDataSource.joinSource(_form.dataSource(1).name());
        locationDataSource.joinRelation(#LogisticsLocationRelationName);
        locationDataSource.linkType(FormLinkType::InnerJoin);

        // Add LogisticsPostalAddress
        postalAddressDataSource = _form.addDataSource(tableStr(LogisticsPostalAddress));
        postalAddressDataSource.table(tableNum(LogisticsPostalAddress));

        this.configureLookupDataSource(postalAddressDataSource);
        postalAddressDataSource.joinSource(_form.dataSource(2).name());
        postalAddressDataSource.joinRelation(#LogisticsPostalAddressRelationName);
        postalAddressDataSource.linkType(FormLinkType::InnerJoin);

        // Form Name
        _form.name(classStr(LegalEntityLocationSelectionLookup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies additional properties of the arguments.
    /// </summary>
    /// <param name="_args">
    /// The arguments of the <c>SysTableLookupBase</c> class.
    /// </param>
    /// <remarks>
    /// This method should be overridden to add properties of the arguments.
    /// </remarks>
    protected void buildArgs(Args _args)
    {
        super(_args);

        _args.caller(callingForm);
        _args.record(callingBuffer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildGrid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the interior of the specified <paramref name="_formBuildGridControl" /> parameter for the
    /// lookup form.
    /// </summary>
    /// <param name="_formBuildGridControl">
    /// The grid that will contain the controls that displays data on the lookup form.
    /// </param>
    /// <param name="_formBuildDataSource">
    /// The <c>FormBuildDataSource</c> parameter to which the controls in the grid will be bound.
    /// </param>
    /// <returns>
    /// The constructed grid control.
    /// </returns>
    protected FormBuildGridControl buildGrid(FormBuildGridControl _formBuildGridControl, FormBuildDataSource _formBuildDataSource)
    {
        FormBuildGridControl ret;

        // Add LogisticsLocation fields
        _formBuildGridControl.addDataField(locationDataSource.id(), fieldNum(LogisticsLocation, Description));

        // Add Postal address fields
        _formBuildGridControl.addDataField(postalAddressDataSource.id(), fieldNum(LogisticsPostalAddress, Street));
        _formBuildGridControl.addDataField(postalAddressDataSource.id(), fieldNum(LogisticsPostalAddress, City));
        _formBuildGridControl.addDataField(postalAddressDataSource.id(), fieldNum(LogisticsPostalAddress, State));
        _formBuildGridControl.addDataField(postalAddressDataSource.id(), fieldNum(LogisticsPostalAddress, ZipCode));

        ret = super(_formBuildGridControl, _formBuildDataSource);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the query for the lookup
    /// </summary>
    public void buildQuery()
    {
        Query myQuery;
        QueryBuildDataSource qbd, qbdLocation, qbdEntityLocation, qbdLogisticsPostalAddress;
        DirParty party;
        RecId entityRecId;
        TableId entityLocationTableId, entityLocationRoleTableId;
        FieldId entityLocationFieldId, entityFieldId, entityFieldIdPrimary;
        QueryBuildRange qbrLocationRole, qbrEntityLocation;

        myQuery = new Query();

        // Entity is a party
        party = new DirParty(entity);
        entityRecId = party.getPartyRecId();

        entityLocationTableId = LogisticsLocationAppUtil::getEntityLocationTableId(entity.TableId);
        entityLocationRoleTableId = LogisticsLocationAppUtil::getEntityLocationRoleTableId(entityLocationTableId);
        entityLocationFieldId = LogisticsLocationAppUtil::getEntityLocationFieldId(entityLocationTableId);
        entityFieldId = LogisticsLocationAppUtil::getEntityFieldId(entityLocationTableId);

        entityFieldIdPrimary = LogisticsLocationAppUtil::getEntityFieldIdIsPrimary(entityLocationTableId);

        myQuery = new Query();

        qbd = myQuery.addDataSource(entityLocationTableId);
        qbrEntityLocation = qbd.addRange(entityFieldId);
        qbrEntityLocation.value(queryValue(entityRecId));
        qbrEntityLocation.status(RangeStatus::Hidden);

        qbdLocation = qbd.addDataSource(tableNum(LogisticsLocation));
        qbdLocation.joinMode(JoinMode::InnerJoin);
        qbdLocation.relations(true);

        qbdLogisticsPostalAddress = qbdLocation.addDataSource(tableNum(LogisticsPostalAddress));
        qbdLogisticsPostalAddress.joinMode(JoinMode::InnerJoin);
        qbdLogisticsPostalAddress.relations(true);

        qbdEntityLocation = qbd;

        qbd = qbdEntityLocation.addDataSource(entityLocationRoleTableId);
        qbd.joinMode(JoinMode::ExistsJoin);

        qbrLocationRole = qbd.addRange(fieldName2id(entityLocationRoleTableId, identifierStr(RecId)));
        qbrLocationRole.value(strFmt('((%1.%2 == %3.%4) && (%5)) || (%1.%6 == 1))',
            qbdEntityLocation.name(),
            identifierStr(RecId),
            qbd.name(),
            fieldId2name(entityLocationRoleTableId, entityLocationFieldId),
            this.rolesRangeDetailed(qbd.name()),
            fieldId2name(entityLocationTableId, entityFieldIdPrimary) ));

        qbrLocationRole.status(RangeStatus::Hidden);

        this.parmQuery(myQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Instantiates the object
    /// </summary>
    /// <param name="_entity">
    ///     The source entity
    /// </param>

    void new(Common _entity)
    {
        entity = _entity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallingBuffer</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Common parmCallingBuffer(Common _callingBuffer = callingBuffer)
    {
        callingBuffer = _callingBuffer;

        return callingBuffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallingForm</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FormRun parmCallingForm(FormRun _callingForm = callingForm)
    {
        callingForm = _callingForm;

        return callingForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performFormLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Presents the lookup form to the user.
    /// </summary>
    /// <returns>
    ///    The selected record.
    /// </returns>
    public Common performFormLookup()
    {
        Common ret;

        this.parmTableId(tableNum(DirPartyLocation));

        this.buildQuery();

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rolesRangeDetailed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the expression string to use for the address purpose range.
    /// </summary>
    /// <param name="entityLocationRoleDsName">
    /// Name of the data source.
    /// </param>
    /// <returns>
    /// The expression string used for the address purpose range on the custom query.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str rolesRangeDetailed(str entityLocationRoleDsName)
    {
        str range;
        int i;

        if (conLen(roleIds) == 0)
        {
            range = strFmt('(%1.LocationRole == %2)', entityLocationRoleDsName,
                LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery).RecId);
        }
        else
        {
            for (i = 1; i <= conLen(roleIds); i++)
            {
                if (range)
                {
                    range += ' || ';
                }
                range = strFmt('%1 (%2.LocationRole == %3)', range, entityLocationRoleDsName, conPeek(roleIds, i));
            }
        }

        return range;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LegalEntityLocationSelectionLookup construct(Common _entity)
    {
        return new LegalEntityLocationSelectionLookup(_entity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Open the address lookup
    /// </summary>
    /// <param name="_formReferenceControl">
    ///     The reference control
    /// </param>
    /// <returns>
    ///     The logistics location record
    /// </returns>

    public static Common lookupAddress(FormReferenceControl _formReferenceControl)
    {
        LegalEntityLocationSelectionLookup lookup =
            LegalEntityLocationSelectionLookup::newParameters(_formReferenceControl);

        lookup.addRoleByType(LogisticsLocationRoleType::Invoice);
        lookup.addRoleByType(LogisticsLocationRoleType::Delivery);
        lookup.addRoleByType(LogisticsLocationRoleType::Business);

        return lookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Instantiates the <c>LegalEntityLocationSelectionLookup</c>
    /// </summary>
    /// <param name="_callingControl">
    ///     The calling control
    /// </param>
    /// <returns>
    ///     The <c>LegalEntityLocationSelectionLookup</c> instance
    /// </returns>

    public static LegalEntityLocationSelectionLookup newParameters(FormReferenceControl _callingControl)
    {
        LegalEntityLocationSelectionLookup lookup = LegalEntityLocationSelectionLookup::construct(CompanyInfo::find());

        lookup.parmCallingControl(_callingControl);
        lookup.parmUseLookupValue(true);

        return lookup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>