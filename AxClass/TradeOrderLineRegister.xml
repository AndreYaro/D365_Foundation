<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeOrderLineRegister</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TradeOrderLineRegister</c> serves as an entry point to the product registration process.
/// </summary>
/// <remarks>
/// The main purpose of this class is to distinguish between stocked and not stocked product scenarios
/// in order to open the appropriate registration form.
/// </remarks>
class TradeOrderLineRegister extends RunBase
{
    SalesPurchLine          salesPurchLine;
    Args                    args;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>SalesPurchLine</c> class.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    public boolean init()
    {
        boolean ret = super();

        salesPurchLine = args.record();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransRegister</Name>
				<Source><![CDATA[
    /// <summary>
    /// Holds the menu item that points to the stocked product registration form.
    /// </summary>
    /// <returns>
    /// The <c>InventTransRegister</c> display menu item.
    /// </returns>
    /// <remarks>
    /// This method is an easy way to customize which form to use in the product registration.
    /// </remarks>
    public menuItemNameDisplay inventTransRegister()
    {
        return menuitemdisplaystr(InventTransRegister);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArgs</Name>
				<Source><![CDATA[
    public Args parmArgs(Args _args = args)
    {
        args = _args;
        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        FormRun formRun;

        super();

        if (salesPurchLine.salesPurchLineInterface().isStocked())
        {
            formRun = new MenuFunction(this.inventTransRegister(), MenuItemType::Display).create(args);
        }
        else
        {
            formRun = new MenuFunction(this.tradeNonStockedRegister(), MenuItemType::Display).create(args);
        }

        formRun.run();

        formRun.wait();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the <c>RunBase</c> dialog is to be launched.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    /// <remarks>
    /// Override this method so that it returns true to launch the dialog in derived classes.
    /// </remarks>
    public boolean showDialog()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS2499";
    }

]]></Source>
			</Method>
			<Method>
				<Name>tradeNonStockedRegister</Name>
				<Source><![CDATA[
    /// <summary>
    /// Holds the menu item that points to the not stocked product registration form.
    /// </summary>
    /// <returns>
    /// The <c>TradeNonStockedRegister</c> display menu item.
    /// </returns>
    /// <remarks>
    /// This method is an easy way to customize which form to use in the product registration.
    /// </remarks>
    public menuItemNameDisplay tradeNonStockedRegister()
    {
        return menuitemdisplaystr(TradeNonStockedRegister);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static TradeOrderLineRegister construct()
    {
        return new TradeOrderLineRegister();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void  main(Args  _args)
    {
        TradeOrderLineRegister tradeOrderLineRegister;

        if (!_args)
        {
            throw error("@SYS25407");
        }

        if (!_args.record())
        {
            throw error(Error::missingParameter(_args.caller()));
        }

        tradeOrderLineRegister = TradeOrderLineRegister::newFromArgs(_args);

        if (!tradeOrderLineRegister.prompt())
        {
            return;
        }

        tradeOrderLineRegister.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>TradeOrderLineRegister</c> class or a derived class that is
    /// determined by the arguments.
    /// </summary>
    /// <param name="_args">
    /// The arguments for the class.
    /// </param>
    /// <returns>
    /// A new instance of the <c>TradeOrderLineRegister</c> class.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The buffer for the call of order line is not specified.
    /// </exception>
    public static TradeOrderLineRegister newFromArgs(Args _args)
    {
        SalesLine               salesLine;
        Common                  record = _args.record();
        TradeOrderLineRegister  tradeOrderLineRegister;

        switch (record.TableId)
        {
            case tablenum(PurchLine) :
                tradeOrderLineRegister = TradeOrderLineRegister::construct();
                break;

            case tablenum(SalesLine) :
                salesLine              = record as SalesLine;
                tradeOrderLineRegister = salesLine.returnItem() ? SalesReturnOrderLineRegister::construct() : TradeOrderLineRegister::construct();
                break;

            default :
                throw error(Error::missingRecord("@SYS319733"));
        }

        tradeOrderLineRegister.parmArgs(_args);
        tradeOrderLineRegister.init();
        return tradeOrderLineRegister;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>