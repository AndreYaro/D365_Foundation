<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendDefaultNonLedgerTableLookup</Name>
	<SourceCode>
		<Declaration><![CDATA[
class VendDefaultNonLedgerTableLookup
{
    TmpLedgerTable tmpLedgerTable;
    LedgerJournalACType ledgerJournalACType;
    VendAccount vendAccount;
    CompanyId companyId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>companyId</Name>
				<Source><![CDATA[
    CompanyId companyId()
    {
        return companyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createList</Name>
				<Source><![CDATA[
    protected void createList()
    {
        CustTable custTable;
        VendTable vendTable;
        ProjTable projTable;
        AssetTable assetTable;
        DirPartyTable partyTable;
        BankAccountTable bankAccountTable;

        tmpLedgerTable.CompanyId = companyId;

        switch (ledgerJournalACType)
        {
            case LedgerJournalACType::Cust :
                while select AccountNum, Party from custTable
                    join name from partyTable
                        where partyTable.RecId == custTable.Party
                {
                    tmpLedgerTable.AccountNum = custTable.AccountNum;
                    tmpLedgerTable.AccountName = partyTable.Name;
                    tmpLedgerTable.insert();
                }
                break;

            case LedgerJournalACType::Vend :
                while select AccountNum, Party from vendTable
                    join name from partyTable
                        where partyTable.RecId == vendTable.Party
                {
                    tmpLedgerTable.AccountNum = vendTable.AccountNum;
                    tmpLedgerTable.AccountName = partyTable.Name;
                    tmpLedgerTable.insert();
                }
                break;

            case LedgerJournalACType::Project :
                while select ProjId, Name from projTable
                {
                    tmpLedgerTable.AccountNum = projTable.ProjId;
                    tmpLedgerTable.AccountName = projTable.Name;
                    tmpLedgerTable.insert();
                }
                break;

            case LedgerJournalACType::FixedAssets :
                while select AssetId, Name from assetTable
                {
                    tmpLedgerTable.AccountNum = assetTable.AssetId;
                    tmpLedgerTable.AccountName = assetTable.Name;
                    tmpLedgerTable.insert();
                }
                break;

            case LedgerJournalACType::Bank :
                while select AccountID, Name from bankAccountTable
                {
                    tmpLedgerTable.AccountNum = bankAccountTable.AccountID;
                    tmpLedgerTable.AccountName = bankAccountTable.Name;
                    tmpLedgerTable.insert();
                }
                break;

            default:
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalACType</Name>
				<Source><![CDATA[
    LedgerJournalACType ledgerJournalACType()
    {
        return ledgerJournalACType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(VendAccount _vendAccount, LedgerJournalACType _ledgerJournalACType, CompanyId _companyId = curext())
    {
        vendAccount = _vendAccount;
        ledgerJournalACType = _ledgerJournalACType;
        companyId = _companyId;

        this.createList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmpLedgerTable</Name>
				<Source><![CDATA[
    TmpLedgerTable tmpLedgerTable()
    {
        return tmpLedgerTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendAccount</Name>
				<Source><![CDATA[
    VendAccount vendAccount()
    {
        return vendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendDefaultNonLedgerTableLookup construct(VendAccount _vendAccount, LedgerJournalACType _ledgerJournalACType, CompanyId _companyId = curext())
    {
        return new VendDefaultNonLedgerTableLookup(_vendAccount, _ledgerJournalACType, _companyId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>