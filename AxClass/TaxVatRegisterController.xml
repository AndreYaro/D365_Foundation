<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxVatRegisterController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxVatRegisterController</c> class is the controller class for the <c>TaxVatRegister</c>
/// report.
/// </summary>
public class TaxVatRegisterController extends SrsReportRunController implements BatchRetryable
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default values for the parameters.
    /// </summary>
    protected void prePromptModifyContract()
    {
        TaxVatRegisterContract dataContract;

        dataContract = this.parmReportContract().parmRdpContract() as TaxVatRegisterContract;

        if (!dataContract.parmFromDate())
        {
            //Provide a default date because the last value is empty.
            dataContract.parmFromDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }

        if (!dataContract.parmToDate())
        {
            //Provide a default date because the last value is empty.
            dataContract.parmToDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }

        switch (this.parmArgs().parmEnum())
        {
            case TaxDirection::IncomingTax:
                this.parmDialogCaption("@GLS109154");
                break;

            case TaxDirection::OutgoingTax:
                this.parmDialogCaption("@GLS109147");
                break;

            case TaxDirection::UseTax:
                this.parmDialogCaption("@GLS110311");
                break;
        }

        dataContract.parmTaxDirection(this.parmArgs().parmEnum());
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        TaxVatRegisterContract dataContract;

        dataContract = this.parmReportContract().parmRdpContract() as TaxVatRegisterContract;
        dataContract.parmSysVersion(SysReportRun::sysVersion());
        dataContract.parmUserName(SysReportRun::userName());

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>TaxVatRegisterController</c> class.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object which is to be provided to the newly created controller instance.
    /// </param>
    /// <returns>
    /// A new controller instance.
    /// </returns>
    public static TaxVatRegisterController construct(Args _args)
    {
        const str LocalizationFeatureReference = 'PL-00014';
        GlobalizationInstrumentationHelper::featureRun(LocalizationFeatureReference, funcName());

        TaxVatRegisterController controller = new TaxVatRegisterController();
        controller.parmReportName(ssrsReportStr(TaxVatRegister, Report));
        controller.parmArgs(_args);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        TaxVatRegisterController controller = TaxVatRegisterController::construct(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>