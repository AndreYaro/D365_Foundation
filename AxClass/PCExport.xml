<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcExport</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PcExport extends RunBase
{
    PCProductConfigurationModel model;

    PCModelVisitorExport        modelExportVisitor;

    boolean saveFile;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductConfigurationModel</Name>
				<Source><![CDATA[
    public PCProductConfigurationModel parmProductConfigurationModel(PCProductConfigurationModel _model = model)
    {
        model = _model;

        return model;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        if (saveFile)
        {
            this.saveXML(model.Name, PCExport::SerializeProductConfigurationModel(model));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>serializeProductConfigurationModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes a production configuration model to xml.
    /// </summary>
    /// <param name="_model">Model to be serialized.</param>
    public static str serializeProductConfigurationModel(PCProductConfigurationModel _model)
    {
        PCModelVisitorExport modelExportVisitor = PCModelVisitorExport::construct();

        _model.accept(modelExportVisitor);

        return modelExportVisitor.getXmlForModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveFile</Name>
				<Source><![CDATA[
    public boolean saveFile(boolean _saveFile = saveFile)
    {
        saveFile = _saveFile;

        return saveFile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveXML</Name>
				<Source><![CDATA[
    private void saveXML(PCProductModelName _name, str _xml)
    {
        if (saveFile)
        {
            using(var stream = new System.IO.MemoryStream())
            {
                var doc = new System.Xml.XmlDocument();

                doc.LoadXml(_xml);

                doc.Save(stream);

                File::SendFileToUser(stream, strFmt('%1_%2%3', _name, System.Guid::NewGuid(), ".xml"));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCExport construct()
    {
        return new PCExport();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        PCExport pcExport = PCExport::construct();

        pcExport.parmProductConfigurationModel(args.record());

        pcExport.saveFile(true);

        pcExport.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>