<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttDialog</Name>
	<SourceCode>
		<Declaration><![CDATA[
class GanttDialog extends RunBase
{
    GanttVisualization  ganttVisualization;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addField</Name>
				<Source><![CDATA[
    protected void addField(Dialog  _dialog,
                            UtilElementName _fieldTypeName,
                            str     _fieldLabel,
                            anytype _fieldValue,
                            boolean _lookup = true)
    {
        DialogField field;
        if (_dialog == null)
        {
            throw error(strfmt("@SYS27147", classId2Name(classidget(this))));
        }

        field = _dialog.addField(_fieldTypeName, _fieldLabel);

        field.value(_fieldValue);

        field.allowEdit(false);

        if (_lookup)
        {
            field.lookupButton(1);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFieldGroup</Name>
				<Source><![CDATA[
    protected void addFieldGroup(Dialog _dialog, str _fieldGroupLabel = '', int _columns = 0)
    {
        if (_dialog == null)
        {
            throw error(strfmt("@SYS27147", classId2Name(classidget(this))));
        }

        DialogGroup dialogGroup = _dialog.addGroup(_fieldGroupLabel);

        if (_columns > 0)
        {
            dialogGroup.columns(_columns);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDialog</Name>
				<Source><![CDATA[
    protected Dialog createDialog(Caption   _caption    = '',
                                  Object    _caller     = null,
                                  str       _parmstr    = '',
                                  Form      _form       = new Form(formstr(Dialog)))
    {
        return new Dialog(_caption, _caller, _parmstr, _form);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createForm</Name>
				<Source><![CDATA[
    protected FormRun createForm(FormName   _formName,
                                 Object     _caller  = this,
                                 str        _caption = '')
    {
        FormRun formRun;
        Args    args = new Args(_formName);
        args.caller(_caller);

        formRun = classfactory.formRunClass(args);
        formRun.init();

        if (!prmisdefault(_caption))
        {
            formRun.design().caption(_caption);
        }

        return formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ganttClient</Name>
				<Source><![CDATA[
    public GanttClient ganttClient()
    {
        return this.parmGanttVisualization().parmGanttClient();
    }

]]></Source>
			</Method>
			<Method>
				<Name>info</Name>
				<Source><![CDATA[
    public void info(RecId _recId)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGanttVisualization</Name>
				<Source><![CDATA[
    public GanttVisualization parmGanttVisualization(GanttVisualization _ganttVisualization = ganttVisualization)
    {
        ganttVisualization = _ganttVisualization;
        return ganttVisualization;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runForm</Name>
				<Source><![CDATA[
    protected void runForm(FormRun _formRun)
    {
        if (_formRun)
        {
            _formRun.run();
            _formRun.detach();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>timeScaleInterval</Name>
				<Source><![CDATA[
    public void timeScaleInterval(FromDate  _fromDate   = dateNull(),
                                  ToDate    _toDate     = dateNull())
    {
        Dialog      dialog              = this.createDialog("@SYS74822");
        DialogField dialogFieldFromDate = dialog.addField(extendedTypeStr(FromDate));
        DialogField dialogFieldToDate   = dialog.addField(extendedTypeStr(ToDate));

        FromDate    fromDateArg = _fromDate;
        ToDate      toDateArg = _toDate;
        FromDate    fromDate;
        ToDate      toDate;

        GanttClient ganttClient         = this.parmGanttVisualization().parmGanttClient();

        if (fromDateArg == dateNull() || toDateArg == dateNull())
        {
            fromDateArg = this.ganttClient().parmFromDate();
            toDateArg   = this.ganttClient().parmToDate();
        }

        dialogFieldFromDate.value(fromDateArg);
        dialogFieldToDate.value(toDateArg);

        if (dialog.run())
        {
            fromDate    = dialogFieldFromDate.value();
            toDate      = dialogFieldToDate.value();

            if (fromDate != fromDateArg || toDate != toDateArg)
            {
                ganttClient.setTimeScaleInterval(fromDate, toDate);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GanttDialog construct()
    {
        return new GanttDialog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>