<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tutorial_CompareContextProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
class Tutorial_CompareContextProvider implements SysCompareContextProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
        public str caption()
    {
        return "Customer comparison";
    }

]]></Source>
			</Method>
			<Method>
				<Name>comparableItemDefault</Name>
				<Source><![CDATA[
        public str comparableItemDefault(SysCompareType _type)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>comparableList</Name>
				<Source><![CDATA[
        public List comparableList(SysCompareType _type)
    {
        List list = new List(Types::Class);
        CustTable custTable;

        while select custTable
        {
            list.addEnd(Tutorial_Comparable::newCustTable(custTable));
        }
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>manipulateResult</Name>
				<Source><![CDATA[
        public container manipulateResult(  container _result,
                                        SysComparableTmpText _text1,
                                        SysComparableTmpText _text2,
                                        SysComparable _comparable1,
                                        SysComparable _comparable2
                                        )
    {
        return _result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDirection</Name>
				<Source><![CDATA[
        public SysMergeDirection mergeDirection(SysComparable _topComparable1, SysComparable _topComparable2)
    {
        return SysMergeDirection::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onCompareStart</Name>
				<Source><![CDATA[
        public void onCompareStart(
        SysComparable _topComparable1,
        SysComparable _topComparable2)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>onContextMenu</Name>
				<Source><![CDATA[
        public void onContextMenu(
        int _hwnd,
        SysComparable _comparable1,
        SysComparable _comparable2,
        SysComparable _topComparable1,
        SysComparable _topComparable2)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDeleteTopNode</Name>
				<Source><![CDATA[
        void onDeleteTopNode(SysComparable _nodeToDelete)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCaseSensitive</Name>
				<Source><![CDATA[
        public boolean parmCaseSensitive(boolean value = false)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowDifferencesOnly</Name>
				<Source><![CDATA[
        public boolean parmShowDifferencesOnly(boolean value = false)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowLineNumbers</Name>
				<Source><![CDATA[
        public boolean parmShowLineNumbers(boolean value = false)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSuppressNodesOnlyIn1</Name>
				<Source><![CDATA[
        public boolean parmSuppressNodesOnlyIn1(boolean value = false)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSuppressNodesOnlyIn2</Name>
				<Source><![CDATA[
        public boolean parmSuppressNodesOnlyIn2(boolean value = false)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSuppressWhitespace</Name>
				<Source><![CDATA[
        public boolean parmSuppressWhitespace(boolean value = false)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTreePane</Name>
				<Source><![CDATA[
        public boolean showTreePane()
    {
        //No tree in this tutorial
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>supportDeleteWhenIdentical</Name>
				<Source><![CDATA[
        public boolean supportDeleteWhenIdentical()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static Tutorial_CompareContextProvider construct()
    {
        return new Tutorial_CompareContextProvider();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args args)
    {
        Tutorial_CompareContextProvider tutorial = Tutorial_CompareContextProvider::construct();
        ;
        SysCompare::startCompareOfContextProvider(tutorial);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>