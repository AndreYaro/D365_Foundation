<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendStatefulSettlementContextProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CustVendStatefulSettlementContextProvider
{
    private List innerList;
    private CustVendSettlementContextProviderLogger custVendSettlementContextProviderLogger;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new()
    {
        custVendSettlementContextProviderLogger = CustVendSettlementContextProviderLogger::createLogger();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSettlementContext</Name>
				<Source><![CDATA[
    internal boolean addSettlementContext(CustVendTrans _transToSettle, CustVendTransOpen _transOpenToSettle, Common _specContext)
    {
        using (var runActivityContext = custVendSettlementContextProviderLogger.activityContextWithCustomProperties(CustVendSettlementContextInstrumentationConstants::CustVendSSettlementContextProviderAddContext))
        {
            runActivityContext.addCustomProperty(
                CustVendSettlementContextInstrumentationConstants::IsTTSLevelZero,
                CustVendSettlementContextProviderLogger::bool2str(appl.ttsLevel() == 0));
            if (!innerList)
            {
                innerList = new List(Types::Class);
            }
            if (this.validate(_specContext, _transToSettle, _transOpenToSettle))
            {
                LedgerJournalTrans ledgerJournalTrans = _specContext as LedgerJournalTrans;
                TransDate settlementDate = ledgerJournalTrans.TransDate;
                ModuleCustVend module = _transOpenToSettle.CustVendTransOpen::getModule();
                AmountCur availableDocumentAmountToSettle = _transOpenToSettle.AmountCur;
                AmountCur availableTransCashDiscountAmount = this.findCashDiscount(_transOpenToSettle);
                CustVendSettlementContext settlementContext = this.constructContext(availableDocumentAmountToSettle - availableTransCashDiscountAmount, ledgerJournalTrans, _transOpenToSettle, availableTransCashDiscountAmount, settlementDate);
                innerList.addEnd(settlementContext);
                return true;
            }
            else
            {
                custVendSettlementContextProviderLogger.logError(strFmt('Validation error for SpecContext %1 with CustVendTransOpen %2', int642Str(_specContext.RecId), int642Str(_transOpenToSettle.RecId)));
            }
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructContext</Name>
				<Source><![CDATA[
    private CustVendSettlementContext constructContext(AmountCur _amountToSettle, LedgerJournalTrans _specRecord, CustVendTransOpen _refRecord, AmountCur _discToTake, TransDate _transDate)
    {
        SpecTrans specTransGenerated;
        specTransGenerated.SpecCompany = _specRecord.DataAreaId;
        specTransGenerated.SpecTableId = _specRecord.TableId;
        specTransGenerated.SpecRecId = _specRecord.RecId;
        specTransGenerated.RefCompany = _refRecord.DataArea;
        specTransGenerated.RefTableId = _refRecord.TableId;
        specTransGenerated.RefRecId = _refRecord.RecId;
        specTransGenerated.Balance01 = _amountToSettle;
        specTransGenerated.Code = _specRecord.CurrencyCode;
        specTransGenerated.CashDiscToTake = _discToTake;
        specTransGenerated.SelectedDateUsedToCalcCashDisc = _transDate;
        CustVendSettlementContextMap contextMap = specTransGenerated;
        return CustVendSettlementContext::construct(contextMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    private boolean validate(Common _specContext, CustVendTrans _transToSettle, CustVendTransOpen _custVendTransOpen)
    {
        return _specContext.TableId == tableNum(LedgerJournalTrans)
            && _transToSettle.TableId == tableNum(CustTrans)
            && _custVendTransOpen.TableId == tableNum(CustTransOpen);
    }

]]></Source>
			</Method>
			<Method>
				<Name>persist</Name>
				<Source><![CDATA[
    internal boolean persist()
    {
        using (var runActivityContext = custVendSettlementContextProviderLogger.activityContextWithCustomProperties(CustVendSettlementContextInstrumentationConstants::CustVendSSettlementContextProviderSaveContext))
        {
            runActivityContext.addCustomProperty(
                CustVendSettlementContextInstrumentationConstants::IsTTSLevelZero,
                CustVendSettlementContextProviderLogger::bool2str(appl.ttsLevel() == 0));
            if (innerList)
            {
                ListEnumerator listEnumerator = innerList.getEnumerator();
                while (listEnumerator.moveNext())
                {
                    CustVendSettlementContext context = listEnumerator.current();
                    context.persistContext();
                }
                return true;
            }
            custVendSettlementContextProviderLogger.logError('Persist error due to empty list');
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCashDiscount</Name>
				<Source><![CDATA[
    private CashDiscAmount findCashDiscount(CustVendTransOpen _custVendTransOpen)
    {
        CustVendCashDiscountHelper cashDiscountHelper = CustVendCashDiscountHelper::construct(_custVendTransOpen);
        return cashDiscountHelper.determineCashDiscForOpenAmount();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>