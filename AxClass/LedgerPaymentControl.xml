<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerPaymentControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerPaymentControl
{
    private TmpLedgerPaymentControl tmpLedgerPaymentControl;
    private TmpLedgerPaymentControlCur tmpLedgerPaymentControlCur;

    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>sumPerCurCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpLedgerPaymentControlCur sumPerCurCode()
    {
        // <GCN>
        boolean isShowDRsCRsFeatureEnabled = LedgerShowDebCredController_CN::isShowDRsCRsFeatureEnabled();
        // </GCN>

        tmpLedgerPaymentControlCur = null;

        while select sum(AmountCurDebCred), sum(AmountMSTDebCred)
            //<GCN>
            , sum(AmountCurDebit_CN), sum(AmountCurCredit_CN), sum(AmountMstCredit_CN), sum(AmountMstDebit_CN)
            //</GCN>
            from tmpLedgerPaymentControl
                group by CurrencyCode
        {
            tmpLedgerPaymentControlCur.clear();
            tmpLedgerPaymentControlCur.CurrencyCode = tmpLedgerPaymentControl.CurrencyCode;
            tmpLedgerPaymentControlCur.AmountCurDebCred = tmpLedgerPaymentControl.AmountCurDebCred;
            tmpLedgerPaymentControlCur.AmountMSTDebCred = tmpLedgerPaymentControl.AmountMSTDebCred;

            // <GCN>
            if (isShowDRsCRsFeatureEnabled)
            {
                tmpLedgerPaymentControlCur.AmountCurCredit_CN = tmpLedgerPaymentControl.AmountCurCredit_CN;
                tmpLedgerPaymentControlCur.AmountCurDebit_CN = tmpLedgerPaymentControl.AmountCurDebit_CN;
                tmpLedgerPaymentControlCur.AmountMstCredit_CN = tmpLedgerPaymentControl.AmountMstCredit_CN;
                tmpLedgerPaymentControlCur.AmountMstDebit_CN = tmpLedgerPaymentControl.AmountMstDebit_CN;
            }
            // </GCN>

            tmpLedgerPaymentControlCur.insert();
        }
        return tmpLedgerPaymentControlCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumPerCustVendCurCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpLedgerPaymentControl sumPerCustVendCurCode(LedgerJournalId _ledgerJournalId)
    {
        // <GCN>
        boolean isShowDRsCRsFeatureEnabled = LedgerShowDebCredController_CN::isShowDRsCRsFeatureEnabled();
        // </GCN>

        LedgerJournalTrans ledgerJournalTrans;
        TmpLedgerPaymentControl tmpLedgerPaymentControlCopy;

        tmpLedgerPaymentControl = null;

        while select sum(AmountCurDebit), sum(AmountCurCredit) from ledgerJournalTrans
            group by LedgerDimension, Company, AccountType, CurrencyCode, TransDate, Triangulation, ExchRate, ExchRateSecond
                where ledgerJournalTrans.JournalNum == _ledgerJournalId
                    && (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust
                        || ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
        {
            if (ledgerJournalTrans.parmAccount() != tmpLedgerPaymentControl.CustVendAC
                || ledgerJournalTrans.Company != tmpLedgerPaymentControl.Company
                || ledgerJournalTrans.AccountType != tmpLedgerPaymentControl.AccountType
                || ledgerJournalTrans.CurrencyCode != tmpLedgerPaymentControl.CurrencyCode)
            {
                if (tmpLedgerPaymentControl.CustVendAC != '')
                {
                    tmpLedgerPaymentControl.insert();
                }

                tmpLedgerPaymentControl.clear();
                tmpLedgerPaymentControl.JournalNum = _ledgerJournalId;
                tmpLedgerPaymentControl.CustVendAC = ledgerJournalTrans.parmAccount();
                tmpLedgerPaymentControl.Company = ledgerJournalTrans.Company;
                tmpLedgerPaymentControl.CurrencyCode = ledgerJournalTrans.CurrencyCode;

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust)
                {
                    tmpLedgerPaymentControl.CustName = CustTable::findByCompany(ledgerJournalTrans.Company, ledgerJournalTrans.parmAccount()).Name();
                }
                else
                {
                    tmpLedgerPaymentControl.CustName = VendTable::findByCompany(ledgerJournalTrans.Company, ledgerJournalTrans.parmAccount()).Name();
                }
            }

            tmpLedgerPaymentControl.AmountCurDebCred += ledgerJournalTrans.AmountCurDebit - ledgerJournalTrans.AmountCurCredit;

            tmpLedgerPaymentControl.AmountMSTDebCred += CurrencyExchangeHelper::mstAmount(ledgerJournalTrans.AmountCurDebit - ledgerJournalTrans.AmountCurCredit, ledgerJournalTrans.CurrencyCode, ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(ledgerJournalTrans.Triangulation), ledgerJournalTrans.ExchRate, ledgerJournalTrans.ExchRateSecond);

            // <GCN>
            if (isShowDRsCRsFeatureEnabled)
            {
                tmpLedgerPaymentControl.AmountCurCredit_CN += ledgerJournalTrans.AmountCurCredit;
                tmpLedgerPaymentControl.AmountCurDebit_CN += ledgerJournalTrans.AmountCurDebit;

                tmpLedgerPaymentControl.AmountMstCredit_CN += CurrencyExchangeHelper::mstAmount(ledgerJournalTrans.AmountCurCredit, ledgerJournalTrans.CurrencyCode, ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(ledgerJournalTrans.Triangulation), ledgerJournalTrans.ExchRate, ledgerJournalTrans.ExchRateSecond);

                tmpLedgerPaymentControl.AmountMstDebit_CN += CurrencyExchangeHelper::mstAmount(ledgerJournalTrans.AmountCurDebit, ledgerJournalTrans.CurrencyCode, ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(ledgerJournalTrans.Triangulation), ledgerJournalTrans.ExchRate, ledgerJournalTrans.ExchRateSecond);
            }
            // </GCN>
        }

        // <GCN>
        if (tmpLedgerPaymentControl.CustVendAC != ''
            && isShowDRsCRsFeatureEnabled)
        {
            tmpLedgerPaymentControl.AmountCurDebit_CN += ledgerJournalTrans.AmountCurDebit;
            tmpLedgerPaymentControl.AmountCurCredit_CN += ledgerJournalTrans.AmountCurCredit;

            tmpLedgerPaymentControl.AmountMstDebit_CN += CurrencyExchangeHelper::mstAmount(ledgerJournalTrans.AmountCurDebit, ledgerJournalTrans.CurrencyCode, ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(ledgerJournalTrans.Triangulation), ledgerJournalTrans.ExchRate, ledgerJournalTrans.ExchRateSecond);

            tmpLedgerPaymentControl.AmountMstCredit_CN += CurrencyExchangeHelper::mstAmount(ledgerJournalTrans.AmountCurCredit, ledgerJournalTrans.CurrencyCode, ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(ledgerJournalTrans.Triangulation), ledgerJournalTrans.ExchRate, ledgerJournalTrans.ExchRateSecond);
        }
        // </GCN>

        if (tmpLedgerPaymentControl.CustVendAC != '')
        {
            tmpLedgerPaymentControl.insert();
        }

        tmpLedgerPaymentControl.CustVendAC = '';

        while select sum(AmountCurDebit), sum(AmountCurCredit) from ledgerJournalTrans
            group by LedgerDimension, Company, AccountType, CurrencyCode, TransDate, Triangulation, ExchRate, ExchRateSecond
                //<GCN>
                , OffsetLedgerDimension, OffsetAccountType, JournalNum
                //</GCN>
                where ledgerJournalTrans.JournalNum == _ledgerJournalId
                    && (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
        {
            if (ledgerJournalTrans.parmOffsetAccount() != tmpLedgerPaymentControl.CustVendAC
                || ledgerJournalTrans.Company != tmpLedgerPaymentControl.Company
                || ledgerJournalTrans.OffsetAccountType != tmpLedgerPaymentControl.AccountType
                || ledgerJournalTrans.CurrencyCode != tmpLedgerPaymentControl.CurrencyCode)
            {
                if (tmpLedgerPaymentControlCopy.CustVendAC != '')
                {
                    select forupdate tmpLedgerPaymentControl
                        where tmpLedgerPaymentControl.JournalNum == tmpLedgerPaymentControlCopy.JournalNum
                            && tmpLedgerPaymentControl.CustVendAC == tmpLedgerPaymentControlCopy.CustVendAC
                            && tmpLedgerPaymentControl.Company == tmpLedgerPaymentControlCopy.Company
                            && tmpLedgerPaymentControl.CurrencyCode == tmpLedgerPaymentControlCopy.CurrencyCode;

                    if (tmpLedgerPaymentControl)
                    {
                        tmpLedgerPaymentControl.AmountCurDebCred += tmpLedgerPaymentControlCopy.AmountCurDebCred;
                        tmpLedgerPaymentControl.AmountMSTDebCred += tmpLedgerPaymentControlCopy.AmountMSTDebCred;

                        //<GCN>
                        if (isShowDRsCRsFeatureEnabled)
                        {
                            tmpLedgerPaymentControl.AmountCurCredit_CN += tmpLedgerPaymentControlCopy.AmountCurCredit_CN;
                            tmpLedgerPaymentControl.AmountCurDebit_CN += tmpLedgerPaymentControlCopy.AmountCurDebit_CN;
                            tmpLedgerPaymentControl.AmountMstCredit_CN += tmpLedgerPaymentControlCopy.AmountMstCredit_CN;
                            tmpLedgerPaymentControl.AmountMstDebit_CN += tmpLedgerPaymentControlCopy.AmountMstDebit_CN;
                        }
                        //</GCN>

                        tmpLedgerPaymentControl.update();
                    }
                    else
                    {
                        tmpLedgerPaymentControl.clear();
                        tmpLedgerPaymentControl.JournalNum = tmpLedgerPaymentControlCopy.JournalNum;
                        tmpLedgerPaymentControl.CustVendAC = tmpLedgerPaymentControlCopy.CustVendAC;
                        tmpLedgerPaymentControl.Company = tmpLedgerPaymentControlCopy.Company;
                        tmpLedgerPaymentControl.CurrencyCode = tmpLedgerPaymentControlCopy.CurrencyCode;
                        tmpLedgerPaymentControl.CustName = tmpLedgerPaymentControlCopy.CustName;
                        tmpLedgerPaymentControl.AmountCurDebCred = tmpLedgerPaymentControlCopy.AmountCurDebCred;
                        tmpLedgerPaymentControl.AmountMSTDebCred = tmpLedgerPaymentControlCopy.AmountMSTDebCred;

                        //<GCN>
                        if (isShowDRsCRsFeatureEnabled)
                        {
                            tmpLedgerPaymentControl.AmountCurCredit_CN += tmpLedgerPaymentControlCopy.AmountCurCredit_CN;
                            tmpLedgerPaymentControl.AmountCurDebit_CN += tmpLedgerPaymentControlCopy.AmountCurDebit_CN;
                            tmpLedgerPaymentControl.AmountMstCredit_CN += tmpLedgerPaymentControlCopy.AmountMstCredit_CN;
                            tmpLedgerPaymentControl.AmountMstDebit_CN += tmpLedgerPaymentControlCopy.AmountMstDebit_CN;
                        }
                        //</GCN>

                        tmpLedgerPaymentControl.insert();
                    }
                }

                tmpLedgerPaymentControlCopy.clear();
                tmpLedgerPaymentControlCopy.JournalNum = _ledgerJournalId;
                tmpLedgerPaymentControlCopy.CustVendAC = ledgerJournalTrans.parmOffsetAccount();
                tmpLedgerPaymentControlCopy.Company = ledgerJournalTrans.Company;
                tmpLedgerPaymentControlCopy.CurrencyCode = ledgerJournalTrans.CurrencyCode;

                if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust)
                {
                    tmpLedgerPaymentControlCopy.CustName = CustTable::findByLedgerDimension(ledgerJournalTrans.parmOffsetLedgerDimension()).Name();
                }
                else
                {
                    tmpLedgerPaymentControlCopy.CustName = VendTable::findByLedgerDimension(ledgerJournalTrans.parmOffsetLedgerDimension()).Name();
                }
            }

            tmpLedgerPaymentControlCopy.AmountCurDebCred -= ledgerJournalTrans.AmountCurDebit - ledgerJournalTrans.AmountCurCredit;

            tmpLedgerPaymentControlCopy.AmountMSTDebCred -= CurrencyExchangeHelper::mstAmount(ledgerJournalTrans.AmountCurDebit - ledgerJournalTrans.AmountCurCredit, ledgerJournalTrans.CurrencyCode, ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(ledgerJournalTrans.Triangulation), ledgerJournalTrans.ExchRate, ledgerJournalTrans.ExchRateSecond);

            //<GCN>
            if (isShowDRsCRsFeatureEnabled)
            {
                tmpLedgerPaymentControlCopy.AmountCurCredit_CN -= ledgerJournalTrans.AmountCurCredit;
                tmpLedgerPaymentControlCopy.AmountCurDebit_CN -= ledgerJournalTrans.AmountCurDebit;

                tmpLedgerPaymentControlCopy.AmountMstCredit_CN -= CurrencyExchangeHelper::mstAmount(ledgerJournalTrans.AmountCurCredit, ledgerJournalTrans.CurrencyCode, ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(ledgerJournalTrans.Triangulation), ledgerJournalTrans.ExchRate, ledgerJournalTrans.ExchRateSecond);

                tmpLedgerPaymentControlCopy.AmountMstDebit_CN -= CurrencyExchangeHelper::mstAmount(ledgerJournalTrans.AmountCurDebit, ledgerJournalTrans.CurrencyCode, ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(ledgerJournalTrans.Triangulation), ledgerJournalTrans.ExchRate, ledgerJournalTrans.ExchRateSecond);
            }
            //</GCN>
        }
        if (tmpLedgerPaymentControlCopy.CustVendAC != '')
        {
            select forupdate tmpLedgerPaymentControl
                where tmpLedgerPaymentControl.JournalNum == tmpLedgerPaymentControlCopy.JournalNum
                    && tmpLedgerPaymentControl.CustVendAC == tmpLedgerPaymentControlCopy.CustVendAC
                    && tmpLedgerPaymentControl.Company == tmpLedgerPaymentControlCopy.Company
                    && tmpLedgerPaymentControl.CurrencyCode == tmpLedgerPaymentControlCopy.CurrencyCode;

            if (tmpLedgerPaymentControl)
            {
                tmpLedgerPaymentControl.AmountCurDebCred += tmpLedgerPaymentControlCopy.AmountCurDebCred;
                tmpLedgerPaymentControl.AmountMSTDebCred += tmpLedgerPaymentControlCopy.AmountMSTDebCred;

                //<GCN>
                if (isShowDRsCRsFeatureEnabled)
                {
                    tmpLedgerPaymentControl.AmountCurCredit_CN += tmpLedgerPaymentControlCopy.AmountCurCredit_CN;
                    tmpLedgerPaymentControl.AmountCurDebit_CN += tmpLedgerPaymentControlCopy.AmountMSTDebit_CN;
                    tmpLedgerPaymentControl.AmountMstDebit_CN += tmpLedgerPaymentControlCopy.AmountMstDebit_CN;
                    tmpLedgerPaymentControl.AmountMstCredit_CN += tmpLedgerPaymentControlCopy.AmountMstCredit_CN;
                }
                //</GCN>

                tmpLedgerPaymentControl.update();
            }
            else
            {
                tmpLedgerPaymentControl.clear();
                tmpLedgerPaymentControl.JournalNum = tmpLedgerPaymentControlCopy.JournalNum;
                tmpLedgerPaymentControl.CustVendAC = tmpLedgerPaymentControlCopy.CustVendAC;
                tmpLedgerPaymentControl.Company = tmpLedgerPaymentControlCopy.Company;
                tmpLedgerPaymentControl.CurrencyCode = tmpLedgerPaymentControlCopy.CurrencyCode;
                tmpLedgerPaymentControl.CustName = tmpLedgerPaymentControlCopy.CustName;
                tmpLedgerPaymentControl.AmountCurDebCred = tmpLedgerPaymentControlCopy.AmountCurDebCred;
                tmpLedgerPaymentControl.AmountMSTDebCred = tmpLedgerPaymentControlCopy.AmountMSTDebCred;

                //<GCN>
                if (isShowDRsCRsFeatureEnabled)
                {
                    tmpLedgerPaymentControl.AmountCurCredit_CN += tmpLedgerPaymentControlCopy.AmountCurCredit_CN;
                    tmpLedgerPaymentControl.AmountCurDebit_CN += tmpLedgerPaymentControlCopy.AmountCurDebit_CN;
                    tmpLedgerPaymentControl.AmountMstCredit_CN += tmpLedgerPaymentControlCopy.AmountMstCredit_CN;
                    tmpLedgerPaymentControl.AmountMstDebit_CN += tmpLedgerPaymentControlCopy.AmountMstDebit_CN;
                }
                //</GCN>

                tmpLedgerPaymentControl.insert();
            }
        }

        return tmpLedgerPaymentControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmpLedgerPaymentControl_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set or get the tmpLegerPaymentControl field.
    /// </summary>
    /// <param name="_tmpPayment">
    /// to set the tmpLedgerPaymentControl.
    /// </param>
    /// <returns>
    /// TmpLedgerPaymentControl.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpLedgerPaymentControl tmpLedgerPaymentControl_CN(TmpLedgerPaymentControl _tmpPayment = tmpLedgerPaymentControl)
    {
        tmpLedgerPaymentControl = _tmpPayment;
        return tmpLedgerPaymentControl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
