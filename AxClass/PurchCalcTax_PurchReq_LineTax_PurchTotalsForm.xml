<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCalcTax_PurchReq_LineTax_PurchTotalsForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchCalcTax_PurchReq_LineTax_PurchTotalsForm</c> controls tax calculation of purchase requisition.
/// It inherits <c>PurchCalcTax_PurchReq_LineTax</c>, but actually used for total calculation, not for line.
/// </summary>
class PurchCalcTax_PurchReq_LineTax_PurchTotalsForm extends PurchCalcTax_PurchReq_LineTax
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static PurchCalcTax_PurchReq_LineTax_PurchTotalsForm construct(PurchReqTable _purchReqTable)
    {
        return new PurchCalcTax_PurchReq_LineTax_PurchTotalsForm(_purchReqTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxUncommittedExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks <c>TaxUncommitted</c> for header exists or not.
    /// </summary>
    /// <returns>true if <c>TaxUncommitted</c> exists; otherwise, false.</returns>
    /// <remarks>
    /// Overrides the method of <c>PurchCalcTax_PurchReq_LineTax</c>.
    /// Same with the method of <c>PurchCalcTax_PurchReq</c>.
    /// </remarks>
    protected boolean taxUncommittedExists()
    {
        return TaxUncommitted::existByDocumentId(this.headingTableID(), this.headingRecID());
    }

]]></Source>
			</Method>
			<Method>
				<Name>doCalculateTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if tax should be calculated or recalculated.
    /// </summary>
    /// <returns>true if tax should be calculated or recalculated; otherwise, false.</returns>
    /// <remarks>
    /// Overrides the method of <c>PurchCalcTax_PurchReq_LineTax</c>.
    /// Same with the method of <c>PurchCalcTax_PurchReq</c>.
    /// </remarks>
    protected boolean doCalculateTax()
    {
        return purchReqTable.RequisitionStatus == PurchReqRequisitionStatus::Draft ||
            purchReqTable.RequisitionStatus == PurchReqRequisitionStatus::Rejected ||
            purchReqTable.RequisitionStatus == PurchReqRequisitionStatus::InReview;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>