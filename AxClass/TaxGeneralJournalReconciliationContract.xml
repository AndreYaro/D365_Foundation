<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGeneralJournalReconciliationContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  Contract class for <c>TaxGeneralJournalReconciliation</c> report.
/// </summary>
[
DataContractAttribute,
SysOperationGroupAttribute('FromGroup', "@SYS4083", '1'),
SysOperationGroupAttribute('ToGroup', "@SYS8828", '2'),
SysOperationGroupAttribute('Grouping', "@SYS12608", '3')
]
public class TaxGeneralJournalReconciliationContract implements SysOperationValidatable
{
    TransDate                                           fromDate, toDate;
    TaxCode                                             fromTaxCode, toTaxCode;
    MainAccountNum                                      fromMainAccount, toMainAccount;
    TaxSpecPerLedgerTransGroupBy                        groupDataBy;
    TaxGeneralJournalReconciliationRelationshipFilter   taxRelationshipFilter;
    TaxGeneralJournalReconciliationView                 view;
    boolean                                             displayBalanceSign;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('FromDate'),
    SysOperationGroupMemberAttribute('FromGroup'),
    SysOperationLabelAttribute(literalStr("@SYS7402")),
    SysOperationHelpTextAttribute(literalStr("@SYS101404"))
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromMainAccount</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('FromMainAccount'),
    SysOperationGroupMemberAttribute('FromGroup'),
    SysOperationLabelAttribute(literalStr("@SYS135766")),
    SysOperationHelpTextAttribute(literalStr("@SYS328455"))
    ]
    public MainAccountNum parmFromMainAccount(MainAccountNum _fromMainAccount = fromMainAccount)
    {
        fromMainAccount = _fromMainAccount;
        return fromMainAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromTaxCode</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('FromTaxCode'),
    SysOperationGroupMemberAttribute('FromGroup'),
    SysOperationLabelAttribute(literalStr("@SYS21877")),
    SysOperationHelpTextAttribute(literalStr("@SYS21878"))
    ]
    public TaxCode parmFromTaxCode(TaxCode _fromTaxCode = fromTaxCode)
    {
        fromTaxCode = _fromTaxCode;
        return fromTaxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupDataBy</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('GroupDetailsBy'),
    SysOperationGroupMemberAttribute('Grouping'),
    SysOperationLabelAttribute(literalStr("@SYS40345")),
    SysOperationDisplayOrderAttribute('1'),
    SysOperationHelpTextAttribute(literalStr("@SYS4004206"))
    ]
    public TaxSpecPerLedgerTransGroupBy parmGroupDataBy(TaxSpecPerLedgerTransGroupBy _groupby = groupDataBy)
    {
        groupDataBy = _groupby;
        return groupDataBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRelationshipFilter</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('TaxRelationshipFilter'),
    SysOperationGroupMemberAttribute('Grouping'),
    SysOperationLabelAttribute(literalStr("@Tax:TaxGeneralJournalReconciliationRelationshipFilterCaption")),
    SysOperationDisplayOrderAttribute('2'),
    SysOperationHelpTextAttribute(literalStr("@Tax:TaxGeneralJournalReconciliationRelationshipFilterHelpText"))
    ]
    public TaxGeneralJournalReconciliationRelationshipFilter parmRelationshipFilter(
        TaxGeneralJournalReconciliationRelationshipFilter _taxRelationshipFilter = taxRelationshipFilter)
    {
        taxRelationshipFilter = _taxRelationshipFilter;
        return taxRelationshipFilter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ToDate'),
    SysOperationGroupMemberAttribute('ToGroup'),
    SysOperationLabelAttribute(literalStr("@SYS7402")),
    SysOperationHelpTextAttribute(literalStr("@SYS101404"))
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToMainAccount</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ToMainAccount'),
    SysOperationGroupMemberAttribute('ToGroup'),
    SysOperationLabelAttribute(literalStr("@SYS135766")),
    SysOperationHelpTextAttribute(literalStr("@SYS328455"))
    ]
    public MainAccountNum parmToMainAccount(MainAccountNum _toMainAccount = toMainAccount)
    {
        toMainAccount = _toMainAccount;
        return toMainAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToTaxCode</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('ToTaxCode'),
    SysOperationGroupMemberAttribute('ToGroup'),
    SysOperationLabelAttribute(literalStr("@SYS21877")),
    SysOperationHelpTextAttribute(literalStr("@SYS21878"))
    ]
    public TaxCode parmToTaxCode(TaxCode _toTaxCode = toTaxCode)
    {
        toTaxCode = _toTaxCode;
        return toTaxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmView</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('View'),
    SysOperationGroupMemberAttribute('Grouping'),
    SysOperationLabelAttribute(literalStr("@Tax:TaxGeneralJournalReconciliationViewFilterCaption")),
    SysOperationDisplayOrderAttribute('3'),
    SysOperationHelpTextAttribute(literalStr("@Tax:TaxGeneralJournalReconciliationViewFilterHelpText"))
    ]
    public TaxGeneralJournalReconciliationView parmView(TaxGeneralJournalReconciliationView _view = view)
    {
        // Used by the SSRS report to show all data rows collapsed (summary) or all data rows expanded (details)
        view = _view;
        return view;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayBalanceSign</Name>
				<Source><![CDATA[
    [
    DataMemberAttribute('DisplayBalanceSign'),
    SysOperationControlVisibilityAttribute(false)
    ]
    public boolean parmDisplayBalanceSign(boolean _displayBalanceSign = displayBalanceSign)
    {
        displayBalanceSign = _displayBalanceSign;
        return displayBalanceSign;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Validates if the contract has valid parameters set.
    /// </summary>
    /// <returns>
    ///  A boolean indicating if the contract is valid.
    /// </returns>
    public boolean validate()
    {
        if (this.parmFromDate() > this.parmToDate())
        {
            warning("@SYS120590");
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>