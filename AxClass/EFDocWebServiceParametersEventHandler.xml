<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocWebServiceParametersEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EFDocWebServiceParametersEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>onValidateFieldEFDocWebServiceParameters</Name>
				<Source><![CDATA[
    [DataEventHandler(tablestr(EFDocWebServiceParameters_BR), DataEventType::ValidatingField)]
    public static void onValidateFieldEFDocWebServiceParameters(Common _sender, DataEventArgs _args)
    {
        EFDocWebServiceParameters_BR webServicesParams = _sender as EFDocWebServiceParameters_BR;
        ValidateFieldEventArgs ve = _args;

        boolean ret = true;

        if (ve.parmFieldId() == fieldNum(EFDocWebServiceParameters_BR, Version))
        {
            EFDocFormatClassInfo_BR::checkDefaultData();

            if (!EFDocFormatClassInfo_BR::isVersionAvailableForWebService(webServicesParams.WebService, webServicesParams.Version))
            {
                ret = checkFailed(strFmt("@SYP4861362", webServicesParams.WebService, EFDocWebServiceParametersEventHandler::getAvailableVersionsAsString(webServicesParams.WebService)));
            }
        }

        ve.parmValidateResult(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onValidateWriteEFDocWebServiceParameters</Name>
				<Source><![CDATA[
    [DataEventHandler(tablestr(EFDocWebServiceParameters_BR), DataEventType::ValidatingWrite)]
    public static void onValidateWriteEFDocWebServiceParameters(Common _sender, DataEventArgs _args)
    {
        EFDocWebServiceParameters_BR webServicesParams = _sender as EFDocWebServiceParameters_BR;

        ValidateEventArgs ve = _args;
        boolean ret = true;

        if (ve.parmValidateResult())
        {
            EFDocFormatClassInfo_BR::checkDefaultData();

            if (!EFDocFormatClassInfo_BR::isVersionAvailableForWebService(webServicesParams.WebService, webServicesParams.Version))
            {
                ret = checkFailed(strFmt("@SYP4861362", webServicesParams.WebService, EFDocWebServiceParametersEventHandler::getAvailableVersionsAsString(webServicesParams.WebService)));
            }

            ve.parmValidateResult(ret);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAvailableVersionsAsString</Name>
				<Source><![CDATA[
    private static str getAvailableVersionsAsString(EFDocWebService_BR _webService)
    {
        str         commaSeparatedVersions;
        container   versions;
        Counter     counter;

        versions = EFDocFormatClassInfo_BR::getAvailableVersionsForWebService(_webService);

        for (counter = 1; counter <= conLen(versions); counter++)
        {
            if (!commaSeparatedVersions)
            {
                commaSeparatedVersions = conPeek(versions, counter);
            }
            else
            {
                commaSeparatedVersions += strFmt(', %1', conPeek(versions, counter));
            }
        }

        return commaSeparatedVersions;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>