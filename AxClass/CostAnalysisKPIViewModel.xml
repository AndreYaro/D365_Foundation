<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostAnalysisKPIViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostAnalysisKPIViewModel</c> class manages the KPI controls on the cost analysis workspace.
/// </summary>
public class CostAnalysisKPIViewModel
{
    FromDate                    fromDate;
    ToDate                      toDate;
    CostIKPI                    inventoryTurnCard,
                                inventoryAccuracyCard;
    CostInventoryStatementModel model;
    CostKPICalculation          calculation;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static CostAnalysisKPIViewModel construct()
    {
        return new CostAnalysisKPIViewModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(CostIKPI          _inventoryTurnCard,
                           CostIKPI          _inventoryAccuracyCard)
    {
        inventoryAccuracyCard = _inventoryAccuracyCard;
        inventoryTurnCard     = _inventoryTurnCard;
        model = CostInventoryStatementModel::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes an instance of <c>CostAnalysisKPIViewModel</c> class using the supplied parameters.
    /// </summary>
    /// <param name = "_inventoryTurnCard">An inventory turn card KPI control to initialize.</param>
    /// <param name = "_inventoryAccuracyCard">An inventory accuracy card KPI control to initialize.</param>
    /// <returns></returns>
    public static CostAnalysisKPIViewModel newFromParameters(
                            CostIKPI          _inventoryTurnCard,
                            CostIKPI          _inventoryAccuracyCard)
    {
        var viewModel = CostAnalysisKPIViewModel::construct();
        viewModel.initialize(_inventoryTurnCard,
                             _inventoryAccuracyCard);

        return viewModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the KPI card controls on the cost analysis workspace.
    /// </summary>
    /// <param name = "_selectPeriod">A date period for which to refresh the cards.</param>
    public void update(CostSelectPeriodState _selectPeriod)
    {
        model.setDateRange(_selectPeriod.parmFromDate(), _selectPeriod.parmToDate());
        calculation = CostKPICalculation::newFromParameters(model);

        calculation.calculateKPIValues();

        if (inventoryAccuracyCard)
        {
            inventoryAccuracyCard.updateKPI(_selectPeriod, calculation.parmAccuracy());
        }
        if (inventoryTurnCard)
        {
            inventoryTurnCard.updateKPI(_selectPeriod, calculation.parmTurn());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>