<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqMemoryCacheCrossSessionScope</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqMemoryCacheCrossSessionScope</c> class allows to manage cache items of similar nature
/// across multiple sessions.
/// </summary>
final class ReqMemoryCacheCrossSessionScope
{
    private str scopePrefix;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>ReqMemoryCacheCrossSessionScope</c>.
    /// </summary>
    /// <param name = "_scopePrefix">The prefix of all cache keys in the scope.</param>
    public void new(str _scopePrefix)
    {
        scopePrefix = _scopePrefix + '#'; 
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPartitionScope</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new scope for cache items which are partition-specific. 
    /// </summary>
    /// <param name = "_scopePrefix">The prefix of cache item keys in the cache scope.</param>
    /// <returns>A new scope for cache items which are partition-specific.</returns>
    public static ReqMemoryCacheCrossSessionScope newPartitionScope(str _scopePrefix)
    {
        return new ReqMemoryCacheCrossSessionScope('Partition:' + int642Str(getCurrentPartitionRecId()) + '#' + _scopePrefix);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDataAreaScope</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new scope for cache items which are specific to the current data area.
    /// </summary>
    /// <param name = "_scopePrefix">The prefix of cache item keys in the cache scope.</param>
    /// <returns>A new scope for cache items which are specific to the current data area.</returns>
    public static ReqMemoryCacheCrossSessionScope newDataAreaScope(str _scopePrefix)
    {
        return new ReqMemoryCacheCrossSessionScope('DataArea:' + int642str(curCompanyId()) + '#' + _scopePrefix);
    }

]]></Source>
			</Method>
			<Method>
				<Name>scopeKeyToGlobalKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts a cache item key which is unique within the current scope to a key which is unique globally in <c>ReqMemoryCache</c>.
    /// </summary>
    /// <param name = "_scopeKey">The cache item key which is unique within the current scope.</param>
    /// <returns>A cache item key which is unique globally in the memory cache</returns>
    [Hookable(false)]
    internal str scopeKeyToGlobalKey(str _scopeKey)
    {
        return scopePrefix + _scopeKey;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>