<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestSplitContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CFMPaymentRequestSplitContract</c> class is the data contract class for the
/// <c>CFMPaymentRequestSplitService</c> service.
/// </summary>
[DataContractAttribute, SysOperationAlwaysInitializeAttribute, SysOperationContractProcessingAttribute(classStr(CFMPaymentRequestSplitUIBuilder))]
class CFMPaymentRequestSplitContract implements SysPackable, SysOperationInitializable, SysOperationValidatable
{
    AmountCur splitAmount;
    TransDate paymentDate;
    RecId paymentRequestRefRecId;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        splitAmount,
        paymentDate,
        paymentRequestRefRecId
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the data contract values.
    /// </summary>
    public void initialize()
    {
        splitAmount = 0;
        paymentDate = dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute,
    SysOperationLabelAttribute(literalStr("@SYS104996")),
    SysOperationHelpTextAttribute(literalStr("@Cashflowmanagement:NewRequestSpecifyPaymentDate ")),
    SysOperationDisplayOrderAttribute('1')]
    public ToDate parmPaymentDate(TransDate _paymentDate = paymentDate)
    {
        paymentDate = _paymentDate;
        return paymentDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentRequestRefRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute, SysOperationControlVisibilityAttribute(false)]
    public RefRecId parmPaymentRequestRefRecId(RefRecId _paymentRequestRefRecId = paymentRequestRefRecId)
    {
        paymentRequestRefRecId = _paymentRequestRefRecId;
        return paymentRequestRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSplitAmount</Name>
				<Source><![CDATA[
    [DataMemberAttribute,
    SysOperationLabelAttribute(literalStr("@Cashflowmanagement:AmountToPay")),
    SysOperationHelpTextAttribute(literalStr("@Cashflowmanagement:NewRequestSpecifyPayAmount")),
    SysOperationDisplayOrderAttribute('0')]
    public AmountCur parmSplitAmount(AmountCur _splitAmount = splitAmount)
    {
        splitAmount = _splitAmount;
        return splitAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Version version = SysOperationHelper::getVersion(_packedClass);
        boolean ret = false;

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                ret = true;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates data contract values.
    /// </summary>
    /// <returns>
    /// True if data contract values are correct; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (!paymentDate)
        {
            ret = checkFailed("@Cashflowmanagement:PaymDateSpecified");
        }
        else if (paymentDate < DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
        {
            ret = checkFailed("@Cashflowmanagement:PaymDateOfNewPaymRequestCanNotInPast");
        }

        if (splitAmount <= 0)
        {
            ret = checkFailed("@Cashflowmanagement:Amount2PaySpecified");
        }

        if (splitAmount >= CFMPaymentRequestTable::findRecID(paymentRequestRefRecId).amountCurBalance())
        {
            ret = checkFailed("@Cashflowmanagement:NewRequestPayAmountNotGreaterOrigRequestPayAmount");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>