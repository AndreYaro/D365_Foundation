<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPlanCopyReqRouteJob</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqPlanCopyReqRouteJob</c> class copies route jobs of planned production orders from the source master plan version
/// to the target master plan version.
/// </summary>
class ReqPlanCopyReqRouteJob extends SysQueryInsertRecordSet
{
    int reqRouteJobDatasourceId;
    int reqPlanVersionDatasourceId;

    ReqPlanVersion reqPlanVersionFrom;
    ReqPlanVersion reqPlanVersionTo;

    private QueryBuildRange range;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>wrkCtrIdRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the range of the query on the <c>WrkCtrId</c> field.
    /// </summary>
    /// <param name = "_rangeValue">The range value for the query.</param>
    public void wrkCtrIdRange(WrkCtrId _rangeValue)
    {
        this.init();

        range.value(queryValue(_rangeValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    protected void initFieldMapping()
    {
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, ReqPOId), fieldStr(ReqRouteJob, ReqPOId));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, NumSecondary), fieldStr(ReqRouteJob, NumSecondary));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, OprPriority), fieldStr(ReqRouteJob, OprPriority));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, NumPrimary), fieldStr(ReqRouteJob, NumPrimary));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, NumType), fieldStr(ReqRouteJob, NumType));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, OprNum), fieldStr(ReqRouteJob, OprNum));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, ToTime), fieldStr(ReqRouteJob, ToTime));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, ToDate), fieldStr(ReqRouteJob, ToDate));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, FromTime), fieldStr(ReqRouteJob, FromTime));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, FromDate), fieldStr(ReqRouteJob, FromDate));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, SchedCancelled), fieldStr(ReqRouteJob, SchedCancelled));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, LinkType), fieldStr(ReqRouteJob, LinkType));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, Link), fieldStr(ReqRouteJob, Link));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, JobType), fieldStr(ReqRouteJob, JobType));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, PropertyId), fieldStr(ReqRouteJob, PropertyId));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, CalcTimeHours), fieldStr(ReqRouteJob, CalcTimeHours));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, SchedTimeHours), fieldStr(ReqRouteJob, SchedTimeHours));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, WrkCtrId), fieldStr(ReqRouteJob, WrkCtrId));
        this.mapField(reqRouteJobDatasourceId, fieldStr(ReqRouteJob, JobControl), fieldStr(ReqRouteJob, JobControl));

        this.mapField(reqPlanVersionDatasourceId, fieldStr(ReqPlanVersion, RecId), fieldStr(ReqRouteJob, PlanVersion));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected Query initQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsReqRouteJob = query.addDataSource(tableNum(ReqRouteJob));
        qbdsReqRouteJob.addRange(fieldNum(ReqRouteJob, PlanVersion)).value(queryValue(reqPlanVersionFrom.RecId));
        range = qbdsReqRouteJob.addRange(fieldNum(ReqRouteJob, WrkCtrId));
        reqRouteJobDatasourceId = qbdsReqRouteJob.uniqueId();
        
        // Join required as literals are not supported
        QueryBuildDataSource qbdsReqPlanVersion = qbdsReqRouteJob.addDataSource(tableNum(ReqPlanVersion));
        qbdsReqPlanVersion.addRange(fieldNum(ReqPlanVersion, RecId)).value(queryValue(reqPlanVersionTo.RecId));
        reqPlanVersionDatasourceId = qbdsReqPlanVersion.uniqueId();

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    protected Common initTargetCursor()
    {
        ReqRouteJob reqRouteJobInsert;

        reqRouteJobInsert.skipDataMethods(true);
        reqRouteJobInsert.skipAosValidation(true);

        return reqRouteJobInsert;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromReqPlanVersions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a new instance of the <c>ReqPlanCopyReqRouteJob</c> class.
    /// </summary>
    /// <param name="_reqPlanVersionFrom">
    ///     The version of the source master plan.
    /// </param>
    /// <param name="_reqPlanVersionTo">
    ///     The version of the target master plan.
    /// </param>
    /// <returns>A new instance.</returns>
    public static ReqPlanCopyReqRouteJob newFromReqPlanVersions(ReqPlanVersion _reqPlanVersionFrom, ReqPlanVersion _reqPlanVersionTo)
    {
        ReqPlanCopyReqRouteJob instance = new ReqPlanCopyReqRouteJob();
        instance.reqPlanVersionFrom = _reqPlanVersionFrom;
        instance.reqPlanVersionTo = _reqPlanVersionTo;

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>