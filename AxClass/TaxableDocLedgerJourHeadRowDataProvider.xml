<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxableDocLedgerJourHeadRowDataProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Row data provider for leger journal table.
/// </summary>
public class TaxableDocLedgerJourHeadRowDataProvider extends TaxableDocumentRowDataProviderHeader
{
    TaxEngineLedgerJournalTransHeader   ledgerJournalTransHeader;
    LedgerJournalTrans                  ledgerJournalTrans;

    VendTable                       vendTable;
    CustTable                       custTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillInFields</Name>
				<Source><![CDATA[
    public void fillInFields(TaxableDocumentLineObject _lineObj)
    {
        super(_lineObj);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMainTable</Name>
				<Source><![CDATA[
    protected void initMainTable()
    {
        ledgerJournalTransHeader = mainRecord as TaxEngineLedgerJournalTransHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRelatedTables</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init related tables.
    /// </summary>
    protected void initRelatedTables()
    {
        LedgerJournalTrans ledgerJournalTransLoc;

        ledgerJournalTrans = LedgerJournalTrans::find(ledgerJournalTransHeader.JournalNum, ledgerJournalTransHeader.Voucher, false);

        if (LedgerJournalTrans::isCustomerInvoice(ledgerJournalTrans) || LedgerJournalTrans::isCustomerPayment(ledgerJournalTrans))
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust && ledgerJournalTrans.LedgerDimension != 0)
            {
                custTable = ledgerJournalTrans.findCustTable();
            }
            else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust && ledgerJournalTrans.OffsetLedgerDimension != 0)
            {
                custTable = ledgerJournalTrans.findCustForOffset();
            }

            if (!custTable)
            {
                // for multi line.
                select firstonly ledgerJournalTransLoc
                where ledgerJournalTransLoc.Voucher == ledgerJournalTrans.Voucher
                    && ledgerJournalTransLoc.JournalNum == ledgerJournalTrans.JournalNum
                    && ((ledgerJournalTransLoc.AccountType == LedgerJournalACType::Cust
                            && ledgerJournalTransLoc.LedgerDimension != 0)
                        || (ledgerJournalTransLoc.OffsetAccountType == LedgerJournalACType::Cust
                            && ledgerJournalTransLoc.OffsetLedgerDimension != 0));

                if (ledgerJournalTransLoc)
                {
                    custTable = ledgerJournalTransLoc.findCustTable();
                }
            }
        }
        else if (LedgerJournalTrans::isVendorInvoice(ledgerJournalTrans) || LedgerJournalTrans::isVendorPayment(ledgerJournalTrans))
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend && ledgerJournalTrans.LedgerDimension != 0)
            {
                vendTable = ledgerJournalTrans.findVendTable();
            }
            else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend && ledgerJournalTrans.OffsetLedgerDimension != 0)
            {
                vendTable = ledgerJournalTrans.findVendForOffset();
            }

            if (!vendTable)
            {
                // for multi line.
                select firstonly ledgerJournalTransLoc
                    where ledgerJournalTransLoc.Voucher == ledgerJournalTrans.Voucher
                        && ledgerJournalTransLoc.JournalNum == ledgerJournalTrans.JournalNum
                        && ((ledgerJournalTransLoc.AccountType == LedgerJournalACType::Vend
                                && ledgerJournalTransLoc.LedgerDimension != 0)
                            || (ledgerJournalTransLoc.OffsetAccountType == LedgerJournalACType::Vend
                                && ledgerJournalTransLoc.OffsetLedgerDimension != 0));

                if (ledgerJournalTransLoc)
                {
                    vendTable = ledgerJournalTransLoc.findVendTable();
                }
            }
        }

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>