<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetDimensionFocusDelegates</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetDimensionFocusDelegates
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDimensionFocusProcessBalanceBudgetInstance</Name>
				<Source><![CDATA[
    [SubscribesTo(classStr(DimensionFocusProcessBalance), staticDelegateStr(DimensionFocusProcessBalance, getInstance))]
    public static void getDimensionFocusProcessBalanceBudgetInstance(boolean _isUpdate, DimensionHierarchy _dimensionHierarchy, EventHandlerResult result)
    {
        DimensionFocusProcessBalance dimensionFocusProcessBalance;

        // Check if LegacyBudgetAnalysis field is enabled, as legacy budget analysis form doesn't use the amounts from the balances framework
        boolean useLegacyBudgetAnalysis = BudgetParameters::find().DisplayLegacyBudgetAnalysis;

        if (_isUpdate && _dimensionHierarchy.FocusState == DimensionFocusBalanceInitializationState::Initialized && !useLegacyBudgetAnalysis)
        {
            dimensionFocusProcessBalance = new BudgetDimensionFocusUpdateBalance();
        }
        else if (!useLegacyBudgetAnalysis)
        {
            dimensionFocusProcessBalance = new BudgetDimensionFocusInitializeBalance();
        }

        if (dimensionFocusProcessBalance)
        {
            dimensionFocusProcessBalance.setDimensionHierarchy(_dimensionHierarchy);
        }

        result.result(dimensionFocusProcessBalance);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearFocusDimensionReferences</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(DimensionFocusUpdateAsync), staticMethodStr(DimensionFocusUpdateAsync, removeBalancesForHierarchy))]
    internal static void clearFocusDimensionReferences(XppPrePostArgs _args)
    {
        boolean isReset;
        container returnValue = _args.getReturnValue();

        if (returnValue != conNull())
        {
            isReset = conPeek(returnValue, 1);
        }

        if (isReset)
        {
            container parms = _args.getArgNum(0);
            DimensionHierarchyId dimensionSetRecId = conpeek(parms, 1);

            if (dimensionSetRecId)
            {
                BudgetDimensionFocusDimensionReference::deleteForDimensionHierarchy(dimensionSetRecId);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>