<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetTransactionLine_BegBalFee</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjBudgetTransactionLine_BegBalFee</c> class is used to hold the budget transaction information.
/// </summary>
class ProjBudgetTransactionLine_BegBalFee extends ProjBudgetTransactionLine
{
    ProjBegBalJournalTrans_Fee    projBegBalJournalTrans_Fee;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project category ID of the transaction.
    /// </summary>
    /// <returns>
    ///    The project category ID of the transaction.
    /// </returns>
    public ProjCategoryId categoryId()
    {
        return projBegBalJournalTrans_Fee.CategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the cost amount of the transaction after currency conversion.
    /// </summary>
    /// <returns>
    ///    Always returns 0.
    /// </returns>
    public CostAmount costAmount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmountCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the currency code of the cost amount.
    /// </summary>
    /// <returns>
    ///    The currency code.
    /// </returns>
    public CurrencyCode costAmountCurrencyCode()
    {
        return CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>linePropertyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project Line Property ID of the transaction.
    /// </summary>
    /// <returns>
    ///    The project Line Property ID of the transaction.
    /// </returns>
    public ProjLinePropertyId linePropertyId()
    {
        return projBegBalJournalTrans_Fee.LinePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>ProjBudgetTransactionLine_BegBalFee</c> class.
    /// </summary>
    /// <param name="_projBegBalJournalTrans_Fee">
    ///    A <c>ProjBegBalJournalTrans_Fee</c> buffer.
    /// </param>
    void new(ProjBegBalJournalTrans_Fee _projBegBalJournalTrans_Fee)
    {
        super();
        projBegBalJournalTrans_Fee = _projBegBalJournalTrans_Fee;
        quantity = projBegBalJournalTrans_Fee.ProjSalesAmount < 0 ? -1 : 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransIdRef</Name>
				<Source><![CDATA[
    public ProjTransIdBase parmTransIdRef(ProjTransIdBase _projTransIdBase = projTransIdBase)
    {
        projTransIdBase = _projTransIdBase;

        return projTransIdBase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project ID of the transaction.
    /// </summary>
    /// <returns>
    ///    The project ID.
    /// </returns>
    public ProjId projId()
    {
        return projBegBalJournalTrans_Fee.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the sales amount of the transaction after currency conversion.
    /// </summary>
    /// <returns>
    ///    The sales amount.
    /// </returns>
    public SalesAmount salesAmount()
    {
        return CurrencyExchangeHelper::amount(projBegBalJournalTrans_Fee.ProjSalesAmount, projBegBalJournalTrans_Fee.ProjSalesCurrencyId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmountCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the currency code of the sales amount.
    /// </summary>
    /// <returns>
    ///    The currency code.
    /// </returns>
    public CurrencyCode salesAmountCurrencyCode()
    {
        return projBegBalJournalTrans_Fee.ProjSalesCurrencyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction date of the transaction.
    /// </summary>
    /// <returns>
    ///    The transaction date.
    /// </returns>
    public TransDate transDate()
    {
        return projBegBalJournalTrans_Fee.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction ID of the transaction.
    /// </summary>
    /// <returns>
    ///    The transaction ID.
    /// </returns>
    public ProjTransIdBase transId()
    {
        if (! this.parmTransIdRef())
        {
            projTransIdBase = projBegBalJournalTrans_Fee.TransId;
        }
        return this.parmTransIdRef();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transaction type of the transaction line.
    /// </summary>
    /// <returns>
    ///    The revenue type enumeration value.
    /// </returns>
    public ProjTransType transType()
    {
        return ProjTransType::Revenue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
