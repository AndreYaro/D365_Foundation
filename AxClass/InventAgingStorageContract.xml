<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAgingStorageContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventAgingStorageContract</c> class is the data contract for the InventAging SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationGroupAttribute('ProcessIdentifierGroup', "@SYS88589", '1'),
    SysOperationGroupAttribute('InventoryDimension', "@SYS53627", '2'),
    SysOperationGroupAttribute('ViewGroup', "@SYS315645", '3'),
    SysOperationGroupAttribute('AgingPeriod', "@GLS100070", '5'),
    SysOperationContractProcessingAttribute(classStr(InventAgingStorageUIBuilder), 
    SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class InventAgingStorageContract implements SysOperationValidatable
{
    #InventDimDevelop
    #ISOCountryRegionCodes

    Name                executionName;
    TransDate           asOnDate;
    ItemId              itemId;
    ItemGroupId         itemGroupId;

    InventAgingPeriod   agingPeriod;

    int                 intervalDaysOne;
    int                 intervalDaysTwo;
    int                 intervalDaysThree;
    int                 intervalDaysFour;

    TransDate           intervalDateOne;
    TransDate           intervalDateTwo;
    TransDate           intervalDateThree;
    TransDate           intervalDateFour;

    DateCode            intervalDatePeriodOne;
    DateCode            intervalDatePeriodTwo;
    DateCode            intervalDatePeriodThree;
    DateCode            intervalDatePeriodFour;

    InventAgingView     viewItemGroup;
    InventAgingView     viewItem;
    InventAgingView     viewConfigId;
    InventAgingView     viewInventBatchId;
    InventAgingView     viewInventColorId;
    InventAgingView     viewInventGTDId;
    InventAgingView     viewInventLocationId;
    InventAgingView     viewInventOwnerId;
    InventAgingView     viewInventProfileId;
    InventAgingView     viewInventSerialId;
    InventAgingView     viewInventSiteId;
    InventAgingView     viewInventSizeId;
    InventAgingView     viewInventStatusId;
    InventAgingView     viewInventStyleId;
    InventAgingView     viewInventVersionId;
    InventAgingView     viewLicensePlateId;
    InventAgingView     viewWMSLocationId;

    InventAgingView     viewWMSPalletIdUnused;

    InventAgingViewOnly viewDimension1;
    InventAgingViewOnly viewDimension2;
    InventAgingViewOnly viewDimension3;
    InventAgingViewOnly viewDimension4;
    InventAgingViewOnly viewDimension5;
    InventAgingViewOnly viewDimension6;
    InventAgingViewOnly viewDimension7;
    InventAgingViewOnly viewDimension8;
    InventAgingViewOnly viewDimension9;
    InventAgingViewOnly viewDimension10;
    InventAgingViewOnly viewDimension11;
    InventAgingViewOnly viewDimension12;

    ItemId              dimensionAttr;

    str                 query;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAsOnDateOrDefault</Name>
				<Source><![CDATA[
    internal TransDate getAsOnDateOrDefault()
    {
        if (this.parmAsOnDate())
        {
            return this.parmAsOnDate();
        }

        return DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPeriodFour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date for period four.
    /// </summary>
    /// <returns>
    /// The date that specifies period four.
    /// </returns>
    public TransDate getPeriodFour()
    {
        TransDate transDate;

        switch (this.parmAgingPeriodUnit())
        {
            case InventAgingPeriod::Days:
                transDate = this.getAsOnDateOrDefault() - this.parmIntervalDaysFour();
                break;
            case InventAgingPeriod::Dates:
                transDate = this.parmIntervalDateFour();
                break;
            case InventAgingPeriod::DateIntervals:
                transDate = LedgerPeriodCode::find(this.parmIntervalDatePeriodFour()).fromDate();
                break;
        }

        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPeriodOne</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date for period one.
    /// </summary>
    /// <returns>
    /// The date that specifies period one.
    /// </returns>
    public TransDate getPeriodOne()
    {
        TransDate transDate;

        switch (this.parmAgingPeriodUnit())
        {
            case InventAgingPeriod::Days:
                transDate = this.getAsOnDateOrDefault() - this.parmIntervalDaysOne();
                break;
            case InventAgingPeriod::Dates:
                transDate = this.parmIntervalDateOne();
                break;
            case InventAgingPeriod::DateIntervals:
                transDate = LedgerPeriodCode::find(this.parmIntervalDatePeriodOne()).fromDate();
                break;
        }

        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPeriodThree</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date for period three.
    /// </summary>
    /// <returns>
    /// The date that specifies period three.
    /// </returns>
    public TransDate getPeriodThree()
    {
        TransDate transDate;

        switch (this.parmAgingPeriodUnit())
        {
            case InventAgingPeriod::Days:
                transDate = this.getAsOnDateOrDefault() - this.parmIntervalDaysThree();
                break;
            case InventAgingPeriod::Dates:
                transDate = this.parmIntervalDateThree();
                break;
            case InventAgingPeriod::DateIntervals:
                transDate = LedgerPeriodCode::find(this.parmIntervalDatePeriodThree()).fromDate();
                break;
        }

        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPeriodTwo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date for period two.
    /// </summary>
    /// <returns>
    /// The date that specifies period two.
    /// </returns>
    public TransDate getPeriodTwo()
    {
        TransDate transDate;

        switch (this.parmAgingPeriodUnit())
        {
            case InventAgingPeriod::Days:
                transDate = this.getAsOnDateOrDefault() - this.parmIntervalDaysTwo();
                break;
            case InventAgingPeriod::Dates:
                transDate = this.parmIntervalDateTwo();
                break;
            case InventAgingPeriod::DateIntervals:
                transDate = LedgerPeriodCode::find(this.parmIntervalDatePeriodTwo()).fromDate();
                break;
        }

        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the data contract class with default values.
    /// </summary>
    public void initialize()
    {
        asOnDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
        agingPeriod = InventAgingPeriod::Days;
        intervalDaysOne = 30;
        intervalDaysTwo = 60;
        intervalDaysThree = 90;
        intervalDaysFour = 120;
        viewItemGroup = InventAgingView::Total;
        viewItem = InventAgingView::View;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [DataMemberAttribute, AifQueryTypeAttribute('_query', queryStr(InventAging))]
    public str parmQuery(str _query = query)
    {
        query = _query;

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExecutionName</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ExecutionName'),
        SysOperationDisplayOrderAttribute('1'),
        SysOperationGroupMemberAttribute('ProcessIdentifierGroup')
    ]
    public Name parmExecutionName(Name _executionName = executionName)
    {
        executionName = _executionName;

        return executionName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgingPeriodUnit</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('AgingPeriodUnit'),
        SysOperationLabelAttribute(literalStr("@SYS4006416")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006421")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public InventAgingPeriod parmAgingPeriodUnit(InventAgingPeriod _agingPeriod = agingPeriod)
    {
        agingPeriod = _agingPeriod;
        return agingPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAsOnDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('AsOnDate'),
        SysOperationLabelAttribute(literalStr("@SYS4006422")),
        SysOperationHelpTextAttribute(literalStr("@SCM:InventAgingReportStorageAsOnDateHelpText")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmAsOnDate(TransDate _asOnDate = asOnDate)
    {
        asOnDate = _asOnDate;
        return asOnDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDateFour</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDateFour'),
        SysOperationLabelAttribute(literalStr("@GLS100149")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006463")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('9')
    ]
    public TransDate parmIntervalDateFour(TransDate _intervalDateFour = intervalDateFour)
    {
        intervalDateFour = _intervalDateFour;
        return intervalDateFour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDateOne</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDateOne'),
        SysOperationLabelAttribute(literalStr("@GLS100124")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006460")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('6')
    ]
    public TransDate parmIntervalDateOne(TransDate _intervalDateOne = intervalDateOne)
    {
        intervalDateOne = _intervalDateOne;
        return intervalDateOne;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDatePeriodFour</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDatePeriodFour'),
        SysOperationLabelAttribute(literalStr("@GLS100149")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006467")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('13')
    ]
    public DateCode parmIntervalDatePeriodFour(DateCode _intervalDatePeriodFour = intervalDatePeriodFour)
    {
        intervalDatePeriodFour = _intervalDatePeriodFour;
        return intervalDatePeriodFour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDatePeriodOne</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDatePeriodOne'),
        SysOperationLabelAttribute(literalStr("@GLS100124")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006464")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('10')
    ]
    public DateCode parmIntervalDatePeriodOne(DateCode _intervalDatePeriodOne = intervalDatePeriodOne)
    {
        intervalDatePeriodOne = _intervalDatePeriodOne;
        return intervalDatePeriodOne;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDatePeriodThree</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDatePeriodThree'),
        SysOperationLabelAttribute(literalStr("@GLS100148")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006466")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('12')
    ]
    public DateCode parmIntervalDatePeriodThree(DateCode _intervalDatePeriodThree = intervalDatePeriodThree)
    {
        intervalDatePeriodThree = _intervalDatePeriodThree;
        return intervalDatePeriodThree;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDatePeriodTwo</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDatePeriodTwo'),
        SysOperationLabelAttribute(literalStr("@GLS100125")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006465")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('11')
    ]
    public DateCode parmIntervalDatePeriodTwo(DateCode _intervalDatePeriodTwo = intervalDatePeriodTwo)
    {
        intervalDatePeriodTwo = _intervalDatePeriodTwo;
        return intervalDatePeriodTwo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDateThree</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDateThree'),
        SysOperationLabelAttribute(literalStr("@GLS100148")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006462")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('8')
    ]
    public TransDate parmIntervalDateThree(TransDate _intervalDateThree = intervalDateThree)
    {
        intervalDateThree = _intervalDateThree;
        return intervalDateThree;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDateTwo</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDateTwo'),
        SysOperationLabelAttribute(literalStr("@GLS100125")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006461")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('7')
    ]
    public TransDate parmIntervalDateTwo(TransDate _intervalDateTwo = intervalDateTwo)
    {
        intervalDateTwo = _intervalDateTwo;
        return intervalDateTwo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDaysFour</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('intervalDaysFour'),
        SysOperationLabelAttribute(literalStr("@GLS100149")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006459")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('5')
    ]
    public int parmIntervalDaysFour(int _intervalDaysFour = intervalDaysFour)
    {
        intervalDaysFour = _intervalDaysFour;
        return intervalDaysFour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDaysOne</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IntervalDaysOne'),
        SysOperationLabelAttribute(literalStr("@GLS100124")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006456")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public int parmIntervalDaysOne(int _intervalDaysOne = intervalDaysOne)
    {
        intervalDaysOne = _intervalDaysOne;
        return intervalDaysOne;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDaysThree</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('intervalDaysThree'),
        SysOperationLabelAttribute(literalStr("@GLS100148")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006458")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('4')
    ]
    public int parmIntervalDaysThree(int _intervalDaysThree = intervalDaysThree)
    {
        intervalDaysThree = _intervalDaysThree;
        return intervalDaysThree;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntervalDaysTwo</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('intervalDaysTwo'),
        SysOperationLabelAttribute(literalStr("@GLS100125")),
        SysOperationHelpTextAttribute(literalStr("@SYS4006457")),
        SysOperationGroupMemberAttribute('AgingPeriod'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public int parmIntervalDaysTwo(int _intervalDaysTwo = intervalDaysTwo)
    {
        intervalDaysTwo = _intervalDaysTwo;
        return intervalDaysTwo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewConfigId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewConfigId'),
        SysOperationDisplayOrderAttribute('3'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewConfig parmViewConfigId(InventAgingViewConfig _viewConfigId = viewConfigId)
    {
        viewConfigId = _viewConfigId;

        return viewConfigId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventBatchId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventBatchId'),
        SysOperationDisplayOrderAttribute('9'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewBatch parmViewInventBatchId(InventAgingViewBatch _viewInventBatchId = viewInventBatchId)
    {
        viewInventBatchId = _viewInventBatchId;

        return viewInventBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventColorId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventColorId'),
        SysOperationDisplayOrderAttribute('5'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewColor parmViewInventColorId(InventAgingViewColor _viewInventColorId = viewInventColorId)
    {
        viewInventColorId = _viewInventColorId;

        return viewInventColorId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventGTDId_RU</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventGTDId'),
        SysOperationDisplayOrderAttribute('12'),
        SysOperationGroupMemberAttribute('ViewGroup'),
        SysOperationCountryRegionCodesAttribute([#isoRU])
    ]
    public InventAgingViewGTD_RU parmViewInventGTDId_RU(InventAgingViewGTD_RU _viewInventGTDId = viewInventGTDId)
    {
        viewInventGTDId = _viewInventGTDId;

        return viewInventGTDId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventLocationId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventLocationId'),
        SysOperationDisplayOrderAttribute('8'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewInventLocation parmViewInventLocationId(InventAgingViewInventLocation _viewInventLocationId = viewInventLocationId)
    {
        viewInventLocationId = _viewInventLocationId;

        return viewInventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventOwnerId_RU</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventOwnerId'),
        SysOperationDisplayOrderAttribute('13'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewOwner parmViewInventOwnerId_RU(InventAgingViewOwner _viewInventOwnerId = viewInventOwnerId)
    {
        viewInventOwnerId = _viewInventOwnerId;

        return viewInventOwnerId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventProfileId_RU</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventProfileId'),
        SysOperationDisplayOrderAttribute('14'),
        SysOperationGroupMemberAttribute('ViewGroup'),
        SysOperationCountryRegionCodesAttribute([#isoRU])
    ]
    public InventAgingViewProfile_RU parmViewInventProfileId_RU(InventAgingViewProfile_RU _viewInventProfileId = viewInventProfileId)
    {
        viewInventProfileId = _viewInventProfileId;

        return viewInventProfileId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventSerialId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventSerialId'),
        SysOperationDisplayOrderAttribute('12'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewSerial parmViewInventSerialId(InventAgingViewSerial _viewInventSerialId = viewInventSerialId)
    {
        viewInventSerialId = _viewInventSerialId;

        return viewInventSerialId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventSiteId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventSiteId'),
        SysOperationDisplayOrderAttribute('7'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewSite parmViewInventSiteId(InventAgingViewSite _viewInventSiteId = viewInventSiteId)
    {
        viewInventSiteId = _viewInventSiteId;

        return viewInventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventSizeId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventSizeId'),
        SysOperationDisplayOrderAttribute('4'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewSize parmViewInventSizeId(InventAgingViewSize _viewInventSizeId = viewInventSizeId)
    {
        viewInventSizeId = _viewInventSizeId;

        return viewInventSizeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventStatusId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventStatusId'),
        SysOperationDisplayOrderAttribute('15'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewStatus parmViewInventStatusId(InventAgingViewStatus _viewInventStatusId = viewInventStatusId)
    {
        viewInventStatusId = _viewInventStatusId;

        return viewInventStatusId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventStyleId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventStyleId'),
        SysOperationDisplayOrderAttribute('6'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewStyle parmViewInventStyleId(InventAgingViewStyle _viewInventStyleId = viewInventStyleId)
    {
        viewInventStyleId = _viewInventStyleId;

        return viewInventStyleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventVersionId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewInventVersionId'),
        SysOperationDisplayOrderAttribute('24'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewVersion parmViewInventVersionId(InventAgingViewVersion _viewInventVersionId = viewInventVersionId)
    {
        viewInventVersionId = _viewInventVersionId;

        return viewInventVersionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewItem</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewItem'),
        SysOperationLabelAttribute(literalStr("@SYS12836")),
        SysOperationGroupMemberAttribute('ViewGroup'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public InventAgingView parmViewItem(InventAgingView _viewItem = viewItem)
    {
        viewItem = _viewItem;
        return viewItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewItemGroup</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewItemGroup'),
        SysOperationLabelAttribute(literalStr("@SYS4922")),
        SysOperationGroupMemberAttribute('ViewGroup'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public InventAgingView parmViewItemGroup(InventAgingView _viewItemGroup = viewItemGroup)
    {
        viewItemGroup = _viewItemGroup;
        return viewItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewLicensePlateId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewLicensePlateId'),
        SysOperationDisplayOrderAttribute('16'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewLicensePlate parmViewLicensePlateId(InventAgingViewLicensePlate _viewLicensePlateId = viewLicensePlateId)
    {
        viewLicensePlateId = _viewLicensePlateId;

        return viewLicensePlateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewWMSLocationId</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewWMSLocationId'),
        SysOperationDisplayOrderAttribute('10'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewWMSLocation parmViewWMSLocationId(InventAgingViewWMSLocation _viewWMSLocationId = viewWMSLocationId)
    {
        viewWMSLocationId = _viewWMSLocationId;

        return viewWMSLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension1</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension1'),
        SysOperationDisplayOrderAttribute('12'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension1 parmViewDimension1(InventAgingViewDimension1 _viewDimension1 = viewDimension1)
    {
        viewDimension1 = _viewDimension1;

        return viewDimension1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension2</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension2'),
        SysOperationDisplayOrderAttribute('13'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension2 parmViewDimension2(InventAgingViewDimension2 _viewDimension2 = viewDimension2)
    {
        viewDimension2 = _viewDimension2;

        return viewDimension2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension3</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension3'),
        SysOperationDisplayOrderAttribute('14'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension3 parmViewDimension3(InventAgingViewDimension3 _viewDimension3 = viewDimension3)
    {
        viewDimension3 = _viewDimension3;

        return viewDimension3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension4</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension4'),
        SysOperationDisplayOrderAttribute('15'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension4 parmViewDimension4(InventAgingViewDimension4 _viewDimension4 = viewDimension4)
    {
        viewDimension4 = _viewDimension4;

        return viewDimension4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension5</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension5'),
        SysOperationDisplayOrderAttribute('16'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension5 parmViewDimension5(InventAgingViewDimension5 _viewDimension5 = viewDimension5)
    {
        viewDimension5 = _viewDimension5;

        return viewDimension5;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension6</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension6'),
        SysOperationDisplayOrderAttribute('17'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension6 parmViewDimension6(InventAgingViewDimension6 _viewDimension6 = viewDimension6)
    {
        viewDimension6 = _viewDimension6;

        return viewDimension6;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension7</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension7'),
        SysOperationDisplayOrderAttribute('18'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension7 parmViewDimension7(InventAgingViewDimension7 _viewDimension7 = viewDimension7)
    {
        viewDimension7 = _viewDimension7;

        return viewDimension7;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension8</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension8'),
        SysOperationDisplayOrderAttribute('19'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension8 parmViewDimension8(InventAgingViewDimension8 _viewDimension8 = viewDimension8)
    {
        viewDimension8 = _viewDimension8;

        return viewDimension8;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension9</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension9'),
        SysOperationDisplayOrderAttribute('20'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension9 parmViewDimension9(InventAgingViewDimension9 _viewDimension9 = viewDimension9)
    {
        viewDimension9 = _viewDimension9;

        return viewDimension9;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension10</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension10'),
        SysOperationDisplayOrderAttribute('21'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension10 parmViewDimension10(InventAgingViewDimension10 _viewDimension10 = viewDimension10)
    {
        viewDimension10 = _viewDimension10;

        return viewDimension10;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension11</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension11'),
        SysOperationDisplayOrderAttribute('22'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension11 parmViewDimension11(InventAgingViewDimension11 _viewDimension11 = viewDimension11)
    {
        viewDimension11 = _viewDimension11;

        return viewDimension11;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewDimension12</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ViewDimension12'),
        SysOperationDisplayOrderAttribute('23'),
        SysOperationGroupMemberAttribute('ViewGroup')
    ]
    public InventAgingViewDimension12 parmViewDimension12(InventAgingViewDimension12 _viewDimension12 = viewDimension12)
    {
        viewDimension12 = _viewDimension12;

        return viewDimension12;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        switch (this.parmAgingPeriodUnit())
        {
            case InventAgingPeriod::Days:
                isValid = this.validateDays();
                break;
            case InventAgingPeriod::Dates:
                isValid = this.validateDates();
                break;
            case InventAgingPeriod::DateIntervals:
                isValid = this.validateDatePeriods();
                break;
        }

        if (executionName == '')
        {
            isValid = checkFailed("@SYS335686");
        }

        if (isValid)
        {
            if (InventTransArchiveFeature::isEnabled() &&
                InventTransArchiveProcessHistoryTable::existsOverlapPeriodDate(this.getPeriodFour(), this.parmAsOnDate()))
            {
                if (Box::yesNo(strFmtLB("@SCM:ReportImpactedByArchivedTransactions"), DialogButton::Yes) != DialogButton::Yes)
                {
                    isValid = false;
                }
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDatePeriods</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the date period parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    protected boolean validateDatePeriods()
    {
        boolean             isValid = true;
        LedgerPeriodCode    periodOneCode = LedgerPeriodCode::find(this.parmIntervalDatePeriodOne());
        LedgerPeriodCode    periodTwoCode = LedgerPeriodCode::find(this.parmIntervalDatePeriodTwo());
        LedgerPeriodCode    periodThreeCode = LedgerPeriodCode::find(this.parmIntervalDatePeriodThree());
        LedgerPeriodCode    periodFourCode = LedgerPeriodCode::find(this.parmIntervalDatePeriodFour());

        if (!this.parmIntervalDatePeriodOne() || !periodOneCode)
        {
            isValid = checkFailed(strFmt("@SYS4006471", "@GLS100124"));
        }
        if (!this.parmIntervalDatePeriodTwo() || !periodTwoCode)
        {
            isValid = checkFailed(strFmt("@SYS4006471", "@GLS100125"));
        }
        if (!this.parmIntervalDatePeriodThree() || !periodThreeCode)
        {
            isValid = checkFailed(strFmt("@SYS4006471", "@GLS100148"));
        }
        if (!this.parmIntervalDatePeriodFour() || !periodFourCode)
        {
            isValid = checkFailed(strFmt("@SYS4006471", "@GLS100149"));
        }
        if (this.getAsOnDateOrDefault() < periodOneCode.toDate())
        {
            isValid = checkFailed("@SYS4006464");
        }
        if ((periodOneCode.fromDate()-1) != periodTwoCode.toDate())
        {
            isValid = checkFailed("@SYS4006465");
        }
        if ((periodTwoCode.fromDate()-1) != periodThreeCode.toDate())
        {
            isValid = checkFailed("@SYS4006466");
        }
        if ((periodThreeCode.fromDate()-1) != periodFourCode.toDate())
        {
            isValid = checkFailed("@SYS4006467");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the date parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    protected boolean validateDates()
    {
        boolean isValid = true;

        if (!this.parmIntervalDateOne())
        {
            isValid = checkFailed(strFmt("@SYS4006470", "@GLS100124"));
        }
        if (!this.parmIntervalDateTwo())
        {
            isValid = checkFailed(strFmt("@SYS4006470", "@GLS100125"));
        }
        if (!this.parmIntervalDateThree())
        {
            isValid = checkFailed(strFmt("@SYS4006470", "@GLS100148"));
        }
        if (!this.parmIntervalDateFour())
        {
            isValid = checkFailed(strFmt("@SYS4006470", "@GLS100149"));
        }
        if (this.getAsOnDateOrDefault() <= this.parmIntervalDateOne()
                || this.parmIntervalDateOne() <= this.parmIntervalDateTwo()
                || this.parmIntervalDateTwo() <= this.parmIntervalDateThree()
                || this.parmIntervalDateThree() <= this.parmIntervalDateFour())
        {
            //The aging period must be longer than previous one.
            isValid = checkFailed("@SYS4006468");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDays</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the days parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    protected boolean validateDays()
    {
        boolean isValid = true;

        if (!this.parmIntervalDaysOne())
        {
            isValid = checkFailed(strFmt("@SYS4006469", "@GLS100124"));
        }
        if (!this.parmIntervalDaysTwo())
        {
            isValid = checkFailed(strFmt("@SYS4006469", "@GLS100125"));
        }
        if (!this.parmIntervalDaysThree())
        {
            isValid = checkFailed(strFmt("@SYS4006469", "@GLS100148"));
        }
        if (!this.parmIntervalDaysFour())
        {
            isValid = checkFailed(strFmt("@SYS4006469", "@GLS100149"));
        }
        if (this.parmIntervalDaysOne() >= this.parmIntervalDaysTwo()
                || this.parmIntervalDaysTwo() >= this.parmIntervalDaysThree()
                || this.parmIntervalDaysThree() >= this.parmIntervalDaysFour())
        {
            //The aging period must be longer than previous one.
            isValid = checkFailed("@SYS4006468");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventAgingStorageContract construct()
    {
        return new InventAgingStorageContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>