<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUpd_DeleteMovementIV_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventUpd_DeleteMovement))]
final class InventUpd_DeleteMovementIV_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteInventTrans</Name>
				<Source><![CDATA[
    protected void deleteInventTrans(InventTrans _inventTrans)
    {
        if (InventInventoryDataServiceAdjustmentOffsetHelper::shouldProcessTrigger() && _inventTrans.Qty)
        {
            if (movement is InventMov_Sales)
            {
                SalesLine salesLine = movement.buffer() as SalesLine;
                if (InventInventoryDataServiceAdjustmentOffsetHelper::shouldRevertOffsetForSalesDeletedTrans(salesLine, _inventTrans.StatusIssue))
                {
                    InventInventoryDataServiceAdjustmentOffsetQueue::insertRecordWithInventSumQueue(salesLine.itemId, salesLine.inventDimId, salesLine.inventDimId, salesLine.InventoryServiceAdjustmentOffsetDatasource, salesLine.InventoryServiceAdjustmentOffsetPhysicalMeasure , _inventTrans.Qty);
                }
            }

            if (movement is InventMov_Journal)
            {
                InventJournalTrans journalLine = movement.buffer() as InventJournalTrans;
                if (InventInventoryDataServiceAdjustmentOffsetHelper::shouldRevertOffsetForJournalDeletedTrans(journalLine, _inventTrans))
                {
                    InventInventoryDataServiceAdjustmentOffsetQueue::insertRecordWithInventSumQueue(journalLine.itemId, journalLine.inventDimId, journalLine.inventDimId, journalLine.InventoryServiceAdjustmentOffsetDatasource, journalLine.InventoryServiceAdjustmentOffsetPhysicalMeasure , -_inventTrans.Qty);
                }
            }
        }

        next deleteInventTrans(_inventTrans);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>