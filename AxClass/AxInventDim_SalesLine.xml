<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxInventDim_SalesLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxInventDim_SalesLine extends AxInventDim
{
    AxSalesLine axSalesLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axSalesLine</Name>
				<Source><![CDATA[
    public AxSalesLine axSalesLine(AxSalesLine _axSalesLine = axSalesLine)
    {
        axSalesLine = _axSalesLine;
        return axSalesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
    protected int inputStatus(InternalExternal _inputStatus = axSalesLine.callinputStatus())
    {
        if (axSalesLine)
        {
            return axSalesLine.callinputStatus(_inputStatus);
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modify</Name>
				<Source><![CDATA[
    public void modify()
    {
        axSalesLine.modify();
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts or updates the current record for the class.
    /// </summary>
    /// <remarks>
    ///    Execute this method on the AxBC class after new values are assigned to fields.The actual work to
    ///    save and update a record is performed in the <c>doSave</c> method, which is called by this method.
    /// </remarks>
    public void save()
    {
        axSalesLine.updateFromInventDim();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfigId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>ConfigId</c> parameter.
    /// </summary>
    public void setConfigId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, ConfigId)))
        {
            return;
        }

        super();

        axSalesLine.setInventTableRecordFields();

        if (axSalesLine.isInventTableRecordFieldsSet())
        {
            this.parmConfigId(axSalesLine.inventTableRecord().StandardConfigId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventBatchId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventBatchId</c> parameter.
    /// </summary>
    public void setInventBatchId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventBatchId)))
        {
            return;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventColorId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventColorId</c> parameter.
    /// </summary>
    public void setInventColorId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventColorId)))
        {
            return;
        }

        super();

        axSalesLine.setInventTableRecordFields();

        if (axSalesLine.isInventTableRecordFieldsSet())
        {
            this.parmInventColorId(axSalesLine.inventTableRecord().StandardInventColorId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventGtdId_RU</Name>
				<Source><![CDATA[
    public void setInventGtdId_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventGtdId_RU)))
        {
            return;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventLocationId</c> parameter.
    /// </summary>
    public void setInventLocationId()
    {
        InventDim   inventDimLocal;

        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventLocationId)))
        {
            return;
        }

        axSalesLine.setInventTableRecordFields();
        axSalesLine.setAxSalesTableFields();

        this.setInventSiteId();

        if (axSalesLine.isInventTableRecordFieldsSet()
         || axSalesLine.isAxSalesTableFieldsSet()
         || (axSalesLine.axSalesTable().isFieldModified(fieldNum(SalesTable, InventLocationId))
                && !axSalesLine.salesLine().isDropShipmentPOLineInvoiceMatched()
                && (!axSalesLine.salesLine().isInterCompanyOrderLineInvoiceMatched()
                    || CustTable::find(axSalesLine.salesLine().CustAccount).interCompanyTradingPartner().interCompanyTradingValueMap().XmlMapInventLocation == XMLMapExternalCode::NotSpecified)
                ))
        {
            inventDimLocal = InventDim::findOrCreate(axSalesLine.axInventDim().inventDim());

            this.parmInventLocationId(axSalesLine.inventTableRecord().salesInventLocationId(axSalesLine.axSalesTable().parmInventLocationId(),
                                                                                            inventDimLocal.InventDimId,
                                                                                            inventDimLocal.InventSiteId));
        }

        if (!this.parmInventLocationId() && EcoResDimensionGroupSetup::isWarehouseDimensionMandatoryForItem(axSalesLine.parmItemId()))
        {
            this.parmInventLocationId(InventFallbackWarehouse::transportWarehouse(this.parmInventSiteId()));

            if (!this.parmInventLocationId())
            {
                this.parmInventLocationId(InventParameters::find().FallbackInventLocationId);
                this.parmInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventOwnerId_RU</Name>
				<Source><![CDATA[
    public void setInventOwnerId_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventOwnerId_RU)))
        {
            return;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventProfileId_RU</Name>
				<Source><![CDATA[
    public void setInventProfileId_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventProfileId_RU)))
        {
            return;
        }

        super();

        if (!axSalesLine.parmItemId())
        {
            return;
        }

        axSalesLine.setAxSalesTableFields();

        if (axSalesLine.isAxSalesTableFieldsSet()       ||
            axSalesLine.axSalesTable_RU().isFieldModified(fieldnum(SalesTable_RU, InventProfileId_RU)))
        {
            if (axSalesLine.axSalesTable_RU().parmInventProfileId_RU())
            {
                this.parmInventProfileId_RU(axSalesLine.axSalesTable_RU().parmInventProfileId_RU());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSerialId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSerialId</c> parameter.
    /// </summary>
    public void setInventSerialId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventSerialId)))
        {
            return;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSiteId</c> parameter.
    /// </summary>
    public void setInventSiteId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventSiteId)))
        {
            return;
        }

        if (this.isFieldSet(fieldNum(InventDim,InventLocationId)))
        {
            this.parmInventSiteId(axSalesLine.inventTableRecord().salesInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId, InventDim::findOrCreate(axSalesLine.axInventDim().inventDim()).inventDimId));
        }

        if (!this.isFieldSet(fieldNum(InventDim,InventSiteId)))
        {
            axSalesLine.setInventTableRecordFields();
            axSalesLine.setAxSalesTableFields();

            if (axSalesLine.isInventTableRecordFieldsSet()  ||
                axSalesLine.isAxSalesTableFieldsSet()       ||
                (axSalesLine.axSalesTable().isFieldModified(fieldNum(SalesTable, InventSiteId))
                    && (!axSalesLine.salesLine().isInterCompanyOrderLineInvoiceMatched()
                        || CustTable::find(axSalesLine.salesLine().CustAccount).interCompanyTradingPartner().interCompanyTradingValueMap().XmlMapInventLocation == XMLMapExternalCode::NotSpecified)))
            {
                this.parmInventSiteId(axSalesLine.inventTableRecord().salesInventSiteId(axSalesLine.axSalesTable().parmInventSiteId(), InventDim::findOrCreate(axSalesLine.axInventDim().inventDim()).inventDimId));
            }
        }

        if (this.mustUseFallbackInventSiteId())
        {
            this.parmInventSiteId(InventParameters::find().fallbackSiteId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustUseFallbackInventSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine whether fallback site must be used.
    /// </summary>
    /// <returns>true if fallback site must be used; otherwise, false.</returns>
    protected boolean mustUseFallbackInventSiteId()
    {
        return !this.parmInventSiteId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSizeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSizeId</c> parameter.
    /// </summary>
    public void setInventSizeId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventSizeId)))
        {
            return;
        }

        super();

        axSalesLine.setInventTableRecordFields();

        if (axSalesLine.isInventTableRecordFieldsSet())
        {
            this.parmInventSizeId(axSalesLine.inventTableRecord().StandardInventSizeId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventStyleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>InventStyleId</c> field.
    /// </summary>
    public void setInventStyleId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventStyleId)))
        {
            return;
        }

        super();

        axSalesLine.setInventTableRecordFields();

        if (axSalesLine.isInventTableRecordFieldsSet())
        {
            this.parmInventStyleId(axSalesLine.inventTableRecord().StandardInventStyleId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventVersionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>InventVersionId</c> field.
    /// </summary>
    public void setInventVersionId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventVersionId)))
        {
            return;
        }

        super();

        axSalesLine.setInventTableRecordFields();

        if (axSalesLine.isInventTableRecordFieldsSet())
        {
            this.parmInventVersionId(axSalesLine.inventTableRecord().StandardInventVersionId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWMSLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>WMSLocationId</c> parameter.
    /// </summary>
    public void setWMSLocationId()
    {
        InventDim           inventDimLocal;
        InventDirection     inventDirection;

        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, wmsLocationId)))
        {
            return;
        }

        super();

        if (this.isFieldSet(fieldNum(InventDim, InventLocationId)))
        {
            inventDimLocal = this.currentRecord();

            if (this.parmInventSiteId())
            {
                inventDimLocal.InventSiteId     = this.parmInventSiteId();
            }
            inventDimLocal.InventLocationId = this.parmInventLocationId();
            inventDimLocal                  = InventDim::findOrCreate(inventDimLocal);

            if (this.axSalesLine().parmSalesQty() > 0)
            {
                inventDirection = InventDirection::Issue;
            }
            else
            {
                inventDirection = InventDirection::Receipt;
            }

            if (this.mustDefaultItemLocation(inventDimLocal))
            {
                this.parmWMSLocationId(WMSLocation::defaultItemLocation(this.axSalesLine().parmItemId(),
                                                                        inventDirection,
                                                                        inventDimLocal).wmsLocationId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustDefaultItemLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the default location should be set.
    /// </summary>
    /// <param name = "_inventDim">The inventory dimension record.</param>
    /// <returns>true if the default location should be set; false otherwise.</returns>
    private boolean mustDefaultItemLocation(InventDim _inventDim)
    {
        return !(WHSInventEnabled::exist(this.axSalesLine().parmItemId()) && InventLocation::find(_inventDim.InventLocationId).whsEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAxSalesLine</Name>
				<Source><![CDATA[
    public static AxInventDim_SalesLine newAxSalesLine(AxSalesLine _axSalesLine)
    {
        AxInventDim_SalesLine   axInventDim_SalesLine;

        axInventDim_SalesLine = new AxInventDim_SalesLine();
        axInventDim_SalesLine.axSalesLine(_axSalesLine);

        return axInventDim_SalesLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>