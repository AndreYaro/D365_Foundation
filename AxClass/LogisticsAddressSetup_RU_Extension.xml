<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsAddressSetup_RU_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension class of form <c>LogisticsAddressSetup</c>
/// </summary>
[ExtensionOf(formStr(LogisticsAddressSetup))]
final class LogisticsAddressSetup_RU_Extension
{
    #isoCountryRegionCodes

    private QueryBuildRange     stead_CountryRange;
    private QueryBuildRange     stead_StateRange;
    private QueryBuildRange     stead_CountyRange;
    private QueryBuildRange     stead_CityRange;
    private QueryBuildRange     stead_DistrictRange;
    private QueryBuildRange     stead_StreetRange;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Stead_RU_County_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_RU_County), FormControlEventType::Modified)]
    public void Stead_RU_County_OnModified(FormControl sender, FormControlEventArgs e)
    {
        LogisticsAddressSteadNumber_RU.City = 0;
        LogisticsAddressSteadNumber_RU.District = 0;
        LogisticsAddressSteadNumber_RU.Street = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>TabPageStead_RU_OnPageActivated</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, TabPageStead_RU), FormControlEventType::PageActivated)]
    public void TabPageStead_RU_OnPageActivated(FormControl sender, FormControlEventArgs e)
    {
        LogisticsAddressCountryRegion country;

        // Set the Country filter to the first country in the list if nothing is selected
        if (stead_CountryRegionFilter_RU.text() == '')
        {
            select firstonly CountryRegionId from country where country.isOcode == #isoRU;
            stead_CountryRegionFilter_RU.text(country.CountryRegionId);
            if (LogisticsAddressCountryRegion::existSingleISOCode(#isoRU))
            {
                stead_CountryRegionFilter_RU.allowEdit(false);
            }
            logisticsAddressSteadNumber_RU_DS.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_CountryRegionFilter_RU_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_CountryRegionFilter_RU), FormControlEventType::Modified)]
    public void Stead_CountryRegionFilter_RU_OnModified(FormControl sender, FormControlEventArgs e)
    {
        stead_StateFilter_RU.text ('');
        stead_CountyFilter_RU.text('');
        stead_City_RU.value       (0);
        stead_District_RU.value   (0);
        stead_Street_RU.value     (0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_StateFilter_RU_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_StateFilter_RU), FormControlEventType::Modified)]
    public void Stead_StateFilter_RU_OnModified(FormControl sender, FormControlEventArgs e)
    {
        stead_CountyFilter_RU.text('');
        stead_City_RU.value       (0);
        stead_District_RU.value   (0);
        stead_Street_RU.value     (0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_CountyFilter_RU_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_CountyFilter_RU), FormControlEventType::Modified)]
    public void Stead_CountyFilter_RU_OnModified(FormControl sender, FormControlEventArgs e)
    {
        stead_City_RU.value    (0);
        stead_District_RU.value(0);
        stead_Street_RU.value  (0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_City_RU_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_City_RU), FormControlEventType::Modified)]
    public void Stead_City_RU_OnModified(FormControl sender, FormControlEventArgs e)
    {
        stead_District_RU.value(0);
        stead_Street_RU.value  (0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_District_RU_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_District_RU), FormControlEventType::Modified)]
    public void Stead_District_RU_OnModified(FormControl sender, FormControlEventArgs e)
    {
        stead_Street_RU.value(0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>SteadFilterApply_RU_OnClicked</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, SteadFilterApply_RU), FormControlEventType::Clicked)]
    public void SteadFilterApply_RU_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        logisticsAddressSteadNumber_RU_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>SteadFilter_RU_OnClicked</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, SteadFilter_RU), FormControlEventType::Clicked)]
    public void SteadFilter_RU_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        GroupSteadFilter_RU.visible(!GroupSteadFilter_RU.visible());
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_CountryRegion_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_RU_CountryRegion), FormControlEventType::Modified)]
    public void Stead_RU_CountryRegion_OnModified(FormControl sender, FormControlEventArgs e)
    {
        LogisticsAddressSteadNumber_RU.State = "";
        LogisticsAddressSteadNumber_RU.County= "";
        LogisticsAddressSteadNumber_RU.City = 0;
        LogisticsAddressSteadNumber_RU.District = 0;
        LogisticsAddressSteadNumber_RU.Street = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_State_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_RU_State), FormControlEventType::Modified)]
    public void Stead_RU_State_OnModified(FormControl sender, FormControlEventArgs e)
    {
        LogisticsAddressSteadNumber_RU.County = "";
        LogisticsAddressSteadNumber_RU.City = 0;
        LogisticsAddressSteadNumber_RU.District = 0;
        LogisticsAddressSteadNumber_RU.Street = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_City_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_RU_City), FormControlEventType::Modified)]
    public void Stead_RU_City_OnModified(FormControl sender, FormControlEventArgs e)
    {
        LogisticsAddressSteadNumber_RU.District = 0;
        LogisticsAddressSteadNumber_RU.Street = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_District_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LogisticsAddressSetup, Stead_RU_District), FormControlEventType::Modified)]
    public void Stead_RU_District_OnModified(FormControl sender, FormControlEventArgs e)
    {
        LogisticsAddressSteadNumber_RU.Street = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_Street_RU_resolveReference</Name>
				<Source><![CDATA[
    // <GEERU>
    public Common Stead_Street_RU_resolveReference(FormReferenceControl _control)
    {
        Common                        ret;
        LogisticsAddressStreet_RU     tmpStreet;
        LogisticsAddressStreetName_RU tmpName;
        Description                   tmpDescr;

        if (LogisticsPostalAddressUtility::isCountryRegionRU(stead_CountryRegionFilter_RU.text()))
        {
            tmpName  = Stead_Street_RU.filterValue(AbsoluteFieldBinding::construct(fieldstr(LogisticsAddressStreet_RU, Name),
                                                                            tablestr(LogisticsAddressStreet_RU))).value();
            tmpDescr = Stead_Street_RU.filterValue(AbsoluteFieldBinding::construct(fieldstr(LogisticsAddressStreet_RU, Description),
                                                                            tablestr(LogisticsAddressStreet_RU))).value();
            if (tmpName || tmpDescr)
            {
                select firstonly tmpStreet
                        where (! tmpName  || tmpStreet.Name        == tmpName)                            &&
                              (! tmpDescr || tmpStreet.Description == tmpDescr)                           &&
                              tmpStreet.CountryRegion              == stead_CountryRegionFilter_RU.text() &&
                              tmpStreet.State                      == stead_StateFilter_RU.text()         &&
                              tmpStreet.County                     == stead_CountyFilter_RU.text()        &&
                              tmpStreet.City                       == stead_City_RU.value()               &&
                              tmpStreet.District                   == stead_District_RU.value();

                if (tmpStreet)
                {
                    ret = tmpStreet;
                }
            }
        }
        else
        {
            ret = Stead_Street_RU.resolveReference();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_Street_resolveReference</Name>
				<Source><![CDATA[
    // </GEERU>

    public Common Stead_RU_Street_resolveReference(FormReferenceControl _control)
    {
        Common                        ret;
        LogisticsAddressStreet_RU     tmpStreet;
        LogisticsAddressStreetName_RU tmpName;
        Description                   tmpDescr;

        if (LogisticsPostalAddressUtility::isCountryRegionRU(LogisticsAddressSteadNumber_RU.CountryRegion))
        {
            tmpName  = Stead_RU_Street.filterValue(AbsoluteFieldBinding::construct(fieldstr(LogisticsAddressStreet_RU, Name),
                                                                    tablestr(LogisticsAddressStreet_RU))).value();
            tmpDescr = Stead_RU_Street.filterValue(AbsoluteFieldBinding::construct(fieldstr(LogisticsAddressStreet_RU, Description),
                                                                    tablestr(LogisticsAddressStreet_RU))).value();
            if (tmpName || tmpDescr)
            {
                select firstonly tmpStreet
                where (! tmpName  || tmpStreet.Name        == tmpName)                                      &&
                      (! tmpDescr || tmpStreet.Description == tmpDescr)                                     &&
                      tmpStreet.CountryRegion              == LogisticsAddressSteadNumber_RU.CountryRegion  &&
                      tmpStreet.State                      == LogisticsAddressSteadNumber_RU.State          &&
                      tmpStreet.County                     == LogisticsAddressSteadNumber_RU.County         &&
                      tmpStreet.City                       == LogisticsAddressSteadNumber_RU.City           &&
                      tmpStreet.District                   == LogisticsAddressSteadNumber_RU.District;

                if (tmpStreet)
                {
                    ret = tmpStreet;
                }
            }
        }
        else
        {
            Stead_RU_Street.resolveReference();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSteadNumberFieldsVisibility</Name>
				<Source><![CDATA[
    private void setSteadNumberFieldsVisibility(LogisticsAddressCountryRegionId _countryRegionId)
    {
        boolean isCountryRU = LogisticsPostalAddressUtility::isCountryRegionRU(_countryRegionId);
        
        stead_propertiesAddrTypeCode.visible(isCountryRU);
        stead_addrTypeName.visible          (isCountryRU);
        stead_propertiesZipCode.visible     (isCountryRU);
        stead_propertiesGniCode.visible     (isCountryRU);
        stead_propertiesIMNSDistrict.visible(isCountryRU);
        stead_propertiesOKATO.visible       (isCountryRU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run_Extension</Name>
				<Source><![CDATA[
    protected void run_Extension()
    {
        LogisticsAddressSteadNumber_RU  tmpStead;

        next run_Extension();

        // Switch selected tab by source
        switch (this.args().parmEnum())
        {
            case LogisticsAddressElement::Stead_RU :
                tab.tab(10);

                tmpStead = LogisticsAddressSteadNumber_RU::findRecId(refRecId);

                stead_CountryRegionFilter_RU.text   (tmpStead.CountryRegion);
                stead_StateFilter_RU.text           (tmpStead.State);
                stead_CountyFilter_RU.text          (tmpStead.County);
                stead_City_RU.value                 (tmpStead.City);
                stead_District_RU.value             (tmpStead.District);
                stead_Street_RU.value               (tmpStead.Street);

                logisticsAddressSteadNumber_RU_DS.executeQuery();

                logisticsAddressSteadNumber_RU_DS.positionToRecordByValue(fieldnum(LogisticsAddressSteadNumber_RU, RecId), int642str(refRecId));

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>LogisticsAddressSteadNumber_RU_OnActivated</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(LogisticsAddressSetup, LogisticsAddressSteadNumber_RU), FormDataSourceEventType::Activated)]
    public void LogisticsAddressSteadNumber_RU_OnActivated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        boolean isAllowEdit  = logisticsAddressSteadNumber_RU.RecId == 0;

        if (!stead_CountryRegionFilter_RU.allowEdit())
        {
            Stead_RU_CountryRegion.allowEdit(false);
        }
        else
        {
            Stead_RU_CountryRegion.allowEdit(isAllowEdit);
        }
            
        Stead_RU_State.allowEdit(isAllowEdit);
        Stead_RU_County.allowEdit(isAllowEdit);
        Stead_RU_City.allowEdit(isAllowEdit);
        Stead_RU_District.allowEdit(isAllowEdit);
        Stead_RU_Street.allowEdit(isAllowEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>LogisticsAddressSteadNumber_RU_OnInitialized</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(LogisticsAddressSetup, LogisticsAddressSteadNumber_RU), FormDataSourceEventType::Initialized)]
    public void LogisticsAddressSteadNumber_RU_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
        stead_CountryRange  = sender.query().dataSourceTable(tableNum(LogisticsAddressSteadNumber_RU)).addRange(fieldNum(LogisticsAddressSteadNumber_RU, CountryRegion));
        stead_StateRange    = sender.query().dataSourceTable(tableNum(LogisticsAddressSteadNumber_RU)).addRange(fieldNum(LogisticsAddressSteadNumber_RU, State));
        stead_CountyRange   = sender.query().dataSourceTable(tableNum(LogisticsAddressSteadNumber_RU)).addRange(fieldNum(LogisticsAddressSteadNumber_RU, County));
        stead_CityRange     = sender.query().dataSourceTable(tableNum(LogisticsAddressSteadNumber_RU)).addRange(fieldNum(LogisticsAddressSteadNumber_RU, City));
        stead_DistrictRange = sender.query().dataSourceTable(tableNum(LogisticsAddressSteadNumber_RU)).addRange(fieldNum(LogisticsAddressSteadNumber_RU, District));
        stead_StreetRange   = sender.query().dataSourceTable(tableNum(LogisticsAddressSteadNumber_RU)).addRange(fieldNum(LogisticsAddressSteadNumber_RU, Street));

        sender.object(fieldNum(LogisticsAddressSteadNumber_RU, Name))
            .registerOverrideMethod(methodStr(FormDataObject, jumpRef),
                methodStr(LogisticsAddressSetup_RU_Extension, name_OnJumpRef), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>LogisticsAddressSetup_OnInitialized</Name>
				<Source><![CDATA[
    [FormEventHandler(formStr(LogisticsAddressSetup), FormEventType::Initialized)]
    public void LogisticsAddressSetup_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        this.registerOverrideMethods();
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerOverrideMethods</Name>
				<Source><![CDATA[
    private void registerOverrideMethods()
    {
        Stead_RU_Street.registerOverrideMethod(methodStr(FormReferenceControl, resolveReference),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_RU_Street_resolveReference), this);

        Stead_RU_District.registerOverrideMethod(methodStr(FormReferenceControl, lookupReference),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_RU_District_lookupReference), this);
        
        Stead_Street_RU.registerOverrideMethod(methodStr(FormReferenceControl, lookupReference),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_Street_RU_lookupReference), this);
        
        Stead_Street_RU.registerOverrideMethod(methodStr(FormReferenceControl, resolveReference),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_Street_RU_resolveReference), this);
        
        Stead_District_RU.registerOverrideMethod(methodStr(FormReferenceControl, lookupReference),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_District_RU_lookupReference), this);

        Stead_City_RU.registerOverrideMethod(methodStr(FormReferenceControl, lookupReference),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_City_RU_lookupReference), this);
        
        Stead_RU_State.registerOverrideMethod(methodStr(FormStringControl, lookup),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_RU_State_lookup), this);
        
        Stead_RU_County.registerOverrideMethod(methodStr(FormStringControl, lookup),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_RU_County_lookup), this);
        
        Stead_RU_City.registerOverrideMethod(methodStr(FormReferenceGroupControl, lookup),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_RU_City_lookup), this);
        
        Stead_RU_Street.registerOverrideMethod(methodStr(FormReferenceGroupControl, lookup),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_RU_Street_lookup), this);
        
        Stead_CountyFilter_RU.registerOverrideMethod(methodStr(FormStringControl, lookup),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_CountyFilter_RU_lookup), this);
           
        Stead_CountryRegionFilter_RU.registerOverrideMethod(methodStr(FormStringControl, lookup),
            methodStr(LogisticsAddressSetup_RU_Extension, Stead_CountryRegionFilter_RU_lookup), this);

        Settlement_RU.registerOverrideMethod(methodStr(FormReferenceGroupControl, lookup),
            methodStr(LogisticsAddressSetup_RU_Extension, Settlement_RU_Lookup), this);

        City_RU.registerOverrideMethod(methodStr(FormReferenceGroupControl, lookup),
            methodStr(LogisticsAddressSetup_RU_Extension, City_RU_Lookup), this);

        City_CountryRegionId.registerOverrideMethod(methodStr(FormStringControl, modified),
            methodStr(LogisticsAddressSetup_RU_Extension, City_RU_CountryRegionId_Modified), this);

        LogisticsAddressCity_AddressLevel_RU.registerOverrideMethod(methodStr(FormComboBoxControl, modified),
            methodStr(LogisticsAddressSetup_RU_Extension, City_RU_AddressLevel_Modified), this);

        State_CountryRegionId.registerOverrideMethod(methodStr(FormStringControl, modified),
            methodStr(LogisticsAddressSetup_RU_Extension, State_RU_CountryRegionId_Modified), this);

        County_CountryRegionId.registerOverrideMethod(methodStr(FormStringControl, modified),
            methodStr(LogisticsAddressSetup_RU_Extension, County_RU_CountryRegionId_Modified), this);

        LogisticsAddressDistrict_CountryRegionId_RU.registerOverrideMethod(methodStr(FormStringControl, modified),
            methodStr(LogisticsAddressSetup_RU_Extension, District_RU_CountryRegionId_Modified), this);

    }

]]></Source>
			</Method>
			<Method>
				<Name>State_RU_CountryRegionId_Modified</Name>
				<Source><![CDATA[
    internal void State_RU_CountryRegionId_Modified(FormStringControl _control)
    {
        _control.modified();
        this.updateStateControlVisibility();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStateControlVisibility</Name>
				<Source><![CDATA[
    internal void updateStateControlVisibility()
    {
        State_propertiesOKTMO_RU.visible(LogisticsPostalAddressUtility::isCountryRegionRU(logisticsAddressState.CountryRegionId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>County_RU_CountryRegionId_Modified</Name>
				<Source><![CDATA[
    internal void County_RU_CountryRegionId_Modified(FormStringControl _control)
    {
        _control.modified();
        this.updateCountyControlVisibility();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCountyControlVisibility</Name>
				<Source><![CDATA[
    internal void updateCountyControlVisibility()
    {
        County_propertiesOKTMO_RU.visible(LogisticsPostalAddressUtility::isCountryRegionRU(logisticsAddressCounty.countryRegionId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>District_RU_CountryRegionId_Modified</Name>
				<Source><![CDATA[
    internal void District_RU_CountryRegionId_Modified(FormStringControl _control)
    {
        _control.modified();
        this.updateDistrictControlVisibility();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDistrictControlVisibility</Name>
				<Source><![CDATA[
    internal void updateDistrictControlVisibility()
    {
        District_propertiesOKTMO_RU.visible(LogisticsPostalAddressUtility::isCountryRegionRU(logisticsAddressDistrict.CountryRegionId_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>Settlement_RU_Lookup</Name>
				<Source><![CDATA[
    internal void Settlement_RU_Lookup(FormReferenceGroupControl _control)
    {
        LogisticsAddressCity::lookUpByAddressLevel_RU(
            _control,
            LogisticsCityAddressLevel_RU::Settlement,
            logisticsAddressCity.CountryRegionId,
            logisticsAddressCity.StateId,
            logisticsAddressCity.CountyId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>City_RU_Lookup</Name>
				<Source><![CDATA[
    internal void City_RU_Lookup(FormReferenceGroupControl _control)
    {
        LogisticsAddressCity::lookUpByAddressLevel_RU(
            _control,
            LogisticsCityAddressLevel_RU::City,
            logisticsAddressCity.CountryRegionId,
            logisticsAddressCity.StateId,
            logisticsAddressCity.CountyId,
            logisticsAddressCity.SettlementRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>City_RU_CountryRegionId_Modified</Name>
				<Source><![CDATA[
    internal void City_RU_CountryRegionId_Modified(FormStringControl _control)
    {
        _control.modified();
        this.updateCityControlVisibilityAndLabel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>City_RU_AddressLevel_Modified</Name>
				<Source><![CDATA[
    internal boolean City_RU_AddressLevel_Modified(FormComboBoxControl _control)
    {
        boolean ret = _control.modified();
        this.updateCityControlVisibilityAndLabel();
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCityControlVisibilityAndLabel</Name>
				<Source><![CDATA[
    internal void updateCityControlVisibilityAndLabel()
    {
        boolean isCountryRU = LogisticsPostalAddressUtility::isCountryRegionRU(logisticsAddressCity.CountryRegionId);
        boolean showSettlement = logisticsAddressCity.AddressLevel_RU != LogisticsCityAddressLevel_RU::Settlement;
        boolean showCity = logisticsAddressCity.AddressLevel_RU == LogisticsCityAddressLevel_RU::Locality;

        Settlement_RU.visible(isCountryRU && showSettlement);
        City_RU.visible(isCountryRU && showCity);
        LogisticsAddressCity_AddressLevel_RU.visible(isCountryRU);
        City_propertiesOKTMO_RU.visible(isCountryRU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_CountryRegionFilter_RU_lookup</Name>
				<Source><![CDATA[
    public void Stead_CountryRegionFilter_RU_lookup(FormStringControl _control)
    {
        this.countryRegionIdLookup_RU(Stead_CountryRegionFilter_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_CountyFilter_RU_lookup</Name>
				<Source><![CDATA[
    public void Stead_CountyFilter_RU_lookup(FormStringControl _control)
    {
        LogisticsAddressCounty::lookupCountyId(Stead_CountyFilter_RU,
                                                   stead_CountryRegionFilter_RU.text(),
                                                   stead_StateFilter_RU.text());
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_CountryRegion_lookup</Name>
				<Source><![CDATA[
    public void Stead_RU_CountryRegion_lookup(FormStringControl _control)
    {
        this.countryRegionIdLookup_RU(Stead_RU_CountryRegion);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_Street_lookup</Name>
				<Source><![CDATA[
    public void Stead_RU_Street_lookup(FormReferenceGroupControl _control)
    {
        LogisticsAddressStreet_RU::lookupStreetId_RU(Stead_RU_Street,
                                        LogisticsAddressSteadNumber_RU.CountryRegion,
                                        LogisticsAddressSteadNumber_RU.State,
                                        LogisticsAddressSteadNumber_RU.County,
                                        LogisticsAddressSteadNumber_RU.City,
                                        LogisticsAddressSteadNumber_RU.District);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_City_lookup</Name>
				<Source><![CDATA[
    public void Stead_RU_City_lookup(FormReferenceGroupControl _control)
    {
        LogisticsAddressCity::lookupCityId_RU(Stead_RU_City, LogisticsAddressSteadNumber_RU.CountryRegion,
                                                        LogisticsAddressSteadNumber_RU.State,
                                                        LogisticsAddressSteadNumber_RU.County);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_County_lookup</Name>
				<Source><![CDATA[
    public void Stead_RU_County_lookup(FormStringControl _control)
    {
        LogisticsAddressCounty::lookupCountyId(Stead_RU_County,
                                                    LogisticsAddressSteadNumber_RU.CountryRegion,
                                                    LogisticsAddressSteadNumber_RU.State);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_State_lookup</Name>
				<Source><![CDATA[
    public void Stead_RU_State_lookup(FormStringControl _control)
    {
        LogisticsAddressState::lookupStateId(Stead_RU_State, LogisticsAddressSteadNumber_RU.CountryRegion);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_RU_District_lookupReference</Name>
				<Source><![CDATA[
    public Common Stead_RU_District_lookupReference(FormReferenceControl _control)
    {
        LogisticsAddressDistrict ret;
    
        ret = LogisticsAddressDistrict::lookupDistrictId_RU(Stead_RU_District,
                                                        LogisticsAddressSteadNumber_RU.CountryRegion,
                                                        LogisticsAddressSteadNumber_RU.State,
                                                        LogisticsAddressSteadNumber_RU.County,
                                                        LogisticsAddressSteadNumber_RU.City);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_City_RU_lookupreference</Name>
				<Source><![CDATA[
    public Common Stead_City_RU_lookupreference(FormReferenceControl _control)
    {
        LogisticsAddressCity ret;

        ret = LogisticsAddressCity::lookupCityId_RU(Stead_City_RU,
                                                         stead_countryregionfilter_ru.text(),
                                                         stead_statefilter_ru.text(),
                                                         stead_countyfilter_ru.text());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_District_RU_lookupReference</Name>
				<Source><![CDATA[
    public Common Stead_District_RU_lookupReference(FormReferenceControl _control)
    {
        LogisticsAddressDistrict ret;

        ret = LogisticsAddressDistrict::lookupDistrictId_RU(Stead_District_RU,
                                                                stead_CountryRegionFilter_RU.text(),
                                                                stead_StateFilter_RU.text(),
                                                                stead_CountyFilter_RU.text(),
                                                                stead_City_RU.value());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Stead_Street_RU_lookupReference</Name>
				<Source><![CDATA[
    public Common Stead_Street_RU_lookupReference(FormReferenceControl _control)
    {
        LogisticsAddressStreet_RU ret;

        ret = LogisticsAddressStreet_RU::lookupStreetId_RU(Stead_Street_RU,
                                                               stead_CountryRegionFilter_RU.text(),
                                                               stead_StateFilter_RU.text(),
                                                               stead_CountyFilter_RU.text(),
                                                               stead_City_RU.value(),
                                                               stead_District_RU.value());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name_OnJumpRef</Name>
				<Source><![CDATA[
    public void name_OnJumpRef(FormDataObject _targetField)
    {
        this.addressElementJumpRef(LogisticsAddressElement::Stead_RU, logisticsAddressSteadNumber_RU.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>LogisticsAddressSteadNumber_RU_OnInitValue</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(LogisticsAddressSetup, LogisticsAddressSteadNumber_RU), FormDataSourceEventType::InitValue)]
    public void LogisticsAddressSteadNumber_RU_OnInitValue(FormDataSource sender, FormDataSourceEventArgs e)
    {
        logisticsAddressSteadNumber_RU.CountryRegion = stead_CountryRegionFilter_RU.text();
        logisticsAddressSteadNumber_RU.State         = stead_StateFilter_RU.text();
        logisticsAddressSteadNumber_RU.County        = stead_CountyFilter_RU.text();
        logisticsAddressSteadNumber_RU.City          = stead_City_RU.value();
        logisticsAddressSteadNumber_RU.District      = stead_District_RU.value();
        logisticsAddressSteadNumber_RU.Street        = stead_Street_RU.value();
    }

]]></Source>
			</Method>
			<Method>
				<Name>LogisticsAddressSteadNumber_RU_OnQueryExecuting</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(LogisticsAddressSetup, LogisticsAddressSteadNumber_RU), FormDataSourceEventType::QueryExecuting)]
    public void LogisticsAddressSteadNumber_RU_OnQueryExecuting(FormDataSource sender, FormDataSourceEventArgs e)
    {
        this.setSteadNumberFieldsVisibility(stead_CountryRegionFilter_RU.text());
           

        if (stead_Street_RU.value())
        {
            stead_StreetRange.value  (queryValue(stead_Street_RU.value()));
        }
        else
        {
            stead_StreetRange.value(strFmt('((%1!=%2)||(%1=="%3"))',
                    fieldStr(LogisticsAddressSteadNumber_RU, Street),
                    0,
                    sysQuery::valueUnlimited()));
        }
            
        if (stead_District_RU.value())
        {
            stead_DistrictRange.value(queryValue(stead_District_RU.value()));
        }
        else
        {
            stead_DistrictRange.value(strFmt('((%1!=%2)||(%1=="%3"))',
                    fieldStr(LogisticsAddressSteadNumber_RU, District),
                    0,
                    sysQuery::valueUnlimited()));
        }

        if (stead_City_RU.value())
        {
            stead_CityRange.value(queryValue(stead_City_RU.value()));
        }
        else
        {
            stead_CityRange.value(strFmt('((%1!=%2)||(%1=="%3"))',
                    fieldStr(LogisticsAddressSteadNumber_RU, City),
                    0,
                    sysQuery::valueUnlimited()));
        }

        str stateQueryValue = stead_StateFilter_RU.text() ? stead_StateFilter_RU.text() : SysQuery::valueNotEmptyString() + '||' + SysQuery::valueUnlimited();
        stead_StateRange.value(queryValue(stateQueryValue));

        str countyQueryValue = stead_CountyFilter_RU.text() ? stead_CountyFilter_RU.text() : SysQuery::valueNotEmptyString() + '||' + SysQuery::valueUnlimited();
        stead_CountyRange.value  (queryValue(countyQueryValue));

        str couuntryQueryValue = stead_CountryRegionFilter_RU.text() ? stead_CountryRegionFilter_RU.text() : SysQuery::valueNotEmptyString()+ '||' + SysQuery::valueUnlimited();
        stead_CountryRange.value (queryValue(couuntryQueryValue));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>