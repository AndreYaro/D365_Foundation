<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDocumentProposalAROExpense_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Expensed asset retirement obligation proposal.
/// </summary>
[AssetDocumentProposalTypeAttribute_JP(AssetDocumentProposalType_JP::ExpensedAssetRetirementObligation)]
class AssetDocumentProposalAROExpense_JP extends AssetDocumentProposalARO_JP implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createAssetJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the asset journal instance.
    /// </summary>
    /// <returns>
    /// The asset journal instance.
    /// </returns>
    protected AssetJournal createAssetJournal()
    {
        AssetJournal assetJournal;

        assetJournal = new AssetJournal(journalNum, AssetTransTypeJournal::ExpensedRetirmentObligation_JP);

        return assetJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTransactionFromEstimationResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the transaction from the estimation.
    /// </summary>
    /// <param name="_assetJournal">
    /// The asset journal instance.
    /// </param>
    /// <param name="_assetBook">
    /// The asset book.
    /// </param>
    /// <param name="_documentEntry">
    /// The document entry.
    /// </param>
    /// <param name="_document">
    /// The document.
    /// </param>
    /// <param name="_result">
    /// The estimation result.
    /// </param>
    protected void createTransactionFromEstimationResult(
        AssetJournal _assetJournal,
        AssetBook _assetBook,
        AssetDocumentEntry_JP _documentEntry,
        AssetDocumentTable_JP _document,
        AssetDocumentPresentValueResult_JP _result)
    {
        AssetAmount     transAmount;

        transAmount = _result.parmInterestAmount();
        if (transAmount > 0)
        {
            _assetJournal.createTrans(
                transAmount,
                _assetBook,
                _result.parmTransactionDate(),
                '',
                0,
                0,
                false,
                0,
                0,
                dateNull(),
                false,
                false,
                _document.Type,
                _documentEntry.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
        public Object dialog()
    {
        DialogRunbase  dialog = super();

        dialog.caption("@SYS4004971");
        dialogToDate.helpText("@SYS4005511");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastPostingDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the last posting date.
    /// </summary>
    /// <param name="_documentEntry">
    /// The document entry.
    /// </param>
    /// <returns>
    /// The last posting date.
    /// </returns>
    protected TransDate getLastPostingDate(AssetDocumentEntry_JP _documentEntry)
    {
        return AssetRetirementObligation_JP::getLastTransactionOfTypePostingDate(_documentEntry.RecId, AssetTransType::AssetRetirementObligationInterest_JP);
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>