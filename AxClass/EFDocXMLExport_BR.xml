<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocXMLExport_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Exports fiscal document NF-e xml
/// </summary>
class EFDocXMLExport_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Main</Name>
				<Source><![CDATA[
    public static void Main(Args _args)
    {
        const str FileExtension = 'xml';

        if (_args.record())
        {
            FormDataSource ds = FormDataUtil::getFormDataSource(_args.record());
            var fiscalDocument = ds.getFirst(true);

            if (!fiscalDocument)
            {
                fiscalDocument = ds.cursor();
            }

            while (fiscalDocument)
            {
                EFDocument_BR efDocument = EFDocument_BR::findByRef(fiscalDocument.RecId);
                if (EFDocState_BR::createFromEFdocument(efDocument).canExportXML())
                {
                    EFiscalDocument_BR document = EFiscalDocument_BR::construct(fiscalDocument);

                    var fileName = enum2Symbol(enumnum(EFDocMessageType_BR), document.eFDocument().MessageType) + document.accessKey();

                    var file = System.IO.Path::ChangeExtension(fileName, FileExtension);

                    EFDocXMLExport_BR::generateXMLDocExport(file, document);
                }

                fiscalDocument = ds.getNext();
            }
        }
        else
        {
            throw error("@GLS62665");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateXMLDocExport</Name>
				<Source><![CDATA[
    private static void generateXMLDocExport(FileName _fileName,
                                             EFiscalDocument_BR _eFiscalDocument)
    {
        EFiscalDocumentList_BR      oneDocument;
        EFDocMsgStringStream_BR     eFDocMsgStream;
        IEFDocMsgFormat             xmlExport;

        eFDocMsgStream = new EFDocMsgStringStream_BR();

        try
        {
            switch (_eFiscalDocument.eFDocument().MessageType)
            {
                case EFDocMessageType_BR::Submit :
                    xmlExport = new EFDocMsgFormat_XmlExport_BR();
                    break;

                case EFDocMessageType_BR::Cancel :

                    if (_eFiscalDocument.eFDocumentXML().isCancelAsEvent())
                    {
                        xmlExport = new EFEventDocMsgFormat_CancelXmlExport_BR();
                    }
                    else
                    {
                        xmlExport = new EFDocMsgFormat_CancelXmlExport_BR();
                    }

                    break;
            }

            oneDocument = EFiscalDocumentList_BR::construct();
            oneDocument.add(_eFiscalDocument);

            xmlExport.write(eFDocMsgStream, oneDocument);

            File::SendStringAsFileToUser(eFDocMsgStream.toString(), _fileName);
        }
        catch
        {
            eFDocMsgStream = null;
            Error(strfmt("@GLS62925",  _eFiscalDocument.accessKey()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>