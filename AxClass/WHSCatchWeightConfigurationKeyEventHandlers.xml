<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCatchWeightConfigurationKeyEventHandlers</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSCatchWeightConfigurationKeyEventHandlers</c> class contains configuration key delegate response handlers for 
/// the warehouse management catch weight configuration key.
/// </summary>
final public class WHSCatchWeightConfigurationKeyEventHandlers
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>changingWarehouseManagementCatchWeightConfigurationKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the warehouse management catch weight configuration key may be enabled.
    /// </summary>
    /// <param name = "_configKey">Current configuration key.</param>
    /// <param name = "_newState">New configuration key state.</param>
    /// <param name = "_result">Delegate handler response.</param>
    [SubscribesTo(classstr(SysConfigurationKeyTree), staticdelegatestr(SysConfigurationKeyTree, onConfigurationKeyStateChanging))]
    static void changingWarehouseManagementCatchWeightConfigurationKey(SysDictConfigurationKey _configKey, boolean _newState, EventHandlerResult _result)
    {
        if (_newState && configurationKeyNum(WHSCatchWeight) == _configKey.id())
        {
            FormTreeControl formTreeControl = WHSConfigurationKeyStageChangingContext::current().parmFormTreeControl();
            FormTreeItem pdsCatchWeightTreeItem = WHSConfigurationKeyStageChangingContext::findTreeItemByConfigurationKeyId(formTreeControl, configurationKeyNum(PDSCatchWeight), 0);

            if (pdsCatchWeightTreeItem.stateChecked() == FormTreeCheckedState::Unchecked)
            {
                error("@WAX:PDSCatchWeightConfigurationKeyMustBeEnabledFirstError");
                _result.booleanResult(false);
            }

            if (!WHSCatchWeightConfigurationKeyEventHandlers::validateCatchWeightConfigurationKeyEnablement())
            {
                error("@WAX:WHSCatchWeightConfigKey_EnableValidationError");
                _result.booleanResult(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCatchWeightConfigurationKeyEnablement</Name>
				<Source><![CDATA[
    private static boolean validateCatchWeightConfigurationKeyEnablement()
    {
        WHSCatchWeightFeatureExtensionValidator validator = WHSCatchWeightFeatureExtensionValidator::construct();
        validator.parmReportErrors(true);

        boolean ret;
        WHSInstrumentationLogger instrumentationLogger = WHSInstrumentationLogger::createLogger(classId2Name(classIdGet(validator)));
        
        using (var activityContext = instrumentationLogger.featureValidationActivities().validateEnableFeatureManagementState(true))
        {
            ret = validator.canEnableCatchWeight();
            instrumentationLogger.featureValidationActivities().insertedEnableFeatureManagementState(activityContext, ret);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changingProcessDistributionCatchWeightConfigurationKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the process distribution catch weight configuration key may be disabled.
    /// </summary>
    /// <param name = "_configKey">Current configuration key.</param>
    /// <param name = "_newState">New configuration key state.</param>
    /// <param name = "_result">Delegate handler response.</param>
    [SubscribesTo(classstr(SysConfigurationKeyTree), staticdelegatestr(SysConfigurationKeyTree, onConfigurationKeyStateChanging))]
    static void changingProcessDistributionCatchWeightConfigurationKey(SysDictConfigurationKey _configKey, boolean _newState, EventHandlerResult _result)
    {
        if (!_newState && configurationKeyNum(PDSCatchWeight) == _configKey.id())
        {
            FormTreeControl formTreeControl = WHSConfigurationKeyStageChangingContext::current().parmFormTreeControl();
            FormTreeItem whsCatchWeightTreeItem = WHSConfigurationKeyStageChangingContext::findTreeItemByConfigurationKeyId(formTreeControl, configurationKeyNum(WHSCatchWeight), 0);

            if (whsCatchWeightTreeItem.stateChecked() != FormTreeCheckedState::Unchecked &&
                !Box::confirm("@WAX:WHSCatchWeightConfigurationKeyWillBeDisabledAsWell"))
            {
                error("@WAX:WHSCatchWeightConfigurationKeyMustBeDisabledFirstError");
                _result.booleanResult(false);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>