<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsLocationSelectForm_SalesLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LogisticsLocationSelectForm_SalesLine</c> class extends the <c>LogisticsLocationSelectForm</c> class
/// to manage the loaded postal address selection for sales orders.
/// </summary>
public class LogisticsLocationSelectForm_SalesLine extends LogisticsLocationSelectForm
{
    SalesLine salesLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowedSources</Name>
				<Source><![CDATA[
    public Set allowedSources()
    {
        Set ret;

        ret = super();

        ret.add(LogisticsLocationSelectSourceType::SalesOrder);
        ret.add(LogisticsLocationSelectSourceType::SalesLine);
        ret.add(LogisticsLocationSelectSourceType::SalesQuotation);
        ret.add(LogisticsLocationSelectSourceType::SalesQuotationLine);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAddressToCaller</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the selected address to the calling sales order line.
    /// </summary>
    /// <param name="_transferFromTable">
    /// The source of the address.
    /// </param>
    /// <param name="_addressRecId">
    /// The selected address.
    /// </param>
    public void copyAddressToCaller(Common _transferFromTable, LogisticsPostalAddressRecId _addressRecId)
    {
        ShipCarrierAddress shipCarrierAddress;
        DlvMode dlvMode;
        LogisticsPostalAddress address = LogisticsPostalAddress::findRecId(_addressRecId);
        LogisticsLocation locationToCopyFrom = LogisticsLocation::find(address.Location);

        salesLine.DeliveryPostalAddress  = _addressRecId;
        salesLine.setDeliveryName();

        salesLine.AddressRefRecId = _transferFromTable.RecId;
        salesLine.AddressRefTableId = _transferFromTable.TableId;

        if (locationToCopyFrom.isRole(LogisticsLocationRoleType::Delivery) ||
            locationToCopyFrom.isRole(LogisticsLocationRoleType::Invoice))
        {
            if (_transferFromTable.TableId == tableNum(CustTable)
                && DlvTerm::find(salesLine.salesTable().DlvTerm).ShipCarrierFreightApplied != ShipCarrierFreightApplied::ThirdParty)
            {
                shipCarrierAddress = ShipCarrierAddress::findByCustomerLocation(
                    _transferFromTable.(fieldNum(CustTable, AccountNum)),
                    address.Location);

                if (shipCarrierAddress.DlvModeId)
                {
                    salesLine.DlvMode                  = shipCarrierAddress.DlvModeId;
                    dlvMode = DlvMode::find(shipCarrierAddress.DlvModeId);
                    salesLine.ShipCarrierId            = dlvMode.ShipCarrierId;
                    salesLine.ShipCarrierAccountCode   = dlvMode.ShipCarrierAccountCode;
                    salesLine.ShipCarrierAccount       = shipCarrierAddress.ShipCarrierAccount;
                }

                if (shipCarrierAddress.DlvTermId)
                {
                    salesLine.DlvTerm = shipCarrierAddress.DlvTermId;
                }
            }
        }

        salesLine.TaxGroup = TaxSales::custTaxGroup(salesLine.DlvTerm, salesLine.TaxGroup, salesLine.deliveryLocation());

        salesLine.setListCode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// The initial selected source for addresses on the form.
    /// </summary>
    /// <returns>
    /// LogisticslocationSelectSourceType corresponding to the address source.
    /// </returns>
    public LogisticsLocationSelectSourceType defaultSource()
    {
        LogisticsLocationSelectSourceType   sourceType = super();
        Common                              addressOwner;

        if (salesLine.AddressRefTableId)
        {
            addressOwner = LogisticsLocationSelectForm::findByRecId(
                salesLine.AddressRefTableId,
                salesLine.AddressRefRecId
            );

            if (addressOwner)
            {
                sourceType = LogisticsLocationSelectForm::tableIdToSourceType(
                    salesLine.AddressRefTableId,
                    sourceType
                );
            }
        }

        return sourceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLogisticsPostalAddressRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Gets the record ID of the <c>LogisticsPostalAddress</c> that is currently selected.
    /// </summary>
    /// <returns>
    ///   The <c>LogisticsPostalAddress</c> record ID.
    /// </returns>
    public RecId getLogisticsPostalAddressRecId()
    {
        return salesLine.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLookupRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Gets the record the target form's grid should have selected upon openning.
    /// </summary>
    /// <returns>
    ///   The record to be selected.
    /// </returns>
    public Common getLookupRecord()
    {
        Common addressOwner;

        if (salesLine.AddressRefTableId)
        {
            addressOwner = LogisticsLocationSelectForm::findByRecId(
                salesLine.AddressRefTableId,
                salesLine.AddressRefRecId
            );
        }

        if (!addressOwner)
        {
            if (salesLine.CustAccount)
            {
                addressOwner = CustTable::find(salesLine.CustAccount);
            }
        }

        return addressOwner;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new object of <c>LogisticsLocationSelectForm_SalesLine</c> class
    /// </summary>
    /// <param name="_salesLine">
    /// Sales order line
    /// </param>
    void new(SalesLine _salesLine)
    {
        salesLine = _salesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postCopyAddressToCaller_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls a method to update CFOP on the sales order line, if necessary.
    /// </summary>
    /// <param name="_transferFromTable">
    /// The source of the address that was copied to the sales order line.
    /// </param>
    /// <param name="_addressRecId">
    /// The selected address that was copied to the sales order line.
    /// </param>
    public void postCopyAddressToCaller_BR(Common _transferFromTable, LogisticsPostalAddressRecId _addressRecId)
    {
        salesLine.onDeliveryPostalAddressChange_BR();

        if (FormDataUtil::isFormDataSource(salesLine))
        {
            FormDataUtil::getFormDataSource(salesLine).refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new <c>LogisticsLocationSelectForm_SalesLine</c> object.
    /// </summary>
    /// <param name="_buffer">
    ///    A record to use to initialize the <c>LogisticsLocationSelectForm_SalesLine</c> object.
    /// </param>
    /// <returns>
    ///    A new <c>LogisticsLocationSelectForm_SalesLine</c> object.
    /// </returns>
    public static LogisticsLocationSelectForm_SalesLine construct(Common _buffer)
    {
        return new LogisticsLocationSelectForm_SalesLine(_buffer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAddressToCallerHandler</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(LogisticsLocationSelectForm_SalesLine), methodStr(LogisticsLocationSelectForm_SalesLine, copyAddressToCaller))]
    /// <summary>
    /// Event handler to run after <c>copyAddressToCaller</c> method.
    /// </summary>
    /// <param name="_args">
    /// <c>XppPrePostArgs</c> with the properties of the call to <c>copyAddressToCaller</c>.
    /// </param>
    public static void copyAddressToCallerHandler(XppPrePostArgs _args)
    {
        LogisticsLocationSelectForm_SalesLine logisticsLocationSelectForm_SalesLine = _args.getThis();

        if (!BrazilParameters::isEnabled())
        {
            return;
        }

        logisticsLocationSelectForm_SalesLine.postCopyAddressToCaller_BR(
                  _args.getArg('_transferFromTable'),
                  _args.getArg('_addressRecId'));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>