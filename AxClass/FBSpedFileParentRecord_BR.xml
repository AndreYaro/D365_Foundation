<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBSpedFileParentRecord_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FBSpedFileParentRecord_BR</c> class represents a sped record which is the rood in the record hierarchy.
/// </summary>
class FBSpedFileParentRecord_BR
{
    FBSpedFileRecordIdentification_BR   recordIdentification;
    FBTempFile_BR                       fbTempFile;
    str                                 filePath;
    Filename                            fileName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>closeFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Closes the sped file.
    /// </summary>
    public void closeFile()
    {
        if (fbTempFile)
        {
            fbTempFile.close();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the sped file from disk.
    /// </summary>
    public void deleteFile()
    {
        if (fbTempFile)
        {
            fbTempFile.deleteFile();
            fbTempFile = null;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateUniqueFileName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a unique file name to be used as the name of the sped file.
    /// </summary>
    /// <returns>
    /// The name of the file.
    /// </returns>
    protected Filename generateUniqueFileName()
    {
        if (!filePath)
        {
            new FileIOPermission('', 'w').assert();
            filePath = System.IO.Path::GetTempPath();
        }

        filename =  System.IO.Path::Combine(filePath, System.IO.Path::GetTempFileName());

        CodeAccessPermission::revertAssert();

        return filename;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the file name.
    /// </summary>
    /// <returns>
    /// The name of the file.
    /// </returns>
    public Filename getFileName()
    {
        return fileName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of class <c>FBSpedFileParentRecord_BR</c>.
    /// </summary>
    /// <param name="_recordIdentification">
    /// The identification of the record in the sped file.
    /// </param>
    public void new(FBSpedFileRecordIdentification_BR _recordIdentification)
    {
        recordIdentification = _recordIdentification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>openFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the file.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// Exception indicating that the file could not be opened.
    /// </exception>
    public void openFile()
    {
        if (fbTempFile)
        {
            return;
        }

        fileName = this.generateUniqueFileName();

        fbTempFile = new FBTempFile_BR(fileName);

        if (!fbTempFile)
        {
            throw error(strFmt("@SYS4001687", fileName));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes a sped record to the file.
    /// </summary>
    /// <param name="_spedRecord">
    /// An instance of <c>FBSpedRecord_BR</c> representing a sped record.
    /// </param>
    public void writeRecord(FBSpedRecord_BR _spedRecord)
    {
        fbTempFile.write(_spedRecord.content());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEncoding</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the encoding of the underlying file.
    /// </summary>
    /// <returns>
    /// The underlying <c>FBTempFile</c> encoding.
    /// </returns>
    public System.Text.Encoding getEncoding()
    {
        return fbTempFile.getEncoding();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>