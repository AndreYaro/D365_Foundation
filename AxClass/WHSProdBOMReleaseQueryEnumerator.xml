<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSProdBOMReleaseQueryEnumerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSProdBOMReleaseQueryEnumerator</c> class is responsible for providing
/// a mechanism of enumerating over the production orders and the order bom lines
/// when the specified collection ordered by produciton ID that should be released.
/// </summary>
public class WHSProdBOMReleaseQueryEnumerator extends WHSProdBOMReleaseEnumerator
{
    protected Query     query;
    protected QueryRun  queryRun;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>WHSProdBOMReleaseQueryEnumerator</c> class.
    /// </summary>
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromQuery</Name>
				<Source><![CDATA[
    protected void initFromQuery(Query _query)
    {
        query       = _query;
        queryRun    = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextProdBOM</Name>
				<Source><![CDATA[
    public void nextProdBOM()
    {
        if (queryRun.next())
        {
            currentProdBOM = queryRun.get(tableNum(ProdBOM)).data();
        }
        else
        {
            end = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryRunPointToFirstLineOfCurrentProdOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the <c>QueryRun</c> and loops until it points to the first line of the current production order.
    /// </summary>
    private void getQueryRunPointToFirstLineOfCurrentProdOrder()
    {
        queryRun.reset();

        while (queryRun.next())        
        {
            ProdTable localProdTable = queryRun.get(tableNum(ProdTable)).data();

            if (localProdTable.ProdId == prodOrderLoopProdId
            ||  prodOrderLoopProdId   == '')
            {
                break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>restartFromFirstProdBOMLineInProdOrder</Name>
				<Source><![CDATA[
    public void restartFromFirstProdBOMLineInProdOrder()
    {
        this.getQueryRunPointToFirstLineOfCurrentProdOrder();
        
        currentProdBOM      = queryRun.get(tableNum(ProdBOM)).data();
        currentProdTable    = queryRun.get(tableNum(ProdTable)).data();
        prodOrderLoopProdId = currentProdBOM.ProdId;
        firstLineInOrder    = true;
        end                 = currentProdBOM.RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentProdTable</Name>
				<Source><![CDATA[
    protected ProdTable getCurrentProdTable()
    {
        return queryRun.get(tableNum(ProdTable)).data();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static WHSProdBOMReleaseQueryEnumerator construct()
    {
        return new WHSProdBOMReleaseQueryEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the enumerator based on the specified query.
    /// </summary>
    /// <param name="_query">
    /// A query for iterating over production orders and their bom lines.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WHSProdBOMReleaseEnumerator</c> class.
    /// </returns>
    public static WHSProdBOMReleaseQueryEnumerator newFromQuery(Query _query)
    {
        WHSProdBOMReleaseQueryEnumerator enumerator = WHSProdBOMReleaseQueryEnumerator::construct();

        enumerator.initFromQuery(_query);

        return enumerator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromProdId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the enumerator based on the specified production ID.
    /// </summary>
    /// <param name="_prodId">
    /// The produciton ID used to created the query enumerator.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WHSProdBOMReleaseEnumerator</c> class.
    /// </returns>
    public static WHSProdBOMReleaseEnumerator newFromProdId(ProdId _prodId)
    {
        WHSProdBOMReleaseQueryEnumerator    enumerator  = WHSProdBOMReleaseQueryEnumerator::construct();
        Query                               query       = new Query(queryStr(WHSProdBOMRelease));
        
        QueryBuildDataSource qbds = query.dataSourceTable(tableNum(ProdTable));
        if (qbds)
        {
            SysQuery::findOrCreateRange(qbds, fieldNum(ProdTable, ProdId)).value(queryValue(_prodId));

            // When the enumerator is not called from the automatical release job, do not limit the release by status.
            SysQuery::findOrCreateRange(qbds, fieldNum(ProdTable, ProdStatus)).value(SysQuery::valueUnlimited());
        }

        enumerator.initFromQuery(query);
        enumerator.parmProdOrderLoopProdId(_prodId);

        return enumerator;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>