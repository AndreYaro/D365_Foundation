<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementProformaConfirm</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AgreementProformaConfirm
{
    AgreementHeader                         agreementHeader;
    recId                                   recId;
    NoYes                                   proforma;
    boolean                                 usePrintManagement;

    boolean                                 refreshFormButtons;

    SRSPrintDestinationSettings             printSettings;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialogCaption</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the title of the SSRS report run form.
    /// </summary>
    /// <returns>
    ///    The string with the dialog caption.
    /// </returns>
    public str dialogCaption()
    {
        return "@SYS315048";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAgreementNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Generates an agreement number to show on the agreement confirmation SSRS report run form.
    /// </summary>
    /// <returns>
    ///    The string with the agreement number.
    /// </returns>
    public str getAgreementNumber()
    {
        PurchAgreementHeader    purchAgreementHeader;
        SalesAgreementHeader    salesAgreementHeader;
        str                     agreementNumber;

        if (agreementHeader is SalesAgreementHeader)
        {
            salesAgreementHeader = agreementHeader;
            agreementNumber = salesAgreementHeader.SalesNumberSequence;
        }
        else if (agreementHeader is PurchAgreementHeader)
        {
            purchAgreementHeader = agreementHeader;
            agreementNumber = purchAgreementHeader.PurchNumberSequence;
        }

        return strFmt("%1-%2", agreementNumber, AgreementHeaderHistory::nextConfirmationNum(agreementHeader.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Reads the dialog box parameter values into variables.
    /// </summary>
    /// <param name="_formRun">
    /// The form to get the parameters from.
    /// </param>
    public void getFromDialog(FormRun _formRun)
    {
        FormCheckBoxControl fcbc;

        fcbc = _formRun.control(_formRun.controlId(identifierStr(UsePrintManagement)));
        usePrintManagement   = fcbc.value();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        proforma = NoYes::Yes;
        printSettings = new SRSPrintDestinationSettings();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementHeader</Name>
				<Source><![CDATA[
    public AgreementHeader parmAgreementHeader(AgreementHeader _agreementHeader = agreementHeader)
    {
        agreementHeader = _agreementHeader;
        recId           = _agreementHeader.RecId;

        return agreementHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintJobSettings</Name>
				<Source><![CDATA[
    public SRSPrintDestinationSettings parmPrintJobSettings(SRSPrintDestinationSettings  _printSettings = printSettings)
    {
        printSettings = _printSettings;
        return printSettings;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProForma</Name>
				<Source><![CDATA[
    public NoYes parmProForma(NoYes _proforma = proforma)
    {
        proforma = _proforma;
        return proforma;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUsePrintManagement</Name>
				<Source><![CDATA[
    public boolean parmUsePrintManagement(boolean _usePrintManagement = usePrintManagement)
    {
        usePrintManagement = _usePrintManagement;
        return usePrintManagement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prompt</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the <c>AgreementConfirmRunForm</c> dialog box.
    /// </summary>
    public void prompt()
    {
        FormRun formRun;
        Args args = new Args();

        args.caller(this);
        args.name(formStr(AgreementConfirmRunForm));
        formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.wait(true);

        if (formRun.closedOk())
        {
            this.getFromDialog(formRun);
            this.startConfirm();
            refreshFormButtons = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>startConfirm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Prints the confirmation report.
    /// </summary>
    public void startConfirm()
    {
        Args args = new Args();

        args.caller(this);
        args.record(agreementHeader);
        args.parm(int642str(recId));

        new MenuFunction(menuitemActionStr(AgreementConfirmSRS), MenuItemType::Action).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>AgreementProformaConfirm</c> class.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>AgreementProformaConfirm</c> class.
    /// </returns>
    public static AgreementProformaConfirm construct()
    {
        return new AgreementProformaConfirm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        AgreementProformaConfirm agreementProformaConfirm = AgreementProformaConfirm::newAgreementProformaConfirm(_args.record());

        agreementProformaConfirm.prompt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAgreementProformaConfirm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an <c>AgreementProformaConfirm</c> object based on the agreement header.
    /// </summary>
    /// <param name="_agreementHeader">
    ///    The agreement header object to use to create the object.
    /// </param>
    /// <returns>
    ///    An <c>AgreementProformaConfirm</c> object.
    /// </returns>
    public static AgreementProformaConfirm newAgreementProformaConfirm(AgreementHeader _agreementHeader)
    {
        AgreementProformaConfirm agreementProformaConfirm = AgreementProformaConfirm::construct();

        agreementProformaConfirm.parmAgreementHeader(_agreementHeader);

        return agreementProformaConfirm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>