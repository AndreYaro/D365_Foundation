<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostPriceCompareGridViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostPriceComparGridViewModel</c> class is a ViewModel for the grid showing comparison of two prices.
/// </summary>
public class CostPriceCompareGridViewModel
{
    FormDataSource          dataSource;
    FormCheckBoxControl     costGroupTypeControl;
    FormCheckBoxControl     costGroupControl;
    FormCheckBoxControl     resourceControl;
    FormCheckBoxControl     resourceTypeControl;

    FormStringControl       costGroupColumn;
    FormStringControl       resourceColumn;
    FormStringControl       unitIdColumn;
    FormComboBoxControl     costGroupTypeColumn;
    FormComboBoxControl     resourceTypeColumn;
    FormRealControl         quantityCompareValue1Column;
    FormRealControl         quantityCompareValue2Column;
    FormRealControl         quantityDifferenceColumn;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CostPriceCompareGridViewModel construct()
    {
        return new CostPriceCompareGridViewModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>CostPriceCompareGridViewModel</c> class.
    /// </summary>
    /// <param name = "_costPriceCompareArgs">Price comparison parameters</param>
    public void init(CostRollupCompareArgs _costPriceCompareArgs)
    {
        CostPriceCompareDataProvider model = CostPriceCompareDataProvider::construct();
        model.init(_costPriceCompareArgs);
        dataSource.cursor().setTmpData(model.loadData());

        dataSource.queryBuildDataSource().addOrderByField(fieldNum(CostPriceCompareTmp, Level));
        dataSource.queryBuildDataSource().addOrderByField(fieldNum(CostPriceCompareTmp, CostGroupId));
        dataSource.queryBuildDataSource().addOrderByField(fieldNum(CostPriceCompareTmp, Resource));

        this.groupByChanged(null, null);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCostGroupColumn</Name>
				<Source><![CDATA[
    public void setCostGroupColumn(FormStringControl _costGroupColumn)
    {
        costGroupColumn = _costGroupColumn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUnitIdColumn</Name>
				<Source><![CDATA[
    public void setUnitIdColumn(FormStringControl _unitIdColumn)
    {
        unitIdColumn = _unitIdColumn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResourceColumn</Name>
				<Source><![CDATA[
    public void setResourceColumn(FormStringControl _resourceColumn)
    {
        resourceColumn = _resourceColumn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCostGroupTypeColumn</Name>
				<Source><![CDATA[
    public void setCostGroupTypeColumn(FormComboBoxControl _costGroupTypeColumn)
    {
        costGroupTypeColumn = _costGroupTypeColumn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantityCompareValue1Column</Name>
				<Source><![CDATA[
    public void setQuantityCompareValue1Column(FormRealControl _quantityCompareValue1Column)
    {
        quantityCompareValue1Column = _quantityCompareValue1Column;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantityCompareValue2Column</Name>
				<Source><![CDATA[
    public void setQuantityCompareValue2Column(FormRealControl _quantityCompareValue2Column)
    {
        quantityCompareValue2Column = _quantityCompareValue2Column;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantityDifferenceColumn</Name>
				<Source><![CDATA[
    public void setQuantityDifferenceColumn(FormRealControl _quantityDifferenceColumn)
    {
        quantityDifferenceColumn = _quantityDifferenceColumn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResourceTypeColumn</Name>
				<Source><![CDATA[
    public void setResourceTypeColumn(FormComboBoxControl _resourceTypeColumn)
    {
        resourceTypeColumn = _resourceTypeColumn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCostGroupTypeControl</Name>
				<Source><![CDATA[
    public void setCostGroupTypeControl(FormCheckBoxControl _costGroupTypeControl)
    {
        costGroupTypeControl = _costGroupTypeControl;
        costGroupTypeControl.OnModified += eventhandler(this.groupByChanged);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCostGroupControl</Name>
				<Source><![CDATA[
    public void setCostGroupControl(FormCheckBoxControl _costGroupControl)
    {
        costGroupControl = _costGroupControl;
        costGroupControl.OnModified += eventhandler(this.groupByChanged);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResourceControl</Name>
				<Source><![CDATA[
    public void setResourceControl(FormCheckBoxControl _resourceControl)
    {
        resourceControl = _resourceControl;
        resourceControl.OnModified += eventhandler(this.groupByChanged);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResourceTypeControl</Name>
				<Source><![CDATA[
    public void setResourceTypeControl(FormCheckBoxControl _resourceTypeControl)
    {
        resourceTypeControl = _resourceTypeControl;
        resourceTypeControl.OnModified += eventhandler(this.groupByChanged);
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupByChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the group by checkbox modification and updates the grid accordingly.
    /// </summary>
    /// <param name = "_sender">Form control on which the checkbox was modified.</param>
    /// <param name = "_eventArgs">Checkbox modified event arguments.</param>
    public void groupByChanged(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        Query query = CostPriceCompareGridModel::buildQueryForGroupBy(
                                        costGroupTypeControl.value(),
                                        costGroupControl.value(),
                                        resourceControl.value(),
                                        resourceTypeControl.value());
        dataSource.query(query);
        dataSource.executeQuery();
        this.updateGridColumnsVisibility();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataSource</Name>
				<Source><![CDATA[
    public void setDataSource(FormDataSource _dataSource)
    {
        dataSource = _dataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGridColumnsVisibility</Name>
				<Source><![CDATA[
    private void updateGridColumnsVisibility()
    {
        costGroupTypeColumn.visible(costGroupTypeControl.value());
        costGroupColumn.visible(costGroupControl.value());
        resourceTypeColumn.visible(resourceTypeControl.value());
        resourceColumn.visible(resourceControl.value());
        unitIdColumn.visible(resourceControl.value());
        quantityCompareValue1Column.visible(resourceControl.value());
        quantityCompareValue2Column.visible(resourceControl.value());
        quantityDifferenceColumn.visible(resourceControl.value());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>