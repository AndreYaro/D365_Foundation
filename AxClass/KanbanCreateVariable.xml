<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanCreateVariable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>KanbanCreate</c> class creates variable kanbans based on a kanban rule or another kanban.
/// </summary>
/// <remarks>
///    This is an abstract class.
/// </remarks>
public abstract class KanbanCreateVariable extends KanbanCreate
{
    KanbanRuleVariable  kanbanRuleVariable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the class variables.
    /// </summary>
    /// <returns>
    ///    true if the initialization was successful; otherwise, false.
    /// </returns>
    public boolean init()
    {
        boolean result = super();

        if (result)
        {
            kanbanRuleVariable = KanbanRuleVariable::findParentRecId(kanbanRule.RecId);
            result             = kanbanRuleVariable.RecId != 0;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the specified creation parameters.
    /// </summary>
    /// <param name="_calledFrom">
    ///    The caller object.
    /// </param>
    /// <returns>
    ///    true if the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate(Object _calledFrom = null)
    {
        boolean result = super(_calledFrom);

        if (result)
        {
            if (!kanbanRuleVariable)
            {
                result = checkFailed(strfmt("@SYS320510",kanbanRule.RuleId));
            }
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>