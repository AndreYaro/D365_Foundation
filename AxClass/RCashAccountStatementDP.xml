<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RCashAccountStatementDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>RCashAccountStatementDP</c> declares the variables,tables, enums etc used in the <c>RCashAccountStatement</c> report.
/// </summary>
[
    SRSReportQueryAttribute(querystr(RCashAccountStatement)),
    SRSReportParameterAttribute(classstr(RCashAccountStatementContract))
]
public class RCashAccountStatementDP extends SRSReportDataProviderBase
{
    RCashAccountStatementTmp rCashAccountStatementTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRCashAccountStatementTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes temporary table.
    /// </summary>
    /// <returns>
    /// The temporary table <c>RcashAccountStatementTmp</c>.
    /// </returns>
    [
        SRSReportDataSetAttribute(tablestr(RCashAccountStatementTmp))
    ]
    public RCashAccountStatementTmp getRCashAccountStatementTmp()
    {
        return rCashAccountStatementTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRcashAccountStatementTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts records into temporary table <c>RcashAccountStatementTmp</c>.
    /// </summary>
    /// <param name="_rCashTrans">
    /// Passes the cursor of <c>RCashTable</c> table.
    /// </param>
    /// <param name="_rCashTable">
    /// Passes the cursor of <c>RCashTrans</c> table to this method.
    /// </param>
    /// <param name="_dimensionAttributevalue">
    /// Passes the cursor of <c>DimensionAttributeValueCombination</c> table to this method.
    /// </param>
    /// <param name="_mainAccount">
    /// Passes the cursor of <c>MainAccount</c> table to this method.
    /// </param>
    /// <param name="_fromDate">
    /// Passes the value of ui parameter fromdate.
    /// </param>
    /// <param name="_toDate">
    /// Passes the value of ui parameter todate.
    /// </param>
    private void insertRcashAccountStatementTmp(
        RCashTrans                          _rCashTrans,
        RCashTable                          _rCashTable,
        DimensionAttributeValueCombination  _dimensionAttributevalue,
        MainAccount                         _mainAccount,
        TransDate                           _fromDate,
        Transdate                           _toDate)
    {
        rCashAccountStatementTmp.AccountNum        = _rCashTable.AccountNum;
        rCashAccountStatementTmp.CurrencyCode      = _rCashTable.CurrencyCode;
        rCashAccountStatementTmp.MultiCurrencyCode = _rCashTable.MultiCurrencyCode;
        rCashAccountStatementTmp.CashAccountName   = _rCashTable.Name;
        rCashAccountStatementTmp.LedgerAccount     = _dimensionAttributevalue.DisplayValue;
        rCashAccountStatementTmp.MainAccount       = _mainaccount.MainAccountId;
        rCashAccountStatementTmp.DocId             = _rCashTrans.DocId;
        rCashAccountStatementTmp.AmountCur         = _rCashTrans.AmountCur;
        rCashAccountStatementTmp.AmountMST         = _rCashTrans.AmountMST;
        rCashAccountStatementTmp.TransCurrencyCode = _rCashTrans.CurrencyCode;
        rCashAccountStatementTmp.TransDate         = _rCashTrans.TransDate;
        rCashAccountStatementTmp.TransTxt          = _rCashTrans.Txt;
        rCashAccountStatementTmp.Voucher           = _rCashTrans.Voucher;

        rCashAccountStatementTmp.OpeningBalance = RCashTable::balanceMst(
            _rCashTable.AccountNum,
            _fromdate - 1);

        rCashAccountStatementTmp.ClosingBalance = RCashTable::balanceMst(
            _rCashTable.AccountNum,
            _todate);

        rCashAccountStatementTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    public void processReport()
    {
        RCashTrans                         rCashTrans;
        RCashTable                         rCashTable;
        RCashAccount                       rCashAccount;
        TransDate                          fromDate;
        TransDate                          toDate;
        Query                              query;
        QueryRun                           queryrun;
        MainAccount                        mainAccount;
        QueryBuildDataSource               qbds;
        DimensionAttributeValueCombination dimensionAttributeValueCombination;

        #isoCountryRegionCodes
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([ [#isoRU, GlobalizationConstants::FeatureReferenceRU00039] ], funcName());

        RCashAccountStatementContract contract = this.parmDataContract() as RCashAccountStatementContract;

        toDate       = contract.parmToDate();
        fromDate     = contract.parmFromDate();
        rCashAccount = contract.parmCashAccount();

        query = this.parmQuery();

        if (rCashAccount)
        {
            qbds = query.dataSourceName(tableStr(RCashTable));
            qbds.addRange(fieldNum(RCashTable, AccountNum)).value(SysQuery::value(rCashAccount));
        }

        qbds = query.dataSourceName(tableStr(RCashTrans));
        qbds.addRange(fieldNum(RCashTrans, TransDate)).value(queryRange(fromDate, toDate));
        qbds.addRange(fieldNum(RCashTrans, TransStatus)).value(SysQuery::valueNot(RCashTransStatus::Canceled));
        qbds.addRange(fieldNum(RCashTrans, DocType)).value(SysQuery::valueNot(RCashDocType::ReportingExchRateDifference));

        queryrun = new queryrun(query);

        while (queryrun.next())
        {
            rCashTrans                         = queryrun.get(tableNum(RCashTrans));
            rCashTable                         = queryrun.get(tableNum(RCashTable));
            dimensionAttributeValueCombination = DimensionAttributeValueCombination::find(rCashTrans.LedgerDimension);
            mainAccount                        = MainAccount::find(dimensionAttributeValueCombination.MainAccount);

            this.insertRcashAccountStatementTmp(
                rCashTrans,
                rCashTable,
                dimensionAttributeValueCombination,
                mainAccount,
                fromDate,
                toDate);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>