<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReturnsArrivalJournalCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSReturnsArrivalJournalCreator
{
    private SalesLine          returnLine;
    private InventQty	       inventQty;
    private InventDimId        inventDimId;
    private WHSDispositionCode dispositionCode;
    private WHSTransWeight	   captureWeight;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {}

]]></Source>
			</Method>
			<Method>
				<Name>createFromParameters</Name>
				<Source><![CDATA[
    internal static WHSReturnsArrivalJournalCreator createFromParameters(
        SalesLine          _returnLine,
        InventQty	       _inventQty,
        InventDimId        _inventDimId,
        WHSDispositionCode _dispositionCode,
        WHSTransWeight	   _captureWeight)
    {
        WHSReturnsArrivalJournalCreator creator = new WHSReturnsArrivalJournalCreator();

        creator.returnLine = _returnLine;
        creator.inventQty = _inventQty;
        creator.inventDimId = _inventDimId;
        creator.dispositionCode = _dispositionCode;
        creator.captureWeight = _captureWeight;

        return creator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReturnOrderArrivalJournalWithSingleLine</Name>
				<Source><![CDATA[
    internal WMSJournalTable createReturnOrderArrivalJournalWithSingleLine()
    {
        ttsbegin;
        WMSJournalTable journalTable = this.createJournalHeader();
        this.createJournalLine(journalTable);
        ttscommit;

        return journalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournalHeader</Name>
				<Source><![CDATA[
    private WMSJournalTable createJournalHeader()
    {
        WMSJournalTable journalTable;
        journalTable.initFromWMSJournalName(WMSJournalName::find(WHSParameters::find().DefaultReturnJournal));
        journalTable.InventTransType        = InventTransType::Sales;
        journalTable.VendAccount            = returnLine.CustAccount;
        journalTable.InventTransRefId       = returnLine.SalesId;
        journalTable.ReturnItemNum          = SalesTable::find(returnLine.SalesId).ReturnItemNum;
        journalTable.CheckPickingLocation   = NoYes::Yes;
        journalTable.InventDimId            = InventDim::inventDimIdBlank();
        journalTable.NumOfLines             = 1;
        journalTable.insert();

        return JournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournalLine</Name>
				<Source><![CDATA[
    private void createJournalLine(WMSJournalTable _journalTable)
    {
        boolean isCWItem = PdsGlobal::pdsIsCWItem(returnLine.ItemId);
        InventQty qty = isCWItem ? captureWeight :inventQty;
        PdsCWInventQty pdsCWQty = isCWItem ? inventQty : 0;
        
        WMSJournalTrans journalTrans;
        journalTrans.LineNum = 1;
        journalTrans.initFromWMSJournalTable(_journalTable);
        journalTrans.initValue();
        journalTrans.IsReturnOrder              = 1;
        journalTrans.ReturnDispositionCodeId    = WHSDispositionTable::find(dispositionCode).ReturnDispositionCodeId;
        journalTrans.ItemId                     = returnLine.ItemId;
        journalTrans.Qty                        = qty;
        journalTrans.PdsCWQty                   = pdsCWQty;
        journalTrans.InventTransId              = returnLine.InventTransId;
        journalTrans.CheckPickingLocation       = NoYes::No;
        journalTrans.InventDimId                = inventDimId;
        journalTrans.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>