<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTableWizardSalesPriceCostCtrl</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjTableWizardSalesPriceCostCtrl extends ProjTableWizard
{
    ProjId      oldId;
    ProjId      newId;
    ProjTable   projTableNew;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createdQtyDB</Name>
				<Source><![CDATA[
    int createdQtyDB()
    {
        return any2int((select count(RecId) from projCostSalesPrice).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createdQtyFile</Name>
				<Source><![CDATA[
    Integer createdQtyFile()
    {
        ProjTable           projTableTemp;
        ProjId              projIdNew;
        ProjCostSalesPrice  projCostSalesPrice;
        int                 tmpCount;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)) ? !this.parmPSACopyOnly() : true)
        {
        projTableTemp.setTmp();
        projTableTemp.setTmpData(this.parmProjTable());
        }

        while select ProjId from projCostSalesPrice where projCostSalesPrice.ProjId like this.parmOldId() + '*'
        {
            projIdNew = ProjTableWizardCtrl::setNewProjId(projCostSalesPrice.ProjId, ProjTable::find(projCostSalesPrice.ProjId).ParentId, this.parmOldId(), this.parmNewId());

            select projTableTemp where projTableTemp.ProjId == projIdNew;

            if (projTableTemp)
            {
                tmpCount++;
            }
        }

        return tmpCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static Name description()
    {
        return "@SYS73784";
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDB</Name>
				<Source><![CDATA[
    void insertDB()
    {
        ProjTable       projTableTemp;
        ProjCostSalesPrice  projCostSalesPriceDB, projCostSalesPriceFile;

        ttsbegin;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)) ? !this.parmPSACopyOnly() : true)
        {
        projTableTemp.setTmp();
        projTableTemp.setTmpData(this.parmProjTable());
        }

        while select projCostSalesPriceFile
            where projCostSalesPriceFile.ProjId   like this.parmOldId()+'*'
        {
            projCostSalesPriceDB.data(projCostSalesPriceFile);
            projCostSalesPriceDB.ProjId   = ProjTableWizardCtrl::setNewProjId(projCostSalesPriceFile.ProjId,
                                                                        ProjTable::find(projCostSalesPriceFile.ProjId).ParentId,
                                                                        this.parmOldId(),
                                                                        this.parmNewId());
            select projTableTemp where projTableTemp.ProjId == projCostSalesPriceDB.ProjId;
            if (projTableTemp)
            {
                projCostSalesPriceDB.insert();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewId</Name>
				<Source><![CDATA[
    ProjId parmNewId(ProjId    _newId = newId)
    {
        newId  = _newId;

        return newId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOldId</Name>
				<Source><![CDATA[
    ProjId parmOldId(ProjId    _oldId = oldId)
    {
        oldId  = _oldId;

        return oldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTable</Name>
				<Source><![CDATA[
    ProjTable parmProjTable(FormDataSource   _form_DS  = null)
    {
        FormDataSource      form_DS;

        if (_form_DS)
        {
            form_DS             = _form_DS;
            projTableNew        = form_DS.cursor();
        }

        return projTableNew;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjTableWizardSalesPriceCostCtrl construct()
    {
        return new ProjTableWizardSalesPriceCostCtrl();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>