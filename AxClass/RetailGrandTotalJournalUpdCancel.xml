<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailGrandTotalJournalUpdCancel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Implements the Cancel operation on journal.
/// </summary>
[RetailGrandTotalJournalAction(RetailGrandTotalJourUpdAction::Cancel)]
public class RetailGrandTotalJournalUpdCancel extends RetailGrandTotalJournalUpdate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getStatus</Name>
				<Source><![CDATA[
    protected RetailGrandTotalJournalStatus getStatus()
    {
        return RetailGrandTotalJournalStatus::Canceled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateJournal</Name>
				<Source><![CDATA[
    protected void updateJournal()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateJournal</Name>
				<Source><![CDATA[
    protected boolean validateJournal()
    {
        boolean ret = true;

        if (journalTable.Status != RetailGrandTotalJournalStatus::Closed)
        {
            ret = checkFailed(strFmt("@RetailGrandTotalJournal:JournalCancelFailure", journalTable.Status));
        }

        if (journalTable.Annual == NoYes::No && journalTable.isNotCancelledJournalExistInNextPeriod())
        {
            ret = checkFailed("@RetailGrandTotalJournal:JournalNotCanceled");
        }

        if (journalTable.Annual == NoYes::No && journalTable.isNotCancelledAnnualJournalExistInCurrentPeriod())
        {
            ret = checkFailed("@RetailGrandTotalJournal:AnnualJournalNotCancelledExists");
        }

        if (journalTable.Annual == NoYes::Yes && journalTable.isNotCancelledJournalExistInNextPeriod())
        {
            ret = checkFailed("@RetailGrandTotalJournal:AnnualJournalNotCancelled");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>