<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesParmCleanupInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class SalesParmCleanupInstrumentationActivities
{
    private const str SalesParmCleanup = 'SalesParmCleanup.';
    private const str runActivity = 'run';
    private const str batchActivity = 'batch';
    private const str LegacyQueryProperty = 'LegacyQuery';
    private const str StoredProcedureProperty = 'StoreProcedure';
    private const str SalesParmCleanupType = 'SalesParmCleanupType';
    private const str ReferenceDataOnlyActivity = 'ReferenceDataOnly';

    private SalesInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(SalesInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    final internal static SalesParmCleanupInstrumentationActivities newFromLogger(SalesInstrumentationLogger _logger)
    {
        return new SalesParmCleanupInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>legacyQueryRun</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext legacyQueryRun()
    {
        var activity = logger.activity(SalesParmCleanup + runActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, LegacyQueryProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legacyDeleteSalesParmTable</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext legacyDeleteSalesParmTable()
    {
        var activity = logger.activity(SalesParmCleanup + tableStr(SalesParmTable));
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, LegacyQueryProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legacyDeleteSalesParmSubTable</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext legacyDeleteSalesParmSubTable()
    {
        var activity = logger.activity(SalesParmCleanup + tableStr(SalesParmSubTable));
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, LegacyQueryProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legacyDeleteSalesParmUpdate</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext legacyDeleteSalesParmUpdate()
    {
        var activity = logger.activity(SalesParmCleanup + tableStr(SalesParmUpdate));
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, LegacyQueryProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legacyDeleteSalesParmLine</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext legacyDeleteSalesParmLine()
    {
        var activity = logger.activity(SalesParmCleanup + tableStr(SalesParmLine));
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, LegacyQueryProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legacyDeleteSalesParmSubLine</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext legacyDeleteSalesParmSubLine()
    {
        var activity = logger.activity(SalesParmCleanup + tableStr(SalesParmSubLine));
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, LegacyQueryProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storedProcedureRun</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext storedProcedureRun()
    {
        var activity = logger.activity(SalesParmCleanup + runActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, StoredProcedureProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storedProcedureHeaderCount</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext storedProcedureHeaderCount()
    {
        var activity = logger.activity(SalesParmCleanup + methodStr(SalesParmCleanUp, getHeaderCountToCleanup));
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, StoredProcedureProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storedProcedureBatch</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext storedProcedureBatch()
    {
        var activity = logger.activity(SalesParmCleanup + batchActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, StoredProcedureProperty);
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storedProcedureReferenceDataOnly</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext storedProcedureReferenceDataOnly()
    {
        var activity = logger.activity(SalesParmCleanup + ReferenceDataOnlyActivity);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.addCustomProperty(SalesParmCleanupType, StoredProcedureProperty);
        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>