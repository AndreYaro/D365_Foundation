<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxLedgerReconciliationUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxLedgerReconciliationUIBuilder</c> class is the report dialog builder for the <c>TaxLedgerReconciliation</c> report.
/// </summary>
public class TaxLedgerReconciliationUIBuilder extends SrsReportDataContractUIBuilder
{
    TaxLedgerReconciliationContract contract;

    DialogField includeDetailsDialogField;
    DialogField reconcileByVATRegisterDateDialogField;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables the form controls on the tax reconciliation report parameters dialog form.
    /// </summary>
    protected void enableFields()
    {
        if (!TaxLedgerReconciliationUIBuilder::isReconcileByVATRegisterDateSupported())
        {
            includeDetailsDialogField.visible(true);
            reconcileByVATRegisterDateDialogField.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the post build for a form.
    /// </summary>
    public void postBuild()
    {
        super();

        this.initDialogField();
        this.enableFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReconcileByVATRegisterDateSupported</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a reconciliation by VAT register date is supported.
    /// </summary>
    /// <returns>
    /// true if the reconciliation by VAT register date is supported; otherwise, false.
    /// </returns>
    public static boolean isReconcileByVATRegisterDateSupported()
    {
        #isoCountryRegionCodes

        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides this method in order to register the dialog field methods to implment lookup on the paramenter dialog.
    /// </summary>
    public void postRun()
    {
        includeDetailsDialogField.registerOverrideMethod(
            methodStr(FormCheckBoxControl, Modified),
            methodStr(TaxLedgerReconciliationUIBuilder,  includeDetailsModified),
            this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeDetailsModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Implements a modified method for include details checkbox.
    /// </summary>
    /// <param name="_control">
    /// A <c>FormCheckBoxControl</c> enumeration value which will be used for the modified method.
    /// </param>
    /// <returns>
    /// The result of the modification.
    /// </returns>
    public boolean includeDetailsModified(FormCheckBoxControl _control)
    {
        reconcileByVATRegisterDateDialogField.enabled(_control.value());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDialogField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the dialog fields from binding information.
    /// </summary>
    private void initDialogField()
    {
        contract = this.dataContractObject();

        includeDetailsDialogField = this.bindInfo().getDialogField(contract, methodStr(TaxLedgerReconciliationContract, parmIncludeDetails));
        reconcileByVATRegisterDateDialogField = this.bindInfo().getDialogField(contract, methodStr(TaxLedgerReconciliationContract, parmReconcileByVATRegisterDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set group attribute.
    /// </summary>
    public void build()
    {
        super();

        FormBuildGroupControl formBuildGroupCtrlOthers = this.dialog().formBuildDesign().control('Others');
        formBuildGroupCtrlOthers.frameType(FormFrameType::None);
        formBuildGroupCtrlOthers.breakable(false);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>