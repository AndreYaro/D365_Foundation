<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendSettle_CustPaym</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustVendSettle_CustPaym</c> class is used upon settling customer transactions from a
///    journal. This class ultimately derives from <c>CustVendSettle</c>.
/// </summary>
public class CustVendSettle_CustPaym extends CustVendSettle_Cust
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createSettlementPair</Name>
				<Source><![CDATA[
    protected void createSettlementPair()
    {
        settlementPair = new SettlementPair_CustPaym();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcInvoiceTaxWithholdAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method calculates withholding tax amount for invoice.
    /// </summary>
    /// <returns>
    /// Return tax withhold amount.
    /// </returns>
    protected TaxWithholdAmount calcInvoiceTaxWithholdAmount()
    {
        TaxWithholdAmount   taxWithholdAmount = 0;
        TaxWithholdTrans    taxWithholdTrans;

        if (TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled())
        {
            changecompany(settlementPair.getDebitCompany())
            {
                // Note: the posting (settling) of the tax withholding is done prior to the main
                // settlement process.  So at the time of settlement the SettleAmount fields on CustTrans
                // have already been updated with the tax withholding amount.

                // Find the amount of the tax withholding in invoice currency.
                select sum(InvoiceTaxWithholdAmount) from taxWithholdTrans
                    where taxWithholdTrans.SpecTransId == settlementPair.getSpecTransDebit().RecId
                    && taxWithholdTrans.CustTransInvoiceId == settlementPair.getCustVendTransDebit().RecId;

                taxWithholdAmount = -1 * taxWithholdTrans.InvoiceTaxWithholdAmount;

                // Update the TaxWithholdTrans SpecTransId field.
                update_recordset taxWithholdTrans
                    setting SpecTransId = 0
                    where taxWithholdTrans.SpecTransId == settlementPair.getSpecTransDebit().RecId
                    && taxWithholdTrans.CustTransInvoiceId == settlementPair.getCustVendTransDebit().RecId;
            }
        }
        else
        {
            taxWithholdAmount = super();
        }

        return taxWithholdAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the class name of the instance.
    /// </summary>
    /// <returns>
    /// The class name of the instance.
    /// </returns>
    public identifiername lastValueElementName()
    {
        return classstr(CustVendSettle_Cust);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCollectionStatusForSettlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overriding the implementation from <c>CustVendSettle_Cust</c>.
    /// This method should NOT do anything under the context of <c>CustVendSettle_CustPaym</c> as this logic is
    /// already handled inside the postJournal method of <c>LedgerJournalCheckPost</c> class.
    /// </summary>
    internal void updateCollectionStatusForSettlement()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>