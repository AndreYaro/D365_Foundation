<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineTimesheetLineImpl_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The tax model class for <c>TSTimesheetLine</c>.
/// </summary>
[TaxModelDocumentLineAttribute(tablestr(TSTimesheetLine))]
public class TaxModelDocLineTimesheetLineImpl_IN extends TaxModelDocLineWithholdImpl_IN
{
    TSTimesheetTable    tsTimesheetTable;
    TSTimesheetLine     tsTimesheetLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canModifyTaxInformation</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine if tax information can be updated or not.
    /// </summary>
    /// <returns>
    /// True if the document is not posted; otherwise, false.
    /// </returns>
    public NoYes canModifyTaxInformation()
    {
        return tsTimesheetTable.ApprovalStatus != TSAppStatus::Ledger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTable</Name>
				<Source><![CDATA[
    public CustTable getCustTable()
    {
        ProjTable projTable;
        CustTable custTable;

        changeCompany(tsTimesheetLine.ProjectDataAreaId)
        {
            select firstOnly custTable
            exists join projTable
                where projTable.CustAccount == custTable.AccountNum
                    && projTable.ProjId     == tsTimesheetLine.ProjId;
        }

        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventDimId</Name>
				<Source><![CDATA[
    public InventDimId getInventDimId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemId</Name>
				<Source><![CDATA[
    public ItemId getItemId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init(SalesPurchJournalLine _documentLineMap)
    {
        tsTimesheetLine     = _documentLineMap;
        tsTimesheetTable    = TSTimesheetTable::find(tsTimesheetLine.TimesheetNbr);

        super(_documentLineMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantity</Name>
				<Source><![CDATA[
    public Qty getQuantity()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentInvoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction invoice date
    /// </summary>
    /// <returns>
    /// The transaction invoice date
    /// </returns>
    public InvoiceDate getDocumentInvoiceDate()
    {
        return DateTimeUtil::date(tsTimesheetTable.CreatedDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction document date
    /// </summary>
    /// <returns>
    /// The transaction document date
    /// </returns>
    public DocumentDate getDocumentDate()
    {
        return DateTimeUtil::date(tsTimesheetTable.CreatedDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxLogisticsPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax <c>LogisticsPostalAddress</c> of this transaction document line.
    /// </summary>
    /// <param name = "_type">The transaction tax information type.</param>
    /// <returns>
    /// The tax <c>LogisticsPostalAddress</c>
    /// </returns>
    /// This method is used to init TransTaxInformation.CompanyLocation, which should be defaulted from company address.
    public LogisticsPostalAddress getTaxLogisticsPostalAddress(TransTaxInformationType_IN _type = TransTaxInformationType_IN::Normal)
    {
        if (tsTimesheetLine.ProjectDataAreaId != curExt())
        {
            return LogisticsPostalAddress::findByLocation(LogisticsLocationDefault::findSimpleDefaultByRoleType(CompanyInfo::find(), LogisticsLocationRoleType::Delivery).RecId);
        }
        else
        {
            return super();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>