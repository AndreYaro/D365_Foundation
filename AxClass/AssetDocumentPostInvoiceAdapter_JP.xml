<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDocumentPostInvoiceAdapter_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Asset document invoice post adapter.
/// </summary>
class AssetDocumentPostInvoiceAdapter_JP extends AssetDocumentPostAdapter_JP
{
    InventMovement              inventMovement;
    InventTransOrigin           inventTransOrigin;
    VendInvoiceInfoTable        vendInvoiceInfoTable;
    VendInvoiceInfoLine         vendInvoiceInfoLine;
    VendInvoiceInfoLine_Asset   vendInvoiceInfoLineAsset;
    VendInvoiceJour             vendInvoiceJour;
    VendInvoiceTrans            vendInvoiceTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the asset document post invoice adapter.
    /// </summary>
    public void init()
    {
        super();

        assetPost = new AssetPost(this.parmLedgerVoucher());
        assetPost.initFromInventMovement_AssetDocument_JP(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAssetTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes fixed asset transaction based on vendor invoice line.
    /// </summary>
    /// <param name="_assetTrans">
    /// The fixed asset transaction.
    /// </param>
    /// <returns>
    /// The fixed asset transction.
    /// </returns>
    public AssetTrans initAssetTrans(AssetTrans _assetTrans)
    {
        _assetTrans = super(_assetTrans);

        if (vendInvoiceInfoLine.purchLine().isStocked()
            && !vendInvoiceInfoLine.isNonPO())
        {
            _assetTrans.AssetId          = inventMovement.assetId();
            _assetTrans.BookId           = inventMovement.assetBookId() ? inventMovement.assetBookId() : AssetParameters::find().BookIdDefault;
            _assetTrans.DefaultDimension = inventMovement.defaultDimension();
        }
        else
        {
            _assetTrans.AssetId          = vendInvoiceInfoLineAsset.AssetId;
            _assetTrans.BookId           = vendInvoiceInfoLineAsset.AssetBookId;
            _assetTrans.Voucher          = vendInvoiceJour.LedgerVoucher;
            _assetTrans.TransDate        = vendInvoiceJour.InvoiceDate;
            _assetTrans.DefaultDimension = vendInvoiceTrans.DefaultDimension;
        }

        _assetTrans.AssetGroup       = AssetTable::find(_assetTrans.AssetId).AssetGroup;
        _assetTrans.TransType        = AssetDocumentUtility_JP::assetTransTypePurch2AssetTransType(
                                              vendInvoiceInfoLineAsset.AssetTransTypePurch,
                                              documentTable.Type);
        _assetTrans.Txt              = enum2str(_assetTrans.TransType);
        _assetTrans.CurrencyCode     = vendInvoiceInfoLine.currencyCode;
        return _assetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventMovement</Name>
				<Source><![CDATA[
        public InventMovement parmInventMovement(InventMovement _inventMovement =  inventMovement)
    {
        inventMovement = _inventMovement;
        return inventMovement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransOrigin</Name>
				<Source><![CDATA[
        public InventTransOrigin parmInventTransOrigin(InventTransOrigin _inventTransOrigin  = inventTransOrigin)
    {
        inventTransOrigin = _inventTransOrigin;
        return inventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceInfoLine</Name>
				<Source><![CDATA[
        public VendInvoiceInfoLine parmVendInvoiceInfoLine(VendInvoiceInfoLine _vendInvoiceInfoLine = vendInvoiceInfoLine)
    {
        vendInvoiceInfoLine = _vendInvoiceInfoLine;

        if (vendInvoiceInfoLine.ParmId     != vendInvoiceInfoTable.ParmId ||
            vendInvoiceInfoLine.TableRefId != vendInvoiceInfoTable.TableRefId)
        {
            vendInvoiceInfoTable = VendInvoiceInfoTable::find(vendInvoiceInfoLine.ParmId, vendInvoiceInfoLine.TableRefId);
        }

        return vendInvoiceInfoLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceInfoLineAsset</Name>
				<Source><![CDATA[
        public VendInvoiceInfoLine_Asset parmVendInvoiceInfoLineAsset(VendInvoiceInfoLine_Asset _vendInvoiceInfoLineAsset = vendInvoiceInfoLineAsset)
    {
        vendInvoiceInfoLineAsset = _vendInvoiceInfoLineAsset;
        return vendInvoiceInfoLineAsset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceJour</Name>
				<Source><![CDATA[
        public VendInvoiceJour parmVendInvoiceJour(VendInvoiceJour _vendInvoiceJour = vendInvoiceJour)
    {
        vendInvoiceJour = _vendInvoiceJour;
        return vendInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceTrans</Name>
				<Source><![CDATA[
        public VendInvoiceTrans parmVendInvoiceTrans(VendInvoiceTrans _vendInvoiceTrans = vendInvoiceTrans)
    {
        vendInvoiceTrans = _vendInvoiceTrans;
        return vendInvoiceTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>