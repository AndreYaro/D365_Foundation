<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAccountTypeClass</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerAccountTypeClass
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canHaveTransactions</Name>
				<Source><![CDATA[
        boolean canHaveTransactions()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBudgetGroupAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the ledger account type is allowed to be used as a budget group account.
    /// </summary>
    /// <returns>
    /// False.
    /// </returns>
    public boolean isBudgetGroupAllowed()
    {
        ;

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBudgetSetupAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the ledger account type is allowed to be setup for budget.
    /// </summary>
    /// <returns>
    /// True.
    /// </returns>
    public boolean isBudgetSetupAllowed()
    {
        ;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isHeadingAccount</Name>
				<Source><![CDATA[
        boolean isHeadingAccount()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProfitLossAccount</Name>
				<Source><![CDATA[
        boolean isProfitLossAccount()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStatusAccount</Name>
				<Source><![CDATA[
        boolean isStatusAccount()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSumAccount</Name>
				<Source><![CDATA[
        boolean isSumAccount()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static LedgerAccountTypeClass construct(LedgerAccountType type)
    {
        LedgerAccountTypeClass typeClass;

        switch (type)
        {
            case LedgerAccountType::AccountOperations:
                typeClass = new LedgerAccountType_AccountOperations();
                break;

            case LedgerAccountType::AccountRevenue:
                typeClass = new LedgerAccountType_AccountRevenue();
                break;

            case LedgerAccountType::AccountCost:
                typeClass = new LedgerAccountType_AccountCost();
                break;

            case LedgerAccountType::AccountStatus:
                typeClass = new LedgerAccountType_AccountStatus();
                break;

            case LedgerAccountType::AccountActive:
                typeClass = new LedgerAccountType_AccountActive();
                break;

            case LedgerAccountType::AccountLiable:
                typeClass = new LedgerAccountType_AccountLiable();
                break;

            case LedgerAccountType::Heading:
                typeClass = new LedgerAccountType_Heading();
                break;

            case LedgerAccountType::HeadingEmpty:
                typeClass = new LedgerAccountType_HeadingEmpty();
                break;

            case LedgerAccountType::HeadingPage:
                typeClass = new LedgerAccountType_HeadingPage();
                break;

            case LedgerAccountType::sum:
                typeClass = new LedgerAccountType_Sum();
                break;

            case LedgerAccountType::AccountGroup :
                typeClass = new LedgerAccountType_Total();
                break;

            // <GCN>
            case LedgerAccountType::Common_CN :
                if (LedgerParameters::isCommonAccountType_CN())
                {
                    typeClass = new LedgerAccountType_AccountCommon_CN();
                    break;
                }
            // </GCN>

            default:
                throw error(strfmt("@SYS12580", type));
        }
        return typeClass;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>