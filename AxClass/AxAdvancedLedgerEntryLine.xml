<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxAdvancedLedgerEntryLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>AxAdvancedLedgerEntryLine</c> class is generated by the AIF document service utility, it is used to handles the <c>AdvancedLedgerEntryLine</c> record for the web service.
/// </summary>
class AxAdvancedLedgerEntryLine extends AxApplicationBase
{
    AdvancedLedgerEntryLine advancedLedgerEntryLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>advancedLedgerEntryLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the provided <c>AdvancedLedgerEntryLine</c> buffer as the current record.
    /// </summary>
    /// <param name="_advancedLedgerEntryLine">
    ///     A buffer to be used as the current record.
    /// </param>
    /// <returns>
    ///     The current record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AdvancedLedgerEntryLine advancedLedgerEntryLine(AdvancedLedgerEntryLine _advancedLedgerEntryLine = advancedLedgerEntryLine)
    {
        if (!prmisDefault(_advancedLedgerEntryLine))
        {
            this.setCurrentRecordFromExternal(_advancedLedgerEntryLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the original instance of the <c>AxInternalBase</c> class.
    /// </summary>
    /// <returns>
    ///     An instance of the <c>AxInternalBase</c> class.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _advancedLedgerEntryLine = advancedLedgerEntryLine)
    {
        if (!prmisDefault(_advancedLedgerEntryLine))
        {
            super(_advancedLedgerEntryLine);
            advancedLedgerEntryLine = _advancedLedgerEntryLine as AdvancedLedgerEntryLine;
        }
        else
        {
            super();
        }

        return advancedLedgerEntryLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    protected Common emptyRecord()
    {
        AdvancedLedgerEntryLine localAdvancedLedgerEntryLine;

        return localAdvancedLedgerEntryLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles the Exemption of the mandatory fields of the <c>AdvancedLedgerEntryLine</c>.
    /// </summary>
    protected void initMandatoryFieldsExemptionList()
    {
        super();

        this.setParmMethodAsNotMandatory(methodStr(AxAdvancedLedgerEntryLine, parmJournalizingDefinition));
        this.setParmMethodAsNotMandatory(methodStr(AxAdvancedLedgerEntryLine, parmTransactionText));
        this.setParmMethodAsNotMandatory(methodStr(AxAdvancedLedgerEntryLine, parmTransactionCurrency));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves an enumeration value that specifies the internal or external context.
    /// </summary>
    /// <param name="_inputStatus">
    ///    An enumeration value that specifies the new input status; optional.
    /// </param>
    /// <returns>
    ///    An internal or external enumeration value.
    /// </returns>
    /// <remarks>
    ///    The <c>AxAdvancedLedgerEntryHeader</c> class is intended to work with the client and service
    ///    model.This variable is exposed to be controlled from the client and the service models. The
    ///    <c>Internal</c> enumeration value represents the application. The <c>External</c> enumeration value
    ///    represents the user or application.
    /// </remarks>
    public int inputStatus(InternalExternal _inputStatus = inputStatus)
    {
        int inputStatusReturn;

        inputStatusReturn = super(_inputStatus);

        return inputStatusReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldSetExternally</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if a specific field is set externally.
    /// </summary>
    /// <param name="_fieldId">
    ///     A fieldId of the table field to be checked.
    /// </param>
    /// <returns>
    ///     true if the field is set externally; otherwise, false.
    /// </returns>
    public boolean isFieldSetExternally(fieldId _fieldId)
    {
        boolean isFieldSetExternally;

        isFieldSetExternally = super(_fieldId);

        return isFieldSetExternally;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAdvancedLedgerEntryHeader</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId parmAdvancedLedgerEntryHeader(RefRecId _advancedLedgerEntryHeader = 0)
    {
        if (!prmisDefault(_advancedLedgerEntryHeader))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, AdvancedLedgerEntryHeader), _advancedLedgerEntryHeader);
        }

        return advancedLedgerEntryLine.AdvancedLedgerEntryHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountCurCredit</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountCurCredit parmAmountCurCredit(AmountCurCredit _amountCurCredit = 0)
    {
        if (!prmisDefault(_amountCurCredit))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, AmountCurCredit), _amountCurCredit);
        }

        return advancedLedgerEntryLine.AmountCurCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountCurDebit</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountCurDebit parmAmountCurDebit(AmountCurDebit _amountCurDebit = 0)
    {
        if (!prmisDefault(_amountCurDebit))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, AmountCurDebit), _amountCurDebit);
        }

        return advancedLedgerEntryLine.AmountCurDebit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostPrice</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountCur parmCostPrice(AmountCur _costPrice = 0)
    {
        if (!prmisDefault(_costPrice))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, CostPrice), _costPrice);
        }

        return advancedLedgerEntryLine.CostPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalizingDefinition</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId parmJournalizingDefinition(RefRecId _journalizingDefinition = 0)
    {
        if (!prmisDefault(_journalizingDefinition))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, JournalizingDefinition), _journalizingDefinition);
        }

        return advancedLedgerEntryLine.JournalizingDefinition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerDimension</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public DimensionDynamicAccount parmLedgerDimension(DimensionDynamicAccount _ledgerDimension = 0)
    {
        if (!prmisDefault(_ledgerDimension))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, LedgerDimension), _ledgerDimension);
        }

        return advancedLedgerEntryLine.LedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNumber</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LineNum parmLineNumber(LineNum _lineNumber = 1)
    {
        if (!prmisDefault(_lineNumber))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, LineNumber), _lineNumber);
        }

        return advancedLedgerEntryLine.LineNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjActivityNumber</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProjActivityNumber parmProjActivityNumber(ProjActivityNumber _projActivityNumber = '')
    {
        if (!prmisDefault(_projActivityNumber))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, ProjActivityNumber), _projActivityNumber);
        }

        return advancedLedgerEntryLine.ProjActivityNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjCategoryId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProjCategoryId parmProjCategoryId(ProjCategoryId _projCategoryId = '')
    {
        if (!prmisDefault(_projCategoryId))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, ProjCategoryId), _projCategoryId);
        }

        return advancedLedgerEntryLine.ProjCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjFundingSource</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId parmProjFundingSource(RefRecId _projFundingSource = 0)
    {
        if (!prmisDefault(_projFundingSource))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, ProjFundingSource), _projFundingSource);
        }

        return advancedLedgerEntryLine.ProjFundingSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProjId parmProjId(ProjId _projId = '')
    {
        if (!prmisDefault(_projId))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, ProjId), _projId);
        }

        return advancedLedgerEntryLine.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjLinePropertyId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProjLinePropertyId parmProjLinePropertyId(ProjLinePropertyId _projLinePropertyId = '')
    {
        if (!prmisDefault(_projLinePropertyId))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, ProjLinePropertyId), _projLinePropertyId);
        }

        return advancedLedgerEntryLine.ProjLinePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesCurrency</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmProjSalesCurrency(str _projSalesCurrency = '')
    {
        DictField dictField;

        if (!prmisDefault(_projSalesCurrency))
        {
            dictField = new DictField(tableNum(AdvancedLedgerEntryLine), fieldNum(AdvancedLedgerEntryLine, ProjSalesCurrency));
            this.validateInboundCurrencyString(_projSalesCurrency, dictField);

            if (this.valueMappingInbound())
            {
                _projSalesCurrency = this.axCurrencyCode(_projSalesCurrency);
            }

            this.setField(fieldNum(AdvancedLedgerEntryLine, ProjSalesCurrency), _projSalesCurrency);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(advancedLedgerEntryLine.ProjSalesCurrency);
        }
        else
        {
            return advancedLedgerEntryLine.ProjSalesCurrency;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxGroupId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProjTaxGroup parmProjTaxGroupId(ProjTaxGroup _projTaxGroup = '')
    {
        if (!prmisDefault(_projTaxGroup))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, ProjTaxGroupId), _projTaxGroup);
        }

        return advancedLedgerEntryLine.ProjTaxGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxItemGroupId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProjTaxItemGroup parmProjTaxItemGroupId(ProjTaxItemGroup _projTaxItemGroup = '')
    {
        if (!prmisDefault(_projTaxItemGroup))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, ProjTaxItemGroupId), _projTaxItemGroup);
        }

        return advancedLedgerEntryLine.ProjTaxItemGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantity</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Qty parmQuantity(Qty _quantity = 0)
    {
        if (!prmisDefault(_quantity))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, Quantity), _quantity);
        }

        return advancedLedgerEntryLine.Quantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResource</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ResourceRecId parmResource(ResourceRecId _resource = 0)
    {
        if (!prmisDefault(_resource))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, Resource), _resource);
        }

        return advancedLedgerEntryLine.Resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceCategory</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ResourceCategoryRecId parmResourceCategory(ResourceCategoryRecId _resourceCategory = 0)
    {
        if (!prmisDefault(_resourceCategory))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, ResourceCategory), _resourceCategory);
        }

        return advancedLedgerEntryLine.ResourceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPrice</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AmountCur parmSalesPrice(AmountCur _salesPrice = 0)
    {
        if (!prmisDefault(_salesPrice))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, SalesPrice), _salesPrice);
        }

        return advancedLedgerEntryLine.SalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCurrency</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmTransactionCurrency(str _transactionCurrency = '')
    {
        DictField dictField;

        if (!prmisDefault(_transactionCurrency))
        {
            dictField = new DictField(tableNum(AdvancedLedgerEntryLine), fieldNum(AdvancedLedgerEntryLine, TransactionCurrency));
            this.validateInboundCurrencyString(_transactionCurrency, dictField);

            if (this.valueMappingInbound())
            {
                _transactionCurrency = this.axCurrencyCode(_transactionCurrency);
            }

            this.setField(fieldNum(AdvancedLedgerEntryLine, TransactionCurrency), _transactionCurrency);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(advancedLedgerEntryLine.TransactionCurrency);
        }
        else
        {
            return advancedLedgerEntryLine.TransactionCurrency;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionText</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AdvancedLedgerEntryTransText parmTransactionText(AdvancedLedgerEntryTransText _transactionText = '')
    {
        if (!prmisDefault(_transactionText))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, TransactionText), _transactionText);
        }

        return advancedLedgerEntryLine.TransactionText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFinTag</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FinTagRecId parmFinTag(FinTagRecId _finTagRecId = 0)
    {
        if (!prmisDefault(_finTagRecId))
        {
            this.setField(fieldNum(AdvancedLedgerEntryLine, FinTag), _finTagRecId);
        }

        return advancedLedgerEntryLine.FinTag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeFieldAsTouched</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Removes a field from the field touched map.
    /// </summary>
    /// <param name="_fieldId">
    ///     The field that should be removed.
    /// </param>
    /// <returns>
    ///     true if the field was removed; otherwise, false.
    /// </returns>
    /// <remarks>
    ///     This method is exposed so the internal state can be reset. You may sometimes have to apply a default field value and
    ///     ignore the value that is provided by the consumer. By resetting the internal state, typical defaulting can occur.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean removeFieldAsTouched(fieldId _fieldId)
    {
        boolean removeFieldsAsTouchedReturn;

        removeFieldsAsTouchedReturn = fieldTouched.remove(_fieldId);

        return removeFieldsAsTouchedReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        this.advancedLedgerEntryLine().defaultRow(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calls the <c>validateField</c> method for the current <c>AdvancedLedgerEntryLine</c> record.
    /// </summary>
    /// <param name="_field">
    ///     The field identifier that corresponds to the field being validated.
    /// </param>
    /// <remarks>
    ///     This method overrides the base implementation so this <c>AxAdvancedLedgerEntryLine</c> instance can
    ///     be passed to the <c>AdvancedLedgerEntryLine.validateField</c> table method.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///     An error is found validating record.
    /// </exception>
    protected void validateField(fieldId _field)
    {
        AdvancedLedgerEntryLine currentRecord = this.currentRecord() as AdvancedLedgerEntryLine;
        if (!currentRecord.validateField(_field, this))
        {
            if (continueOnError)
            {
                error("@SYS98197");
            }
            else
            {
                throw error("@SYS98197");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calls the <c>validateWrite</c> method for the current <c>AdvancedLedgerEntryLine</c> record.
    /// </summary>
    /// <remarks>
    ///     This method overrides the base implementation. Therefore, this <c>AxAdvancedLedgerEntryLine</c>
    ///     instance can be passed to the <c>AdvancedLedgerEntryLine.validateWrite</c> table method.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///     An error is found when validating the record.
    /// </exception>
    protected void validateWrite()
    {
        if (!this.currentRecord().validateWrite())
        {
            if (continueOnError)
            {
                error("@SYS98197");
            }
            else
            {
                throw error("@SYS98197");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AxAdvancedLedgerEntryLine construct()
    {
        return new AxAdvancedLedgerEntryLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAdvancedLedgerEntryLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Instantiates a new object of the <c>AxAdvancedLedgerEntryLine</c> class.
    /// </summary>
    /// <param name="_advancedLedgerEntryLine">
    ///     An <c>AdvancedLedgerEntryLine</c> buffer to be used as the current record.
    /// </param>
    /// <returns>
    ///     A new instance of the <c>AxAdvancedLedgerEntryLine</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AxAdvancedLedgerEntryLine newAdvancedLedgerEntryLine(AdvancedLedgerEntryLine _advancedLedgerEntryLine)
    {
        AxAdvancedLedgerEntryLine axAdvancedLedgerEntryLine = AxAdvancedLedgerEntryLine::construct();

        axAdvancedLedgerEntryLine.advancedLedgerEntryLine(_advancedLedgerEntryLine);

        return axAdvancedLedgerEntryLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>