<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankDocumentUpdateBankTransTypeContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute]
[SysOperationContractProcessing(classStr(BankDocumentUpdateBankTransTypeUIBuilder))]
internal final class BankDocumentUpdateBankTransTypeContract extends SysOperationAttributedDataContractInfo
{
    private BankAccountID bankAccountId;
    private BankTransactionType bankTransType;
    private str encodedQuery;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmBankAccount</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(BankAccountId))]
    internal BankAccountID parmBankAccount(BankAccountId _bankAccountId = bankAccountId)
    {
        bankAccountId = _bankAccountId;

        return bankAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankTransType</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(BankTransactionType))]
    internal BankTransactionType parmBankTransType(BankTransactionType _bankTransType = bankTransType)
    {
        bankTransType = _bankTransType;

        return bankTransType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [DataMember, AifQueryType('_query', queryStr(BankDocumentUpdateBankTransTypeQuery))]
    internal str parmQuery(str _query = encodedQuery)
    {
        encodedQuery = _query;

        return encodedQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    internal Query getQuery()
    {
        return new Query(SysOperationHelper::base64Decode(encodedQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBankAccount</Name>
				<Source><![CDATA[
    internal boolean validateBankAccount()
    {
        return BankDocumentUpdateBankTransTypeValidator::checkBankAccount(bankAccountId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBankTransType</Name>
				<Source><![CDATA[
    internal boolean validateBankTransType()
    {
        return BankDocumentUpdateBankTransTypeValidator::checkBankTransType(bankTransType);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>