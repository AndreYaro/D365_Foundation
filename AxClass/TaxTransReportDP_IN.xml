<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransReportDP_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Report Data Provider <c>TaxTransReportDP_IN</c> class for <c>TaxTransReport_IN</c> report.
/// </summary>
[SRSReportParameterAttribute(classstr(SrsTmpTblMarshallerContract))]
class TaxTransReportDP_IN extends SRSReportDataProviderBase
{
    TmpIndirectTaxInquiryTable_IN tmpIndirectTaxInquiryTable_IN;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTmpIndirectTaxInquiryTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes temporary table.
    /// </summary>
    /// <returns>
    /// Returns temporary table <c>TmpIndirectTaxInquiryTable_IN</c>.
    /// </returns>
    [SRSReportDataSetAttribute(tablestr(TmpIndirectTaxInquiryTable_IN))]
    public TmpIndirectTaxInquiryTable_IN getTmpIndirectTaxInquiryTable_IN()
    {
        return tmpIndirectTaxInquiryTable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the records into the temporary <c>tmpIndirectTaxInquiryTable_IN</c> table.
    /// </summary>
    public void processReport()
    {
        SRSReportRunPermission permission;
        RecId                  tmpTableDataRecId;

        SrsTmpTblMarshallerContract contract = this.parmDataContract() as SrsTmpTblMarshallerContract;

        tmpTableDataRecId = contract.parmTmpTableDataRecId();
        permission        = new SRSReportRunPermission();
        permission.assert();

        //Temp table object that was returned from SRSTmpTblMarshaller
        tmpIndirectTaxInquiryTable_IN = SRSTmpTblMarshaller::getTmpTbl(tmpTableDataRecId);
        SRSTmpTblMarshaller::deleteTmpTblData(tmpTableDataRecId);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
