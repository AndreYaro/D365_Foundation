<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PsaListPanelRelationTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
// Description : define components the highlighted component will be based on.
class PsaListPanelRelationTable extends SysListPanel
{
    PSAIndirectComponentGroupId  m_sComponentGroupId;
    PSAIndirectComponentType     m_eCompoundingRulesType;
    PSAIndirectComponentId       m_sBaseComponentId;
    LineNum                      m_rComponentLineNum;
    LineNum                      m_rComponentLineNumOld;
    RecId                        m_rRecId;
    RecId                        m_rRecIdOld;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    // Description    : add selected component to PSAIndirectCompoundingRulesSelection table
    void addData(container _cnData)
    {
        PSAListPanelRelationTable::server_addData(_cnData,
                                                  m_sComponentGroupId,
                                                  m_eCompoundingRulesType,
                                                  m_sBaseComponentId
                                                  );
    }

]]></Source>
			</Method>
			<Method>
				<Name>fill</Name>
				<Source><![CDATA[
    // Description    : Fill data to tab
    void fill()
    {
        if (m_rComponentLineNum != m_rComponentLineNumOld ||
           m_rRecId            != m_rRecIdOld)
        {
            super();
            m_rComponentLineNumOld = m_rComponentLineNum;
            m_rRecIdOld            = m_rRecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    // Description    : get data for selected tab
    container getData()
    {
        return PSAListPanelRelationTable::server_getData(m_sComponentGroupId,
                                                         m_eCompoundingRulesType,
                                                         m_rComponentLineNum,
                                                         m_sBaseComponentId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        //rename the add and remove buttons
        addButton.text("@PSA11043");
        addButton.width(70);
        removeButton.text("@PSA11044");
        removeButton.width(70);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBaseComponentId</Name>
				<Source><![CDATA[
    // Description    : set initial value
    PSAIndirectComponentId parmBaseComponentId(PSAIndirectComponentId _sBaseComponentId = m_sBaseComponentId)
    {
        m_sBaseComponentId = _sBaseComponentId;

        return m_sBaseComponentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmComponentGroupId</Name>
				<Source><![CDATA[
    // Description    : set initial value
    PSAIndirectComponentGroupId parmComponentGroupId(PSAIndirectComponentGroupId _sComponentGroupId = m_sComponentGroupId)
    {
        m_sComponentGroupId = _sComponentGroupId;

        return m_sComponentGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmComponentLineNum</Name>
				<Source><![CDATA[
    // Description    : set initial value
    LineNum parmComponentLineNum(LineNum _rComponentLineNum = m_rComponentLineNum)
    {
        m_rComponentLineNum = _rComponentLineNum;

        return m_rComponentLineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompoundingRulesType</Name>
				<Source><![CDATA[
    // Description    : set initial value
    PSAIndirectComponentType parmCompoundingRulesType(PSAIndirectComponentType _eCompoundingRulesType = m_eCompoundingRulesType)
    {
        m_eCompoundingRulesType = _eCompoundingRulesType;

        return m_eCompoundingRulesType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecId</Name>
				<Source><![CDATA[
    // Description    : set initial value
    public RecId parmRecId(RecId _rRecId = m_rRecId)
    {
        m_rRecId = _rRecId;

        return m_rRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    // Description    : remove selected component from PSAIndirectCompoundingRulesSelection table
    void removeData(container _cnData)
    {
        PSAListPanelRelationTable::server_removeData(_cnData,
                                                     m_sComponentGroupId,
                                                     m_eCompoundingRulesType,
                                                     m_sBaseComponentId
                                                     );
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    // Description    : instance PSAListPanelRelationTable class
    static PSAListPanelRelationTable construct()
    {
        return new PSAListPanelRelationTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedData</Name>
				<Source><![CDATA[
    // Description    : get left data for selected tab
    static container getSelectedData(PSAIndirectComponentGroupId _sComponentGroupId,
                                        PSAIndirectComponentType    _eCompoundingRulesType,
                                        PSAIndirectComponentId      _sBaseComponentId)
    {
        container cnData, cnDataRow;
        PSAIndirectCompoundingRulesSelection tCompoundingRulesSelection;

        while select ComponentId from tCompoundingRulesSelection
            where tCompoundingRulesSelection.ComponentGroupId == _sComponentGroupId     &&
                  tCompoundingRulesSelection.ComponentType    == _eCompoundingRulesType &&
                  tCompoundingRulesSelection.BaseComponentId  == _sBaseComponentId
        {
            cnDataRow = [tCompoundingRulesSelection.ComponentId];
            cnDataRow += tCompoundingRulesSelection.localisedComponentId();
            cnData    += [cnDataRow];
        }

        return cnData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAvailableData</Name>
				<Source><![CDATA[
    // Description    : get right data for selected tab
    static container getAvailableData(PSAIndirectComponentGroupId _sComponentGroupId,
                                         PSAIndirectComponentType    _eCompoundingRulesType,
                                         LineNum                     _rComponentLineNum,
                                         PSAIndirectComponentId      _sBaseComponentId)
    {
        container cnData, cnDataRow;
        PSAIndirectCompoundingRulesSelection tCompoundingRulesSelection;
        PSAIndirectCompoundingRules          tComponentRules;

        while select ComponentGroupId,ComponentType,ComponentId from tComponentRules
            order by LineNum
            where tComponentRules.ComponentGroupId == _sComponentGroupId     &&
                  tComponentRules.ComponentType    == _eCompoundingRulesType &&
                  tComponentRules.LineNum          <  _rComponentLineNum
            notexists join tCompoundingRulesSelection
                where tCompoundingRulesSelection.BaseComponentId  == _sBaseComponentId                &&
                      tCompoundingRulesSelection.ComponentGroupId == tComponentRules.ComponentGroupId &&
                      tCompoundingRulesSelection.ComponentType    == tComponentRules.ComponentType    &&
                      tCompoundingRulesSelection.ComponentId      == tComponentRules.ComponentId
        {
            cnDataRow = [tComponentRules.ComponentId];
            cnDataRow += tComponentRules.localisedComponentId();
            cnData    += [cnDataRow];
        }

        return cnData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    // Description    : instance PSAListPanelRelationTable class and set initial value
    static PSAListPanelRelationTable newForm(FormRun _formRun,
                                             int     _parentId,
                                             str     _captionSelected,
                                             str     _captionAvailable,
                                             int     _imageId
                                             )
    {
        PSAListPanelRelationTable opsaListPanel = PSAListPanelRelationTable::construct();

        opsaListPanel.parmFormRun(_formRun);
        opsaListPanel.parmParentId(_parentId);
        opsaListPanel.parmCaptionAvailable(_captionAvailable);
        opsaListPanel.parmCaptionSelected(_captionSelected);
        opsaListPanel.parmImageId(_imageId);
        opsaListPanel.build();
        return opsaListPanel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>server_addData</Name>
				<Source><![CDATA[
    // Description    : add selected component to PSAIndirectCompoundingRulesSelection table
    static void server_addData(container                   _cnData,
                                      PSAIndirectComponentGroupId _sComponentGroupId,
                                      PSAIndirectComponentType    _eCompoundingRulesType,
                                      PSAIndirectComponentId      _sBaseComponentId)
    {
        int i;
        PSAIndirectCompoundingRulesSelection tCompoundingRulesSelection;

        ttsbegin;
        for (i = conLen(_cnData); i; i--)
        {
            tCompoundingRulesSelection.ComponentId      = conPeek(_cnData, i);
            tCompoundingRulesSelection.ComponentGroupId = _sComponentGroupId;
            tCompoundingRulesSelection.ComponentType    = _eCompoundingRulesType;
            tCompoundingRulesSelection.BaseComponentId  = _sBaseComponentId;
            tCompoundingRulesSelection.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>server_getData</Name>
				<Source><![CDATA[
    // Description    : get data for selected tab
    static container server_getData(PSAIndirectComponentGroupId _sComponentGroupId,
                                           PSAIndirectComponentType    _eCompoundingRulesType,
                                           LineNum                     _rComponentLineNum,
                                           PSAIndirectComponentId      _sBaseComponentId)
    {
        container cnSelectedData = PSAListPanelRelationTable::getSelectedData(_sComponentGroupId,
                                                                      _eCompoundingRulesType,
                                                                      _sBaseComponentId);

        container cnAvailableData = PSAListPanelRelationTable::getAvailableData(_sComponentGroupId,
                                                                        _eCompoundingRulesType,
                                                                        _rComponentLineNum,
                                                                        _sBaseComponentId);

        return [cnAvailableData, cnSelectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>server_removeData</Name>
				<Source><![CDATA[
    // Description    : remove selected component from PSAIndirectCompoundingRulesSelection table
    static void server_removeData(container                   _cnData,
                                         PSAIndirectComponentGroupId _sComponentGroupId,
                                         PSAIndirectComponentType    _eCompoundingRulesType,
                                         PSAIndirectComponentId      _sBaseComponentId)
    {
        int i;
        PSAIndirectCompoundingRulesSelection tCompoundingRulesSelection;
        PSAIndirectComponentId               sComponentId;

        ttsbegin;
        for (i = conLen(_cnData); i; i--)
        {
            sComponentId = conPeek(_cnData, i);
            delete_from tCompoundingRulesSelection
                where tCompoundingRulesSelection.ComponentId      == sComponentId           &&
                      tCompoundingRulesSelection.ComponentGroupId == _sComponentGroupId     &&
                      tCompoundingRulesSelection.ComponentType    == _eCompoundingRulesType &&
                      tCompoundingRulesSelection.BaseComponentId  == _sBaseComponentId;
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>