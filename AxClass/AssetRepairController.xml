<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetRepairController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>AssetRepairController</c> class is the controller for the <c>AssetRepair</c> report.
/// </summary>
public class AssetRepairController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Specifies the default parameter values before the report dialog is opened.
    /// </summary>
    protected void prePromptModifyContract()
    {
        AssetRepairContract contract;

        super();

        contract = this.parmReportContract().parmRdpContract() as AssetRepairContract;
        if (!contract.parmToDate())
        {
            contract.parmToDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the query range values based on parameter values specified by the user.
    /// </summary>
    protected void preRunModifyContract()
    {
        AssetRepairContract contract;
        AssetBookId bookId;
        FromDate fromDate;
        ToDate toDate;
        Query query;
        QueryBuildDataSource qbds;

        super();

        contract = this.parmReportContract().parmRdpContract() as AssetRepairContract;
        bookId = contract.parmBookId();
        fromDate = contract.parmFromDate();
        toDate = contract.parmToDate();

        query = this.getFirstQuery();
        qbds = query.dataSourceTable(tableNum(AssetBook));
        SysQuery::findOrCreateRange(qbds, fieldNum(AssetBook, BookId)).value(bookId);

        qbds = query.dataSourceTable(tableNum(LtAssetRepair));
        SysQuery::findOrCreateRange(qbds, fieldNum(LtAssetRepair, TransDate)).value(queryRange(fromDate, toDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceLT00001, funcName());

        AssetRepairController controller = new AssetRepairController();
        controller.parmArgs(_args);
        controller.parmReportName(ssrsReportStr(AssetRepair, Report));
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>