<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleProduction</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class NumberSeqModuleProduction extends NumberSeqApplicationModule
{
    boolean         sameAsChecked;
    boolean         sameAsActive;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        /* Setup production number */

        datatype.parmDatatypeId(extendedtypenum(ProdId));
        datatype.parmReferenceHelp(literalstr("@SYS53760"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup journal number */

        datatype.parmDatatypeId(extendedtypenum(ProdJournalId));
        datatype.parmReferenceHelp(literalstr("@SYS53762"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup journal voucher */

        datatype.parmDatatypeId(extendedtypenum(ProdJournalVoucherId));
        datatype.parmReferenceHelp(literalstr("@SYS53763"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(3);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup job number */
        if (!FeatureStateProvider::isFeatureEnabled(ProductionAndShopFloorJobIdNumberSeqFeature::instance()))
        {
            datatype.parmDatatypeId(extendedtypenum(ProdJobId));

            datatype.parmReferenceHelp(literalstr("@SYS53764"));
            datatype.parmWizardIsContinuous(false);
            datatype.parmWizardfetchAheadQty(10);
            datatype.parmWizardIsManual(NoYes::No);
            datatype.parmWizardIsChangeDownAllowed(NoYes::No);
            datatype.parmWizardIsChangeUpAllowed(NoYes::No);
            datatype.parmSortField(4);

            datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
            this.create(datatype);
        }

        /* Setup calculation voucher */
        datatype.parmDatatypeId(extendedtypenum(ProdCalcVoucherId));
        datatype.parmReferenceHelp(literalstr("@SYS53766"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(14000);
        datatype.parmWizardHighest(15999);
        datatype.parmSortField(5);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(KanbanId));
        datatype.parmConfigurationKeyId(configurationkeynum(LeanManufacturing));
        datatype.parmReferenceHelp(literalstr("@SYS131953"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(999999);

        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(LeanReplenishmentRuleId));
        datatype.parmConfigurationKeyId(configurationkeynum(LeanManufacturing));
        datatype.parmReferenceHelp(literalstr("@SYS133810"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);

        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(KanbanCardId));
        datatype.parmConfigurationKeyId(configurationkeynum(LeanManufacturing));
        datatype.parmReferenceHelp(literalstr("@SYS133811"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);

        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(PlanActivityId));
        datatype.parmConfigurationKeyId(configurationkeynum(LeanManufacturing));
        datatype.parmReferenceHelp(literalstr("@SYS103724"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);

        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(LeanDocumentReceiptAdviceId));
        datatype.parmConfigurationKeyId(configurationkeynum(LeanManufacturing));
        datatype.parmReferenceHelp(literalstr("@SYS28221"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);

        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(PmfProcessBatchId));
        datatype.parmReferenceHelp(literalstr("@PRO105"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(6);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(PmfConsOrdId));
        datatype.parmReferenceHelp(literalstr("@PRO2471"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(7);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Prod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sameAsActive</Name>
				<Source><![CDATA[
    public boolean sameAsActive()
    {
        NumberSequenceDatatype  numberSequenceDatatype;
        TmpIdRef                tmpIdRef;

        if (sameAsChecked)
            return sameAsActive;

        tmpIdRef.setTmpData(NumberSeqApplicationModule::configurationKeyTableMulti(
            [NumberSeqModule::Invent,NumberSeqModule::BOM,NumberSeqModule::WMS,NumberSeqModule::RFID]));

        select firstonly RecId from numberSequenceDatatype
        where
            (numberSequenceDatatype.Module == NumberSeqModule::Prod) &&
            numberSequenceDatatype.DataTypeSameAsId  != 0
            exists join tmpIdRef where tmpIdRef.Id == numberSequenceDatatype.ConfigurationKeyId;

        sameAsActive    = numberSequenceDatatype.RecId ? true : false;
        sameAsChecked   = true;

        return sameAsActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    /// <param name = "numberSeqModuleNamesMap">The map to add the <c>NumberSeqModule::Prod</c> number sequence module to.</param>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal, buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleProduction), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>