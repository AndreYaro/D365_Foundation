<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsCWInventOnhandDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PdsCWInventOnhandDP</c> class is the report data provider class for the
/// <c>PdsCWInventOnhand</c> report.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(InventOnhand)),
    SRSReportParameterAttribute(classStr(InventDimViewContract))
]
class PdsCWInventOnhandDP extends SRSReportDataProviderBase
{
    InventOnhandTmp inventOnhandTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventOnhandTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data from the <c>InventOnhandTmp</c> temporary table.
    /// </summary>
    /// <returns>
    /// The data from the <c>InventOnhandTmp</c> temporary table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(InventOnhandTmp))
    ]
    public InventOnhandTmp getInventOnhandTmp()
    {
        select  inventOnhandTmp;

        return  inventOnhandTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTmpTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method inserts data into the temporary table.
    /// </summary>
    /// <param name="_inventSum">
    /// The table buffer of the <c>InventSum</c> table.
    /// </param>
    /// <param name="_inventDim">
    /// The table buffer of the <c>Inventdim</c> table.
    /// </param>
    private void insertTmpTable(InventSum _inventSum, InventDim _inventDim)
    {
        inventOnhandTmp.InventDimFieldsMap::initAllDimensionsFrom(_inventDim);
        inventOnhandTmp.ItemId                  = _inventSum.ItemId;

        inventOnhandTmp.PdsCWAvailOrdered       = _inventSum.PdsCWAvailOrdered;
        inventOnhandTmp.PdsCWAvailPhysical      = _inventSum.PdsCWAvailPhysical;
        inventOnhandTmp.PdsCWDeducted           = _inventSum.PdsCWDeducted;
        inventOnhandTmp.PdsCWOrdered            = _inventSum.PdsCWOrdered;
        inventOnhandTmp.PdsCWPostedQty          = _inventSum.PdsCWPostedQty;
        inventOnhandTmp.PdsCWReceived           = _inventSum.PdsCWReceived;
        inventOnhandTmp.PdsCWReservOrdered      = _inventSum.PdsCWReservOrdered;
        inventOnhandTmp.PdsCWReservPhysical     = _inventSum.PdsCWReservPhysical;
        inventOnhandTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    /// <remarks>
    /// Provides the ability to write the report business logic. This method will be called by
    /// SSRS at runtime. The method should compute data and populate the data tables that will be
    /// returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        QueryRun                    queryRun;
        Query                       query;
        InventSum                   inventSum;
        InventDim                   inventDim;
        InventDimViewContract       dimContract;
        InventTable                 inventTable;
        InventDimParm               inventDimParmCriteria;
        InventDimParm               inventDimParm;

        dimContract = this.parmDataContract() as InventDimViewContract;

        inventDimParm = dimContract.parmInventDimParm();
        inventDimParm.ItemIdFlag            = NoYes::Yes;

        inventDimParmCriteria.ClosedFlag    = NoYes::No;

        query       = InventSum::newQuery(this.parmQuery(), '', null, inventDimParmCriteria, inventDimParm);
        queryRun    = new QueryRun(query);

        while (queryRun.next())
        {
            inventSum = queryRun.get(tableNum(InventSum));
            inventTable = InventTable::find(inventSum.ItemId);

            if (inventTable.inventItemType().mustInventBeControlled())
            {
                inventDim = queryRun.get(tableNum(InventDim));
            }

            if (   !inventTable.inventItemType().isServiceItem()
                && inventTable.pdsCWItem())
            {
                this.insertTmpTable(inventSum, inventDim);
                inventDim.clear();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>