<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>tamPromoStatistic</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>TAMPromoStatistic</c> calculates
/// trade agreement promotion statistics.
/// </summary>
class tamPromoStatistic
{
    TmpProjStatistic        tmpProjStatistic;
    TmpMCRPromotionStatistic tmpPromotionStatistic;

    ProjStatistic           projStatistic;
    projStatisticCalc       projStatisticCalc;

    smmCampaignId           smmCampaignId;
    smmCampaignTable        smmCampaignTable;
    MCRSourceID             mcrSourceId;
    MCRSourceCodeSetup      mcrSourceCodeSetup;

    ProjId                  projId;
    ProjActualBudget        actualBudget;
    ItemId                  itemId;
    boolean                 childPromo;
    boolean                 actual;
    ProjTransIdBase         transId;

    boolean                 promoSO;
    boolean                 promoCosts;

    boolean                 fixedPrice;
    boolean                 timeMaterial;
    boolean                 internalCost;
    boolean                 investment;
    boolean                 time;

    boolean                 hour;
    boolean                 expenses;
    boolean                 revenue;
    boolean                 onAcc;
    boolean                 item;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the statistics for the trade agreement.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// Error thrown when new <c>TAMPromotionStatistics</c> fails validation.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void calc()
    {
        if (projId)
        {
            // Calculate project statistics.
            projStatisticCalc = new projStatisticCalc(this.TmpProjStatistic());
            projStatisticCalc.parmProjStatisticCon(this.projStatistic().pack());
            projStatisticCalc.parmTransId(this.parmTransId());
            projStatisticCalc.parmActualBudget(this.parmActualBudget());

            projStatisticCalc.run();

            tmpProjStatistic = projStatisticCalc.tmpProjStatistic();

            tmpPromotionStatistic.initFromProjStatistics(tmpProjStatistic);
        }
        else
        {
            projStatisticCalc = null;
        }

        if (this.parmPromoSO())
        {
            // Calculate campaign/source revenue.
            tmpPromotionStatistic.plPromoRevenue = this.promoRevenue();
            // Calculate campaign/source returns.
            tmpPromotionStatistic.plPromoReturnRevenue = this.promoReturns();
        }

        if (this.parmPromoCosts())
        {
            // calculate campaign/source costs
            tmpPromotionStatistic.plCostPromo = this.promoCost();
        }

        this.calcTotals();

        tmpPromotionStatistic.TransId = this.parmTransId();

        if (tmpPromotionStatistic.validateWrite())
        {
            tmpPromotionStatistic.insert();
        }
        else
        {
            throw error("@SYS104318");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotals</Name>
				<Source><![CDATA[
        private void calcTotals()
    {
        tmpPromotionStatistic.plTotalRevenue = tmpPromotionStatistic.plProjectRevenue +
                                                tmpPromotionStatistic.plPromoRevenue -
                                                tmpPromotionStatistic.plPromoReturnRevenue;

        tmpPromotionStatistic.plCostTotalCost = tmpPromotionStatistic.plCostPromo +
                                                 tmpPromotionStatistic.plCostAccCost +
                                                 tmpPromotionStatistic.plCostExpenses +
                                                 tmpPromotionStatistic.plCostHour +
                                                 tmpPromotionStatistic.plCostItem;

        tmpPromotionStatistic.plTotalGrossMargin = tmpPromotionStatistic.plTotalRevenue -
                                                    tmpPromotionStatistic.plCostTotalCost;

        if (tmpPromotionStatistic.plTotalRevenue)
        {
            tmpPromotionStatistic.ContributionRatio = 100 * (tmpPromotionStatistic.plTotalGrossMargin/
                                                              tmpPromotionStatistic.plTotalRevenue);
        }
        else
        {
            tmpPromotionStatistic.ContributionRatio = 0;
        }

        tmpPromotionStatistic.PromoOrderCount = this.promoOrderCount();

        tmpPromotionStatistic.PromoFirstOrderDate = this.promoFirstOrderDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new <c>TAMPromoStatistics</c> object.
    /// </summary>
    /// <param name="_tmpPromotionStatistic">
    /// A temporary table buffer used to initialize the new object.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(TmpMCRPromotionStatistic _tmpPromotionStatistic)
    {
        tmpPromotionStatistic.setTmpData(_tmpPromotionStatistic);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActual</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmActual(boolean _actual = actual)
    {
        actual = _actual;

        return actual;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActualBudget</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public ProjActualBudget parmActualBudget(ProjActualBudget _actualBudget = actualBudget)
    {
        actualBudget = _actualBudget;
        return actualBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCampaignId</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public smmCampaignId parmCampaignId(smmCampaignId _smmCampaignId = smmCampaignId)
    {
        smmCampaignId  = _smmCampaignId;

        smmCampaignTable = smmCampaignTable::find(smmCampaignId);

        return smmCampaignId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChildPromo</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmChildPromo(boolean _childPromo = childPromo)
    {
        childPromo = _childPromo;

        return childPromo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExpenses</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmExpenses(boolean _expenses = expenses)
    {
        expenses = _expenses;

        return expenses;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedPrice</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmFixedPrice(boolean _fixedPrice = fixedPrice)
    {
        fixedPrice = _fixedPrice;

        return fixedPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHour</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmHour(boolean _hour = hour)
    {
        hour = _hour;

        return hour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInternalCost</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmInternalCost(boolean _internalCost = internalCost)
    {
        internalCost = _internalCost;

        return internalCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvestment</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmInvestment(boolean _investment = investment)
    {
        investment = _investment;

        return investment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItem</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmItem(boolean _item = item)
    {
        item = _item;

        return item;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmitemId</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public ItemId parmitemId(ItemId _itemId = itemId)
    {
        itemId  = _itemId;
        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnAcc</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmOnAcc(boolean _onAcc = onAcc)
    {
        onAcc = _onAcc;

        return onAcc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public ProjId parmProjId(ProjId _projId = projId)
    {
        projId  = _projId;
        return projId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPromoCosts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the promotion costs for the source codes tied to a
    /// campaign which are tied to the project.
    /// </summary>
    /// <param name="_promoCosts">
    /// The promotion costs to set.
    /// </param>
    /// <returns>
    /// The promotion costs to set.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmPromoCosts(boolean _promoCosts = promoCosts)
    {
        promoCosts = _promoCosts;

        return promoCosts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPromoSO</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the revenue for sales orders generated for a
    /// campaign which are tied to the project.
    /// </summary>
    /// <param name="_promoSO">
    /// The revenue to set for sales orders.
    /// </param>
    /// <returns>
    /// The revenue to set for sales orders.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmPromoSO(boolean _promoSO = promoSO)
    {
        promoSO = _promoSO;

        return promoSO;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRevenue</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmRevenue(boolean _revenue = revenue)
    {
        revenue = _revenue;

        return revenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceId</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public MCRSourceID parmSourceId(MCRSourceID _mcrSourceId = mcrSourceId)
    {
        mcrSourceId  = _mcrSourceId;

        mcrSourceCodeSetup = MCRSourceCodeSetup::find(mcrSourceId);

        return mcrSourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTime</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmTime(boolean _time = time)
    {
        time = _time;

        return time;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeMaterial</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmTimeMaterial(boolean _timeMaterial = timeMaterial)
    {
        timeMaterial = _timeMaterial;

        return timeMaterial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransId</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public ProjTransIdBase parmTransId(
        ProjTransIdBase _transId    = transId)
    {
        transId = _transId;

        return transId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projStatistic</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates statistics for the current project.
    /// </summary>
    /// <returns>
    /// A new <c>ProjStatistics</c> object.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProjStatistic projStatistic()
    {
        projStatistic   = new ProjStatistic();

        projStatistic.parmFixedPrice(this.parmFixedPrice());
        projStatistic.parmTimeMaterial(this.parmTimeMaterial());
        projStatistic.parmInternalCost(this.parmInternalCost());
        projStatistic.parmInvestment(this.parmInvestment());
        projStatistic.parmTime(this.parmTime());

        projStatistic.parmHour(this.parmHour());
        projStatistic.parmExpenses(this.parmExpenses());
        projStatistic.parmItem(this.parmItem());
        projStatistic.parmRevenue(this.parmRevenue());
        projStatistic.parmOnAcc(this.parmOnAcc());

        projStatistic.parmProjId(projId);
        projStatistic.parmProjTree(this.parmChildPromo());

        projStatistic.parmActualBudget(this.parmActualBudget());

        projStatistic.parmActual(this.parmActual());

        return projStatistic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promoCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cost for the promotion by source code.
    /// </summary>
    /// <returns>
    /// The cost for the promotion by source code.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    AmountMST promoCost()
    {
        AmountMST promoCost;
        if (mcrSourceCodeSetup.RecId != 0 && !childPromo)
        {
            // Calc promotion revenue for source code.
            promoCost = mcrSourceCodeSetup.sourceCosts(actual);
        }
        else // Calculate promotion returns for campaign & its children.
        {
            promoCost = smmCampaignTable.mcrCampaignCosts(actual);
        }

        return promoCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promoFirstOrderDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the first order date for the promotion either by source code
    /// or by <c>CampaignId</c> value.
    /// </summary>
    /// <returns>
    /// The first order date for the promotion.
    /// </returns>
    /// <remarks>
    /// Depends on whether the form was called from sourcing or campaigns.
    /// If called by sourcing it retrieves stats only for the source code
    /// past, otherwise, it will compute for the campaing past
    /// and all of its children.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    FromDate promoFirstOrderDate()
    {
        FromDate firstOrderDate;
        if (mcrSourceCodeSetup.RecId != 0 && !childPromo)
        {
            firstOrderDate = mcrSourceCodeSetup.sourceFirstOrderDate(actual);
        }
        else
        {
            // Get all children and parents # of orders.
            firstOrderDate = smmCampaignTable.mcrCampaignFirstOrderDate();
        }

        return firstOrderDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promoOrderCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of orders for the promotion either by source code
    /// or by <c>CampaignId</c> value.
    /// </summary>
    /// <returns>
    /// The number of orders for the promotion.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    Counter promoOrderCount()
    {
        Counter numOfOrders;
        if (mcrSourceCodeSetup.RecId != 0 && !childPromo)
        {
            numOfOrders = mcrSourceCodeSetup.sourceNumOfOrders(actual);
        }
        else
        {
            numOfOrders = smmCampaignTable.mcrCampaignNumOfOrders();
        }

        return numOfOrders;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promoReturns</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the revenue for the promotion either by source code
    /// or by <c>CampaignId</c> value.
    /// </summary>
    /// <returns>
    /// The revenue for the promotion.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    AmountMST promoReturns()
    {
        AmountMST promoReturns;
        if (mcrSourceCodeSetup.RecId != 0 && !childPromo)
        {
            // Calc promotion revenue for source code.
            promoReturns = abs(mcrSourceCodeSetup.sourceReturns(actual));
        }
        // Calculate promotion returns for campaign & its children.
        else
        {
            promoReturns = smmCampaignTable.mcrCampaignReturns(actual);
        }

        return promoReturns;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promoRevenue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the revenue for the promotion either by source code
    /// or by <c>CampaignId</c> value.
    /// </summary>
    /// <returns>
    /// The revenue for the promotion.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    AmountMST promoRevenue()
    {
        AmountMST promoRevenue;
        if (mcrSourceCodeSetup.RecId != 0 && !childPromo)
        {
            // Calc promotion revenue for source code.
            promoRevenue = mcrSourceCodeSetup.sourceRevenue(actual);
        }
        // Calculate promotion revenue for campaign & its children.
        else
        {
            promoRevenue = smmCampaignTable.mcrCampaignRevenue(actual);
        }

        return promoRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmpMCRPromotionStatistic</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the <c>TmpMCRPromotionStatistic</c> class variable.
    /// </summary>
    /// <param name="_tmpPromotionStatistic">
    /// Temporary table buffer that sets the class variable; optional.
    /// </param>
    /// <returns>
    /// The <c>TmpMCRPromotionStatistic</c> class variable.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpMCRPromotionStatistic tmpMCRPromotionStatistic(TmpMCRPromotionStatistic _tmpPromotionStatistic = tmpPromotionStatistic)
    {
        tmpPromotionStatistic = _tmpPromotionStatistic;

        return tmpPromotionStatistic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmpProjStatistic</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the <c>TmpProjStatistic</c> class variable.
    /// </summary>
    /// <param name="_tmpProjStatistic">
    /// Temporary table buffer that sets the class variable; optional.
    /// </param>
    /// <returns>
    /// The <c>TmpProjStatistic</c> class variable.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpProjStatistic tmpProjStatistic(TmpProjStatistic _tmpProjStatistic = tmpProjStatistic)
    {
        tmpProjStatistic = _tmpProjStatistic;

        return tmpProjStatistic;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>