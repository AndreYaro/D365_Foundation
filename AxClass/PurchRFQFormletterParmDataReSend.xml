<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQFormletterParmDataReSend</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchRFQFormletterParmDataReSend extends PurchRFQFormletterParmData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doCreateParmLine</Name>
				<Source><![CDATA[
    protected boolean doCreateParmLine(PurchRFQParmLine _newPurchRFQParmLine, PurchRFQReplyLine _purchRFQReplyLine)
    {
        if (this.parmMultiSelectRequired())
        {
            return super(_newPurchRFQParmLine, _purchRFQReplyLine);
        }
        else
        {
            // We always want Alicia to be able to return lines.
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mayJournalBePosted</Name>
				<Source><![CDATA[
    public boolean mayJournalBePosted(Common _purchRFQTable)
    {
        PurchRFQTable tmpPurchRFQTable = _purchRFQTable as PurchRFQTable;
        boolean ret = super(_purchRFQTable);

        if (!this.parmMultiSelectRequired() && 
            (tmpPurchRFQTable.StatusLow == PurchRFQStatus::Accepted ||
            tmpPurchRFQTable.StatusLow == PurchRFQStatus::Rejected))
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceTable</Name>
				<Source><![CDATA[
    public Common parmSourceTable(Common _purchRFQTable = purchRFQTable)
    {
        purchRFQTable = _purchRFQTable as PurchRFQTable;
        return purchRFQTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQueryBuild</Name>
				<Source><![CDATA[
    public void updateQueryBuild()
    {
        QueryBuildDataSource qbds;
        QueryBuildRange      qbr;
        super();

        qbds = chooseLines.query().dataSourceTable(tablenum(PurchRFQLine));
        qbr  = qbds.addRange(fieldnum(PurchRFQLine, Status));
        qbr.value(SysQuery::value(PurchRFQStatus::Received));
        qbr.status(RangeStatus::Locked);

        // Filter out lines that have been added by the procurement agent to the RFQ reply.
        qbds.addRange(fieldnum(PurchRFQLine, RFQCaseLineLineNumber)).value(">0");
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PurchRFQFormletterParmDataReSend construct()
    {
        return new PurchRFQFormletterParmDataReSend();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>