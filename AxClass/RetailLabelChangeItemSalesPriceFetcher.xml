<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailLabelChangeItemSalesPriceFetcher</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Fetches source data based on item default sales price.
/// </summary>
/// <remarks>
/// Iterates all Item + Variant combinations that are container in relevant assortment and contained in the given product category.
/// </remarks>
class RetailLabelChangeItemSalesPriceFetcher extends RetailLabelChangeDataFetcherBase
{
    InventTableModule inventTableModuleSales;
    InventDimCombination inventDimCombination;

    FromDate fromDate;
    ToDate toDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createSourceSpecificQuery</Name>
				<Source><![CDATA[
    protected Query createSourceSpecificQuery()
    {
        Query query = new Query();
        QueryBuildDataSource qbds;
        QueryBuildFieldList qbfl;

        // InventTableModule (Sales)
        qbds = query.addDataSource(tableNum(InventTableModule));
        qbfl = qbds.fields();
        qbfl.clearFieldList();
        qbfl.addField(fieldNum(InventTableModule, ItemId), SelectionField::Database);
        qbds.addRange(fieldNum(InventTableModule, ModuleType)).value(queryValue(ModuleInventPurchSales::Sales));
        if (fromDate && toDate)
        {
            qbds.addRange(fieldNum(InventTableModule, PriceDate)).value(SysQuery::range(fromDate, toDate));
        }

        return query;
    }
]]></Source>
			</Method>
			<Method>
				<Name>fetchInventDimCombination</Name>
				<Source><![CDATA[
    private boolean fetchInventDimCombination()
    {
        if (!inventDimCombination)
        {
            select RetailVariantId, InventDimId from inventDimCombination
                group by RetailVariantId
                where inventDimCombination.ItemId == inventTableModuleSales.ItemId;
        }
        else
        {
            next inventDimCombination;
        }

        return inventDimCombination ? true : false;
    }
]]></Source>
			</Method>
			<Method>
				<Name>fetchLine</Name>
				<Source><![CDATA[
    protected boolean fetchLine()
    {
        boolean inventTableModuleFetched = inventTableModuleSales ? true : false;
        boolean ret = false;

        if (inventTableModuleFetched)
        {
            ret = this.fetchInventDimCombination();
        }

        if (!ret)
        {
            ret = super();
            if (ret)
            {
                inventTableModuleSales = qr.get(tableNum(InventTableModule));
                this.resetInventDimCombinationFetch();
                this.fetchInventDimCombination(); // We don't want to check the result here as this fetch is optional
            }
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>getItemVariantId</Name>
				<Source><![CDATA[
    protected container getItemVariantId()
    {
        return [inventTableModuleSales.ItemId, inventDimCombination.RetailVariantId];
    }
]]></Source>
			</Method>
			<Method>
				<Name>itemFieldId</Name>
				<Source><![CDATA[
    protected FieldId itemFieldId()
    {
        return fieldNum(InventTableModule, itemId);
    }
]]></Source>
			</Method>
			<Method>
				<Name>itemTableId</Name>
				<Source><![CDATA[
    protected TableId itemTableId()
    {
        return tableNum(InventTableModule);
    }
]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(fromDate _fromDate, ToDate _toDate, PriceDate _priceDate, RefRecId _hierarchyRecId, OMOperatingUnitRefRecId _operatingUnitId, EcoResCategoryId _categoryId, RetailItemQtyFilter _itemQtyFilter, NoYes _initWithQtyOnHand)
    {
        fromDate = _fromDate;
        toDate = _toDate;
        super(_priceDate, _hierarchyRecId, _operatingUnitId, _categoryId, _itemQtyFilter, _initWithQtyOnHand);
    }
]]></Source>
			</Method>
			<Method>
				<Name>productFieldId</Name>
				<Source><![CDATA[
    protected FieldId productFieldId()
    {
        return 0;
    }
]]></Source>
			</Method>
			<Method>
				<Name>productTableId</Name>
				<Source><![CDATA[
    protected TableId productTableId()
    {
        return 0;
    }
]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    public void reset()
    {
        super();
        this.resetInventDimCombinationFetch();
    }
]]></Source>
			</Method>
			<Method>
				<Name>resetInventDimCombinationFetch</Name>
				<Source><![CDATA[
    private void resetInventDimCombinationFetch()
    {
        inventDimCombination = null;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>