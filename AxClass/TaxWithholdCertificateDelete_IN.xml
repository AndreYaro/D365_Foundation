<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdCertificateDelete_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used to delete Withhold tax certificate .
/// </summary>
public final class TaxWithholdCertificateDelete_IN extends RunBase
{
    TaxWithholdCertificateNumber_IN     fromCertificate;
    TaxWithholdCertificateNumber_IN     toCertificate;
    TaxWithholdComponentGroupRecId_IN   componentGroup;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the certificate documents between from and to certificate..
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void deleteRecords()
    {
        TaxWithholdCertificatesTable_IN     taxWithholdCertificatesTableLoc,
                                            fromTaxWithholdCertificatesTable,
                                            toTaxWithholdCertificatesTable;

        fromTaxWithholdCertificatesTable  = TaxWithholdCertificatesTable_IN::findByComponentGrpCertNumber(componentGroup,
                                                                                                          fromCertificate);

        toTaxWithholdCertificatesTable    = TaxWithholdCertificatesTable_IN::findByComponentGrpCertNumber(componentGroup,
                                                                                                          toCertificate);

        if (fromTaxWithholdCertificatesTable.Prefix == toTaxWithholdCertificatesTable.Prefix)
        {
            select firstonly taxWithholdCertificatesTableLoc
                where taxWithholdCertificatesTableLoc.TaxWithholdComponentGroup == componentGroup
                   && taxWithholdCertificatesTableLoc.StartNum                  >= fromTaxWithholdCertificatesTable.StartNum
                   && taxWithholdCertificatesTableLoc.StartNum                  <= toTaxWithholdCertificatesTable.StartNum
                   && taxWithholdCertificatesTableLoc.Prefix                    == fromTaxWithholdCertificatesTable.Prefix
                   && taxWithholdCertificatesTableLoc.Status                    != TaxWithholdStatus_IN::Created;

            if (taxWithholdCertificatesTableLoc)
            {
                throw error(strfmt("@GLS5455", "@GLS5475", "@SYS3012"));
            }

            delete_from taxWithholdCertificatesTableLoc
                where taxWithholdCertificatesTableLoc.TaxWithholdComponentGroup == componentGroup
                   && taxWithholdCertificatesTableLoc.StartNum                  >= fromTaxWithholdCertificatesTable.StartNum
                   && taxWithholdCertificatesTableLoc.StartNum                  <= toTaxWithholdCertificatesTable.StartNum
                   && taxWithholdCertificatesTableLoc.Prefix                    == fromTaxWithholdCertificatesTable.Prefix
                   && taxWithholdCertificatesTableLoc.Status                    == TaxWithholdStatus_IN::Created;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates  and initializes instance of  <c>TaxWithholdCertificateDelete_IN </c>
    /// </summary>
    /// <returns>
    /// An instance of <c>TaxWithholdCertificateDelete_IN </c> form
    /// </returns>
    public Object dialog()
    {
        Args     args = new  Args();
        FormRun  taxWithholdCertificateDelete;

        args.name(formstr(TaxWithholdCertificateDelete_IN));
        args.caller(this);

        taxWithholdCertificateDelete = classfactory.formRunClass(args);

        taxWithholdCertificateDelete.init();

        return taxWithholdCertificateDelete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromCertificate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxWithholdCertificateNumber_IN parmFromCertificate(TaxWithholdCertificateNumber_IN _fromCertificate = fromCertificate)
    {
        fromCertificate = _fromCertificate;
        return fromCertificate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdComponentGroup</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxWithholdComponentGroupRecId_IN parmTaxWithholdComponentGroup(TaxWithholdComponentGroupRecId_IN _componentGroup = componentGroup)
    {
        componentGroup = _componentGroup;
        return componentGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToCertificate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxWithholdCertificateNumber_IN parmToCertificate(TaxWithholdCertificateNumber_IN _toCertificate = toCertificate)
    {
        toCertificate = _toCertificate;
        return toCertificate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        TaxWithholdCertificateDelete_IN    certificateDelete;

        switch (args.dataset())
        {
            case tablenum(TaxWithholdComponentGroupTable_IN) :
                certificateDelete = TaxWithholdCertificateDelete_IN::newCertificateDelete(args.record());
                break;
        }
        if (certificateDelete.prompt())
        {
            certificateDelete.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCertificateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Intializes the  to parm() methods .
    /// </summary>
    /// <param name="_componentGroupTable">
    /// Withhold tax component group.
    /// </param>
    /// <returns>
    /// Instance of <c> TaxWithholdCertificateDelete_IN </c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxWithholdCertificateDelete_IN newCertificateDelete(TaxWithholdComponentGroupTable_IN _componentGroupTable)
    {
        TaxWithholdCertificateDelete_IN     taxWithholdCertificateDeleteLoc;

        taxWithholdCertificateDeleteLoc = new TaxWithholdCertificateDelete_IN();
        taxWithholdCertificateDeleteLoc.getLast();

        taxWithholdCertificateDeleteLoc.parmTaxWithholdComponentGroup(_componentGroupTable.RecId);
        taxWithholdCertificateDeleteLoc.parmFromCertificate();
        taxWithholdCertificateDeleteLoc.parmToCertificate();

        return taxWithholdCertificateDeleteLoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>