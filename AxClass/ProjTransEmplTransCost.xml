<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTransEmplTransCost</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjTransEmplTransCost extends ProjTransEmplTrans
{
    ProjEmplTransCost   projEmplTransCost;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>costPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the cost price for a transaction.
    /// </summary>
    /// <returns>
    /// The cost price for this transaction.
    /// </returns>
    public CostPrice costPrice()
    {
        return projEmplTransCost.CostPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
        public DimensionDefault defaultDimension()
    {
        return  projEmplTransCost.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fundingSource</Name>
				<Source><![CDATA[
        public ProjFundingSourceRefId fundingSource()
    {
        return projEmplTransCost.FundingSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerStatusCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ledger status for the transaction.
    /// </summary>
    /// <returns>
    /// Always returns <c>ProjLedgerStatus::None</c>.
    /// </returns>
    /// <remarks>
    /// This method should be overridden by classes that extend this class to provide the necessary
    /// functionality for the specific transaction.
    /// </remarks>
    public ProjLedgerStatus ledgerStatusCost()
    {
        return projEmplTransCost.LedgerStatusCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(ProjEmplTrans _projEmplTrans, ProjEmplTransCost _projEmplTransCost)
    {
        projEmplTransCost = _projEmplTransCost;

        super(_projEmplTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recId</Name>
				<Source><![CDATA[
        public RecId recId()
    {
        return projEmplTransCost.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the table ID for this transaction.
    /// </summary>
    /// <returns>
    /// The table ID for this transaction.
    /// </returns>
    public TableId tableId()
    {
        return tableName2id(tableStr(ProjEmplTransCost));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total cost of this transaction in the transaction currency.
    /// </summary>
    /// <returns>
    /// The total cost of this transaction.
    /// </returns>
    public Amount transCost()
    {
        return projEmplTransCost.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transStatus</Name>
				<Source><![CDATA[
        public ProjTransStatus transStatus()
    {
        return projEmplTransCost.TransStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTurnover</Name>
				<Source><![CDATA[
        public AmountCur transTurnover()
    {
        return 0.00;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wipPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the start date of the estimate period for this transaction.
    /// </summary>
    /// <returns>
    /// A null date.
    /// </returns>
    /// <remarks>
    /// This method should be overridden by classes that extend this class to provide the necessary
    /// functionality for the specific transaction.
    /// </remarks>
    public ProjPeriodFromWIP wipPeriod()
    {
        return projEmplTransCost.wipPeriod;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>