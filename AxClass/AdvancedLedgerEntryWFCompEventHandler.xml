<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AdvancedLedgerEntryWFCompEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AdvancedLedgerEntryWFCompEventHandler</c> class is used to handle events related to the workflow task.
/// </summary>
class AdvancedLedgerEntryWFCompEventHandler implements
    WorkflowElementCompletedEventHandler,
    WorkflowElementCanceledEventHandler,
    WorkflowElementReturnedEventHandler,
    WorkflowElemChangeRequestedEventHandler,
    WorkflowElementStartedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>WorkflowApprovalState</c> field on the <c>AdvancedLedgerEntryHeader</c> table to the
    ///    <c>AdvancedLedgerEntryWFApprovalState::NotSubmitted</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    ///    This method is called from the workflow framework when the complete task is canceled.
    /// </remarks>
    public void canceled(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        AdvancedLedgerEntryHeader::setWorkflowState(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            AdvancedLedgerEntryWFApprovalState::NotSubmitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeRequested</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>WorkflowApprovalState</c> field on the <c>AdvancedLedgerEntryHeader</c> table to the
    ///    <c>AdvancedLedgerEntryWFApprovalState::ChangeRequested</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    ///    This method is called from the workflow framework when the complete task is change requested.
    /// </remarks>
    public void changeRequested(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        AdvancedLedgerEntryHeader::setWorkflowState(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            AdvancedLedgerEntryWFApprovalState::ChangeRequested);
    }

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>WorkflowApprovalState</c> fields on the <c>AdvancedLedgerEntryHeader</c> table to the
    ///    <c>AdvancedLedgerEntryWFApprovalState::Completed</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    ///    This method is called from the workflow framework when the complete task is completed.
    /// </remarks>
    public void completed(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        AdvancedLedgerEntryHeader::setWorkflowState(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            AdvancedLedgerEntryWFApprovalState::Completed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>WorkflowApprovalState</c> field on the <c>AdvancedLedgerEntryHeader</c> table to the
    ///    <c>AdvancedLedgerEntryWFApprovalState::Rejected</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    ///    This method is called from the workflow framework when the complete task is returned.
    /// </remarks>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        AdvancedLedgerEntryHeader::setWorkflowState(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            AdvancedLedgerEntryWFApprovalState::Returned);
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>WorkflowApprovalState</c> field on the <c>AdvancedLedgerEntryHeader</c> table to the
    ///    <c>AdvancedLedgerEntryWFApprovalState::PendingComplete</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    /// <remarks>
    ///    This method is called from the workflow framework when the complete task is started.
    /// </remarks>
    public void started(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        AdvancedLedgerEntryHeader::setWorkflowState(
            _workflowElementEventArgs.parmWorkflowContext().parmRecId(),
            AdvancedLedgerEntryWFApprovalState::PendingComplete);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>