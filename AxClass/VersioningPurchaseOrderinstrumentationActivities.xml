<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VersioningPurchaseOrderinstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class VersioningPurchaseOrderinstrumentationActivities
{
    private const str ActivityNamePrefix = 'VersioningPurchaseOrder.';
    private const str ActivityNamePrefix_PurchLineForeignTradeCategory = 'PurchLineForeignTradeCategory.';
    private const str PurchTableVersionRecId = 'PurchTableVersionRecId';
    private const str PreviousVersionValidTo = 'PreviousVersionValidTo';
    private const str PurchTableHistoryValidFrom = 'PurchTableHistoryValidFrom';
    private const str VendPaymSchedHistoryValidFrom = 'VendPaymSchedHistoryValidFrom';
    private const str MarkupTransHistoryValidFrom = 'MarkupTransHistoryValidFrom';
    private const str IsDeleted = 'IsDeleted';
    private const str IsModified = 'IsModified';
    private const str NGPCodesTable_FR = 'NGPCodesTable_FR';
    private const str PurchLineDataAreaId = 'PurchLineDataAreaId';
    private const str PurchLineInventTransId = 'PurchLineInventTransId';
    private const str UnitWeight = 'UnitWeight';
    private const str ItemCodeId = 'ItemCodeId';
    private const str OrigCountryRegionId = 'OrigCountryRegionId';
    private const str OrigStateId = 'OrigStateId';
    private PurchInstrumentationLogger logger;

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(PurchInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static VersioningPurchaseOrderinstrumentationActivities newFromLogger(PurchInstrumentationLogger _logger)
    {
        return new VersioningPurchaseOrderinstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>archivePurchTable</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext archivePurchTable(PurchTableVersionRecId _purchTableVersionRecId, ValidToDateTime _prevVersionValidTo, ValidFromDateTime _purchTableHistoryValidFrom, str _methodName)
    {
        SysInstrumentationActivity activity = logger.activity(_methodName);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.AddCustomProperty(ActivityNamePrefix + PurchTableVersionRecId, int642Str(_purchTableVersionRecId));
        activityContext.AddCustomProperty(ActivityNamePrefix + PreviousVersionValidTo, DateTimeUtil::toStr(_prevVersionValidTo));
        activityContext.AddCustomProperty(ActivityNamePrefix + PurchTableHistoryValidFrom, DateTimeUtil::toStr(_purchTableHistoryValidFrom));
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>archiveVendPaymSched</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext archiveVendPaymSched(PurchTableVersionRecId _purchTableVersionRecId, ValidToDateTime _prevVersionValidTo, ValidFromDateTime _vendPaymSchedHistoryValidFrom, str _methodName)
    {
        SysInstrumentationActivity activity = logger.activity(_methodName);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.AddCustomProperty(ActivityNamePrefix + PurchTableVersionRecId, int642Str(_purchTableVersionRecId));
        activityContext.AddCustomProperty(ActivityNamePrefix + PreviousVersionValidTo, DateTimeUtil::toStr(_prevVersionValidTo));
        activityContext.AddCustomProperty(ActivityNamePrefix + VendPaymSchedHistoryValidFrom, DateTimeUtil::toStr(_vendPaymSchedHistoryValidFrom));
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>archiveMarkupTrans</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext archiveMarkupTrans(PurchTableVersionRecId _purchTableVersionRecId, ValidToDateTime _prevVersionValidTo, ValidFromDateTime _markupTransHistoryValidFrom, str _methodName)
    {
        SysInstrumentationActivity activity = logger.activity(_methodName);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);
        activityContext.AddCustomProperty(ActivityNamePrefix + PurchTableVersionRecId, int642Str(_purchTableVersionRecId));
        activityContext.AddCustomProperty(ActivityNamePrefix + PreviousVersionValidTo, DateTimeUtil::toStr(_prevVersionValidTo));
        activityContext.AddCustomProperty(ActivityNamePrefix + MarkupTransHistoryValidFrom, DateTimeUtil::toStr(_markupTransHistoryValidFrom));
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePurchLineForeignTradeCategory</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updatePurchLineForeignTradeCategory(PurchLineForeignTradeCategory _purchLineForeignTradeCategory_Orig, 
                                                                                   PurchLineForeignTradeCategory _purchLineForeignTradeCategory,
                                                                                   str _methodName)
    {
        SysInstrumentationActivity activity = logger.activity(_methodName);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        if (_purchLineForeignTradeCategory_Orig.IsDeleted != _purchLineForeignTradeCategory.IsDeleted)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + IsDeleted, any2Str(_purchLineForeignTradeCategory_Orig.IsDeleted));
        }

        if (_purchLineForeignTradeCategory_Orig.IsModified != _purchLineForeignTradeCategory.IsModified)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + IsModified, any2Str(_purchLineForeignTradeCategory_Orig.IsModified));
        }

        if (_purchLineForeignTradeCategory_Orig.NGPCodesTable_FR != _purchLineForeignTradeCategory.NGPCodesTable_FR)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + NGPCodesTable_FR, any2Str(_purchLineForeignTradeCategory_Orig.NGPCodesTable_FR));
        }

        if (_purchLineForeignTradeCategory_Orig.PurchLineDataAreaId != _purchLineForeignTradeCategory.PurchLineDataAreaId)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + PurchLineDataAreaId, any2Str(_purchLineForeignTradeCategory_Orig.PurchLineDataAreaId));
        }

        if (_purchLineForeignTradeCategory_Orig.PurchLineInventTransId != _purchLineForeignTradeCategory.PurchLineInventTransId)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + PurchLineInventTransId, any2Str(_purchLineForeignTradeCategory_Orig.PurchLineInventTransId));
        }

        if (_purchLineForeignTradeCategory_Orig.UnitWeight != _purchLineForeignTradeCategory.UnitWeight)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + UnitWeight, any2Str(_purchLineForeignTradeCategory_Orig.UnitWeight));
        }

        if (_purchLineForeignTradeCategory_Orig.ItemCodeId != _purchLineForeignTradeCategory.ItemCodeId)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + ItemCodeId, any2Str(_purchLineForeignTradeCategory_Orig.ItemCodeId));
        }

        if (_purchLineForeignTradeCategory_Orig.OrigCountryRegionId != _purchLineForeignTradeCategory.OrigCountryRegionId)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + OrigCountryRegionId, any2Str(_purchLineForeignTradeCategory_Orig.OrigCountryRegionId));
        }

        if (_purchLineForeignTradeCategory_Orig.OrigStateId != _purchLineForeignTradeCategory.OrigStateId)
        {
            activityContext.AddCustomProperty(ActivityNamePrefix_PurchLineForeignTradeCategory + OrigStateId, any2Str(_purchLineForeignTradeCategory_Orig.OrigStateId));
        }

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>