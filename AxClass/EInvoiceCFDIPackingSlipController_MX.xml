<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceCFDIPackingSlipController_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
class EInvoiceCFDIPackingSlipController_MX extends EInvoiceControllerBase_MX implements BatchRetryable
{
    CustPackingSlipJour custPackingSlipJour;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getReportName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the report for the controller
    /// </summary>
    /// <returns>The name of the report to be generated.</returns>
    protected SRSCatalogItemName getReportName()
    {
        return ssrsReportStr(EInvoiceCFDIReport_MX, PackingSlipReport);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceJour</Name>
				<Source><![CDATA[
    protected Common getInvoiceJour()
    {
        return custPackingSlipJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the document type for the print management.
    /// </summary>
    /// <returns>A <c>PrintMgmtDocumentType</c> option.</returns>
    protected PrintMgmtDocumentType getPrintMgmtDocumentType()
    {
        return PrintMgmtDocumentType::SalesOrderPackingSlip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtReferencedTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the print management referenced table.
    /// </summary>
    /// <returns>A loaded record.</returns>
    protected Common getPrintMgmtReferencedTable()
    {
        Common printMgmtReferencedTable = custPackingSlipJour.salesTable();

        if (!printMgmtReferencedTable)
        {
            // The original SalesTable record no longer exists, so skip that Print Mgmt level
            // and start with the customer instead.
            printMgmtReferencedTable = CustTable::find(custPackingSlipJour.InvoiceAccount);
        }

        return printMgmtReferencedTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>first</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the first invoice to be printed in invoiceJour.
    /// </summary>
    /// <returns>True if there are one invoice and it was load.</returns>
    protected boolean first()
    {
        return journalList.first(custPackingSlipJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the next invoice to be printed in invoiceJour.
    /// </summary>
    /// <returns>True if there are one more invoice and it was load.</returns>
    protected boolean next()
    {
        return journalList.next(custPackingSlipJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceLanguageId</Name>
				<Source><![CDATA[
    protected LanguageId getInvoiceLanguageId()
    {
        return custPackingSlipJour.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCFDI</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines if the invoice to be printed is CFDI or CFD.
    /// </summary>
    /// <returns>True if the invoice is a CFDI, false if is CFD.</returns>
    protected boolean isCFDI()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the <c>EInvoiceReport_MX</c> SRS Report.
    /// </summary>
    /// <param name="_args">
    /// Args object.
    /// </param>
    public client static void main(Args _args)
    {
        EInvoiceControllerBase_MX controller = new EInvoiceCFDIPackingSlipController_MX();

        controller.initialize(_args);

        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>