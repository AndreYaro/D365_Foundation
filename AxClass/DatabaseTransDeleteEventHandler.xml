<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DatabaseTransDeleteEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DatabaseTransDeleteEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteTable</Name>
				<Source><![CDATA[
    private static void deleteTable(SysDictTable sysDictTable, SysDatabaseTransDelete inst)
    {
        inst.deleteTable(sysDictTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSpecTransTable</Name>
				<Source><![CDATA[
    private static void deleteSpecTransTable()
    {
        SpecTrans specTrans;

        specTrans.skipDatabaseLog(true);
        specTrans.skipDataMethods(true);
        specTrans.skipDeleteActions(false);

        delete_from specTrans
            where specTrans.SpecCompany == curext()
                || specTrans.RefCompany == curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleNonTransTable</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(SysDatabaseTransDelete), delegatestr(SysDatabaseTransDelete, handleNonTransTableDelegate))]
    static void handleNonTransTable(SysDictTable sysDictTable, SysDatabaseTransDelete inst)
    {
        switch (sysDictTable.id())
        {
            case tablenum(SalesTable):
            case tablenum(PurchTable):
            case tablenum(WMSPallet):
            case tablenum(CustInterestJour):
            case tablenum(CustCollectionLetterJour):
            case tablenum(ProjControlPeriodTable):
            case tablenum(ProjInvoiceJour):
            case tablenum(ProjJournalTable):
            case tablenum(PdsRebateTable):
            case tablenum(PdsBatchAttributes):
                DatabaseTransDeleteEventHandler::deleteTable(sysDictTable, inst);
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleTransTable</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(SysDatabaseTransDelete), delegatestr(SysDatabaseTransDelete, handleTransTableDelegate))]
    static void handleTransTable(SysDictTable sysDictTable, SysDatabaseTransDelete inst)
    {
        switch (sysDictTable.id())
        {
            case tablenum(CustCollectionLetterLine):
            case tablenum(InventDim):
            case tablenum(DocuRef):
            case tablenum(DirPartyRelationship) :

                break;
            default:
                DatabaseTransDeleteEventHandler::deleteTable(sysDictTable, inst);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleGlobalTransTable</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(SysDatabaseTransDelete), delegatestr(SysDatabaseTransDelete, handleGlobalTransTableDelegate))]
    static void handleGlobalTransTable(SysDictTable sysDictTable, SysDatabaseTransDelete inst)
    {
        switch (sysDictTable.id())
        {
            case tablenum(SpecTrans):
                DatabaseTransDeleteEventHandler::deleteSpecTransTable();
                break;
            case tableNum(GeneralJournalEntry):
                DatabaseTransDeleteEventHandler::deleteGeneralJournalEntryTable();
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteGeneralJournalEntryTable</Name>
				<Source><![CDATA[
    private static void deleteGeneralJournalEntryTable()
    {
        GeneralJournalEntry         journalEntry;
        GeneralJournalAccountEntry  accountEntry;
        ;
        journalEntry.skipDatabaseLog(true);
        journalEntry.skipDataMethods(true);
        journalEntry.skipDeleteActions(false);

        ttsBegin;
        delete_from accountEntry
        exists join journalEntry
            where accountEntry.GeneralJournalEntry == journalEntry.RecId &&
                  journalEntry.Ledger              == Ledger::current();

        delete_from journalEntry
            where journalEntry.Ledger == Ledger::current();

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>