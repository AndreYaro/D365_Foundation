<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRDefaultDimensions_SalesQuotationLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRDefaultDimensions_SalesQuotationLine</c> class finds and sets default dimensions for a <c>SalesQuotationLine</c>.
/// </summary>
class MCRDefaultDimensions_SalesQuotationLine extends MCRDefaultDimensions
{
    SalesQuotationLine      salesQuotationLine;
    MCRSalesQuotationLine   mcrSalesQuotationLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>determineDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the default dimensions based on which part of the hierarchy is being evaluated.
    /// </summary>
    /// <param name="_mcrItemOrCustOrCatalog">
    /// Specifies whether finding dimensions for item, customer, or catalog.
    /// </param>
    protected void determineDimensions(MCRItemOrCustOrCatalog _mcrItemOrCustOrCatalog)
    {
        switch (_mcrItemOrCustOrCatalog)
        {
            case MCRItemOrCustOrCatalog::Customer      :
                this.setCustomerDefaults();
                break;

            case MCRItemOrCustOrCatalog::Item          :
                this.setItemDefaults();
                break;

            case MCRItemOrCustOrCatalog::Catalog       :
                if (mcrSalesQuotationLine.SourceId)
                {
                    this.setCatalogDefaults();
                }
                break;

            default:
                throw error (strfmt("@MCR10766", funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCatalogDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the catalog dimensions off of the <c>Catalog</c> table.
    /// </summary>
    /// <returns>
    /// The catalog default dimensions.
    /// </returns>
    protected DimensionDefault getCatalogDimensions()
    {
        return Catalog::find(MCRSourceCodeSetup::find(mcrSalesQuotationLine.SourceId).Catalog).DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustDimensions</Name>
				<Source><![CDATA[
        protected DimensionDefault getCustDimensions()
    {
        if (salesQuotationLine.CustAccount)
        {
            return CustTable::find(salesQuotationLine.CustAccount).DefaultDimension;
        }
        else
        {
            return smmBusRelTable::find(mcrSalesQuotationLine.BusRelAccount).DefaultDimension;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemDimensions</Name>
				<Source><![CDATA[
        protected DimensionDefault getItemDimensions()
    {
        return InventTable::find(salesQuotationLine.ItemId).DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the dimension for a <c>SalesQuotationLine</c>.
    /// </summary>
    /// <param name="_salesQuotationLine">
    /// The <c>SalesQuotationLine</c> table buffer for which to find default dimensions.
    /// </param>
    public void new(SalesQuotationLine _salesQuotationLine)
    {
        super();
        salesQuotationLine = _salesQuotationLine;
        mcrSalesQuotationLine = salesQuotationLine.mcrSalesQuotationLine();
        this.setMCRSourceCode(mcrSalesQuotationLine.SourceId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensions</Name>
				<Source><![CDATA[
        protected void setDimensions()
    {
        salesQuotationLine.DefaultDimension = salesQuotationLine.copyDimension(dimensions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSiteDimension</Name>
				<Source><![CDATA[
        protected void setSiteDimension()
    {
        salesQuotationLine.inventDim().modifiedInventSiteFromParent(salesQuotationLine);
        this.setDefaults(salesQuotationLine.DefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the hierarchy of how to assign dimensions and then set the dimensions.
    /// </summary>
    public void setDefaultDimensions()
    {
        if (!this.shouldCleanCurrentDimensions())
        {
            // Blank out the dimension on source code modified, this way
            // the defaulting will come from the hierarchy set up on the AR parameters
            // field AccountRevenue.
            salesQuotationLine.DefaultDimension = 0;
            super();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>