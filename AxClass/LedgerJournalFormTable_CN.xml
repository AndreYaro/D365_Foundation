<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalFormTable_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerJournalFormTrans_CN</c> class helps the <c>LedgerJournalVoucher_CN form</c>
/// initialization and managing the enabled and disabled state of controls for journal voucher part.
/// </summary>
class LedgerJournalFormTable_CN extends LedgerJournalFormTable
{
    FormStringControl       ctrlJournalName;
    QueryBuildRange         criteriaDefaultJournalName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>datasourceActivePost</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs any business logic that is required after the "super" call in the "active" method of the
    ///    data source of the <c>LedgerJournalVoucher_CN</c> form.
    /// </summary>
    /// <param name="_inCreate">
    ///  Flag indicates whether the ledgerJournalTable data source is in creating a new journal header.
    /// </param>
    /// <remarks>
    ///    This method is only used in this class and called from the <c>LedgerJournalVoucher_CN</c> form.
    /// </remarks>
    public void datasourceActivePost(boolean _inCreate = false)
    {
        this.enableButtonsActive();
        this.enableFieldsActive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceActivePre</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs any business logic required before the "super" call in the "Active" event of the LedgerJournalTable data
    ///    source of the <c>LedgerJournalVoucher_CN</c> form.
    /// </summary>
    /// <param name="_inCreate">
    ///  Flag indicates whether the ledgerJournalTable data source is in creating a new journal header.
    /// </param>
    public void datasourceActivePre(boolean _inCreate = false)
    {
        if (journalTableData.canBeAutoUnlocked(!formRun.inViewMode()))
        {
            journalTableData.updateBlock(JournalBlockLevel::None,JournalBlockLevel::None);
            journalTable_ds.setCurrent();
            journalTable_ds.refresh();
        }

        if (! journalTypeFixed)
        {
            this.initControls(journalTable.JournalType);

            journalTypeId = journalTable.JournalType;
        }

        this.initDatasourceAllow(_inCreate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceExecuteQueryPre</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the query range value for default journal name.
    /// </summary>
    public void datasourceExecuteQueryPre()
    {
        super();

        criteriaDefaultJournalName.value(ctrlJournalName.valueStr());
    }

]]></Source>
			</Method>
			<Method>
				<Name>designSelectionChangeJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Trigger the executequery method when the defualt joural name is changed.
    /// </summary>
    public void designSelectionChangeJournalName()
    {
        if (journalTable_ds)
        {
            journalTable_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables buttons on the form.
    /// </summary>
    /// <param name="_enableInfolog">
    ///    A Boolean value that indicates whether Infolog messages are enabled; optional.
    /// </param>
    /// <remarks>
    ///    Setting the <paramref name="_enableInfolog" /> parameter to true indicates that Infolog messages
    ///    are enabled
    /// </remarks>
    public void enableButtonsActive(boolean _enableInfolog = true)
    {
        LedgerJournalTable  ledgerJournalTable = journalTable;
        boolean enabled = formRunobject.parmJournalBlockedSuccessful() && journalTable.JournalNameId;
        boolean isClassicApprovalsEnabled = ledgerJournalTable.RecId != 0 && ledgerJournalTable.ledgerJournalName().ApproveActive; // Flag that indicates whether or not non-workflow approvals is enabled.

        if (ctrlCheckJournal)
        {
            ctrlCheckJournal.enabled(enabled && ! LedgerJournalTable.Posted);
        }

        if (ctrlPostJournal)
        {
            ctrlPostJournal.enabled(enabled && ! LedgerJournalTable.Posted);
        }

        if (ctrlPostJournalMenu)
        {
            if (!this.journalTable_DS().anyMarked())
            {
                if (ledgerJournalTable.isInWFApprovalProcess())
                {
                    // The journal is in workflow approvals.
                    ctrlPostJournalMenu.enabled(enabled && !ledgerJournalTable.Posted && ledgerJournalTable.isWFApprovalApproved());
                }
                else
                {
                    // The is not in workflow approvals.
                    ctrlPostJournalMenu.enabled(enabled && !ledgerJournalTable.Posted && ledgerJournalTable.approved());
                }
            }
            else
            {
                ctrlPostJournalMenu.enabled(enabled);
            }
        }

        if (ctrlApprovalMenu)
        {
            // Enable if the approvals button if classic approvals are enabled, the journal is not in a workflow approvals
            // process and the previous conditions (enabled flag) are met.
            ctrlApprovalMenu.enabled(enabled && isClassicApprovalsEnabled && !ledgerJournalTable.isInWFApprovalProcess() && !ledgerJournalTable.Posted);
        }

        //call the form method
        if (formHasMethodEnableButtonsActive == UnknownNoYes::Unknown)
        {
            formHasMethodEnableButtonsActive = formHasMethod(formRun,identifierstr(enableButtonsActive)) ? UnknownNoYes::Yes : UnknownNoYes::No;
        }

        if (formHasMethodEnableButtonsActive == UnknownNoYes::Yes)
        {
            formRunObject.enableButtonsActive();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDatasourceAllow</Name>
				<Source><![CDATA[
    /// <summary>
    /// override to add the inCreate flag to control the datasource editable prop.
    /// </summary>
    /// <param name="_inCreate">Flag indicates whether the ledgerJournalTable data source is in creating a new journal header.</param>
    public void initDatasourceAllow(boolean _inCreate = false)
    {
        if (!journalTable_ds)
        {
            return;
        }

        journalTable_ds.allowDelete(_inCreate || formRunObject.parmJournalBlockedSuccessful());
        journalTable_ds.allowEdit(_inCreate || (!journalTable.Posted && formRunObject.parmJournalBlockedSuccessful()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initJournalTypeFromCaller</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override to set to the fixed journal type to Daily.
    /// </summary>
    protected void initJournalTypeFromCaller()
    {
        //Fixed journal type id.
        journalTypeId       = enum2int(LedgerJournalType::Daily);
        journalTypeFixed    = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check whether the Chinese voucher system is enabled or not.
    /// </summary>
    /// <param name="_formRun">FormRun object</param>
    public void new(FormRun _formRun)
    {
        if (!LedgerParameters::isChineseVoucher_CN())
            throw error("@GLS63823");

        super(_formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set or get the default journal name stringEdit control.
    /// </summary>
    /// <param name="_ctrlJournalName">Default journal name control to set.</param>
    /// <returns>Return default journal name control.</returns>
    public FormStringControl parmCtrlJournalName(FormStringControl _ctrlJournalName = ctrlJournalName)
    {
        ctrlJournalName = _ctrlJournalName;

        return ctrlJournalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add the query range for the default journal name.
    /// </summary>
    public void queryAddRange()
    {
        super();

        criteriaDefaultJournalName = journalTable_ds.query().dataSourceNo(1).addRange(fieldnum(LedgerJournalTable, JournalName));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>