<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetBalancesPeriodController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetBalancesPeriodController</c> class opens the <c>AssetBalancesPeriod</c> report that
/// uses the <c>Print</c> parameter made conditionally hidden.
/// </summary>
class AssetBalancesPeriodController extends SrsReportRunController implements BatchRetryable
{
    AssetBalancesPeriodContract assetBalancesPeriodContract;

    #ISOCountryRegionCodes
    #define.ReportName('AssetBalancesPeriod.Report')
    #define.VisibleFR('VisibleFR')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isLegalEntityInCountryRegion</Name>
				<Source><![CDATA[
        Public boolean isLegalEntityInCountryRegion()
    {
        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoFR]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
        public void prePromptModifyContract()
    {
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
            [#isoPL, GlobalizationConstants::FeatureReferenceEEU00036],
            [#isoLV, GlobalizationConstants::FeatureReferenceEEU00036] ],
            funcName()
        );

        //To hide parameter, you need to get the contractInfo. This contains metadata about the contract.
        SrsReportRdpDataContractInfo rdpContractInfo;
        SrsReportRdlDataContract rdlContractInfo;

        // <GEEPL>
        #ISOCountryRegionCodes
        // </GEEPL>

        assetBalancesPeriodContract = this.parmReportContract().parmRdpContract() as AssetBalancesPeriodContract;
        rdpContractInfo = this.getDataContractInfoObjects().lookup(classstr(AssetBalancesPeriodContract));
        rdlContractInfo = this.parmReportContract().parmRdlContract();

        this.setCountryRegion(rdpContractInfo, rdlContractInfo);

        // <GEEPL>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
        {
            assetBalancesPeriodContract.parmSysVersion(SysReportRun::sysVersion());
            assetBalancesPeriodContract.parmUserName(SysReportRun::userName());
            assetBalancesPeriodContract.parmShowFooter(true);
        }
        else
        {
            assetBalancesPeriodContract.parmShowFooter(false);
        }
        // </GEEPL>
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCountryRegion</Name>
				<Source><![CDATA[
        public void setCountryRegion( SrsReportRdpDataContractInfo rdpContractInfo,
                                  SrsReportRdlDataContract rdlContractInfo)
    {
        Map memberInfoMap;
        SrsReportDesignProperties designProperties;

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoFR]))
        {
            memberInfoMap = rdpContractInfo.getMembers();
            designProperties = memberInfoMap.lookup(methodstr(AssetBalancesPeriodContract, parmPrint));
            designProperties.parmHidden(true);
        }
        else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoFR]))
        {
            rdlContractInfo.setValue(#VisibleFR, True);
        }

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            memberInfoMap = rdpContractInfo.getMembers();
            designProperties = memberInfoMap.lookup(methodstr(AssetBalancesPeriodContract, parmNewPage));
            designProperties.parmHidden(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args arg)
    {
        AssetBalancesPeriodController controller = new AssetBalancesPeriodController();
        // <GIN>
        if (AssetParameters::isDepreciationIncomeTaxActEnable_IN())
        {
            controller.parmReportName(ssrsReportStr(AssetBalancesPeriod, DesignIndiaData));
        }
        else
        {
        // </GIN>
            controller.parmReportName(#ReportName);
        // <GIN>
        }
        // </GIN>
        controller.parmArgs(arg);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>