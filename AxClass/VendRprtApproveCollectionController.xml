<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendRprtApproveCollectionController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendReportApproveCollectionController</c> class for the associated report.
/// </summary>
public class VendRprtApproveCollectionController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        Query query;

        query = this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey());
        this.setRanges(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns values to the range of a query based on parameter values.
    /// </summary>
    /// <param name="_query">
    /// The query that is used by the report.
    /// </param>
    public void setRanges(Query _query)
    {
        SRSReportHelper::addParameterValueRangeToQuery(_query, tablenum(VendReportApproveCollection), fieldnum(VendReportApproveCollection, JournalNum),
                                                       LedgerJournalTable::findVendorInvoicePool().JournalNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        VendRprtApproveCollectionController controller = new VendRprtApproveCollectionController();

        controller.parmReportName(ssrsReportStr(VendReportApproveCollection, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>