<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalRunBaseBatch</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JournalRunBaseBatch</c> class is a part of the checking and posting task in the journal
///    framework.
/// </summary>
abstract class JournalRunBaseBatch extends RunBaseBatch implements JournalRunbaseCallbackable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>endUpdate</Name>
				<Source><![CDATA[
        void endUpdate(JournalTableData _journalTableData)
    {
        if (this.isInBatch())
        {
            _journalTableData.updateBlock(JournalBlockLevel::System,JournalBlockLevel::None);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasChangedErrorList</Name>
				<Source><![CDATA[
        protected boolean hasChangedErrorList()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasChangedLines</Name>
				<Source><![CDATA[
        protected boolean hasChangedLines()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasChangedNumOfLines</Name>
				<Source><![CDATA[
        protected boolean hasChangedNumOfLines()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfTransferLines</Name>
				<Source><![CDATA[
        public Integer numOfTransferLines()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container  pack()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>packJournalErrorTransList</Name>
				<Source><![CDATA[
        protected container packJournalErrorTransList()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>packJournalErrorVoucherList</Name>
				<Source><![CDATA[
        protected container packJournalErrorVoucherList()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>packResult</Name>
				<Source><![CDATA[
        public container packResult()
    {
        return [this.numOfTransferLines(),
                this.transferJournalId(),
                this.hasChangedNumOfLines(),
                this.hasChangedLines(),
                this.hasChangedErrorList(),
                this.packJournalErrorTransList(),
                this.packJournalErrorVoucherList()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>prefixJournalTable</Name>
				<Source><![CDATA[
        protected str prefixJournalTable(JournalId _journalId)
    {
        return fieldLabelValue(tableNum(JournalTableMap), fieldNum(JournalTableMap,JournalId),_journalId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prefixJournalTransLine</Name>
				<Source><![CDATA[
        protected str prefixJournalTransLine(JournalTransData _journalTransData)
    {
        return fieldLabelValue(tableNum(JournalTransMap), fieldNum(JournalTransMap,LineNum),_journalTransData.journalTrans().LineNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Instructs the batch framework that this class can run impersonating the user who requested the task.
    /// </summary>
    /// <returns>
    ///    true always.
    /// </returns>
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferJournalId</Name>
				<Source><![CDATA[
        JournalId transferJournalId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        boolean  unpack(container   _packedClass)
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>