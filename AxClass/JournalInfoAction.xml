<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalInfoAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JournalInfoAction</c> class is a part of the error handling capability in the journal
///    framework.
/// </summary>
// This class should not be extended. It contains methods to handle infolog actions.
class JournalInfoAction extends SysInfoAction
{
    JournalTransMap journalTrans;

    Integer         infoLineFrom;
    Integer         infoLineTo;

    #define.currentVersion(1)
    #localmacro.currentList
        journalTrans,
        infoLineFrom,
        infoLineTo
    #endMacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>infoLineFrom</Name>
				<Source><![CDATA[
    public Integer infoLineFrom()
    {
        return infoLineFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>infoLineTo</Name>
				<Source><![CDATA[
    public Integer infoLineTo()
    {
        return infoLineTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(
        JournalTransMap _journalTrans = null,
        Integer         _infoLineFrom = 0,
        Integer         _infoLineTo   = 0)
    {
        journalTrans    = _journalTrans;
        infoLineFrom    = _infoLineFrom;
        infoLineTo      = _infoLineTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        Object          object = infolog.infoActionObject();
        Object          formRunObject;
        JournalForm     journalForm;
        JournalTableMap journalTable;

        Args            args;
        FormRun         formRun;

        if (object && SysDictClass::isEqualOrSuperclass(classIdGet(object), classNum(JournalForm)))
        {
            journalForm = object;
            journalForm.findRecord(journalTrans);
        }
        else
        {
            ttsbegin;
            journalTable = JournalStatic::findJournalTableFromTrans(journalTrans,true);
            ttscommit;
            if (journalTable.RecId && JournalTableData::journalBlockLevel(journalTable) == JournalBlockLevel::None)
            {
                args = new Args();
                args.name(JournalStatic::newTable(journalTable).tableFormName());

                args.record(journalTable);

                formRun     = classfactory.formRunClass(args);
                formRun.init();
                formRun.run();

                formRunObject = formRun;

                journalForm = formRunObject.journalForm();
                journalForm.findRecord(journalTrans);

                formRun.wait();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(
        container   _packedClass,
        Object      _object = null)
    {
        Integer     version      = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion :
                [version,#CurrentList] = _packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public str description()
    {
        return "@SYS27205";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInfologPack</Name>
				<Source><![CDATA[
    public static JournalInfoAction newInfologPack(
        JournalTransMap _journalTrans,
        Integer         _infoLineFrom,
        Integer         _infoLineTo)
    {
        return new JournalInfoAction(_journalTrans,_infoLineFrom,_infoLineTo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJournalTrans</Name>
				<Source><![CDATA[
    public static JournalInfoAction newJournalTrans(JournalTransMap _journalTrans)
    {
        return new JournalInfoAction(_journalTrans);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>