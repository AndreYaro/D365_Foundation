<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFDIWithholdingJournalDocState_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WithholdingJournalDocState_MX</c> class update the data after a CFDI witholding journal is processed by a web service.
/// </summary>
public class CFDIWithholdingJournalDocState_MX extends EInvoiceDocState_MX
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWebServiceType</Name>
				<Source><![CDATA[
    protected EInvoiceCFDIWebService_MX getWebServiceType()
    {
        EInvoiceCFDIWebService_MX ret;

        switch (eInvoiceJour.CFDIMessageType)
        {
            case EInvoiceCFDIMessageType_MX::Submit:
                ret = EInvoiceCFDIWebService_MX::SendWithholding;
                break;

            case EInvoiceCFDIMessageType_MX::Cancel:
                ret = EInvoiceCFDIWebService_MX::Cancel;
                break;

            case EInvoiceCFDIMessageType_MX::CancelRequest :
                ret = EInvoiceCFDIWebService_MX::CancelRequest;
                break;

            default:
                ret = EInvoiceCFDIWebService_MX::None;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>messageSent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Process the electronic invoice after the web service response.
    /// </summary>
    /// <param name="_response">A <c>EInvoiceMsgStringStream_MX</c> object with the web service response.</param>
    /// <exception cref="Exception::Error">The response of the web service must be a valid XML.</exception>
    public void messageSent(EInvoiceMsgStringStream_MX _response)
    {
        EInvoiceJour_MX eInvoiceJourLocal;
        eInvoiceJourLocal.xmlDoc = _response.toString();
        eInvoiceJourLocal.cfdi = EInvoiceCFDIParameters_MX::isElectronicInvoiceEnabled();
        eInvoiceJourLocal.CFDIDocType = CFDIDocType_MX::Withholding;

        EInvoiceCFDIParameters_MX parameters = EInvoiceCFDIParameters_MX::find();
        if (parameters.CFDIVersion >= EInvoiceCFDIVersion_MX::V4)
        {
            eInvoiceJourLocal.CFDIVersion = parameters.CFDIVersion;
        }

        CFDIWithholdingXMLDocReader_MX xmlDocReader;

        try
        {
            xmlDocReader = EInvoiceXMLDocReader_MX::construct(eInvoiceJourLocal);
        }
        catch
        {
            throw error("@SYS4081907");
        }

        if (xmlDocReader.getResponse() == MessageOk)
        {
            this.processMessageOk(xmlDocReader);
        }
        else
        {
            this.processMessageWithError(xmlDocReader);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resubmitEInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resubmits a electronic invoice
    /// </summary>
    public void resubmitEInvoice()
    {
        ttsbegin;
        eInvoiceJour.selectForUpdate(true);
        this.resetEInvoiceStatus();

        CFDIWithholdingXMLFormat_MX xmlFormat = CFDIWithholdingXMLFormat_MX::construct();
        xmlFormat.generateXML(eInvoiceJour, CFDIWithholdingJour_MX::find(eInvoiceJour.RefRecId));

        eInvoiceJour.xmlDoc = xmlFormat.getXMLDocument().toString();
        eInvoiceJour.cfdiOriginalString = xmlFormat.getOriginalString();

        eInvoiceJour.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendMail</Name>
				<Source><![CDATA[
    /// <summary>
    /// Send the approved invoice through eMail.
    /// </summary>
    protected void sendMail()
    {
        CFDIWithholdingMailSender_MX mailSender = CFDIWithholdingMailSender_MX::construct(eInvoiceJour);
        mailSender.sendMail();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>