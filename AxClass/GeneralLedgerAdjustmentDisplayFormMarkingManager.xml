<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GeneralLedgerAdjustmentDisplayFormMarkingManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Manages data source marking for adjustment displays that impelment <c>GeneralLedgerAdjustmentIDisplayProposedAdjustments</c>.
/// </summary>
internal final class GeneralLedgerAdjustmentDisplayFormMarkingManager
{
    private GeneralLedgerAdjustmentIDisplayProposedAdjustments adjustmentDisplay;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {

    }

]]></Source>
			</Method>
			<Method>
				<Name>newForAdjustmentDisplay</Name>
				<Source><![CDATA[
    internal static GeneralLedgerAdjustmentDisplayFormMarkingManager newForAdjustmentDisplay(GeneralLedgerAdjustmentIDisplayProposedAdjustments _adjustmentDisplay)
    {
        GeneralLedgerAdjustmentDisplayFormMarkingManager markingManager = new GeneralLedgerAdjustmentDisplayFormMarkingManager();
        markingManager.adjustmentDisplay = _adjustmentDisplay;

        return markingManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdjustmentRecordsMarkedForJournalCreation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gathers marked adjustments on the adjustment display that are applicable for adjustment journal creation.
    /// </summary>
    /// <returns>
    /// A temp table instance of <c>GeneralLedgerAdjustmentProposedAdjustmentTmp</c> containing all marked
    /// adjustments applicable for adjustment journal creation.
    /// </returns>
    internal GeneralLedgerAdjustmentProposedAdjustmentTmp getAdjustmentRecordsMarkedForJournalCreation()
    {
        GeneralLedgerAdjustmentProposedAdjustmentTmp markedAdjustments;

        FormDataSource adjustmentDataSource = adjustmentDisplay.getAdjustmentsDataSource();

        MultiSelectionHelper helper = MultiSelectionHelper::construct();
        helper.parmDatasource(adjustmentDataSource);
        
        GeneralLedgerAdjustmentProposedAdjustment currentMarkedAdjustment = helper.getFirst();

        // Iterate over marked adjustment records, adding valid adjustments to a temp table for use in journal creation
        while (currentMarkedAdjustment)
        {
            if (currentMarkedAdjustment.canBeUsedForJournalCreation())
            {
                markedAdjustments.AdjustmentRecId = currentMarkedAdjustment.RecId;
                markedAdjustments.insert();
            }

            currentMarkedAdjustment = helper.getNext();
        }

        return markedAdjustments;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>