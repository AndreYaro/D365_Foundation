<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatExternalCatalogBasketWizardEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal static final class CatExternalCatalogBasketWizardEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>catExternalCatalogBasketWizard_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form event Handler for the event closing on <c>CatExternalCatalogBasketWizard</c> form.
    /// </summary>
    /// <param name = "sender">The opening form</param>
    /// <param name = "e">The form event arguments</param>
    [FormEventHandler(formStr(CatExternalCatalogBasketWizard), FormEventType::Closing)]
    public static void catExternalCatalogBasketWizard_OnClosing(xFormRun sender, FormEventArgs e)
    {
        PurchReqLine                        purchReqLine;
        PurchReqTable                       purchReqTable;
        CatCXMLCartLines                    cartLines;
        PurchReqLineExternalCatalogQuote    reqQuoteLines;

        FormDataSource CatPunchOutRequest_ds    = sender.dataSource("CatPunchOutRequest");
        CatPunchoutRequest punchOutRequest      = CatPunchOutRequest_ds.cursor();        


        //Find the current quote for the cartlines
        select firstonly * from cartLines
            where cartLines.PunchOutRequest == punchOutRequest.RecId;

        //Go through the quote lines and update the reqs
        while select * from reqQuoteLines
            where reqQuoteLines.ExternalCatalogQuote == cartLines.ExternalCatalogQuote
        {
            ttsbegin;

            //Find the req lines.
            select firstonly * from purchReqLine
                where purchReqLine.RecId == reqQuoteLines.PurchReqLine;

            //find the cart lines.
            select firstonly * from cartLines
                where cartLines.PunchOutRequest == punchOutRequest.RecId 
                    && cartLines.ExternalCatalogQuote == reqQuoteLines.ExternalCatalogQuote 
                    && cartLines.ItemId == purchReqLine.ExternalItemId 
                    && cartLInes.InventQty == purchReqLine.PurchQty 
                    && cartLines.PurchReqLine == 0;
            
            if(cartLines.PurchSupplierAuxId && purchReqLine.RecId)
            {
                purchReqLine.selectForUpdate(true);
                purchReqline.PurchSupplierAuxId = cartLines.PurchSupplierAuxId;
                purchReqLine.update();
            }

            if(cartLines.RecId && purchReqLine.RecId)
            {
                cartLines.selectForUpdate(true);
                cartLines.PurchReqLine = purchReqLine.RecId;
                cartLines.update();
            }

            ttscommit;
        }        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>