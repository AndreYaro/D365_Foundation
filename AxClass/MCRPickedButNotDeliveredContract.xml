<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRPickedButNotDeliveredContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>MCRPickedButNotDeliveredDP</c> controls the prompts
/// and parameters for the picked but not delivered report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(MCRPickedButNotDeliveredUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class MCRPickedButNotDeliveredContract Implements SysOperationValidatable
{
    TransDate           throughDate;
    List                warehouse;
    MCRInventTransType  transactionType;
    CurrencyCode        companyCurrency;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmCompanyCurrency</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('companyCurrency')
    ]
    public CurrencyCode parmCompanyCurrency(CurrencyCode _companyCurrency = companyCurrency)
    {
        companyCurrency = _companyCurrency;
        return companyCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmThroughDate</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('ThroughDate'),
        SysOperationLabelAttribute(literalStr("@MCR36543")),
        SysOperationGroupMemberAttribute('Parameters'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public TransDate parmThroughDate(TransDate _throughDate = throughDate)
    {
        throughDate = _throughDate;

        return throughDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionType</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('TransactionType'),
        SysOperationLabelAttribute(literalStr("@SYS480")),
        SysOperationGroupMemberAttribute('Parameters'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public MCRInventTransType parmTransactionType(MCRInventTransType _transactionType = transactionType)
    {
        transactionType = _transactionType;

        return transactionType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWarehouse</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('Warehouse'),
        SysOperationLabelAttribute(literalStr("@SYS6437")),
        SysOperationGroupMemberAttribute('Parameters'),
        SysOperationDisplayOrderAttribute('2'),
        AifCollectionTypeAttribute('_warehouse', Types::String, extendedtypestr(InventLocationId))
    ]
    public List parmWarehouse(List _warehouse = warehouse)
    {
        warehouse = _warehouse;

        return warehouse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the through date variable has been set.
    /// </summary>
    /// <returns>
    /// true if the through date variable has been set; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!throughDate)
        {
            isValid = checkFailed(strFmt("@SYS84753", "@MCR36543"));
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>