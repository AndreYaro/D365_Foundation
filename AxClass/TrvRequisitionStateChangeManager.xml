<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvRequisitionStateChangeManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TrvRequisitionStateChangeManager</c> class vailidates changes the <c>ApprovalStatus</c>
/// workflow state on a travel requisition, then performs the state change if valid.
/// </summary>
class TrvRequisitionStateChangeManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateRequisitionStatus</Name>
				<Source><![CDATA[
    public static void updateRequisitionStatus(RecId _recId, TrvRequisitionApprovalStatus _status)
    {
        TrvRequisitionTable trvRequisitionTable = TrvRequisitionTable::find(_recId, true);

        if (!TrvRequisitionStateChangeManager::validateStatusChange(trvRequisitionTable.ApprovalStatus, _status))
        {
            throw error(strfmt("@SYS108515",trvRequisitionTable.ApprovalStatus, _status));
        }

        trvRequisitionTable.ApprovalStatus = _status;
        ttsbegin;
        trvRequisitionTable.doUpdate();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateStatusChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies the requested state change can be performed for a travel requisition.
    /// </summary>
    /// <param name = "_current">The current workflow state.</param>
    /// <param name = "_new">The new workflow state.</param>
    /// <returns>True if the state change can occur, false if not.</returns>
    public static boolean validateStatusChange(TrvRequisitionApprovalStatus _current, TrvRequisitionApprovalStatus _new)
    {
        boolean ret = true;

        if ( _current == _new)   // no need to validate
        {
            return ret;
        }

        switch (_new)
        {
            case TrvRequisitionApprovalStatus::Submitted:
                ret = _current == TrvRequisitionApprovalStatus::Create || _current == TrvRequisitionApprovalStatus::Returned;
                break;

            case TrvRequisitionApprovalStatus::Pending:
                ret = _current == TrvRequisitionApprovalStatus::Submitted || _current == TrvRequisitionApprovalStatus::Returned;
                break;

            case TrvRequisitionApprovalStatus::Approved:
                ret = _current == TrvRequisitionApprovalStatus::Pending;
                break;

            case TrvRequisitionApprovalStatus::Returned:
                ret = _current == TrvRequisitionApprovalStatus::Pending;
                break;

            case TrvRequisitionApprovalStatus::Create: //for cancelled wf item
                ret = _current == TrvRequisitionApprovalStatus::Pending || _current == TrvRequisitionApprovalStatus::Returned || _current == TrvRequisitionApprovalStatus::Submitted;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>