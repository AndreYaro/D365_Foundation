<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCXmlSessionWriterTableConstraintRow</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCXmlSessionWriterTableConstraintRow</c> class writes session XML for the table constraint
/// row records.
/// </summary>
public class PcXmlSessionWriterTableConstraintRow
{
    #PC
    #PCTableConstraint
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeCell</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes the session XML for a table constraint row cell.
    /// </summary>
    /// <param name="_cell">
    /// The table constraint cell for which to generate the XML.
    /// </param>
    /// <param name="_value">
    /// The value of the cell.
    /// </param>
    /// <param name="_xmlWriter">
    /// The XML writer to use to store the XML representation of this record.
    /// </param>
    protected void writeCell(PCTableConstraintCell     _cell,
                                EcoResValue            _value,
                                PCXmlWriter            _xmlWriter)
    {
        EcoResIntValue            intValue;
        EcoResTextValue           textValue;
        EcoResBooleanValue        boolValue;

        _xmlWriter.writeStartElement(#Cell);

        if (_value.InstanceRelationType == DictTable::getRelationTypeFromTableName(tableStr(EcoResIntValue)))
        {
            intValue = EcoResIntValue::find(_value.RecId);
            _xmlWriter.writeRaw(int2str(intValue.IntValue));
        }
        else if (_value.InstanceRelationType == DictTable::getRelationTypeFromTableName(tableStr(EcoResTextValue)))
        {
            textValue = EcoResTextValue::find(_value.RecId);
            _xmlWriter.writeRaw(textValue.pcGetStringValue());
        }
        else if (_value.InstanceRelationType == DictTable::getRelationTypeFromTableName(tableStr(EcoResBooleanValue)))
        {
            boolValue = EcoResBooleanValue::find(_value.RecId);
            _xmlWriter.writeRaw(boolValue.BooleanValue == NoYes::Yes? #CapTrue : #CapFalse);
        }

        _xmlWriter.writeEndElement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes the session XML for a table constraint row.
    /// </summary>
    /// <param name="_row">
    /// The table constraint row record for which to generate the XML.
    /// </param>
    /// <param name="_xmlWriter">
    ///    The XML writer to use to store the XML representation of this record.
    /// </param>
    public void write(PCTableConstraintRow _row, PCXmlWriter _xmlWriter)
    {
        PCTableConstraintCell  cell;
        EcoResValue            value;

        _xmlWriter.writeStartElement(#Row);

        // order by is to ensure that the cell values are written in the same order as the column definitions
        while select TableConstraintColumnDefinition from cell order by TableConstraintColumnDefinition asc
            where cell.TableConstraintRow == _row.RecId
            join value
                where value.RecId == cell.Value
        {
            this.writeCell(cell, value, _xmlWriter);
        }

        _xmlWriter.writeEndElement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCXmlSessionWriterTableConstraintRow construct()
    {
        return new PCXmlSessionWriterTableConstraintRow();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>