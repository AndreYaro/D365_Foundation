<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyUpdateStatus_SalesLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InterCompanyUpdateStatus_SalesLine extends InterCompanyUpdateStatus
{
    SalesLine   salesLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    void parmBuffer(Common _buffer)
    {
        super(_buffer);
        salesLine = _buffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeExternal</Name>
				<Source><![CDATA[
    void synchronizeExternal()
    {
        PurchLine   purchLine;
        if (salesLine.InterCompanyInventTransId)
        {
            changecompany(salesLine.salesTable().InterCompanyCompanyId)
            {
                setprefix(strfmt("@SYS93821",TradeInterCompany::curCompanyName()));

                purchLine = PurchLine::findInventTransId(salesLine.InterCompanyInventTransId,true);
                purchLine.PurchStatus = this.salesStatus2PurchStatus(salesLine.SalesStatus);

                setprefix(#PreFixField(PurchLine, PurchId));

                if (purchLine.validateWrite())
                {
                    InterCompanyUpdateStatus::synchronize(purchLine,InterCompanySkipUpdate::InterCompany);
                    purchLine.doUpdate();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeInternal</Name>
				<Source><![CDATA[
    void synchronizeInternal()
    {
        PurchLine   purchLine;
        if (salesLine.InventRefType == InventRefType::Purch
        &&  salesLine.InventRefTransId)
        {
            purchLine             = PurchLine::findInventTransId(salesLine.InventRefTransId,true);
            purchLine.PurchStatus = this.salesStatus2PurchStatus(salesLine.SalesStatus);

            if (purchLine.InterCompanyInventTransId)
            {
                setprefix(#PreFixField(PurchLine, PurchId));

                if (purchLine.validateWrite())
                {
                    InterCompanyUpdateStatus::synchronize(purchLine,InterCompanySkipUpdate::Internal);
                    purchLine.doUpdate();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>