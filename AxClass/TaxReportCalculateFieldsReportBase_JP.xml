<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportCalculateFieldsReportBase_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal abstract class TaxReportCalculateFieldsReportBase_JP extends TaxReportCalculateFields_JP
{
    protected LedgerConsumptionTaxCalcTrans_JP appendix1Trans3;
    protected LedgerConsumptionTaxCalcTrans_JP appendix1Trans5;
    protected LedgerConsumptionTaxCalcTrans_JP appendix1Trans81;
    protected LedgerConsumptionTaxCalcTrans_JP appendix1Trans82;
    protected LedgerConsumptionTaxCalcTrans_JP appendix1Trans10;

    protected LedgerConsumptionTaxCalcTrans_JP appendix2Trans3;
    protected LedgerConsumptionTaxCalcTrans_JP appendix2Trans5;
    protected LedgerConsumptionTaxCalcTrans_JP appendix2Trans81;
    protected LedgerConsumptionTaxCalcTrans_JP appendix2Trans82;
    protected LedgerConsumptionTaxCalcTrans_JP appendix2Trans10;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateTaxReportLines</Name>
				<Source><![CDATA[
    protected void calculateTaxReportLines()
    {
        LedgerConsumptionTaxReportTrans_JP taxReportTrans = this.initializeTaxReportItems();

        this.calculateTaxReportLine(taxReportTrans);

        taxReportTrans.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeTaxReportItems</Name>
				<Source><![CDATA[
    protected LedgerConsumptionTaxReportTrans_JP initializeTaxReportItems()
    {
        LedgerConsumptionTaxReportTrans_JP taxReportTrans = this.getTaxReportTrans(dataLayout, true);

        if (!taxReportTrans)
        {
            if (typeOfDeclaration == TypeOfDeclaration_JP::Interim)
            {
                taxReportTrans.InterimFrom = fromDate;
                taxReportTrans.InterimTo = toDate;
            }
            else
            {
                taxReportTrans.PeriodOfTaxationFrom = fromDate;
                taxReportTrans.PeriodOfTaxationTo = toDate;
            }

            taxReportTrans.CalcMethod = calcMethod;
            taxReportTrans.TypeOfDeclaration = typeOfDeclaration;
            taxReportTrans.DataLayout = dataLayout;
            taxReportTrans.Version = TaxRepVersion::Original;
        }
        
        if (amendment)
        {
            taxReportTrans.CalcMethod = calcMethod;
            taxReportTrans.Modified = false;
        }

        taxReportTrans.CompanyRepresentative = companyInfo.CompanyRepresentative_JP;

        return taxReportTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTaxReportLine</Name>
				<Source><![CDATA[
    protected abstract void calculateTaxReportLine(LedgerConsumptionTaxReportTrans_JP _taxReportTrans)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAppendix1Transactions</Name>
				<Source><![CDATA[
    protected void getAppendix1Transactions(TaxReportDataLayout_JP _appendix1DataLayout)
    {
        appendix1Trans3 = this.getTaxCalcTrans(3, TaxType_JP::Standard, _appendix1DataLayout, true);
        appendix1Trans5 = this.getTaxCalcTrans(5, TaxType_JP::Standard, _appendix1DataLayout, true);
        appendix1Trans81 = this.getTaxCalcTrans(8, TaxType_JP::Standard, _appendix1DataLayout, true);
        appendix1Trans82 = this.getTaxCalcTrans(8, TaxType_JP::Reduced, _appendix1DataLayout, true);
        appendix1Trans10 = this.getTaxCalcTrans(10, TaxType_JP::Standard, _appendix1DataLayout, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAppendix2Transactions</Name>
				<Source><![CDATA[
    protected void getAppendix2Transactions(TaxReportDataLayout_JP _appendix2DataLayout)
    {
        appendix2Trans3 = this.getTaxCalcTrans(3, TaxType_JP::Standard, _appendix2DataLayout, true);
        appendix2Trans5 = this.getTaxCalcTrans(5, TaxType_JP::Standard, _appendix2DataLayout, true);
        appendix2Trans81 = this.getTaxCalcTrans(8, TaxType_JP::Standard, _appendix2DataLayout, true);
        appendix2Trans82 = this.getTaxCalcTrans(8, TaxType_JP::Reduced, _appendix2DataLayout, true);
        appendix2Trans10 = this.getTaxCalcTrans(10, TaxType_JP::Standard, _appendix2DataLayout, true);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>