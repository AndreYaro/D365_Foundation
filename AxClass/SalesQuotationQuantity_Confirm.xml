<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationQuantity_Confirm</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesQuotationQuantity_Confirm extends SalesQuotationQuantity
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcQtyInvent</Name>
				<Source><![CDATA[
    protected container calcQtyInvent(Common                    _salesQuotationLine,
                                      SalesUpdate               _specQty             = SalesUpdate::All,
                                      InventQty                 _qty                 = naReal(),
                                      boolean                   _creditRemaining     = false,
                                      boolean                   _calcRemaining       = true)
    {
        SalesQuotationLine  salesQuotationLine = _salesQuotationLine as SalesQuotationLine;
        SalesQty            qtyUpdate;
        SalesQty            numOfRemainOri;
        SalesQty            qtyRemainNew;

        if (_qty != naReal())
        {
            qtyUpdate = _qty;
        }
        else
        {
            if (_specQty == SalesUpdate::DeliverNow)
            {
                qtyUpdate = salesQuotationLine.inventDeliverNow;
            }
            else
            {
                qtyUpdate = salesQuotationLine.remainInventPhysical;
            }
        }

        if (_calcRemaining)
        {
            numOfRemainOri = salesQuotationLine.remainInventPhysical;
            qtyRemainNew   = salesQuotationLine.remainInventPhysical;
        }

        return [qtyUpdate, numOfRemainOri, qtyRemainNew];
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcQtySales</Name>
				<Source><![CDATA[
    protected container calcQtySales(Common                     _salesQuotationLine,
                                     SalesUpdate                _specQty             = SalesUpdate::All,
                                     SalesQty                   _qty                 = naReal(),
                                     boolean                    _creditRemaining     = false,
                                     boolean                    _calcRemaining       = true)
    {
        SalesQuotationLine salesQuotationLine = _salesQuotationLine as SalesQuotationLine;
        SalesQty        qtyUpdate;
        SalesQty        numOfRemainOri;
        SalesQty        qtyRemainNew;

        if (_qty != naReal())
        {
            qtyUpdate = _qty;
        }
        else
        {
            if (_specQty == SalesUpdate::DeliverNow)
            {
                qtyUpdate = salesQuotationLine.salesDeliverNow;
            }
            else
            {
                qtyUpdate = salesQuotationLine.remainSalesPhysical;
            }
        }

        if (_calcRemaining)
        {
            numOfRemainOri = salesQuotationLine.remainSalesPhysical;
            qtyRemainNew   = salesQuotationLine.remainSalesPhysical;
        }

        return [qtyUpdate, numOfRemainOri, qtyRemainNew];
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWCalcQty</Name>
				<Source><![CDATA[
    protected container pdsCWCalcQty(
        Common          _salesQuotationLine,
        SalesUpdate     _specQty            = SalesUpdate::All,
        PdsCWInventQty  _qty                = naReal(),
        boolean         _creditRemaining    = false,
        boolean         _calcRemaining      = true)
    {
        SalesQuotationLine  salesQuotationLine = _salesQuotationLine as SalesQuotationLine;
        PdsCWInventQty      qtyUpdate;
        PdsCWInventQty      numOfRemainOri;
        PdsCWInventQty      qtyRemainNew;

        if (_qty != naReal())
        {
            qtyUpdate = _qty;
        }
        else
        {
            if (_specQty == SalesUpdate::DeliverNow)
            {
                qtyUpdate = salesQuotationLine.PdsCWDeliverNow;
            }
            else
            {
                qtyUpdate = salesQuotationLine.PdsCWRemainInventPhysical;
            }
        }

        if (_calcRemaining)
        {
            numOfRemainOri = salesQuotationLine.PdsCWRemainInventPhysical;
            qtyRemainNew   = salesQuotationLine.PdsCWRemainInventPhysical;
        }

        return [qtyUpdate, qtyRemainNew, numOfRemainOri];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>