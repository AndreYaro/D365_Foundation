<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCovTotalProcessAutomationExecutionContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerCovTotalProcessAutomationExecutionContract</c> class serves as the data contract for LedgerCovTotal class.
/// </summary>
internal final class LedgerCovTotalProcessAutomationExecutionContract
{
    private RefRecId processScheduleOccurrenceRecId;
    private RefRecId processExecutionSourceLinkRecId;
    private AllNew forecastCalculationMethod;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcessScheduleOccurrenceRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal RefRecId getProcessScheduleOccurrenceRecId()
    {
        return processScheduleOccurrenceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcessExecutionSourceLinkRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal RefRecId getProcessExecutionSourceLinkRecId()
    {
        return processExecutionSourceLinkRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getForecastCalculationMethod</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal AllNew getForecastCalculationMethod()
    {
        return forecastCalculationMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromOccurrenceSourceLinkAndCalculationMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of <c>LedgerCovTotalProcessAutomationExecutionContract</c>
    /// </summary>
    /// <param name = "_processScheduleOccurrenceRecId">Schedule occurrence record ID.</param>
    /// <param name = "_processExecutionSourceLinkRecId">Record ID for <c>ProcessExutionSourceLink</c> record.</param>
    /// <param name = "_forecastCalculationMethod">Cash flow forecast calculation method type.</param>
    /// <returns>An instance of <c>LedgerCovTotalProcessAutomationExecutionContract</c>.</returns>
    [Hookable(false)]
    internal static LedgerCovTotalProcessAutomationExecutionContract constructFromOccurrenceSourceLinkAndCalculationMethod(RefRecId _processScheduleOccurrenceRecId, RefRecId _processExecutionSourceLinkRecId, AllNew _forecastCalculationMethod)
    {

        boolean isValid =  _processScheduleOccurrenceRecId != 0
            && _processExecutionSourceLinkRecId != 0;
        
        if (!isValid)
        {
            throw error("@CashFlowManagement:LedgerCovTotalAutomationInvalidExecutionContract");
        }

        LedgerCovTotalProcessAutomationExecutionContract contract =  new LedgerCovTotalProcessAutomationExecutionContract();
        contract.processScheduleOccurrenceRecId = _processScheduleOccurrenceRecId;
        contract.processExecutionSourceLinkRecId = _processExecutionSourceLinkRecId;
        contract.forecastCalculationMethod = _forecastCalculationMethod;

        return contract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>