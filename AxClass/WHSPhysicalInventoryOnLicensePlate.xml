<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSPhysicalInventoryOnLicensePlate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>WHSPhysicalInventoryOnLicensePlate</c> contains the itemIdCount, itemId, inventoryQty, and unit if a single item exists.
/// </summary>
public class WHSPhysicalInventoryOnLicensePlate
{
    private int itemIdCount;
    private ItemId itemId;
    private InventQty inventoryQty;
    private UnitOfMeasureSymbol unitSymbol;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSPhysicalInventoryOnLicensePlate construct()
    {
        return new WHSPhysicalInventoryOnLicensePlate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemIdCount</Name>
				<Source><![CDATA[
    public int parmItemIdCount(int _itemIdCount = itemIdCount)
    {
        itemIdCount = _itemIdCount;
        return itemIdCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;
        return ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventQty</Name>
				<Source><![CDATA[
    public InventQty parmInventQty(InventQty _inventoryQty = inventoryQty)
    {
        inventoryQty = _inventoryQty;
        return inventoryQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitOfMeasureSymbol</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol parmUnitOfMeasureSymbol(UnitOfMeasureSymbol _unitSymbol = unitSymbol)
    {
        unitSymbol = _unitSymbol;
        return unitSymbol;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>