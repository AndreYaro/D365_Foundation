<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmEwsDeletedOccurrence</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This <c>smmEwsDeletedOccurrence</c> tracks deleted occurence in a recurring appointment.
/// </summary>
class SmmEwsDeletedOccurrence implements smmIOccurrence
{
    Microsoft.Dynamics.AX.ExchangeIntegration.ItemDeletedOccurrence occurrence;
    smmEwsAppointment                                               appointment;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets if an appointment occurence is deleted.
    /// </summary>
    /// <returns>
    /// True of the occurence is deleted; otherwise false.
    /// </returns>

    public boolean deleted()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAppointment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets deleted occurence appointment.
    /// </summary>
    /// <returns>
    /// Appointment associated to deleted occurence.
    /// </returns>

    public smmIAppointment getAppointment()
    {
        return appointment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasStart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets if the occurence has a start date.
    /// </summary>
    /// <returns>
    /// False, deleted occurences do not have start date.
    /// </returns>

    public boolean hasStart()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a deleted occurence appointment.
    /// </summary>
    /// <param name="_occurrence">
    /// Exchange service deleted occurence appointment.
    /// </param>
    /// <param name="_appointment">
    /// Master appointment for the occurence.
    /// </param>

    public void new(Microsoft.Dynamics.AX.ExchangeIntegration.ItemDeletedOccurrence _occurrence, smmEwsAppointment _appointment)
    {
        occurrence  = _occurrence;
        appointment = _appointment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>originalDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Original start date of the deleted occurence.
    /// </summary>
    /// <returns>
    /// Original start date of the deleted occurence.
    /// </returns>

    public utcdatetime originalDate()
    {
        utcdatetime ret;

        ret = occurrence.originalStart();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>start</Name>
				<Source><![CDATA[
    /// <summary>
    /// Start date time of a deleted occurrence.
    /// </summary>
    /// <returns>
    /// Current UTC date time, deleted occurrence of a recurring appointment does not have a start date time.
    /// </returns>

    public utcdatetime start()
    {
        utcdatetime ret = DateTimeUtil::utcNow();

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>