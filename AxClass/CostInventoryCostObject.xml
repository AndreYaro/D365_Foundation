<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostInventoryCostObject</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostInventoryCostObject</c> class implements an inventory cost object.
/// </summary>
public class CostInventoryCostObject extends CostObject
{
    DataAreaId      dataAreaId;
    ItemId          itemId;
    InventDimId     inventDimId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>key</Name>
				<Source><![CDATA[
    public str key()
    {
        return CostInventoryCostObject::createKey(dataAreaId, itemId, inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDataAreaId</Name>
				<Source><![CDATA[
    public DataAreaId parmDataAreaId(DataAreaId _dataAreaId = dataAreaId)
    {
        dataAreaId = _dataAreaId;

        return dataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId(InventDimId _inventDimId = inventDimId)
    {
        inventDimId = _inventDimId;

        return inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CostInventoryCostObject construct()
    {
        return new CostInventoryCostObject();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a key for a inventory cost object.
    /// </summary>
    /// <param name="_dataAreaId">
    /// The inventory cost objects <c>DataAreaId</c>.
    /// </param>
    /// <param name="_itemId">
    /// The inventory cost objects <c>ItemId</c>.
    /// </param>
    /// <param name="_inventDimId">
    /// The inventory cost objects <c>InventDimId</c>.
    /// </param>
    /// <returns>
    /// A key for an inventory cost objects.
    /// </returns>
    private static str createKey(DataAreaId _dataAreaId, ItemId _itemId, InventDimId _inventDimId)
    {
        return _dataAreaId + '#' + _itemId + '#' + _inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCostObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CostInventoryCostObject</c> class.
    /// </summary>
    /// <param name="_dataAreaId">
    /// The inventory cost objects <c>DataAreaId</c>.
    /// </param>
    /// <param name="_itemId">
    /// The inventory cost objects <c>ItemId</c>.
    /// </param>
    /// <param name="_inventDimId">
    /// The inventory cost objects <c>InventDimId</c>.
    /// </param>
    /// <returns>
    /// An instance of the <c>CostInventoryCostObject</c> class.
    /// </returns>
    public static CostInventoryCostObject newCostObject(DataAreaId _dataAreaId, ItemId _itemId, InventDimId _inventDimId)
    {
        CostInventoryCostObject     costObject;

        str key = CostInventoryCostObject::createKey(_dataAreaId, _itemId, _inventDimId);

        costObject = SysTransactionScopeCache::get(classStr(CostInventoryCostObject), key, costObject);

        if (!costObject)
        {
            costObject = CostInventoryCostObject::construct();
            costObject.parmDataAreaId(_dataAreaId);
            costObject.parmItemId(_itemId);
            costObject.parmInventDimId(_inventDimId);
            SysTransactionScopeCache::set(classStr(CostInventoryCostObject), key, costObject);
        }

        return costObject;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
