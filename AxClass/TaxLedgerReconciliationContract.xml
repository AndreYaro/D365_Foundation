<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxLedgerReconciliationContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>TaxLedgerReconciliation</c> SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>TaxLedgerReconciliation</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(TaxLedgerReconciliationUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly),
    SysOperationGroupAttribute('From', "@SYS4083", '1'),
    SysOperationGroupAttribute('To', "@SYS8828", '3'),
    SysOperationGroupAttribute('Others',"@SYS118908", '2')
]
public class TaxLedgerReconciliationContract implements SysOperationValidatable
{
    TransDate fromDate;
    TransDate toDate;
    Voucher fromVoucher;
    Voucher toVoucher;
    MainAccountNum fromMainAccount;
    MainAccountNum toMainAccount;
    boolean includeDetails;
    boolean showDifferencesOnly;
    // <GEECZ>
    boolean reconcileByVATRegisterDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the data contract parameter FromDate; optional.
    /// </param>
    /// <returns>
    /// The current value of data contract parameter FromDate.
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS7402")),
        SysOperationHelpTextAttribute(literalstr("@SYS2282")),
        SysOperationGroupMemberAttribute('From'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromMainAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter FromMainAccount.
    /// </summary>
    /// <param name="_fromMainAccount">
    /// The new value of the data contract parameter FromMainAccount; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter FromMainAccount.
    /// </returns>
    [
        DataMemberAttribute('FromMainAccount'),
        SysOperationLabelAttribute(literalstr("@SYS135766")),
        SysOperationHelpTextAttribute(literalstr("@SYS135767")),
        SysOperationGroupMemberAttribute('From'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public MainAccountNum parmFromMainAccount(MainAccountNum _fromMainAccount = fromMainAccount)
    {
        fromMainAccount = _fromMainAccount;
        return fromMainAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter FromVoucher.
    /// </summary>
    /// <param name="_fromVoucher">
    /// The new value of the data contract parameter FromVoucher; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter FromVoucher.
    /// </returns>
    [
        DataMemberAttribute('FromVoucher'),
        SysOperationLabelAttribute(literalstr("@SYS12371")),
        SysOperationHelpTextAttribute(literalstr("@SYS15227")),
        SysOperationGroupMemberAttribute('From'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public Voucher parmFromVoucher(Voucher _fromVoucher = fromVoucher)
    {
        fromVoucher = _fromVoucher;
        return fromVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Include details.
    /// </summary>
    /// <param name="_includeDetails">
    /// The new value of the data contract parameter Include details; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter Include details.
    /// </returns>
    [
        DataMemberAttribute('IncludeDetails'),
        SysOperationLabelAttribute(literalstr("@SYS316360")),
        SysOperationHelpTextAttribute(literalstr("@SYS26934")),
        SysOperationGroupMemberAttribute('Others'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public boolean parmIncludeDetails(boolean _includeDetails = includeDetails)
    {
        includeDetails = _includeDetails;
        return includeDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReconcileByVATRegisterDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter ToVoucher.
    /// </summary>
    /// <param name="_reconcileByVATRegisterDate">
    /// The new value of the data contract parameter ReconcileByVATRegisterDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter ReconcileByVATRegisterDate.
    /// </returns>
    [
        DataMemberAttribute('ReconcileByVATRegisterDate'),
        SysOperationLabelAttribute(literalstr("@GLS221140")),
        SysOperationHelpTextAttribute(literalstr("@GLS221141")),
        SysOperationGroupMemberAttribute('Others'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public boolean parmReconcileByVATRegisterDate(boolean _reconcileByVATRegisterDate = reconcileByVATRegisterDate)
    {
        reconcileByVATRegisterDate = _reconcileByVATRegisterDate;
        return reconcileByVATRegisterDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowDifferencesOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter ShowDifferencesOnly.
    /// </summary>
    /// <param name="_showDifferencesOnly">
    /// The new value of the data contract parameter ShowDifferencesOnly; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter ShowDifferencesOnly.
    /// </returns>
    [
        DataMemberAttribute('ShowDifferencesOnly'),
        SysOperationLabelAttribute(literalstr("@SYS57830")),
        SysOperationHelpTextAttribute(literalstr("@SYS57831")),
        SysOperationGroupMemberAttribute('Others'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public boolean parmShowDifferencesOnly(boolean _showDifferencesOnly = showDifferencesOnly)
    {
        showDifferencesOnly = _showDifferencesOnly;
        return showDifferencesOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the data contract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter ToDate.
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS7402")),
        SysOperationHelpTextAttribute(literalstr("@SYS2282")),
        SysOperationGroupMemberAttribute('To'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToMainAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter ToMainAccount.
    /// </summary>
    /// <param name="_toMainAccount">
    /// The new value of the data contract parameter ToMainAccount; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter ToMainAccount.
    /// </returns>
    [
        DataMemberAttribute('ToMainAccount'),
        SysOperationLabelAttribute(literalstr("@SYS135766")),
        SysOperationHelpTextAttribute(literalstr("@SYS135767")),
        SysOperationGroupMemberAttribute('To'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public MainAccountNum parmToMainAccount(MainAccountNum _toMainAccount = toMainAccount)
    {
        toMainAccount = _toMainAccount;
        return toMainAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter ToVoucher.
    /// </summary>
    /// <param name="_toVoucher">
    /// The new value of the data contract parameter ToVoucher; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter ToVoucher.
    /// </returns>
    [
        DataMemberAttribute('ToVoucher'),
        SysOperationLabelAttribute(literalstr("@SYS12371")),
        SysOperationHelpTextAttribute(literalstr("@SYS15227")),
        SysOperationGroupMemberAttribute('To'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public Voucher parmToVoucher(Voucher _toVoucher = toVoucher)
    {
        toVoucher = _toVoucher;
        return toVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    ///    true if the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (this.parmFromDate() > this.parmToDate() && this.parmToDate())
        {
            isValid = checkFailed("@SYS104511");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>