<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResAttributeDefaultValueHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class EcoResAttributeDefaultValueHelper
{
    EcoResAttributeTypeUnitOfMeasure attributeTypeUnitOfMeasure;
    EcoResValue                      lowerBoundValue;
    EcoResAttributeType              attributeType;
    EcoResBoundedAttributeTypeValue  boundedAttributeType;
    boolean                          isAttributeTypeBounded;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(EcoResAttributeType _ecoResAttributeType)
    {
        attributeType = _ecoResAttributeType;
        attributeTypeUnitOfMeasure = EcoResAttributeTypeUnitOfMeasure::findByAttributeType(attributeType);

        if (_ecoResAttributeType.hasBounds())
        {
            isAttributeTypeBounded = true;
            boundedAttributeType = EcoResBoundedAttributeTypeValue::findByAttributeType(attributeType);
            lowerBoundValue = EcoResValue::find(boundedAttributeType.LowerBound);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDefaultValue</Name>
				<Source><![CDATA[
    public boolean validateDefaultValue(EcoResValue _ecoResValue)
    {
        boolean ret = true;

        if (this.isAttributeTypeBounded)
        {
            ret = boundedAttributeType.isValid(_ecoResValue);
        }
        else if (_ecoResValue is EcoResTextValue && attributeType.IsEnumeration == NoYes::Yes)
        {
            ret = this.validateEnumeratedTextValue(_ecoResValue as EcoResTextValue);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultValue</Name>
				<Source><![CDATA[
    public EcoResValue getDefaultValue()
    {
        EcoResValue defaultValue;

        switch (attributeType.DataType)
        {
            case AttributeDataType::Currency:
                defaultValue = this.getDefaultCurrencyValue();
                break;

            case AttributeDataType::DateTime:
                defaultValue = this.getDefaultDateTimeValue();
                break;

            case AttributeDataType::Decimal:
                defaultValue = this.getDefaultDecimalValue();
                break;

            case AttributeDataType::Integer:
                defaultValue = this.getDefaultIntegerValue();
                break;

            case AttributeDataType::Text:
                defaultValue = this.getDefaultTextValue();
                break;

            case AttributeDataType::TrueFalse:
                defaultValue = this.getDefaultBooleanValue();
                break;
        }

        return defaultValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultValueFromAttribute</Name>
				<Source><![CDATA[
    public EcoResValue getDefaultValueFromAttribute(EcoResAttributeDefaultValue _attributeDefaultValue)
    {
        EcoResValue defaultValue;

        switch (attributeType.DataType)
        {
            case AttributeDataType::Currency:
                defaultValue = this.getDefaultCurrencyValue(_attributeDefaultValue.Value);
                break;

            case AttributeDataType::DateTime:
                defaultValue = this.getDefaultDateTimeValue(_attributeDefaultValue.Value);
                break;

            case AttributeDataType::Decimal:
                defaultValue = this.getDefaultDecimalValue(_attributeDefaultValue.Value);
                break;

            case AttributeDataType::Integer:
                defaultValue = this.getDefaultIntegerValue(_attributeDefaultValue.Value);
                break;

            case AttributeDataType::Text:
                defaultValue = this.getDefaultTextValue(_attributeDefaultValue.Value);
                break;

            case AttributeDataType::TrueFalse:
                defaultValue = this.getDefaultBooleanValue(_attributeDefaultValue.Value);
                break;
        }

        return defaultValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultCurrencyValue</Name>
				<Source><![CDATA[
    public EcoResCurrencyValue getDefaultCurrencyValue(RefRecId _ecoResValueRecId = 0)
    {
        EcoResCurrencyValue currencyValue;

        if (_ecoResValueRecId)
        {
            EcoResCurrencyValue ecoResAttributeValue = EcoResCurrencyValue::find(_ecoResValueRecId);
            currencyValue.CurrencyValue = ecoResAttributeValue.CurrencyValue;
            currencyValue.CurrencyCode = ecoResAttributeValue.CurrencyCode;
        }
        else if (isAttributeTypeBounded)
        {
            EcoResCurrencyValue currencyValueLower = (lowerBoundValue as EcoResCurrencyValue);
            currencyValue.CurrencyValue = currencyValueLower.CurrencyValue;
            currencyValue.CurrencyCode = currencyValueLower.CurrencyCode;
        }
        else
        {
            currencyValue.CurrencyCode = CompanyInfoHelper::standardCurrency();
        }

        return currencyValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDateTimeValue</Name>
				<Source><![CDATA[
    public EcoResDateTimeValue getDefaultDateTimeValue(RefRecId _ecoResValueRecId = 0)
    {
        EcoResDateTimeValue dateTimeValue;
        dateTimeValue.DateTimeValue = utcDateTimeNull();

        if (_ecoResValueRecId)
        {
            EcoResDateTimeValue ecoResAttributeValue = EcoResDateTimeValue::find(_ecoResValueRecId);
            dateTimeValue.DateTimeValue = ecoResAttributeValue.DateTimeValue;
        }
        else if (isAttributeTypeBounded)
        {
            EcoResDateTimeValue dateTimeValueLower = (lowerBoundValue as EcoResDateTimeValue);
            dateTimeValue.DateTimeValue = dateTimeValueLower.DateTimeValue;
        }

        return dateTimeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDecimalValue</Name>
				<Source><![CDATA[
    public EcoResFloatValue getDefaultDecimalValue(RefRecId _ecoResValueRecId = 0)
    {
        EcoResFloatValue floatValue;
        floatValue.FloatValue = 0.0;

        if (_ecoResValueRecId)
        {
            EcoResFloatValue ecoResAttributeValue = EcoResFloatValue::find(_ecoResValueRecId);
            floatValue.FloatValue = ecoResAttributeValue.FloatValue;
        }
        else if (isAttributeTypeBounded)
        {
            EcoResFloatValue floatValueLower = (lowerBoundValue as EcoResFloatValue);
            floatValue.FloatValue = floatValueLower.FloatValue;
        }

        floatValue.FloatUnitOfMeasure = attributeTypeUnitOfMeasure.DefaultUnitOfMeasure;
        return floatValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultIntegerValue</Name>
				<Source><![CDATA[
    public EcoResIntValue getDefaultIntegerValue(RefRecId _ecoResValueRecId = 0)
    {
        EcoResIntValue intValue;
        intValue.IntValue = 0;

        if (_ecoResValueRecId)
        {
            EcoResIntValue ecoResAttributeValue = EcoResIntValue::find(_ecoResValueRecId);
            intValue.IntValue = ecoResAttributeValue.IntValue;
        }
        else if (isAttributeTypeBounded)
        {
            EcoResIntValue intValueLower = (lowerBoundValue as EcoResIntValue);
            intValue.IntValue = intValueLower.IntValue;
        }

        intValue.IntUnitOfMeasure = attributeTypeUnitOfMeasure.DefaultUnitOfMeasure;
        return intValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultTextValue</Name>
				<Source><![CDATA[
    public EcoResTextValue getDefaultTextValue(RefRecId _ecoResValueRecId = 0)
    {
        EcoResTextValue textValue;

        if (_ecoResValueRecId)
        {
            EcoResTextValue ecoResAttributeValue = EcoResTextValue::find(_ecoResValueRecId);
            textValue.TextValue = ecoResAttributeValue.TextValue;
        }
        else if (attributeType.IsEnumeration)
        {
            EcoResEnumerationAttributeTypeValue enumerationAttributeTypeValue;
            EcoResTextValue lowerBoundTextValue;

            select firstonly enumerationAttributeTypeValue
            order by OrdinalNumber
                where enumerationAttributeTypeValue.AttributeType == attributeType.RecId
            join lowerBoundTextValue
                where enumerationAttributeTypeValue.Value == lowerBoundTextValue.RecId;

            textValue.TextValue = lowerBoundTextValue.TextValue;
        }
        return textValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultBooleanValue</Name>
				<Source><![CDATA[
    public EcoResBooleanValue getDefaultBooleanValue(RefRecId _ecoResValueRecId = 0)
    {
        EcoResBooleanValue booleanValue;
        if (_ecoResValueRecId)
        {
            EcoResBooleanValue ecoResAttributeValue = EcoResBooleanValue::find(_ecoResValueRecId);
            booleanValue.BooleanValue = ecoResAttributeValue.BooleanValue;
        }
        else
        {
            booleanValue.BooleanValue = NoYes::No;
        }
        return booleanValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateEnumeratedTextValue</Name>
				<Source><![CDATA[
    private boolean validateEnumeratedTextValue(EcoResTextValue _ecoResTextValue)
    {
        EcoResTextValue textValue;
        EcoResEnumerationAttributeTypeValue enumerationAttributeTypeValue;

        select firstonly RecId, Value
                from enumerationAttributeTypeValue
                where enumerationAttributeTypeValue.AttributeType == attributeType.RecId
            join textValue
                where enumerationAttributeTypeValue.Value == textValue.RecId
                    && textValue.TextValue == _ecoResTextValue.TextValue;

        return (enumerationAttributeTypeValue.RecId != 0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>