<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductWorkspaceFilterStructureStrategy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductWorkspaceFilterStructureStrategy</c> class applies a <c>SysIFilterStructureItem</c> class
/// to a <c>SysIQueryable</c> class. Category and datetime filters are applied to the queries in the variant, process and discrete workspace.
/// </summary>
[
    // Discrete workspace queries
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EngChgCaseDiscreteProduct)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResItemsMissingActiveBOMVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResItemsMissingActiveRouteVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResReleasedProductsMissingActiveBOMVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResReleasedProductsMissingActiveRouteVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResReleasedProductVariantsMissingActiveBOMVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResReleasedProductVariantsMissingActiveRouteVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResItemsProdTypeBOMExpiringBOM)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResItemsProdTypeBOMExpiringRoute)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResReleasedProductsWithExpiringBOM)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResReleasedProductVariantsWithExpiringBOM)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResReleasedProductsWithExpiringRoute)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResReleasedProductVariantsWithExpiringRoute)),

    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::DateTime, queryStr(EcoResItemsMissingActiveBOMVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::DateTime, queryStr(EcoResItemsMissingActiveRouteVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::DateTime, queryStr(EcoResReleasedProductsMissingActiveBOMVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::DateTime, queryStr(EcoResReleasedProductsMissingActiveRouteVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::DateTime, queryStr(EcoResReleasedProductVariantsMissingActiveBOMVersion)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::DateTime, queryStr(EcoResReleasedProductVariantsMissingActiveRouteVersion)),

    // Variant workspace queries
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResProductMasterPendingRelease)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResProductMasterPredefinedVariantDraft)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResProductMastersWithVariantsPendingRelease)),

    // Process workspace queries
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResProductProdTypeFormulaNoActiveFormulaTile)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::Integer, queryStr(EcoResProductProdTypeFormulaNoActiveRouteTile)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::DateTime, queryStr(EcoResProductProdTypeFormulaNoActiveFormulaTile)),
    SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::DateTime, queryStr(EcoResProductProdTypeFormulaNoActiveRouteTile))
]
public class EcoResProductWorkspaceFilterStructureStrategy extends SysFilterStructureStrategyQuery implements SysIFilterStructureStrategy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>resolve</Name>
				<Source><![CDATA[
    protected boolean resolve(SysIFilterValueType _filterValueType)
    {
        boolean result = false;

        if (_filterValueType.parmType() == SysFilterValueTypeEnum::Integer)
        {
            // if EcoResCategoryHierarchy filter has Equal operator set then we enable the EcoResProductCategory datasource; otherwise we disable it and show all records without categories
            if (_filterValueType.parmTypeIdentifier() == extendedTypeNum(EcoResCategoryHierarchyId))
            {
                QueryBuildDataSource ecoResProductCategoryQdbs = EcoResProductWorkspaceConfigurationHelper::getQueryBuildDataSource(query, tableNum(EcoResProductCategory));
                if (filterStructureItem.parmOperator() == SysFilterOperator::Equal)
                {
                    ecoResProductCategoryQdbs.enabled(true);
                    this.addLinkFromTableToFilter(ecoResProductCategoryQdbs, fieldNum(EcoResProductCategory, CategoryHierarchy));
                }
                else
                {
                    ecoResProductCategoryQdbs.enabled(false);
                }
                result = true;
            }
            else if (_filterValueType.parmTypeIdentifier() == extendedTypeNum(EcoResCategoryNestedSetLeft))
            {
                QueryBuildDataSource ecoResCategoryQdbs = EcoResProductWorkspaceConfigurationHelper::getQueryBuildDataSource(query, tableNum(EcoResCategory));
                this.addLinkFromTableToFilter(ecoResCategoryQdbs, fieldNum(EcoResCategory, NestedSetLeft));
                result = true;
            }
            else if (_filterValueType.parmTypeIdentifier() == extendedTypeNum(EcoResCategoryNestedSetRight))
            {
                QueryBuildDataSource ecoResCategoryQdbs = EcoResProductWorkspaceConfigurationHelper::getQueryBuildDataSource(query, tableNum(EcoResCategory));
                this.addLinkFromTableToFilter(ecoResCategoryQdbs, fieldNum(EcoResCategory, NestedSetRight));
                result = true;
            }
        }

        // Filter only EDT EcoResProductReleasedRecently
        if (_filterValueType.parmType() == SysFilterValueTypeEnum::DateTime
            && _filterValueType.parmTypeIdentifier() == extendedTypenum(EcoResProductReleasedRecently))
        {
            QueryBuildDataSource inventTableQdbs = EcoResProductWorkspaceConfigurationHelper::getQueryBuildDataSource(query, tableNum(InventTable));
            this.addLinkFromTableToFilter(inventTableQdbs, fieldNum(InventTable, CreatedDateTime));
            result = true;
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>