<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalDepBookJournalTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrades data from <c>AssetDepBookJournalTable</c> to <c>LedgerJournalTable</c> table.
/// </summary>
class ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalDepBookJournalTable extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncUpgradeAssetDepBookJournalTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Move <c>AssetDepBookJournalTable</c> data into a temporary table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBookJournalName), methodStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBookJournalName, preSyncUpgradeAssetDepBookJournalName)),
     UpgradeScriptTableAttribute('AssetDepBookJournalTable', false, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpgradeAssetDepBookJournalTable()
    {
        // Drop the AssetDepBookJournalTableUpgradeTmp table if it exists.
        this.executeSqlStatement(this.getSQLDropAssetDepBookJournalTableUpgradeTmp());

        // Create temp upgrade table.
        this.executeSqlStatement(this.getSQLCreateAssetDepBookJournalTableUpgradeTmp());

        // Move AssetDepBookJournalTable rows to temp table.
        this.executeSqlStatement(this.getSQLInsertAssetDepBookJournalTableUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpgradeAssetDepBookJournalTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the <c>AssetDepBookJournalTable</c> data from the temporary table into <c>LedgerJournalTable</c> table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBookJournalName), methodStr(ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalDepBookJournalName, postSyncUpgradeAssetDepBookJournalName)),
     UpgradeScriptTableAttribute(tableStr(LedgerJournalTable), true, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpgradeAssetDepBookJournalTable()
    {
        // Move the data into the LedgerJournalTable from the AssetDepBookJournalTableUpgradeTmp table
        this.executeSqlStatement(this.getSQLInsertLedgerJournalTable());

        // drop temporary upgrade table
        this.executeSqlStatement(this.getSQLDropAssetDepBookJournalTableUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDropAssetDepBookJournalTableUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLDropAssetDepBookJournalTableUpgradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETDEPBOOKJOURNALTABLEUPGRADETMP', 'U') IS NOT NULL
                DROP TABLE ASSETDEPBOOKJOURNALTABLEUPGRADETMP";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLCreateAssetDepBookJournalTableUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLCreateAssetDepBookJournalTableUpgradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETDEPBOOKJOURNALTABLEUPGRADETMP', 'U') IS NULL
                CREATE TABLE [dbo].[ASSETDEPBOOKJOURNALTABLEUPGRADETMP](
                    [BLOCKUSERGROUPID] [nvarchar](10) NOT NULL,
                    [BLOCKUSERID] [nvarchar](20) NOT NULL,
                    [DELETEPOSTEDLINES] [int] NOT NULL,
                    [DESCRIPTION] [nvarchar](60) NOT NULL,
                    [INUSEBY] [nvarchar](20) NOT NULL,
                    [JOURNALID] [nvarchar](20) NOT NULL,
                    [JOURNALNAMEID] [nvarchar](10) NOT NULL,
                    [JOURNALTOTALCREDIT] [numeric](32, 6) NOT NULL,
                    [JOURNALTOTALDEBIT] [numeric](32, 6) NOT NULL,
                    [JOURNALTYPE] [int] NOT NULL,
                    [LINESLIMIT] [int] NOT NULL,
                    [LOG] [nvarchar](255) NOT NULL,
                    [NUMOFLINES] [int] NOT NULL,
                    [ORIGINALJOURNALID] [nvarchar](20) NOT NULL,
                    [POSTED] [int] NOT NULL,
                    [POSTEDDATETIME] [datetime] NOT NULL,
                    [POSTEDDATETIMETZID] [int] NOT NULL,
                    [SESSIONID] [int] NOT NULL,
                    [SESSIONLOGINDATETIME] [datetime] NOT NULL,
                    [SESSIONLOGINDATETIMETZID] [int] NOT NULL,
                    [SYSTEMBLOCKED] [int] NOT NULL,
                    [MODIFIEDDATETIME] [datetime] NOT NULL,
                    [MODIFIEDBY] [nvarchar](20) NOT NULL,
                    [DATAAREAID] [nvarchar](4) NOT NULL,
                    [RECVERSION] [int] NOT NULL,
                    [PARTITION] [bigint] NOT NULL,
                    [RECID] [bigint] NOT NULL,
                 CONSTRAINT [I_11268JOURNALTABLEUPGRADETMPIDX] PRIMARY KEY CLUSTERED
                (
                    [PARTITION] ASC,
                    [DATAAREAID] ASC,
                    [JOURNALID] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                ) ON [PRIMARY]
                ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetDepBookJournalTableUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetDepBookJournalTableUpgradeTmp()
    {
        str sqlStatement = @"
            INSERT INTO [dbo].[ASSETDEPBOOKJOURNALTABLEUPGRADETMP]
                    ([BLOCKUSERGROUPID]
                    ,[BLOCKUSERID]
                    ,[DELETEPOSTEDLINES]
                    ,[DESCRIPTION]
                    ,[INUSEBY]
                    ,[JOURNALID]
                    ,[JOURNALNAMEID]
                    ,[JOURNALTOTALCREDIT]
                    ,[JOURNALTOTALDEBIT]
                    ,[JOURNALTYPE]
                    ,[LINESLIMIT]
                    ,[LOG]
                    ,[NUMOFLINES]
                    ,[ORIGINALJOURNALID]
                    ,[POSTED]
                    ,[POSTEDDATETIME]
                    ,[POSTEDDATETIMETZID]
                    ,[SESSIONID]
                    ,[SESSIONLOGINDATETIME]
                    ,[SESSIONLOGINDATETIMETZID]
                    ,[SYSTEMBLOCKED]
                    ,[MODIFIEDDATETIME]
                    ,[MODIFIEDBY]
                    ,[DATAAREAID]
                    ,[RECVERSION]
                    ,[PARTITION]
                    ,[RECID])
                SELECT [BLOCKUSERGROUPID]
                    ,[BLOCKUSERID]
                    ,[DELETEPOSTEDLINES]
                    ,[DESCRIPTION]
                    ,[INUSEBY]
                    ,[JOURNALID]
                    ,[JOURNALNAMEID]
                    ,[JOURNALTOTALCREDIT]
                    ,[JOURNALTOTALDEBIT]
                    ,[JOURNALTYPE]
                    ,[LINESLIMIT]
                    ,[LOG]
                    ,[NUMOFLINES]
                    ,[ORIGINALJOURNALID]
                    ,[POSTED]
                    ,[POSTEDDATETIME]
                    ,[POSTEDDATETIMETZID]
                    ,[SESSIONID]
                    ,[SESSIONLOGINDATETIME]
                    ,[SESSIONLOGINDATETIMETZID]
                    ,[SYSTEMBLOCKED]
                    ,[MODIFIEDDATETIME]
                    ,[MODIFIEDBY]
                    ,[DATAAREAID]
                    ,[RECVERSION]
                    ,[PARTITION]
                    ,[RECID]
                    FROM [dbo].[ASSETDEPBOOKJOURNALTABLE]
                    WHERE NOT EXISTS
                        (SELECT RECID FROM [dbo].[ASSETDEPBOOKJOURNALTABLEUPGRADETMP]
                        WHERE [ASSETDEPBOOKJOURNALTABLEUPGRADETMP].[JOURNALID] = [ASSETDEPBOOKJOURNALTABLE].[JOURNALID]
                            AND [ASSETDEPBOOKJOURNALTABLEUPGRADETMP].[DATAAREAID] = [ASSETDEPBOOKJOURNALTABLE].[DATAAREAID]
                            AND [ASSETDEPBOOKJOURNALTABLEUPGRADETMP].[PARTITION] = [ASSETDEPBOOKJOURNALTABLE].[PARTITION])
        ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertLedgerJournalTable</Name>
				<Source><![CDATA[
    private str getSQLInsertLedgerJournalTable()
    {
        str sqlStatement = strFmt(@"
            INSERT INTO [dbo].[LEDGERJOURNALTABLE]
                    ([USERBLOCKID]
                    ,[GROUPBLOCKID]
                    ,[INUSEBY]
                    ,[CURRENTOPERATIONSTAX]
                    ,[JOURNALNAME]
                    ,[JOURNALNUM]
                    ,[JOURNALTOTALCREDIT]
                    ,[JOURNALTOTALDEBIT]
                    ,[JOURNALTYPE]
                    ,[LINESLIMITBEFOREDISTRIBUTION]
                    ,[LOG]
                    ,[NAME]
                    ,[NUMOFLINES]
                    ,[ORIGINALJOURNALNUM]
                    ,[POSTED]
                    ,[POSTEDDATETIME]
                    ,[POSTEDDATETIMETZID]
                    ,[REMOVELINEAFTERPOSTING]
                    ,[SESSIONID]
                    ,[SESSIONLOGINDATETIME]
                    ,[SESSIONLOGINDATETIMETZID]
                    ,[SYSTEMBLOCKED]
                    ,[MODIFIEDBY]
                    ,[DATAAREAID]
                    ,[PARTITION])
                SELECT
                     [BLOCKUSERID]
                    ,[BLOCKUSERGROUPID]
                    ,[INUSEBY]
                    ,%1
                    ,[JOURNALNAMEID]
                    ,[JOURNALID]
                    ,[JOURNALTOTALCREDIT]
                    ,[JOURNALTOTALDEBIT]
                    ,%2
                    ,[LINESLIMIT]
                    ,[LOG]
                    ,[DESCRIPTION]
                    ,[NUMOFLINES]
                    ,[ORIGINALJOURNALID]
                    ,[POSTED]
                    ,[POSTEDDATETIME]
                    ,[POSTEDDATETIMETZID]
                    ,[DELETEPOSTEDLINES]
                    ,[SESSIONID]
                    ,[SESSIONLOGINDATETIME]
                    ,[SESSIONLOGINDATETIMETZID]
                    ,[SYSTEMBLOCKED]
                    ,[MODIFIEDBY]
                    ,[DATAAREAID]
                    ,[PARTITION]
                  FROM [dbo].[ASSETDEPBOOKJOURNALTABLEUPGRADETMP]
                    WHERE NOT EXISTS
                        (SELECT RECID FROM [dbo].[LEDGERJOURNALTABLE]
                        WHERE [LEDGERJOURNALTABLE].[JOURNALNUM] = [ASSETDEPBOOKJOURNALTABLEUPGRADETMP].[JOURNALID]
                            AND [LEDGERJOURNALTABLE].[DATAAREAID] = [ASSETDEPBOOKJOURNALTABLEUPGRADETMP].[DATAAREAID]
                            AND [LEDGERJOURNALTABLE].[PARTITION] = [ASSETDEPBOOKJOURNALTABLEUPGRADETMP].[PARTITION])",
                    enum2int(CurrentOperationsTax::None),
                    enum2int(LedgerJournalType::Assets));

        return sqlStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>