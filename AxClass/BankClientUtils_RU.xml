<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankClientUtils_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class BankClientUtils_RU
{
    #BankClient_RU
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fieldName2OperationType</Name>
				<Source><![CDATA[
public static BankClientOperationType_RU fieldName2OperationType(BankClientFieldName_RU _fieldName)
    {
        BankClientOperationType_RU ret;
        ;
        switch (_fieldName)
        {
            case    BankClientFieldName_RU::Encoding,
                    BankClientFieldName_RU::CreationDate,
                    BankClientFieldName_RU::CreationTime,
                    BankClientFieldName_RU::ApplReceiverName,
                    BankClientFieldName_RU::ApplSenderName,
                    BankClientFieldName_RU::FormatVersion:
                ret = BankClientOperationType_RU::Export;
                break;

            case    BankClientFieldName_RU::PeriodStartDate,
                    BankClientFieldName_RU::PeriodEndDate,
                    BankClientFieldName_RU::AccountNum,
                    BankClientFieldName_RU::StartBalance,
                    BankClientFieldName_RU::EndBalance,
                    BankClientFieldName_RU::PaymentInflows,
                    BankClientFieldName_RU::PaymentOutflows:
                ret = BankClientOperationType_RU::ImportBalance;
                break;

            case    BankClientFieldName_RU::DocumentType,
                    BankClientFieldName_RU::DocumentNumber,
                    BankClientFieldName_RU::DocumentDate,
                    BankClientFieldName_RU::Amount,
                    BankClientFieldName_RU::PaymentPurpose,
                    BankClientFieldName_RU::Currency,
                    BankClientFieldName_RU::UIN:
                ret = BankClientOperationType_RU::ExportImport;
                break;

            case    BankClientFieldName_RU::SlipDate,
                    BankClientFieldName_RU::SlipTime,
                    BankClientFieldName_RU::SlipContents:
                ret = BankClientOperationType_RU::Import;
                break;

            case    BankClientFieldName_RU::PaymentType,
                    BankClientFieldName_RU::OrderOfPayment,
                    BankClientFieldName_RU::CurrencyTransfer:
                ret = BankClientOperationType_RU::Export;
                break;

            case    BankClientFieldName_RU::WriteoffDate,
                    BankClientFieldName_RU::ReceiptDate:
                ret = BankClientOperationType_RU::Import;
                break;

            case    BankClientFieldName_RU::PayerBankAccount,
                    BankClientFieldName_RU::PayerRRC,
                    BankClientFieldName_RU::PayeeRRC,
                    BankClientFieldName_RU::PayerINN,
                    BankClientFieldName_RU::PayerName1,
                    BankClientFieldName_RU::PayerBankName,
                    BankClientFieldName_RU::PayerBankAddress,
                    BankClientFieldName_RU::PayerBankCorrAccount,
                    BankClientFieldName_RU::PayerBankBIC,
                    BankClientFieldName_RU::PayeeBankAccount,
                    BankClientFieldName_RU::PayeeINN,
                    BankClientFieldName_RU::PayeeName1,
                    BankClientFieldName_RU::PayeeBankName,
                    BankClientFieldName_RU::PayeeBankAddress,
                    BankClientFieldName_RU::PayeeBankCorrAccount,
                    BankClientFieldName_RU::PayeeBankBIC,
                    BankClientFieldName_RU::Payer,
                    BankClientFieldName_RU::PayerAccount,
                    BankClientFieldName_RU::PayerName2,
                    BankClientFieldName_RU::PayerName3,
                    BankClientFieldName_RU::Payee,
                    BankClientFieldName_RU::PayeeAccount,
                    BankClientFieldName_RU::PayeeName2,
                    BankClientFieldName_RU::PayeeName3:
                    ret = BankClientOperationType_RU::ExportImport;
                break;

            case    BankClientFieldName_RU::PaymentStatusCode,
                    BankClientFieldName_RU::BudgetReceiptClassCode,
                    BankClientFieldName_RU::RCOAD,
                    BankClientFieldName_RU::PaymentBaseCode,
                    BankClientFieldName_RU::TaxPeriod,
                    BankClientFieldName_RU::PaymentDocNum,
                    BankClientFieldName_RU::PaymentDocDate,
                    BankClientFieldName_RU::PaymentTypeCode,
                    BankClientFieldName_RU::CurrencyCodeForPurchase,
                    BankClientFieldName_RU::ResponsibleEmployee,
                    BankClientFieldName_RU::CommissionWriteoffAccount,
                    BankClientFieldName_RU::OperationType,
                    BankClientFieldName_RU::TransitCurrencyAccount:
                ret = BankClientOperationType_RU::Export;
                break;
        }
        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>fieldName2Requisite</Name>
				<Source><![CDATA[
public static BankClientRequisiteIdentifier_RU fieldName2Requisite(BankClientFieldName_RU _fieldName)
    {
        BankClientRequisiteIdentifier_RU ret;
        ;
        switch (_fieldName)
        {
            case BankClientFieldName_RU::Encoding:
                ret = #drEncoding;
                break;
            case BankClientFieldName_RU::CreationDate:
                ret = #drCreationDate;
                break;
            case BankClientFieldName_RU::CreationTime:
                ret = #drCreationTime;
                break;
            case BankClientFieldName_RU::PeriodStartDate:
                ret = #drPeriodStartDate;
                break;
            case BankClientFieldName_RU::PeriodEndDate:
                ret = #drPeriodEndDate;
                break;
            case BankClientFieldName_RU::AccountNum:
                ret = #drAccountNum;
                break;
            case BankClientFieldName_RU::StartBalance:
                ret = #drStartBalance;
                break;
            case BankClientFieldName_RU::EndBalance:
                ret = #drEndBalance;
                break;
            case BankClientFieldName_RU::PaymentInflows:
                ret = #drPaymentInflows;
                break;
            case BankClientFieldName_RU::PaymentOutflows:
                ret = #drPaymentOutflows;
                break;
            case BankClientFieldName_RU::DocumentType:
                ret = #drDocumentType;
                break;
            case BankClientFieldName_RU::DocumentNumber:
                ret = #drDocumentNumber;
                break;
            case BankClientFieldName_RU::DocumentDate:
                ret = #drDocumentDate;
                break;
            case BankClientFieldName_RU::Amount:
                ret = #drAmount;
                break;
            case BankClientFieldName_RU::SlipDate:
                ret = #drSlipDate;
                break;
            case BankClientFieldName_RU::SlipTime:
                ret = #drSlipTime;
                break;
            case BankClientFieldName_RU::SlipContents:
                ret = #drSlipContents;
                break;
            case BankClientFieldName_RU::PaymentPurpose:
                ret = #drPaymentPurpose;
                break;
            case BankClientFieldName_RU::PaymentType:
                ret = #drPaymentType;
                break;
            case BankClientFieldName_RU::OrderOfPayment:
                ret = #drOrderOfPayment;
                break;
            case BankClientFieldName_RU::CurrencyTransfer:
                ret = #drCurrencyTransfer;
                break;
            case BankClientFieldName_RU::Currency:
                ret = #drCurrency;
                break;
            case BankClientFieldName_RU::WriteoffDate:
                ret = #drWriteoffDate;
                break;
            case BankClientFieldName_RU::PayerBankAccount:
                ret = #drPayerBankAccount;
                break;
            case BankClientFieldName_RU::PayerINN:
                ret = #drPayerINN;
                break;
            case BankClientFieldName_RU::PayerName1:
                ret = #drPayerName1;
                break;
            case BankClientFieldName_RU::PayerBankName:
                ret = #drPayerBankName;
                break;
            case BankClientFieldName_RU::PayerBankAddress:
                ret = #drPayerBankAddress;
                break;
            case BankClientFieldName_RU::PayerBankCorrAccount:
                ret = #drPayerBankCorrAccount;
                break;
            case BankClientFieldName_RU::PayerBankBIC:
                ret = #drPayerBankBIC;
                break;
            case BankClientFieldName_RU::ReceiptDate:
                ret = #drReceiptDate;
                break;
            case BankClientFieldName_RU::PayeeBankAccount:
                ret = #drPayeeBankAccount;
                break;
            case BankClientFieldName_RU::PayeeINN:
                ret = #drPayeeINN;
                break;
            case BankClientFieldName_RU::PayeeName1:
                ret = #drPayeeName1;
                break;
            case BankClientFieldName_RU::PayeeBankName:
                ret = #drPayeeBankName;
                break;
            case BankClientFieldName_RU::PayeeBankAddress:
                ret = #drPayeeBankAddress;
                break;
            case BankClientFieldName_RU::PayeeBankCorrAccount:
                ret = #drPayeeBankCorrAccount;
                break;
            case BankClientFieldName_RU::PayeeBankBIC:
                ret = #drPayeeBankBIC;
                break;
            case BankClientFieldName_RU::PaymentStatusCode:
                ret = #drPaymentStatusCode;
                break;
            case BankClientFieldName_RU::PayerRRC:
                ret = #drPayerRRC;
                break;
            case BankClientFieldName_RU::PayeeRRC:
                ret = #drPayeeRRC;
                break;
            case BankClientFieldName_RU::BudgetReceiptClassCode:
                ret = #drBudgetReceiptClassCode;
                break;
            case BankClientFieldName_RU::RCOAD:
                ret = #drRCOAD;
                break;
            case BankClientFieldName_RU::PaymentBaseCode:
                ret = #drPaymentBaseCode;
                break;
            case BankClientFieldName_RU::TaxPeriod:
                ret = #drTaxPeriod;
                break;
            case BankClientFieldName_RU::PaymentDocNum:
                ret = #drPaymentDocNum;
                break;
            case BankClientFieldName_RU::PaymentDocDate:
                ret = #drPaymentDocDate;
                break;
            case BankClientFieldName_RU::PaymentTypeCode:
                ret = #drPaymentTypeCode;
                break;
            case BankClientFieldName_RU::CurrencyCodeForPurchase:
                ret = #drCurrencyCodeForPurchase;
                break;
            case BankClientFieldName_RU::ResponsibleEmployee:
                ret = #drResponsibleEmployee;
                break;
            case BankClientFieldName_RU::CommissionWriteoffAccount:
                ret = #drCommissionWriteoffAccount;
                break;
            case BankClientFieldName_RU::TransitCurrencyAccount:
                ret = #drTransitCurrencyAccount;
                break;
            case BankClientFieldName_RU::ApplReceiverName:
                ret = #drApplReceiverName;
                break;
            case BankClientFieldName_RU::ApplSenderName:
                ret = #drApplSenderName;
                break;
            case BankClientFieldName_RU::FormatVersion:
                ret = #drFormatVersion;
                break;
            case BankClientFieldName_RU::OperationType:
                ret = #drOperationType;
                break;
            case BankClientFieldName_RU::Payer:
                ret = #drPayer;
                break;
            case BankClientFieldName_RU::PayerAccount:
                ret = #drPayerAccount;
                break;
            case BankClientFieldName_RU::PayerName2:
                ret = #drPayerName2;
                break;
            case BankClientFieldName_RU::PayerName3:
                ret = #drPayerName3;
                break;
            case BankClientFieldName_RU::Payee:
                ret = #drPayee;
                break;
            case BankClientFieldName_RU::PayeeAccount:
                ret = #drPayeeAccount;
                break;
            case BankClientFieldName_RU::PayeeName2:
                ret = #drPayeeName2;
                break;
            case BankClientFieldName_RU::PayeeName3:
                ret = #drPayeeName3;
                break;
            case BankClientFieldName_RU::UIN:
                ret = #drUIN;
                break;
        }
        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>getSequenceForDateFormat</Name>
				<Source><![CDATA[
    public static int getSequenceForDateFormat( DateFormat _dateFormat)
    {
        ;

        switch (_dateFormat)
        {
            case DateFormat::YMD:
                return 321;
            case DateFormat::DMY:
                return 123;
            case DateFormat::DYM:
                return 132;
            case DateFormat::MDY:
                return 213;
            case DateFormat::MYD:
                return 231;
            case DateFormat::YDM:
                return 312;
            default:
                return 123;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>operationAllowed</Name>
				<Source><![CDATA[
    public static boolean operationAllowed( BankClientOperationType_RU currentOperation,
                                            BankClientOperationType_RU fieldValue)
    {
        ;
        return  (currentOperation == fieldValue) ||
                (fieldValue       == BankClientOperationType_RU::ExportImport &&
                    (currentOperation == BankClientOperationType_RU::Export ||
                     currentOperation == BankClientOperationType_RU::Import)     );
    }
]]></Source>
			</Method>
			<Method>
				<Name>sectionType2EndCode</Name>
				<Source><![CDATA[
    public static BankClientRequisiteIdentifier_RU sectionType2EndCode(BankClientSectionType_RU _sectionType)
    {
        BankClientRequisiteIdentifier_RU ret;
        ;
        switch (_sectionType)
        {
            case BankClientSectionType_RU::File:
                ret = #drseFile;
                break;
            case BankClientSectionType_RU::ImportBalance:
                ret = #drseImportBalance;
                break;
            case BankClientSectionType_RU::PaymentDocument:
                ret = #drsePaymentDocument;
                break;
        }
        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>sectionType2StartCode</Name>
				<Source><![CDATA[
    public static BankClientRequisiteIdentifier_RU sectionType2StartCode(BankClientSectionType_RU _sectionType)
    {
        BankClientRequisiteIdentifier_RU ret;
        ;
        switch (_sectionType)
        {
            case BankClientSectionType_RU::File:
                ret = #drsbFile;
                break;
            case BankClientSectionType_RU::ImportBalance:
                ret = #drsbImportBalance;
                break;
            case BankClientSectionType_RU::PaymentDocument:
                ret = #drsbPaymentDocument;
                break;
        }
        return ret;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>