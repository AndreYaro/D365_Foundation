<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostSheetFactory</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CostSheetFactory
{
    CostSheetId sheetId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clearCachedData</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Removes data from the <c>CostSheetCostGroupImpact</c> and <c>CostSheetCache</c> tables.
    /// </summary>
    /// <remarks>
    ///    This method must be called every time that changes appear in the cost groups or the costing sheet.
    /// </remarks>
    public void clearCachedData()
    {
        CostSheetCostGroupImpact    costSheetCostGroupImpact;
        CostSheetCache              costSheetCache;

        delete_from costSheetCostGroupImpact
            where costSheetCostGroupImpact.SheetId == sheetId;

        if (CostSheetCacheClearByTruncateTableFlight::instance().isEnabled())
        {
            CostSheetCachePurgeJob costSheetCachePurgeJob = new CostSheetCachePurgeJob();

            costSheetCachePurgeJob.runTruncateTable();
        }
        else
        {
            delete_from costSheetCache
                where costSheetCache.SheetId == sheetId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCostSheet</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>CostSheet</c> class for a specific mode.
    /// </summary>
    /// <param name="_modeStrategy">
    ///    The mode in which the costing sheet will operate.
    /// </param>
    /// <returns>
    ///    The instance of the <c>CostSheet</c> class.
    /// </returns>
    /// <remarks>
    ///    The <paramref name="_costType" /> parameter indicates which subtree of the costing sheet to load.
    ///    It can improve the performance of a costing sheet calculation.The <paramref
    ///    name="_costCalcTransData" /> parameter can improve the performance of a costing sheet calculation.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The <c>CostCalcTransData</c> class is provided when a costing sheet that is in any mode but the
    ///    <c>Calculation</c> mode is created.
    /// </exception>
    public CostSheet createCostSheet(CostSheetModeStrategy _modeStrategy)
    {
        return _modeStrategy.createCostSheet(sheetId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        sheetId = CostSheetTable::defaultCostSheetTable().SheetId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        // RunOn:CalledFrom
    public static CostSheetFactory construct(boolean _flush = false)
    {
        CostSheetFactory costSheetFactory = new CostSheetFactory();

        return costSheetFactory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>