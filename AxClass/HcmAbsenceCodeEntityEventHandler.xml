<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmAbsenceCodeEntityEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles events for <c>HcmAbsenceCodeEntity</c> extension.
/// </summary>
public class HcmAbsenceCodeEntityEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>HcmAbsenceCodeEntity_onMappedEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a job identification to record after mapping to the entity.
    /// </summary>
    /// <param name="_sender"><c>HcmAbsenceCodeEntity</c> raising the event.</param>
    /// <param name="_eventArgs">The arguments of this event.</param>
    [DataEventHandler(tableStr(HcmAbsenceCodeEntity), DataEventType::MappedEntityToDataSource), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void HcmAbsenceCodeEntity_onMappedEntityToDataSource(Common _sender, DataEventArgs _eventArgs)
    {
        DataEntityContextEventArgs contextEventArgs = _eventArgs as DataEntityContextEventArgs;
        DataEntityRuntimeContext entityCtx = contextEventArgs.parmEntityContext();
        DataEntityDataSourceRuntimeContext dataSourceCtx = contextEventArgs.parmEntityDataSourceContext();

        if (entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
            && dataSourceCtx.name() == dataEntityDataSourceStr(HcmAbsenceCodeEntity, HRMAbsenceCode))
        {
            HcmAbsenceCodeEntity hcmAbsenceCodeEntity = _sender as HcmAbsenceCodeEntity;
            HRMAbsenceCode hrmAbsenceCode = dataSourceCtx.getBuffer();

            HcmAbsenceCodeEntityEventHandler::defaultJobIdentificationId(hcmAbsenceCodeEntity);
            hrmAbsenceCode.JmgJobId = hcmAbsenceCodeEntity.JobIdentification;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmAbsenceCodeEntity_onPersistedEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs after persisting entity to skip validation of job identification.
    /// </summary>
    /// <param name="_sender"><c>HcmAbsenceCodeEntity</c> raising the event.</param>
    /// <param name="_eventArgs">The arguments of this event.</param>
    [DataEventHandler(tableStr(HcmAbsenceCodeEntity), DataEventType::PersistedEntity), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void HcmAbsenceCodeEntity_onPersistedEntity(Common _sender, DataEventArgs _eventArgs)
    {
        HcmAbsenceCodeEntity hcmAbsenceCodeEntity = _sender as HcmAbsenceCodeEntity;
        hcmAbsenceCodeEntity.skipDataSourceValidateField(fieldNum(HcmAbsenceCodeEntity, JobIdentification), true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmAbsenceCodeEntity_onDefaultedRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs after selecting defaultRow to get job identification.
    /// </summary>
    /// <param name="_sender"><c>HcmAbsenceCodeEntity</c> raising the event.</param>
    /// <param name="_eventArgs">The arguments of this event.</param>
    [DataEventHandler(tableStr(HcmAbsenceCodeEntity), DataEventType::DefaultedRow), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void HcmAbsenceCodeEntity_onDefaultedRow(Common _sender, DataEventArgs _eventArgs)
    {
        HcmAbsenceCodeEntity hcmAbsenceCodeEntity = _sender as HcmAbsenceCodeEntity;

        HcmAbsenceCodeEntityEventHandler::defaultJobIdentificationId(hcmAbsenceCodeEntity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultJobIdentificationId</Name>
				<Source><![CDATA[
    private static void defaultJobIdentificationId(HcmAbsenceCodeEntity _hcmAbsenceCodeEntity)
    {
        if (!_hcmAbsenceCodeEntity.JobIdentification)
        {
            _hcmAbsenceCodeEntity.JobIdentification = HRMAbsenceCode::getNextJobId();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>