<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesLineCopyFromProjInvoiceItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesLineCopyFromSource</c> class is responsible for copying <c>SalesLine</c> from a <c>ProjInvoiceItem</c>.
/// </summary>
[SalesLineCopyFromSourceFactory(tableStr(ProjInvoiceItem))]
class SalesLineCopyFromProjInvoiceItem extends SalesLineCopyFromSource
{
    ProjInvoiceItem sourceProjInvoiceItem;
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateTaxInformation_IN</Name>
				<Source><![CDATA[
    public void updateTaxInformation_IN()
    {
        if (TaxIntegrationUtils::isTaxInformationEnabled())
        {
            TransTaxInformationHelper::copyTransTaxInformation(sourceProjInvoiceItem, salesLine);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCopy</Name>
				<Source><![CDATA[
    public boolean canCopy()
    {
        if (super() && deleteLines && sourceProjInvoiceItem.SalesId == salesTable.SalesId)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriceDiscLineChangePolicy</Name>
				<Source><![CDATA[
    protected void updatePriceDiscLineChangePolicy()
    {
        salesLine.setPriceDiscChangePolicy(PriceDiscSystemSource::Project);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyFromSource</Name>
				<Source><![CDATA[
    protected void copyFromSource()
    {
        super();

        salesLine.initFromProjInvoiceItem(sourceProjInvoiceItem, copyPrecisely, !searchPrice, copyQty, tmpFrmVirtualLine.Qty);

        this.adjustProjectRevenue_PSA();

        // <GMY>
        if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        {
            salesCopying.setRefInvoice_MY(salesLine, sourceProjInvoiceItem.projInvoiceJour());
        }
        
        salesLine.CreditNoteReasonCode = salesCopying.copyReasonTableRef(salesCopying.parmReasonTableRef());
        // </GMY>
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustProjectRevenue_PSA</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adjusts the project revenue for the specified invoice line.
    /// </summary>
    protected void adjustProjectRevenue_PSA()
    {
        ProjRevenueTransSale      projRevenueTransSale;
        ProjProposalRevenue       projProposalRevenue;
        ProjProposalRevenueDetail projProposalRevenueDetail;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            ProjProposalItem projProposalItem = ProjProposalItem::findInvent(sourceProjInvoiceItem.InventTransId);

            select RecId from projProposalRevenueDetail
            join forupdate RecId, TransStatus from projRevenueTransSale
                where projRevenueTransSale.RecId == projProposalRevenueDetail.SaleRefRecId
            join RecId from projProposalRevenue
                where projProposalRevenueDetail.ProposalRefRecId == projProposalRevenue.RecId
                   && projProposalRevenue.ProposalId             == projProposalItem.ProposalId
                   && projProposalRevenue.psaContractLineNum     == projProposalItem.psaContractLineNum
                   && (projProposalRevenue.IsRetained == NoYes::Yes
                    || projProposalRevenue.IsReleased == NoYes::Yes);

            if (projRevenueTransSale)
            {
                projRevenueTransSale.TransStatus = (projRevenueTransSale.TransStatus == ProjTransStatus::MarkedCreditnote) ? ProjTransStatus::Invoiced :
                                                    ProjTransStatus::MarkedCreditnote;
                projRevenueTransSale.update();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveCurrencyCode</Name>
				<Source><![CDATA[
    protected CurrencyCode retrieveCurrencyCode()
    {
        CurrencyCode currencyCode;

        if (salesLine.currencyCode != sourceProjInvoiceItem.CurrencyId)
        {
            currencyCode = sourceProjInvoiceItem.CurrencyId;
        }
        
        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSourceQty</Name>
				<Source><![CDATA[
    public Qty retrieveSourceQty()
    {
        return sourceProjInvoiceItem.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSourceInventTransId</Name>
				<Source><![CDATA[
    public InventTransId retrieveSourceInventTransId()
    {
        return sourceProjInvoiceItem.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAgreementRelatedData</Name>
				<Source><![CDATA[
    protected void copyAgreementRelatedData()
    {
        //check if the agreement line from the original sales line can be used
        if (this.mustFindAgreementLine())
        {
            agreementLine = AgreementLine::findProjInvoiceItem(sourceProjInvoiceItem.RecId);
            if (agreementLine.Agreement != salesTable.MatchingAgreement)
            {
                agreementLine = null;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(SalesLine _salesLine, SalesTable _salesTable, TmpFrmVirtual _tmpFrmVirtualLines, SalesCopying _salesCopying)
    {
        super(_salesLine, _salesTable, _tmpFrmVirtualLines, _salesCopying);
        sourceProjInvoiceItem = ProjInvoiceItem::findRecId(_tmpFrmVirtualLines.RecordNo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSource</Name>
				<Source><![CDATA[
    public Common retrieveSource()
    {
        return sourceProjInvoiceItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBasedOnSource</Name>
				<Source><![CDATA[
    protected void updateBasedOnSource()
    {
        salesCopying.updateInvoiceCreditCopy(salesLine, sourceProjInvoiceItem);

        sourceProjInvoiceItem = ProjInvoiceItem::findRecId(tmpFrmVirtualLine.RecordNo);
        if (salesCopying.settleInvoiceTrans())
        {
            salesCopying.markForSettlement(sourceProjInvoiceItem);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>