<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResCalendarDateLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Represents a capacity timeslot for specific calendar date.
/// </summary>
class ResCalendarDateLine
{
    #timeconstants

    const int secondsPerHour = #SecondsPerHour;
    const int hoursPerDay    = #hoursPerDay;
    const int secondsPerMinute = #secondsPerMinute;

    TimeOfDay fromTime;
    TimeOfDay toTime;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ResCalendarDateLine construct()
    {
        return new ResCalendarDateLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs new instance of capacity timeslot object.
    /// </summary>
    /// <param name = "_fromTime">The beginning of the timeslot.</param>
    /// <param name = "_toTime">The end of the timeslot.</param>
    /// <returns></returns>
    public static ResCalendarDateLine newFromParameter(TimeOfDay _fromTime, TimeOfDay _toTime)
    {
        ResCalendarDateLine dateLine = ResCalendarDateLine::construct();

        dateLine.fromtime  = _fromTime;
        dateLine.toTime    = _toTime;

        return dateLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ToString</Name>
				<Source><![CDATA[
    public str ToString()
    {
        return System.String::Format('{0:d2}:{1:d2}-{2:d2}:{3:d2}', this.getStartHour(), this.getStartSeconds() div secondsPerMinute, this.getEndHour(), this.getEndSeconds() div secondsPerMinute);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromTime</Name>
				<Source><![CDATA[
    public TimeOfDay parmFromTime(TimeOfDay _fromTime = fromTime)
    {
        fromTime = _fromTime;
        return fromTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToTime</Name>
				<Source><![CDATA[
    public TimeOfDay parmToTime(TimeOfDay _toTime = toTime)
    {
        toTime = _toTime;
        return toTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCapacitySlices</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves hourly capacity slices for current capacity timeslot.
    /// </summary>
    /// <returns>A collection of hourly capacity slices.</returns>
    public Set getCapacitySlices()
    {
        Set slices = ResCalendarCapacityHourSlice::newSet();

        int i;

        int startHour = this.getStartHour();
        int startSeconds = this.getStartSeconds();

        int endHour = this.getEndHour();
        int endSeconds = this.getEndSeconds();

        for (i = startHour; i <= endHour; i++)
        {
            ResCalendarCapacityHourSlice slice = ResCalendarCapacityHourSlice::construct();
            slice.parmHour(i);

            if (i == startHour)
            {
                slice.parmStart(startSeconds);
            }

            if (i == endHour)
            {
                slice.parmEnd(endSeconds);
            }
            else if (i >= startHour && i < endHour)
            {
                slice.parmEnd(secondsPerHour);
            }

            if (slice.parmStart() != slice.parmEnd())
            {
                slices.add(slice.normalize());
            }
        }

        return slices;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartHour</Name>
				<Source><![CDATA[
    /// <summary>
    /// The beginning hour of the current timeslot.
    /// </summary>
    /// <returns>The hour that the current timeslot begins at.</returns>
    public int getStartHour()
    {
        return fromtime div secondsPerHour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEndHour</Name>
				<Source><![CDATA[
    /// <summary>
    /// The end hour of the current timeslot.
    /// </summary>
    /// <returns>The hour that the current timeslot ends at.</returns>
    public int getEndHour()
    {
        return toTime div secondsPerHour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartSeconds</Name>
				<Source><![CDATA[
    /// <summary>
    /// The beginning time of the current capacity timeslot in seconds.
    /// </summary>
    /// <returns>The beginning time in seconds.</returns>
    public Seconds getStartSeconds()
    {
        return fromtime mod secondsPerHour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEndSeconds</Name>
				<Source><![CDATA[
    /// <summary>
    /// The end time of the current capacity timeslot in seconds.
    /// </summary>
    /// <returns>The end time in seconds.</returns>
    public Seconds getEndSeconds()
    {
        return toTime mod secondsPerHour;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
