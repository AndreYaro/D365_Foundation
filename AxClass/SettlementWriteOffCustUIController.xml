<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SettlementWriteOffCustUIController</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>SettlementWriteOffCustUIController</c> class provides customer specific functionality for settle remainder controls.
/// </summary>
[ExportAttribute(identifierStr(Dynamics.AX.Application.SettlementWriteOffUIController)),
    ExportMetadata(enumStr(ModuleCustVend), enumLiteralStr(ModuleCustVend, Cust))]
internal final class SettlementWriteOffCustUIController extends SettlementWriteOffUIController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>openSettlementWriteOffDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the <c>CustSettleWriteOffDialog</c> dialog.
    /// </summary>
    /// <param name = "_args">The arguments to pass to the form.</param>
    internal void openSettlementWriteOffDialog(Args _args)
    {
        new MenuFunction(menuItemDisplayStr(CustSettlementWriteOffDialog), MenuItemType::Display).run(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldEnableWriteOffRemainderControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the write-off remainder control can be enabled.
    /// </summary>
    /// <param name = "_contract">The settlement write-off contract.</param>
    /// <returns>true if the control can be enabled; otherwise, false.</returns>
    internal protected boolean shouldEnableWriteOffRemainderControl(CustVendOpenTransManager _manager)
    {
        boolean enableControl = super(_manager);

        if (enableControl)
        {
            enableControl = _manager.getMarkedTotalMst() > 0
                && this.getOriginatorLineAmount() <= 0;
        }

        return enableControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldShowSettleRemainderControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the settle remainder button should be visible on the form.
    /// </summary>
    /// <returns>True if the button should be visible; otherwise, false.</returns>
    internal boolean shouldShowSettleRemainderControl()
    {
        return CustParameters::find().SettlementWriteOffEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new ()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>