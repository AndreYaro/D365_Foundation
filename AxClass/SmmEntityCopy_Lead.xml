<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmmEntityCopy_Lead</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SmmEntityCopy_Lead extends SmmEntityCopy
{
    DialogField                 fieldOpportunities;
    DialogField                 fieldLeads;

    smmLeadRelTable  smmLeadRelTable, smmLeadRelTableCopy;
    smmLeadTable     smmLeadTable, smmLeadTableCopy;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyCampaigns</Name>
				<Source><![CDATA[
    // Copy all campaigns related to the entity
    public void copyCampaigns()
    {
        insert_recordset smmLeadRelTableCopy (RefTableId, RefRecId, LeadId)
            select RefTableId, RefRecId from smmLeadRelTable
                where smmLeadRelTable.RefTableId == (tablenum(smmCampaignTable)) &&
                      smmLeadRelTable.LeadId == commonOrig.(fieldId)
            join LeadId from smmLeadTableCopy
                where smmLeadTableCopy.RecId == copyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyLeads</Name>
				<Source><![CDATA[
    // Copy all leads related to the entity
    private void copyLeads()
    {
        insert_recordset smmLeadRelTableCopy (RefTableId, RefRecId, LeadId)
            select RefTableId, RefRecId from smmLeadRelTable
                where smmLeadRelTable.RefTableId == (tablenum(smmLeadTable)) &&
                      smmLeadRelTable.LeadId == commonOrig.(fieldId)
            join LeadId from smmLeadTableCopy
                where smmLeadTableCopy.RecId == copyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyOpportunities</Name>
				<Source><![CDATA[
    // Copy all opportunities related to the entity
    public void copyOpportunities()
    {
        insert_recordset smmLeadRelTableCopy (RefTableId, RefRecId, LeadId)
            select RefTableId, RefRecId from smmLeadRelTable
                where smmLeadRelTable.RefTableId == (tablenum(smmOpportunityTable)) &&
                      smmLeadRelTable.LeadId == commonOrig.(fieldId)
            join LeadId from smmLeadTableCopy
                where smmLeadTableCopy.RecId == copyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyProjects</Name>
				<Source><![CDATA[
    // Copy all projects related to the entity
    public void copyProjects()
    {
        insert_recordset smmLeadRelTableCopy (RefTableId, RefRecId, LeadId)
            select RefTableId, RefRecId from smmLeadRelTable
                where smmLeadRelTable.RefTableId == (tablenum(ProjTable)) &&
                      smmLeadRelTable.LeadId == commonOrig.(fieldId)
            join LeadId from smmLeadTableCopy
                where smmLeadTableCopy.RecId == copyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyRecords</Name>
				<Source><![CDATA[
    // Copy additional records specific for Lead
    public void copyRecords()
    {
        super();

        if (includeCampaigns)
        {
            this.copyCampaigns();
        }

        if (includeOpportunities)
        {
            this.copyOpportunities();
        }

        if (includeProjects)
        {
            this.copyProjects();
        }

        if (includeLeads)
        {
            this.copyLeads();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog box can be either built by using the <c>Dialog</c> class or by using a class that is
    /// created in the Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        Object ret;

        ret = super();

        fieldOpportunities        =   dialog.addFieldValue(extendedTypeStr(smmIncludeOpportunities),     includeOpportunities);
        fieldLeads                =   dialog.addFieldValue(extendedTypeStr(smmIncludeLeads),             includeLeads);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        this.parmIncludeOpportunities(fieldOpportunities.value());
        this.parmIncludeLeads(fieldLeads.value());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkRecords</Name>
				<Source><![CDATA[
    // Create a link between the copied and the original record
    public void linkRecords()
    {
        super();

        smmLeadRelTable.clear();
        smmLeadRelTable.LeadId = commonOrig.(fieldId);
        smmLeadRelTable.RefTableId = commonCopy.TableId;
        smmLeadRelTable.RefRecId = commonCopy.RecId;
        smmLeadRelTable.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCommonOrigTable</Name>
				<Source><![CDATA[
    public Common parmCommonOrigTable(Common _commonOrig = commonOrig)
    {
        Common ret;

        ret = super(_commonOrig);

        fieldId = fieldnum(smmLeadTable, LeadId);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processFieldId</Name>
				<Source><![CDATA[
    public fieldId processFieldId()
    {
        return fieldnum(smmLeadTable,ProcessName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMainFields</Name>
				<Source><![CDATA[
    // Set fields that should not be copied from the original record
    public void setMainFields()
    {
        smmLeadTable = commonOrig;

        smmLeadTableCopy.clear();
        smmLeadTableCopy.data(smmLeadTable);
        commonCopy.data(commonOrig);
        smmLeadTableCopy.DateOpen = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        smmLeadTableCopy.Status = smmLeadStatus::Open;
        smmLeadTableCopy.Party = smmLeadTable.Party;
        smmLeadTableCopy.LeadId = smmParameters::getNumber(smmNumbSeqUsed::LeadId);

        // Clear Process name if not active
        if (smmLeadTable.ProcessName &&
        !Hierarchy::findByNameType(smmLeadTable.ProcessName,HierarchyType::Lead,true).IsActive)
        {
            smmLeadTableCopy.ProcessName = '';
        }

        if (!smmLeadTableCopy.LeadId)
        {
            // Number sequence not setup correctly for lead. Copy was canceled.
            throw error("@SYS105094");
        }

        commonCopy = smmLeadTableCopy;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SYS105093"; // Copy lead
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>