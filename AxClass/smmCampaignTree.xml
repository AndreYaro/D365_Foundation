<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmmCampaignTree</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SmmCampaignTree
{
    #macrolib.resAppl

    smmCampaignImageListAppl_Campaign   imageList;
    FormTreeControl                     tree;
    FormTreeItem                        item;
    Integer                             master;
    Map                                 treeTreeId;
    Map                                 treeRecId;
    Map                                 treeActive;
    boolean                             createMaster;
    boolean                             markActive;
    Integer                             id;

    #localMacro.fieldList
        CampaignId,
        CampaignName,
        RecId,
        CampaignTypeId,
        Campaignstatus
    #endMacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildTree</Name>
				<Source><![CDATA[
    private void buildTree()
    {
        if (this.parmCreateMaster())
        {
            this.createMaster();
        }

        smmCampaignTree::createTree(this, master);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createMaster</Name>
				<Source><![CDATA[
    private void createMaster()
    {
        item = new FormTreeItem();

        // Campaign
        item.text("@SYS80187");
        item.children(((select smmCampaignTable).RecId ? true : false));

        item.image(imageList.image(#ImageAxapta));
        item.selectedImage(imageList.image(#ImageAxapta));

        master  = tree.addItem(0, 0, item);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNode</Name>
				<Source><![CDATA[
    private void createNode(smmCampaignTable  _smmCampaignTable, boolean _child, int _parent)
    {
        FormTreeItem treeitem;

        if (!treeRecId.exists(_smmCampaignTable.RecId))
        {
            item = new FormTreeItem();

            item.text(this.text(_smmCampaignTable));
            item.children(_child);
            item.data(_smmCampaignTable.CampaignId);

            item.image(this.image(_smmCampaignTable.CampaignStatus));
            item.selectedImage(this.image(_smmCampaignTable.CampaignStatus));

            id  = tree.addItem(_parent, 0, item);

            if (this.parmMarkActive())
            {
                treeitem = tree.getItem(id);
                treeitem.overlayImage(this.overlayimage(_smmCampaignTable));
                tree.setItem(treeitem);
            }

            treeTreeId.insert(id,_smmCampaignTable.RecId);
            treeRecId.insert(_smmCampaignTable.RecId,id);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>expanding</Name>
				<Source><![CDATA[
    public boolean expanding(int _idx, FormTreeExpand _action)
    {
        boolean          ret    = false;
        smmCampaignId    smmCampaignIdExpand;
        smmCampaignTable smmCampaignParent;
        smmCampaignTable smmCampaignChild;

        item                = tree.getItem(_idx);
        smmCampaignIdExpand = smmCampaignTable::find(item.data()).CampaignId;

        if (_action == FormTreeExpand::Expand && smmCampaignIdExpand && !item.stateExpandedOnce())
        {
            while select #fieldList from smmCampaignParent where smmCampaignParent.CampaignParentId == smmCampaignIdExpand
            {
                select RecId from smmCampaignChild where smmCampaignChild.CampaignParentId  == smmCampaignParent.CampaignId;

                this.createNode(smmCampaignParent, (smmCampaignChild.RecId ? true : false), _idx);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNode</Name>
				<Source><![CDATA[
    public FormTreeItem findNode(smmCampaignId smmCampaignId)
    {
        recId           smmCampaignRecId;
        FormTreeItem    formTreeItem;

        smmCampaignRecId = smmCampaignTable::find(smmCampaignId).RecId;

        if (treeRecId.exists(smmCampaignRecId))
        {
            formTreeItem = tree.getItem(treeRecId.lookup(smmCampaignRecId));
        }

        return formTreeItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelection</Name>
				<Source><![CDATA[
    public smmCampaignId getSelection()
    {
        if (tree.getSelection())
        {
            if (markActive && ! treeActive.exists(tree.getSelection()))
            {
                // Campaign cannot be selected
                throw error("@SYS80686");
            }
            if (treeTreeId.exists(tree.getSelection()))
            {
                return (select smmCampaignTable where smmCampaignTable.RecId == treeTreeId.lookup(tree.getSelection())).CampaignId;
            }
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>image</Name>
				<Source><![CDATA[
    private int image(smmCampaignStatus  _status)
    {
        int ret;

        switch (_status)
        {
            case smmCampaignStatus::InProcess             :
                ret = imageList.image(#ImageCompany);
                break;

            case smmCampaignStatus::Cancelled             :
                ret = imageList.image(#ImageDelete);
                break;

            case smmCampaignStatus::Closed                :
                ret = imageList.image(#ImageOverlayYes);
                break;

            case smmCampaignStatus::Planning              :
                ret = imageList.image(#ImageQty);
                break;

            case smmCampaignStatus::FollowUp              :
                ret = imageList.image(#ImageLabel);
                break;
            case smmCampaignStatus::Response              :
                ret = imageList.image(#ImageClass);
                break;

            default :
                ret = 0;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FormTreeControl _formTree)
    {
        tree        = _formTree;

        imageList   = new smmCampaignImageListAppl_Campaign();

        tree.setImagelist(imageList.imageList());

        treeTreeId = new Map(Types::Integer,typeName2Type(extendedTypeStr(recId)));
        treeRecId  = new Map(typeName2Type(extendedTypeStr(recId)),Types::Integer);
        treeActive = new Map(Types::Integer,typeName2Type(extendedTypeStr(recId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>overlayimage</Name>
				<Source><![CDATA[
    private int overlayimage(smmCampaignTable _smmCampaignTable)
    {
        if (_smmCampaignTable)
        {
            treeActive.insert(id,_smmCampaignTable.RecId);
            return imageList.image(0);
        }

        return imageList.image(#ImageOverlayRedLock);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parentMark</Name>
				<Source><![CDATA[
    public void parentMark(int parent, boolean set)
    {
        FormTreeItem parentItem;

        parentItem  = tree.getItem(parent);

        if (parentItem)
        {
            parentItem.children(set);
            tree.setItem(parentItem);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreateMaster</Name>
				<Source><![CDATA[
    public boolean parmCreateMaster(boolean _createMaster  = createMaster)
    {
        createMaster    = _createMaster;

        return createMaster;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkActive</Name>
				<Source><![CDATA[
    public boolean parmMarkActive(boolean _markActive   = markActive)
    {
        markActive  = _markActive;

        return markActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelection</Name>
				<Source><![CDATA[
    // Select a campaign in the tree
    public void setSelection(smmCampaignId _campaignId)
    {
        FormTreeItem treeItem;

        treeItem = this.findNode(_campaignId);

        if (treeItem)
        {
            tree.select(treeItem.idx());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupChart</Name>
				<Source><![CDATA[
    public void setupChart()
    {
        tree.lock();

        this.buildTree();

        tree.select(tree.getRoot());
        tree.setFocus();
        tree.selectSetFirstVisible(tree.getRoot());

        tree.update();
        tree.unLock(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>text</Name>
				<Source><![CDATA[
    private str text(smmCampaignTable _smmCampaignTable)
    {
        return _smmCampaignTable.CampaignId + ', ' + _smmCampaignTable.CampaignName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeNode</Name>
				<Source><![CDATA[
    public Integer treeNode(smmCampaignId smmCampaignId)
    {
        if (smmCampaignId && treeRecId.exists(smmCampaignTable::find(smmCampaignId).RecId))
        {
            return treeRecId.lookup(smmCampaignTable::find(smmCampaignId).RecId);
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static smmCampaignTree construct(FormTreeControl _formTree)
    {
        return new smmCampaignTree(_formTree);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTree</Name>
				<Source><![CDATA[
    private static void createTree(smmCampaignTree _campaignTree, Integer _master)
    {
        smmCampaignTable   campaignParent;
        smmCampaignTable   campaignchild;

        campaignchild.recordLevelSecurity(true);
        campaignParent.recordLevelSecurity(true);

        while select #fieldList from campaignParent where campaignParent.CampaignParentId == ''
        {
            select RecId from campaignchild where campaignchild.CampaignParentId == campaignParent.CampaignId;

            _campaignTree.createNode(campaignParent, (campaignchild.RecId ? true : false), _master);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>