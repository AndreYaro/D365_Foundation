<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimDerDistRuleIntercompanyCost</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>DimDerDistRuleIntercompanyCost</c> class is the dimension derivation distribution rule
///    extension for intercompany timesheets cost.
/// </summary>
[SourceDocumentClassExtensionAttribute(classStr(AccDistRuleIntercompanyCost))]
public class DimDerDistRuleIntercompanyCost  extends DimensionDerivationRuleExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populateDimAllocList</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Handles the population of ledger dimension allocation list from project setup.
    /// </summary>
    /// <param name = "_ledgerDimensionAllocationList">
    ///     A ledger dimension allocation list.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void populateDimAllocList(LedgerDimensionAllocationList _ledgerDimensionAllocationList)
    {
        LedgerDimensionDefaultAccount   ledgerDimensionDefaultAccount;
        LedgerDimensionAccount          ledgerDimension;
        LedgerDimensionAllocation       ledgerDimensionAllocation;
        DebitCredit                     side;

        side = dimensionDerivationRule.parmAccountingRule().parmSide();

        ledgerDimensionDefaultAccount = ProjPosting::getLedgerDimension(ProjAccountType::IntercompanyCost, '', '', 0);

        ledgerDimension  = LedgerDimensionFacade::serviceCreateLedgerDimension(ledgerDimensionDefaultAccount, dimensionDerivationRule.parmAccountingRule().parmSourceDocumentLineItem().parmDefaultDimension());

        ledgerDimensionAllocation = LedgerDimensionAllocation::newFromParameters(ledgerDimension,
                                                                                    1,
                                                                                    side,
                                                                                    false);

        _ledgerDimensionAllocationList.addEnd(ledgerDimensionAllocation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Subscribes to events of the dimension derivation rule.
    /// </summary>
    protected void subscribe()
    {
        dimensionDerivationRule.populatingDimAllocListEventHandler += eventhandler(this.populateDimAllocList);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>