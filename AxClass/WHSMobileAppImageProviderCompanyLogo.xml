<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppImageProviderCompanyLogo</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppImageProviderCompanyLogo</c> class is the image provider for the company logo.
/// </summary>
[WHSMobileAppImageType(WHSMobileAppImageType::CompanyLogo)]
public class WHSMobileAppImageProviderCompanyLogo extends WHSMobileAppImageProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>imageExists</Name>
				<Source><![CDATA[
    public boolean imageExists()
    {
        CompanyImage companyImage = this.getCompanyImage();
        return companyImage.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getImage</Name>
				<Source><![CDATA[
    public WHSMobileAppImage getImage()
    {
        CompanyImage companyImage = this.getCompanyImage();
            
        WHSMobileAppImage mobileAppImage = new WHSMobileAppImage();
        if (companyImage.RecId)
        {
            mobileAppImage.image(this.encodeContainerImage(companyImage.Image));
            mobileAppImage.type(this.getProvidedImageTypeSymbol(WHSMobileAppProvidedImageType::Image));
        }

        return mobileAppImage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompanyImage</Name>
				<Source><![CDATA[
    private CompanyImage getCompanyImage()
    {
        SelectableDataArea dataArea = this.parmImageDetails().parmImageIdentifier();
        changecompany(dataArea)
        {
            CompanyInfo companyInfo = CompanyInfo::find();
            CompanyImage companyImage = this.getCompanyImageByType(companyInfo, CompanyImageType::DashboardLogo);

            if (!companyImage.RecId)
            {
                companyImage = this.getCompanyImageByType(companyInfo, CompanyImageType::CompanyLogo);
            }

            return companyImage;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompanyImageByType</Name>
				<Source><![CDATA[
    private CompanyImage getCompanyImageByType(CompanyInfo _companyInfo, CompanyImageType _ImageType)
    {
        return CompanyImage::findbyrecord(_companyInfo, false, _ImageType);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>