<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentJournalCreateUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Interface builder class for payment journal creation procedure.
/// </summary>
public class CfmPaymentJournalCreateUIBuilder extends SysOperationAutomaticUIBuilder
{
    SysListPanel sysListPanel;

    DialogField dialogFieldDataAreas,
    dialogPaymModeCust,
    dialogPaymModeVend,
    dialogProposeCust,
    dialogProposeVend,
    dialogPartyNumber;

    SysLookupMultiSelectCtrl ctrlDataAreas;
    PaymMode paymModeVend, paymModeCust;
    NoYes proposeSeparatePaymentPerCompanyCust, proposeSeparatePaymentPerCompanyVend;
    DirPartyNumber dirPartyNumber;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDialogField</Name>
				<Source><![CDATA[
    protected DialogField addDialogField(IdentifierName _methodName, Object _dataContract = this.dataContractObject())
    {
        DialogField ret;

        switch (_methodName)
        {
            case methodStr(CFMPaymentJournalCreateContract, parmDataAreas):
                dialogFieldDataAreas = this.dialog().addField(extendedTypeStr(Description), new DictTable(tableNum(CompanyInfo)).label());
                ret = dialogFieldDataAreas;
                break;

            case methodStr(CFMPaymentJournalCreateContract, parmPartyNumber):
                dialogPartyNumber = dialog.addFieldValue(this.typePartyNumber(), dirPartyNumber);
                dialogPartyNumber.registerOverrideMethod(methodStr(FormStringControl, lookup),
                methodStr(CFMPaymentJournalCreateUIBuilder, dirPartyLookup), this);
                ret = dialogPartyNumber;
                break;

            case methodStr(CFMPaymentJournalCreateContract, parmProposeSeparatePaymentPerCompanyVend):
                dialog.addGroup("@SYS115163");
                dialogProposeVend = dialog.addFieldValue(extendedTypeStr(NoYesId), proposeSeparatePaymentPerCompanyVend);
                dialogProposeVend.label("@SYS115161");
                dialogProposeVend.helpText("@SYS115162");
                ret = dialogProposeVend;
                break;

            case methodStr(CFMPaymentJournalCreateContract, parmProposeSeparatePaymentPerCompanyCust):
                dialogProposeCust = dialog.addFieldValue(extendedTypeStr(NoYesId), proposeSeparatePaymentPerCompanyCust);
                dialogProposeCust.label("@SYS115158");
                dialogProposeCust.helpText("@SYS115159");
                ret = dialogProposeCust;
                break;

            default :
                ret = super(_methodName, _dataContract);

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyLookup</Name>
				<Source><![CDATA[
    private void dirPartyLookup(FormControl _formControl)
    {
        Query query = new Query();
        QueryBuildDataSource queryDirPartyDataSource;

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(DirPartyTable), _formControl);

        query.allowCrossCompany(true);

        queryDirPartyDataSource = query.addDataSource(tableNum(DirPartyTable));

        sysTableLookup.addLookupfield(fieldNum(DirPartyTable, PartyNumber));
        sysTableLookup.addLookupfield(fieldNum(DirPartyTable, Name));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fetchSelectedDataAreas</Name>
				<Source><![CDATA[
    private container fetchSelectedDataAreas(Query _query)
    {
        QueryRun queryRun = new QueryRun(_query);
        CFMPaymentJournalCreateContract contract = this.dataContractInfo().dataContractObject();
        container conRecIds;
        container conValues;

        while (queryRun.next())
        {
            CompanyInfo companyInfo = queryRun.get(tableNum(CompanyInfo));

            if (conFind(contract.parmDataAreas(), companyInfo.DataArea))
            {
                conRecIds += companyInfo.RecId;
                conValues += companyInfo.DataArea;
            }
        }

        return [conRecIds, conValues];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public void getFromDialog()
    {
        super();

        CFMPaymentJournalCreateContract contract = this.dataContractObject();
        contract.parmDataAreas(ctrlDataAreas.getSelectedFieldValues());
        contract.parmPartyNumber(dialogPartyNumber.value());
        contract.parmProposeSeparatePaymentPerCompanyCust(dialogProposeCust.value());
        contract.parmProposeSeparatePaymentPerCompanyVend(dialogProposeVend.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    public void postRun()
    {
        Query queryDataAreas = CFMPaymentJournalCreateUIBuilder::companyInfoQuery();

        super();

        ctrlDataAreas = SysLookupMultiSelectCtrl::constructWithQuery(this.dialog().formRun(), dialogFieldDataAreas.control(), queryDataAreas);
        ctrlDataAreas.setMandatory(true);

        ctrlDataAreas.set(this.fetchSelectedDataAreas(queryDataAreas));
    }

]]></Source>
			</Method>
			<Method>
				<Name>typePartyNumber</Name>
				<Source><![CDATA[
    protected UtilElementName typePartyNumber()
    {
        return extendedTypeStr(DirPartyNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>typePaymModeCust</Name>
				<Source><![CDATA[
    protected UtilElementName typePaymModeCust()
    {
        return extendedTypeStr(CustPaymMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>typePaymModeVend</Name>
				<Source><![CDATA[
    protected UtilElementName typePaymModeVend()
    {
        return extendedTypeStr(VendPaymMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfoQuery</Name>
				<Source><![CDATA[
    private static Query companyInfoQuery()
    {
        container companies = CFMParameters::getCentralizedPaymentCompanies(curext());

        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(CompanyInfo));

        QueryBuildRange qbr = qbds.addRange(fieldNum(CompanyInfo, DataArea));
        qbr.value(con2Str(companies));

        qbds.addSelectionField(fieldNum(CompanyInfo, DataArea));
        qbds.addSelectionField(fieldNum(CompanyInfo, Name));

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>