<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_AssetSale_ru</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class InventMov_AssetSale_ru extends InventMovement
{
    InventTrans         inventTransOrig;
    InventTransId       inventTransId;
    boolean             canDisposal;
    InventQty           transQty;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountBalanceSheet</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount accountBalanceSheet()
    {
        if (! cacheAccountBalanceSheet)
        {
            if (this.transQty() >= 0)
            {
                cacheAccountBalanceSheet = InventPosting::itemLedgerDimensionFromParameter(this.createInventPostingItemLedgerDimensionParameters(InventAccountType::InventReceipt));
            }
            else
            {
                cacheAccountBalanceSheet = InventPosting::itemLedgerDimensionFromParameter(this.createInventPostingItemLedgerDimensionParameters(InventAccountType::InventIssue));
            }
        }

        return cacheAccountBalanceSheet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountOperations</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount accountOperations()
    {
        if (! cacheAccountOperations)
        {
            if (this.transQty() >= 0)
            {
                cacheAccountOperations = InventPosting::itemLedgerDimensionFromParameter(this.createInventPostingItemLedgerDimensionParameters(InventAccountType::InventProfit));
            }
            else
            {
                cacheAccountOperations = InventPosting::itemLedgerDimensionFromParameter(this.createInventPostingItemLedgerDimensionParameters(InventAccountType::InventLoss));
            }
        }

        return cacheAccountOperations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeAutoRepAsFinished</Name>
				<Source><![CDATA[
    public boolean canBeAutoRepAsFinished()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeOnAllInventLocations</Name>
				<Source><![CDATA[
    public boolean canBeOnAllInventLocations()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisposal</Name>
				<Source><![CDATA[
    public boolean canDisposal()
    {
        return canDisposal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNotOverDelivery</Name>
				<Source><![CDATA[
    public boolean checkNotOverDelivery(InventQty _physicalNow,boolean _isPhysicalUpdate
        , PdsCWInventQty _cwQty = 0.0
        )
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNotSubDelivery</Name>
				<Source><![CDATA[
    public boolean checkNotSubDelivery(InventQty _physicalNow, InventQty _remainPhysicalNow, boolean _isPhysicalUpdate
        , PdsCWInventQty _cwQtyNow = 0.0
        , PdsCWInventQty _cwRemainPhysical = 0.0
        )
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUpdateEstimated</Name>
				<Source><![CDATA[
    public boolean checkUpdateEstimated(InventUpd_Estimated    _updateNow,
                                        InventMovement         _this_Orig)
    {
        return super(_updateNow, null);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the set of financial dimensions to use when you post the asset.
    /// </summary>
    /// <returns>
    /// The set of financial dimensions.
    /// </returns>
    public DimensionDefault defaultDimension()
    {
        return inventTransOrig.dimensionFinancialDefaultDimension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimId</Name>
				<Source><![CDATA[
    public InventDimId inventDimId()
    {
        return inventTransOrig.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    public ItemId itemId()
    {
        return inventTransOrig.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeAutoReserved</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>inventMovement</c> object must be auto-reserved.
    /// </summary>
    /// <returns>
    /// true if the <c>inventMovement</c> object must be auto-reserved; otherwise, false.
    /// </returns>
    /// <remarks>
    /// This method is often called together with the <c>canBeReserved</c> method, which returns a default
    /// Boolean value from the <c>inventType</c> class hierarchy.
    /// </remarks>
    public boolean mustBeAutoReserved()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeBookedFinancially</Name>
				<Source><![CDATA[
    public boolean mustBeBookedFinancially()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeBookedPhysically</Name>
				<Source><![CDATA[
    public boolean mustBeBookedPhysically()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeQuarantineControlled</Name>
				<Source><![CDATA[
    public boolean mustBeQuarantineControlled()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeSameTransSign</Name>
				<Source><![CDATA[
    public boolean mustBeSameTransSign()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(SalesLine   _salesLine,
                    InventType  _inventType = new InventType(_salesLine))
    {
        inventTransId = NumberSeq::newGetNum(InventParameters::numRefInventTransId()).num();

        if (_salesLine.creditNoteLine())
        {
            select firstonly inventTransOrig
                where inventTransOrig.InventTransOrigin == InventTransOriginSalesLine::findInventTransOriginId(_salesLine.DataAreaId, _salesLine.InventTransId)
                   && inventTransOrig.StatusReceipt     == StatusReceipt::Ordered
                   && inventTransOrig.StatusIssue       == StatusIssue::None;

            transQty = -1;
        }
        else
        {
            select firstonly inventTransOrig
                where inventTransOrig.InventTransOrigin == InventTransOriginSalesLine::findInventTransOriginId(_salesLine.DataAreaId, _salesLine.InventTransId)
                   && inventTransOrig.StatusIssue       == StatusIssue::OnOrder
                   && inventTransOrig.StatusReceipt     == StatusReceipt::None;

            transQty = 1;
        }

        canDisposal = inventTransOrig != null;

        super(_salesLine, _inventType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_Orig</Name>
				<Source><![CDATA[
    public InventMovement newMovement_Orig()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingBalanceSheet</Name>
				<Source><![CDATA[
    public LedgerPostingType postingBalanceSheet()
    {
        if (this.transQty() >= 0)
        {
            return LedgerPostingType::InventReceipt;
        }
        else
        {
            return LedgerPostingType::InventIssue;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingOperations</Name>
				<Source><![CDATA[
    public LedgerPostingType postingOperations()
    {
        if (this.transQty() >= 0)
        {
            return LedgerPostingType::InventProfit;
        }
        else
        {
            return LedgerPostingType::InventLoss;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>remainPhysical</Name>
				<Source><![CDATA[
    public InventQty remainPhysical()
    {
        return this.transQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    public TransDate transDate()
    {
        return DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>transId</Name>
				<Source><![CDATA[
    public InventTransId transId()
    {
        return inventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transQty</Name>
				<Source><![CDATA[
    public InventQty transQty()
    {
        return transQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transSign</Name>
				<Source><![CDATA[
    public Integer transSign()
    {
        return 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    public InventTransType transType()
    {
        return InventTransType::FixedAssets_RU;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>