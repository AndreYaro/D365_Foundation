<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCatchWeightTagUnshipDetails</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>WHSCatchWeightTagUnshipDetails</c> is used for storing the tags and the total weight that needs to be unshipped.
/// </summary>
internal class WHSCatchWeightTagUnshipDetails
{
    private Set tags = new Set(Types::String);
    private WHSTransWeight totalWeight;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of <c>WHSCatchWeightTagUnshipDetails</c> for storing the tags and total weight.
    /// </summary>
    /// <returns>An instance of <c>WHSCatchWeightTagUnshipDetails</c> class.</returns>
    [Hookable(false)]
    internal static WHSCatchWeightTagUnshipDetails construct()
    {
        return new WHSCatchWeightTagUnshipDetails();
    }

]]></Source>
			</Method>
			<Method>
				<Name>tags</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retreives the list of tags.
    /// </summary>
    /// <returns><c>Set</c> object containing all the tags.</returns>
    [Hookable(false)]
    internal Set tags()
    {
        return tags;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retreives the total weight of all the tags.
    /// </summary>
    /// <returns>Total weight of all the tags.</returns>
    [Hookable(false)]
    internal WHSTransWeight totalWeight()
    {
        return totalWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addTag</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add the selected tag.
    /// </summary>
    /// <param name = "_tagNumber">Tag number to be added.</param>
    [Hookable(false)]
    internal void addTag(WHSCatchWeightTagNumber _tagNumber)
    {
        tags.add(_tagNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>incrementWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Increments the total weight of the tags.
    /// </summary>
    /// <param name = "_tagWeight">Weight to increment.</param>
    [Hookable(false)]
    internal void incrementWeight(WHSTransWeight _tagWeight)
    {
        totalWeight += _tagWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tagExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the tag already exists in the list of tags.
    /// </summary>
    /// <param name = "_tagNumber">Tag number to validate.</param>
    /// <returns>True, if the tag number already exists; otherwise, false.</returns>
    [Hookable(false)]
    internal boolean tagExists(WHSCatchWeightTagNumber _tagNumber)
    {
        return tags.in(_tagNumber);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>