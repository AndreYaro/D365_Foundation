<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCatalogRequestDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>MCRCatalogRequestDP</c> populates the temporary
/// table used in the catalog request report.
/// </summary>
[
    SRSReportParameterAttribute(classstr(MCRCatalogRequestContract))
]
public class MCRCatalogRequestDP extends SrsReportDataProviderPreProcess
{
    // datasources from which report is populated
    MCRCatalogReportTmp tmpMCRCatalogReport;
    CompanyInfo         companyInfo;
    str                 range;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getMCRCatalogReportTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>MCRCatalogReportTmp</c> buffer.
    /// </summary>
    /// <returns>
    /// The <c>MCRCatalogReportTmp</c> buffer.
    /// </returns>
    [
        SRSReportDataSetAttribute(tablestr(MCRCatalogReportTmp))
    ]
    public MCRCatalogReportTmp getMCRCatalogReportTmp()
    {
        select tmpMCRCatalogReport;

        return tmpMCRCatalogReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTempTable</Name>
				<Source><![CDATA[
        private void populateTempTable()
    {
        MCRLogId     mcrLogId;
        str          logRange = range;
        int          position = 0;

        position = strfind(logRange, ',', 1,100);
        while (logRange != '')
        {
            if (position == 0)
            {
                tmpMCRCatalogReport.initFromMCRCatalogRequest(logRange);
                logRange = strRem(logRange,logRange);
            }
            else
            {
                mcrLogId = substr(logRange, 1, position-1);
                tmpMCRCatalogReport.initFromMCRCatalogRequest(mcrLogId);
                logRange = strdel(logRange, 1, position);
                position = strfind(logRange, ',' ,1,100);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Process catalog request report.
    /// </summary>
    public void processReport()
    {
        MCRCatalogRequestContract mcrCatalogRequestContract;
        List list;
        ListEnumerator li;

        mcrCatalogRequestContract = this.parmDataContract() as MCRCatalogRequestContract;
        tmpMCRCatalogReport.setConnection(this.parmUserConnection());
        companyInfo = CompanyInfo::find();

        list = mcrCatalogRequestContract.parmlogID();
        li = list.getEnumerator();

        while (li.moveNext())
        {
            range = li.current() + ',' + range;
        }

        range = strDel(range, strLen(range), 1);
        this.populateTempTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>