<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>CustAutomationTask</Name>
  <SourceCode>
    <Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// This <c>CustAutomationTask</c> class is designed to create a new controller instance for customer automations.
/// </summary>
[ExportMetadata(classStr(ProcessAutomationTask), classStr(CustAutomationTask))]
[Export(identifierStr(Microsoft.Dynamics.AX.Application.ProcessAutomationTask))]
internal final class CustAutomationTask extends ProcessAutomationTask implements BatchRetryable
{
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>isProcessAutomationEnabledForThisTask</Name>
        <Source><![CDATA[
    [Hookable(false)]
    protected boolean isProcessAutomationEnabledForThisTask()
    {
        return CustAutomationFeature::isEnabled();
    }

]]></Source>
      </Method>
      <Method>
        <Name>getListOfWorkToBePerformed</Name>
        <Source><![CDATA[
    [Hookable(false)]
    protected List getListOfWorkToBePerformed()
    {
        List controllerList = new List(Types::Class);

        CustAutomationController controller = new CustAutomationController(
            classStr(CustAutomationController),
            methodStr(CustAutomationController, runCustAutomation),
            SysOperationExecutionMode::Synchronous);

        CustAutomationContract contract = controller.getDataContractObject() as CustAutomationContract;
        contract.initializeFromScheduleWorkItem(this.parmProcessScheduleWorkItem());
        this.setCustAutomationContract(contract);

        controllerList.addEnd(controller);

        return controllerList;
    }

]]></Source>
      </Method>
      <Method>
        <Name>batchJobCaption</Name>
        <Source><![CDATA[
    [Hookable(false)]
    protected BatchCaption batchJobCaption()
    {
        return "@CustAutomation:Automation";
    }

]]></Source>
      </Method>
      <Method>
        <Name>setCustAutomationContract</Name>
        <Source><![CDATA[
    private void setCustAutomationContract(CustAutomationContract _contract)
    {
        CustAutomationCriteria criteria = CustAutomationCriteria::findByOccurrence(_contract.parmProcessScheduleOccurrenceRecId());

        CustAutomationStrategy strategy = CustAutomationStrategy::findByName(criteria.StrategyName);

        _contract.parmCustAutomationStrategy(strategy);
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>