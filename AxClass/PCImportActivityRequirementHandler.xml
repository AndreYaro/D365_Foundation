<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCImportActivityRequirementHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class PCImportActivityRequirementHandler extends PCImportModelNodeHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>importData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an <c>WrkCtrActivityRequirement</c> instance for any type of requirement,
    /// sets the reference to it, performs any initialization specific to the requirement type and inserts
    /// the record.
    /// </summary>
    protected void importData()
    {
        PCImportRouteOprtnActivityHndlr     parent                  = this.parent();
        WrkCtrActivityRequirement           activityRequirement;

        ListEnumerator                      requirementSets         = parent.requirementSetIds().getEnumerator();

        activityRequirement.RelationshipType                        = this.requirementType();
        activityRequirement.UsedForOperationScheduling              = this.getIntFieldByName(fieldStr(WrkCtrActivityRequirement, UsedForOperationScheduling));
        activityRequirement.UsedForJobScheduling                    = this.getIntFieldByName(fieldStr(WrkCtrActivityRequirement, UsedForJobScheduling));

        this.performCustomInitialization();

        while (requirementSets.moveNext())
        {
            activityRequirement.ActivityRequirementSet              = requirementSets.current();
            activityRequirement.insert();

            this.record().setFieldValue(fieldStr(WrkCtrActivityCapabilityRequirement, ActivityRequirement), activityRequirement.RecId);
            this.record().insert();
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>nodeType</Name>
				<Source><![CDATA[
    public str nodeType()
    {
        return super();
    }
]]></Source>
			</Method>
			<Method>
				<Name>performCustomInitialization</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the data specific to the subclass activity requirement.
    /// </summary>
    abstract protected void performCustomInitialization()
    {
    }
]]></Source>
			</Method>
			<Method>
				<Name>requirementType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Should be implemented by subclass handlers to return the proper enum value corresponding
    /// to their activity requirement type.
    /// </summary>
    /// <returns>
    /// An enum constant suitable for the particular subclass.
    /// </returns>
    abstract public WrkCtrActivityRequirementType requirementType()
    {
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>