<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CDXService</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Application.Instrumentation;
using System.Net;
using System.Data.SqlClient;

/// <summary>
/// The <c>RetailConnectionStringService</c> class exposes an API to modify the connection string of the default channel dataabase.
/// </summary>
class CDXService
{
    private const str DefaultChannelDatabaseName = 'Default';
    private const static str PingQuery = @'SELECT 1';
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateDefaultChannelDatabaseConnectionString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the connection string from the required parameters and updates it for the default channel database profile.
    /// </summary>
    /// <param name = "channelDatabaseServerName">The channel database server name.</param>
    /// <param name = "channelDatabaseName">The channel database name.</param>
    /// <param name = "username">The authorized username for the accessing the database.</param>
    /// <param name = "password">The authroized password for the accessing the database.</param>
    /// <param name = "trustServerCertificate">The trust Server certificate boolean value.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateDefaultChannelDatabaseConnectionString(str channelDatabaseServerName, str channelDatabaseName, str username, str password, boolean trustServerCertificate)
    {
        RetailConnDatabaseProfile databaseProfile;
        System.Exception exception;
        str trustServerCertificateString;

        select firstonly1 forupdate databaseProfile where databaseProfile.Name == CDXService::DefaultChannelDatabaseName;

        try
        {
            ApplicationEventSource::EventWriteCDXServiceUpdateDefaultChannelDatabaseConnectionStringStart();

            if (databaseProfile.RecId == 0)
            {
                throw Global::error('The default ConnDatabaseProfile does not exist.');
            }

            // Generate connection string.
            trustServerCertificateString = trustServerCertificate ? 'True':'False';
            str channelDatabaseConnectionString = RetailConnDatabaseProfile::buildCustomConnectionString(
                                                    channelDatabaseServerName, channelDatabaseName, username, password, trustServerCertificateString);
            CDXService::testChannelDatabaseAccess(channelDatabaseConnectionString);
        
            ttsbegin;
            databaseProfile.connectionStringEdit(true, channelDatabaseConnectionString);
            databaseProfile.update();
            ttscommit;
        }
        catch (exception)
        {
            ApplicationEventSource::EventWriteCDXServiceUpdateDefaultChannelDatabaseConnectionStringFailure(exception.ToString());
            throw Global::error(strFmt("Connection string failed to be updated. '%1'", exception.Message));
        }
        finally
        {
            ApplicationEventSource::EventWriteCDXServiceUpdateDefaultChannelDatabaseConnectionStringStop();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>testChannelDatabaseAccess</Name>
				<Source><![CDATA[
    private static void testChannelDatabaseAccess(str channelDatabaseConnectionString)
    {
        using (SqlConnection sqlConnection = new SqlConnection(channelDatabaseConnectionString))
        {
            using (SqlCommand sqlCommand = new SqlCommand(CDXService::PingQuery, sqlConnection))
            {
                sqlConnection.Open();
                using (SqlDataReader reader = sqlCommand.ExecuteReader())
                {
                    ApplicationEventSource::EventWriteCDXServiceTestChannelDatabasePing(reader.Read());
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>