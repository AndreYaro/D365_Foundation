<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailGrandTotalJournalArchiveDestinationFactory</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;
using Microsoft.Dynamics365.LocalizationFramework.Format.FileGeneration;

/// <summary>
/// Destination factory for the archive.
/// </summary>
public final class RetailGrandTotalJournalArchiveDestinationFactory implements ERIFileDestinationFactory, ERIFileDestinationFactoryPostProcessor
{
    private ERIFileDestinationFactory originDestinationFactory;
    private RetailGrandTotalJournalArchiveContract archiveContract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createPrintMgmtDestination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates file destination for print management.
    /// </summary>
    /// <param name = "_fileDestination">A default file destination.</param>
    /// <param name = "_identification">An identification strategy.</param>
    /// <param name = "_rootContext">A root context.</param>
    /// <param name = "_root">A root element.</param>
    /// <returns>A file destination.</returns>
    public ERIDataDrivenFileDestination createPrintMgmtDestination(
        ERIFileDestination _fileDestination,
        ERIObjectIdentificationStrategy _identification,
        ERTextFormatDataContext _rootContext,
        ERTextFormatIFileComponent _root)
    {
        ERIDataDrivenFileDestination dataDrivenDestination = originDestinationFactory.createPrintMgmtDestination(
            _fileDestination, 
            _identification, 
            _rootContext, 
            _root);

        IFileDestinationHost fileDestinationHost = dataDrivenDestination as IFileDestinationHost;
        if (fileDestinationHost)
        {
            fileDestinationHost.FileDestination = RetailGrandTotalJournalArchiveDestination::construct(
                fileDestinationHost.get_FileDestination(),
                archiveContract);
        }

        return dataDrivenDestination;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processDestinationAfterCreation</Name>
				<Source><![CDATA[
    public ERIFileDestination processDestinationAfterCreation(ERIFileDestination _fileDestination)
    {
        return RetailGrandTotalJournalArchiveDestination::construct(_fileDestination, archiveContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the archive destination.
    /// </summary>
    /// <param name = "_originDestinationFactory">The original destination.</param>
    /// <param name = "_archiveContract">The archive contract.</param>
    /// <returns>The archive destination.</returns>
    public static RetailGrandTotalJournalArchiveDestinationFactory construct(ERIFileDestinationFactory _originDestinationFactory, RetailGrandTotalJournalArchiveContract _archiveContract)
    {
        RetailGrandTotalJournalArchiveDestinationFactory destinationFactory = new RetailGrandTotalJournalArchiveDestinationFactory();
        destinationFactory.originDestinationFactory = _originDestinationFactory;
        destinationFactory.archiveContract = _archiveContract;

        ERIFileDestinationFactoryPostProcessorsHost factoryPostProcessing = ERCast::asObject(destinationFactory.originDestinationFactory) as ERIFileDestinationFactoryPostProcessorsHost;

        if (factoryPostProcessing)
        {
            factoryPostProcessing.addDestinationPostProcessor(destinationFactory);
        }

        return destinationFactory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>