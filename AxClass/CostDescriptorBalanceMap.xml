<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostDescriptorBalanceMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostDescriptorBalanceMap</c> class calculates balances on <c>CostEntryDescriptorBase</c> descriptors.
/// </summary>
public class CostDescriptorBalanceMap
{
    Map     descriptors;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addEntries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds entries to the <c>CostDescriptorBalanceMap</c>.
    /// </summary>
    /// <param name="_enumerator">
    /// An instance of the <c>CostEntryEnumerator</c> class with a collection of entries.
    /// </param>
    public void addEntries(CostEntryEnumerator _enumerator)
    {
        _enumerator.reset();
        while (_enumerator.moveNext())
        {
            this.addEntry(_enumerator.current());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds an <c>CostEntryBase</c> entry to the <c>CostDescriptorBalanceMap</c>.
    /// </summary>
    /// <param name="_entry">
    /// A <c>CostEntryBase</c> entry.
    /// </param>
    public void addEntry(CostEntryBase _entry)
    {
        this.addMagnitude(_entry.parmDescriptor().reconciledDescriptor(), _entry.parmMagnitude());
    }

]]></Source>
			</Method>
			<Method>
				<Name>addMagnitude</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a magnitude to the The <c>CostDescriptorBalanceMap</c>.
    /// </summary>
    /// <param name="_descriptor">
    /// The <c>CostEntryDescriptorBase</c> to add the magnitude to.
    /// </param>
    /// <param name="_magnitude">
    /// The <c>CostMagnitude</c>.
    /// </param>
    public void addMagnitude(CostEntryDescriptorBase _descriptor, CostMagnitude _magnitude)
    {
        descriptors.insert(_descriptor, this.getBalance(_descriptor) + _magnitude);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBalance</Name>
				<Source><![CDATA[
    public CostMagnitude getBalance(CostEntryDescriptorBase _descriptor)
    {
        CostMagnitude   magnitude;

        if (descriptors.exists(_descriptor))
        {
            magnitude = descriptors.lookup(_descriptor);
        }

        return magnitude;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        descriptors = new Map(Types::Class, Types::Real);
    }

]]></Source>
			</Method>
			<Method>
				<Name>substractEntries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subtracts entries to the <c>CostDescriptorBalanceMap</c>.
    /// </summary>
    /// <param name="_enumerator">
    /// An instance of the <c>CostEntryEnumerator</c> class with a collection of entries.
    /// </param>
    public void substractEntries(CostEntryEnumerator _enumerator)
    {
        _enumerator.reset();
        while (_enumerator.moveNext())
        {
            this.subtractEntry(_enumerator.current());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>substractMagnitude</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subtracts a magnitude to the The <c>CostDescriptorBalanceMap</c>.
    /// </summary>
    /// <param name="_descriptor">
    /// The <c>CostEntryDescriptorBase</c> to subtract the magnitude from.
    /// </param>
    /// <param name="_magnitude">
    /// The <c>CostMagnitude</c>.
    /// </param>
    public void substractMagnitude(CostEntryDescriptorBase _descriptor, CostMagnitude _magnitude)
    {
        descriptors.insert(_descriptor, this.getBalance(_descriptor) - _magnitude);
    }

]]></Source>
			</Method>
			<Method>
				<Name>subtractEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subtracts an <c>CostEntryBase</c> entry to the <c>CostDescriptorBalanceMap</c>.
    /// </summary>
    /// <param name="_entry">
    /// An <c>CostEntryBase</c> entry.
    /// </param>
    public void subtractEntry(CostEntryBase _entry)
    {
        this.substractMagnitude(_entry.parmDescriptor().reconciledDescriptor(), _entry.parmMagnitude());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CostDescriptorBalanceMap construct()
    {
        return new CostDescriptorBalanceMap();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>