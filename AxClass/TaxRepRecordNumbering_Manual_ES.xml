<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxRepRecordNumbering_Manual_ES</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxRepRecordNumbering_Manual_ES</c> class represents an algorithm for manual numbering of
///    Tax Report 340 records.Record numbers are produced by this algorithm.- start from <paramref
///    name="_firstNumber" /> specified in the constructor.- are sequential, that is, 1, 2, and so on.-
///    get formatted according to the <paramref name="_recordNumberFormat" /> specified in the
///    constructor.- <c>TaxReportLines</c> with same <c>Voucher</c> and <c>TransDate</c> will have the
///    same record number.
/// </summary>
/// <remarks>
///    Warning! Prerequisite for using this class is to have your sequence of <c>TaxReportLines</c> sorted
///    by <c>Voucher</c> and <c>TransDate</c> fields.
/// </remarks>
public class TaxRepRecordNumbering_Manual_ES extends TaxRepRecordNumbering_ES
{
    Voucher                     prevVoucher;
    TransDate                   prevTransDate;
    CustAccount                 prevAccountNum;
    Yr                          prevCashInvoiceYear;

    int                         currentNumber;
    NumberSequenceFormat        recordNumberFormat;

    TaxReportRecord             lastNum;
    TaxReportRecord             firstNum;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>firstNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the first record number that is generated by the algorithm.
    /// </summary>
    /// <returns>
    ///    The first record number that is generated by the algorithm
    /// </returns>
    public TaxReportRecord firstNum()
    {
        return firstNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextRecordNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the current Tax Report 340 line number, depending on the properties of the line.
    /// </summary>
    /// <param name="_taxReportLines">
    ///    The line for which the record number is being generated.
    /// </param>
    /// <returns>
    ///    The next record number.
    /// </returns>
    public TaxReportRecord getNextRecordNumber(TaxReportLines _taxReportLines)
    {
        TaxReportRecord result;

        if (_taxReportLines.Voucher != prevVoucher
            || _taxReportLines.TransDate != prevTransDate
            || _taxReportLines.AccountNum != prevAccountNum
            || _taxReportLines.CashInvoiceYear != prevCashInvoiceYear)
        {
            result  = NumberSeq::numInsertFormat(currentNumber, recordNumberFormat);

            firstNum = firstNum == '' ? result : firstNum;
            lastNum = result;

            prevVoucher = _taxReportLines.Voucher;
            prevTransDate = _taxReportLines.TransDate;
            prevAccountNum = _taxReportLines.AccountNum;
            prevCashInvoiceYear = _taxReportLines.CashInvoiceYear;

            currentNumber++;
        }
        else
        {
            result = lastNum;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the last record number that is generated by the algorithm.
    /// </summary>
    /// <returns>
    ///    The last record number that is generated by the algorithm.
    /// </returns>
    public TaxReportRecord lastNum()
    {
        return lastNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the class.
    /// </summary>
    /// <param name="_firstNumber">
    ///    The number of the first line.
    /// </param>
    /// <param name="_recordNumberFormat">
    ///    The numbering format, for example, <c>Line####</c>.
    /// </param>
    public void new(int _firstNumber, NumberSequenceFormat _recordNumberFormat)
    {
        firstNum            = '';
        lastNum             = '';
        currentNumber       = _firstNumber;
        recordNumberFormat  = _recordNumberFormat;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>