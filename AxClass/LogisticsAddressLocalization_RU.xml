<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsAddressLocalization_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// RUS specific address logic.
/// </summary>
[LogisticsAddressLocalizationCountryRegionAttribute('RUS')]
internal final class LogisticsAddressLocalization_RU extends LogisticsAddressLocalizationBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateDefaultCityKey</Name>
				<Source><![CDATA[
    public LogisticsAddressCityKey calculateDefaultCityKey(LogisticsAddressCity _city)
    {
        LogisticsAddressCity settlementTable, cityTable;
        str settlement, locality, city;
        switch (_city.AddressLevel_RU)
        {
            case LogisticsCityAddressLevel_RU::Settlement:
                settlement = _city.Name;
                break;

            case LogisticsCityAddressLevel_RU::City:
                settlementTable = LogisticsAddressCity::find_RU(_city.SettlementRecId);
                if (settlementTable.RecId)
                {
                    settlement = settlementTable.Name;
                }
                city = _city.Name;
                break;

            case LogisticsCityAddressLevel_RU::Locality:
                settlementTable = LogisticsAddressCity::find_RU(_city.SettlementRecId);
                cityTable = LogisticsAddressCity::find_RU(_city.CityRecId);
                if (settlementTable.RecId)
                {
                    settlement = settlementTable.Name;
                }
                if (cityTable.RecId)
                {
                    city = cityTable.Name;
                }
                locality = _city.Name;
                break;
        }

        LogisticsAddressCityKey key = this.mergeStr([locality, city, settlement, _city.CountyId, _city.StateId, _city.CountryRegionId]);
        return key;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>