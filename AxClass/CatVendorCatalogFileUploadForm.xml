<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatVendorCatalogFileUploadForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatVendorCatalogFileUploadForm
{
    CatVendorCatalogMaintenanceRequest catVendorCatalogMaintenanceRequest;
    CatVendorCatalog catVendorCatalog;

    FileUpload fileUpload;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFileUpload</Name>
				<Source><![CDATA[
    public FileUpload parmFileUpload(FileUpload _fileUpload = fileUpload)
    {
        fileUpload = _fileUpload;

        return fileUpload;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(CatVendorCatalogMaintenanceRequest _catVendorCatalogMaintenanceRequest, CatVendorCatalog _catVendorCatalog)
    {
        catVendorCatalogMaintenanceRequest = _catVendorCatalogMaintenanceRequest;
        catVendorCatalog = _catVendorCatalog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileUploadParameters</Name>
				<Source><![CDATA[
    private CatVendorFileUploadParameters getFileUploadParameters()
    {
        CatVendorDate effectiveDate = catVendorCatalogMaintenanceRequest.PriceValidFromDate;
        if (!effectiveDate)
        {
            effectiveDate = DateTimeUtil::date(DateTimeUtil::utcNow());
        }

        CatVendorDate expirationDate = catVendorCatalogMaintenanceRequest.PriceValidToDate;
        if (!expirationDate)
        {
            expirationDate = DateTimeUtil::date(DateTimeUtil::maxValue());
        }

        CatVendorCatalogFileUploadType fileUploadType = catVendorCatalogMaintenanceRequest.UploadType;

        CatVendorFileUploadParameters catVendorFileUploadParameters = new CatVendorFileUploadParameters();
        catVendorFileUploadParameters.parmEffectiveDate(effectiveDate);
        catVendorFileUploadParameters.parmExpirationDate(expirationDate);
        catVendorFileUploadParameters.parmCategoryHierarchyType(catVendorCatalogMaintenanceRequest.CategoryHierarchyType);
        catVendorFileUploadParameters.parmFileUploadType(fileUploadType);

        catVendorFileUploadParameters.parmVendorParty(catVendorCatalog.VendorParty);
        catVendorFileUploadParameters.parmCatalogName(catVendorCatalog.Name);

        return catVendorFileUploadParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processFile</Name>
				<Source><![CDATA[
    public void processFile()
    {
        FileUploadTemporaryStorageResult fileUploadResult = fileUpload.getFileUploadResult();

        InteropPermission perm = new InteropPermission(InteropKind::ClrInterop);
        perm.assert();

        if (fileUploadResult == null || !fileUploadResult.getUploadStatus() || fileUploadResult.getFileName() == "" )
        {
            throw error("@SYS329825");
        }

        CatVendorFileUploadParameters catVendorFileUploadParameters = this.getFileUploadParameters();
        CatVendorCatalogFileByStream catVendorCatalogFileByStream = new CatVendorCatalogFileByStream(fileUploadResult.getFileName(),
                                                                                                fileUploadResult.openResult());

        CatVendorCatalogImportFacade catalogImportFacade = new CatVendorCatalogImportFacade(catVendorFileUploadParameters, catVendorCatalogFileByStream);

        catalogImportFacade.process();
        catalogImportFacade.postProcess();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>