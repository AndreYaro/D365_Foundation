<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendUnrealizedRevActionAdapter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The class delegates the actions on reversal journal form.
/// </summary>
class CustVendUnrealizedRevActionAdapter
{    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        #ISOCountryRegionCodes
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
            [#isoTH, GlobalizationConstants::FeatureReferenceTH00002] ],
            funcName()
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameterFailed</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Throws the exception for the failure of the parameter validation.
    /// </summary>
    /// <exception cref="Exception::Error">
    ///     The error of the parameter validation.
    /// </exception>
    private static void checkParameterFailed()
    {
        // Reverse unrealized VAT actions must be called with right parameter.
        throw error("@SYS4082812");
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        static void main(Args  args)
    {
        Common record;
        int    paramEnumType;
        int    paramEnum;

        if (!args)
        {
            CustVendUnrealizedRevActionAdapter::checkParameterFailed();
        }

        record = args.record();
        if (!record || record.RecId == 0)
        {
            CustVendUnrealizedRevActionAdapter::checkParameterFailed();
        }

        paramEnumType   = args.parmEnumType();
        paramEnum       = args.parmEnum();

        if (paramEnumType != enumNum(CustVendUnrealizedRevActionType)
            || paramEnum  == 0)
        {
            CustVendUnrealizedRevActionAdapter::checkParameterFailed();
        }

        switch (record.TableId)
        {
            case tableNum(VendUnrealizedRev) :
                CustVendUnrealizedRevActionAdapter::performVendActions(record, paramEnum);
                break;

            default :
                CustVendUnrealizedRevActionAdapter::checkParameterFailed();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>performVendActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Performs actions for vendor reversal journal.
    /// </summary>
    /// <param name="_unrealizedRev">
    ///     The reverse unrealized VAT record.
    /// </param>
    /// <param name="_paramEnum">
    ///     The type of action
    /// </param>
    private static void performVendActions(
        CustVendUnrealizedRev       _unrealizedRev,
        int                         _paramEnum)
    {
        VendUnrealizedRevType       unrealizedRevType;

        unrealizedRevType = VendUnrealizedRevType::constructByUnrealizedRevRecId(_unrealizedRev.RecId);

        switch (_paramEnum)
        {
            case CustVendUnrealizedRevActionType::Post:
                unrealizedRevType.post();
                break;

            default :
                CustVendUnrealizedRevActionAdapter::checkParameterFailed();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>