<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetPost_HU</Name>
	<SourceCode>
		<Declaration><![CDATA[
final public class AssetPost_HU extends AssetPost
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
	public boolean check(boolean _budget = false, boolean _checkNetBookValue = true)
    {
        boolean ok = super(_budget, _checkNetBookValue);

        AssetParameters assetParameters = AssetParameters::find();
        AssetBook assetBook = AssetBook::find(assetTrans.AssetId, assetTrans.BookId);
        AssetDepreciationMethod assetDepreciationMethod = assetBook.depreciationMethod();

        if (assetBook.LifeTimeRest
            && !(assetTrans.TransType == AssetTransType::None
				|| assetTrans.TransType == AssetTransType::Acquisition
				|| assetTrans.TransType == AssetTransType::AcquisitionAdj
				|| assetTrans.TransType == AssetTransType::Depreciation
				|| assetTrans.TransType == AssetTransType::PreAcquisition_CZ)
			&& assetTrans.TransDate < assetBook.LastDepreciationDate)
        {
            ok = checkFailed(strFmt("@FixedAssets:FA_ErrorMessage_ContinuousDeprTranMustExistWithTheSameDayForTheCurrentAsset", assetTrans.TransType));
        }

        if (!ledgerJournalTrans_Asset.isSplitTransaction()
			&& AssetParameters::find().AllowPreAcquisition_CZ != AssetAllowPreAcquisition_CZ::No)
        {
            AssetSumCalc_Trans sumCalcPreAcq = AssetSumCalc_Trans::newAssetPeriod(assetBook.AssetId, assetBook.BookId, dateNull(), assetTrans.TransDate);
            if (assetTrans.TransType == AssetTransType::PreAcquisition_CZ)
            {
                if (sumCalcPreAcq.preAcquisitionValue_CZ() + assetTrans.AmountMST < 0)
                {
                    return checkFailed(strFmt("@FixedAssets:FA_MessageError_PostedPreAcquisitionValueWillBeNegative", assetBook.AssetId, assetBook.BookId));
                }
            }
            else if (assetTrans.TransType == AssetTransType::Acquisition
				|| assetTrans.TransType == AssetTransType::AcquisitionAdj
				|| assetTrans.TransType == AssetTransType::CapitalReserveTransfer)
            {
                AssetSumCalc_Trans sumCalcAcq = AssetSumCalc_Trans::newAssetPeriod(assetBook.AssetId, assetBook.BookId, dateNull(), dateMax());
                if (sumCalcPreAcq.preAcquisitionValue_CZ() < sumCalcAcq.acquisitionValueAll() + assetTrans.AmountMST)
                {
                    ok = checkFailed(strFmt("@FixedAssets:FA_MessageError_AcquisitionAmountIsGreaterThanPreAcquisitionAmount", assetBook.AssetId, assetBook.BookId));
                }
            }
        }

        if (AssetBookTable::find(assetBook.BookId).LowCostAsset_HU
			&& (assetTrans.TransType == AssetTransType::PreAcquisition_CZ
				|| assetTrans.TransType == AssetTransType::Acquisition))
        {
            if (assetTrans.AmountMST > assetParameters.LowCostAssetThreshold_W)
            {
                ok = checkFailed(strFmt("@GLS112913", assetParameters.LowCostAssetThreshold_W));
            }

            if (assetTrans.TransType == AssetTransType::Acquisition)
            {
                LedgerJournalTrans ledgerJournalTransLocal;
                LedgerJournalTrans_Asset ledgerJournalTrans_AssetLocal;
                select firstonly RecId from ledgerJournalTransLocal
					where ledgerJournalTransLocal.JournalNum == ledgerJournalTrans.JournalNum
						&& ledgerJournalTransLocal.AccountType == LedgerJournalACType::FixedAssets
						&& ledgerJournalTransLocal.LedgerDimension == ledgerJournalTrans.LedgerDimension
                    join RecId from ledgerJournalTrans_AssetLocal
					where ledgerJournalTrans_AssetLocal.RefRecId == ledgerJournalTransLocal.RecId
						&& ledgerJournalTrans_AssetLocal.BookId == ledgerJournalTrans_Asset.BookId
						&& ledgerJournalTrans_AssetLocal.TransType == AssetTransTypeJournal::Depreciation;
                if (!ledgerJournalTransLocal)
                {
                    ok = checkFailed("@GLS112914");
                }
            }

            if (assetDepreciationMethod == AssetDepreciationMethod::StraightLine
				|| assetDepreciationMethod == AssetDepreciationMethod::StraightLine_HU
				|| assetDepreciationMethod == AssetDepreciationMethod::Manual)
            {
                if (assetDepreciationMethod != AssetDepreciationMethod::Manual
					&& assetBook.LifeTime != 1)
                {
                    ok = checkFailed(strFmt("@GLS221078", assetDepreciationMethod));
                }
            }
            else
            {
                ok = checkFailed(strFmt("@GLS221077", AssetDepreciationMethod::StraightLine, AssetDepreciationMethod::StraightLine_HU, AssetDepreciationMethod::Manual));
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTransType</Name>
				<Source><![CDATA[
	/// <summary>
    /// Determines whether the transaction type is supported for posting.
    /// For pre-acquistion transactions to be valid, the allowPreAcquistion_CZ parameter must be set to yes.
    /// </summary>
    /// <param name="_transType">
    /// The transaction type to check.
    /// </param>
    /// <returns>
    /// True if the transaction type is supported, false otherwise.
    /// </returns>
    protected boolean checkTransType(AssetTransType _transType)
    {
        boolean ret = false;

        if (_transType == AssetTransType::ExtraordinaryDepreciation
            || _transType == AssetTransType::CapitalReserveTransfer
            || _transType == AssetTransType::CapitalReserve
            || _transType == AssetTransType::WriteDownAdjThisYear
            || _transType == AssetTransType::WriteDownAdjPriorYears
            || _transType == AssetTransType::WriteUpAdjThisYear
            || _transType == AssetTransType::WriteUpAdjPriorYears
            || _transType == AssetTransType::RevalueThisYear
            || _transType == AssetTransType::RevaluePriorYears
            || _transType == AssetTransType::DepAdjThisYear
            || _transType == AssetTransType::DepAdjPriorYears
            || _transType == AssetTransType::DepThisYear
            || _transType == AssetTransType::DepPriorYears
            || _transType == AssetTransType::AcqAdjThisYear
            || _transType == AssetTransType::AcqAdjPriorYears
            || _transType == AssetTransType::AcqThisYear
            || _transType == AssetTransType::AcqPriorYears
            || _transType == AssetTransType::ProfitLoss
            || _transType == AssetTransType::NetBookValue
            || _transType == AssetTransType::DisposalScrap
            || _transType == AssetTransType::DisposalSale
            || _transType == AssetTransType::WriteDownAdj
            || _transType == AssetTransType::WriteUpAdj
            || _transType == AssetTransType::Revaluation
            || _transType == AssetTransType::DepreciationAdj
            || _transType == AssetTransType::Depreciation
            || _transType == AssetTransType::AcquisitionAdj
            || _transType == AssetTransType::Acquisition
            || _transType == AssetTransType::None
            || _transType == AssetTransType::DerogatoryDecrease
            || _transType == AssetTransType::DerogatoryIncrease
            || (_transType == AssetTransType::PreAcquisition_CZ
                && AssetParameters::find().AllowPreAcquisition_CZ != AssetAllowPreAcquisition_CZ::No))
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>