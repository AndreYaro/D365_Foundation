<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventQualityOrderReopen</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventQualityOrderReopen</c> class performs reopening of the quality order.
/// </summary>
public class InventQualityOrderReopen
{
    InventQualityOrderTable inventQualityOrderTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventQualityOrderTable</Name>
				<Source><![CDATA[
        public InventQualityOrderTable parmInventQualityOrderTable(InventQualityOrderTable _inventQualityOrderTable = inventQualityOrderTable)
    {
        inventQualityOrderTable = _inventQualityOrderTable;

        return inventQualityOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTestOrderStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventQualityOrderTable</c> record's OrderStatus field.
    /// </summary>
    /// <param name = "_inventQualityOrderTable">The <c>InventQualityOrderTable</c> record to set.</param>
    /// <param name = "_inventTestOrderStatus">The <c>InventTestOrderStatus</c> enum value.</param>
    protected void setInventTestOrderStatus(InventQualityOrderTable _inventQualityOrderTable, InventTestOrderStatus _inventTestOrderStatus)
    {
        _inventQualityOrderTable.OrderStatus = _inventTestOrderStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reopens a quality order.
    /// </summary>
    void run()
    {
        InventBlockingQualityOrderSync  inventBlockingQualityOrderSync;

        ttsbegin;
        this.setInventTestOrderStatus(inventQualityOrderTable, InventTestOrderStatus::Open);
        inventQualityOrderTable.update();

        if (inventQualityOrderTable.BlockingQty > 0
         && InventQualityReferenceType::newFromQualityOrder(inventQualityOrderTable).supportsInventoryBlocking())
        {
            inventBlockingQualityOrderSync      = InventBlockingQualityOrderSync::construct();
            inventBlockingQualityOrderSync.onQualityOrderBlockingRequestCreate(inventQualityOrderTable);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that a quality order can be reopened.
    /// </summary>
    /// <param name="calledFrom">
    ///    A <c>calledFrom</c> object.
    /// </param>
    /// <returns>
    ///    true if the quality order can be reopened; otherwise, false.
    /// </returns>
    public boolean validate(Object calledFrom = null)
    {
        boolean                     ret = true;
        InventModelGroup            inventModelGroup;
        SysInfoAction_MenuFunction  sysInfoAction;

        if (inventQualityOrderTable.RecId == 0)
        {
            ret = checkFailed("@SYS136743");
        }

        if (ret && inventQualityOrderTable.OrderStatus == InventTestOrderStatus::Open)
        {
            ret = checkFailed("@SYS136744");
        }

        if (ret && inventQualityOrderTable.TestDestructive == NoYes::Yes)
        {
            ret = checkFailed("@SYS136745");
        }

        if (ret)
        {
            inventModelGroup = inventQualityOrderTable.inventTable().modelGroup();
            if (!inventModelGroup.isStocked())
            {
                sysInfoAction = SysInfoAction_MenuFunction::newMenuItem(menuitemDisplayStr(InventModelGroup), MenuItemType::Display);
                sysInfoAction.parmCallerBuffer(inventModelGroup);
                ret = checkFailed(strFmt("@SYS324490", fieldPName(InventModelGroup, StockedProduct)), '', sysInfoAction);
            }
        }

        if (ret && WHSWorkTable::qualityOrderWorkExists(inventQualityOrderTable.QualityOrderId))
        {
            ret = checkFailed("@WAX:WHSWorkForClosedOrInprogressQualityOrderExists");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventQualityOrderReopen construct()
    {
        return new InventQualityOrderReopen();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRunInventQualityOrderReopen</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the <c>InventQualityOrderReopen</c> instance should be run.
    /// </summary>
    /// <param name = "args">The <c>InventQualityOrderReopen</c> instance to validate.</param>
    /// <returns>true if valid for run; otherwise, false.</returns>
    protected static boolean validateRunInventQualityOrderReopen(InventQualityOrderReopen _inventQualityOrderReopen)
    {
        return _inventQualityOrderReopen.validate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        using (SysErrorMessageHelpScope scope = SysErrorMessageHelpScope::newErrorContext(args))
        {
            InventQualityOrderReopen inventQualityOrderReopen = InventQualityOrderReopen::newFromArgs(args);

            if (InventQualityOrderReopen::validateRunInventQualityOrderReopen(inventQualityOrderReopen))
            {
                inventQualityOrderReopen.run();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and initializes a new instance of the <c>InventQualityOrderReopen</c> class.
    /// </summary>
    /// <param name="_args">
    ///    The input arguments.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>InventQualityOrderReopen</c> class.
    /// </returns>
    public static InventQualityOrderReopen newFromArgs(Args _args)
    {
        InventQualityOrderReopen    inventQualityOrderReopen;
        InventQualityOrderTable     inventQualityOrderTable;

        if (!_args || _args.dataset() != tableNum(InventQualityOrderTable))
        {
            throw error(strFmt("@SYS134996", tableStr(InventQualityOrderTable)));
        }

        inventQualityOrderTable     = _args.record();

        inventQualityOrderReopen    = InventQualityOrderReopen::construct();
        inventQualityOrderReopen.parmInventQualityOrderTable(inventQualityOrderTable);

        return inventQualityOrderReopen;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>