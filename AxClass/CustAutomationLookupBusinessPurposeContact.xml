<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAutomationLookupBusinessPurposeContact</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>CustAutomationLookupBusinessPurposeContact</c> class is the implementation of business purpose contact lookup for the current state of a strategy line.
/// </summary>
[ExportMetadataAttribute(enumstr(CustAutomationLookupField), CustAutomationLookupField::BusinessPurposeContact)]
[ExportAttribute(identifierstr(Dynamics.AX.Application.CustAutomationILookup))]
internal final class CustAutomationLookupBusinessPurposeContact implements CustAutomationILookup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>resolveLookup</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void resolveLookup(CustAutomationStrategyLine _line, FormControl _control)
    {
        switch (_line.ActionType)
        {
            case CustAutomationActionType::Activity:
            case CustAutomationActionType::CollectionLetter:
                return;
            case CustAutomationActionType::Email:
                this.lookupEmail(_line.Recipient, _control);
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupEmail</Name>
				<Source><![CDATA[
    private void lookupEmail(CustAutomationRecipient _recipient, FormControl _control)
    {
        switch (_recipient)
        {
            case CustAutomationRecipient::Customer:
                this.lookupEmailCustomer(_control);
                break;
            case CustAutomationRecipient::CollectionsAgent:
                this.lookupEmailCollectionsAgent(_control);
                break;
            case CustAutomationRecipient::SalesGroup:
                this.lookupEmailSalesGroup(_control);
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupEmailCustomer</Name>
				<Source><![CDATA[
    private void lookupEmailCustomer(FormControl _control)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(LogisticsLocationRole), _control);
        Query q = new Query();
        QueryBuildDataSource qbds = q.addDataSource(tableNum(LogisticsLocationRole));
        qbds.addRange(fieldNum(LogisticsLocationRole, IsContactInfo)).value(SysQuery::value(NoYes::Yes));
        qbds.addSortField(fieldNum(LogisticsLocationRole, Name), SortOrder::Ascending);

        sysTableLookup.parmQuery(q);
        sysTableLookup.addLookupfield(fieldNum(LogisticsLocationRole, Name), true);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupEmailCollectionsAgent</Name>
				<Source><![CDATA[
    private void lookupEmailCollectionsAgent(FormControl _control)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(DirPartyTable), _control);
        Query q = new Query();
        QueryBuildDataSource qbdsDirParty = q.addDataSource(tableNum(DirPartyTable));

        QueryBuildDataSource qbdsDirPartyRel = qbdsDirParty.addDataSource(tableNum(DirPartyRelationship));
        qbdsDirPartyRel.addLink(fieldNum(DirPartyTable, RecId), fieldNum(DirPartyRelationship, ChildParty));

        QueryBuildDataSource qbdsCollectionsAgent = qbdsDirPartyRel.addDataSource(tableNum(CustCollectionsAgent));
        qbdsCollectionsAgent.addLink(fieldNum(DirPartyRelationship, RecId), fieldNum(CustCollectionsAgent, DirPartyRelationship));

        sysTableLookup.parmQuery(q);
        sysTableLookup.addLookupfield(fieldNum(DirPartyTable, Name), true);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupEmailSalesGroup</Name>
				<Source><![CDATA[
    private void lookupEmailSalesGroup(FormControl _control)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(CommissionSalesRep), _control);
        Query q = new Query();
        QueryBuildDataSource qbdsCommissionSalesRep = q.addDataSource(tableNum(CommissionSalesRep));
        qbdsCommissionSalesRep.addRange(fieldNum(CommissionSalesRep, CustomersContact)).value(SysQuery::value(NoYes::Yes));

        QueryBuildDataSource qbdsDirPerson = qbdsCommissionSalesRep.addDataSource(tableNum(DirPerson));
        qbdsDirPerson.addLink(fieldNum(CommissionSalesRep, Person), fieldNum(DirPerson, RecId));

        sysTableLookup.parmQuery(q);
        sysTableLookup.addLookupfield(fieldNum(CommissionSalesRep, GroupId), true);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>