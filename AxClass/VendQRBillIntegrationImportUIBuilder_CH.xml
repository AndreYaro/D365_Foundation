<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendQRBillIntegrationImportUIBuilder_CH</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI builder of the import QR-Bill procedure.
/// </summary>
public class VendQRBillIntegrationImportUIBuilder_CH extends SysOperationAutomaticUIBuilder
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    public void postBuild()
    {
        super();

        VendQRBillIntegrationImportContract_CH contract = this.dataContractObject();

        DialogField invoiceJourNumField = this.bindInfo().getDialogField(contract,
            methodStr(VendQRBillIntegrationImportContract_CH, parmInvoiceJourNum));

        boolean isJournalNumVisible = !contract.parmIsFromPendingInvoice();

        invoiceJourNumField.visible(isJournalNumVisible);

        if (isJournalNumVisible)
        {
            invoiceJourNumField.allowEdit(!contract.parmIsFromInvoiceJournal());
        }

        DialogField importFormatMappingFieldId = this.bindInfo().getDialogField(contract,
            methodStr(VendQRBillIntegrationImportContract_CH, parmImportFormatMappingId));

        importFormatMappingFieldId.registerOverrideMethod(methodStr(FormReferenceControl, lookupReference),
            methodStr(VendQRBillIntegrationImportUIBuilder_CH, importFormatMappingFieldId_LookupReference), this);
        importFormatMappingFieldId.registerOverrideMethod(methodStr(FormReferenceGroupControl, modified),
            methodStr(VendQRBillIntegrationImportUIBuilder_CH, importFormatMappingFieldId_Modified), this);

        DialogField modelMappingField = this.bindInfo().getDialogField(contract,
            methodStr(VendQRBillIntegrationImportContract_CH, parmModelMappingId));

        modelMappingField.visible(!contract.parmIsFromInvoiceJournal()
            && !contract.parmIsFromPendingInvoice());

        modelMappingField.registerOverrideMethod(methodStr(FormReferenceControl, lookupReference),
            methodStr(VendQRBillIntegrationImportUIBuilder_CH, modelMappingField_LookupReference), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modelMappingField_LookupReference</Name>
				<Source><![CDATA[
    private Common modelMappingField_LookupReference(FormReferenceControl _formReferenceControl)
    {
        VendQRBillIntegrationImportContract_CH contract = this.dataContractObject();
        return VendQRBillIntegrationImportUIBuilder_CH::lookupQRBillFinalModelMapping(_formReferenceControl, contract.parmImportFormatMappingId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>importFormatMappingFieldId_LookupReference</Name>
				<Source><![CDATA[
    private Common importFormatMappingFieldId_LookupReference(FormReferenceControl _formReferenceControl)
    {
        return VendQRBillIntegrationImportUIBuilder_CH::lookupQRBillImportModelMapping(_formReferenceControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>importFormatMappingFieldId_Modified</Name>
				<Source><![CDATA[
    private boolean importFormatMappingFieldId_Modified(FormReferenceGroupControl _formReferenceGroupControl)
    {
        boolean ret = _formReferenceGroupControl.modified();
        
        if (ret)
        {
            VendQRBillIntegrationImportContract_CH contract = this.dataContractObject();

            contract.parmImportFormatMappingId(_formReferenceGroupControl.value());

            ERModelMappingID modelMappingId = 0;

            if (contract.parmIsFromInvoiceJournal())
            {
                LedgerJournalTable ledgerJournalTable = LedgerJournalTable::find(contract.parmInvoiceJourNum());
                modelMappingId = VendQRBillIntegrationImportService_CH::getQRModelMappingRecIdgByImportFormatMappingAndIntegrationPoint(
                    contract.parmImportFormatMappingId(),
                    VendQRBillIntegrationImportService_CH::getIntegrationPointFromJournalType(ledgerJournalTable.JournalType));
            }
            else if (contract.parmIsFromPendingInvoice())
            {
                modelMappingId = VendQRBillIntegrationImportService_CH::getQRModelMappingRecIdgByImportFormatMappingAndIntegrationPoint(
                    contract.parmImportFormatMappingId(),
                    VendQRBillIntegrationImportService_CH::VendorInvoiceHeaderEntityIntegrationPoint);
            }

            FormReferenceGroupControl modelMappingControl = this.bindInfo().getDialogField(contract,
                methodStr(VendQRBillIntegrationImportContract_CH, parmModelMappingId)).control();
            modelMappingControl.value(modelMappingId);
            modelMappingControl.update();

            contract.parmModelMappingId(modelMappingId);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupQRBillFinalModelMapping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a lookup form of GER model mapping that from the same model as the model mapping
    /// in the <paramref name="_interimModelMappingId"/> and having the same descriptor.
    /// </summary>
    /// <param name = "_formReferenceControl">The form controll.</param>
    /// <param name = "_interimModelMappingId">The reference to the model mapping.</param>
    /// <returns>Selected record.</returns>
    public static Common lookupQRBillFinalModelMapping(
        FormReferenceControl _formReferenceControl,
        ERModelMappingId _interimModelMappingId)
    {
        SysReferenceTableLookup sysReferenceTableLookup;
        Query                   query = new Query();
        sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(ERModelMappingTable), _formReferenceControl, true);

        ERModelMappingTable interimModelMapping = ERModelMappingTable::find(_interimModelMappingId);
        QueryBuildDataSource qbds = query.addDataSource(tableNum(ERModelMappingTable));

        qbds.addRange(fieldNum(ERModelMappingTable, IsDeleted)).value(queryValue(NoYes::No));

        qbds = qbds.addDataSource(tableNum(ERIntegrationPointDestinationMapping));
        qbds.joinMode(JoinMode::ExistsJoin);
        qbds.addLink(fieldNum(ERModelMappingTable, RecId), fieldNum(ERIntegrationPointDestinationMapping, DestinationMapping));

        qbds.addRange(fieldNum(ERIntegrationPointDestinationMapping, DataModel)).value(queryValue(interimModelMapping.dataModel().RecId));
        qbds.addRange(fieldNum(ERIntegrationPointDestinationMapping, DataContainerDescriptor)).value(queryValue(interimModelMapping.DataContainerDescriptor));
        qbds.addRange(fieldNum(ERIntegrationPointDestinationMapping, IntegrationPoint)).value(SysQuery::valueNot(VendQRBillIntegrationImportService_CH::VendorInterimIntegrationPoint));

        sysReferenceTableLookup.addLookupfield(fieldNum(ERModelMappingTable, Name));
        sysReferenceTableLookup.parmQuery(query);

        return sysReferenceTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupQRBillImportModelMapping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a lookup form of GER model mapping for importing format.
    /// </summary>
    /// <param name = "_formReferenceControl">The form controll.</param>
    /// <returns>Selected record.</returns>
    public static Common lookupQRBillImportModelMapping(FormReferenceControl _formReferenceControl)
    {
        return ERModelMappingTable::lookup(_formReferenceControl, VendQRBillIntegrationImportService_CH::VendorInterimIntegrationPoint);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>