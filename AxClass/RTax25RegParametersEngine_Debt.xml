<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25RegParametersEngine_Debt</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class RTax25RegParametersEngine_Debt extends RTax25RegParametersEngine
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>specificParm</Name>
				<Source><![CDATA[
    public boolean specificParm()
    {
        return regType.registerType() == RTax25RegisterType::DebtCreditInventory ||
               regType.registerType() == RTax25RegisterType::DebtDebitInventory ||
               regType.registerType() == RTax25RegisterType::DebtDebitInventoryRAP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>specificParmCall</Name>
				<Source><![CDATA[
    public void specificParmCall()
    {
        Args   args = new Args();
        ;
        args.caller(this);

        switch (regType.registerType())
        {
            case RTax25RegisterType::DebtCreditInventory:
                new MenuFunction(menuitemdisplaystr(RTax25DebtPeriodCredit), MenuItemType::Display).run(args);
                break;
            case RTax25RegisterType::DebtDebitInventory:
            case RTax25RegisterType::DebtDebitInventoryRAP:
                new MenuFunction(menuitemdisplaystr(RTax25DebtModel), MenuItemType::Display).run(args);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    public void lookup(FormStringControl _lookupCtrl)
    {
        registerParameters = registerParametersDs.cursor();

        switch (registerParameters.ParameterCode)
        {
            case 1: // Extra number of threads in batch calculation
                break;

            default :
                throw error("@SYS3461");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        Range           line;
        boolean         ret = true;

        registerParameters = registerParametersDs.cursor();

        if (! registerParameters.Parameter)
            return true;

        switch (registerParameters.ParameterCode)
        {
            case 1:
                line = strltrim(strrtrim(registerParameters.Parameter));
                if (strrem(line, '0123456789'))
                    ret = checkFailed("@SYS75090");
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>