<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTotalsCalculateInstrumentationLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesTotalsCalculateLogger</c> class provides activity contexts for sales totals calculation.
/// </summary>
internal final class SalesTotalsCalculateInstrumentationLogger
{
    private const str InstrumentationNamespace = 'SalesTotalsCalculate';
    private SysInstrumentationLogger instrumentationLogger;
    private SalesTotalsCalculateInstrumentationActivities salesTotalsCalculateActivities;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(str _name)
    {
        instrumentationLogger = SysInstrumentationLoggerFactory::CreateLogger(_name);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return instrumentationLogger.activityContext(_activityName, InstrumentationNamespace);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLogger</Name>
				<Source><![CDATA[
    internal static SalesTotalsCalculateInstrumentationLogger createLogger(str _name)
    {
        return new SalesTotalsCalculateInstrumentationLogger(_name);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTotalsCalculateActivities</Name>
				<Source><![CDATA[
    internal SalesTotalsCalculateInstrumentationActivities salesTotalsCalculateActivities()
    {
        if (!salesTotalsCalculateActivities)
        {
            salesTotalsCalculateActivities = SalesTotalsCalculateInstrumentationActivities::newFromLogger(this);
        }

        return salesTotalsCalculateActivities;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>