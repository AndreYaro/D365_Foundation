<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchVendorPortalViewResponse</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Opens an archived response or live response, based on the version requested.
/// </summary>
public class PurchVendorPortalViewResponse
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        PurchaseOrderResponseVersion responseVersion;

        if (_args.record().TableId == tableNum(PurchaseOrderResponseHeaderSummary))
        {
            PurchaseOrderResponseHeaderSummary summary = _args.record();

            responseVersion = PurchTableVersion::find(summary.PurchTableVersion).findLatestResponseVersion();
        }
        else if (_args.record().TableId == tableNum(PurchaseOrderResponseHeaderAllVersions))
        {
            PurchaseOrderResponseHeaderAllVersions responseHeader = _args.record();

            responseVersion = PurchTableVersion::find(responseHeader.PurchTableVersion).findLatestResponseVersion();
        }
        else if (_args.record().TableId == tableNum(PurchaseOrderResponseHeaderNotArchivedVersions))
        {
            PurchaseOrderResponseHeaderNotArchivedVersions responseHeader = _args.record();

            responseVersion = PurchTableVersion::find(responseHeader.PurchTableVersion).findLatestResponseVersion();
        }
        else if (_args.record().TableId == tableNum(PurchTableAllVersions))
        {
            PurchTableAllVersions purchTableVersion = _args.record();

            responseVersion = PurchTableVersion::find(purchTableVersion.PurchTableVersionRecId).findLatestResponseVersion();
        }
        else if (_args.record().TableId == tableNum(PurchTable))
        {
            PurchTable purchTable = _args.record();
            PurchaseOrderResponseHeaderNotArchivedVersions responseHeader;
            select firstonly PurchTableVersion, ResponseState from responseHeader
                where responseHeader.PurchId == purchTable.PurchId;

            if (PurchVendorPortalViewResponse::checkIfAllowedToViewLatestResponse(responseHeader.ResponseState))
            {
                responseVersion = PurchTableVersion::find(responseHeader.PurchTableVersion).findLatestResponseVersion();
            }
        }
        else
        {
            throw error("@SYS18626");
        }

        if (_args.parmEnumType() == enumNum(PurchVendorPortalShowResponseType) &&
            _args.parmEnum()     == PurchVendorPortalShowResponseType::LatestResponse)
        {
            responseVersion = responseVersion.latestResponseVersionForPurchOrder();
        }

        PurchTable purchTable = PurchTable::find(responseVersion.purchaseOrderResponseHeader().PurchId);

        if ((responseVersion.IsArchived) ||
            ((responseVersion.ResponseState == PurchaseOrderResponseState::Confirmed) ||
            (responseVersion.ResponseState == PurchaseOrderResponseState::Rejected) ||
            (responseVersion.ResponseState == PurchaseOrderResponseState::AcknowledgedWithChange)) ||
                purchTable.DocumentState == VersioningDocumentState::Confirmed)
        {
            PurchVendorPortalViewResponse::showNonEditableResponse(_args, responseVersion);
        }
        else
        {
            PurchVendorPortalViewResponse::showEditableResponse(_args, responseVersion);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfAllowedToViewLatestResponse</Name>
				<Source><![CDATA[
    private static boolean checkIfAllowedToViewLatestResponse(PurchaseOrderResponseState _purchaseOrderResponseState)
    {
        if (_purchaseOrderResponseState == PurchaseOrderResponseState::Pending || _purchaseOrderResponseState == PurchaseOrderResponseState::Editing)
        {
            throw error("@SCM:VendorHasNotResponded");
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showNonEditableResponse</Name>
				<Source><![CDATA[
    private static void showNonEditableResponse(Args _args, PurchaseOrderResponseVersion _responseVersion)
    {
        PurchaseOrderResponseHeaderAllVersions responseHeader;

        select firstonly responseHeader
                where responseHeader.PurchaseOrderResponseVersion == _responseVersion.RecId;

        Args args = new Args();
        args.caller(_args.caller());
        args.record(responseHeader);
        new MenuFunction(menuItemDisplayStr(PurchVendorPortalAllResponse), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showEditableResponse</Name>
				<Source><![CDATA[
    private static void showEditableResponse(Args _args, PurchaseOrderResponseVersion _responseVersion)
    {
        PurchaseOrderResponseHeader responseHeader = PurchaseOrderResponseHeader::find(_responseVersion.PurchaseOrderResponseHeader);

        Args args = new Args();
        args.caller(_args.caller());
        args.record(responseHeader);
        new MenuFunction(menuItemDisplayStr(PurchVendorPortalNotArchivedResponse), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>