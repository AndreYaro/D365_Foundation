<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveTemplateTypeFactoryAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWaveTemplateTypeFactoryAttribute</c> is a factory attribute class used for instantiation of classes that extends <c>WHSWaveStepCustomMethod</c>.
/// </summary>
class WHSWaveTemplateTypeFactoryAttribute extends SysAttribute implements SysExtensionIAttribute
{
    WHSWaveTemplateType waveTemplateType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(WHSWaveTemplateType _waveTemplateType)
    {
        super();
        waveTemplateType = _waveTemplateType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCacheKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the key used for storing cached data for this attribute.
    /// </summary>
    /// <returns>
    /// A string representing the cache key.
    /// </returns>
    public str parmCacheKey()
    {
        return classStr(WHSWaveTemplateTypeFactoryAttribute) + ';' + int2str(enum2int(waveTemplateType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWaveTemplateType</Name>
				<Source><![CDATA[
    public WHSWaveTemplateType parmWaveTemplateType(WHSWaveTemplateType _waveTemplateType = waveTemplateType)
    {
        waveTemplateType = _waveTemplateType;

        return waveTemplateType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSingleton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the same instance should be returned by the extension framework for a given extension.
    /// </summary>
    /// <returns>
    /// true, if the same instance should be used; otherwise, false.
    /// </returns>
    public boolean useSingleton()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>