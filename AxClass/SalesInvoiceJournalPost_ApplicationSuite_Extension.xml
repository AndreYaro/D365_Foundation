<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesInvoiceJournalPost_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesInvoiceJournalPost))]
public final class SalesInvoiceJournalPost_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>afterLinePost</Name>
				<Source><![CDATA[
    protected void afterLinePost()
    {
        next afterLinePost();

        if (FeatureStateProvider::isFeatureEnabled(SeparateInvoiceOnGoodsDeliveredForFreeFeature::instance()) && !this.isProforma())
        {
            this.postLineSalesForFree_IT();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLineSalesForFree_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds transaction for goods delivered for free.
    /// </summary>
    protected void postLineSalesForFree_IT()
    {
        if (salesLine.GoodsForFree_IT)
        {
            AmountCur revenueAmount = lineValue;
            LedgerVoucher ledgerVoucherLocal = this.getLedgerVoucher();

            if (salesLine.SalesPrice && formletterProvider.lineDiscountLedgerDimension())
            {
                revenueAmount += discValue;
            }

            LedgerVoucherObject ledgerVoucherObject = ledgerVoucherLocal.findLedgerVoucherObject();

            CurrencyExchangeHelper exchangeRateHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId), ledgerVoucherObject.parmAccountingDate());
            exchangeRateHelper.parmExchangeRate1(this.fixedExchRate());
            exchangeRateHelper.parmExchangeRate2(this.fixedExchRateSecondary());

            LedgerDimensionAccount ledgerDimensionMerged = LedgerDimensionFacade::serviceCreateLedgerDimension(salesLine.accountSalesForFreeLedgerDimension_IT(), salesLine.DefaultDimension);

            LedgerVoucherTransObject ledgerVoucherTransObject = LedgerVoucherTransObject::newTransactionAmountDefault(
                ledgerVoucherObject,
                LedgerPostingType::SalesForFree_IT,
                ledgerDimensionMerged,
                salesLine.CurrencyCode,
                revenueAmount,
                exchangeRateHelper);

            ledgerVoucherTransObject.parmTaxParentReferenceTableId(custInvoiceTrans.TableId);
            ledgerVoucherTransObject.parmTaxParentReferenceRecId(custInvoiceTrans.RecId);
            ledgerVoucherTransObject.parmProjLedger(this.projLedger());
            ledgerVoucherLocal.addTrans(ledgerVoucherTransObject);

            LedgerDimensionDefaultAccount accountDisc = formletterProvider.lineDiscountLedgerDimension();

            if (salesLine.GoodsForFree_IT && accountDisc && discValue)
            {
                ledgerDimensionMerged = LedgerDimensionFacade::serviceCreateLedgerDimension(accountDisc, salesLine.DefaultDimension);

                ledgerVoucherTransObject = LedgerVoucherTransObject::newTransactionAmountDefault(
                    ledgerVoucherObject,
                    LedgerPostingType::SalesForFree_IT,
                    ledgerDimensionMerged,
                    salesLine.CurrencyCode,
                    -discValue,
                    exchangeRateHelper);

                ledgerVoucherTransObject.parmTaxParentReferenceTableId(custInvoiceTrans.TableId);
                ledgerVoucherTransObject.parmTaxParentReferenceRecId(custInvoiceTrans.RecId);
                ledgerVoucherTransObject.parmProjLedger(this.projLedger());
                ledgerVoucherLocal.addTrans(ledgerVoucherTransObject);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postCustVend</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Performs the customer related postings.
    ///     Here used due to augmented class limitation: it allows to the method
    ///     to have a sales order header buffer as extra parameter.
    /// </summary>
    protected void postCustVend()
    {
        using (ContextSalesTable_IT contextSalesTable = ContextSalesTable_IT::instance())
        {
            contextSalesTable.salesTable = this.salesTable;
            next postCustVend();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>