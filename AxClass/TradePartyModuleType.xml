<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradePartyModuleType</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>TradePartyModuleType</c> handles the party module types.
/// </summary>
abstract class TradePartyModuleType
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>moduleInventPurchSalesVendCustGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>ModuleInventPurchSalesVendCustGroup</c> based on the <c>TableGroupAll</c> value.
    /// </summary>
    /// <param name = "_tableGroupAll">A <c>TableGroupAll</c> value.</param>
    /// <returns>A <c>ModuleInventPurchSalesVendCustGroup</c> value.</returns>
    abstract public ModuleInventPurchSalesVendCustGroup moduleInventPurchSalesVendCustGroup(TableGroupAll _tableGroupAll)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionHierarchyType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the corresponding <c>DimensionHierarchyType</c>.
    /// </summary>
    /// <returns>A <c>DimensionHierarchyType</c> value.</returns>
    abstract public DimensionHierarchyType dimensionHierarchyType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryHierarchyRole</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the corresponding <c>EcoResCategoryNamedHierarchyRole</c>.
    /// </summary>
    /// <returns>A <c>EcoResCategoryNamedHierarchyRole</c> value.</returns>
    abstract public EcoResCategoryNamedHierarchyRole categoryHierarchyRole()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrLookupCustVendRelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does the lookup based on the <c>TableGroupAll</c> value.
    /// </summary>
    /// <param name = "_ctrl">A <c>FormStringControl</c> object.</param>
    /// <param name = "_tableGroupAll">A <c>TableGroupAll</c> value.</param>
    abstract public void mcrLookupCustVendRelation(FormStringControl _ctrl, TableGroupAll _tableGroupAll)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>partyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the customer/vendor.
    /// </summary>
    /// <param name = "_accountNum">A <c>CustVendAC</c> value.</param>
    /// <returns>The name of the customer/vendor.</returns>
    abstract public CustVendName partyName(CustVendAC _accountNum)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventStatusId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default <c>WHSInventStatusId</c>.
    /// </summary>
    /// <param name = "_accountNum">A <c>CustVendAC</c>.</param>
    /// <returns>A <c>WHSInventStatusId</c>.</returns>
    abstract public WHSInventStatusId defaultInventStatusId(CustVendAC _accountNum)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPartyModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of <c>TradePartyModuleType</c> class for the given <c>ModuleInventCustVend</c>.
    /// </summary>
    /// <param name = "_partyModuleType">The party module.</param>
    /// <returns>A singleton instance.</returns>
    public static TradePartyModuleType newFromPartyModule(ModuleInventCustVend _partyModuleType)
    {
        TradePartyModuleTypeFactoryAttribute attr = new TradePartyModuleTypeFactoryAttribute(_partyModuleType);
        TradePartyModuleType tradePartyModuleType = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(TradePartyModuleType), attr);

        return tradePartyModuleType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isApplicableForModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if there is an implementation of <c>TradePartyModuleType</c> for the particular <c>ModuleInventCustVend</c> enum value.
    /// </summary>
    /// <param name = "_partyModuleType">Module to check.</param>
    /// <returns>true, if the hierarchy is applicable; otherwise, false</returns>
    public static boolean isApplicableForModule(ModuleInventCustVend _partyModuleType)
    {
        TradePartyModuleType instance = TradePartyModuleType::newFromPartyModule(_partyModuleType);

        return instance != null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>