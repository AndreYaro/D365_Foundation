<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSCoCCertificateOfOriginController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TMSCoCCertificateOfOriginController</c> class is the helper class for the associated  report.
/// </summary>
public class TMSCoCCertificateOfOriginController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>SRSReportParameters</c> values to the report contract.
    /// </summary>
    protected void preRunModifyContract()
    {
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;
        WHSShipmentTable        whsShipmentTable;

        super();

        query                   = this.getFirstQuery();
        queryBuildDataSource    = query.dataSourceTable(tableNum(WHSShipmentTable));
        queryBuildRange         = SysQuery::findOrCreateRange(queryBuildDataSource, fieldNum(WHSShipmentTable, ShipmentId));

        if (this.parmArgs().parm())
        {
            queryBuildRange.value(queryValue(this.parmArgs().parm()));
        }
        else if (this.parmArgs().record() && this.parmArgs().dataset() == tableNum(WHSShipmentTable))
        {
            whsShipmentTable = this.parmArgs().record();
            queryBuildRange.value(whsShipmentTable.ShipmentId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initailzes the controller, sets the print management, assigns parameter values and runs the SRS report.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object.
    /// </param>
    public static void main(Args _args)
    {
        const str FeatureReference = 'US-00002';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        TMSCoCCertificateOfOriginController tmsCoCCertificateOfOrigin;

        if (_args.record() && _args.dataset() == tableNum(WHSShipmentTable))
        {
            tmsCoCCertificateOfOrigin = new TMSCoCCertificateOfOriginController();
            tmsCoCCertificateOfOrigin.parmArgs(_args);
            tmsCoCCertificateOfOrigin.parmReportName(ssrsReportStr(TMSCoCCertificateOfOrigin, Report));
            tmsCoCCertificateOfOrigin.parmShowDialog(false);
            tmsCoCCertificateOfOrigin.startOperation();
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>