<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupValueCalculationContext_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MarkupValueCalculationContext_W</c> class helps in transferring context across the methods
/// used for advance invoice line amount calculation considering charges amounts.
/// </summary>
public final class MarkupValueCalculationContext_W implements System.IDisposable
{
    private static MarkupValueCalculationContext_W instance;
    private Amount lineAmount;
    private Qty lineQty;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        if (instance)
        {
            // Nesting is not supported
            throw error(Error::wrongUseOfFunction(classStr(MarkupValueCalculationContext_W)));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static MarkupValueCalculationContext_W current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public Amount parmLineAmount(Amount _lineAmount = lineAmount)
    {
        lineAmount = _lineAmount;
        return lineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public Qty parmLineQty(Qty _lineQty = lineQty)
    {
        lineQty = _lineQty;
        return lineQty;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>