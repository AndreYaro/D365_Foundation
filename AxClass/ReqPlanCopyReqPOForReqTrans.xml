<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPlanCopyReqPOForReqTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqPlanCopyReqPOForReqTrans</c> class copies planned orders from the source master plan version
/// related to the requirement profile in the target master plan version.
/// </summary>
class ReqPlanCopyReqPOForReqTrans extends SysQueryInsertRecordSet
{
    int reqPODatasourceId;
    int reqTransDatasourceId;

    ReqPlanVersion reqPlanVersionFrom;
    ReqPlanVersion reqPlanVersionTo;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    protected void initFieldMapping()
    {
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ItemId), fieldStr(ReqPO, ItemId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, RouteJobsUpdated), fieldStr(ReqPO, RouteJobsUpdated));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ReqDate), fieldStr(ReqPO, ReqDate));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, Qty), fieldStr(ReqPO, Qty));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ReqDateOrder), fieldStr(ReqPO, ReqDateOrder));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, VendId), fieldStr(ReqPO, VendId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ItemGroupId), fieldStr(ReqPO, ItemGroupId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ReqPOStatus), fieldStr(ReqPO, ReqPOStatus));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, PurchUnit), fieldStr(ReqPO, PurchUnit));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, SchedMethod), fieldStr(ReqPO, SchedMethod));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, PurchId), fieldStr(ReqPO, PurchId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ReqDateDlv), fieldStr(ReqPO, ReqDateDlv));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, RefId), fieldStr(ReqPO, RefId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, RefType), fieldStr(ReqPO, RefType));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ItemRouteId), fieldStr(ReqPO, ItemRouteId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ItemBomId), fieldStr(ReqPO, ItemBomId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ItemBuyerGroupId), fieldStr(ReqPO, ItemBuyerGroupId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, CovInventDimId), fieldStr(ReqPO, CovInventDimId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ReqTimeOrder), fieldStr(ReqPO, ReqTimeOrder));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, VendGroupId), fieldStr(ReqPO, VendGroupId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, LeadTime), fieldStr(ReqPO, LeadTime));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, CalendarDays), fieldStr(ReqPO, CalendarDays));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, SchedToDate), fieldStr(ReqPO, SchedToDate));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, SchedFromDate), fieldStr(ReqPO, SchedFromDate));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, PurchQty), fieldStr(ReqPO, PurchQty));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, ReqTime), fieldStr(ReqPO, ReqTime));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, bomRouteCreated), fieldStr(ReqPO, bomRouteCreated));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, IsDerivedDirectly), fieldStr(ReqPO, IsDerivedDirectly));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, IsForecastPurch), fieldStr(ReqPO, IsForecastPurch));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, IntvQr), fieldStr(ReqPO, IntvQr));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, IntvMth), fieldStr(ReqPO, IntvMth));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, IntvWk), fieldStr(ReqPO, IntvWk));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, CostAmount), fieldStr(ReqPO, CostAmount));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, TransferId), fieldStr(ReqPO, TransferId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, Product), fieldStr(ReqPO, Product));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, PmfPlanningItemId), fieldStr(ReqPO, PmfPlanningItemId));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, PdsCWReqQty), fieldStr(ReqPO, PdsCWReqQty));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, PmfYieldPct), fieldStr(ReqPO, PmfYieldPct));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, PmfBulkOrd), fieldStr(ReqPO, PmfBulkOrd));
        this.mapField(reqPODatasourceId, fieldStr(ReqPO, PlanningPriority), fieldStr(ReqPO, PlanningPriority));

        this.mapField(reqTransDatasourceId, fieldStr(ReqTrans, PlanVersion), fieldStr(ReqPO, PlanVersion));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected Query initQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsReqPO = query.addDataSource(tableNum(ReqPO));
        qbdsReqPO.addRange(fieldNum(ReqPO, PlanVersion)).value(queryValue(reqPlanVersionFrom.RecId));
        reqPODatasourceId = qbdsReqPO.uniqueId();

        QueryBuildDataSource qbdsReqTrans = qbdsReqPO.addDataSource(tableNum(ReqTrans));
        qbdsReqTrans.addLink(fieldNum(ReqPO, RefType), fieldNum(ReqTrans, RefType));
        qbdsReqTrans.addLink(fieldNum(ReqPO, RefId), fieldNum(ReqTrans, RefId));
        qbdsReqTrans.addLink(fieldNum(ReqPO, ItemId), fieldNum(ReqTrans, ItemId));
        qbdsReqTrans.addRange(fieldNum(ReqTrans, PlanVersion)).value(queryValue(reqPlanVersionTo.RecId));
        reqTransDatasourceId = qbdsReqTrans.uniqueId();

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    protected Common initTargetCursor()
    {
        ReqPO reqPOInsert;

        reqPOInsert.skipAosValidation(true);
        reqPOInsert.skipDataMethods(true);

        return reqPOInsert;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromReqPlanVersions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a new instance of the <c>ReqPlanCopyReqPOForReqTrans</c> class.
    /// </summary>
    /// <param name="_reqPlanVersionFrom">
    ///     The version of the source master plan.
    /// </param>
    /// <param name="_reqPlanVersionTo">
    ///     The version of the target master plan.
    /// </param>
    /// <returns>A new instance.</returns>
    public static ReqPlanCopyReqPOForReqTrans newFromReqPlanVersions(ReqPlanVersion _reqPlanVersionFrom, ReqPlanVersion _reqPlanVersionTo)
    {
        ReqPlanCopyReqPOForReqTrans instance = new ReqPlanCopyReqPOForReqTrans();
        instance.reqPlanVersionFrom = _reqPlanVersionFrom;
        instance.reqPlanVersionTo = _reqPlanVersionTo;

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>