<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsRebateTableType_TMA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class that holds the information used for handling 'TMA' rebate type.
/// </summary>
public class PdsRebateTableType_TMA extends PdsRebateTableType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>custVendAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the vendor account number for the customer.
    /// </summary>
    /// <returns>
    /// The vendor account number.
    /// </returns>
    public AccountNum custVendAccount()
    {
        return PdsRebateTable::passToAP_VendorSelection(pdsRebateTable.CustAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalNameProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>ledgerJournalName</c> record used for rebate process posting.
    /// </summary>
    /// <returns>
    /// The <c>LedgerJournalName</c> table record.
    /// </returns>
    public LedgerJournalName ledgerJournalNameProcess()
    {
        return LedgerJournalName::find(PdsRebateParameters::find().PdsTradeSpendingJournalNameId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerTransTxt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets LedgerTransTxt as 'RebateTradeSpendAccrualJournal' used for rebate types to describe the the ledger posting for when rebate is processed.
    /// </summary>
    /// <returns>
    /// A LedgerTransTxt 'RebateTradeSpendAccrualJournal'.
    /// </returns>
    protected LedgerTransTxt ledgerTransTxt()
    {
        return LedgerTransTxt::RebateTradeSpendAccrualJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId, PdsRebateTable _rebateTable)
    {
        switch (_fieldId)
        {
            case fieldNum(PdsRebateTable, PdsCorrectedRebateAmt):
                if (_rebateTable.PdsRebateStatus == PdsRebateStatus::Free)
                {
                    _rebateTable.PdsStartingRebateAmt = _rebateTable.PdsCorrectedRebateAmt;

                    _rebateTable.PdsRebateBalance     = _rebateTable.PdsCorrectedRebateAmt;
                }
                break;

            default: break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsRebateProgramType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Rebate program type as 'TMA'.
    /// </summary>
    /// <returns>
    /// The rebate program type.
    /// </returns>
    public PdsRebateProgramType pdsRebateProgramType()
    {
        return PdsRebateProgramType::TMA;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runProcessed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the rebate processing.
    /// </summary>
    /// <param name="_forAdjustment">
    /// A boolean value that determines if the rebate is an adjustment.
    /// </param>
    public void runProcessed(
        boolean _forAdjustment  = false)
    {
        super(_forAdjustment);

        pdsRebateTable.setNextStatus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the class.
    /// </summary>
    /// <returns>
    /// A new class instance.
    /// </returns>
    public static PdsRebateTableType_TMA construct()
    {
        return new PdsRebateTableType_TMA();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>