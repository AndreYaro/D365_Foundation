<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceGenerationDataContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract of e-Invoice generation
/// </summary>
[DataContractAttribute]
class EInvoiceGenerationDataContract extends ERFormatMappingRunBaseContract
{
    private RecId invoiceRecId;
    private TableId invoiceTableId;
    private PrintCopyOriginal copyIndicator;
    private boolean isCreditNote;
    private ERFormatMappingId eRFormatMappingId;
    private LogisticsAddressCountryRegionISOCode countryRegion;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits data contract from Args.
    /// </summary>
    /// <param name = "_args">Should contain record of table CustInvoiceJour or ProjInvoiceJour and enum PrintCopyOriginal with value.</param>
    public void initFromArgs(Args _args)
    {
        this.parmInvoiceRecId(_args.record().RecId);
        this.parmInvoiceTableId(_args.record().TableId);
        this.parmCopyIndicator(_args.parmEnum());

        if (this.parmInvoiceTableId() == tableNum(CustInvoiceJour))
        {
            CustInvoiceJour custInvoiceJour = _args.record();
            this.parmIsCreditNote(custInvoiceJour.InvoiceAmountMST < 0 ? true : false);
        }
        else
        {
            ProjInvoiceJour projInvoiceJour = _args.record();
            this.parmIsCreditNote(projInvoiceJour.InvoiceAmount < 0 ? true : false);
        }
        this.parmERFormatMappingId(EInvoiceGenerationDataContract::getERFormatMappingId(this.parmInvoiceTableId(), this.parmIsCreditNote()));
        this.parmCountryRegion(SysCountryRegionCode::countryInfo());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCreditNote</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public boolean parmIsCreditNote(boolean _isCreditNote = isCreditNote)
    {
        isCreditNote = _isCreditNote;
        return isCreditNote;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public RecId parmInvoiceRecId(RecId _recId = invoiceRecId)
    {
        invoiceRecId = _recId;
        return invoiceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceTableId</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public TableId parmInvoiceTableId(TableId _tableId = invoiceTableId)
    {
        invoiceTableId = _tableId;
        return invoiceTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCopyIndicator</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public PrintCopyOriginal parmCopyIndicator(PrintCopyOriginal _copyIndicator = copyIndicator)
    {
        copyIndicator = _copyIndicator;
        return copyIndicator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmERFormatMappingId</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public ERFormatMappingId parmERFormatMappingId(ERFormatMappingId _eRFormatMappingId = eRFormatMappingId)
    {
        eRFormatMappingId = _eRFormatMappingId;
        return eRFormatMappingId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountryRegion</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public LogisticsAddressCountryRegionISOCode parmCountryRegion(LogisticsAddressCountryRegionISOCode _countryRegion = countryRegion)
    {
        countryRegion = _countryRegion;
        return countryRegion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getERFormatMappingId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets electronic reporting format mapping from sales parameters.
    /// </summary>
    /// <param name = "_tableId">Table Id to generate invoice.</param>
    /// <param name = "_isCreditNote">Is generated record credit note.</param>
    /// <returns>Electronic reporting format mapping.</returns>
    public static ERFormatMappingId getERFormatMappingId(TableId _tableId, boolean _isCreditNote)
    {
        ERFormatMappingId ret;
        SalesParameters salesParameters = SalesParameters::find();

        switch (_tableId)
        {
            case tableNum(CustInvoiceJour):
                if (_isCreditNote)
                {
                    ret = salesParameters.ERFormatMappingSalesCreditNote;
                }
                else
                {
                    ret = salesParameters.ERFormatMappingSalesInvoice;
                }

                break;

            case tableNum(VendInvoiceJour):
                ret = PurchParameters::find().ERFormatMappingVendorInvoice;
                break;

            default:
                if (_isCreditNote)
                {
                    ret = salesParameters.ERFormatMappingProjectCreditNote;
                }
                else
                {
                    ret = salesParameters.ERFormatMappingProjectInvoice;
                }

                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>