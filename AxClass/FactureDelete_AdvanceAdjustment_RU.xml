<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FactureDelete_AdvanceAdjustment_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///   The class <c>FactureDelete_AdvanceAdjustment_RU</c> is used to delete advance adjustment factures from code.
/// </summary>
class FactureDelete_AdvanceAdjustment_RU extends FactureDelete_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteBookTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Deletes records from sales/purchase book related to current facture.
    /// </summary>
    protected void deleteBookTrans()
    {
        delete_from bookTrans
        where bookTrans.FactureId  == jour.FactureId                         &&
              bookTrans.TransType == SalesPurchBookTransType_RU::AdvanceAdjustment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorClosedBook</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns error text when sales/purchase book is already closed.
    /// </summary>
    /// <param name="_bookId">
    ///   Id of sales/purchase book.
    /// </param>
    /// <returns>
    ///   String value.
    /// </returns>
    protected str errorClosedBook(SalesPurchBookId_RU _bookId)
    {
        return strfmt("@GLS112043", _bookId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns invoice journal record.
    /// </summary>
    /// <param name="_trans">
    ///   Invoice trans record.
    /// </param>
    /// <returns>
    ///   Always null, because source is not invoice journal.
    /// </returns>
    protected CustVendInvoiceJour getInvoiceJour(CustVendInvoiceTrans _trans)
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns invoice trans record.
    /// </summary>
    /// <param name="_trans">
    ///   Facture trans record.
    /// </param>
    /// <returns>
    ///   Always null, because source is not invoice journal.
    /// </returns>
    protected CustVendInvoiceTrans getInvoiceTrans(FactureTrans_RU _trans)
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jourTableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns table id of journal table.
    /// </summary>
    /// <returns>
    ///   Always 0 because advance adjustment not related to journal.
    /// </returns>
    protected TableId jourTableId()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns table id of lines table.
    /// </summary>
    /// <returns>
    ///   Always 0 because advance adjustment not related to lines.
    /// </returns>
    protected TableId transTableId()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Updates facturedFully field on invoice lines.
    /// </summary>
    /// <param name="_trans">
    ///   <c>FactureTrans_RU</c> record.
    /// </param>
    /// <remarks>
    ///   Does nothing in this case.
    /// </remarks>
    protected void updateMarkup(FactureTrans_RU _trans)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>