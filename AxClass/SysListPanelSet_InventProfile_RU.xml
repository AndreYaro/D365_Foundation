<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysListPanelSet_InventProfile_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
public class SysListPanelSet_InventProfile_RU extends SysListPanel
{
    InventProfileId_RU  inventProfileId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    void addData(container _data)
    {
        ;
        InventProfileRelation_RU::addRelated(this.parmInventProfileId(), _data);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    public container getData()
    {
        InventProfile_RU            inventProfile;
        InventProfileRelation_RU    inventProfileRelation;
        container                   selectedData;
        container                   availableData;
        ;

        while select inventProfile
            order by InventProfileName
            where inventProfile.InventProfileId != this.parmInventProfileId()
        notexists join inventProfileRelation
            where inventProfileRelation.InventProfileId        == this.parmInventProfileId()
               && inventProfileRelation.InventProfileIdRelated == inventProfile.InventProfileId
        {
            availableData += [[inventProfile.InventProfileId,
                           inventProfile.InventProfileId,
                           inventProfile.InventProfileName]];
        }

        while select TableId from inventProfileRelation
            order by SelectionPriority
            where inventProfileRelation.InventProfileId == this.parmInventProfileId()
        join inventProfile
            where inventProfile.InventProfileId == inventProfileRelation.InventProfileIdRelated
        {
            selectedData  += [[inventProfile.InventProfileId,
                           inventProfile.InventProfileId,
                           inventProfile.InventProfileName]];
        }

        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLeftSelected</Name>
				<Source><![CDATA[
    container getLeftSelected()
    {
        FormListItem                formListItem;
        container                   c;
        int                         idx;
        ;
        idx = viewSelected.getNextItem(FormListNext::Selected);

        while (idx != -1)
        {
            formListItem = viewSelected.getItem(idx);
            c += formListItem.data();
            idx = viewSelected.getNextItem(FormListNext::Selected, idx);
        }
        return c;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        super();
        viewAvailable.sort(FormListSort::SortAscending);
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDown</Name>
				<Source><![CDATA[
    void moveDown()
    {
        InventProfileRelation_RU            after;
        InventProfileRelation_RU            cur;
        InventProfileId_RU                  inventProfileIdRelated;
        InventProfileSelectionPriority_RU   selectionPriority;
        container                           c = this.getLeftSelected();
        int                                 i;
        recId                               previousSelected = 0;

        ttsbegin;

        for (i = conlen(c); i >= 1; i--)
        {
            inventProfileIdRelated = conpeek(c, i);

            cur = InventProfileRelation_RU::find(this.parmInventProfileId(), inventProfileIdRelated, true);

            select forupdate after
                order by SelectionPriority
                where after.InventProfileId   == this.parmInventProfileId()
                   && after.SelectionPriority >  cur.SelectionPriority;

            if (after && after.RecId != previousSelected)
            {
                selectionPriority         = cur.SelectionPriority;
                cur.SelectionPriority     = after.SelectionPriority;
                after.SelectionPriority   = selectionPriority + (after.SelectionPriority - selectionPriority) / 2;
                after.update();
                cur.update();
            }
            previousSelected = cur.RecId;
        }
        ttscommit;

        this.fill();
        this.selectFields(viewSelected, c);
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUp</Name>
				<Source><![CDATA[
    void moveUp()
    {
        InventProfileRelation_RU            before;
        InventProfileRelation_RU            cur;
        InventProfileId_RU                  inventProfileIdRelated;
        InventProfileSelectionPriority_RU   selectionPriority;
        container                           c = this.getLeftSelected();
        int                                 i;
        recId                               previousSelected = 0;
        ;
        ttsbegin;

        for (i = 1; i <= conlen(c); i++)
        {
            inventProfileIdRelated = conpeek(c, i);

            cur = InventProfileRelation_RU::find(this.parmInventProfileId(), inventProfileIdRelated, true);

            select forupdate before
                order by SelectionPriority desc
                where before.InventProfileId   == this.parmInventProfileId()
                   && before.SelectionPriority  < cur.SelectionPriority;

            if (before && before.RecId != previousSelected)
            {
                selectionPriority         = cur.SelectionPriority;
                cur.SelectionPriority     = before.SelectionPriority;
                before.SelectionPriority  = before.SelectionPriority + (selectionPriority - before.SelectionPriority) / 2;
                before.update();
                cur.update();
            }
            previousSelected = cur.RecId;
        }
        ttscommit;

        this.fill();
        this.selectFields(viewSelected, c);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfColumns</Name>
				<Source><![CDATA[
    public int numOfColumns()
    {
        return 2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCaptionSelected</Name>
				<Source><![CDATA[
    public str parmCaptionSelected(str _captionSelected = captionSelected)
    {
        return "@GLS113785";
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCaptionAvailable</Name>
				<Source><![CDATA[
    public str parmCaptionAvailable(str _captionAvailable = captionAvailable)
    {
        return "@SYS30289";
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventProfileId</Name>
				<Source><![CDATA[
    public InventProfileId_RU parmInventProfileId(InventProfileId_RU _inventProfileId = inventProfileId)
    {
        inventProfileId = _inventProfileId;
        return inventProfileId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reload</Name>
				<Source><![CDATA[
    void reload(AddRemove _addRemove)
    {
        ;
        super(_addRemove);
        if (_addRemove == AddRemove::Add)
            this.fill();
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    void removeData(container _data)
    {
        ;
        InventProfileRelation_RU::removeRelated(this.parmInventProfileId(), _data);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectFields</Name>
				<Source><![CDATA[
    void selectFields(FormListControl _listControl, container _fields)
    {
        int             idx;
        WMSStoreAreaId  wmsStoreAreaId;
        FormListItem    formListItem;
        boolean         toSelect;
        ;

        idx = _listControl.getNextItem(FormListNext::All);

        while (idx != -1)
        {
            formListItem = _listControl.getItem(idx);
            wmsStoreAreaId = formListItem.data();
            toSelect = (confind(_fields, wmsStoreAreaId) > 0) ? true : false;
            formListItem.stateSelected(toSelect);
            _listControl.setItem(formListItem);
            idx = _listControl.getNextItem(FormListNext::All, idx);
        }
        _listControl.setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sortMethod</Name>
				<Source><![CDATA[
    protected FormListSort sortMethod()
    {
        return FormListSort::NoSort;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SysListPanelSet_InventProfile_RU construct()
    {
        return new SysListPanelSet_InventProfile_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    public static SysListPanel newForm(FormRun _formRun, int _parentId)

    {
        SysListPanelSet_InventProfile_RU sysListPanel = SysListPanelSet_InventProfile_RU::construct();
        ;
        sysListPanel.parmFormRun(_formRun);
        sysListPanel.parmParentId(_parentId);
        sysListPanel.parmHasAddAllButton(true);
        sysListPanel.parmHasRemoveAllButton(true);

        sysListPanel.build();
        return sysListPanel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>