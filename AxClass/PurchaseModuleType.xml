<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchaseModuleType</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ModuleInventPurchSalesFactoryAttribute(ModuleInventPurchSales::Purch)]
public class PurchaseModuleType extends TradeModuleType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>toTradePartyModuleType</Name>
				<Source><![CDATA[
    public ModuleInventCustVend toTradePartyModuleType()
    {
        return ModuleInventCustVend::Vend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toModuleCustVend</Name>
				<Source><![CDATA[
    public ModuleCustVend toModuleCustVend()
    {
        return ModuleCustVend::Vend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formLetterJournalExternalItemId</Name>
				<Source><![CDATA[
    public ExternalItemId formLetterJournalExternalItemId(ExternalItemId _externalItemId)
    {
        switch (VendFormletterParameters::find().ItemNum)
        {
            case OurYourBoth::Both:
                return _externalItemId;
            default:
                return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formLetterJournalItemId</Name>
				<Source><![CDATA[
    public ItemId formLetterJournalItemId(ItemId _itemId, ExternalItemId _externalItemId)
    {
        switch (VendFormletterParameters::find().ItemNum)
        {
            case OurYourBoth::Your:
                return _externalItemId ? _externalItemId : _itemId;
            default:
                return _itemId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMCRPriceHistoryUpdateEnabled</Name>
				<Source><![CDATA[
    public boolean isMCRPriceHistoryUpdateEnabled()
    {
        return PurchParameters::find().MCREnablePriceDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDiscType</Name>
				<Source><![CDATA[
    public PriceType priceDiscType(PriceGroupType _priceGroupType)
    {
        return PriceGroupTypeTradeAgreementMapping::newPriceGroupTypeTradeAgreementMapping(_priceGroupType).priceDiscType(ModuleInventCustVend::Vend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPriceDiscPerAgreementApplicable</Name>
				<Source><![CDATA[
    public NoYes isPriceDiscPerAgreementApplicable()
    {
        #ISOCountryRegionCodes
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            return PurchParameters::find().AgreementPriceDisc_RU;
        }

        return NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activePriceFields</Name>
				<Source><![CDATA[
    public List activePriceFields(ItemId _itemId)
    {
        InventTable inventTable = InventTable::find(_itemId);
        InventDimGroupSetup inventDimGroupSetup = InventDimGroupSetup::newInventTable(inventTable);

        return inventDimGroupSetup.activePurchPriceFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcAgreementLineCommittedQty</Name>
				<Source><![CDATA[
    public AgreementCommitedQuantity calcAgreementLineCommittedQty(AgreementLineQuantityCommitment _agreementLine)
    {
        return _agreementLine.inventTable().purchStandardQty(_agreementLine.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignTaxItemGroupFromItemGroup</Name>
				<Source><![CDATA[
    public void assignTaxItemGroupFromItemGroup(InventTableModule _inventTableModule, InventItemGroup _inventItemGroup)
    {
        if (_inventItemGroup.TaxItemGroupIdPurch)
        {
            _inventTableModule.TaxItemGroupId = _inventItemGroup.TaxItemGroupIdPurch;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignPrimaryFlagsForItemPriceGroup</Name>
				<Source><![CDATA[
    public void assignPrimaryFlagsForItemPriceGroup(MCRPriceDiscGroupItem _priceDiscGroupItems)
    {
        _priceDiscGroupItems.PrimaryPurchGroup = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOldPrimaryModuleTypeGroup</Name>
				<Source><![CDATA[
    public void deleteOldPrimaryModuleTypeGroup(InventTableModule _inventTableModule)
    {
        _inventTableModule.mcrDeletePurchLineGrp(PriceGroupType::LineDiscGroup);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>