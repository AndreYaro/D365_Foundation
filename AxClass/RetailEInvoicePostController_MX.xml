<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailEInvoicePostController_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailEInvoicePostController_MX</c> class handles the posting of the Retail EInvoice for CFDI.
/// </summary>
public class RetailEInvoicePostController_MX extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the controller, checks the retail parameters and starts retail EInvoice posting operation.
    /// </summary>
    /// <param name = "_args">Arguments.</param>
    public static void main(Args _args)
    {
        RetailEInvoicePostController_MX::validateGeneralParameters();

        RetailEInvoicePostController_MX controller = new RetailEInvoicePostController_MX(
                classStr(RetailEInvoicePostService_MX),
                methodStr(RetailEInvoicePostService_MX, post),
                SysOperationExecutionMode::Synchronous);

        controller.parmDialogCaption("@SYS4081908");
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateGeneralParameters</Name>
				<Source><![CDATA[
    private static void validateGeneralParameters()
    {
        if (!EInvoiceCFDIParameters_MX::isElectronicInvoiceEnabled())
        {
            throw error("@SYS341184");
        }
        
        EInvoiceCFDIVersion_MX version = EInvoiceCFDIParameters_MX::find().CFDIVersion;
        if (version != EInvoiceCFDIVersion_MX::V3_3 && version != EInvoiceCFDIVersion_MX::V4)
        {
            throw error("@SYS4001806");
        }
        
        if (!EInvoiceCFDIParameters_MX::schemaFileExists())
        {
            throw error(strFmt("@SYS109820", EInvoiceCFDIParameters_MX::find().cfdiXsdFile));
        }
        
        if (!CertificateHelper_MX::isCurrentCFDIPACPrivateKeyReadable() || !CertificateHelper_MX::isCurrentCFDIPrivateKeyReadable())
        {
            throw error("@SYS341994");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>