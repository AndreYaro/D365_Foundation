<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocMsgFormat_XmlServiceInquireV3_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Creates and interprets the XML to be sent to the status inquire web service. (layout version 3.10)
/// </summary>
class EFDocMsgFormat_XmlServiceInquireV3_BR extends EFDocMsgFormat_XmlServiceInquire_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>eFiscalDocVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the version of the NF-e manual that this class adheres to.
    /// </summary>
    /// <returns>The version of the NF-e manual from <c>EFiscalDocVersion_BR</c> enumerator.</returns>
    public EFiscalDocVersion_BR eFiscalDocVersion()
    {
        return EFiscalDocVersion_BR::V31;
    }
]]></Source>
			</Method>
			<Method>
				<Name>read</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the XML returned by the service status inquiry web service.
    /// </summary>
    /// <param name="_stream">The stream from which to read the XML.</param>
    /// <param name="_returnInfo">A parm object to fill the return information.</param>
    public void read(IEFDocMsgStream_BR _stream, EFiscalDocumentReturnInfo_BR _returnInfo)
    {
        #ExportFiscalDocument_BR

        str         returnCode;
        str         returnMessage;
        str         tMed;
        str         plannedReturnDateTime;
        str         notes;

        utcDateTime utcPlannedReturnDateTime;

        xmlDoc.loadXml(conpeek(_stream.read(),1));

        returnCode            = this.tryGetNodeContent('/x:retConsStatServ/x:cStat');
        returnMessage         = this.tryGetNodeContent('/x:retConsStatServ/x:xMotivo');

        tMed                  = this.tryGetNodeContent('/x:retConsStatServ/x:tMed');
        plannedReturnDateTime = this.tryGetNodeContent('/x:retConsStatServ/x:dhRetorno');
        notes                 = this.tryGetNodeContent('/x:retConsStatServ/x:xObs');

        if (plannedReturnDateTime)
        {
            utcPlannedReturnDateTime = this.getUtcDateTimeFromDateStrWithTZD(plannedReturnDateTime);
        }

        _returnInfo.parmReturnCodeStatus(returnCode);
        _returnInfo.parmReturnMessage(returnMessage);
        _returnInfo.parmAverageResponseTime(str2int(tMed));
        _returnInfo.parmPlannedReturn(utcPlannedReturnDateTime);
        _returnInfo.parmReturnNotes(notes);
    }
]]></Source>
			</Method>
			<Method>
				<Name>version</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the version of the XML that this class creates and interprets.
    /// </summary>
    /// <returns>The XML version in string format.</returns>
    public str version()
    {
        return #EFDocLayoutVersion310;
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a <c>EFDocMsgFormat_XmlServiceInquireV3_BR</c> object.
    /// </summary>
    /// <returns>A <c>EFDocMsgFormat_XmlServiceInquireV3_BR</c> object.</returns>
    /// <param name="_efDocServiceInquireParams">A <c>EFDocServiceInquireParams_BR</c> object that contains information to transport</param>
    public static EFDocMsgFormat_XmlServiceInquireV3_BR construct(EFDocServiceInquireParams_BR _efDocServiceInquireParams)
    {
        return new EFDocMsgFormat_XmlServiceInquireV3_BR(_efDocServiceInquireParams);
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>