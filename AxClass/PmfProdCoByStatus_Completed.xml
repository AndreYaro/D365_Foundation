<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfProdCoByStatus_Completed</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class in the <c>PmfProdCoByStatus</c> hierarchy for Co/By lines
/// for production orders in status ProdStatus::Completed
/// </summary>
class PmfProdCoByStatus_Completed extends PmfProdCoByStatus
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleting</Name>
				<Source><![CDATA[
    public void deleting()
    {
        throw error(strfmt("@SYS22042",prodCoBy.prodTable().ProdStatus));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inserting</Name>
				<Source><![CDATA[
    public void inserting()
    {
        throw error("@PRO2321");
    }

]]></Source>
			</Method>
			<Method>
				<Name>runStatusDecrease</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reverse the effects of the transition to a higher status
    /// </summary>
    /// <param name="_prodParmStatusDecrease">
    /// The parameters for the status decrease operation
    /// </param>
    /// <returns>
    /// always false
    /// </returns>
    /// <remarks>
    /// The status of the production order cannot be decreased once it is
    /// in status <c>ProdStatus::Completed</c>
    /// </remarks>
    public boolean runStatusDecrease(ProdParmStatusDecrease _prodParmStatusDecrease)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updating</Name>
				<Source><![CDATA[
    public void updating()
    {
        super();

        if (prodCoBy.CoByQty != prodCoBy.orig().CoByQty)
        {
            throw error(strfmt("@PRO2290", prodCoBy.prodTable().ProdStatus));
        }

        prodCoBy.RealDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        if (!prodCoBy.checkBurdenAmount())
        {
            throw error("@PRO2138");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate, if a Co/By production batch line can be updated
    /// </summary>
    /// <returns>
    /// true, if the co/by production batch line can be updated
    /// </returns>
    /// <remarks>
    /// The quantities of the production co/by line cannot be changed once the
    /// order is in status <c>ProdStatus::Completed</c>
    /// </remarks>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (prodCoBy.CoByQty != prodCoBy.orig().CoByQty)
        {
            ret = checkFailed(strfmt("@PRO2290", prodCoBy.prodTable().ProdStatus));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiate a new PmfProdCoByStatus_Completed object for the
    /// production co/by product line
    /// </summary>
    /// <param name="_pmfProdCoBy">
    /// The production order co/by product line
    /// </param>
    /// <returns>
    /// The new co/by status object
    /// </returns>
    /// <remarks>
    /// <see cref="PmfProdCoByStatus"/>
    /// </remarks>
    public static PmfProdCoByStatus_Completed construct(PmfProdCoBy _pmfProdCoBy)
    {
        return new PmfProdCoByStatus_Completed(_pmfProdCoBy);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>