<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscPolicyMakePolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>riceDiscPolicyMakePolicy</c> class main objective is creation of price disc policies.
/// </summary>
class PriceDiscPolicyMakePolicy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkPolicyParmSetup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether price disc policy is enabled for the policy source in question.
    /// </summary>
    /// <param name="_policySource">
    ///    An outcome the <c>PriceDiscSystemSource</c> enumeration specifying the origin of the policy.
    /// </param>
    /// <param name="_module">
    ///    An outcome of the <c>ModuleSalesPurch</c> enumeration specifying the module in question.
    /// </param>
    /// <returns>
    ///    true if price disc policy is enabled for the module origin combination in question; otherwise,
    ///    false.
    /// </returns>
    public boolean checkPolicyParmSetup(
        PriceDiscSystemSource _policySource,
        ModuleSalesPurch      _module)
    {
        boolean ret = false;

        if (_module == ModuleSalesPurch::Sales)
        {
            switch (_policySource)
            {
                case PriceDiscSystemSource::CopyFromSalesOrder :
                     ret = PriceDiscSalesPolicyParameters::isSourceEnabled(PriceDiscSalesPromptSystemSource::CopyFromSalesOrder);
                break;

                case PriceDiscSystemSource::CopyFromSalesQuotation :
                     ret = PriceDiscSalesPolicyParameters::isSourceEnabled(PriceDiscSalesPromptSystemSource::CopyfromSalesQuotation);
                break;

                case PriceDiscSystemSource::ManualEntry :
                     ret = PriceDiscSalesPolicyParameters::isSourceEnabled(PriceDiscSalesPromptSystemSource::ManualEntry);
                break;

                case PriceDiscSystemSource::Project :
                     ret = PriceDiscSalesPolicyParameters::isSourceEnabled(PriceDiscSalesPromptSystemSource::Project);
                break;

                case PriceDiscSystemSource::SalesQuotation :
                     ret = PriceDiscSalesPolicyParameters::isSourceEnabled(PriceDiscSalesPromptSystemSource::SalesQuotation);
                break;

                case PriceDiscSystemSource::Agreement :
                     ret = PriceDiscSalesPolicyParameters::isSourceEnabled(PriceDiscSalesPromptSystemSource::SalesAgreement);
                break;

                case PriceDiscSystemSource::ProductConfig :
                     ret = PriceDiscSalesPolicyParameters::isSourceEnabled(PriceDiscSalesPromptSystemSource::ProductConfig);
                break;

                case PriceDiscSystemSource::RetailPOS :
                    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
                        ret = PriceDiscSalesPolicyParameters::isSourceEnabled(PriceDiscSalesPromptSystemSource::RetailPOS);
                break;

                default : ret = false;
            }
        }

        if (_module == ModuleSalesPurch::Purch)
        {
            switch (_policySource)
            {
                case PriceDiscSystemSource::CopyFromPurchaseOrder :
                     ret = PriceDiscPurchPolicyParameters::isSourceEnabled(PriceDiscPurchasePromptSystemSource::CopyFromPurchaseOrder);
                break;

                case PriceDiscSystemSource::ManualEntry :
                     ret = PriceDiscPurchPolicyParameters::isSourceEnabled(PriceDiscPurchasePromptSystemSource::ManualEntry);
                break;

                case PriceDiscSystemSource::Project :
                     ret = PriceDiscPurchPolicyParameters::isSourceEnabled(PriceDiscPurchasePromptSystemSource::Project);
                break;

                case PriceDiscSystemSource::PurchaseReq :
                     ret = PriceDiscPurchPolicyParameters::isSourceEnabled(PriceDiscPurchasePromptSystemSource::PurchaseReq);
                break;

                case PriceDiscSystemSource::RequestForQuote :
                     ret = PriceDiscPurchPolicyParameters::isSourceEnabled(PriceDiscPurchasePromptSystemSource::RequestForQuote);
                break;

                case PriceDiscSystemSource::Agreement :
                    ret = PriceDiscPurchPolicyParameters::isSourceEnabled(PriceDiscPurchasePromptSystemSource::PurchaseAgreement);
                break;

                case PriceDiscSystemSource::ProductConfig :
                     ret = PriceDiscPurchPolicyParameters::isSourceEnabled(PriceDiscPurchasePromptSystemSource::ProductConfig);
                break;

                default : ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PriceDiscPolicyMakePolicy construct()
    {
        return new PriceDiscPolicyMakePolicy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>makePolicy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the price discount change policy parameter setup and executes creating policies.
    /// </summary>
    /// <param name="_priceDiscResultFields">
    ///    A <c>PriceDiscResultFields</c> map table.
    /// </param>
    /// <param name="_policySource">
    ///    A <c>PriceDiscSystemSource</c> enumeration value that specifies the origin of the policy.
    /// </param>
    /// <param name="_module">
    ///    A <c>ModuleSalesPurch</c> enumeration value that specifies the module.
    /// </param>
    /// <param name="_policyField">
    ///    A field ID; optional.
    /// </param>
    public static void makePolicy(
        PriceDiscResultFields _priceDiscResultFields,
        PriceDiscSystemSource _policySource,
        ModuleSalesPurch      _module,
        RefFieldId            _policyField = 0)
    {
        PriceDiscPolicyMakePolicy       makePolicy = PriceDiscPolicyMakePolicy::construct();

        if (makePolicy.checkPolicyParmSetup(_policySource, _module))
        {
            PriceDiscPolicyFindOrCreate::newFromParm(_priceDiscResultFields, _policyField, _policySource).run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>