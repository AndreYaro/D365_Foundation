<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerChartofAccountsbyDimContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>LedgerChartofAccountsbyDimensions_CN</c> SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(LedgerChartofAccountsbyDimUIBuilder_CN))
]
class LedgerChartofAccountsbyDimContract_CN implements SysOperationValidatable
{
    Name                    dimensionAttributeName;
    DimensionValue          dimensionValue;
    TransDate               toDate;
    TransDate               fromDate;
    CurrentOperationsTax    postingLayer;

    #define.Empty('')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDimensionAttributeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter dimensionAttributeName.
    /// </summary>
    /// <param name="_dimensionAttributeName">
    /// The new value of the datacontract parameter dimensionAttributeName; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter dimensionAttributeName.
    /// </returns>
    [
        DataMemberAttribute('DimensionType'),
        SysOperationDisplayOrderAttribute('1'),
        SysOperationLabelAttribute(literalstr("@SYS24410"))
    ]
    public Name parmDimensionAttributeName(Name _dimensionAttributeName = dimensionAttributeName)
    {
        dimensionAttributeName = _dimensionAttributeName;
        return dimensionAttributeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter dimensionAttributeValue.
    /// </summary>
    /// <param name="_dimensionValue">
    /// The new value of the datacontract parameter dimensionAttributeValue; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter dimensionAttributeValue.
    /// </returns>
    [
        DataMemberAttribute('Dimension'),
        SysOperationDisplayOrderAttribute('2'),
        SysOperationLabelAttribute(literalstr("@SYS14926"))
    ]
    public DimensionValue parmDimensionValue(DimensionValue _dimensionValue = dimensionValue)
    {
        dimensionValue = _dimensionValue;
        return dimensionValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter _fromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter _fromDate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter _fromDate.
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationDisplayOrderAttribute('4'),
        SysOperationLabelAttribute(literalstr("@SYS24050"))
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter postinglayer.
    /// </summary>
    /// <param name="_postingLayer">
    /// The new value of the datacontract parameter postinglayer; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter postinglayer.
    /// </returns>
    [
        DataMemberAttribute('PostingLayer'),
        SysOperationDisplayOrderAttribute('3'),
        SysOperationLabelAttribute(literalstr("@SYS334157"))
    ]
    public CurrentOperationsTax parmPostingLayer(CurrentOperationsTax _postingLayer = postingLayer)
    {
        postingLayer = _postingLayer;
        return postingLayer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter toDate.
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationDisplayOrderAttribute('5'),
        SysOperationLabelAttribute(literalstr("@SYS35904"))
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the SSRS report parameters are valid.
    /// </summary>
    /// <returns>
    /// true if the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (dimensionAttributeName == #Empty)
        {
            // DimensionType parameter cannot be empty
            ret = checkFailed("@GLS100535");
        }

        if (dimensionValue == #Empty)
        {
            //Dimension parameter cannot be empty
            ret = checkFailed("@GLS100534");
        }

        if (fromDate > toDate)
        {
            // From date cannot be greater than To date.
            ret = checkFailed("@SYS120590");
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>