<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerBalanceReportingDimensionAmountsSim_IT_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(LedgerBalanceReportingDimensionAmounts))]
internal final class LedgerBalanceReportingDimensionAmountsSim_IT_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateBalanceSim_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the balance for the reporting dimensions.
    /// </summary>
    /// <param name="_reportingDimension">
    /// The reporting dimensions.
    /// </param>
    /// <exception>Throws error if GeneralLedgerBalanceReportingDimension is not properly initialized.</exception>
    internal void calculateBalanceSim_IT(GeneralLedgerBalanceReportingDimension _reportingDimension)
    {
        if (_reportingDimension == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        LedgerBalanceQueryGeneralLedgerBalanceSim_IT generalLedgerBalanceSimQuerySim = LedgerBalanceQueryGeneralLedgerBalanceSim_IT::construct();
        generalLedgerBalanceSimQuerySim.setLedgerRecId(ledgerRecId);
        generalLedgerBalanceSimQuerySim.setAccountingDateRange(startAccountingDate, endAccountingDate);
        generalLedgerBalanceSimQuerySim.setExcludeValues(excludeDebits, excludeCredits, separateDebitsAndCredits);
        generalLedgerBalanceSimQuerySim.setIncludeValues(includeRegularPeriod, includeOpeningPeriod, includeClosingPeriod, includeClosingPeriodBySystem);
        generalLedgerBalanceSimQuerySim.setPostingLayer(postingLayer);
        generalLedgerBalanceSimQuerySim.setSimulationJournalGroupId_IT(simulationJournalGroupId_IT);

        generalLedgerBalanceSimQuerySim.calculateForReportingDimensions(_reportingDimension);

        accountingCurrencyDebitBalance = generalLedgerBalanceSimQuerySim.getAccountingCurrencyDebitBalance();
        accountingCurrencyCreditBalance = generalLedgerBalanceSimQuerySim.getAccountingCurrencyCreditBalance();
        reportingCurrencyBalance = generalLedgerBalanceSimQuerySim.getReportingCurrencyBalance();
        quantityBalance = generalLedgerBalanceSimQuerySim.getQuantityBalance();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>