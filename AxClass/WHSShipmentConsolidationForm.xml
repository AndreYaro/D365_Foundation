<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipmentConsolidationForm</Name>
	<SourceCode>
		<Declaration><![CDATA[/// <summary>
/// The <c>WHSShipmentConsolidationForm</c> class contains the business logic for <c>WHSShipmentConsolidation</c> form.
/// </summary>
public class WHSShipmentConsolidationForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initShipmentWorkLine</Name>
				<Source><![CDATA[	/// <summary>
	/// Finds work line of the shipment.
	/// </summary>
	/// <param name="_shipmentTableArgs">
	/// Shipment record.
	/// </param>
	/// <returns>
	/// Shipment work line.
	/// </returns>
        public WHSWorkLine initShipmentWorkLine(WHSShipmentTable _shipmentTableArgs)
    {
        WHSWorkLine shipWorkLine;

        select firstOnly shipWorkLine
            where shipWorkLine.WorkStatus != WHSWorkStatus::Cancelled &&
                  shipWorkLine.ShipmentId == _shipmentTableArgs.ShipmentId;

        return shipWorkLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeShipments</Name>
				<Source><![CDATA[	/// <summary>
	/// Stores id of the selected shipments into a container.
	/// </summary>
	/// <param name="_whsShipmentTable_ds">
	/// Form data source containing selected shipments.
	/// </param>
	/// <returns>
	/// Container containing selected shipment ids.
	/// </returns>
        public Container storeShipments(FormDataSource _whsShipmentTable_ds)
    {
        WHSShipmentTable shipmentTable;
        Container        shipments;

        for (shipmentTable = _whsShipmentTable_ds.getFirst(true) ? _whsShipmentTable_ds.getFirst(true) : _whsShipmentTable_ds.cursor();
             shipmentTable;
             shipmentTable = _whsShipmentTable_ds.getNext())
        {
            shipments += shipmentTable.ShipmentId;
        }

        return shipments;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>