<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SpecTransViewerSearchCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SpecTransViewerSearchCriteria</c> class holds the set of fields that should restrict the <c>SpecTransViewer</c>
/// data initialization, including permitted companies and document search fields.
/// </summary>
internal final class SpecTransViewerSearchCriteria implements SysPackable
{
    private SpecTransViewerMode viewerMode;
    private Set selectedCompanies;
    private DirPartyRecId partyRecId;
    private Voucher voucher;
    private TransDate transDate;
    private InvoiceId invoiceId;

    private const int CurrentVersion = 1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSelectedCompanies</Name>
				<Source><![CDATA[
    internal Set getSelectedCompanies()
    {
        return selectedCompanies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPartyRecId</Name>
				<Source><![CDATA[
    internal DirPartyRecId getPartyRecId()
    {
        return partyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getViewerMode</Name>
				<Source><![CDATA[
    internal SpecTransViewerMode getViewerMode()
    {
        return viewerMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVoucher</Name>
				<Source><![CDATA[
    internal Voucher getVoucher()
    {
        return voucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransDate</Name>
				<Source><![CDATA[
    internal TransDate getTransDate()
    {
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceId</Name>
				<Source><![CDATA[
    internal InvoiceId getInvoiceId()
    {
        return invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelectedCompanies</Name>
				<Source><![CDATA[
    private void setSelectedCompanies(Set _selectedCompanies)
    {
        if (_selectedCompanies != null && _selectedCompanies.elements() != 0)
        {
            selectedCompanies = _selectedCompanies;
        }
        else
        {
            selectedCompanies = new Set(Types::String);
            selectedCompanies.add(curExt());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [CurrentVersion, viewerMode, selectedCompanies.pack(), partyRecId, voucher, transDate, invoiceId];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedVersion)
    {
        boolean isValid = true;

        Version version = RunBase::getVersion(_packedVersion);
        container setContainer;

        switch (version)
        {
            case CurrentVersion:
                [version, viewerMode, setContainer, partyRecId, voucher, transDate, invoiceId] = _packedVersion;
                break;

            default:
                return false;
        }

        if (setContainer != conNull())
        {
            selectedCompanies = Set::create(setContainer);
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static SpecTransViewerSearchCriteria construct()
    {
        return new SpecTransViewerSearchCriteria();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCriteria</Name>
				<Source><![CDATA[
    internal static SpecTransViewerSearchCriteria newCriteria(
        SpecTransViewerMode _viewerMode,
        Set _selectedCompanies = null,
        DirPartyRecId _partyRecId = 0,
        Voucher _voucher = '',
        TransDate _transDate = dateNull(),
        InvoiceId _invoiceId = '')
    {
        SpecTransViewerSearchCriteria criteria = new SpecTransViewerSearchCriteria();
        criteria.viewerMode = _viewerMode;
        criteria.partyRecId = _partyRecId;
        criteria.voucher = _voucher;
        criteria.transDate = _transDate;
        criteria.invoiceId = _invoiceId;

        criteria.setSelectedCompanies(_selectedCompanies);

        return criteria;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>