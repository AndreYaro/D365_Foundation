<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductRetailData</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductRetailData</c> class holds a product retail data.
/// </summary>
public class EcoResProductRetailData
{
    private boolean isRetailKit;
    private RecId retailCategoryRecId;
    private EcoResProductIdentificationData identification;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isRetailKitChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Raised when retail kit specification is changed.
    /// </summary>
    /// <param name = "_identification">The product identification.</param>
    /// <param name = "_isRetailKit">The new retail kit specification.</param>
    delegate void isRetailKitChanged(EcoResProductIdentificationData _identification, boolean _isRetailKit) {}

]]></Source>
			</Method>
			<Method>
				<Name>retailCategoryChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Raised when retail category is changed.
    /// </summary>
    /// <param name = "_identification">The product identification.</param>
    /// <param name = "_retailCategoryRecId">The new retail category RecId.</param>
    delegate void retailCategoryChanged(EcoResProductIdentificationData _identification, RecId _retailCategoryRecId) {}

]]></Source>
			</Method>
			<Method>
				<Name>parmIsRetailKit</Name>
				<Source><![CDATA[
    public boolean parmIsRetailKit(boolean _isRetailKit = isRetailKit)
    {
        if (isRetailKit != _isRetailKit)
        {
            isRetailKit = _isRetailKit;
            this.isRetailKitChanged(identification, isRetailKit);
        }

        return isRetailKit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailCategoryRecId</Name>
				<Source><![CDATA[
    public RecId parmRetailCategoryRecId(RecId _retailCategoryRecId = retailCategoryRecId)
    {
        if (retailCategoryRecId != _retailCategoryRecId)
        {
            retailCategoryRecId = _retailCategoryRecId;
            this.retailCategoryChanged(identification, retailCategoryRecId);
        }

        return retailCategoryRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailCategoryName</Name>
				<Source><![CDATA[
    public EcoResCategoryName parmRetailCategoryName(EcoResCategoryName _retailCategoryName = '')
    {
        if (!prmIsDefault(_retailCategoryName))
        {
            EcoResCategoryHierarchyRole retailHierarchyRole = EcoResCategoryHierarchyRole::getHierarchiesByRole(EcoResCategoryNamedHierarchyRole::Retail);
            EcoResCategory category = EcoResCategory::findByName(_retailCategoryName, retailHierarchyRole.CategoryHierarchy);

            this.parmRetailCategoryRecId(Category.RecId);
        }

        return EcoResCategory::find(retailCategoryRecId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>EcoResProductRetailData</c> class.
    /// </summary>
    /// <param name = "_identification">The product identification.</param>
    /// <returns>An instance of the <c>EcoResProductRetailData</c> class.</returns>
    public static EcoResProductRetailData construct(EcoResProductIdentificationData _identification)
    {
        var data = new EcoResProductRetailData();
        data.init(_identification);
        return data;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init(EcoResProductIdentificationData _identification)
    {
        identification = _identification;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>