<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportMultipleTaxIdHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxReportMultipleTaxIdHelper</c> class is used to process multiple tax id feature specific logic for settle and post sales tax.
/// </summary>
internal final class TaxReportMultipleTaxIdHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTaxRegistrationNumberISOCodeByTaxPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ISO code for tax registration number set on sales tax settlement period.
    /// </summary>
    /// <param name = "_taxPeriod">The sales tax settlement period.</param>
    /// <returns>The ISO code.</returns>
    internal static LogisticsAddressCountryRegionISOCode getTaxRegistrationNumberISOCodeByTaxPeriod(TaxPeriod _taxPeriod)
    {
        TaxPeriodHead taxPeriodHead;
        TaxRegistration taxRegistration;
        LogisticsAddressCountryRegion logisticsAddressCountryRegion;
        TaxRegistrationTypeApplicabilityRule taxRegistrationTypeApplicabilityRule;

        select firstonly ISOcode from logisticsAddressCountryRegion
            join CountryRegionId from taxRegistrationTypeApplicabilityRule
                where taxRegistrationTypeApplicabilityRule.CountryRegionId == logisticsAddressCountryRegion.CountryRegionId
            join RecId from taxRegistration
                where taxRegistration.TaxRegistrationTypeApplicabilityRule == taxRegistrationTypeApplicabilityRule.RecId
            join TaxID from taxPeriodHead
                where taxPeriodHead.TaxID == taxRegistration.RecId
                    && taxPeriodHead.TaxPeriod == _taxPeriod
                    && taxPeriodHead.TaxAuthority == taxRegistrationTypeApplicabilityRule.TaxRegistrationAuthority;

        return logisticsAddressCountryRegion.ISOcode;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>