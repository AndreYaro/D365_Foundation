<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCatVendorProductCandidateImage</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxCatVendorProductCandidateImage extends AxInternalBase
{
    CatVendorProductCandidateImage catVendorProductCandidateImage;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>catVendorProductCandidateImage</Name>
				<Source><![CDATA[
    public CatVendorProductCandidateImage catVendorProductCandidateImage(CatVendorProductCandidateImage _catVendorProductCandidateImage = catVendorProductCandidateImage)
    {
        if (!prmisdefault(_catVendorProductCandidateImage))
        {
            this.setCurrentRecordFromExternal(_catVendorProductCandidateImage);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the current record in the <c>CatVendorProductCandidateImage</c> table.
    /// </summary>
    /// <param name="_catVendorProductCandidateImage">
    /// The <c>CatVendorProductCandidateImage</c> record to set; optional.
    /// </param>
    /// <returns>
    /// A <c>CatVendorProductCandidateImage</c> record.
    /// </returns>
    public Common currentRecord(Common _catVendorProductCandidateImage = catVendorProductCandidateImage)
    {
        if (!prmisdefault(_catVendorProductCandidateImage))
        {
            super(_catVendorProductCandidateImage);
            catVendorProductCandidateImage = _catVendorProductCandidateImage;
        }
        else
        {
            super();
        }

        return catVendorProductCandidateImage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an empty record for the <c>CatVendorProductCandidateImage</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record from the <c>CatVendorProductCandidateImage</c> table.
    /// </returns>
    protected Common emptyRecord()
    {
        CatVendorProductCandidateImage localCatVendorProductCandidateImage;
        return localCatVendorProductCandidateImage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodstr(AxCatVendorProductCandidateImage,parmVendorProductCandidate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmImageURI</Name>
				<Source><![CDATA[
    public Filename parmImageURI(Filename _imageURI = '')
    {
        if (!prmisdefault(_imageURI))
        {
            this.setField(fieldnum(CatVendorProductCandidateImage, ImageURI), _imageURI);
        }

        return catVendorProductCandidateImage.ImageURI;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsDefaultImage</Name>
				<Source><![CDATA[
    public NoYesId parmIsDefaultImage(NoYesId _isDefaultImage = NoYes::No)
    {
        if (!prmisdefault(_isDefaultImage))
        {
            this.setField(fieldnum(CatVendorProductCandidateImage, IsDefaultImage), _isDefaultImage);
        }

        return catVendorProductCandidateImage.IsDefaultImage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendorProductCandidate</Name>
				<Source><![CDATA[
    public RefRecId parmVendorProductCandidate(RefRecId _vendorProductCandidate = 0)
    {
        if (!prmisdefault(_vendorProductCandidate))
        {
            this.setField(fieldnum(CatVendorProductCandidateImage, VendorProductCandidate), _vendorProductCandidate);
        }

        return catVendorProductCandidateImage.VendorProductCandidate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setImageURI</Name>
				<Source><![CDATA[
    protected void setImageURI()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidateImage, ImageURI)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsDefaultImage</Name>
				<Source><![CDATA[
    protected void setIsDefaultImage()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidateImage, IsDefaultImage)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls all of the default methods that must be called before a record is inserted or updated.
    /// </summary>
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setVendorProductCandidate();
        this.setImageURI();
        this.setIsDefaultImage();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendorProductCandidate</Name>
				<Source><![CDATA[
    protected void setVendorProductCandidate()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CatVendorProductCandidateImage, VendorProductCandidate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxCatVendorProductCandidateImage construct()
    {
        return new AxCatVendorProductCandidateImage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCatVendorProductCandidateImage</Name>
				<Source><![CDATA[
    public static AxCatVendorProductCandidateImage newCatVendorProductCandidateImage(CatVendorProductCandidateImage _catVendorProductCandidateImage)
    {
        AxCatVendorProductCandidateImage axCatVendorProductCandidateImage = AxCatVendorProductCandidateImage::construct();
        axCatVendorProductCandidateImage.catVendorProductCandidateImage(_catVendorProductCandidateImage);

        return axCatVendorProductCandidateImage;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>