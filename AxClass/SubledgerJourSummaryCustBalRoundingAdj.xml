<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJourSummaryCustBalRoundingAdj</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class performs rounding adjustment for customer balance posting type on summarized subledger journal account entries.
/// </summary>
[SourceDocumentExtensionAttribute()]
public class SubledgerJourSummaryCustBalRoundingAdj extends SubledgerJourSummaryPostTypeRoundingAdj
{
    LedgerPostingType custBalancePostingType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
        custBalancePostingType = LedgerPostingType::CustBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs rounding adjustment for customer balance posting type subledger journal account entry details
    /// in the given <c>SubledgerJournalAccountEntryTmpSummary</c> tmp table.
    /// </summary>
    /// <param name="_tmpSummary">
    /// The <c>SubledgerJournalAccountEntryTmpSummary</c> tmp table.
    /// </param>
    /// <param name="_roundingAdjustmentEntry">
    /// The <c>SubledgerJourISummaryRoundingAdjustEntry</c> object that is used to insert rounding adjustment
    /// into the <c>SubledgerJournalAccountEntry</c> table.
    /// </param>
    public void performAdjustment(SubledgerJournalAccountEntryTmpSummary _tmpSummary,
                                    SubledgerJourISummaryRoundingAdjustEntry _roundingAdjustmentEntry)
    {
        SubledgerJourSummaryAccCurRoundAdjRcgnzr accountingCurrencyRoundingAdjustmentRecognizer;
        SubledgerJourSummaryRptCurRoundAdjRcgnzr reportingCurrencyRoundingAdjustmentRecognizer;

        accountingCurrencyRoundingAdjustmentRecognizer = SubledgerJourSummaryAccCurRoundAdjRcgnzr::construct();
        accountingCurrencyRoundingAdjustmentRecognizer.recognizeRoundingAdjustment(_tmpSummary, custBalancePostingType, _roundingAdjustmentEntry);

        reportingCurrencyRoundingAdjustmentRecognizer = SubledgerJourSummaryRptCurRoundAdjRcgnzr::construct();
        reportingCurrencyRoundingAdjustmentRecognizer.recognizeRoundingAdjustment(_tmpSummary, custBalancePostingType, _roundingAdjustmentEntry);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SubledgerJourSummaryCustBalRoundingAdj construct()
    {
        return new SubledgerJourSummaryCustBalRoundingAdj();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>