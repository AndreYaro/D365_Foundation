<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAutomationScheduleExploderProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>CustAutomationScheduleExploderProvider</c> class is designed to handle <c>CustAutomationCriteria</c> records upon occurrence explosion.
/// </summary>
[ExportMetadata(extendedTypeStr(ProcessScheduleTypeName), 'CustAutomation')]
[Export(identifierStr(Dynamics.AX.Application.ProcessScheduleIExplodeOccurrences))]
internal final class CustAutomationScheduleExploderProvider implements ProcessScheduleIExplodeOccurrences
{
    private CustAutomationCriteria automationCriteria;
    private CustAutomationCriteria automationCriteriaSelect;
    private ProcessScheduleSeriesOccurrenceTmp occurrencesExplodedTmp;
        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>explodeOccurrences</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void explodeOccurrences(ProcessScheduleSeriesOccurrenceTmp _occurrencesExplodedTmp)
    {
        this.initialize(_occurrencesExplodedTmp);
        
        SysDaInsertObject scheduleExplodeInsertObject = this.buildInsertObject(occurrencesExplodedTmp);
        this.executeInsertStatement(scheduleExplodeInsertObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(ProcessScheduleSeriesOccurrenceTmp _occurrencesExplodedTmp)
    {
        occurrencesExplodedTmp.linkPhysicalTableInstance(_occurrencesExplodedTmp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInsertObject</Name>
				<Source><![CDATA[
    internal SysDaInsertObject buildInsertObject(ProcessScheduleSeriesOccurrenceTmp _occurrencesExplodedTmp)
    {
        SysDaInsertObject scheduleExplodeInsertObject = new SysDaInsertObject(automationCriteria);
        
        SysDaQueryObject scheduleExplodeInsertQuery = this.buildInsertQueryObject();

        scheduleExplodeInsertObject.query(scheduleExplodeInsertQuery);

        this.addInsertFieldsToInsertObject(scheduleExplodeInsertObject);

        return scheduleExplodeInsertObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInsertQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject buildInsertQueryObject()
    {
        SysDaQueryObject scheduleExplodeInsertQuery = new SysDaQueryObject(automationCriteriaSelect);
        
        scheduleExplodeInsertQuery.joinClause(SysDaJoinKind::InnerJoin, this.getScheduleSeriesOccurrenceQueryObject());

        this.addProjectionFieldToQueryObject(scheduleExplodeInsertQuery);

        return scheduleExplodeInsertQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getScheduleSeriesOccurrenceQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject getScheduleSeriesOccurrenceQueryObject()
    {
        SysDaQueryObject daQuery = new SysDaQueryObject(occurrencesExplodedTmp);
        daQuery.whereClause(
            new SysDaEqualsExpression(
                    new SysDaFieldExpression(occurrencesExplodedTmp, fieldStr(ProcessScheduleSeriesOccurrenceTmp, ProcessScheduleSeries)),
                    new SysDaFieldExpression(automationCriteriaSelect, fieldStr(CustAutomationCriteria, ProcessScheduleSeries)))
            .and(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(occurrencesExplodedTmp, fieldStr(ProcessScheduleSeriesOccurrenceTmp, TypeName)),
            new SysDaValueExpression(CustAutomationConstants::RegisteredTypeName)))
                );
        daQuery.projection().add(fieldStr(ProcessScheduleSeriesOccurrenceTmp, ProcessScheduleOccurrence));

        return daQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addProjectionFieldToQueryObject</Name>
				<Source><![CDATA[
    internal void addProjectionFieldToQueryObject(SysDaQueryObject _scheduleExplodeInsertQuery)
    {
        _scheduleExplodeInsertQuery.projection()
            .add(fieldStr(CustAutomationCriteria, StrategyName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInsertFieldsToInsertObject</Name>
				<Source><![CDATA[
    internal void addInsertFieldsToInsertObject(SysDaInsertObject _scheduleExplodeInsertObject)
    {
        _scheduleExplodeInsertObject.fields()
            .add(fieldStr(CustAutomationCriteria, StrategyName))
            .add(fieldStr(CustAutomationCriteria, ProcessScheduleOccurrence));
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeInsertStatement</Name>
				<Source><![CDATA[
    internal void executeInsertStatement(SysDaInsertObject _scheduleExplodeInsertObject)
    {
        SysDaInsertStatement scheduleExplodeInsertStatement = new SysDaInsertStatement();

        scheduleExplodeInsertStatement.insert(_scheduleExplodeInsertObject);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>