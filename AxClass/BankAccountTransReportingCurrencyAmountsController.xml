<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankAccountTransReportingCurrencyAmountsController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankAccountTransReportingCurrencyAmountsController</c> class is a controller class used to populate reporting currency amounts to the <c>BankAccountTrans</c> table.
/// </summary>
public class BankAccountTransReportingCurrencyAmountsController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super(classStr(BankAccountTransReportingCurrencyAmountsService),
            methodStr(BankAccountTransReportingCurrencyAmountsService, updateReportingCurrencyAmounts),
            SysOperationExecutionMode::ScheduledBatch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return "@CashManagement:CashBankMgmt_Wizard_Title_AddReportingCurrencyAmountsToBankAccountTrans";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReportingCurrencyAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates instance of the <c>BankAccountTransReportingCurrencyAmountsController</c> class and runs the main business logic to update the
    /// reporting currency amounts for the <c>BankAccountTrans</c> table.
    /// </summary>
    public static void updateReportingCurrencyAmounts()
    {
        BankAccountTransReportingCurrencyAmountsController reportingCurrencyAmountsController = new BankAccountTransReportingCurrencyAmountsController();

        reportingCurrencyAmountsController.parmShowDialog(false);
        reportingCurrencyAmountsController.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>