<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventClosingReverseStopOnErrorDBUpgradeBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class InventClosingReverseStopOnErrorDBUpgradeBuilder extends ApplicationSQLObjects
{
    private str inventClosingTableName;
    private str inventClosingStopRunning;
    private str inventClosingStopOnError;
    private str inventClosingCancellation;
    private str inventClosingInventCostStatus;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>contruct</Name>
				<Source><![CDATA[
    public static InventClosingReverseStopOnErrorDBUpgradeBuilder contruct()
    {
        return new InventClosingReverseStopOnErrorDBUpgradeBuilder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        var builder = InventClosingReverseStopOnErrorDBUpgradeBuilder::contruct();
        builder.updateInventClosingReverseStopOnError();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventClosingReverseStopOnError</Name>
				<Source><![CDATA[
    internal static void setInventClosingReverseStopOnError()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(LogisticsBasic)))
        {
            var builder = InventClosingReverseStopOnErrorDBUpgradeBuilder::contruct();
            builder.updateInventClosingReverseStopOnError();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
        this.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(boolean _runOnSeparateUserConnection = false)
    {
        super(_runOnSeparateUserConnection);

        SysDictTable inventClosingDictTable = new SysDictTable(tableNum(InventClosing));
        inventClosingTableName              = inventClosingDictTable.name(DbBackend::Sql);
        inventClosingStopRunning            = inventClosingDictTable.fieldObject(fieldNum(InventClosing, StopRunning)).name(DbBackend::Sql);
        inventClosingStopOnError            = inventClosingDictTable.fieldObject(fieldNum(InventClosing, StopOnError)).name(DbBackend::Sql);
        inventClosingCancellation           = inventClosingDictTable.fieldObject(fieldNum(InventClosing, Cancellation)).name(DbBackend::Sql);
        inventClosingInventCostStatus       = inventClosingDictTable.fieldObject(fieldNum(InventClosing, InventCostStatus)).name(DbBackend::Sql);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventClosingReverseStopOnError</Name>
				<Source><![CDATA[
    private void updateInventClosingReverseStopOnError()
    {
        if (CostClosingReverseCheckDuplicateV2Flight::instance().isEnabled())
        {
            this.executeSqlStatementWithParameters(this.getUpdateSqlStmt(), SqlParams::create());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUpdateSqlStmt</Name>
				<Source><![CDATA[
    private SysSQLStatementText getUpdateSqlStmt()
    {
        /*
        BEGIN
            UPDATE INVENTCLOSING
            SET INVENTCLOSING.STOPRUNNING = 1, 
                INVENTCLOSING.STOPONERROR = 1
            WHERE INVENTCLOSING.CANCELLATION = 1 
              AND INVENTCLOSING.STOPRUNNING = 0 
              AND INVENTCLOSING.INVENTCOSTSTATUS <> 0
        END
        */

        SysSQLStatementText sqlStmt = 'BEGIN';
        sqlStmt += ' UPDATE ' + inventClosingTableName + ' SET ';

        sqlStmt += inventClosingTableName + '.' + inventClosingStopRunning + ' = 1, ';
        sqlStmt += inventClosingTableName + '.' + inventClosingStopOnError + ' = 1 ';

        sqlStmt += 'WHERE ' + inventClosingTableName + '.' + inventClosingCancellation + ' = 1 ';
        sqlStmt += 'AND ' + inventClosingTableName + '.' + inventClosingStopRunning + ' = 0 ';
        sqlStmt += 'AND ' + inventClosingTableName + '.' + inventClosingInventCostStatus + ' <> 0 ';
        sqlStmt += 'END';

        return sqlStmt;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>