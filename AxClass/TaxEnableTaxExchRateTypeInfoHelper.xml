<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxEnableTaxExchRateTypeInfoHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxEnableTaxExchRateTypeInfoHelper</c> shows the info message and action required message when switch sales tax exchange rate type parameter.
/// </summary>
internal final class TaxEnableTaxExchRateTypeInfoHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>alertBeforeEnableTaxExchRateType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the info message when enabling the sales tax exchange rate type parameter. And waiting for user's decision.
    /// </summary>
    /// <returns>The dialog button that user clicked.</returns>
    internal DialogButton alertBeforeEnableTaxExchRateType()
    {
        Args args = new Args();
        args.name(formstr(SysBoxForm));
        FormRun formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.setTitle("@SYS11132");
        formRun.setText("@TaxIntegration:TaxEnableTaxExchRateInfoTitle");
        formRun.setType(DialogBoxType::OkCancelBox);
        formRun.parmDefaultButton(DialogButton::Cancel);

        FormGroupControl mainGroup = formRun.design().controlName(formControlStr(SysBoxForm, MainGroup));
        FormStaticTextControl description = mainGroup.addControl(FormControlType::StaticText, 'Description');
        description.text("@TaxIntegration:TaxEnableTaxExchRateInfoMsg");
        HyperLinkControl linkControl = mainGroup.addControlEx(classStr(HyperLinkControl), 'Why');
        linkControl.visible(true);
        linkControl.parmLabel("@TaxIntegration:TaxEnableTaxExchRateInfoReason");
        linkControl.parmText("@TaxIntegration:TaxEnableTaxExchRateInfoWhy");
        FormStaticTextControl preRequestAction = mainGroup.addControl(FormControlType::StaticText, 'PreRequestAction');
        preRequestAction.text("@TaxIntegration:TaxEnableTaxExchRateInfoPreRequest");

        formRun.run();
        formRun.wait();
        // attempt to return after waiting
        return formRun.dialogButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>alertBeforeDisableTaxExchRateType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the info message when disabling the sales tax exchange rate type parameter. And waiting for user's decision.
    /// </summary>
    /// <returns>The dialog button that user clicked.</returns>
    internal DialogButton alertBeforeDisableTaxExchRateType()
    {
        Args args = new Args();
        args.name(formstr(SysBoxForm));
        FormRun formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.setTitle("@SYS11132");
        formRun.setText("@TaxIntegration:TaxDisableTaxExchRateInfoTitle");
        formRun.setType(DialogBoxType::OkCancelBox);
        formRun.parmDefaultButton(DialogButton::Cancel);

        FormGroupControl mainGroup = formRun.design().controlName(formControlStr(SysBoxForm, MainGroup));
        FormStaticTextControl description = mainGroup.addControl(FormControlType::StaticText, 'Description');
        description.text("@TaxIntegration:TaxDisableTaxExchRateInfoMsg");
        FormStaticTextControl preRequestAction = mainGroup.addControl(FormControlType::StaticText, 'PreRequestAction');
        preRequestAction.text("@TaxIntegration:TaxDisableTaxExchRateInfoPreRequest");

        formRun.run();
        formRun.wait();
        // attempt to return after waiting
        return formRun.dialogButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showActionRequiredAfterSwitchParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the action required message after switch the sales tax exchange rate parameter.
    /// </summary>
    internal void showActionRequiredAfterSwitchParameter()
    {
        Args args = new Args();
        args.name(formstr(SysBoxForm));
        FormRun formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.setTitle("@SYS11132");
        formRun.setText("@TaxIntegration:TaxSwitchTaxExchRateInfoTitle");
        formRun.setType(DialogBoxType::InfoBox);
        formRun.parmDefaultButton(DialogButton::Cancel);

        FormGroupControl mainGroup = formRun.design().controlName(formControlStr(SysBoxForm, MainGroup));
        FormStaticTextControl description = mainGroup.addControl(FormControlType::StaticText, 'Description');
        description.text("@TaxIntegration:TaxSwitchTaxExchRateInfoMessage");

        formRun.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        this.checkNonInteractive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNonInteractive</Name>
				<Source><![CDATA[
    private void checkNonInteractive()
    {
        // Validate that BOX api is called in non-interactive sessions.
        if (!hasGUI())
        {
            throw error("@ApplicationPlatform:FormOpenNonGUISession");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>