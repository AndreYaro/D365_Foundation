<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeReportParamLocDPBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesTS_SIFOTDetailedBaseDP</c> class is base class for report Data Providers for the <c>TS_SIFOTDetailed</c>
/// SRS report. It's purpuse is to provide values and labels for parameters needed by the report.
/// </summary>
public abstract class TradeReportParamLocDPBase extends SrsReportDataProviderBase
{
    TradeReportParamLocTmp tradeReportParamLocTmp;
    container              paramValues;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getParmValuesContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Template method used by subclasses to return container with values and labels for them.
    /// </summary>
    /// <returns>
    /// Container containing containers with value and label that will be used for SRS report parameter.
    /// </returns>
    protected abstract container getParmValuesContainer()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the values and labels for a parameter from <c>SalesTS_SIFOTEnumValuesTmp</c> temporary table.
    /// </summary>
    /// <returns>
    /// The <c>SalesTS_SIFOTEnumValuesTmp</c> temporary table with values and labels.
    /// </returns>
    [
        SRSReportDataSetAttribute('Values')
    ]
    public TradeReportParamLocTmp getValues()
    {
        select tradeReportParamLocTmp;
        return tradeReportParamLocTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFromContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts values from <c>rows</c> container into the <c>SalesTS_SIFOTEnumValuesTmp</c> table
    /// that will be returned from <c>getValues</c> method.
    /// </summary>
    private void initializeFromContainer()
    {
        container paramValue;
        int       i;

        for (i = 1; i <= conLen(paramValues); i++)
        {
            paramValue = conPeek(paramValues, i);
            tradeReportParamLocTmp.Value = conPeek(paramValue, 1);
            tradeReportParamLocTmp.Label = conPeek(paramValue, 2);
            tradeReportParamLocTmp.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
        public void processReport()
    {
        super();
        paramValues = this.getParmValuesContainer();
        this.initializeFromContainer();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>