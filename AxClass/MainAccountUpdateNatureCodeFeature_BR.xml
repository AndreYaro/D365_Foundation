<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MainAccountUpdateNatureCodeFeature_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;

/// <summary>
/// When <c>MainAccountUpdateNatureCodeFeature_BR</c> is enabled, it will allow the user to customize main account nature code.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class MainAccountUpdateNatureCodeFeature_BR implements IFeatureMetadata, IFeatureMetadataEnablementNotifiable, IFeaturePrerequisites
{
    private static MainAccountUpdateNatureCodeFeature_BR instance = new MainAccountUpdateNatureCodeFeature_BR();
    #ISOCountryRegionCodes
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static MainAccountUpdateNatureCodeFeature_BR instance()
    {
        return MainAccountUpdateNatureCodeFeature_BR::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@SPEDECDLayout9:MainAccountNatureCodeUpdateFeatureName");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::FiscalBooks_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@SPEDECDLayout9:MainAccountNatureCodeUpdateFeatureDescription");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://go.microsoft.com/fwlink/?linkid=2293406';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canEnable()
    {
        Set legalEntitiesBR = SysCountryRegionCode::getLegalEntitiesForCountryRegion(#isoBR);
        return !legalEntitiesBR.empty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>cannotEnableMessage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public LabelString cannotEnableMessage()
    {
        return "@SPEDECDLayout9:CannotEnableMainAccountUpdateNatureCodeFeature_BR";
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if Brazilian LE exists before updating the nature code for main accounts.
    /// </summary>
    [Hookable(false)]
    public void onEnabled()
    {
        ttsbegin;
        MainAccount mainAccount;
        while select forupdate mainAccount
        {
            mainAccount.NatureCode_BR = MainAccount::getNatureCode_BR(mainAccount.Type);
            mainAccount.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onDisabled()
    {
        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>