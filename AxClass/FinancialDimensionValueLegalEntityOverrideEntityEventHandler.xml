<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FinancialDimensionValueLegalEntityOverrideEntityEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles events for <c>FinancialDimensionValueLegalEntityOverrideEntity</c> extension.
/// </summary>
public class FinancialDimensionValueLegalEntityOverrideEntityEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>HcmEmploymentV2Entity_onUpdatingEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Entity UpdatingEntityDataSource event handler for <c>FinancialDimensionValueLegalEntityOverrideEntity</c> extension.
    /// </summary>
    /// <param name="_sender">The <c>FinancialDimensionValueLegalEntityOverrideEntity</c> raising the event.</param>
    /// <param name="_eventArgs">The event arguments.</param>
    [DataEventHandler(tableStr(FinancialDimensionValueLegalEntityOverrideEntity), DataEventType::UpdatingEntityDataSource)]
    public static void HcmEmploymentV2Entity_onUpdatingEntityDataSource(Common _sender, DataEventArgs _eventArgs)
    {
        DataEntityContextEventArgs contextEventArgs = _eventArgs as DataEntityContextEventArgs;
        DataEntityDataSourceRuntimeContext dataSourceCtx = contextEventArgs.parmEntityDataSourceContext();
        FinancialDimensionValueLegalEntityOverrideEntity financialDimensionValueLegalEntityOverrideEntity = _sender as FinancialDimensionValueLegalEntityOverrideEntity;

        if (dataSourceCtx.name() == dataEntityDataSourceStr(FinancialDimensionValueLegalEntityOverrideEntity, DimensionAttrValueLedgerOverride))
        {
            DimensionAttrValueLedgerOverride dimensionAttrValueLedgerOverride = dataSourceCtx.getBuffer();

            if (dimensionAttrValueLedgerOverride.DimensionAttributeValue)
            {
                DimensionAttrValueLedgerOverride existingRecord = DimensionAttrValueLedgerOverride::findByDimensionAttrValueLedgerOverride(
                    dimensionAttrValueLedgerOverride.DimensionAttributeValue,
                    dimensionAttrValueLedgerOverride.Ledger);

                HCMWorker hcmWorker = HCMWorker::findByPersonnelNumber(financialDimensionValueLegalEntityOverrideEntity.Owner);
                dimensionAttrValueLedgerOverride.Owner = hcmWorker.RecId;

                if (dimensionAttrValueLedgerOverride.Owner != existingRecord.Owner)
                {
                    // Merge user modified fields into the existing record (excluding system fields).
                    buf2Buf(dimensionAttrValueLedgerOverride, existingRecord);

                    // Set the datasource context buffer to the final merged record.
                    dataSourceCtx.setBuffer(existingRecord);
                    dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>