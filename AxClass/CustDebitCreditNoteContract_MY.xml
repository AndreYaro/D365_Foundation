<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustDebitCreditNoteContract_MY</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustDebitCreditNoteContract_MY</c> is contract class for the <c>CustDebitCreditNote_MY</c> report.
/// </summary>
[
    DataContract,
    SysOperationGroup('Customer', "@SYS302", '3')
]
public class CustDebitCreditNoteContract_MY implements SysOperationValidatable
{
    TransDate fromDate;
    TransDate toDate;

    CustAccount customerAccount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmCustomerAccount</Name>
				<Source><![CDATA[
    [
        DataMember('CustomerAccount'),
        SysOperationLabel(literalstr("@SYS7149")),
        SysOperationHelpText(literalstr("@SYS82096")),
        SysOperationGroupMember('Customer')
    ]
    public CustAccount parmCustomerAccount(CustAccount _customerAccount = customerAccount)
    {
        customerAccount = _customerAccount;
        return customerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [
        DataMember('FromDate'),
        SysOperationLabel(literalstr("@SYS328562")),
        SysOperationHelpText(literalstr("@SYS328563")),
        SysOperationDisplayOrder('1')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [
        DataMember('ToDate'),
        SysOperationLabel(literalstr("@SYS328564")),
        SysOperationHelpText(literalstr("@SYS328565")),
        SysOperationDisplayOrder('2')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the report parameters are valid.
    /// </summary>
    /// <returns>
    /// true if the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!fromDate)
        {
            //From date must be entered.
            isValid = checkFailed(strFmt("@SYS39376", "@SYS24050"));
        }

        if (isValid && !toDate)
        {
            //To date must be entered.
            isValid = checkFailed(strFmt("@SYS39376", "@SYS35904"));
        }

        if (isValid && fromDate > toDate)
        {
            //From date must be before To date
            isValid = checkFailed("@SYS91020");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>