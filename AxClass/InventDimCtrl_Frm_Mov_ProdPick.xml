<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimCtrl_Frm_Mov_ProdPick</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventDimCtrl_Frm_Mov_ProdPick extends InventDimCtrl_Frm_Mov
{
    boolean allowEditConsistentDim;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formActiveSetup</Name>
				<Source><![CDATA[
    public void formActiveSetup(
        InventDimGroupSetup         _inventDimGroupSetup    = null,
        InventMovement              _movement               = null,
        ProdJournalBOM              _prodJournalBOM         = null)
    {
        allowEditConsistentDim = _prodJournalBOM.RecId ? false : true;

        super(_inventDimGroupSetup, _movement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustEnableOnlyActiveDimensions</Name>
				<Source><![CDATA[
    protected boolean mustEnableOnlyActiveDimensions()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustEnableField</Name>
				<Source><![CDATA[
    protected NoYes mustEnableField(FieldId _dimFieldId)
    {
        if (!super(_dimFieldId))
        {
            return NoYes::No;
        }

        if (movement)
        {
            InventDimGroupFieldSetup inventDimGroupFieldSetup = this.getFieldSetup(_dimFieldId);

            if (!inventDimGroupFieldSetup.dimFieldId())
            {
                return movement.buffer().RecId ? NoYes::No : NoYes::Yes;
            }

            if (allowEditConsistentDim && inventDimGroupFieldSetup.isConsistent())
            {
                return NoYes::Yes;
            }

            if (movement.buffer().RecId && inventDimGroupFieldSetup.isConsistent())
            {
                return NoYes::No;
            }
        }

        return NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnableDimensionInCurrentCountryContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified inventory dimension can be enabled in the current country context.
    /// </summary>
    /// <param name = "_fieldId">The ID of the inventory dimension field.</param>
    /// <returns>Will always return true.</returns>
    /// <remarks>The base class only allows to enable Owner in the Russian context. We need it globally for the production lines.</remarks>
    protected boolean canEnableDimensionInCurrentCountryContext(FieldId _fieldId)
    {
        return this.isOwnerFieldInConsignmentConfiguration(_fieldId) || super(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventDimCtrl_Frm_Mov_ProdPick construct()
    {
        return new InventDimCtrl_Frm_Mov_ProdPick();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromFormMovement</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and initializes an instance of this class that will be used in forms.
    /// </summary>
    /// <param name="_formRun">
    ///    The form where controls are maintained.
    /// </param>
    /// <param name="_movement">
    ///    An instance of the movement for which the class is used.
    /// </param>
    /// <returns>
    ///    An instance of this class that will be used in a form.
    /// </returns>
    public static InventDimCtrl_Frm_Mov_ProdPick newFromFormMovement(
        FormRun         _formRun,
        InventMovement  _movement)
    {
        InventDimCtrl_Frm_Mov_ProdPick    inventDimCtrl = InventDimCtrl_Frm_Mov_ProdPick::construct();
        InventDimAxFormAdapter adapter = InventDimAxFormAdapter::newFromForm(_formRun);

        inventDimCtrl.parmCallingElement(adapter);
        inventDimCtrl.parmMovement(_movement);
        inventDimCtrl.init();

        return inventDimCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
