<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransTrackingTransaction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  Keeps information about a single invent tracking dimensions for the InventTrans stack
/// </summary>
public final class InventTransTrackingTransaction extends InventTrackingTransaction
{
    private InventTrans         inventTrans;
    private InventTransOrigin   inventTransOrigin;
    private InventDim           transactionInventDim;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setItemId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void setItemId(ItemId _itemId)
    {
        inventTransOrigin.ItemId = _itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBatchId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void setBatchId(InventBatchId _batchId)
    {
        transactionInventDim.inventBatchId = _batchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addTrackingNode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventDimTrackingInventTransNode addTrackingNode(InventTrackingDimTracingRelations _inventTrackingDimTracingRelations)
    {
        return _inventTrackingDimTracingRelations.addInventTransNode(inventTrans, inventTransOrigin);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tracingNodeKey</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str tracingNodeKey()
    {      
        return  InventTrackingDimTracingRelations::tracingNodeKey(inventTrans.TableId, inventTrans.RecId);       
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventDim inventDim()
    {        
        return transactionInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ItemId getItemId()
    {
        return InventTransOrigin.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBatchId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventBatchId getBatchId()
    {
        return transactionInventDim.inventBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>uniqueKey</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str uniqueKey()
    {
        if (inventTrans.RecId)
        {
            return int642Str(inventTrans.RecId);
        }

        return '';        
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public RefRecId inventTransRecId()
    {
        return inventTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>stockQtyChangeDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public StockQtyChangeDate stockQtyChangeDate()
    {
        return inventTrans.stockQtyChangeDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>cwQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public PdsCWQty cwQty()
    {
        return inventTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventQty qty()
    {
        return inventTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventUnit</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public UnitIDInventory inventUnit()
    {
        return inventTrans.inventUnit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWUnitId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public  PdsCWUnitId pdsCWUnitId()
    {
        return inventTrans.pdsCWUnitId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductionRelated</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isProductionRelated()
    {
        return inventTransOrigin.isProductionRelated();
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventTransRefId referenceId()
    {
        return inventTransOrigin.ReferenceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceCategory</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventTransType referenceCategory()
    {
        return inventTransOrigin.ReferenceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasReferenceDetails</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean hasReferenceDetails()
    {
        return inventTransOrigin.ReferenceId != ''
            && inventTransOrigin.ReferenceCategory != InventTransType::WMSTransport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventTrackingTransactionType getTransactionType()
    {
        return InventTrackingTransactionType::InventTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventDimId inventDimId()
    {
        return inventTrans.inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTrackingNode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventDimTrackingInventTransNode createTrackingNode()
    {
        return InventDimTrackingInventTransNode::newFromInventTrans(inventTrans, inventTransOrigin);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventTrans</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal InventTrans getInventTrans()
    {
        return inventTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventTransOrigin</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal InventTransOrigin getInventTransOrigin()
    {
        return inventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isByProductProductionTransaction</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isByProductProductionTransaction()
    {
        boolean                 ret = false;

        if (inventTransOrigin.ReferenceCategory == InventTransType::PmfProdCoBy)
        {
            ret = PmfProdCoBy::findTransId(inventTransOrigin.InventTransId).ProductType == PmfProductType::By_Product;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static InventTransTrackingTransaction construct()
    {
        return new InventTransTrackingTransaction();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventTransAndInventTransOrigin</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static InventTransTrackingTransaction newFromInventTransAndInventTransOrigin(
        InventTrans _inventTrans,
        InventTransOrigin _inventTransOrigin)
    {
        InventTransTrackingTransaction trackingTransaction = new InventTransTrackingTransaction();
        trackingTransaction.inventTrans = _inventTrans;
        trackingTransaction.inventTransOrigin = _inventTransOrigin;

        return trackingTransaction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTopNode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static InventTransTrackingTransaction createTopNode(InventTrackingDimTracingCriteria _inventTrackingDimTracingCriteria)
    {
        InventTransTrackingTransaction trackingTransaction = new InventTransTrackingTransaction();
        trackingTransaction.setItemId(_inventTrackingDimTracingCriteria.parmItemIdCriteria());
        trackingTransaction.setBatchId(_inventTrackingDimTracingCriteria.parmInventDimCriteria().InventBatchId);

        return trackingTransaction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPackedContainer</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static InventTransTrackingTransaction newFromPackedContainer(
       container _packedContainer)
    {
        InventTransTrackingTransaction trackingTransaction = new InventTransTrackingTransaction();

        [trackingTransaction.inventTransOrigin, trackingTransaction.inventTrans] = _packedContainer;

        if (trackingTransaction.inventTrans.RecId)
        {
            trackingTransaction.transactionInventDim = trackingTransaction.inventTrans.inventDim();
        }

        return trackingTransaction;        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>