<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRContinuityScheduleCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRContinuityScheduleCopy</c> class copies a continuity schedule.
/// </summary>
class MCRContinuityScheduleCopy extends RunBase
{
    // original and copy-to table buffers
    MCRContinuityScheduleHeader     continuityScheduleHeader;
    MCRContinuityScheduleHeader     continuityScheduleHeader_orig;
    MCRContinuityScheduleLine       continuityScheduleLine;
    MCRContinuityScheduleLine       continuityScheduleLine_orig;
    MCRValidPaymentSchedule        validPaymentSchedules;
    MCRValidPaymentSchedule        validPaymentSchedules_orig;

    // dialog fields and class variables behind them
    DialogField                     continuityScheduleId_field;
    DialogField                     continuityScheduleId_fieldOrig;
    MCRContinuityScheduleID         continuityScheduleId;
    MCRContinuityScheduleID         continuityScheduleId_orig;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Copies the header information.
    /// </summary>
    private void copyHeader()
    {
        // copy/create header
        buf2Buf(continuityScheduleHeader_orig, continuityScheduleHeader);
        continuityScheduleHeader.ScheduleID = continuityScheduleId;
        continuityScheduleHeader.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the line that is on the original schedule.
    /// </summary>
    private void copyLines()
    {
        // copy/create lines
        setPrefix("@MCR39743");
        while select continuityScheduleLine_orig
            index hint KeyIndex
            where continuityScheduleLine_orig.ScheduleID == continuityScheduleId_orig
        {
            buf2Buf(continuityScheduleLine_orig, continuityScheduleLine);
            continuityScheduleLine.ScheduleID = continuityScheduleId;
            continuityScheduleLine.insert();
            info(strFmt("@MCR39744", continuityScheduleLine.LineNum,
                                               continuityScheduleLine.ItemID));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyPaymSchedules</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Copies payment schedule information from the
    ///  original schedule.
    /// </summary>
    private void copyPaymSchedules()
    {
        // copy/create valid payment schedules if need
        if (continuityScheduleHeader.PromptForPaymSched)
        {
            setPrefix("@MCR39745");
            while select validPaymentSchedules_orig
                index hint SchedPaymId
                where validPaymentSchedules_orig.ContinuityScheduleID == continuityScheduleId_orig
            {
                buf2Buf(validPaymentSchedules_orig, validPaymentSchedules);
                validPaymentSchedules.ContinuityScheduleID = continuityScheduleId;
                validPaymentSchedules.insert();
                info(strFmt("@MCR39746", validPaymentSchedules.PaymScheduleId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Prompts the user for a new continuity schedule
    ///  name and validates that the one selected to copy is
    ///  correct.
    /// </summary>
    /// <returns>
    /// An <c>object</c> with the dialog values.
    /// </returns>
    public Object dialog()
    {
        DialogRunbase dialog = super();

        // original - disable editing, force in parm
        dialog.addGroup("@MCR39747");
        continuityScheduleId_fieldOrig = dialog.addField(extendedTypeStr(MCRContinuityScheduleID));
        continuityScheduleId_fieldOrig.value(continuityScheduleHeader_orig.ScheduleID);
        continuityScheduleId_fieldOrig.lookupButton(1);
        continuityScheduleId_fieldOrig.allowEdit(false);

        // copy-to schedule id
        dialog.addGroup("@MCR39748");
        continuityScheduleId_field = dialog.addField(extendedTypeStr(MCRContinuityScheduleID));
        continuityScheduleId_field.lookupButton(1);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the copy-to schedule ID from dialog.
    /// </summary>
    /// <returns>
    /// true if the schedule ID is set from the dialog; otherwise, false.
    /// </returns>
    public boolean getFromDialog()
    {
        continuityScheduleId = continuityScheduleId_field.value();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContinuitySchedule</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Sets the original continuity buffer from caller.
    /// </summary>
    /// <param name="common">
    ///  The passed in record to select the continuity schedule header.
    /// </param>
    private void parmContinuitySchedule(Common common)
    {
        select firstonly continuityScheduleHeader_orig
            where continuityScheduleHeader_orig.RecId == common.RecId;

        continuityScheduleId_orig = continuityScheduleHeader_orig.ScheduleID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Copies header, lines and valid paym schedules if they exist.
    /// </summary>
    public void run()
    {
        this.copyHeader();
        setPrefix(strFmt("@MCR39749", continuityScheduleId));

        this.copyLines();
        this.copyPaymSchedules();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the user has entered a schedule to copy that is not the same as the original and does not
    /// already exist in the system.
    /// </summary>
    /// <param name="calledFrom">
    /// The <c>object</c> that the copy is called from.
    /// </param>
    /// <returns>
    /// true if the copy to schedule is valid; otherwie, false.
    /// </returns>
    public boolean validate(Object calledFrom = null)
    {
        boolean ret = true;

        if (!continuityScheduleId)
            ret = checkFailed("@MCR39732");

        if (continuityScheduleId == continuityScheduleHeader.ScheduleID)
            ret = checkFailed("@MCR39733");

        if (MCRContinuityScheduleHeader::find(continuityScheduleId))
            ret = checkFailed(strFmt("@MCR39734", continuityScheduleId));

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates and controls the order of execution during
    /// a copy.
    /// </summary>
    /// <param name="_args">
    /// The arguments with which the continuity schedule copy is called.
    /// </param>
    public static void main(Args _args)
    {
        MCRContinuityScheduleCopy  continuityScheduleCopy;

        continuityScheduleCopy = new MCRContinuityScheduleCopy();

        if (!_args || _args.dataset() != tableNum(MCRContinuityScheduleHeader))
            throw error("@MCR39750");

        continuityScheduleCopy.parmContinuitySchedule(_args.record());

        if (continuityScheduleCopy.prompt())
            continuityScheduleCopy.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>