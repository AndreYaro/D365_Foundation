<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAllocLineDimAttrValController_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AssetAllocLineDimAttrValController_CN</c> class manages the lookup, validation and storage
///    of dimension attribute values of a dimension for an allocation rule line.
/// </summary>
public class AssetAllocLineDimAttrValController_CN
{
    Common                      backingEntity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    How the dimension attribute values are queried.
    /// </summary>
    /// <param name="_dimAttrId">
    ///    The RecId of the dimension attribute.
    /// </param>
    /// <param name="_dimensionValue">
    ///    The string control to perform the lookup.
    /// </param>
    public void lookupDimensionValue(RefRecId _dimAttrId, FormStringControl _dimensionValue)
    {
        DimensionAttribute dimAttr = DimensionAttribute::find(_dimAttrId);

        if (dimAttr == null)
        {
            // @SYS4002355 - Financial dimension has not been specified.
            checkFailed("@SYS4002355");
            return;
        }

        if (_dimensionValue != null)
        {
            DimensionAttributeViewContract dimAttrViewContract = DimensionAttribute::getViewContract(dimAttr.RecId);
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(dimAttrViewContract.parmViewId(), _dimensionValue);

            sysTableLookup.addLookupField(dimAttrViewContract.parmValueFieldId());
            sysTableLookup.addLookupField(dimAttrViewContract.parmNameFieldId());

            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource = query.addDataSource(dimAttrViewContract.parmViewId());

            sysTableLookup.parmQuery(query);

            changecompany(dimAttr.company())
            {
                sysTableLookup.performFormLookup();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The handler of the event that happends after selecting another dimension attribute value
    ///    for an allocation rule line.
    /// </summary>
    /// <param name="_dimAttrId">
    ///    The name of the dimension attribute.
    /// </param>
    /// <param name="_line">
    ///    The current record of <c>AssetAllocationRuleLine_CN</c>.
    /// </param>
    /// <param name="_dimensionValue">
    ///    The string control that holds the dimension attribute value.
    /// </param>
    /// <returns>
    ///    If the dimension attribute value is successfully changed.
    /// </returns>
    public boolean modifiedDimensionValue(RefRecId _dimAttrId, AssetAllocationRuleLine_CN _line, FormStringControl _dimensionValue)
    {
        DimensionAttributeValue dimAttrValue;
        str                     text;
        DimensionAttribute      dimAttr;

        dimAttr = DimensionAttribute::find(_dimAttrId);

        if (dimAttr == null)
        {
            // @SYS4002355 - Financial dimension has not been specified.
            return checkFailed("@SYS4002355");
        }

        text = strLRTrim(_dimensionValue.text());

        if (!backingEntity)
        {
            _dimensionValue.text('');
            // @SYS135696 - Dimension value %1 does not exist.
            return checkFailed(strFmt("@SYS135696", text));
        }

        dimAttrValue = DimensionAttributeValue::findByDimensionAttributeAndValueNoError(dimAttr, text, false, true);

        _line.Key = dimAttrValue.RecId;
        _line.LocalizedValue = text;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validate if a string value is a proper dimension attribute value of a dimension attribute.
    /// </summary>
    /// <param name="_dimAttrId">
    ///    The name of the dimension attribute.
    /// </param>
    /// <param name="_dimensionValue">
    ///    The string control that holds the dimension attribute value.
    /// </param>
    /// <returns>
    ///    If the dimension attribute value is valid.
    /// </returns>
    public boolean validateDimensionValue(RefRecId _dimAttrId, FormStringControl _dimensionValue)
    {
        str                     text;
        DimensionAttribute      dimAttr;

        dimAttr = DimensionAttribute::find(_dimAttrId);
        if (dimAttr == null)
        {
            // @SYS4002355 - Financial dimension has not been specified.
            return checkFailed("@SYS4002355");
        }

        // Get the string control causing the textChange - Note: Due to client bug this is cached in the _enter method and used here
        if (_dimensionValue != null)
        {
            text = strLRTrim(_dimensionValue.text());

            DimensionAttributeValue dimAttrValue = DimensionAttributeValue::findByDimensionAttributeAndValueNoError(dimAttr, text, false, true);
            if (dimAttrValue)
            {
                backingEntity = dimAttrValue.getEntityInstance();
                if (!backingEntity)
                {
                    // @SYS135696 - Dimension value %1 does not exist.
                    return checkFailed(strFmt("@SYS135696", text));
                }
                else
                {
                    return true;
                }
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AssetAllocLineDimAttrValController_CN construct()
    {
        return new AssetAllocLineDimAttrValController_CN();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>