<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSPrintContainerShippingLabel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TMSPrintContainerShippingLabel</c> class is abstract class for print the container shipping label based on the label type.
/// </summary>
abstract public class TMSPrintContainerShippingLabel
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create an instance of <c>TMSPrintContainerShippingLabel</c> instance based on the container shipping label type.
    /// </summary>
    /// <param name = "_labelType">
    /// The shipping container label type.
    /// </param>
    /// <returns>
    /// An instance of <c>TMSPrintContainerShippingLabel</c> class.
    /// </returns>
    internal static TMSPrintContainerShippingLabel createInstance(TMSContainerShippingLabelType _labelType)
    {
        var attr     = new TMSContainerShippingLabelTypeFactoryAttribute(_labelType);
        var instance = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(TMSPrintContainerShippingLabel), attr) as TMSPrintContainerShippingLabel;

        if (!instance)
        {
            throw error("@TRX:InvalidShippingContainerLabelType");
        }

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>printLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Print the label
    /// </summary>
    /// <param name = "_printerName">Name of the printer to print the label</param>
    /// <param name = "_label">Label to be printed</param>
    public abstract void printLabel(PrinterName _printerName, str _label)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>