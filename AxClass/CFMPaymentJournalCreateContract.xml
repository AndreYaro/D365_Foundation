<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentJournalCreateContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data contract for the <c>CFMJournalLineCreate</c> operation.
/// </summary>
[DataContractAttribute, SysOperationContractProcessingAttribute(classStr(CFMPaymentJournalCreateUIBuilder))]
public class CFMPaymentJournalCreateContract implements SysOperationValidatable
{
    container dataAreas;

    PaymMode paymModeCust, paymModeVend;
    NoYes proposeSeparatePaymentPerCompanyVend, proposeSeparatePaymentPerCompanyCust;
    DirPartyNumber dirPartyNumber;

    CFMJournalTable journalTable;

    str packedQuery;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        dataAreas,
        paymModeCust,
        paymModeVend,
        proposeSeparatePaymentPerCompanyVend,
        proposeSeparatePaymentPerCompanyCust,
        dirPartyNumber
    #endmacro


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    public Query getQuery()
    {
        return new Query(SysOperationHelper::base64Decode(packedQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDataAreas</Name>
				<Source><![CDATA[
    [DataMemberAttribute, SysOperationDisplayOrderAttribute('1')]
    public container parmDataAreas(container _dataAreas = dataAreas)
    {
        dataAreas = _dataAreas;

        return dataAreas;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalTable</Name>
				<Source><![CDATA[
    [DataMemberAttribute, SysOperationControlVisibilityAttribute(false)]
    public CFMJournalTable parmJournalTable(CFMJournalTable _journalTable = journalTable)
    {
        journalTable = _journalTable;

        return journalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPartyNumber</Name>
				<Source><![CDATA[
    [DataMemberAttribute, SysOperationDisplayOrderAttribute('2')]
    public DirPartyNumber parmPartyNumber(DirPartyNumber _dirPartyNumber = dirPartyNumber)
    {
        dirPartyNumber = _dirPartyNumber;

        return dirPartyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymModeCust</Name>
				<Source><![CDATA[
    [DataMemberAttribute, SysOperationLabelAttribute(literalStr("@SYS334754")), SysOperationDisplayOrderAttribute('4')]
    public CustPaymMode parmPaymModeCust(PaymMode _paymModeCust = paymModeCust)
    {
        paymModeCust = _paymModeCust;

        return paymModeCust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymModeVend</Name>
				<Source><![CDATA[
    [DataMemberAttribute, SysOperationLabelAttribute(literalStr("@SYS334756")), SysOperationDisplayOrderAttribute('3')]
    public VendPaymMode parmPaymModeVend(PaymMode _paymModeVend = paymModeVend)
    {
        paymModeVend = _paymModeVend;

        return paymModeVend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProposeSeparatePaymentPerCompanyCust</Name>
				<Source><![CDATA[
    [DataMemberAttribute, SysOperationDisplayOrderAttribute('6')]
    public NoYes parmProposeSeparatePaymentPerCompanyCust(NoYes _proposeSeparatePaymentPerCompanyCust = proposeSeparatePaymentPerCompanyCust)
    {
        proposeSeparatePaymentPerCompanyCust = _proposeSeparatePaymentPerCompanyCust;

        return proposeSeparatePaymentPerCompanyCust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProposeSeparatePaymentPerCompanyVend</Name>
				<Source><![CDATA[
    [DataMemberAttribute, SysOperationDisplayOrderAttribute('5')]
    public NoYes parmProposeSeparatePaymentPerCompanyVend(NoYes _proposeSeparatePaymentPerCompanyVend = proposeSeparatePaymentPerCompanyVend)
    {
        proposeSeparatePaymentPerCompanyVend = _proposeSeparatePaymentPerCompanyVend;

        return proposeSeparatePaymentPerCompanyVend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [DataMemberAttribute, AifQueryTypeAttribute('_packedQuery', queryStr(CFMPaymentRequestJourPayment))]
    public str parmQuery(str _packedQuery = packedQuery)
    {
        packedQuery = _packedQuery;
        return packedQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuery</Name>
				<Source><![CDATA[
    public void setQuery(Query _query)
    {
        packedQuery = SysOperationHelper::base64Encode(_query.pack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Version version = SysOperationHelper::getVersion(_packedClass);
        boolean ret = false;

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                ret = true;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!journalTable)
        {
            isValid = checkFailed("@Cashflowmanagement:MethodCallFromPaymSchedJournal");
        }

        if (journalTable.Posted == NoYes::No)
        {
            isValid = checkFailed("@SYS23002");
        }

        if (!con2Str(dataAreas))
        {
            isValid = checkFailed("@Cashflowmanagement:LegalEntityNotSelected");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>