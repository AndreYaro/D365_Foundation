<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CompanyHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Company helper class.
/// </summary>
class CompanyHelper
{
    InventClosing           inventClosingLast;
    Integer                 inventClosingTTSVersion;

    //Cache for last inventory closing date in secondary currency -->
    InventClosing           inventClosingLastSecCur;
    Integer                 inventClosingTTSVersionSecCur;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>onselectParameters</Name>
				<Source><![CDATA[
    //Cache for last inventory closing date in secondary currency <--

    /// <summary>
    /// Select parameters.
    /// </summary>
    [SubscribesTo(classstr(Company), delegatestr(Company, onSelectParameters))]
    public static void onselectParameters()
    {
     // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        LedgerParameters::find();
        CustParameters::find();
        VendParameters::find();
        SalesParameters::find();
        PurchParameters::find();
        InventParameters::find();
        InventPostingParameters::find();
        BOMParameters::find();
        ProdParameters::find();
        PriceParameters::find();
        DocuParameters::find();
        TaxParameters::find();
        ReqParameters::find();
        RouteParameters::find();
        CompanyInfo::find();
        IntrastatParameters::find();
        ProjParameters::find();
        WrkCtrParameters::find();
        WMSParameters::find();
        SystemParameters::find();
        BankParameters::find();
        SysUserInfo::find();
        EcoResProductParameters::find();
        // HRM Start
        HRMParameters::find();
        KMKnowledgeCollectorParameters::find();
        // HRM End
        AssetParameters::find();
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            RTax25Parameters::find();
            RTSLParameters::find();
            RAssetParameters::find();
            RDeferralsParameters::find();
            RCashParameters::find();
            EmplParameters_RU::find();
        }
        // </GEERU>
        // <GEEPL>
        PlSADParameters::find();
        // </GEEPL>
        CompanyHelper::selectParametersPost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectParametersPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Steps after selecting parameters.
    /// </summary>
    public static void selectParametersPost()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventClosingLastSecCur_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Cache for last inventory closing date in secondary currency
    /// </summary>
    /// <param name = "reSelect">
    /// True to re select; Otherwise, false.
    /// </param>
    /// <returns>
    /// InventClosing record.
    /// </returns>
    public InventClosing inventClosingLastSecCur_RU(boolean reSelect = false)
    {
        if (inventClosingTtsVersionSecCur != appl.ttsVersion() || reSelect || (!inventClosingTtsVersionSecCur && !inventClosingLastSecCur))
        {
            inventClosingLastsecCur        = InventClosing::inventClosingLast(InventAdjustmentType::Closing,InventTransCurrency_RU::SecondaryCur);
            inventClosingTtsVersionSecCur  = appl.ttsVersion();
        }

        return inventClosingLastSecCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>testCreateParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create parameters.
    /// </summary>
    /// <param name = "parameter">
    /// Parameter type to create.
    /// </param>
    /// <param name = "param">
    /// Initialize paramerter value.
    /// </param>
    /// <param name = "isParameterCreated">
    /// Event handler.
    /// </param>
    [SubscribesTo(classstr(Company), delegatestr(Company, testCreateParameterDelegate))]
    public static void testCreateParameter(Common parameter, anytype param, EventHandlerResult isParameterInitialized)
    {
        if (parameter is AdvanceAdjustmentParameters_W)
        {
            AdvanceAdjustmentParameters_W aapw = parameter as AdvanceAdjustmentParameters_W;
            aapw.InitValue(param);
            isParameterInitialized.result(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventClosingTTSVersionSecCur</Name>
				<Source><![CDATA[
    public Integer parmInventClosingTTSVersionSecCur()
    {
        return inventClosingTTSVersionSecCur;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>