<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxInvoiceSerialNumberGeneratorContextSalesParmTable_ID</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
/// <summary>
/// The <c>TaxInvoiceSerialNumberGeneratorContextSalesParmTable_ID</c> class is an implementation of the
/// <c>TaxInvoiceSerialNumberGeneratorContextInterface_ID</c> interface to support
/// generate tax invoice serial number for a Sales orders.
/// </summary>
[ExportMetadata(classStr(TaxInvoiceSerialNumberGeneratorContextInterface_ID), tableStr(SalesParmTable))]
[Export(identifierstr(Dynamics.AX.Application.TaxInvoiceSerialNumberGeneratorContextInterface_ID))]
internal class TaxInvoiceSerialNumberGeneratorContextSalesParmTable_ID implements TaxInvoiceSerialNumberGeneratorContextInterface_ID,
    TaxInvoiceSerialNumberGeneratorContextApplicabilityInterface_ID,
    TaxInvoiceSerialNumberGeneratorContextEInvoiceInterface_ID
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNumberSequenceGroup</Name>
				<Source><![CDATA[
    public NumberSequenceGroupId getNumberSequenceGroup(Common _common)
    {
        SalesParmTable salesParmTable = _common as SalesParmTable;
        return salesParmTable.salesTable().NumberSequenceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRangeRefCreditInvoicingTable</Name>
				<Source><![CDATA[
    public void addRangeRefCreditInvoicingTable(Common _common, QueryBuildDataSource _qbds)
    {
        SalesParmTable salesParmTable = _common as SalesParmTable;
        str range;
        str qbdsName = _qbds.name();
        str rangeTemplate = strFmt('(%1.%2 == %3)',
            qbdsName,
            fieldStr(CustVendCreditInvoicingTable, RefRecId),
            '%1');

        SalesParmSubTable salesParmSubTable;
        SalesTable salesTable;

        while select TableId from salesParmSubTable
            where salesParmSubTable.ParmId == salesParmTable.ParmId
                && salesParmSubTable.TableRefId == salesParmTable.TableRefId
        join RecId from salesTable
            where salesTable.SalesId == salesParmSubTable.OrigSalesId
        {
            range += this.getRefRange(range, rangeTemplate, salesTable.RecId);
        }

        if (range != '')
        {
            range = strFmt('((%1.%2 == %3)&&(%4))',
                qbdsName,
                fieldStr(CustVendCreditInvoicingTable, RefTableId),
                tableNum(SalesTable),
                range);
        }
        else
        {
            range = queryValue(0);
        }

        _qbds.addRange(fieldNum(CustVendCreditInvoicingTable, RefRecId)).value(range);

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCorrectedTaxInvoiceSerialNumber</Name>
				<Source><![CDATA[
    public TaxInvoiceSerialNumber_ID getCorrectedTaxInvoiceSerialNumber(CustVendCorrectedInvoiceId _correctedInvoiceId, InvoiceDate _correctedInvoiceDate)
    {
        CustInvoiceJour custInvoiceJour;

        select firstonly custInvoiceJour
            where custInvoiceJour.InvoiceId == _correctedInvoiceId
                && custInvoiceJour.InvoiceDate == _correctedInvoiceDate;

        return custInvoiceJour.TaxInvoiceSalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRefRange</Name>
				<Source><![CDATA[
    private str getRefRange(str _range, str _template, RefRecId _recId)
    {
        return (_range != '' ? '||' : '') + strFmt(_template, _recId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentCountryRegion</Name>
				<Source><![CDATA[
    [SysObsolete('This method should not to be used any more.', true, 24\09\2021)]
    public LogisticsAddressCountryRegionId getDocumentCountryRegion(Common _common)
    {
        SalesParmTable salesParmTable = _common as SalesParmTable;
        return salesParmTable.salesTable().custTable_InvoiceAccount().postalAddress().CountryRegionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isApplicable</Name>
				<Source><![CDATA[
    public boolean isApplicable(Common _common)
    {
        SalesParmTable salesParmTable = _common as SalesParmTable;
        return salesParmTable.ProjId == '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>eInvoice</Name>
				<Source><![CDATA[
    public NoYes eInvoice(Common _common)
    {
        SalesParmTable salesParmTable = _common as SalesParmTable;
        return CustTable::find(salesParmTable.InvoiceAccount).EInvoice;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>