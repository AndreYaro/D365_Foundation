<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostStatementFlowsViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostStatementFlowsViewModel</c> class is a view model for cost flow charts embedded on the cost statement form.
/// </summary>
class CostStatementFlowsViewModel
{
    FormDateControl fromDateControl,
                    toDateControl;

    FormPartControl costWIPFlowChart,
                    costInventoryFlowChart;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates controls.
    /// </summary>
    public void update()
    {
        this.notifyChartsWithNewPeriod(null, null);
    }

]]></Source>
			</Method>
			<Method>
				<Name>notifyChartsWithNewPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler triggered when date controls have changed
    /// </summary>
    /// <param name = "_sender">
    /// The <c>FormControl</c> that triggered the event.
    /// </param>
    /// <param name = "_eventArgs">
    /// The <c>FormControlEventArgs</c> class instance.
    /// </param>
    public void notifyChartsWithNewPeriod(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        CostISetPeriod chartToBeNotified;

        if (CostInventoryFlowChart.visible())
        {
            chartToBeNotified = costInventoryFlowChart.getPartFormRun() as CostISetPeriod;
        }
        else if (costWIPFlowChart.visible())
        {
            chartToBeNotified = costWIPFlowChart.getPartFormRun() as CostISetPeriod;
        }

        if (chartToBeNotified)
        {
            var period = CostSelectPeriodState::construct();
            period.parmFromDate(fromDateControl.dateValue());
            period.parmToDate(toDateControl.dateValue());

            chartToBeNotified.setPeriod(period);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDateControl</Name>
				<Source><![CDATA[
    public FormDateControl parmFromDateControl(FormDateControl _fromDateControl = fromDateControl)
    {
        fromDateControl = _fromDateControl;
        return fromDateControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDateControl</Name>
				<Source><![CDATA[
    public FormDateControl parmToDateControl(FormDateControl _toDateControl = toDateControl)
    {
        toDateControl = _toDateControl;
        return toDateControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostInventoryFlowChart</Name>
				<Source><![CDATA[
    public FormPartControl parmCostInventoryFlowChart(FormPartControl _costInventoryFlowChart = costInventoryFlowChart)
    {
        costInventoryFlowChart = _costInventoryFlowChart;
        return costInventoryFlowChart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostWIPFlowChart</Name>
				<Source><![CDATA[
    public FormPartControl parmCostWIPFlowChart(FormPartControl _costWIPFlowChart = costWIPFlowChart)
    {
        costWIPFlowChart = _costWIPFlowChart;
        return costWIPFlowChart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs new instance of the <c>CostStatementFlowsViewModel</c> class.
    /// </summary>
    /// <param name = "_fromDateControl">
    /// The date control containing the from date.
    /// </param>
    /// <param name = "_toDateControl">
    /// The date control containing the to date.
    /// </param>
    /// <param name = "_costInventoryFlowChart">
    /// The cost inventory flow chart form part.
    /// </param>
    /// <param name = "_costWIPFlowChart">
    /// The cost WIP flow chart form part.
    /// </param>
    /// <returns>
    /// The <c>CostStatementFlowsViewModel</c> class instance.
    /// </returns>
    public static CostStatementFlowsViewModel newFromParameters(FormDateControl _fromDateControl,
                                                                FormDateControl _toDateControl,
                                                                FormPartControl _costInventoryFlowChart,
                                                                FormPartControl _costWIPFlowChart)
    {
        var viewModel = new CostStatementFlowsViewModel();
        viewModel.parmFromDateControl(_fromDateControl);
        viewModel.parmToDateControl(_toDateControl);
        viewModel.parmCostInventoryFlowChart(_costInventoryFlowChart);
        viewModel.parmCostWIPFlowChart(_costWIPFlowChart);
        return viewModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>