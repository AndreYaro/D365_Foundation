<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUseDimOfInventSumForPublicQueryToggle</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class InventUseDimOfInventSumForPublicQueryToggle implements WHSIFeatureToggle
{
    static private InventUseDimOfInventSumForPublicQueryToggle singleton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabled()
    {
        return this.enabled() && InventUseDimOfInventSumToggle::instance().isEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabled</Name>
				<Source><![CDATA[
    private boolean enabled()
    {
        const int MaxLengthOfFlightNameInCarbon = 64;
        SysFlightName flightName = classId2Name(classIdGet(this));
        SysFlightName carbonFlightName = subStr(flightName, 1, MaxLengthOfFlightNameInCarbon);
        
        if (flightName == carbonFlightName)
        {
            return !isFlightEnabled(flightName);
        }
        return !isFlightEnabled(flightName) && !isFlightEnabled(carbonFlightName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    static public InventUseDimOfInventSumForPublicQueryToggle instance()
    {
        if (!singleton)
        {
            singleton = new InventUseDimOfInventSumForPublicQueryToggle();
        }
        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearInstance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    static public void clearInstance()
    {
        singleton = null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>