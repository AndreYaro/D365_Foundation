<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRPickedButNotDeliveredController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>MCRPickedButNotDeliveredController</c> class is used for associated reports.
/// </summary>
/// <remarks>
///    This class contains methods which support the <c>MCRPickedButNotDeliveredReport</c> reports when it is
///    invoked from the <c>MCRPickedNotDelivered</c> menu item.
/// </remarks>
class MCRPickedButNotDeliveredController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static MCRPickedButNotDeliveredController construct()
    {
        return new MCRPickedButNotDeliveredController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@MCR24915";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        MCRPickedButNotDeliveredController    mcrPickedButNotDeliveredController;

        mcrPickedButNotDeliveredController = MCRPickedButNotDeliveredController::newFromArgs(_args);
        mcrPickedButNotDeliveredController.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a new instance of the <c>MCRPickedButNotDeliveredController</c> class.
    /// </summary>
    /// <param name="_args">
    ///    The arguments that are used to initialize the class.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>MCRPickedButNotDeliveredController</c> class.
    /// </returns>
    public static MCRPickedButNotDeliveredController newFromArgs(Args _args)
    {
        MCRPickedButNotDeliveredController    mcrPickedButNotDeliveredController;

        if (!_args)
        {
            throw error(strFmt("@SYS22828", funcName()));
        }

        mcrPickedButNotDeliveredController = MCRPickedButNotDeliveredController::construct();
        mcrPickedButNotDeliveredController.parmReportName(ssrsReportStr(MCRPickedButNotDeliveredReport, ReportDesign));
                
        mcrPickedButNotDeliveredController.parmArgs(_args);

        return mcrPickedButNotDeliveredController;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>