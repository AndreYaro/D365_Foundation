<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InfAdjReverse_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InfAdjReverse_MX</c> class handles the dialog of the inflation adjustment reversal process.
/// </summary>
class InfAdjReverse_MX extends RunBase
{
    Dialog                      dialog;
    DialogField                 dialogPostingDate;

    TransDate                   postingDate;
    CurrentOperationsTax        postingLayer;
    Voucher                     voucher;

    InflationAdjJournal_MX      inflationAdjJournalTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    /// in the Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        dialog = super();

        dialog.caption("@SYS313939");

        dialog.addGroup("@SYS28007");
        dialogPostingDate  = dialog.addFieldValue(extendedtypestr(TransDate), postingDate, "@SYS14475","@SYS312354");
        dialogPostingDate.allowEdit(false);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieve the values from the dialog.
    /// </summary>
    /// <returns>
    ///     Success or failure based on the values retrieved from the dialog.
    /// </returns>
    public boolean getFromDialog()
    {
        postingDate  = dialogPostingDate.value();

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInflationAdjJournal</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the <paramref name="inflationAdjJournalTable" /> parameter.
    /// </summary>
    /// <param name="_inflationAdjJournal">
    ///     The value to set; optional.
    /// </param>
    /// <returns>
    ///     The value of the <paramref name="inflationAdjJournalTable" /> parameter.
    /// </returns>
    InflationAdjJournal_MX parmInflationAdjJournal(InflationAdjJournal_MX _inflationAdjJournal = inflationAdjJournalTable)
    {
        inflationAdjJournalTable = _inflationAdjJournal;
        return inflationAdjJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the <paramref name="postingDate" /> parameter.
    /// </summary>
    /// <param name="_postingDate">
    ///     The value to set; optional.
    /// </param>
    /// <returns>
    ///     The value of the <paramref name="postingDate" /> parameter.
    /// </returns>
    TransDate parmPostDate(TransDate _postingDate = postingDate)
    {
        postingDate = _postingDate;
        return postingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Posts the voucher for the inflation adjustment reversal process.
    /// </summary>
    public void run()
    {
        TransactionReversal_Ledger_InfAdj_MX transReversal_InfAdj = TransactionReversal_Ledger_InfAdj_MX::construct();
        MenuFunction                         menuFunction;
        Args                                 args;

        super();

        menuFunction = new MenuFunction(menuitemactionstr(TransactionReversal_Ledger_InfAdj_MX), MenuItemType::Action);
        args = new Args();
        args.record(inflationAdjJournalTable);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Main method to execute the inflation adjustment reversal process.
    /// </summary>
    /// <param name="args">
    ///     The current record from which the process is called.
    /// </param>
    public static void main(Args args)
    {
        InfAdjReverse_MX   inflationAdj;

        if (!args.caller())
        {
            throw error(strfmt("@SYS22828", funcname()));
        }

        inflationAdj = InfAdjReverse_MX::newInfAdjReverse(args.record());

        if (inflationAdj.prompt())
        {
            inflationAdj.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInfAdjReverse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>InflationAdjustmentJournal_MX</c> class.
    /// </summary>
    /// <param name="_inflationAdjJournal">
    /// An <c>InflationAdjJournal_MX</c> table buffer.
    /// </param>
    /// <returns>
    /// A new instance of the <c>InflationAdjustmentJournal_MX</c> class that contains the necessary values
    /// that are available in global variables.
    /// </returns>
    static InfAdjReverse_MX newInfAdjReverse(InflationAdjJournal_MX _inflationAdjJournal)
    {
        InfAdjReverse_MX   infAdjReverse = new InfAdjReverse_MX();

        infAdjReverse.parmPostDate(_inflationAdjJournal.TransDate);
        infAdjReverse.parmInflationAdjJournal(_inflationAdjJournal);

        return infAdjReverse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>