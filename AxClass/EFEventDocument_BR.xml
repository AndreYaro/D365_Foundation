<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFEventDocument_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Encapsulates the necessary records for electronic event document processes.
/// </summary>
public class EFEventDocument_BR
{
    EFDocument_BR           efDocument;
    FiscalDocument_BR       fiscalDocument;
    EFDocSchemaType_BR      eventType;
    FiscalEstablishment_BR  fiscalEstablishment;
    LogisticsPostalAddress  fiscalEstablishmentPostalAddress;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accessKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the access key for this NF-e.
    /// </summary>
    /// <returns>The access key.</returns>
    public final EFDocAccessKey_BR accessKey()
    {
        return fiscalDocument.AccessKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>digitalCertificateSubject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the digital certificate subject that should be used to sign this document.
    /// </summary>
    /// <returns><c>DigitalCertificateSubject</c> that should be used to retrieve the certificate.</returns>
    public DigitalCertificateSubject digitalCertificateSubject()
    {
        return fiscalEstablishment.EFDocDigitalCertificateSubject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>keyVaultCertificateRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the reference to information about the certificate in KeyVault that should be used to sign this document.
    /// </summary>
    /// <returns><c>KeyVaultCertificateRef</c> that should be used to retrieve the certificate.</returns>
    public KeyVaultCertificateRef keyVaultCertificateRef()
    {
        return fiscalEstablishment.EFDocKeyVaultCertificateRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>efDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>EFDocument_BR</c> record for this NF-e process.
    /// </summary>
    /// <returns>The current <c>EFDocument_BR</c> record.</returns>
    public EFDocument_BR efDocument()
    {
        return efDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the document number of this NF-e.
    /// </summary>
    /// <returns>The document number.</returns>
    public FiscalDocumentNumber_BR fiscalDocumentNumber()
    {
        return fiscalDocument.FiscalDocumentNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalEstablishment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>FiscalEstablishment_BR</c> record related to this document.
    /// </summary>
    /// <returns><c>FiscalEstablishment_BR</c> record used by this mapping.</returns>
    public FiscalEstablishment_BR fiscalEstablishment()
    {
        return fiscalEstablishment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>issuerCNPJ</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the CNPJ of the document issuer.
    /// </summary>
    /// <returns>CNPJ number of the document issuer.</returns>
    public CNPJCPFNum_BR issuerCNPJ()
    {
        return fiscalDocument.FiscalEstablishmentCNPJCPF;
    }

]]></Source>
			</Method>
			<Method>
				<Name>issuerCPF</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the CPF of the document issuer.
    /// </summary>
    /// <returns>CPF number of the document issuer; null if the issuer is a company.</returns>
    public CNPJCPFNum_BR issuerCPF()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>issuerIBGECode</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the IBGE code of the fiscal establishment's address.
    /// </summary>
    /// <returns>
    ///     IBGE code of the fiscal establishment's address.
    /// </returns>
    public CityIBGECode_BR issuerIBGECode()
    {
        return LogisticsAddressCity::findLogisticsAddressMap(fiscalEstablishmentPostalAddress).IBGECode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>model</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the document model of this NF-e.
    /// </summary>
    /// <returns>The document model.</returns>
    [Hookable(false)]
    internal FiscalDocumentModel_BR model()
    {
        return fiscalDocument.Model;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>EFEventDocument_BR</c> class
    /// </summary>
    /// <param name="_fiscalDocument">
    /// A record of <c>FiscalDocument_BR</c> table
    /// </param>
    public void new(FiscalDocument_BR   _fiscalDocument)
    {
        fiscalDocument                      = _fiscalDocument;
        fiscalEstablishment                 = FiscalEstablishment_BR::findById(fiscalDocument.FiscalEstablishment);
        fiscalEstablishmentPostalAddress    = LogisticsPostalAddress::findRecId(_fiscalDocument.FiscalEstablishmentPostalAddress);
        efDocument                          = EFDocument_BR::findByRef(_fiscalDocument.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEventType</Name>
				<Source><![CDATA[
    public EFDocSchemaType_BR parmEventType(EFDocSchemaType_BR _eventType = eventType)
    {
        eventType = _eventType;

        return eventType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructCancel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>EFEventDocument_BR</c> class
    /// </summary>
    /// <param name="_fiscalDocument">
    /// The <c>FiscalDocument_BR</c> record that is being processed
    /// </param>
    /// <returns>
    /// The new <c>EFEventDocument_BR</c>
    /// </returns>
    public static EFEventDocument_BR constructCancel(FiscalDocument_BR _fiscalDocument)
    {
        return new EFEventDocument_Cancel_BR(_fiscalDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructCancelBySubstitution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>EFEventDocument_BR</c> class.
    /// </summary>
    /// <param name="_fiscalDocument">
    /// The <c>FiscalDocument_BR</c> record that is being processed.
    /// </param>
    /// <returns>
    /// The new <c>EFEventDocument_BR</c>.
    /// </returns>
    [Hookable(false)]
    internal static EFEventDocument_BR constructCancelBySubstitution(FiscalDocument_BR _fiscalDocument)
    {
        return EFEventDocument_CancelBySubstitution_BR::construct(_fiscalDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructCorrectionLetter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>EFEventDocument_BR</c> class
    /// </summary>
    /// <param name="_correctionLetter">
    /// The <c>EFDocCorrectionLetter_BR</c> record that is being processed
    /// </param>
    /// <returns>
    /// The new <c>EFEventDocument_BR</c>
    /// </returns>
    public static EFEventDocument_BR constructCorrectionLetter(EFDocCorrectionLetter_BR _correctionLetter)
    {
        return new EFEventDocument_CorrectionLetter_BR(_correctionLetter);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>