<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccountingDistributionOrderSummaryCalc</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AccountingDistributionOrderSummaryCalc</c> class calculates the encumbered, relieved, and
///    remaining amounts for a purchase order.
/// </summary>
class AccountingDistributionOrderSummaryCalc
{
    AccountingDistributionTmpPurchSummary   accountingDistributionTmpPurchSummary;
    Amount                                  totalEncumbered;
    Amount                                  totalRelieved;
    Amount                                  totalRemaining;
    SourceDocumentType                      sourceDocumentType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAccountingDistTmpPurchSummary</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AccountingDistributionTmpPurchSummary parmAccountingDistTmpPurchSummary(AccountingDistributionTmpPurchSummary _accountingDistributionTmpPurchSummary = accountingDistributionTmpPurchSummary)
    {
        accountingDistributionTmpPurchSummary =  _accountingDistributionTmpPurchSummary;
        return accountingDistributionTmpPurchSummary;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmTotalEncumbered</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Amount parmTotalEncumbered(Amount _totalEncumbered = totalEncumbered)
    {
        totalEncumbered =  _totalEncumbered;
        return totalEncumbered;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmTotalRelieved</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Amount parmTotalRelieved(Amount _totalRelieved = totalRelieved)
    {
        totalRelieved =  _totalRelieved;
        return totalRelieved;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmTotalRemaining</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Amount parmTotalRemaining(Amount _totalRemaining = totalRemaining)
    {
        totalRemaining =  _totalRemaining;
        return totalRemaining;
    }
]]></Source>
			</Method>
			<Method>
				<Name>populateEncumbranceSummaryAmount</Name>
				<Source><![CDATA[
/// <summary>
    ///    Calculates the encumbered, relieved, and remaining amounts for a purchase order.
    /// </summary>
    /// <param name="_purchId">
    ///    The purchase order ID for which to calculate the amounts.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void populateEncumbranceSummaryAmount(PurchId _purchId)
    {
        AccDistTmpPurchSummaryLedgerDimVisitor  ledgerDimensionVisitor;
        SourceDocumentBalanceProvider           balanceProvider;

        if (_purchId)
        {
            ledgerDimensionVisitor = AccDistTmpPurchSummaryLedgerDimVisitor::newFromParameters(accountingDistributionTmpPurchSummary, _purchId);
            balanceProvider = SourceDocumentBalanceProvider::newFromSourceDocumentImplementation(PurchTable::find(_purchId));

            balanceProvider.initializeBalance(ledgerDimensionVisitor);

            VendInvoiceInfoLine vendInvoiceInfoLine;

            if (isConfigurationkeyEnabled(configurationKeyNum(Project)) &&
                FeatureStateProvider::isFeatureEnabled(ProjReleaseVendorRetentionSeperatelyForEncumbranceFlight::instance()))
            {
                ProjOpsManagementLogger logger = ProjOpsManagementLogger::createLogger(classStr(AccountingDistributionOrderSummaryCalc));

                using (var activityContext = logger.projOpsManagementActivity().projReleaseVendorRetentionContext())
                {
                    PurchLine purchLine;

                    //Don't include the retention amount while calculating the Remaining Amount for a purchase order if it contains an invoice with only retention amount.
                    select firstonly RecId, PSAReleaseAmount from vendInvoiceInfoLine
                        where vendInvoiceInfoLine.OrigPurchId == _purchId
                            && vendInvoiceInfoLine.PSAReleasePercent == 100
                            && vendInvoiceInfoLine.PSAReleaseAmount != 0
                            && vendInvoiceInfoLine.LineAmount == 0
                        join RecId, PurchId, ProjId from purchLine
                            where purchLine.RecId == vendInvoiceInfoLine.PurchLineRecId
                                && purchLine.PurchId == _purchId
                                && purchLine.ProjId != ''
                                && purchLine.PSARetainScheduleId != '';

                    logger.logInformation(strFmt('PurchId: %1, ProjId: %2, VendInvoiceInfoLine: %3, PSAReleaseAmount: %4',
                        purchLine.PurchId, purchLine.ProjId, vendInvoiceInfoLine.RecId, vendInvoiceInfoLine.PSAReleaseAmount));
                }
            }

            if (vendInvoiceInfoLine.RecId)
            {
                totalRemaining = balanceProvider.parmTotalDistributed() - balanceProvider.parmTotalRelieved();

                //Update the Remaining amount field with totalRemaining in AccountingDistributionTmpPurchSummary for selected purchase order.
                ttsbegin;
                update_recordset accountingDistributionTmpPurchSummary
                    setting RemainingAmount = totalRemaining
                        where accountingDistributionTmpPurchSummary.PurchIdBase == _purchId;
                ttscommit;
            }
            else
            {
                totalRemaining = balanceProvider.parmTotalBalance();
            }

            totalEncumbered = balanceProvider.parmTotalEncumbered();
            totalRelieved   = balanceProvider.parmTotalRelieved();
        }
        else
        {
            totalRemaining  = 0.00;
            totalEncumbered = 0.00;
            totalRelieved   = 0.00;
        }
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>