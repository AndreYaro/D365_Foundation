<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmmCampaign2Proj</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SmmCampaign2Proj
{
    smmCampaignTable            smmCampaignTable;
    ProjId                      projId;
    ProjType                    projType;
    smmProjectNewExisting       smmProjectNewExisting;
    Object                      callerFormNewExistingForm;
    Object                      callerFormCampaignForm;
    ProjTable                   projTable;
    CustAccount                 custAccount;
    ProjGroupId                 projGroupId;
    ProjName                    projName;
    smmProjCreateInvoiceProj    smmProjCreateInvoiceProj;
    ProjInvoiceProjId           projInvoiceProjId;
    ProjId                      parentProj;
    NumberSequenceFormat        numberSequenceMask;
    ProjLinePropertyId          projInvoiceStatusId;
    boolean                     transferDocuments;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>campaignConvertToProjectObject</Name>
				<Source><![CDATA[
    public boolean campaignConvertToProjectObject(smmCampaign2ProjArgs smmCampaign2ProjArgs, Object _callerFormNewExistingForm)
    {
        smmCampaignTable            = smmCampaign2ProjArgs.smmCampaignTable();
        projId                      = smmCampaign2ProjArgs.projId();
        projTable                   = ProjTable::find(projId);
        smmProjectNewExisting       = smmCampaign2ProjArgs.smmProjectNewExisting();
        callerFormCampaignForm      = smmCampaign2ProjArgs.callerFormCampaignForm();
        callerFormNewExistingForm   = _callerFormNewExistingForm;
        projType                    = smmCampaign2ProjArgs.projType();
        projGroupId                 = smmCampaign2ProjArgs.projGroupId();
        transferDocuments           = smmCampaign2ProjArgs.transferDocuments();
        projName                    = smmCampaign2ProjArgs.projName();
        smmProjCreateInvoiceProj    = smmCampaign2ProjArgs.smmProjCreateInvoiceProj();
        projInvoiceProjId           = smmCampaign2ProjArgs.projInvoiceProjId();
        parentProj                  = smmCampaign2ProjArgs.parentProject();
        numberSequenceMask          = smmCampaign2ProjArgs.numberSequenceMask();
        projInvoiceStatusId         = smmCampaign2ProjArgs.projInvoiceStatusId();
        custAccount                 = smmCampaign2ProjArgs.custAccount();

        if (!this.createNewProjects())
        {
            return false;
        }

        // Transfer documents
        if (!this.documentsTransfer())
        {
            return false;
        }

        // Attach campaign to project
        ttsbegin;

        smmCampaignTable.selectForUpdate(true);
        smmCampaignTable.ProjId = projId;
        smmCampaignTable.update();

        ttscommit;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewProjects</Name>
				<Source><![CDATA[
    private boolean createNewProjects()
    {
        if (smmProjectNewExisting == smmProjectNewExisting::NewProject)
        {
            projTable = smmProjectCreate::createProjectGroup(projType,
                                                             projGroupId,
                                                             projName,
                                                             smmProjCreateInvoiceProj,
                                                             projInvoiceProjId,
                                                             parentProj,
                                                             custAccount,
                                                             numberSequenceMask,
                                                             projInvoiceStatusId);

            projId = projTable.ProjId;

            if (!projTable)
            {
                return false;
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentsTransfer</Name>
				<Source><![CDATA[
    private boolean documentsTransfer()
    {
        DocuRef docuRefQuot;
        DocuRef docuRefProj = null;

        if (!transferDocuments)
        {
            return true;
        }

        if (projTable && smmCampaignTable)
        {
            while select docuRefQuot
                where docuRefQuot.RefCompanyId == curext()                   &&
                      docuRefQuot.RefTableId   == tablenum(smmCampaignTable) &&
                      docuRefQuot.RefRecId     == smmCampaignTable.RecId
            {
                // Create another reference to the same document
                docuRefProj.initValue();
                docuRefProj.ValueRecId      = docuRefQuot.ValueRecId;
                docuRefProj.Name            = docuRefQuot.Name;
                docuRefProj.TypeId          = docuRefQuot.TypeId;
                docuRefProj.Notes           = docuRefQuot.Notes;
                docuRefProj.RefCompanyId    = docuRefQuot.RefCompanyId;
                docuRefProj.Restriction     = docuRefQuot.Restriction;
                docuRefProj.ContactPersonId = docuRefQuot.ContactPersonId;
                docuRefProj.Party           = docuRefQuot.Party;
                docuRefProj.Author          = docuRefQuot.Author;
                docuRefProj.SmmEMailEntryID = docuRefQuot.SmmEMailEntryID;
                docuRefProj.SmmEMailStoreID = docuRefQuot.SmmEMailStoreID;
                docuRefProj.RefTableId      = tablenum(ProjTable);
                docuRefProj.RefRecId        = projTable.RecId;
                docuRefProj.insert();
            }

            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>campaignConvertToProject</Name>
				<Source><![CDATA[
    public static boolean campaignConvertToProject(smmCampaign2ProjArgs _smmCampaign2ProjArgs, Object _callerFormNewExistingForm)
    {
        smmCampaign2Proj smmCampaign2Proj = new smmCampaign2Proj();

        return smmCampaign2Proj.campaignConvertToProjectObject(_smmCampaign2ProjArgs, _callerFormNewExistingForm);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>