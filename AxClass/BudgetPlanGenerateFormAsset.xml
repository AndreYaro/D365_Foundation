<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanGenerateFormAsset</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanGenerateFormAsset</c> class supports the business logic of the <c>BudgetPlanGenerate</c> form.
/// </summary>
public class BudgetPlanGenerateFormAsset extends BudgetPlanGenerateForm
{
    FormDateControl  sourceAssetFromDate;
    FormDateControl  sourceAssetToDate;
    FormGroupControl sourceAssetGroup;
    FormGroupControl budgetPlanTransferTotalGroup;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkTargetBudgetPlanScenario</Name>
				<Source><![CDATA[
    private boolean checkTargetBudgetPlanScenario()
    {
        BudgetPlanScenario  budgetPlanScenario = BudgetPlanScenario::findByLocalizedName(targetBudgetPlanScenario.text());
        boolean             isValid = true;

        if (budgetPlanScenario.UnitOfMeasureClass != UnitOfMeasureClass::Monetary)
        {
            isValid = checkFailed(strFmt("@SYS316757", "@GLS150049"));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControlSet</Name>
				<Source><![CDATA[
    protected void initControlSet()
    {
        super();

        controlSet.add(formControlStr(BudgetPlanGenerate, SourceAssetFromDate));
        controlSet.add(formControlStr(BudgetPlanGenerate, SourceAssetToDate));
        controlSet.add(formControlStr(BudgetPlanGenerate, SourceAssetGroup));
        controlSet.add(formControlStr(BudgetPlanGenerate, SourceBudgetPlanTransferTotalGroup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTargetBudgetPlanScenario</Name>
				<Source><![CDATA[
    public void lookupTargetBudgetPlanScenario()
    {
        boolean                     useFirstBudgetPlanningStage = (budgetPlanTransferTypeControl.selection() == BudgetPlanGenerateType::NewBudgetPlan);
        BudgetPlanningStageRecId    budgetPlanningStageRecId;

        BudgetPlanFormHelper::validateLookupControlFilledIn(targetBudgetPlanningProcess);
        BudgetPlanFormHelper::validateLookupControlFilledIn(targetResponsibilityCenter);

        if (!useFirstBudgetPlanningStage)
        {
            BudgetPlanFormHelper::validateLookupControlFilledIn(targetBudgetPlanningDocumentNumber);

            // If not using the first stage, then get the current stage
            budgetPlanningStageRecId = this.getBudgetPlanningStageRecId();
        }

        BudgetPlanLookupHelper::lookupBudgetPlanScenario(
            targetBudgetPlanScenario,
            targetBudgetPlanningProcess.value(),
            0,
            targetResponsibilityCenter.value(),
            NoYes::No,
            useFirstBudgetPlanningStage,
            budgetPlanningStageRecId,
            UnitOfMeasureClass::Undefined,
            UnitOfMeasureClass::Quantity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveControlValue</Name>
				<Source><![CDATA[
    public void saveControlValue(FormControl _formControl)
    {
        BudgetPlanGenerateContractAsset budgetPlanGenerateContractAsset = budgetPlanGenerateContract as BudgetPlanGenerateContractAsset;

        super(_formControl);

        switch (_formControl.name())
        {
            case formControlStr(BudgetPlanGenerate, SourceAssetFromDate) :
                budgetPlanGenerateContractAsset.parmSourceFromDate(sourceAssetFromDate.dateValue());
                break;

            case formControlStr(BudgetPlanGenerate, SourceAssetToDate) :
                budgetPlanGenerateContractAsset.parmSourceToDate(sourceAssetToDate.dateValue());
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlValue</Name>
				<Source><![CDATA[
    public void setControlValue(FormControl _formControl)
    {
        BudgetPlanGenerateContractAsset budgetPlanGenerateContractAsset = budgetPlanGenerateContract as BudgetPlanGenerateContractAsset;

        super(_formControl);

        switch (_formControl.name())
        {
            case formControlStr(BudgetPlanGenerate, SourceAssetFromDate) :
                sourceAssetFromDate.dateValue(budgetPlanGenerateContractAsset.parmSourceFromDate());
                break;

            case formControlStr(BudgetPlanGenerate, SourceAssetToDate) :
                sourceAssetToDate.dateValue(budgetPlanGenerateContractAsset.parmSourceToDate());
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormControl</Name>
				<Source><![CDATA[
    protected void setFormControl(FormControl _formControl)
    {
        super(_formControl);

        switch (_formControl.name())
        {
            case formControlStr(BudgetPlanGenerate, SourceAssetFromDate) :
                sourceAssetFromDate = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, SourceAssetToDate) :
                sourceAssetToDate = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, SourceAssetGroup) :
                sourceAssetGroup = _formControl;
                break;

            case formControlStr(BudgetPlanGenerate, SourceBudgetPlanTransferTotalGroup) :
                budgetPlanTransferTotalGroup = _formControl;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInstructionText</Name>
				<Source><![CDATA[
    protected void setInstructionText()
    {
        instruction.text("@SYS4020046");
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMandatoryControls</Name>
				<Source><![CDATA[
    protected void setMandatoryControls()
    {
        sourceAssetFromDate.mandatory(true);
        sourceAssetToDate.mandatory(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleControls</Name>
				<Source><![CDATA[
    protected void setVisibleControls()
    {
        super();

        sourceAssetGroup.visible(true);
        budgetPlanTransferTotalGroup.visible(false);
        targetbudgetClass.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCanClose</Name>
				<Source><![CDATA[
    protected boolean validateCanClose()
    {
        boolean                         canClose;
        BudgetPlanGenerateContractAsset budgetPlanGenerateContractAsset;
        BudgetCycle                     budgetCycle;
        StartDate                       budgetCycleStartDate;
        EndDate                         budgetCycleEndDate;

        canClose = super();

        budgetPlanGenerateContractAsset = this.parmBudgetPlanGenerateContract() as BudgetPlanGenerateContractAsset;

        if (!budgetPlanGenerateContractAsset.parmSourceFromDate())
        {
            // From date is a required field.
            error(strFmt("@SYS84753", sourceAssetFromDate.label()));
            canClose = false;
        }
        else if (!budgetPlanGenerateContractAsset.parmSourceToDate())
        {
            // To date is a required field.
            error(strFmt("@SYS84753", sourceAssetToDate.label()));
            canClose = false;
        }
        else if (budgetPlanGenerateContractAsset.parmSourceFromDate() > budgetPlanGenerateContractAsset.parmSourceToDate())
        {
            // Start date is after the end date.
            error("@SYS4020017");
            canClose = false;
        }
        else
        {
           // Verify the from and to dates
           budgetCycle = BudgetCycle::find(BudgetPlanningProcess::find(budgetPlanGenerateContractAsset.parmTargetBudgetPlanningProcess()).BudgetCycle);
           budgetCycleStartDate = budgetCycle.getStartDate();
           budgetCycleEndDate = budgetCycle.getEndDate();

            if ((budgetPlanGenerateContractAsset.parmSourceFromDate()
                &&  budgetPlanGenerateContractAsset.parmSourceFromDate() < budgetCycleStartDate
                ||  budgetPlanGenerateContractAsset.parmSourceFromDate() > budgetCycleEndDate)
                || (budgetPlanGenerateContractAsset.parmSourceToDate()
                &&  budgetPlanGenerateContractAsset.parmSourceToDate()   < budgetCycleStartDate
                ||  budgetPlanGenerateContractAsset.parmSourceToDate()   > budgetCycleEndDate))
            {
                    error("@SYS4020028");
                    canClose = false;
            }
        }

        return canClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTargetBudgetPlanScenario</Name>
				<Source><![CDATA[
    public boolean validateTargetBudgetPlanScenario()
    {
        boolean isValid = true;

        isValid = super() && this.checkTargetBudgetPlanScenario();

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>BudgetPlanGenerateFormAsset</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>BudgetPlanGenerateFormAsset</c> class.
    /// </returns>
    public static BudgetPlanGenerateFormAsset construct()
    {
        return new BudgetPlanGenerateFormAsset();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>