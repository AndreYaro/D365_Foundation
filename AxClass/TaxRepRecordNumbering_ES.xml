<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxRepRecordNumbering_ES</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxRepRecordNumbering_ES</c> class is the base class for all Tax Report 340 numbering
///    algorithms.
/// </summary>
public abstract class TaxRepRecordNumbering_ES
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>firstNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the first record number that is generated by the algorithm.
    /// </summary>
    /// <returns>
    ///    The first record number that is generated by the algorithm
    /// </returns>
    public abstract TaxReportRecord firstNum()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextRecordNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method returns the current Tax Report 340 Line number, depending on properties of the line.
    /// </summary>
    /// <param name="_taxReportLines">
    ///    The line for which the record number is being generated.
    /// </param>
    /// <returns>
    ///    The next record number.
    /// </returns>
    public abstract TaxReportRecord getNextRecordNumber(TaxReportLines _taxReportLines)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the last record number that is generated by the algorithm.
    /// </summary>
    /// <returns>
    ///    The last record number that is generated by the algorithm
    /// </returns>
    public abstract TaxReportRecord lastNum()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Instantiates the <c>TaxRepRecordNumbering_ES</c> descendant, depending on the specified method of
    ///    numbering.
    /// </summary>
    /// <param name="_numMethod">
    ///    The method of numbering.
    /// </param>
    /// <param name="_manualFirstNumber">
    ///    The number of the first line. Used in the manual method of numbering.
    /// </param>
    /// <param name="_manualRecordNumberFormat">
    ///    The numbering format, for example, <c>Line####</c>. This is used in manual method of numbering.
    /// </param>
    /// <param name="_numberSequenceTableRecId">
    ///    The <c>RecId</c> value of the number sequence that is used for generating record numbers.
    /// </param>
    /// <returns>
    ///    The instance of an appropriate <c>TaxRepRecordNumbering_ES</c> descendant.
    /// </returns>
    public static TaxRepRecordNumbering_ES construct(
        TaxReportNumMethod      _numMethod,
        int                     _manualFirstNumber,
        NumberSequenceFormat    _manualRecordNumberFormat,
        RefRecId                _numberSequenceTableRecId)
    {
        TaxRepRecordNumbering_ES result;

        switch (_numMethod)
        {
            case TaxReportNumMethod::TaxReport340Sequence:
                result = new TaxRepRecordNumbering_340Sequence_ES();
                break;

            case TaxReportNumMethod::DocumentNumber:
                result = new TaxRepRecordNumbering_DocNum_ES();
                break;

            case TaxReportNumMethod::NumberSequence:
                result = new TaxRepRecordNumbering_NumSequence_ES(_numberSequenceTableRecId);
                break;

            case TaxReportNumMethod::Manual:
                result = new TaxRepRecordNumbering_Manual_ES(_manualFirstNumber, _manualRecordNumberFormat);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>