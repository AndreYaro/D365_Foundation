<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetPost_TaxAverageVATAdjust</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>AssetPost_TaxAverageVATAdjust_TH</c> class provides the posting of the
///     asset adjustment transaction due to the VAT ratio is changed.
/// </summary>
class AssetPost_TaxAverageVATAdjust extends AssetPost
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addAssetAdjustOffsetTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method creates offset transaction for single asset adjustment.
    /// </summary>
    public void addAssetAdjustOffsetTrans()
    {
        LedgerVoucherObject             ledgerVoucherObject;
        CurrencyExchangeHelper          exchangeRateHelper;
        LedgerDimensionDefaultAccount   ledgerDimensionDefaultAccount;
        LedgerDimensionAccount          ledgerDimensionMerged;
        LedgerVoucherTransObject        ledgerVoucherTransObject;
        LedgerPostingType               ledgerPostingType;
        TransDate                       exchangeRateDate;
        ledgerVoucherObject = ledgerVoucher.findLedgerVoucherObject();

        exchangeRateHelper  = CurrencyExchangeHelper::newExchangeDate(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId), ledgerVoucherObject.parmAccountingDate());

        ledgerDimensionDefaultAccount = AssetLedgerAccounts::assetOffsetLedgerDimension(
            assetTable.AssetId,
            assetTrans.BookId,
            assetTrans.TransType,
            assetTrans.PostingProfile);
        ledgerDimensionMerged = LedgerDimensionFacade::serviceCreateLedgerDimension(ledgerDimensionDefaultAccount, assetTrans.DefaultDimension);

        if (assetTrans.AmountCur > 0)
        {
            ledgerPostingType = LedgerPostingType::FixedAssetsCredit;
        }
        else
        {
            ledgerPostingType = LedgerPostingType::FixedAssetsDebit;
        }

        ledgerVoucherTransObject = LedgerVoucherTransObject::newBasicDefault(
            ledgerVoucherObject,
            ledgerPostingType,
            ledgerDimensionMerged,
            assetTrans.CurrencyCode,
            -assetTrans.AmountCur,
            -assetTrans.AmountMST,
            -exchangeRateHelper.calculateTransactionCurrencyToReportingCurrency(assetTrans.CurrencyCode, assetTrans.AmountCur));
        ledgerVoucherTransObject.parmSourceTableId(assetTrans.TableId);
        ledgerVoucherTransObject.parmSourceRecId(assetTrans.RecId);
        ledgerVoucherTransObject.parmReasonRefRecID(assetTrans.ReasonRefRecId);
        exchangeRateDate = AssetBook::find(assetTrans.AssetId, assetTrans.BookId).exchangeRateDate();
        if (exchangeRateDate)
        {
            ledgerVoucherTransObject.parmHistoricalExchangeRateDate(exchangeRateDate);
        }
        else
        {
            ledgerVoucherTransObject.parmHistoricalExchangeRateDate(assetTrans.TransDate);
        }
        ledgerVoucher.addTrans(ledgerVoucherTransObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxAverageVATAdjust</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method creates new <c>AssetTrans</c> for adjusting from an original <c>AssetTrans</c>.
    /// </summary>
    /// <param name="_assetTrans">
    ///     The <c>AssetTrans</c> record to create asset transactions from.
    /// </param>
    /// <param name="_transDate">
    ///     The transaction date for created asset transactions.
    /// </param>
    /// <param name="_adjustAmountCur">
    ///     The currency adjustment amount for created asset transactions.
    /// </param>
    /// <param name="_adjustAmountMST">
    ///     The accounting adjustment amount for created asset transactions.
    /// </param>
    public void initFromTaxAverageVATAdjust(
        AssetTrans      _assetTrans,
        TransDate       _transDate,
        AmountCur       _adjustAmountCur,
        AmountMST       _adjustAmountMST)
    {
        assetTrans.AssetId          = _assetTrans.AssetId;
        assetTrans.BookId           = _assetTrans.BookId;
        assetTrans.TransType        = AssetTransType::AcquisitionAdj;
        assetTrans.TransDate        = _transDate;
        assetTrans.Voucher          = ledgerVoucher.findLedgerVoucherObject().parmVoucher();

        assetTrans.Txt              = enum2str(assetTrans.TransType);
        assetTrans.CurrencyCode     = _assetTrans.CurrencyCode;

        assetTrans.AmountCur        = _adjustAmountCur;
        assetTrans.AmountMST        = _adjustAmountMST;

        if (Ledger::reportingCurrency())
        {
            CurrencyExchangeHelper currencyExchangeHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::current(), assetTrans.TransDate);
            assetTrans.ReportingCurrencyAmount = currencyExchangeHelper.calculateTransactionCurrencyToReportingCurrency(assetTrans.CurrencyCode, assetTrans.AmountCur, true);
        }

        assetTrans.DefaultDimension = _assetTrans.DefaultDimension;
        assetTrans.PostingProfile   = _assetTrans.PostingProfile;
        assetTrans.AssetGroup       = _assetTrans.AssetGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newTaxAverageVATAdjust</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method creates an instance of <c>AssetPost_TaxAverageVATAdjust_TH</c>
    ///     from an original <c>AssetTrans</c>.
    /// </summary>
    /// <param name="_ledgerVoucher">
    ///     The <c>LedgerVoucher</c> object used for posting the asset transactions to general ledger.
    /// </param>
    /// <param name="_assetTrans">
    ///     The <c>AssetTrans</c> record to create asset transactions from.
    /// </param>
    /// <param name="_transDate">
    ///     The transaction date for created asset transactions.
    /// </param>
    /// <param name="_adjustAmountCur">
    ///     The currency adjustment amount for created asset transactions.
    /// </param>
    /// <param name="_adjustAmountMST">
    ///     The accounting adjustment amount for created asset transactions.
    /// </param>
    /// <returns>
    ///     An instance of <c>AssetPost_TaxAverageVATAdjust_TH</c>
    /// </returns>
    public static AssetPost_TaxAverageVATAdjust newTaxAverageVATAdjust(
        LedgerVoucher   _ledgerVoucher,
        AssetTrans      _assetTrans,
        TransDate       _transDate,
        AmountCur       _adjustAmountCur,
        AmountMST       _adjustAmountMST)
    {
        AssetPost_TaxAverageVATAdjust    assetPost = new AssetPost_TaxAverageVATAdjust(_ledgerVoucher);

        assetPost.initFromTaxAverageVATAdjust(
            _assetTrans,
            _transDate,
            _adjustAmountCur,
            _adjustAmountMST);
        return assetPost;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>