<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTrackingBatchSummaryFilter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventTrackingBatchSummaryFilter</c> class provides tracing hierarchy filtering for
///    the <see cref="InventBatch form"/> form.
/// </summary>
class InventTrackingBatchSummaryFilter extends InventTrackingTraceSummaryFilter
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyFilter</Name>
				<Source><![CDATA[
    public void applyFilter()
    {
        QueryBuildDataSource dsBatch = mainDataSource.query().dataSourceTable(tableNum(InventBatch));
        dsBatch.clearDynalinks();

        QueryBuildDataSource dsFilter = filterDataSource.query().dataSourceTable(tableNum(InventItemDimTmpFilter));
        dsFilter.clearLinks();
        dsFilter.addLink(fieldNum(InventBatch, ItemId), fieldNum(InventItemDimTmpFilter, ItemId));

        QueryBuildDataSource dsInventDim = dsFilter.addDataSource(tableNum(InventDim));
        dsInventDim.joinMode(JoinMode::ExistsJoin);
        dsInventDim.addLink(fieldNum(InventItemDimTmpFilter, InventDimId), fieldNum(InventDim, InventDimId), filterDataSource.name());
        dsInventDim.addLink(fieldNum(InventBatch, InventBatchId), fieldNum(InventDim, InventBatchId), mainDataSource.name());
    }

]]></Source>
			</Method>
			<Method>
				<Name>dataSourceInitPost</Name>
				<Source><![CDATA[
    public void dataSourceInitPost()
    {
        super();

        mainDataSource.insertIfEmpty(false);
        mainDataSource.allowCreate(false);
        mainDataSource.allowDelete(false);
        mainDataSource.allowEdit(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterTableType</Name>
				<Source><![CDATA[
    protected TableId filterTableType()
    {
        return tableNum(InventItemDimTmpFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeInFilterDTO</Name>
				<Source><![CDATA[
    protected boolean includeInFilterDTO(InventTrackingDimTracingInventTransDTO _inventTransDTO, InventTrackingDimTracingInventTransOriginDTO _inventTransOriginDTO)
    {
        return _inventTransDTO.inventDim().InventBatchId != "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertKeyDataDTO</Name>
				<Source><![CDATA[
    protected void insertKeyDataDTO(InventTrackingDimTracingInventTransDTO _inventTransDTO, InventTrackingDimTracingInventTransOriginDTO _inventTransOriginDTO)
    {
        InventItemDimTmpFilter  inventItemDimTmpFilter = filterTmp as InventItemDimTmpFilter;

        inventItemDimTmpFilter.ItemId        = _inventTransOriginDTO.itemId();
        inventItemDimTmpFilter.InventDimId   = _inventTransDTO.inventDimId();
        inventItemDimTmpFilter.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transKeyDTO</Name>
				<Source><![CDATA[
    protected str transKeyDTO(InventTrackingDimTracingInventTransDTO _inventTransDTO, InventTrackingDimTracingInventTransOriginDTO _inventTransOriginDTO)
    {
        return strFmt('%1#%2', _inventTransOriginDTO.itemId(), _inventTransDTO.inventDim().InventBatchId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static InventTrackingBatchSummaryFilter construct()
    {
        return new InventTrackingBatchSummaryFilter();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>InventTrackingBatchSummaryFilter</c> class with a given tracing hierarchy.
    /// </summary>
    /// <param name="_hierarchy">
    ///    The tracing hierarchy to use.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>InventTrackingBatchSummaryFilter</c> class.
    /// </returns>
    public static InventTrackingBatchSummaryFilter newHierarchy(
        InventTrackingDimTracingHierarchy   _hierarchy)
    {
        InventTrackingBatchSummaryFilter filter = InventTrackingBatchSummaryFilter::construct();

        filter.parmTracingHierarchy(_hierarchy);

        return filter;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
