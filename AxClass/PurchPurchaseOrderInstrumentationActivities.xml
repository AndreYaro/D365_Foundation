<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchPurchaseOrderInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchPurchaseOrderInstrumentationActivities</c> class provides activity contexts to the purchase order instrumentation logging.
/// </summary>
internal final class PurchPurchaseOrderInstrumentationActivities
{
    private const str InsertActivity = 'Insert';
    private const str UpdateActivity = 'Update';
    private const str DeleteActivity = 'Delete';
    private const str DeleteOrphanPurchLinesHistoryActivity = 'DeleteOrphanPurchLinesHistory';
    private const str UpdateDropShipStatusActivity = 'UpdateDropShipStatus';

    internal const str PurchId = 'PurchId';
    internal const str PurchTableRecId = 'PurchTableRecId';
    private const str SourceDocumentHeader = 'SourceDocumentHeader';
    internal const str SourceDocumentLine = 'SourceDocumentLine';
    internal const str InventTransId = 'InventTransId';
    internal const str HasInventTransId = 'HasInventTransId';
    internal const str HasOrigInventTransId = 'HasOrigInventTransId';
    internal const str DropInvent = "DropInvent";
    internal const str IsStocked = "IsStocked";
    internal const str PurchLineNumber = 'PurchLineNumber';
    internal const str DeletedPurchLineHistoryRecords = 'DeletedPurchLineHistoryRecords';

    internal const str FullyMatched = 'FullyMatched';
    internal const str VendPackingSourceDocumentLine = 'VendPackingSourceDocumentLine';
    internal const str VendInvoiceSourceDocumentLine = 'VendInvoiceSourceDocumentLine';
    internal const str RemainingReceiptQty = 'RemainingReceiptQty';
    internal const str VendInvoicePurchQty = 'VendInvoicePurchQty';
    internal const str VendInvoiceInventQty = 'VendInvoiceInventQty';
    internal const str VendInvoiceCWQty = 'VendInvoiceCWQty';
    private const str IsInterCompanyOrderProperty = 'IsInterCompanyOrder';
    private const str IsInterCompanyOrderChainProperty = 'IsInterCompanyOrderChain';
    private const str InterCompanyOriginProperty = 'InterCompanyOrigin';
    private const str HasUIProperty = 'HasUI';
    private const str IsIntegrationProperty = 'IsIntegration';

    private const str OldDropShipStatusProperty = 'OldDropShipStatus';
    private const str NewDropShipStatusProperty = 'NewDropShipStatus';
    private const str OldPurchStatusProperty = 'OldPurchStatus';
    private const str NewPurchStatusProperty = 'NewPurchStatus';
    private const str OldDocumentStateProperty = 'OldDocumentState';
    private const str NewDocumentStateProperty = 'NewDocumentState';

    private PurchInstrumentationLogger logger;
    private str activityName;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(PurchInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static PurchPurchaseOrderInstrumentationActivities newFromLogger(PurchInstrumentationLogger _logger)
    {
        return new PurchPurchaseOrderInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(Common _purchOrderCommon, str _activityName)
    {
        this.activityName = _activityName;
        return logger.activityContext(strFmt('%1.%2', tableId2Name(_purchOrderCommon.tableId), _activityName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext insert(Common _purchOrderCommon)
    {
        return this.activityContext(_purchOrderCommon, InsertActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext update(Common _purchOrderCommon)
    {
        return this.activityContext(_purchOrderCommon, UpdateActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext delete(Common _purchOrderCommon)
    {
        return this.activityContext(_purchOrderCommon, DeleteActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logPurchaseOrder</Name>
				<Source><![CDATA[
    internal void logPurchaseOrder(SysInstrumentationActivityContext _activityContext, PurchTable _purchTable)
    {
        if (TradeTableInstrumentationFlight::instance().isEnabled())
        {
            boolean isInterCompanyOrderChain = _purchTable.isInterCompanyOrderChain();

            _activityContext
                .addCustomProperty(SourceDocumentHeader, int642Str(_purchTable.SourceDocumentHeader))
                .addCustomProperty(SourceDocumentLine, int642Str(_purchTable.SourceDocumentLine))
                .addCustomProperty(IsInterCompanyOrderProperty, any2Str(isInterCompanyOrderChain))
                .addCustomProperty(IsInterCompanyOrderChainProperty, any2Str(isInterCompanyOrderChain || _purchTable.InterCompanyOriginalSalesId || _purchTable.InterCompanySalesId))
                .addCustomProperty(HasUIProperty, any2Str(FormDataUtil::isFormDataSource(_purchTable)))
                .addCustomProperty(IsIntegrationProperty, enum2Symbol(enumNum(TradeIntegrationType), _purchTable.IsIntegration));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>logPurchaseOrderLine</Name>
				<Source><![CDATA[
    internal void logPurchaseOrderLine(SysInstrumentationActivityContext _activityContext, PurchTable _purchTable, PurchLine _purchLine, boolean _dropInvent, boolean _isStocked)
    {
        if (TradeTableInstrumentationFlight::instance().isEnabled())
        {
            boolean isInterCompanyOrderChain = _purchTable.isInterCompanyOrderChain();
            
            _activityContext
                .addCustomProperty(PurchTableRecId, int642Str(_purchTable.RecId))
                .addCustomProperty(SourceDocumentLine, int642Str(_purchLine.SourceDocumentLine))
                .addCustomProperty(IsInterCompanyOrderProperty, any2Str(_purchLine.InterCompanyInventTransId && isInterCompanyOrderChain))
                .addCustomProperty(IsInterCompanyOrderChainProperty, any2Str(isInterCompanyOrderChain || _purchTable.InterCompanyOriginalSalesId || _purchTable.InterCompanySalesId))
                .addCustomProperty(InterCompanyOriginProperty, enum2Symbol(enumNum(InterCompanyOrigin), _purchLine.InterCompanyOrigin))
                .addCustomProperty(HasUIProperty, any2Str(FormDataUtil::isFormDataSource(_purchLine)))
                .addCustomProperty(IsIntegrationProperty, enum2Symbol(enumNum(TradeIntegrationType), _purchLine.IsIntegration))
                .addCustomProperty(HasInventTransId, any2Str(_purchLine.InventTransId != ''))
                .addCustomProperty(HasOrigInventTransId, any2Str(_purchLine.orig().InventTransId != ''));

            switch (this.activityName)
            {
                case InsertActivity:
                    _activityContext.addCustomProperty(DropInvent, any2Str(_dropInvent));
                    break;
                case UpdateActivity:
                    _activityContext.addCustomProperty(DropInvent, any2Str(_dropInvent));
                    _activityContext.addCustomProperty(IsStocked, any2Str(_isStocked));
                    break;
                case DeleteActivity:
                    _activityContext.addCustomProperty(IsStocked, any2Str(_isStocked));
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOrphanPurchLinesHistory</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext deleteOrphanPurchLinesHistory()
    {
        return logger.activityContext(DeleteOrphanPurchLinesHistoryActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDropShipStatus</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updateDropShipStatus(PurchLine _purchLine)
    {
        SysInstrumentationActivityContext activityContext = this.activityContext(_purchLine, UpdateDropShipStatusActivity);

        activityContext.addCustomProperty(tableStr(PurchLine), int642Str(_purchLine.RecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logUpdateDropShipStatus</Name>
				<Source><![CDATA[
    internal void logUpdateDropShipStatus(SysInstrumentationActivityContext _activityContext, 
        MCRDropShipStatus _oldDropShipStatus, 
        MCRDropShipStatus _newDropShipStatus, 
        PurchStatus _oldPurchStatus, 
        PurchStatus _newPurchStatus,
        VersioningDocumentState _oldDocumentState,
        VersioningDocumentState _newDocumentState)
    {
        _activityContext
            .addCustomProperty(OldDropShipStatusProperty, enum2Symbol(enumNum(MCRDropShipStatus), _oldDropShipStatus))
            .addCustomProperty(NewDropShipStatusProperty, enum2Symbol(enumNum(MCRDropShipStatus), _newDropShipStatus))
            .addCustomProperty(OldPurchStatusProperty, enum2Symbol(enumNum(PurchStatus), _oldPurchStatus))
            .addCustomProperty(NewPurchStatusProperty, enum2Symbol(enumNum(PurchStatus), _newPurchStatus))
            .addCustomProperty(OldDocumentStateProperty, enum2Symbol(enumNum(VersioningDocumentState), _oldDocumentState))
            .addCustomProperty(NewDocumentStateProperty, enum2Symbol(enumNum(VersioningDocumentState), _newDocumentState));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>