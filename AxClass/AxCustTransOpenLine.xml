<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCustTransOpenLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AxCustTransOpenLine</c> class handles the business logic for the <c>CustTransOpenLine</c>
///    table.
/// </summary>
/// <remarks>
///    This internal <c>AxBC</c> class is derived from <see cref="T:AxInternalBase" />.
/// </remarks>
class AxCustTransOpenLine extends AxInternalBase
{
    CustTransOpenLine custTransOpenLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the original record.
    /// </summary>
    /// <returns>
    /// Orignial record.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
        public Common currentRecord(Common _custTransOpenLine = custTransOpenLine)
    {
        if (!prmisdefault(_custTransOpenLine))
        {
            super(_custTransOpenLine);
            custTransOpenLine = _custTransOpenLine;
        }
        else
        {
            super();
        }

        return custTransOpenLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTransOpenLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets and gets the <c>CustTransOpenLine</c> table record.
    /// </summary>
    /// <param name="_custTransOpenLine">
    /// The <c>CustTransOpenLine</c> table buffer; optional.
    /// </param>
    /// <returns>
    /// The <c>CustTransOpenLine</c> table buffer.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustTransOpenLine custTransOpenLine(CustTransOpenLine _custTransOpenLine = custTransOpenLine)
    {
        if (!prmisdefault(_custTransOpenLine))
        {
            this.setCurrentRecordFromExternal(_custTransOpenLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
        protected Common emptyRecord()
    {
        CustTransOpenLine localCustTransOpenLine;
        ;
        return localCustTransOpenLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountCur</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public AmountCurDebCred parmAmountCur(AmountCurDebCred _amountCur = 0)
    {
        if (!prmisdefault(_amountCur))
        {
            this.setField(fieldnum(CustTransOpenLine, AmountCur), _amountCur);
        }

        return custTransOpenLine.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustInvoiceLineIdRef</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public CustInvoiceLineIdRefRecId parmCustInvoiceLineIdRef(CustInvoiceLineIdRefRecId _custInvoiceLineIdRef = 0)
    {
        if (!prmisdefault(_custInvoiceLineIdRef))
        {
            this.setField(fieldnum(CustTransOpenLine, CustInvoiceLineIdRef), _custInvoiceLineIdRef);
        }

        return custTransOpenLine.CustInvoiceLineIdRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustTransOpen</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public CustTransOpenRefRecId parmCustTransOpen(CustTransOpenRefRecId _custTransOpen = 0)
    {
        if (!prmisdefault(_custTransOpen))
        {
            this.setField(fieldnum(CustTransOpenLine, CustTransOpen), _custTransOpen);
        }

        return custTransOpenLine.CustTransOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscToTakeAmountOnLine</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public CashDiscAmount parmDiscToTakeAmountOnLine(CashDiscAmount _cashDiscAmount = 0)
    {
        return CustTransMarkedOpenLine::findByOpenTransRecId(custTransOpenLine.RecId).CashDiscLineToTake;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsMarked</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public boolean parmIsMarked(boolean _isMarked = false)
    {
        CustTransMarkedOpenLine     custTransMarkedOpenLine;

        select firstonly RecId from custTransMarkedOpenLine
            where custTransMarkedOpenLine.CustTransOpenLine == custTransOpenLine.RecId;

        return (custTransMarkedOpenLine.RecId != 0 ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDescription</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public Description parmLineDescription(Description _lineDescription = '')
    {
        CustInvoiceLineIdRef    custInvoiceLineIdRef;
        CustInvoiceTrans        custInvoiceTrans;
        CustInterestTrans       custInterestTrans;
        MarkupTrans             markupTrans;

        custInvoiceLineIdRef = CustInvoiceLineIdRef::find(custTransOpenLine.CustInvoiceLineIdRef);

        if (CustInvoiceLineType::Customer == custInvoiceLineIdRef.EntityType)
        {
            select firstonly custInvoiceTrans
                where   custInvoiceTrans.CustInvoiceLineIdRef == custInvoiceLineIdRef.RecId;

            if (custInvoiceTrans)
            {
                _lineDescription = custInvoiceTrans.Name;
            }
        }
        else if (CustInvoiceLineType::InterestNote == custInvoiceLineIdRef.EntityType)
        {
             select firstonly custInterestTrans
                where   custInterestTrans.CustInvoiceLineIdRef == custInvoiceLineIdRef.RecId;

            if (custInterestTrans)
            {
                _lineDescription = custInterestTrans.Txt;
            }
        }
        else if (CustInvoiceLineType::MarkupTrans == custInvoiceLineIdRef.EntityType)
        {
             select firstonly markupTrans
                where   markupTrans.CustInvoiceLineIdRef == custInvoiceLineIdRef.RecId
                   &&  !markupTrans.IsDeleted;

            if (markupTrans)
            {
                _lineDescription = markupTrans.Txt;
            }
        }

        return _lineDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineType</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public CustInvoiceLineType parmLineType(CustInvoiceLineType value = 0)
    {
        CustInvoiceLineIdRef    custInvoiceLineIdRef;

        custInvoiceLineIdRef = CustInvoiceLineIdRef::find(custTransOpenLine.CustInvoiceLineIdRef);

        return custInvoiceLineIdRef.EntityType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
        protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static AxCustTransOpenLine construct()
    {
        return new AxCustTransOpenLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCustTransOpenLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new object of <c>AxCustTransOpenLine</c> class.
    /// </summary>
    /// <param name="_custTransOpenLine">
    /// The table buffer of <c>CustTransOpenLine</c>.
    /// </param>
    /// <returns>
    /// The object of <c>AxCustTransOpenLine</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AxCustTransOpenLine newCustTransOpenLine(CustTransOpenLine _custTransOpenLine)
    {
        AxCustTransOpenLine axCustTransOpenLine = AxCustTransOpenLine::construct();
        ;
        axCustTransOpenLine.custTransOpenLine(_custTransOpenLine);

        return axCustTransOpenLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>