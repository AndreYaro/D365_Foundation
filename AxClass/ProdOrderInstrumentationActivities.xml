<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdOrderInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Production Orders instrumentation activities.
/// </summary>
internal final class ProdOrderInstrumentationActivities
{
    public const str ProdOrderPrefix = 'ProdOrder.';
    public const str ProdMultiSplit = 'MultiSplit';
    internal const str ScrapLotStandardCostItem = 'ScrapLotStandardCostItem';
    
    private ProdInstrumentationLogger logger;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(ProdInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static ProdOrderInstrumentationActivities newFromLogger(ProdInstrumentationLogger _logger)
    {
        return new ProdOrderInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>multiSplit</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext multiSplit()
    {
        SysInstrumentationActivity activity = logger.activity(ProdOrderPrefix + ProdMultiSplit);
               
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>scrapLotStandardCostItem</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext scrapLotStandardCostItem()
    {
        SysInstrumentationActivity activity = logger.activity(ProdOrderPrefix + ScrapLotStandardCostItem);
               
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>