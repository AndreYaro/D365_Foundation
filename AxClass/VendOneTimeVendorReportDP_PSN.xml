<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendOneTimeVendorReportDP_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Report data provider class for one-time vendor error report.
/// </summary>
[SRSReportParameterAttribute(classStr(VendOneTimeVendorReportContract_PSN))]
class VendOneTimeVendorReportDP_PSN extends SRSReportDataProviderBase
{
    VendOneTimeVendorTmp_PSN vendOneTimeVendorStaging_PSNTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getVendOneTimeVendorStaging_PSNTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get temporary table <c>VendOneTimeVendorTmp_PSN</c> for one-time vendor report.
    /// </summary>
    /// <returns>
    /// Returns temporary table <c>VendOneTimeVendorTmp_PSN</c>.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(VendOneTimeVendorTmp_PSN)), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public VendOneTimeVendorTmp_PSN getVendOneTimeVendorStaging_PSNTmp()
    {
        select vendOneTimeVendorStaging_PSNTmp;

        return vendOneTimeVendorStaging_PSNTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        RecId                               tmpTableRecId;
        SRSReportRunPermission              permission;
        VendOneTimeVendorReportContract_PSN vendOneTimeVendorReportContract_PSN;

        vendOneTimeVendorReportContract_PSN = this.parmDataContract();

        // Retrieves the session parameters
        tmpTableRecId = vendOneTimeVendorReportContract_PSN.parmVendOneTimeVendorTmpRecId();

        // Temporarily enable access to data cache
        permission = new SRSReportRunPermission();
        permission.assert();

        // Fill the temp table objects with data returned from SRSDataCarrier
        vendOneTimeVendorStaging_PSNTmp = SRSTmpTblMarshaller::getTmpTbl(tmpTableRecId);

        // Revert code access permissions
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
