<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsLocationSelectForm_PurchLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsLocationSelectForm_PurchLine extends LogisticsLocationSelectForm
{
    PurchLine purchLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowedSources</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates the entities from which addresses can be selected.
    /// </summary>
    /// <returns>
    ///    The set of <c>LogisticsLocationSelectSourceTypes</c> enumeration types from which addresses can be
    ///    selected.
    /// </returns>
    public Set allowedSources()
    {
        Set ret;

        ret = super();

        ret.add(LogisticsLocationSelectSourceType::PurchaseOrder);
        ret.add(LogisticsLocationSelectSourceType::PurchaseOrderLine);
        ret.add(LogisticsLocationSelectSourceType::RequestForQuote);
        ret.add(LogisticsLocationSelectSourceType::RequestForQuoteLine);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAddressToCaller</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the selected address to the calling purchase order line.
    /// </summary>
    /// <param name="_transferFromTable">
    /// The source of the address.
    /// </param>
    /// <param name="_addressRecId">
    /// The selected address.
    /// </param>
    public void copyAddressToCaller(Common _transferFromTable, LogisticsPostalAddressRecId _addressRecId)
    {
        PurchTable purchLine_purchTable;
        TaxGroup taxToCopyFrom;

        purchLine.DeliveryPostalAddress = _addressRecId;
        purchLine.setDeliveryName();
        purchLine.AddressRefRecId = _transferFromTable.RecId;
        purchLine.AddressRefTableId = _transferFromTable.TableId;

        taxToCopyFrom = LogisticsLocationExt::find(LogisticsPostalAddress::findRecId(_addressRecId).Location).TaxGroup;

        if (taxToCopyFrom)
        {
            purchLine_purchTable = purchLine.purchTable();

            if (purchLine_purchTable && DlvTerm::find(purchLine_purchTable.DlvTerm).TaxLocationRole != LogisticsLocationRoleType::Invoice)
            {
                purchLine.TaxGroup = taxToCopyFrom;
            }
        }

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            purchLine.setCFOP_BR();
            purchLine.TaxServiceCode_BR = TaxServiceCode_BR::serviceCode_BR(purchLine).ServiceCodeId;
        }
        // </GBR>

        purchLine.setListCode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the initial source that is selected for the addresses on the form.
    /// </summary>
    /// <returns>
    /// The <c>LogisticslocationSelectSourceType</c> enumeration value that corresponds to the address
    /// source.
    /// </returns>
    public LogisticsLocationSelectSourceType defaultSource()
    {
        LogisticsLocationSelectSourceType   sourceType = super();
        Common                              addressOwner;

        if (purchLine.AddressRefTableId)
        {
            addressOwner = LogisticsLocationSelectForm::findByRecId(
                purchLine.AddressRefTableId,
                purchLine.AddressRefRecId
            );

            if (addressOwner)
            {
                sourceType = LogisticsLocationSelectForm::tableIdToSourceType(
                    purchLine.AddressRefTableId,
                    sourceType
                );
            }
        }

        return sourceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLogisticsPostalAddressRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Gets the record ID of the <c>LogisticsPostalAddress</c> that is currently selected.
    /// </summary>
    /// <returns>
    ///   The <c>LogisticsPostalAddress</c> record ID.
    /// </returns>
    public RecId getLogisticsPostalAddressRecId()
    {
        return purchLine.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLookupRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the record that the grid of the target form selects upon opening.
    /// </summary>
    /// <returns>
    /// The record to select.
    /// </returns>
    public Common getLookupRecord()
    {
        Common addressOwner;

        if (purchLine.AddressRefTableId)
        {
            addressOwner = LogisticsLocationSelectForm::findByRecId(
                purchLine.AddressRefTableId,
                purchLine.AddressRefRecId
            );
        }

        if (!addressOwner)
        {
            addressOwner = CompanyInfo::find();
        }

        return addressOwner;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        void new(PurchLine _purchLine)
    {
        purchLine = _purchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new <c>LogisticsLocationSelectForm_PurchLine</c> object.
    /// </summary>
    /// <param name="_buffer">
    ///    A <c>LogisticsLocationSelectForm_PurchLine</c> record to use to initialize the object.
    /// </param>
    /// <returns>
    ///    A new <c>LogisticsLocationSelectForm_PurchLine</c> object.
    /// </returns>
    public static LogisticsLocationSelectForm_PurchLine construct(Common _buffer)
    {
        return new LogisticsLocationSelectForm_PurchLine(_buffer);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>