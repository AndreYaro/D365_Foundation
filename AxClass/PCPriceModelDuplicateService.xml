<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCPriceModelDuplicateService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A service operation class responsible for duplication of the price models.
/// </summary>
class PCPriceModelDuplicateService
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>duplicatePriceModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Duplicates a price model.
    /// </summary>
    /// <param name="_dataContract">
    /// An instance of <c>PCPriceModelDuplicateContract</c> class.
    /// </param>
    public void duplicatePriceModel(PCPriceModelDuplicateContract   _dataContract)
    {
        PCPriceModel            priceModel, priceModelOrigin;
        PCPriceModelCurrency    priceModelCurrencyOrigin, priceModelCurrency;
        PCClassPriceCalculation classPriceCalculationOrigin, classPriceCalculation;
        PCPriceExpressionRule   priceExpressionRule, priceExpressionRuleOrigin;
        PCPriceBasePrice        priceBasePrice, priceBasePriceOrigin;
        PCPriceElement          priceElement, priceElementOrigin;
        RefRecId                priceModelRecId, priceModelCurrencyRecId, priceModelOriginCurrencyRecId;
        PCPriceExpressionValue  priceExpressionValue, priceExpressionValueOrigin;

        priceModelOrigin = PCPriceModel::find(_dataContract.parmPriceModel());

        if (!priceModelOrigin.RecId)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        ttsBegin;

        // copy price model definition
        priceModel.data(priceModelOrigin);
        priceModel.Name = _dataContract.parmPriceModelName();
        priceModel.insert(false);

        priceModelRecId = priceModel.RecId;

        // copy price model currencies
        insert_recordset priceModelCurrency (priceModel, currency)
            select  priceModelRecId, Currency from priceModelCurrencyOrigin
                where priceModelCurrencyOrigin.PriceModel == priceModelOrigin.RecId;

        // copy price model components price calculations
        insert_recordset classPriceCalculation ( priceModel, componentClass)
            select priceModelRecId, componentClass from classPriceCalculationOrigin
                where classPriceCalculationOrigin.PriceModel == priceModelOrigin.RecId;

        // copy price model elements - expression rules
        insert_recordset priceExpressionRule (Name, Condition, ClassPriceCalculation)
            select Name, Condition from priceExpressionRuleOrigin
                join classPriceCalculationOrigin
                    where classPriceCalculationOrigin.RecId == priceExpressionRuleOrigin.ClassPriceCalculation
                    && classPriceCalculationOrigin.PriceModel == priceModelOrigin.RecId
                        join RecId from classPriceCalculation
                            where classPriceCalculation.ComponentClass == classPriceCalculationOrigin.ComponentClass
                            && classPriceCalculation.PriceModel == priceModelRecId;

        // copy price model elements - base prices
        insert_recordset priceBasePrice (Name, ClassPriceCalculation)
            select Name from priceBasePriceOrigin
                join classPriceCalculationOrigin
                    where classPriceCalculationOrigin.RecId == priceBasePriceOrigin.ClassPriceCalculation
                    && classPriceCalculationOrigin.PriceModel == priceModelOrigin.RecId
                        join RecId from classPriceCalculation
                            where classPriceCalculation.ComponentClass == classPriceCalculationOrigin.ComponentClass
                            && classPriceCalculation.PriceModel == priceModelRecId;

        while select RecId from priceModelCurrencyOrigin
            where priceModelCurrencyOrigin.PriceModel == priceModelOrigin.RecId
                join RecId from priceModelCurrency
                    where priceModelCurrency.Currency ==  priceModelCurrencyOrigin.Currency
                    && priceModelCurrency.PriceModel == priceModelRecId
        {
            priceModelCurrencyRecId = priceModelCurrency.RecId;
            priceModelOriginCurrencyRecId = priceModelCurrencyOrigin.recid;

            // copy price elements values in a context of a given price model currency
            insert_recordset priceExpressionValue (PriceExpression, PriceElement, PriceModelCurrency)
                select priceExpression from priceExpressionValueOrigin
                    where priceExpressionValueOrigin.PriceModelCurrency == priceModelOriginCurrencyRecId
                        join priceElementOrigin
                            where priceElementOrigin.RecId == priceExpressionValueOrigin.PriceElement
                                join classPriceCalculationOrigin
                                    where classPriceCalculationOrigin.recId == priceElementOrigin.ClassPriceCalculation
                                        join classPriceCalculation
                                            where classPriceCalculation.ComponentClass == classPriceCalculationOrigin.ComponentClass
                                                && classPriceCalculation.PriceModel == priceModelRecId
                                                    join RecId, priceModelCurrencyRecId from priceElement
                                                        where priceElement.ClassPriceCalculation == classPriceCalculation.RecId
                                                        && priceElement.Name == priceElementOrigin.Name;
        }

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
