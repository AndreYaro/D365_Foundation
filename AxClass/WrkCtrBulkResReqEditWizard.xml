<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WrkCtrBulkResReqEditWizard</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WrkCtrBulkResReqEditWizard</c> class maintains resource requirements.
/// </summary>
public class WrkCtrBulkResReqEditWizard extends SysWizard
{
    str                                 callerDest;
    List                                destinations;
    WrkCtrResReqBulkEditAction          action;
    WrkCtrResReqBulkEditPartialFilter   filter;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accessMenuFunction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a menu function.
    /// </summary>
    /// <returns>
    /// The menu function.
    /// </returns>
    public MenuFunction accessMenuFunction()
    {
        return new MenuFunction(menuitemDisplayStr(WrkCtrBulkResReqEditWizard),MenuItemType::Display);
    }

]]></Source>
			</Method>
			<Method>
				<Name>actionDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets action description text.
    /// </summary>
    /// <returns>
    /// The action description.
    /// </returns>
    public str actionDetails()
    {
        return action.detailsText();
    }

]]></Source>
			</Method>
			<Method>
				<Name>actionLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the action label.
    /// </summary>
    /// <returns>
    /// The action label.
    /// </returns>
    public str actionLabel()
    {
        return action.description();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDestination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a new destination.
    /// </summary>
    /// <param name="destination">
    /// A <c>WrkCtrResReqBulkEditDestination</c> object.
    /// </param>
    public void addDestination(WrkCtrResReqBulkEditDestination destination)
    {
        destinations.addEnd(destination);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cancel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>cancel</c> method of the <c>SysWizard</c> class.
    /// </summary>
    public void cancel()
    {
        if (Box::yesNo("@SYS335753", DialogButton::No) == DialogButton::Yes)
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearDestinations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears all destinations.
    /// </summary>
    public void clearDestinations()
    {
        destinations = new List(Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>destinationDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the description of the destination
    /// </summary>
    /// <returns>
    /// The description of the destination.
    /// </returns>
    public str destinationDetails()
    {
        str             result = '';
        boolean         first = true;
        ListEnumerator  enumerator = destinations.getEnumerator();
        WrkCtrResReqBulkEditDestination destination;

        while (enumerator.moveNext())
        {
            if (!first)
            {
                result += '\r\n';
            }

            destination = enumerator.current();
            result += destination.description();
            first = false;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a form name.
    /// </summary>
    /// <returns>
    /// The form name.
    /// </returns>
    formName formName()
    {
        return formStr(WrkCtrBulkResReqEditWizard);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
        destinations = new List(Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>next</c> method of the <c>SysWizard</c> class.
    /// </summary>
    public void next()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfAffectedActivities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the number of activities to modify.
    /// </summary>
    /// <returns>
    /// The number of activities to modify.
    /// </returns>
    public int numberOfAffectedActivities()
    {
        ListEnumerator              enumerator = destinations.getEnumerator();
        WrkCtrResReqBulkEditManager bulkEditManager = new WrkCtrResReqBulkEditManager(filter, action);

        while (enumerator.moveNext())
        {
            bulkEditManager.addDestination(enumerator.current());
        }

        return bulkEditManager.simulateRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets action
    /// </summary>
    /// <param name="_action">The WrkCtrResReqBulkEditAction instancte</param>
    /// <returns>The WrkCtrResReqBulkEditAction instancte</returns>
    public WrkCtrResReqBulkEditAction parmAction(WrkCtrResReqBulkEditAction _action = action)
    {
        action = _action;

        return action;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerDest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets caller destination (used to get parameter from menu item)
    /// </summary>
    /// <param name="_callerDest">Caller destination.</param>
    /// <returns>Caller destination</returns>
    public str parmCallerDest(str _callerDest = callerDest)
    {
        callerDest = _callerDest;

        return callerDest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets current filter
    /// </summary>
    /// <param name="_filter">The WrkCtrResReqBulkEditPartialFilter instance.</param>
    /// <returns>The WrkCtrResReqBulkEditPartialFilter instance.</returns>
    public WrkCtrResReqBulkEditPartialFilter parmFilter(WrkCtrResReqBulkEditPartialFilter _filter = filter)
    {
        filter = _filter;

        return filter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    void run()
    {
        ListEnumerator              enumerator = destinations.getEnumerator();
        WrkCtrResReqBulkEditManager bulkEditManager = new WrkCtrResReqBulkEditManager(filter, action);

        while (enumerator.moveNext())
        {
            bulkEditManager.addDestination(enumerator.current());
        }

        bulkEditManager.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupNavigation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains no code.
    /// </summary>
    void setupNavigation()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is generated by Wizard Wizard
    /// </summary>
    /// <returns>True or false</returns>
    boolean validate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>whereDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a description of where to apply the actions section.
    /// </summary>
    /// <param name="_oprid">
    /// An operation ID.
    /// </param>
    /// <returns>
    /// A string that contains the description of where to apply the actions section.
    /// </returns>
    public str whereDetails(str _oprid)
    {
        str result = '';

        if (_oprid)
        {
            result += strFmt("@SYS335756", _oprid);
        }

        result = filter.appendSummaryText(result, "@SYS335755");

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is generated by Wizard Wizard
    /// </summary>
    /// <param name="args">The Args instance.</param>
    static void main(Args args)
    {
        WrkCtrBulkResReqEditWizard wizard = new WrkCtrBulkResReqEditWizard();

        wizard.parmCallerDest(args.parm());
        if (wizard.prompt())
            wizard.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>