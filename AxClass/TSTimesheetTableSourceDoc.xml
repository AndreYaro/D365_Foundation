<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TsTimesheetTableSourceDoc</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TsTimesheetTableSourceDoc</c> class provides the information to handle the distributions and
/// sub-ledger journal lines of a <c>TSTimesheetTable</c> record.
/// </summary>
[SourceDocumentEnumClassExtAttribute(enumStr(SourceDocument_ProjectTimesheets), SourceDocument_ProjectTimesheets::Timesheets, tableStr(TSTimesheetTable))]
class TsTimesheetTableSourceDoc extends SourceDocument implements SourceDocumentITimesheet
{
    TSTimesheetTable tsTimesheetTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>documentsBusinessEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates business event information that corresponds to the source document.
    /// </summary>
    /// <returns>
    /// A <c>BusinessEvent</c> object.
    /// </returns>
    public BusinessEvent documentsBusinessEvent()
    {
        BusinessEvent           businessEvent;

        businessEvent = new BusinessEvent(enumNum(BusinessEvent_ProjectTimesheets), BusinessEvent_ProjectTimesheets::ProjectTimesheetPosting);

        return businessEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance variables.
    /// </summary>
    /// <param name="_sourceDocumentImplementation">
    /// A source document implementation record.
    /// </param>
    protected void initializeImplementation(SourceDocumentHeaderImplementation _sourceDocumentImplementation)
    {
        tsTimesheetTable = _sourceDocumentImplementation;
        //referenceSourceDocument = SourceDocument::newFromSourceDocumentHeader(SourceDocumentHeader::find(tsTimesheetTable.SourceDocumentHeader));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDate</Name>
				<Source><![CDATA[
    public AccountingDate parmAccountingDate()
    {
        return tsTimesheetTable.PeriodFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrentVoucher</Name>
				<Source><![CDATA[
    public Voucher parmCurrentVoucher(DataAreaId _dataAreaId)
    {
        TSTimesheetTrans tsTimesheetTrans;
        TSTimesheetLine  tsTimesheetLine;
        TSTimesheetLineWeek tsTimesheetLineWeek;

        select firstonly Voucher from tsTimesheetTrans
                    join RecId,tsTimesheetLine from tsTimesheetLineWeek
                        where tsTimesheetTrans.tsTimesheetLineWeek == tsTimesheetLineWeek.RecId
                    join TimesheetNbr,RecId from tsTimesheetLine
                        where tsTimesheetLine.RecId == tsTimesheetLineWeek.tsTimesheetLine &&
                              tsTimesheetLine.TimesheetNbr == tsTimesheetTable.TimesheetNbr;

        return tsTimesheetTrans.Voucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentNumber</Name>
				<Source><![CDATA[
    public DocumentNum parmDocumentNumber()
    {
        return tsTimesheetTable.TimesheetNbr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>