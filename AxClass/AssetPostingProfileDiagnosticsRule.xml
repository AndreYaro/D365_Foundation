<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetPostingProfileDiagnosticsRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetPostingProfileDiagnosticsRule</c> class is used to check whether any asset has no posting profile.
/// </summary>
[DiagnosticsRuleAttribute]
public final class AssetPostingProfileDiagnosticsRule implements IDiagnosticsRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether any asset has no posting profile.
    /// </summary>
    /// <returns>
    /// An instance of <c>DiagnosticsRuleValidationResult</c> which contains the validation result.
    /// </returns>
    [DiagnosticsRuleSubscriptionAttribute(DiagnosticsArea::Financial, "@FixedAssets:FA_PostingProfile_DiagnosticsRuleName", DiagnosticsRunFrequency::Monthly, "@FixedAssets:FA_PostingProfile_DiagnosticsRuleDescription")]
    public DiagnosticsRuleValidationResult validate()
    {
        DiagnosticsRuleValidationResult validationResult = DiagnosticsRuleValidationResult::construct();
        AssetBook   assetBook;

        select firstonly crosscompany assetBook
            where assetBook.PostingProfile == ''
            && (assetBook.Status == AssetStatus::NoAcquisition
            || assetBook.Status == AssetStatus::Open
            || assetBook.Status == AssetStatus::Suspended
            || assetBook.Status == AssetStatus::TransferredToLowValuePool);

        if (assetBook)
        {
            validationResult.addValidationResult("@FixedAssets:FA_NoPostingProfile_ValidationMessage", DiagnosticsValidationSeverity::Medium, "@FixedAssets:FA_NoPostingProfile_ValidationRecommendation");
        }

        return validationResult;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>