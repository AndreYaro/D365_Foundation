<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ExportToExcelDataEntityContextAppSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class contains extension methods for the <c>ExportToExcelDataEntityContext</c> class.
/// </summary>
public static class ExportToExcelDataEntityContextAppSuite_Extension
{
    static const str AutoReportFieldGroupName = 'AutoReport';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findBindingByEntityName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the binding for the specified data entity.
    /// </summary>
    /// <param name = "_context">The export context.</param>
    /// <param name = "_dataEntityName">The name of the data entity.</param>
    /// <returns>The <c>ExportToExcelDataEntityBindingInfo</c> object for the specified data entity.</returns>
    public static ExportToExcelDataEntityBindingInfo findBindingByEntityName(
        ExportToExcelDataEntityContext  _context,
        TableName                       _dataEntityName)
    {
        ListEnumerator bindingListEnumerator = _context.bindings().getEnumerator();

        while (bindingListEnumerator.moveNext())
        {
            ExportToExcelDataEntityBindingInfo binding = bindingListEnumerator.current();
            if (binding.entityName() == _dataEntityName)
            {
                return binding;
            }
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityByName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the entity with the specified name in the context.
    /// </summary>
    /// <param name = "_context">The export context.</param>
    /// <param name = "_dataEntityName">The name of the data entity.</param>
    /// <returns>The <c>ExportToExcelDataEntityInfo</c> object for the specified data entity.</returns>
    public static ExportToExcelDataEntityInfo findEntityByName(
        ExportToExcelDataEntityContext  _context,
        TableName                       _dataEntityName)
    {
        ListEnumerator enumerator = _context.entities().getEnumerator();

        while (enumerator.moveNext())
        {
            ExportToExcelDataEntityInfo entity = enumerator.current();

            if (entity.entityName() == _dataEntityName)
            {
                return entity;
            }
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEntityDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the entity with the specified name to the context and sets up default filters and binding.
    /// </summary>
    /// <param name = "_context">The export context.</param>
    /// <param name = "_dataEntityName">The name of the data entity.</param>
    /// <returns>The <c>ExportToExcelDataEntityInfo</c> object for the specified data entity.</returns>
    public static ExportToExcelDataEntityInfo addEntityDefault(
        ExportToExcelDataEntityContext  _context,
        TableName                       _dataEntityName)
    {
        var entityInfo = new ExportToExcelDataEntityInfo();
        entityInfo.entityName(_dataEntityName);
        _context.entities().addEnd(entityInfo);

        var bindingInfo = new ExportToExcelDataEntityBindingInfo();
        bindingInfo.entityName(_dataEntityName);
        bindingInfo.useFieldGroup(true);
        bindingInfo.fieldGroupName(AutoReportFieldGroupName);
        _context.bindings().addEnd(bindingInfo);

        var filterBuilder = new ExportToExcelFilterTreeBuilder(_dataEntityName);

        entityInfo.filter(filterBuilder.companyFilter());

        return entityInfo;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>