<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTableInventoriedPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventTableInventoriedPolicy</c> class checks modifications to the inventoried policy on the
///    <c>InventTable</c> table that is specified by the associated <c>InventModelGroup</c> record.
/// </summary>
public class InventTableInventoriedPolicy extends InventInventoriedPolicy
{
    InventModelGroupItem    inventModelGroupItem;
    EcoResProductRecId      productRecId;
    ItemId                  itemId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventModelGroupItem</Name>
				<Source><![CDATA[
    public InventModelGroupItem parmInventModelGroupItem(InventModelGroupItem _inventModelGroupItem = inventModelGroupItem)
    {
        inventModelGroupItem = _inventModelGroupItem;

        return inventModelGroupItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductRecId</Name>
				<Source><![CDATA[
    public EcoResProductRecId parmProductRecId(EcoResProductRecId _productRecId = productRecId)
    {
        productRecId = _productRecId;

        return productRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the inventoried policy is not changed when the <c>ModelGroupId</c> field is modified.
    /// </summary>
    /// <param name="_fieldName">
    ///    The field to validate.
    /// </param>
    /// <param name="_arrayIndex">
    ///    The array index of the field to validate; optional.
    /// </param>
    /// <returns>
    ///    true if the new association to a <c>InventModelGroup</c> record does not change the inventoried
    ///    policy; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret = true;

        switch (_fieldName)
        {
            case fieldStr(InventModelGroupItem, ModelGroupId):
                if (inventModelGroupItem.ModelGroupId != inventModelGroupItem.orig().ModelGroupId)
                {
                    ret = this.checkPolicyForProduct(productRecId, inventModelGroupItem.orig().ModelGroupId)
                        && InventTableInventoriedPolicy::checkCanModelGroupIdBeModified(itemId, inventModelGroup);
                }
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCanModelGroupIdBeModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the <c>ModelGroupId</c> field can be modified for the <paramref
    ///    name="_inventTable" /> parameter.
    /// </summary>
    /// <param name="_itemId">
    ///    The ID of an <c>InventTable</c> record to check modification for.
    /// </param>
    /// <param name="_inventModelGroup">
    ///    The <c>InventModelGroup</c> buffer that holds the new inventoried policy.
    /// </param>
    /// <returns>
    ///    true if the <c>ModelGroupId</c> field can be modified; otherwise, false.
    /// </returns>
    protected static boolean checkCanModelGroupIdBeModified(ItemId _itemId, InventModelGroup _inventModelGroup)
    {
        boolean ret = true;

        if (!_inventModelGroup.isStocked())
        {
            if ((select firstonly RecId from bom where bom.ItemId == _itemId).RecId != 0)
            {
                ret = checkFailed("@SYS183556");
            }
            if ((select firstonly RecId from prodBOM where prodBOM.ItemId == _itemId).RecId != 0)
            {
                ret = checkFailed("@SYS183557");
            }
            if ((select firstonly RecId from bomVersion where bomVersion.ItemId == _itemId).RecId != 0)
            {
                ret = checkFailed("@SYS183559");
            }
            if ((select firstonly RecId from routeVersion where routeVersion.ItemId == _itemId).RecId != 0)
            {
                ret = checkFailed("@SYS301853");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static public InventTableInventoriedPolicy construct()
    {
        return new InventTableInventoriedPolicy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupModelGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs a lookup for the <c>ModelGroupId</c> field which only shows item model groups that are
    ///    compatible with the item type.
    /// </summary>
    /// <param name="_formControl">
    ///    The form control for which to perform the lookup.
    /// </param>
    /// <param name="_productId">
    ///    The product for which to show model groups.
    /// </param>
    static public void lookupModelGroupId(FormControl _formControl, RefRecId _productId)
    {
        // Build the query
        Query query = new Query();

        if (_productId != 0)
        {
            EcoResProduct product = EcoResProduct::find(_productId);
            QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(InventModelGroup));

            // Only inventoried item model groups are allowed to be associated with a product which is to be configured using the Product configurator/Product Builder.
            if (!product.isSupportedForNonInventoriedItems())
            {
                queryBuildDataSource.addRange(fieldNum(InventModelGroup,StockedProduct)).value(queryValue(NoYes::Yes));
            }
        }

        // Setup the lookup
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(InventModelGroup), _formControl);
        sysTableLookup.parmQuery(query);
        sysTableLookup.addLookupfield(fieldNum(InventModelGroup, ModelGroupId));
        sysTableLookup.addLookupfield(fieldNum(InventModelGroup, Name));

        // Perform the lookup
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInventModelGroupItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventTableInventoriedPolicy</c> class from an
    ///    <c>InventModelGroupItem</c> buffer.
    /// </summary>
    /// <param name="_inventModelGroupItem">
    ///    The <c>newInventModelGroupItem</c> buffer on which the policy resides.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>InventTableInventoriedPolicy</c> class.
    /// </returns>
    public static InventTableInventoriedPolicy newInventModelGroupItem(InventModelGroupItem _inventModelGroupItem)
    {
        InventTableInventoriedPolicy inventTableInventoriedPolicy = InventTableInventoriedPolicy::construct();
        inventTableInventoriedPolicy.parmInventModelGroupItem(_inventModelGroupItem);
        inventTableInventoriedPolicy.parmInventModelGroup(_inventModelGroupItem.modelGroup());
        inventTableInventoriedPolicy.parmProductRecId(InventTable::itemProduct(_inventModelGroupItem.ItemId));
        inventTableInventoriedPolicy.parmItemId(_inventModelGroupItem.ItemId);

        return inventTableInventoriedPolicy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
