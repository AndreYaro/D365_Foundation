<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRulePurchComplInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Accounting distribution rule for Brazilian purchase complementary invoice.
/// </summary>
[
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_PurchComplementaryInv), BusinessEvent_SalesComplementaryInv::SalesComplementaryInvoice, MonetaryAmount::ExtendedPrice)
]
class AccDistRulePurchComplInvoice extends AccountingDistributionRule
{
    PurchComplementaryInvoiceLine complementaryLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the accounting rule.
    /// </summary>
    protected void initialize()
    {
        complementaryLine = PurchComplementaryInvoiceLine::findSourceDocumentLine(this.parmSourceDocumentLineItem().parmSourceDocumentLine().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        LedgerPostingType                       ledgerPostingType;
        ProjectAccDistRule                      projectAccDistRule = ProjectAccDistRule::newFromAccountingDistributionRule(this);
        boolean                                 isProject = projectAccDistRule.parmIsProject();
        PurchComplementaryInvSourceDocLine      sourceDocLineItem;

        if (isProject)
        {
            ledgerPostingType = projectAccDistRule.parmLedgerPostingType();
        }
        else
        {
            switch (complementaryLine.LineType)
            {
                case PurchInvoiceLineType::Advance:
                    ledgerPostingType = LedgerPostingType::PurchAdvance;
                    break;
                case PurchInvoiceLineType::AdvanceApplication:
                    ledgerPostingType = LedgerPostingType::PurchAdvanceApplication;
                    break;
                case PurchInvoiceLineType::Standard:
                    sourceDocLineItem = this.parmSourceDocumentLineItem();
                    if (sourceDocLineItem.parmStocked())
                    {
                        ledgerPostingType = LedgerPostingType::PurchConsump;
                    }
                    else
                    {
                        ledgerPostingType = LedgerPostingType::PurchExpense;
                    }
                    break;
            }
        }

        return ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        if (this.parmAmount() >= 0)
        {
            return DebitCredit::Debit;
        }
        else
        {
            return DebitCredit::Credit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>