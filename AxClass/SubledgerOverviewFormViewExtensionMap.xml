<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerOverviewFormViewExtensionMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// An subledger journal overview form view extension collection.
/// </summary>
class SubledgerOverviewFormViewExtensionMap
{
    Map subledgerOverviewFormViewExtensions;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addExtensionsToMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds subledger journal overview form view extension classes to map.
    /// </summary>
    /// <param name="_formViewExtensions">
    /// The list which has the subledger journal overview form view extension classes.
    /// </param>
    /// <param name="_subledgerJournalOverviewFormView">
    /// The subleger journal overview form view.
    /// </param>
    private void addExtensionsToMap(
        List                                _formViewExtensions,
        SubledgerJournalOverviewFormView    _subledgerJournalOverviewFormView)
    {
        ListEnumerator                      formViewExtensionsEnumerator;
        SubledgerOverviewFormViewExtension  subledgerOverviewFormViewExtension;
        SourceDocumentExtensionKey          mapExtensionKey;

        if (_formViewExtensions && _formViewExtensions.elements() != 0)
        {
            formViewExtensionsEnumerator = _formViewExtensions.getEnumerator();

            while (formViewExtensionsEnumerator.moveNext())
            {
                subledgerOverviewFormViewExtension = formViewExtensionsEnumerator.current();
                mapExtensionKey = [classIdGet(subledgerOverviewFormViewExtension)];
                subledgerOverviewFormViewExtension.parmSubledgerJournalOverviewFormView(_subledgerJournalOverviewFormView);
                subledgerOverviewFormViewExtension.initialize();
                this.insert(mapExtensionKey, subledgerOverviewFormViewExtension);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>elements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of elements in the <c>SubledgerOverviewFormViewExtensionMap</c>.
    /// </summary>
    /// <returns>
    /// The number of elements in the map
    /// </returns>
    public int elements()
    {
        int elementCount;

        elementCount = subledgerOverviewFormViewExtensions.elements();

        return elementCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>empty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the <c>SubledgerOverviewFormViewExtensionMap</c> is empty.
    /// </summary>
    /// <returns>
    /// true if the map is empty; otherwise, false.
    /// </returns>
    public boolean empty()
    {
        boolean isEmpty;

        isEmpty = subledgerOverviewFormViewExtensions.empty();

        return isEmpty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the extension key exists as a key in the collection.
    /// </summary>
    /// <param name="_sourceDocumentExtensionKey">
    /// The extension key.
    /// </param>
    /// <returns>
    /// true if the extension key exists as a key; otherwise, false.
    /// </returns>
    public boolean exists(SourceDocumentExtensionKey _sourceDocumentExtensionKey)
    {
        boolean exist;

        exist = subledgerOverviewFormViewExtensions.exists(_sourceDocumentExtensionKey);

        return exist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an enumerator for an <c>SubledgerOverviewFormViewExtensionMap</c>.
    /// </summary>
    /// <returns>
    /// An <c>SubledgerOverviewFormViewExtMapEnum</c>.
    /// </returns>
    public SubledgerOverviewFormViewExtMapEnum getEnumerator()
    {
        SubledgerOverviewFormViewExtMapEnum mapEnumerator;

        mapEnumerator = SubledgerOverviewFormViewExtMapEnum::construct(subledgerOverviewFormViewExtensions.getEnumerator());

        return mapEnumerator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts an subledger journal overview view extension into the collection by using an extension key.
    /// </summary>
    /// <param name="_extensionKey">
    /// The extension key.
    /// </param>
    /// <param name="_subledgerOverviewFormViewExtension">
    /// The subledger journal overview form view extension to insert.
    /// </param>
    /// <returns>
    /// true if the insertion was successful; otherwise, false.
    /// </returns>
    public boolean insert(
        SourceDocumentExtensionKey  _extensionKey,
        SubledgerOverviewFormViewExtension  _subledgerOverviewFormViewExtension)
    {
        boolean inserted;

        inserted = subledgerOverviewFormViewExtensions.insert(_extensionKey, _subledgerOverviewFormViewExtension);

        return inserted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        private void new()
    {
        subledgerOverviewFormViewExtensions = new Map(Types::Container, Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes an element (keyValue, valueValue pair) in the <c>SubledgerOverviewFormViewExtensionMap</c>.
    /// </summary>
    /// <param name="_sourceDocumentExtensionKey">
    /// The key value.
    /// </param>
    /// <returns>
    /// true, if the value has been removed; otherwise false.
    /// </returns>
    public boolean remove(SourceDocumentExtensionKey _sourceDocumentExtensionKey)
    {
        boolean removed;

        removed = subledgerOverviewFormViewExtensions.remove(_sourceDocumentExtensionKey);

        return removed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get a string representation of the collection.
    /// </summary>
    /// <returns>
    /// A string.
    /// </returns>
    public str toString()
    {
        str value;

        value = subledgerOverviewFormViewExtensions.toString();

        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>xml</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get an XML document representation of the collection.
    /// </summary>
    /// <param name="_indent">
    /// The indentation specifier.
    /// </param>
    /// <returns>
    /// The XML document.
    /// </returns>
    public str xml(int _indent = 0)
    {
        str xml;

        xml = subledgerOverviewFormViewExtensions.xml(_indent);

        return xml;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>SubledgerOverviewFormViewExtensionMap</c> class
    /// </summary>
    /// <returns>
    /// A new instance of the <c>SubledgerOverviewFormViewExtensionMap</c> class.
    /// </returns>
    static protected SubledgerOverviewFormViewExtensionMap construct()
    {
        return new SubledgerOverviewFormViewExtensionMap();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSublegerJournalOverviewFormView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>SubledgerOverviewFormViewExtensionMap</c> class from an subleger journal overview form view.
    /// </summary>
    /// <param name="_subledgerJournalOverviewFormView">
    /// The subleger journal overview form view.
    /// </param>
    /// <returns>
    /// An <c>SubledgerOverviewFormViewExtensionMap</c>
    /// </returns>
    public static SubledgerOverviewFormViewExtensionMap newFromSublegerJournalOverviewFormView(
        SubledgerJournalOverviewFormView    _subledgerJournalOverviewFormView)
    {
        SubledgerOverviewFormViewExtensionMap   subledgerOverviewFormViewExtensionMap;
        List                                    baseExtensions;

        Debug::assert(_subledgerJournalOverviewFormView != null);

        baseExtensions = SourceDocumentExtensionFactory::newObjectList(classNum(SubledgerOverviewFormViewExtension), conNull(), false);
        subledgerOverviewFormViewExtensionMap = SubledgerOverviewFormViewExtensionMap::construct();
        subledgerOverviewFormViewExtensionMap.addExtensionsToMap(baseExtensions, _subledgerJournalOverviewFormView);

        return subledgerOverviewFormViewExtensionMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>