<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetCountingDPEELV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetCountingDPEELV</c> class is the data provider for the <c>AssetCountingEELV</c> report.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(AssetCountingEELV)),
    SRSReportParameterAttribute(classStr(AssetCountingContractEELV))
]
public class AssetCountingDPEELV extends SrsReportDataProviderPreProcessTempDB
{
    AssetCountingTmpEELV assetCountingTmpEELV;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetCountingTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the data in the <c>AssetCountingTmpEELV</c> table.
    /// </summary>
    /// <returns>
    ///     The <c>AssetCountingTmpEELV</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(AssetCountingTmpEELV))
    ]
    public AssetCountingTmpEELV getAssetCountingTmp()
    {
        select assetCountingTmpEELV;
        return assetCountingTmpEELV;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        QueryRun                  queryRun;
        AssetBook                 assetBook;
        AssetTable                assetTable;
        AssetSumCalc_Trans        assetSumCalcTrans;
        TransDate                 calculationDate;
        AssetCountingContractEELV contract;

        contract        = this.parmDataContract() as AssetCountingContractEELV;
        calculationDate = contract.parmCalculationDate();
        queryRun        = new QueryRun(this.parmQuery());

        while (queryRun.next())
        {
            assetBook                              = queryRun.get(tableNum(AssetBook)) as AssetBook;
            assetTable                             = queryRun.get(tableNum(AssetTable)) as AssetTable;

            assetCountingTmpEELV.AssetGroup        = assetBook.AssetGroup;
            assetCountingTmpEELV.AssetId           = assetTable.AssetId;
            assetCountingTmpEELV.Name              = assetTable.Name;
            assetCountingTmpEELV.AcquisitionDate   = assetBook.AcquisitionDate;
            assetCountingTmpEELV.LifeTime          = assetBook.LifeTime;
            assetCountingTmpEELV.UsedLifeTime      = assetBook.usedLifeTime();
            assetCountingTmpEELV.Quantity          = assetTable.Quantity;

            assetSumCalcTrans                      = AssetSumCalc_Trans::newAssetId(assetTable.AssetId, '',
                                                                           dateNull(), calculationDate);
            assetCountingTmpEELV.FinancialValue    = assetSumCalcTrans.financialValue();
            assetCountingTmpEELV.NetBookValue      = assetSumCalcTrans.netBookValue();
            assetCountingTmpEELV.DepreciationValue = assetSumCalcTrans.depreciationValue();

            assetCountingTmpEELV.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>