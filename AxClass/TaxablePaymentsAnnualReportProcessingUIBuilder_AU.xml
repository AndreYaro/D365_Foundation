<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxablePaymentsAnnualReportProcessingUIBuilder_AU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxablePaymentsAnnualReportProcessingUIBuilder_AU</c> class is a UI builder for gathering invoice journal dialog for TPAR report.
/// </summary>
internal final class TaxablePaymentsAnnualReportProcessingUIBuilder_AU extends SysOperationAutomaticUIBuilder
{
    private FormStringControl postingProfilesRecIdsControl;
    private FormStringControl vendGroupIdsRecIdsControl;
    private const str PostingProfilesRecIdsControlName = 'postingProfilesRecIdsControl';
    private const str VendGroupIdsRecIdsControlName = 'vendGroupIdsRecIdsControl';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    public void postBuild()
    {
        super();

        TaxablePaymentsAnnualReportProcessingContract_AU contract = this.dataContractObject();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    public void postRun()
    {
        super();

        this.initPostingProfilesDialogField();
        this.initVendGroupIdsDialogField();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPostingProfilesDialogField</Name>
				<Source><![CDATA[
    private void initPostingProfilesDialogField()
    {
        DialogField postingProfilesField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(TaxablePaymentsAnnualReportProcessingContract_AU, parmPostingProfiles));
        postingProfilesField.registerOverrideMethod(
            methodStr(FormDateControl, lookup),
            methodStr(TaxablePaymentsAnnualReportProcessingUIBuilder_AU, postingProfilesLookup),
            this);
        postingProfilesField.lookupButton(FormLookupButton::Always);

        SysOperationDialog reportDialogBox = this.dialog();
        postingProfilesRecIdsControl = reportDialogBox.formRun().design().addControl(FormControlType::String, PostingProfilesRecIdsControlName);
        postingProfilesRecIdsControl.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingProfilesLookup</Name>
				<Source><![CDATA[
    private void postingProfilesLookup(FormStringControl _postingProfilesControl)
    {
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(VendLedger));
        QueryBuildFieldList qbfl = qbds.fields();
        qbfl.dynamic(false);
        qbfl.clearFieldList();
        qbfl.addField(fieldNum(VendLedger, PostingProfile));
        qbfl.addField(fieldNum(VendLedger, Name));

        container selectFields = [ tableNum(VendLedger), fieldNum(VendLedger, PostingProfile) ];

        SysLookupMultiSelectGrid::lookup(
            query,
            _postingProfilesControl,
            postingProfilesRecIdsControl,
            _postingProfilesControl,
            selectFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initVendGroupIdsDialogField</Name>
				<Source><![CDATA[
    private void initVendGroupIdsDialogField()
    {
        DialogField vendGroupIdsField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(TaxablePaymentsAnnualReportProcessingContract_AU, parmVendGroupIds));
        vendGroupIdsField.registerOverrideMethod(
            methodStr(FormDateControl, lookup),
            methodStr(TaxablePaymentsAnnualReportProcessingUIBuilder_AU, vendGroupIdsLookup),
            this);
        vendGroupIdsField.lookupButton(FormLookupButton::Always);

        SysOperationDialog reportDialogBox = this.dialog();
        vendGroupIdsRecIdsControl = reportDialogBox.formRun().design().addControl(FormControlType::String, vendGroupIdsRecIdsControlName);
        vendGroupIdsRecIdsControl.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendGroupIdsLookup</Name>
				<Source><![CDATA[
    private void vendGroupIdsLookup(FormStringControl _vendGroupIdsControl)
    {
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(VendGroup));
        QueryBuildFieldList qbfl = qbds.fields();
        qbfl.dynamic(false);
        qbfl.clearFieldList();
        qbfl.addField(fieldNum(VendGroup, VendGroup));
        qbfl.addField(fieldNum(VendGroup, Name));

        container selectFields = [ tableNum(VendGroup), fieldNum(VendGroup, VendGroup) ];

        SysLookupMultiSelectGrid::lookup(
            query,
            _vendGroupIdsControl,
            vendGroupIdsRecIdsControl,
            _vendGroupIdsControl,
            selectFields);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>