<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxablePaymentsAnnualReportVersionControl_AU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxablePaymentsAnnualReportVersionControl_AU</c> class is the class
/// for tracking the report versions of the Australian Taxable Payments Annual Report (TPAR).
/// </summary>
internal class TaxablePaymentsAnnualReportVersionControl_AU
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new version.
    /// </summary>
    /// <param name = "_parameters">A parameters object.</param>
    internal void newVersion(TaxablePaymentsAnnualReportVersionContract_AU _parameters)
    {
        TaxablePaymentsAnnualReportVersion_AU version;
        TaxablePaymentsAnnualReportPeriod_AU period = _parameters.getRecord();
        ttsbegin;
        version.initValue();
        version.ReportPeriodId = period.RecId;
        version.VersionNum = period.getLatestVersionNum() + 1;
        version.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the selected version.
    /// </summary>
    /// <param name = "_parameters">A parameters object.</param>
    internal void deleteVersion(TaxablePaymentsAnnualReportVersionContract_AU _parameters)
    {
        TaxablePaymentsAnnualReportVersion_AU version = _parameters.getRecord();
        if (version.RecId && version.Status != TaxablePaymentsAnnualReportVersionStatus_AU::Sent && version.validateDelete())
        {
            ttsbegin;
            version.selectForUpdate(true);
            version.delete();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the selected report version as Processing.
    /// </summary>
    /// <param name = "_parameters">A parameters object.</param>
    internal void process(TaxablePaymentsAnnualReportVersionContract_AU _parameters)
    {
        TaxablePaymentsAnnualReportVersion_AU version = _parameters.getRecord();

        if (version.Status == TaxablePaymentsAnnualReportVersionStatus_AU::Sent)
        {
            if (version.VersionNum == TaxablePaymentsAnnualReportVersion_AU::findLatestVersion(version.ReportPeriodId).VersionNum)
            {
                if (Box::yesNo("@TaxablePaymentsAnnualReport:YouAreGoingToBackToProcessingFromSent",
                           DialogButton::No,
                           "@TaxablePaymentsAnnualReport:Processing") == DialogButton::No)
                {
                    return;
                }
            }
            else
            {
                throw error("@TaxablePaymentsAnnualReport:StatusValidate");
            }
        }

        TaxablePaymentsAnnualReportProcessingController_AU controller = TaxablePaymentsAnnualReportProcessingController_AU::construct();
        controller.initContract(version);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the selected report version as Sent.
    /// </summary>
    /// <param name = "_parameters">A parameters object.</param>
    internal void sent(TaxablePaymentsAnnualReportVersionContract_AU _parameters)
    {
        TaxablePaymentsAnnualReportVersion_AU version = _parameters.getRecord();
        if (version.Status != TaxablePaymentsAnnualReportVersionStatus_AU::Sent)
        {
            ttsbegin;

            version.selectForUpdate(true);
            version.Status = TaxablePaymentsAnnualReportVersionStatus_AU::Sent;
            version.update();

            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>