<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjJournalTransMapForm_ProdRoute</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjJournalTransMapForm_ProdRoute extends ProjJournalTransMapForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activityNumberFieldId</Name>
				<Source><![CDATA[
    protected FieldId activityNumberFieldId()
{
    return fieldNum(ProdRouteProj, ActivityNumber);
}

]]></Source>
			</Method>
			<Method>
				<Name>calcType</Name>
				<Source><![CDATA[
    private ItemCalcType calcType()
{
    ProdRouteProj prodRouteProj;

    prodRouteProj = projJournalTransMap;

    return prodRouteProj.CalcType;
}

]]></Source>
			</Method>
			<Method>
				<Name>canValidate</Name>
				<Source><![CDATA[
    /// <summary>
/// Validates if the current record should be checked for Category Ids
/// </summary>
/// <returns>
/// true if record should be checked; false otherwise
/// </returns>
protected boolean canValidate()
{
    ProdRoute   prodRoute = childBuffer as ProdRoute;
    RouteGroup  routeGroup = prodRoute.routeGroup();
    boolean     canValidate;

    switch (this.calcType())
    {
        case ItemCalcType::Setup:
            canValidate = routeGroup.CalcSetUp;
            break;
        case ItemCalcType::Process:
            canValidate = routeGroup.CalcProc;
            break;
        case ItemCalcType::Qty:
            canValidate = routeGroup.CalcQty;
            break;
    }

    return canValidate;
}

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionField</Name>
				<Source><![CDATA[
    protected DimensionDefault getDimensionField()
{
    ProdRoute    prodRoute = childBuffer as ProdRoute;

    return prodRoute.DefaultDimension;
}

]]></Source>
			</Method>
			<Method>
				<Name>getProjCategoryIdField</Name>
				<Source><![CDATA[
    protected ProjCategoryId getProjCategoryIdField()
{
    ProdRoute       prodRoute = childBuffer as ProdRoute;
    ProjCategoryId  categoryId;

    switch (this.calcType())
    {
        case ItemCalcType::Setup:
            categoryId = prodRoute.SetUpCategoryId;
            break;
        case ItemCalcType::Process:
            categoryId = prodRoute.ProcessCategoryId;
            break;
        case ItemCalcType::Qty:
            categoryId = prodRoute.QtyCategoryId;
            break;
    }

    return categoryId;
}

]]></Source>
			</Method>
			<Method>
				<Name>getQtyField</Name>
				<Source><![CDATA[
    protected ProjQtyEmpl getQtyField()
{
    ProdRoute    prodRoute = childBuffer as ProdRoute;
    ProjQtyEmpl  qty;

    switch (this.calcType())
    {
        case ItemCalcType::Setup:
            qty = prodRoute.CalcSetUp;
            break;
        case ItemCalcType::Process:
            qty = prodRoute.CalcProc;
            break;
        case ItemCalcType::Qty:
            qty = prodRoute.CalcQty;
            break;
    }

    return qty;
}

]]></Source>
			</Method>
			<Method>
				<Name>getResourceField</Name>
				<Source><![CDATA[
    protected ResourceRecId getResourceField()
{
    ProdRoute    prodRoute = childBuffer as ProdRoute;

    return ResourceFacade::findByResourceBackingEntity(prodRoute.getResource(true,true));
}

]]></Source>
			</Method>
			<Method>
				<Name>getTransDateField</Name>
				<Source><![CDATA[
    protected TransDate getTransDateField()
{
    ProdRoute    prodRoute = childBuffer as ProdRoute;

    return prodRoute.FromDate;
}

]]></Source>
			</Method>
			<Method>
				<Name>initProdRouteProj</Name>
				<Source><![CDATA[
    void initProdRouteProj(ItemCalcType _itemCalcType)
{
    ProdTable prodTable;
    ProdRoute    prodRoute = childBuffer as ProdRoute;

    prodTable = prodRoute.prodTable();

    this.setTransDateField((prodRoute.FromDate ? prodRoute.FromDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));

    //this.setEmplIdField(prodRoute.wrkCtrTable().EmplId);
    projJournalTransMap.ProjId = prodTable.ProjId;
    switch (_itemCalcType)
    {
        case ItemCalcType::Setup:
            this.setProjCategoryIdField(prodRoute.SetUpCategoryId);
            break;
        case ItemCalcType::Process:
            this.setProjCategoryIdField(prodRoute.ProcessCategoryId);
            break;
        case ItemCalcType::Qty:
            this.setProjCategoryIdField(prodRoute.QtyCategoryId);
            break;
    }
    projJournalTransMap.Txt = '';
    projJournalTransMap.ProjTransDate = (prodRoute.FromDate ? prodRoute.FromDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

    if (projJournalTransMap.ProjId)
    {
        this.initFromProjTable(ProjTable::find(prodTable.ProjId));
    }

    //if (prodJournalTable.ProjLinePropertyId)
    //    projJournalTransMap.ProjLinePropertyId = prodJournalTable.ProjLinePropertyId;

    if (this.getProjCategoryIdField())
    {
        projJournalTransMap.ProjTaxItemGroupId = ProjCategory::find(this.getProjCategoryIdField()).TaxItemGroupId;
        //if (!prodJournalTable.ProjLinePropertyId && !projJournalTransMap.ProjId)
        //{
        //    this.setLineProperty();
        //}
    }

    if (this.resource())
    {
        this.setTransDate();
        if (!projJournalTransMap.ProjId)
        {
            this.setHourSalesPrice();
            this.setHourCostPrice();
        }
    }

    projJournalTransMap.ActivityNumber = prodTable.ActivityNumber;
}

]]></Source>
			</Method>
			<Method>
				<Name>mustValidateReqActivity</Name>
				<Source><![CDATA[
    protected boolean mustValidateReqActivity()
{
    return false;
}

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionField</Name>
				<Source><![CDATA[
    protected void setDimensionField(DimensionDefault _defaultdimension)
{
    //No need to set Dimension
}

]]></Source>
			</Method>
			<Method>
				<Name>setProjCategoryIdField</Name>
				<Source><![CDATA[
    protected void setProjCategoryIdField(ProjCategoryId _projCategoryId)
{
    ProdRoute       prodRoute = childBuffer as ProdRoute;

    switch (this.calcType())
    {
        case ItemCalcType::Setup:
            prodRoute.SetUpCategoryId = _projCategoryId;
            break;
        case ItemCalcType::Process:
            prodRoute.ProcessCategoryId = _projCategoryId;
            break;
        case ItemCalcType::Qty:
            prodRoute.QtyCategoryId = _projCategoryId;
            break;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setQtyField</Name>
				<Source><![CDATA[
    protected void setQtyField(ProjQtyEmpl _qty)
{
    ProdRoute    prodRoute = childBuffer as ProdRoute;

    switch (this.calcType())
    {
        case ItemCalcType::Setup:
            prodRoute.CalcSetUp = _qty;
            break;
        case ItemCalcType::Process:
            prodRoute.CalcProc = _qty;
            break;
        case ItemCalcType::Qty:
            prodRoute.CalcQty = _qty;
            break;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>setTransDateField</Name>
				<Source><![CDATA[
    protected void setTransDateField(TransDate _transDate)
{
    //No need to set TransDate
}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>