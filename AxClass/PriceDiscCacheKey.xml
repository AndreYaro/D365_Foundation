<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscCacheKey</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides the logic for creating a cache key that holds
/// values used during price discount calculations.
/// </summary>
class PriceDiscCacheKey
{
    public PriceType                   Relation;
    public PriceDiscProductCodeType    ItemCode;
    public PriceDiscItemRelation       ItemRel;
    public PriceDiscPartyCodeType      AccountCode;
    public CustVendAC                  AccountRel;
    public InventDimId                 InventDimId;
    public PriceDiscParameters         priceDiscParameters;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PriceDiscCacheKey construct()
    {
        return new PriceDiscCacheKey();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>PriceDiscCacheKey</c>.
    /// </summary>
    /// <param name = "_relation">A <c>PriceType</c> value.</param>
    /// <param name = "_itemCode">The item code.</param>
    /// <param name = "_itemRel">An <c>ItemId</c> value.</param>
    /// <param name = "_accountCode">The account code.</param>
    /// <param name = "_accountRel">The customer or vendor account id.</param>
    /// <param name = "_inventDimId">An <c>InventDimId</c> value.</param>
    public void initialize(
        PriceType                   _relation,
        PriceDiscProductCodeType    _itemCode,
        PriceDiscItemRelation       _itemRel,
        PriceDiscPartyCodeType      _accountCode,
        CustVendAC                  _accountRel,
        InventDimId                 _inventDimId,
        PriceDiscParameters         _priceDiscParameters)
    {
        this.Relation                   = _relation;
        this.ItemCode                   = _itemCode;
        this.ItemRel                    = _itemRel;
        this.AccountCode                = _accountCode;
        this.AccountRel                 = _accountRel;
        this.InventDimId                = _inventDimId;
        this.priceDiscParameters        = _priceDiscParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Composes a key based of the passed values and the current data area id.
    /// </summary>
    /// <returns>A container representing the key</returns>
    public container pack()
    {
        str key;

        key = curext()                      + 
              ' '                           +
              int2str(enum2int(relation))   +
              ' '                           +
              int2str(itemCode)             +
              ' '                           +
              itemRel                       +
              ' '                           +
              int2str(accountCode)          +
              ' '                           +
              accountRel                    +
              ' '                           +
              (priceDiscParameters? priceDiscParameters.parmUnitId(): '')+
              ' '                           +
              (priceDiscParameters? priceDiscParameters.parmCurrencyCode(): '')+
              ' '                          +
             inventDimId;

        #isoCountryRegionCodes
        boolean countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        
        if (countryRegion_RU)
        {
            key += ' ' + (priceDiscParameters? int642str(priceDiscParameters.parmAgreementHeaderExt_RU()): '');
        }

        return [key];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>