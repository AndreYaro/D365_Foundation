<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportCache_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the cach for tax report.
/// </summary>
public class TaxReportCache_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearAllScopes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clear all scopes in the <c>SysGlobalCache</c>
    /// </summary>
    public static void clearAllScopes()
    {
        SysGlobalCache       c = classfactory.globalCache();
        DictEnum             dictEnum = new DictEnum(enumNum(TaxReportCacheScope_IN));
        int                  i;

        for (i = 0; i <= dictEnum.values(); i++)
        {
            TaxReportCache_IN::clearScope(dictEnum.index2Value(i));
        }

        TaxReportCache_IN::clearAllScopesServer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearAllScopesServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clear all scopes in the <c>SysGlobalCache</c> on the server
    /// </summary>
    private static void clearAllScopesServer()
    {
        TaxReportCache_IN::clearAllScopes();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearScope</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clear the <c>SysGlobalCache</c> with the specified scope.
    /// </summary>
    /// <param name="_scope">
    /// The <c>TaxReportCodeCacheScope_IN</c>.
    /// </param>
    public static void clearScope(TaxReportCacheScope_IN _scope)
    {
        SysGlobalCache c = classfactory.globalCache();
        c.clear(TaxReportCache_IN::getCacheScopeStr(_scope));

        TaxReportCache_IN::clearScopeServer(_scope);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearScopeServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clear the <c>SysGlobalCache</c> with the specified scope on the server.
    /// </summary>
    /// <param name="_scope">
    /// The <c>TaxReportCodeCacheScope_IN</c>.
    /// </param>
    private static void clearScopeServer(TaxReportCacheScope_IN _scope)
    {
        TaxReportCache_IN::clearScope(_scope);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCacheScopeStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the cache scope string for the specified <c>TaxReportCodeCacheScope_IN</c>.
    /// </summary>
    /// <param name="_scope">
    /// The <c>TaxReportCodeCacheScope_IN</c>.
    /// </param>
    /// <returns>
    /// The string for the specified <c>TaxReportCodeCacheScope_IN</c>.
    /// </returns>
    private static str getCacheScopeStr(TaxReportCacheScope_IN _scope)
    {
        // Int2Str is used instead of Enum2Str to get the int
        // value like '2' instead of the string value for
        // the scope to ensure uniqueness. The _scope enum
        // is implicitly cast to an int by this call. This
        // avoids calling strfmt() which causes a kernel
        // callback running under IL and is therefore significantly
        // slower.
        return 'TaxReportCodeCacheScope_' + int2str(_scope);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the value in SysGlobalCache with the specified <c>TaxReportCodeCacheScope_IN</c> and key.
    /// </summary>
    /// <param name="_scope">
    /// The <c>TaxReportCodeCacheScope_IN</c>.
    /// </param>
    /// <param name="_key">
    /// The key of the value.
    /// </param>
    /// <returns>
    /// The value.
    /// </returns>
    public static container getValue(TaxReportCacheScope_IN _scope, AnyType _key)
    {
        SysGlobalCache c = classfactory.globalCache();

        return c.get(TaxReportCache_IN::getCacheScopeStr(_scope), _key, conNull());
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert the value into the SysGlobalCache with the specified <c>TaxReportCodeCacheScope_IN</c> and key.
    /// </summary>
    /// <param name="_scope">
    /// The <c>TaxReportCodeCacheScope_IN</c>.
    /// </param>
    /// <param name="_key">
    /// The key of the value.
    /// </param>
    /// <param name="_value">
    /// The value.
    /// </param>
    public static void insertValue(TaxReportCacheScope_IN _scope, AnyType _key, container _value)
    {
        SysGlobalCache c = classfactory.globalCache();
        c.set(TaxReportCache_IN::getCacheScopeStr(_scope), _key, _value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create the new instance of <c>TaxReportCodeCache_IN</c>.
    /// </summary>
    /// <returns>
    /// The new instance of <c>TaxReportCodeCache_IN</c>.
    /// </returns>
    public static TaxReportCache_IN instance()
    {
        return new TaxReportCache_IN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the value exists with the specified <c>TaxReportCodeCacheScope_IN</c> and key.
    /// </summary>
    /// <param name="_scope">
    /// The <c>TaxReportCodeCacheScope_IN</c>.
    /// </param>
    /// <param name="_key">
    /// The key.
    /// </param>
    /// <returns>
    /// True if the value exists; otherwise, false.
    /// </returns>
    public static boolean valueExists(TaxReportCacheScope_IN _scope, container _key)
    {
        SysGlobalCache c = classfactory.globalCache();
        return (c.get(TaxReportCache_IN::getCacheScopeStr(_scope), _key) != conNull());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>