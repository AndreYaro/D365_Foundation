<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostSheetModeStrategyEdit</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CostSheetModeStrategyEdit</c> class represents the costing sheet properties in edit mode.
/// </summary>
/// <remarks>
///    Edit mode is used when the costing sheet structure is edited.
/// </remarks>
class CostSheetModeStrategyEdit extends CostSheetModeStrategy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canModifyCostSheet</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the costing sheet can be modified in the current mode.
    /// </summary>
    /// <returns>
    ///    true if the costing sheet can be modified; otherwise, false.
    /// </returns>
    public boolean canModifyCostSheet()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates the current costing sheet mode type.
    /// </summary>
    /// <returns>
    ///    The costing sheet mode type.
    /// </returns>
    public CostSheetMode getType()
    {
        return CostSheetMode::Edit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustDisplayUnMappedUnCoveredCostGroups</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the cost groups that are not presented in the costing sheet or covered by the
    ///    default cost groups must be added to the costing sheet structure in the current mode.
    /// </summary>
    /// <returns>
    ///    true if the unmapped cost groups must be added; otherwise, false.
    /// </returns>
    public boolean mustDisplayUnMappedUnCoveredCostGroups()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustFindUnMappedCostGroups</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the unmapped cost groups must be found in the current mode.
    /// </summary>
    /// <returns>
    ///    true if the cost groups must be found; otherwise, false.
    /// </returns>
    public boolean mustFindUnMappedCostGroups()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustLoadCalculationBasisAndFactors</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the indirect cost basis and factors must be loaded in the current mode.
    /// </summary>
    /// <returns>
    ///    true if the basis and factors must be loaded; otherwise, false.
    /// </returns>
    public boolean mustLoadCalculationBasisAndFactors()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustLoadCostGroupSubnodes</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the subnodes of the cost group nodes must be loaded in the current mode.
    /// </summary>
    /// <returns>
    ///    true if the cost group subnodes must be loaded; otherwise, false.
    /// </returns>
    public boolean mustLoadCostGroupSubnodes()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustLoadSubnodes</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the subnodes of the costing sheet nodes must be loaded in the current mode.
    /// </summary>
    /// <returns>
    ///    true if the subnodes must be loaded; otherwise, false.
    /// </returns>
    public boolean mustLoadSubnodes()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static CostSheetModeStrategyEdit construct()
    {
        return new CostSheetModeStrategyEdit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParameter</Name>
				<Source><![CDATA[
        public static CostSheetModeStrategyEdit newParameter(CostPriceType _costType)
    {
        CostSheetModeStrategyEdit modeStrategy = CostSheetModeStrategyEdit::construct();
        modeStrategy.parmCostType(_costType);

        return modeStrategy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
