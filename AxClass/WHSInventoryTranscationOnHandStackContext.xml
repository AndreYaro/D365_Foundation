<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryTranscationOnHandStackContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventoryTranscationOnHandStackContext</c> class is used to connect the warehouse inventory transactions to the inventory stack.
/// </summary>
internal final class WHSInventoryTranscationOnHandStackContext implements System.IDisposable
{
    private static WHSInventoryTranscationOnHandStackContext instance;

    private RecordInsertList inventSumDeltaRecordInsertList;
    private RecordInsertList whsInventReserveDeltaRecordInsertList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        inventSumDeltaRecordInsertList.insertDatabase();
        whsInventReserveDeltaRecordInsertList.insertDatabase();

        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        this.inventSumDeltaRecordInsertList = new RecordInsertList(tableNum(InventSumDelta), true, true, true, true, true);
        this.whsInventReserveDeltaRecordInsertList = new RecordInsertList(tableNum(WHSInventReserveDelta), true, true, true, true, true);

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInventSumDelta</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void addInventSumDelta(InventSumDelta _inventSumDelta)
    {
        _inventSumDelta.setAvailFields();
        _inventSumDelta.setInventDimFields();
        _inventSumDelta.setIsExcludedFromInventoryValue();

        inventSumDeltaRecordInsertList.add(_inventSumDelta);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addWHSInventReserveDelta</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void addWHSInventReserveDelta(WHSInventReserveDelta _inventReserveDelta)
    {
        whsInventReserveDeltaRecordInsertList.add(_inventReserveDelta);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSInventoryTranscationOnHandStackContext construct()
    {
        return new WHSInventoryTranscationOnHandStackContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSInventoryTranscationOnHandStackContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>