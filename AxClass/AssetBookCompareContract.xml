<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetBookCompareContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>AssetBookCompare</c> SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>AssetBookCompare</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationGroupAttribute('FirstBook', "@SYS96917", '1'),
    SysOperationGroupAttribute('SecondBook', "@SYS96918", '2')
]
public class AssetBookCompareContract implements SysOperationValidatable
{
    AssetBookMergeId firstAssetBookId;
    AssetBookMergeId secondAssetBookId;
    StartDate        startDate;
    LedgerCurrencySelection ledgerCurrencySelection;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFirstAssetBookId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter BookId1.
    /// </summary>
    /// <param name="_firstAssetBookId">
    /// The new value of the datacontract parameter BookId1; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter BookId1.
    /// </returns>
    [
        DataMemberAttribute('BookId1'),
        SysOperationLabelAttribute(literalstr("@SYS95794")),
        SysOperationGroupMemberAttribute('FirstBook'),
        SysOperationDisplayOrderAttribute('1'),
        SysOperationHelpTextAttribute(literalstr("@SYS97093"))
    ]
    public AssetBookMergeId parmFirstAssetBookId(AssetBookMergeId _firstAssetBookId = firstAssetBookId)
    {
        firstAssetBookId = _firstAssetBookId;
        return firstAssetBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSecondAssetBookId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter BookId2.
    /// </summary>
    /// <param name="_secondAssetBookId">
    /// The new value of the datacontract parameter BookId2; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter BookId2.
    /// </returns>
    [
        DataMemberAttribute('BookId2'),
        SysOperationLabelAttribute(literalstr("@SYS95794")),
        SysOperationGroupMemberAttribute('SecondBook'),
        SysOperationDisplayOrderAttribute('2'),
        SysOperationHelpTextAttribute(literalstr("@SYS97093"))
    ]
    public AssetBookMergeId parmSecondAssetBookId(AssetBookMergeId _secondAssetBookId = secondAssetBookId)
    {
        secondAssetBookId = _secondAssetBookId;
        return secondAssetBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartdate</Name>
				<Source><![CDATA[
            [
        DataMemberAttribute('startdate')

    ]
    public StartDate parmStartdate(StartDate _startDate = startDate)
    {
        startDate = _startDate;

        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencySelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or Sets the <C>ledgerCurrencySelection</C> parameter.
    /// </summary>
    /// <param name="_ledgerCurrencySelection">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <C>ledgerCurrencySelection</C> parameter.
    /// </returns>
    [
        DataMemberAttribute('CurrencySelection'),
        SysOperationLabelAttribute(literalstr("@SYS129076")),
        SysOperationHelpTextAttribute(literalstr("@FixedAssets:FA_Reports_CurrencySelectionText")),
        SysOperationGroupMemberAttribute('FirstBook'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public LedgerCurrencySelection parmCurrencySelection(LedgerCurrencySelection _ledgerCurrencySelection = ledgerCurrencySelection)
    {
        ledgerCurrencySelection = _ledgerCurrencySelection;
        return ledgerCurrencySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the SSRS Report Parameters.
    /// </summary>
    /// <returns>
    ///    true if no errors; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if ( firstAssetBookId == '' || secondAssetBookId == '')
        {
            ret = checkFailed("@SYS97593");
        }
        else if (firstAssetBookId == secondAssetBookId)
        {
            ret = checkFailed("@SYS99489");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>