<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFulfillmentRejectData</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailFulfillmentRejectData</c> is used as a returned data type from Fulfillment calculator.
/// </summary>
public class RetailFulfillmentRejectData
{
    private real quantityOrdered;
    private real quantityPicked;
    private real quantityPacked;
    private real quantityInvoiced;
    private RetailFulfillmentLineStatus fulfillmentLineStatus;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Default constructor.
    /// </summary>
    /// <param name = "_quantityOrdered">Quantity ordered.</param>
    /// <param name = "_quantityPicked">Quantity picked.</param>
    /// <param name = "_quantityPacked">Quantity packed.</param>
    /// <param name = "_quantityInvoiced">Quantity invoiced.</param>
    /// <param name = "_fulfillmentLineStatus">Fulfillment line status.</param>
    protected void new(
        real _quantityOrdered,
        real _quantityPicked,
        real _quantityPacked,
        real _quantityInvoiced,
        RetailFulfillmentLineStatus _fulfillmentLineStatus)
    {
        this.quantityOrdered = _quantityOrdered;
        this.quantityPicked = _quantityPicked;
        this.quantityPacked= _quantityPacked;
        this.quantityInvoiced = _quantityInvoiced;
        this.fulfillmentLineStatus= _fulfillmentLineStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Static construct method.
    /// </summary>
    /// <param name = "_quantityOrdered">Quantity ordered.</param>
    /// <param name = "_quantityPicked">Quantity picked.</param>
    /// <param name = "_quantityPacked">Quantity packed.</param>
    /// <param name = "_quantityInvoiced">Quantity invoiced.</param>
    /// <param name = "_fulfillmentLineStatus">Fulfillment line status.</param>
    /// <returns>Returns a new instance of <c>RetailFulfillmentRejectData</c> class.</returns>
    public static RetailFulfillmentRejectData construct (
        real _quantityOrdered,
        real _quantityPicked,
        real _quantityPacked,
        real _quantityInvoiced,
        RetailFulfillmentLineStatus _fulfillmentLineStatus)
    {
        return new RetailFulfillmentRejectData(
            _quantityOrdered,
            _quantityPicked,
            _quantityPacked,
            _quantityInvoiced,
            _fulfillmentLineStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantityOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the ordered quantity.
    /// </summary>
    /// <param name = "_quantityOrdered">Ordered value.</param>
    /// <returns>Returns ordered value.</returns>
    public real parmQuantityOrdered(real _quantityOrdered = quantityOrdered)
    {
        if (!prmIsDefault(_quantityOrdered))
        {
            quantityOrdered = _quantityOrdered;
        }

        return quantityOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantityPicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the picked quantity.
    /// </summary>
    /// <param name = "_quantityPicked">Picked value.</param>
    /// <returns>Returns picked value.</returns>
    public real parmQuantityPicked(real _quantityPicked = quantityPicked)
    {
        if (!prmIsDefault(_quantityPicked))
        {
            quantityPicked = _quantityPicked;
        }

        return quantityPicked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantityPacked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the packed quantity.
    /// </summary>
    /// <param name = "_quantityPacked">Packed value.</param>
    /// <returns>Returns packed value.</returns>
    public real parmQuantityPacked(real _quantityPacked = quantityPacked)
    {
        if (!prmIsDefault(_quantityPacked))
        {
            quantityPacked = _quantityPacked;
        }

        return quantityPacked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantityInvoiced</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the invoiced quantity.
    /// </summary>
    /// <param name = "_quantityInvoiced">Invoiced value.</param>
    /// <returns>Returns invoiced value.</returns>
    public real parmQuantityInvoiced(real _quantityInvoiced = quantityInvoiced)
    {
        if (!prmIsDefault(_quantityInvoiced))
        {
            quantityInvoiced = _quantityInvoiced;
        }

        return quantityInvoiced;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFulfillmentLineStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the fulfillment line status.
    /// </summary>
    /// <param name = "_quantityInvoiced">Fulfillment line status value.</param>
    /// <returns>Returns fulfillment line status value.</returns>
    public RetailFulfillmentLineStatus parmFulfillmentLineStatus(RetailFulfillmentLineStatus _fulfillmentLineStatus = fulfillmentLineStatus)
    {
        if (!prmIsDefault(_fulfillmentLineStatus))
        {
            fulfillmentLineStatus = _fulfillmentLineStatus;
        }

        return fulfillmentLineStatus;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>