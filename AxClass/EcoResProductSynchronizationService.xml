<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductSynchronizationService</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductSynchronizationService
{
    RefRecId    product;
    Set         synchronizationAgentSet;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>attachSynchronizationAgent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Attaches an instance of the <c>EcoResProductSynchronizationAgent</c> class to the processing list.
    /// </summary>
    /// <param name="_synchronizationAgent">
    ///    An instance of the <c>EcoResProductSynchronizationAgent</c> class.
    /// </param>
    public void attachSynchronizationAgent(EcoResProductSynchronizationAgent _synchronizationAgent)
    {
        if (synchronizationAgentSet == null)
        {
            synchronizationAgentSet = new Set(Types::Class);
        }

        // attach synchronization agent
        synchronizationAgentSet.add(_synchronizationAgent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProduct</Name>
				<Source><![CDATA[
        public RefRecId parmProduct(RefRecId _product = product)
    {
        product = _product;

        return product;
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronize</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Synchronizes the product attributes for all the companies to which the product has been released.
    /// </summary>
    public void synchronize()
    {
        // find product buffer
        EcoResProduct ecoResProduct = EcoResProduct::find(product);

        // get all legal entites, where the current product is available in
        Set legalEntitiesSet = ecoResProduct.getCompaniesWhereReleased();

        // check if product has been released
        if (legalEntitiesSet && !legalEntitiesSet.empty())
        {
            SetEnumerator setEnumerator = legalEntitiesSet.getEnumerator();

            ttsbegin;

            // sync product attributes within each legal entity
            while (setEnumerator.moveNext())
            {
                DataAreaId dataAreaId = setEnumerator.current();

                this.synchronizeInCompanyContext(dataAreaId);
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeInCompanyContext</Name>
				<Source><![CDATA[
        protected void synchronizeInCompanyContext(DataAreaId _dataAreaId)
    {
        changecompany (_dataAreaId)
        {
            if (synchronizationAgentSet && !synchronizationAgentSet.empty())
            {
                SetEnumerator setEnumerator = synchronizationAgentSet.getEnumerator();

                while (setEnumerator.moveNext())
                {
                    EcoResProductSynchronizationAgent productSynchronizationAgent = setEnumerator.current();

                    productSynchronizationAgent.synchronizeInCompanyContext();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static EcoResProductSynchronizationService construct()
    {
        return new EcoResProductSynchronizationService();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromProduct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates instance of the <c>EcoResProductSynchronizationService</c> class from the product reference.
    /// </summary>
    /// <param name="_product">
    ///    An instance of the <c>EcoResProduct</c> buffer.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>EcoResProductSynchronizationService</c> class.
    /// </returns>
    public static EcoResProductSynchronizationService newFromProduct(RefRecId  _product)
    {
        EcoResProductSynchronizationService ecoResProductSynchronizationService = EcoResProductSynchronizationService::construct();
        ecoResProductSynchronizationService.parmProduct(_product);

        return ecoResProductSynchronizationService;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
