<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventABCContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for InventABC SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the InventABC SSRS Report.
/// </remarks>
[DataContractAttribute]
public class InventABCContract implements SysOperationValidatable
{
    TransDate       fromDate;
    TransDate       toDate;
    InterestPct     interest;
    Percent         categoryA;
    Percent         categoryB;
    Percent         categoryC;
    ABCModel        abcModel;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmABCModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ABCModel.
    /// </summary>
    /// <param name="_abcModel">
    /// The new value of the datacontract parameter ABCModel; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ABCModel
    /// </returns>
    [
        DataMemberAttribute('ABCModel'),
        SysOperationLabelAttribute(literalStr("@SYS23230")),
        SysOperationHelpTextAttribute(literalStr("@SYS86064")),
        SysOperationDisplayOrderAttribute('7')
    ]
    public ABCModel parmABCModel(ABCModel _abcModel = abcModel)
    {
        abcModel = _abcModel;
        return abcModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryA</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter CategoryA.
    /// </summary>
    /// <param name="_categoryA">
    /// The new value of the datacontract parameter CategoryA; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter CategoryA
    /// </returns>
    [
        DataMemberAttribute('CategoryA'),
        SysOperationLabelAttribute(literalStr("@SYS1334")),
        SysOperationHelpTextAttribute(literalStr("@SYS26741")),
        SysOperationDisplayOrderAttribute('4')
    ]
    public Percent parmCategoryA(Percent _categoryA = categoryA)
    {
        categoryA = _categoryA;
        return categoryA;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryB</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter CategoryB.
    /// </summary>
    /// <param name="_categoryB">
    /// The new value of the datacontract parameter CategoryB; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter CategoryB
    /// </returns>
    [
        DataMemberAttribute('CategoryB'),
        SysOperationLabelAttribute(literalStr("@SYS12326")),
        SysOperationHelpTextAttribute(literalStr("@SYS26742")),
        SysOperationDisplayOrderAttribute('5')
    ]
    public Percent parmCategoryB(Percent _categoryB = categoryB)
    {
        categoryB = _categoryB;
        return categoryB;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter CategoryC.
    /// </summary>
    /// <param name="_categoryC">
    /// The new value of the datacontract parameter CategoryC; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter CategoryC
    /// </returns>
    [
        DataMemberAttribute('CategoryC'),
        SysOperationLabelAttribute(literalStr("@SYS4633")),
        SysOperationHelpTextAttribute(literalStr("@SYS26743")),
        SysOperationDisplayOrderAttribute('6')
    ]
    public Percent parmCategoryC(Percent _categoryC = categoryC)
    {
        categoryC = _categoryC;
        return categoryC;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalStr("@SYS36679")),
        SysOperationHelpTextAttribute(literalStr("@SYS53025")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Interest.
    /// </summary>
    /// <param name="_interest">
    /// The new value of the datacontract parameter Interest; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Interest
    /// </returns>
    [
        DataMemberAttribute('Interest'),
        SysOperationLabelAttribute(literalStr("@SYS10498")),
        SysOperationHelpTextAttribute(literalStr("@SYS76846")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public InterestPct parmInterest(InterestPct _interest = interest)
    {
        interest = _interest;
        return interest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalStr("@SYS14656")),
        SysOperationHelpTextAttribute(literalStr("@SYS53026")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the values of the parameters.
    /// </summary>
    /// <returns>
    ///    true if all values are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (this.parmABCModel() == ABCModel::Link)
        {
            if (this.parmInterest() <= 0)
            {
                error("@SYS8377");
                isValid = false;
            }
            if (! this.parmToDate())
            {
                error("@SYS24515");
                isValid = false;
            }
        }

        if (this.parmInterest() < 0 )
        {
            error("@SYS118311");
            isValid = false;
        }

        if (this.parmCategoryA() < 0)
        {
            error("@SYS1724");
            isValid = false;
        }

        if (this.parmCategoryB() < 0)
        {
            error("@SYS10103");
            isValid = false;
        }

        if (this.parmCategoryC() < 0)
        {
            error("@SYS1723");
            isValid = false;
        }

        if ((this.parmCategoryA() + this.parmCategoryB() + this.parmCategoryC()) != 100)
        {
            error("@SYS17104");
            isValid = false;
        }

        if (this.parmFromDate() && this.parmToDate() && this.parmFromDate() > this.parmToDate())
        {
            error("@SYS91020");
            isValid = false;
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>