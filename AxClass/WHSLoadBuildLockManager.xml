<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLoadBuildLockManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>WHSLoadBuildLockManager</c> class manages application locks for the load build process.
/// </summary>
internal final class WHSLoadBuildLockManager
{
    private ReqReaderWriterLock reqReaderWriterLock = ReqReaderWriterLock::construct();
    private Set locks = new Set(Types::String);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        reqReaderWriterLock.parmForceUserConnectionLock(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterWriterLock</Name>
				<Source><![CDATA[
    internal static void enterWriterLock(str _lockName)
    {
        WHSLoadBuildLockManager::instance().instanceEnterWriterLock(_lockName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instanceEnterWriterLock</Name>
				<Source><![CDATA[
    private void instanceEnterWriterLock(str _lockName)
    {
        if (this.instanceHasWriterLock(_lockName))
        {
            return;
        }

        Connection connection = new Connection();
        reqReaderWriterLock.setConnection(_lockName, connection);
        reqReaderWriterLock.enterWriterLock(_lockName);
        locks.add(_lockName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>releaseLock</Name>
				<Source><![CDATA[
    internal static void releaseLock(str _lockName)
    {
        WHSLoadBuildLockManager::instance().instanceReleaseLock(_lockName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instanceReleaseLock</Name>
				<Source><![CDATA[
    private void instanceReleaseLock(str _lockName)
    {
        locks.remove(_lockName);
        ReqReaderWriterLock::releaseSQLLock(_lockName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasWriterLock</Name>
				<Source><![CDATA[
    static internal boolean hasWriterLock(str _lockName)
    {
        return WHSLoadBuildLockManager::instance().instanceHasWriterLock(_lockName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instanceHasWriterLock</Name>
				<Source><![CDATA[
    private boolean instanceHasWriterLock(str _lockName)
    {
        return locks.in(_lockName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    private static WHSLoadBuildLockManager instance()
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        WHSLoadBuildLockManager transactionScopeInstance = SysTransactionScopeCache::get(funcName(), '', null);

        if (!transactionScopeInstance)
        {
            transactionScopeInstance = new WHSLoadBuildLockManager();
            SysTransactionScopeCache::set(funcName(), '', transactionScopeInstance);
        }

        return transactionScopeInstance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>