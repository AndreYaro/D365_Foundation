<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesFormLetter_PackingSlipProject</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DocumentStatusFactoryAttribute(DocumentStatus::ProjectPackingSlip)]
[SysOperationJournaledParametersAttribute(true)]
class       SalesFormLetter_PackingSlipProject
extends     SalesFormLetter_PackingSlip implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return SalesFormLetter_PackingSlipProject::description();
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    public DocumentStatus documentStatus()
    {
        return DocumentStatus::ProjectPackingSlip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void  new(
        identifierName _className = classstr(FormletterService),
        identifierName _methodName= methodstr(FormletterService, postSalesOrderPackingSlipProject),
        SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        super(_className, _methodName, _executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    private static ClassDescription  description()
    {
        return "@SYS10555";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPackingSlipProject</Name>
				<Source><![CDATA[
    [SysObsolete('Use SalesFormLetter::construct() instead.', false, 31\05\2017)]
    static public SalesFormLetter_PackingSlipProject newPackingSlipProject(
        identifierName _className  = classstr(FormletterService),
        identifierName _methodName = methodstr(FormletterService, postSalesOrderPackingSlipProject),
        SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        return SalesFormLetter::construct(DocumentStatus::ProjectPackingSlip, _className, _methodName, _executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPostingSalesPackingSlip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the current form status allows for posting sales order packing slips.
    /// </summary>
    /// <returns>True if the form allows for posting sales orders packing slips, false otherwise.</returns>
    public boolean isPostingSalesPackingSlip()
    {
        SalesParmUpdate salesParmUpdate = this.salesParmUpdate();
        return salesParmUpdate.Proforma == NoYes::No && salesParmUpdate.DocumentStatus == DocumentStatus::ProjectPackingSlip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>