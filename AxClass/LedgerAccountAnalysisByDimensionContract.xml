<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAccountAnalysisByDimensionContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerAccountAnalysisByDimensionContract</c> class is the data contract class for the
/// <c>LedgerAccountAnalysisByDimension</c> SSRS report.
/// </summary>
[
    DataContractAttribute,
SysOperationContractProcessingAttribute(classStr(LedgerAccountAnalysisDimensionUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
class LedgerAccountAnalysisByDimensionContract implements SysOperationValidatable
{
    Name            dimensionAttribute;
    MainAccountNum  account;
    AccountName     accountName;
    DimensionValue  fromDimensionValue;
    DimensionValue  toDimensionValue;
    FromDate        fromDate;
    ToDate          toDate;
    CurrentOperationsTax    postingLayer;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Account.
    /// </summary>
    /// <param name="_account">
    /// The new value of the datacontract parameter Account;
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Account.
    /// </returns>
    [
        DataMemberAttribute('Account'),
        SysOperationLabelAttribute(literalStr("@SYS182387")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public MainAccountNum parmAccount(MainAccountNum _account = account)
    {
        account = _account;
        return account;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountName</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter Account Name.
    /// </summary>
    /// <param name="_accountName">
    /// The new value of the datacontract parameter Account Name;
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Account Name.
    /// </returns>
    [
        DataMemberAttribute('AccountName'),
        SysOperationLabelAttribute(literalStr("@SYS179488"))
    ]
    public AccountName parmAccountName(AccountName _accountName = accountName)
    {
        accountName = _accountName;
        return accountName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionAttribute</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter DimensionAttribute.
    /// </summary>
    /// <param name="_dimensionAttribute">
    /// The new value of dimension attribute;
    /// </param>
    /// <returns>
    /// The current value of dimension attribute.
    /// </returns>
    [
        DataMemberAttribute('DimensionAttribute'),
        SysOperationLabelAttribute(literalStr("@SYS24410")),
        SysOperationDisplayOrderAttribute('5')
    ]
    public Name parmDimensionAttribute(Name _dimensionAttribute = dimensionAttribute)
    {
        dimensionAttribute = _dimensionAttribute;
        return dimensionAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter Period.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate;
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Period.
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalStr("@SYS177151")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDimensionValue</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter From Dimension value.
    /// </summary>
    /// <param name="_fromDimensionValue">
    /// The new value of the datacontract parameter From Dimension value;
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter From Dimension value.
    /// </returns>
    [
        DataMemberAttribute('FromDimensionValue'),
        SysOperationLabelAttribute(literalStr("@SYS105870")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public DimensionValue parmFromDimensionValue(DimensionValue _fromDimensionValue = fromDimensionValue)
    {
        fromDimensionValue = _fromDimensionValue;
        return fromDimensionValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayer</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter postinglayer.
    /// </summary>
    /// <param name="_postingLayer">
    /// The new value of the datacontract parameter postinglayer; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter postinglayer.
    /// </returns>
    [
        DataMemberAttribute('PostingLayer'),
        SysOperationDisplayOrderAttribute('4'),
        SysOperationLabelAttribute(literalstr("@SYS334157"))
    ]
    public CurrentOperationsTax parmPostingLayer(CurrentOperationsTax _postingLayer = postingLayer)
    {
        postingLayer = _postingLayer;
        return postingLayer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate;
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate.
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalStr("@SYS177152")),
        SysOperationDisplayOrderAttribute('7')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDimensionValue</Name>
				<Source><![CDATA[

    /// <summary>
    /// Gets or sets the value of the datacontract parameter To Dimension value.
    /// </summary>
    /// <param name="_toDimensionValue">
    /// The new value of the datacontract parameter To Dimension value;
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter To Dimension value.
    /// </returns>
    [
        DataMemberAttribute('ToDimensionValue'),
        SysOperationLabelAttribute(literalStr("@SYS103530")),
        SysOperationDisplayOrderAttribute('6')
    ]
    public DimensionValue parmToDimensionValue(DimensionValue _toDimensionValue = toDimensionValue)
    {
        toDimensionValue = _toDimensionValue;
        return toDimensionValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Validates the parameters that are entered by the user in the custom dialog.
    /// </summary>
    /// <returns>
    /// true if validations pass; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (!this.parmAccount())
        {
            //Account must be entered
            ret = checkFailed(strFmt("@SYS39376", "@SYS24500"));
        }
        if (ret && !this.parmDimensionAttribute())
        {
            //Dimension type must be entered
            ret = checkFailed(strFmt("@SYS39376", "@SYS24410"));
        }
        if (ret && this.parmFromDimensionValue() && this.parmToDimensionValue() && this.parmFromDimensionValue() > this.parmToDimensionValue())
        {
            //From Dimension should not be greater than To Dimension
            ret = checkFailed("@GLS160269");
        }
        if (ret && !this.parmFromDate())
        {
            //From date must be entered
            ret = checkFailed(strFmt("@SYS39376", "@SYS24050"));
        }
        if (ret && !this.parmToDate())
        {
            //To date must be entered
            ret = checkFailed(strFmt("@SYS39376", "@SYS36680"));
        }
        if (ret && this.parmFromDate() > this.parmToDate())
        {
            //From date must be before To date
            ret = checkFailed("@SYS91020");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>