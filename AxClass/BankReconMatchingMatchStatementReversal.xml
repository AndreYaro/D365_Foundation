<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankReconMatchingMatchStatementReversal</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>BankReconMatchingMatchStatementReversal</c> class contains business logic
///     for matching reversing bank statements.
/// </summary>
[BankReconciliationMatchingAttribute(BankReconciliationMatchingType::Statement2ReversalStatement)]
class BankReconMatchingMatchStatementReversal extends BankReconciliationMatchingMatch
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateBalance</Name>
				<Source><![CDATA[
        protected boolean validateBalance()
    {
        BankReconciliationMatchingEntry matchingEntry;
        ListEnumerator                  enumerator;
        AmountCur                       reversalStatementBalance;
        AmountCur                       originalStatementBalance;
        boolean                         ret = true;

        enumerator = statementList.getEnumerator();

        while (enumerator.moveNext())
        {
            matchingEntry = enumerator.current();
            if (matchingEntry.parmIsReversal())
            {
                reversalStatementBalance += matchingEntry.parmOpenAmountCur();
            }
            else
            {
                originalStatementBalance += matchingEntry.parmOpenAmountCur();
            }
        }

        if (reversalStatementBalance + originalStatementBalance != 0)
        {
            ret = this.validateError(strFmt("@GLS222715", reversalStatementBalance, originalStatementBalance));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBankDocumentReversalType</Name>
				<Source><![CDATA[
        protected boolean validateBankDocumentReversalType()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCounter</Name>
				<Source><![CDATA[
        protected boolean validateCounter()
    {
        boolean     ret;

        // this match is to match reversal statement line and its orginal, so there must be no more than 1 reversal and more than 1 original.
        // The <c>BankSkipReversalFlagValidationFeature</c> allows the reversal statement number is zero.
        if (this.isEntryCounterMultiple(statementList.elements())
            && ((FeatureStateProvider::isFeatureEnabled(BankSkipReversalFlagValidationFeature::instance()) && this.isEntryCounterNone(reversalStatementList.elements()))
                || this.isEntryCounterSingle(reversalStatementList.elements()))
            && this.isEntryCounterNone(documentList.elements()))
        {
            ret = true;
        }
        else
        {
            ret = checkFailed("@GLS221626");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>