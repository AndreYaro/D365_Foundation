<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventRegistrationHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventRegistrationHandler</c> interface is used together with the
///    <c>InventPendingQuantityRegistrar</c> class to perform registration for the
///    <c>InventPendingQuantity</c> records.
/// </summary>
public interface InventRegistrationHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canRegister</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a quantity can be registered.
    /// </summary>
    /// <param name="_qtyToRegister">
    ///    The quantity of inventory units that is registered.
    /// </param>
    /// <returns>
    ///    true if the quantity can be registered; otherwise, false.
    /// </returns>
    public boolean canRegister(InventQty _qtyToRegister)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRegistrationProvider</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves an instance of the <c>InventPendingRegistrationProvider</c> class interface.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>InventPendingRegistrationProvider</c> class interface.
    /// </returns>
    public InventPendingRegistrationProvider getRegistrationProvider()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>notifyOnRegistration</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Notifies the handler that registration has been done, but is not yet committed to the database.
    /// </summary>
    /// <param name="_qtyRegistered">
    ///    The quantity of inventory units that was registered.
    /// </param>
    public void notifyOnRegistration(InventQty _qtyRegistered)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>