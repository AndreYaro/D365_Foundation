<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SettlementWriteOffUIControllerFactory</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SettlementWriteOffUIControllerFactory</c> class constructs the appropriate implementation of the <c>SettlementWriteOffUIController</c> class.
/// </summary>
internal final class SettlementWriteOffUIControllerFactory
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructUIController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <param name = "_module">The customer or vendor module.</param>
    /// <param name = "_originator">The originating record for settlement write off..</param>
    /// <returns>The new instance of the <c>SettlementWriteOffUIController</c> class.</returns>
    internal static SettlementWriteOffUIController constructUIController(ModuleCustVend _module, Common _originator)
    {
        SysPluginMetadataCollection metadataCollection = new SysPluginMetadataCollection();

        metadataCollection.SetManagedValue(enumStr(ModuleCustVend), enum2Symbol(enumNum(ModuleCustVend), enum2int(_module)));
        SettlementWriteOffUIController instance = SysPluginFactory::Instance(identifierStr(Dynamics.AX.Application), classStr(SettlementWriteOffUIController), metadataCollection);

        if (!instance)
        {
            throw error(strFmt("@SYS19306", funcName()));
        }

        instance.parmOriginator(_originator);

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>