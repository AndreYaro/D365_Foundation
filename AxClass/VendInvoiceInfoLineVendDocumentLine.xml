<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceInfoLineVendDocumentLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>VendInvoiceInfoLineVendDocumentLine</c> class contains <c>VendInvoiceInfoLine</c> table specific functionality and mapped fields
/// related to the <c>VendDocumentLineMap</c> table map.
/// </summary>
[ExportMetadata(classStr(VendDocumentLineInterface), tableStr(VendInvoiceInfoLine)), ExportAttribute('Dynamics.AX.Application.VendDocumentLineInterface')]
class VendInvoiceInfoLineVendDocumentLine extends VendDocumentLineInterface
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmVendInvoiceInfoLine</Name>
				<Source><![CDATA[
    protected VendInvoiceInfoLine parmVendInvoiceInfoLine()
    {
        return vendDocumentLineMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountExcludingTax</Name>
				<Source><![CDATA[
    public AmountCur amountExcludingTax(AmountCur _amountCur, Qty _qty, TransDate _transDate, Tax _tax = null, VendDocumentTableMap _parmTable = null, boolean _keepEndDisc = false, boolean _skipRounding = false)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        TaxBaseCur taxOrigin = vendInvoiceInfoLine.amountExcludingTax(_amountCur, _qty, _transDate, _tax, _parmTable, _keepEndDisc);
        
        return taxOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId, Common _sourceDocumentLineImplementation = null)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();

        PurchLine localPurchLine = _sourceDocumentLineImplementation as PurchLine;

        vendInvoiceInfoLine.defaultField(_fieldId, localPurchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    public void defaultRow(
        PurchLine _purchLine = null,
        PurchParmUpdate _purchParmUpdate = null,
        PurchQty _receiveNow = naReal(),
        InventQty _inventNow = naReal(),
        PdsCWInventQty _cwReceiveNow = naReal(),
        Set _tableToLineFields	= null,
        PurchUpdate _specQty = _purchParmUpdate.SpecQty)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        
        vendInvoiceInfoLine.defaultRow(
            _purchLine,
            _purchParmUpdate,
            _receiveNow,
            _inventNow,
            _cwReceiveNow,
            _tableToLineFields,
            _specQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddress</Name>
				<Source><![CDATA[
    public LogisticsAddressing deliveryAddress()
    {
        if (!vendDocumentLineMap.DeliveryPostalAddress)
        {
            return '';
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPdsPurchPrice</Name>
				<Source><![CDATA[
    protected PurchPrice getPdsPurchPrice(boolean _force = false)
    {
        PurchPrice purchPrice;
        
        if (vendDocumentLineMap.PurchPrice)
        {
            PDSCalculationId calculationId = this.getAdvancedPricingInvoiceCalculationId();
            
            if (calculationId)
            {
                VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
                if (!vendInvoiceInfoLine.pdsCalculatedUnitPrice || _force)
                {
                    PDSAdvancedPricing advancedPricing = PDSAdvancedPricing::newRecord(vendInvoiceInfoLine);
                    advancedPricing.parmHideMessage(false);
                    vendInvoiceInfoLine.pdsCalculatedUnitPrice = advancedPricing.calc();
                }
                purchPrice = vendInvoiceInfoLine.pdsCalculatedUnitPrice;
            }
        }

        return purchPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdvancedPricingInvoiceCalculationId</Name>
				<Source><![CDATA[
    public PDSCalculationId getAdvancedPricingInvoiceCalculationId()
    {
        return this.parmVendInvoiceInfoLine().PDSCalculationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>header</Name>
				<Source><![CDATA[
    public VendDocumentTableMap header(boolean _forUpdate = false)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        return vendInvoiceInfoLine.vendInvoiceInfoTable(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeTax</Name>
				<Source><![CDATA[
    public boolean includeTax(PurchTable _purchTable = null, Common _header = null)
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;

        if (_header)
        {
            vendInvoiceInfoTable = _header;
        }
        boolean inclTax = this.parmVendInvoiceInfoLine().includeTax(_purchTable, vendInvoiceInfoTable);

        inclTax = this.includeTaxGeneralTax(inclTax);

        return inclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultAdvancedPricingCalculationId</Name>
				<Source><![CDATA[
    public void initDefaultAdvancedPricingCalculationId()
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        
        if (!vendInvoiceInfoLine.isFieldSet(fieldNum(VendInvoiceInfoLine, PDSCalculationId)))
        {
            vendInvoiceInfoLine.PDSCalculationId = this.purchLine().PDSCalculationId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim(boolean _update = false)
    {
        return InventDim::find(vendDocumentLineMap.InventDimId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAdvance</Name>
				<Source><![CDATA[
    public boolean isAdvance()
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        boolean isAdvance;

        if (vendInvoiceInfoLine.LineType == PurchInvoiceLineType::Advance)
        {
            isAdvance = true;
        }

        return isAdvance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrepaymentApplication</Name>
				<Source><![CDATA[
    public boolean isPrepaymentApplication()
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        
        return (vendInvoiceInfoLine.LineType == PurchInvoiceLineType::AdvanceApplication);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAsset</Name>
				<Source><![CDATA[
    public VendDocumentLineAssetMap lineAsset(boolean _forUpdate)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendDocumentLineAssetMap lineAsset = vendInvoiceInfoLine.vendInvoiceInfoLine_Asset(_forUpdate);
        
        return lineAsset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchParmUpdate</Name>
				<Source><![CDATA[
    public PurchParmUpdate purchParmUpdate(boolean _forUpdate = false)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        return vendInvoiceInfoLine.purchParmUpdate(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssessableValue_IN</Name>
				<Source><![CDATA[
    public PurchLineAmount parmAssessableValue_IN(PurchLineAmount _assessableValue_IN = 0)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_assessableValue_IN))
        {
            vendInvoiceInfoLine_W.AssessableValue_IN = _assessableValue_IN;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.AssessableValue_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssessableValueAccountingCurrency</Name>
				<Source><![CDATA[
    public AmountMST parmAssessableValueAccountingCurrency(AmountMST _assessableValueAccountingCurrency)
    {
        return this.parmVendInvoiceInfoLine().parmAssessableValueAccountingCurrency(_assessableValueAccountingCurrency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCFOPTable_BR</Name>
				<Source><![CDATA[
    public RefRecId parmCFOPTable_BR(RefRecId _cfopTable_BR = 0)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_cfopTable_BR))
        {
            vendInvoiceInfoLine_W.cfopTable_BR = _cfopTable_BR;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.cfopTable_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightNature_BR</Name>
				<Source><![CDATA[
    public FreightNature_BR parmFreightNature_BR(FreightNature_BR _freightNature_BR = FreightNature_BR::Blank)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_freightNature_BR))
        {
            vendInvoiceInfoLine_W.FreightNature_BR = _freightNature_BR;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.FreightNature_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountryRegionName_RU</Name>
				<Source><![CDATA[
    public AddressCountryRegionName parmCountryRegionName_RU(AddressCountryRegionName _countryRegionName_RU = '')
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_countryRegionName_RU))
        {
            vendInvoiceInfoLine_W.CountryRegionName_RU = _countryRegionName_RU;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.CountryRegionName_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsBillOfEntryNumberTable_IN</Name>
				<Source><![CDATA[
    public RefRecId parmCustomsBillOfEntryNumberTable_IN(RefRecId _customsBillOfEntryNumberTable_IN = 0)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_customsBillOfEntryNumberTable_IN))
        {
            vendInvoiceInfoLine_W.CustomsBillOfEntryNumberTable_IN = _customsBillOfEntryNumberTable_IN;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.CustomsBillOfEntryNumberTable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsImportInvoiceNumberTable_IN</Name>
				<Source><![CDATA[
    public RefRecId parmCustomsImportInvoiceNumberTable_IN(RefRecId _customsImportInvoiceNumberTable_IN = 0)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_customsImportInvoiceNumberTable_IN))
        {
            vendInvoiceInfoLine_W.CustomsImportInvoiceNumberTable_IN = _customsImportInvoiceNumberTable_IN;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.CustomsImportInvoiceNumberTable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsInvoiceRegnRecId_IN</Name>
				<Source><![CDATA[
    public RefRecId parmCustomsInvoiceRegnRecId_IN(RefRecId _customsInvoiceRegnRecId_IN = 0)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_customsInvoiceRegnRecId_IN))
        {
            vendInvoiceInfoLine_W.CustomsInvoiceRegnRecId_IN = _customsInvoiceRegnRecId_IN;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.CustomsInvoiceRegnRecId_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeviationQty_RU</Name>
				<Source><![CDATA[
    public PurchDeviationQty_RU parmDeviationQty_RU(PurchDeviationQty_RU _purchDeviationQty_RU = 0)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_purchDeviationQty_RU))
        {
            vendInvoiceInfoLine_W.DeviationQty_RU = _purchDeviationQty_RU;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.DeviationQty_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntrastatFulfillmentDate_HU</Name>
				<Source><![CDATA[
    public IntrastatFulfillmentDate_HU parmIntrastatFulfillmentDate_HU(IntrastatFulfillmentDate_HU _intrastatFulfillmentDate_HU = dateNull())
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_intrastatFulfillmentDate_HU))
        {
            vendInvoiceInfoLine_W.IntrastatFulfillmentDate_HU = _intrastatFulfillmentDate_HU;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.IntrastatFulfillmentDate_HU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventProfileType_RU</Name>
				<Source><![CDATA[
    public InventProfileType_RU parmInventProfileType_RU(InventProfileType_RU _inventProfileType_RU = InventProfileType_RU::NotSpecified)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_inventProfileType_RU))
        {
            vendInvoiceInfoLine_W.InventProfileType_RU = _inventProfileType_RU;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.InventProfileType_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceGTDId_RU</Name>
				<Source><![CDATA[
    public CustFreeInvoiceGTDId_RU parmInvoiceGTDId_RU(CustFreeInvoiceGTDId_RU _invoiceGTDId_RU = '')
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_invoiceGTDId_RU))
        {
            vendInvoiceInfoLine_W.InvoiceGTDId_RU = _invoiceGTDId_RU;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.InvoiceGTDId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkupCode_RU</Name>
				<Source><![CDATA[
    public MarkupCodeVend_RU parmMarkupCode_RU(MarkupCodeVend_RU _markupCode_RU = '')
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_markupCode_RU))
        {
            vendInvoiceInfoLine_W.MarkupCode_RU = _markupCode_RU;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.MarkupCode_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    public MaximumRetailPrice_IN parmMaximumRetailPrice_IN(MaximumRetailPrice_IN _maximumRetailPrice_IN = 0)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_maximumRetailPrice_IN))
        {
            vendInvoiceInfoLine_W.MaximumRetailPrice_IN = _maximumRetailPrice_IN;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.MaximumRetailPrice_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile_RU</Name>
				<Source><![CDATA[
    public VendPostingProfile parmPostingProfile_RU(VendPostingProfile _postingProfile_RU = '')
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_postingProfile_RU))
        {
            vendInvoiceInfoLine_W.PostingProfile_RU = _postingProfile_RU;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.PostingProfile_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxServiceCode_BR</Name>
				<Source><![CDATA[
    public TaxServiceCodeId_BR parmTaxServiceCode_BR(TaxServiceCodeId_BR _taxServiceCodeId_BR = '')
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W = vendInvoiceInfoLine.vendInvoiceInfoLine_W();

        if (!prmisDefault(_taxServiceCodeId_BR))
        {
            vendInvoiceInfoLine_W.TaxServiceCode_BR = _taxServiceCodeId_BR;
            vendInvoiceInfoLine.packVendInvoiceInfoLine_W(vendInvoiceInfoLine_W);
        }

        return vendInvoiceInfoLine_W.TaxServiceCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAdvancedPricingInvoiceCalculationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the attribute-based calculation ID in the table buffer mapped.
    /// </summary>
    /// <param name="_calculationId">
    /// The calculation ID to set; optional.
    /// </param>
    public void setAdvancedPricingInvoiceCalculationId(PDSCalculationId _calculationId = '')
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        vendInvoiceInfoLine.PDSCalculationId = _calculationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventReceiveNow</Name>
				<Source><![CDATA[
    public void setInventReceiveNow(boolean setInventNow = true)
    {
        if (this.isNonPO())
        {
            vendDocumentLineMap.InventNow = 0.0;
            return;
        }

        this.setPurchaseInventReceiveNow(setInventNow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQty</Name>
				<Source><![CDATA[
    public void setQty(DocumentStatus _documentStatus,
        boolean _creditRemaining,
        boolean _setInventNow = true,
        boolean _setInventQtys = true)
    {
        PurchUnit baseUnit;

        if (this.isNonPO())
        {
            baseUnit = this.parmVendInvoiceInfoLine().PurchUnit;
        }
        else
        {
            baseUnit = this.purchLine().PurchUnit;
        }

        if (baseUnit && VendorInvoiceQuantityAutoRoundingFeatureV3::instance().isEnabled())
        {
            this.parmVendInvoiceInfoLine().ReceiveNow =
                VendInvoiceUnitOfMeasureRounding::roundedQuantityBasedOnUnitOfMeasure(this.parmVendInvoiceInfoLine().ReceiveNow, baseUnit);
        }

        if (this.isNonPO())
        {
            return;
        }
        
        this.setPurchaseQty(_documentStatus, _creditRemaining, _setInventNow, _setInventQtys);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainAfterInvent</Name>
				<Source><![CDATA[
    public void setRemainAfterInvent()
    {
        this.setPurchaseRemainAfterInvent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>subHeader</Name>
				<Source><![CDATA[
    public VendDocumentSubTableMap subHeader(boolean _forUpdate = false)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = this.parmVendInvoiceInfoLine();
        return vendInvoiceInfoLine.vendInvoiceInfoSubTable(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsVendBOETrans_IN</Name>
				<Source><![CDATA[
    public static CustomsVendBOETrans_IN getCustomsVendBOETrans_IN(RecId _parmLineRecId, ParmId _parmLineParmId)
    {
        VendInvoiceInfoSubLine vendInvoiceInfoSubLineCopy;
        CustomsVendBOETrans_IN customsVendBOETrans;

        select firstonly vendInvoiceInfoSubLineCopy
            where vendInvoiceInfoSubLineCopy.LineRefRecId == _parmLineRecId &&
                vendInvoiceInfoSubLineCopy.ParmId == _parmLineParmId;

        if (vendInvoiceInfoSubLineCopy && vendInvoiceInfoSubLineCopy.JournalRefTableId == customsVendBOETrans.TableId)
        {
            customsVendBOETrans = CustomsVendBOETrans_IN::find(vendInvoiceInfoSubLineCopy.JournalRefRecId);
        }
        else if (vendInvoiceInfoSubLineCopy && vendInvoiceInfoSubLineCopy.JournalRefTableId == tableNum(VendPackingSlipTrans))
        {
            customsVendBOETrans = CustomsVendBOETrans_IN::find(CustomsVendPackingSlipBOETransLink_IN::findByVendPackingSlipTrans(vendInvoiceInfoSubLineCopy.JournalRefRecId).CustomsVendBOETrans_IN);
        }

        return customsVendBOETrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>