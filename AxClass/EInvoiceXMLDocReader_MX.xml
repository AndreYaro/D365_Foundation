<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceXMLDocReader_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceXMLDocReader_MX</c> class handles reading XML documents.
/// </summary>
public class EInvoiceXMLDocReader_MX
{
    XmlDocument xmlDocument;
    XmlNamespaceManager nsmgr;

    #define.delimiter('|')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>removeDuplicatedSpaces</Name>
				<Source><![CDATA[
    /// <summary>
    /// transfer original string may contain more than one blank space to string contain only one blank space between words
    /// </summary>
    /// <param name="_original">
    /// the original string may contain more than one blank space
    /// </param>
    /// <returns>
    /// output string contain only one blank space between words
    /// </returns>
    protected str removeDuplicatedSpaces(str _original)
    {
        TextBuffer buffer = new TextBuffer();
        buffer.setText(_original);
        buffer.replace('[ ]+', ' ');

        return buffer.getText();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllRegimenFiscal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the "RegimenFiscal" element from the XML.
    /// </summary>
    /// <returns>The "RegimenFiscal" element from the XML.</returns>
    protected str getAllRegimenFiscal()
    {
        XmlNode node;
        XmlNode conceptoNode;
        XmlNodeList nodeList;
        str regimenChain;

        node = this.getXpathNode(@'/x:Comprobante/x:Emisor');

        if (node != null)
        {
            nodeList = node.selectNodes(@'x:RegimenFiscal', nsmgr);
            for (conceptoNode = nodeList.nextNode(); conceptoNode != null; conceptoNode = nodeList.nextNode())
            {
                regimenChain += this.getXpathValueBasedOnNode(conceptoNode,'@Regimen');
            }
        }

        return regimenChain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createResponseNamespace</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a nameSpace to read a XML.
    /// </summary>
    /// <remarks>
    /// This namespace is used on the response of the electronic invoice from a webservice.
    /// </remarks>
    protected void createResponseNamespace()
    {
        if (!nsmgr.hasNamespace('timbre'))
        {
            nsmgr.addNamespace('timbre','http://www.sat.gob.mx/TimbreFiscalDigital');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllConceptos</Name>
				<Source><![CDATA[
    protected str getAllConceptos()
    {
        XmlNode node;
        XmlNode conceptoNode;
        XmlNodeList nodeList;
        str conceptosChain;

        node = this.getXpathNode(@'/x:Comprobante/x:Conceptos');

        if (node != null)
        {
            nodeList = node.selectNodes(@'x:Concepto', nsmgr);
            for (conceptoNode = nodeList.nextNode(); conceptoNode != null; conceptoNode = nodeList.nextNode())
            {
                conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@cantidad');
                conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@unidad');
                conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@noIdentificacion');
                conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@descripcion');
                conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@valorUnitario');
                conceptosChain += this.getXpathValueBasedOnNode(conceptoNode,'@importe');

                if (conceptoNode.selectSingleNode(@'x:CuentaPredial/@numero', nsmgr) != null)
                {
                    conceptosChain += this.getXpathValueBasedOnNode(conceptoNode, @'x:CuentaPredial/@numero');
                }
                else if (conceptoNode.selectSingleNode(@'x:InformacionAduanera/@numero', nsmgr) != null)
                {
                    conceptosChain += this.getXpathValueBasedOnNode(conceptoNode, @'x:InformacionAduanera/@numero');
                    conceptosChain += this.getXpathValueBasedOnNode(conceptoNode, @'x:InformacionAduanera/@fecha');
                    conceptosChain += this.getXpathValueBasedOnNode(conceptoNode, @'x:InformacionAduanera/@aduana');
                }
            }
        }

        return conceptosChain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllRetenciones</Name>
				<Source><![CDATA[
    protected str getAllRetenciones()
    {
        XmlNode node;
        XmlNode retencionNode;
        XmlNodeList nodeList;
        str retencionesChain;

        node = this.getXpathNode(@'/x:Comprobante/x:Impuestos/x:Retenciones');

        if (node != null)
        {
            nodeList = node.selectNodes(@'x:Retencion', nsmgr);
            for (retencionNode = nodeList.nextNode(); retencionNode != null;retencionNode = nodeList.nextNode())
            {
                retencionesChain += this.getXpathValueBasedOnNode(retencionNode, '@impuesto');
                retencionesChain += this.getXpathValueBasedOnNode(retencionNode, '@importe');
            }
        }

        return retencionesChain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllTraslados</Name>
				<Source><![CDATA[
    protected str getAllTraslados()
    {
        XmlNode node;
        XmlNode trasladoNode;
        XmlNodeList nodeList;
        str trasladosChain;

        node = this.getXpathNode(@'/x:Comprobante/x:Impuestos/x:Traslados');

        if (node != null)
        {
            nodeList = node.selectNodes(@'x:Traslado', nsmgr);
            for (trasladoNode = nodeList.nextNode(); trasladoNode != null; trasladoNode = nodeList.nextNode())
            {
                trasladosChain += this.getXpathValueBasedOnNode(trasladoNode, '@impuesto');
                trasladosChain += this.getXpathValueBasedOnNode(trasladoNode, '@tasa');
                trasladosChain += this.getXpathValueBasedOnNode(trasladoNode, '@importe');
            }
        }

        return trasladosChain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormattedOriginalChain</Name>
				<Source><![CDATA[
    protected str getFormattedOriginalChain(str _chain)
    {
        str formattedChain = System.Web.HttpUtility::HtmlDecode(_chain);

        return formattedChain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNameSpace</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the namespace for the XML
    /// </summary>
    /// <returns>The namespace as string</returns>
    protected str getNameSpace()
    {
        return 'http://www.sat.gob.mx/cfd/3';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOriginalChain</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cadena original string that is a sequence of fields used to authenticate the XML.
    /// </summary>
    /// <returns>The cadena original string that is a sequence of fields used to authenticate the XML.</returns>
    public str getOriginalChain()
    {
        str originalChain = #delimiter;

        originalChain += this.getXpathValue(@'/x:Comprobante/@version');
        originalChain += this.getXpathValue(@'/x:Comprobante/@fecha');
        originalChain += this.getXpathValue(@'/x:Comprobante/@tipoDeComprobante');
        originalChain += this.getXpathValue(@'/x:Comprobante/@formaDePago');
        originalChain += this.getXpathValue(@'/x:Comprobante/@condicionesDePago');
        originalChain += this.getXpathValue(@'/x:Comprobante/@subTotal');
        originalChain += this.getXpathValue(@'/x:Comprobante/@descuento');
        originalChain += this.getXpathValue(@'/x:Comprobante/@TipoCambio');
        originalChain += this.getXpathValue(@'/x:Comprobante/@Moneda');
        originalChain += this.getXpathValue(@'/x:Comprobante/@total');
        originalChain += this.getXpathValue(@'/x:Comprobante/@metodoDePago');
        originalChain += this.getXpathValue(@'/x:Comprobante/@LugarExpedicion');
        originalChain += this.getXpathValue(@'/x:Comprobante/@NumCtaPago');
        originalChain += this.getXpathValue(@'/x:Comprobante/@FolioFiscalorig');
        originalChain += this.getXpathValue(@'/x:Comprobante/@SerieFolioFiscalorig');
        originalChain += this.getXpathValue(@'/x:Comprobante/@FechaFolioFiscalorig');
        originalChain += this.getXpathValue(@'/x:Comprobante/@MontoFiscalOrig');

        //   Company Information (Emisor)
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/@rfc');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/@nombre');

        // Company fiscal address (Domicilio Fiscal)

        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@calle');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@noExterior');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@noInterior');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@colonia');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@localidad');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@referencia');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@municipio');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@estado');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@pais');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:DomicilioFiscal/@codigoPostal');

        //    Company delivery address (ExpedidoEn)
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@calle');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@noExterior');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@noInterior');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@colonia');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@localidad');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@referencia');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@municipio');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@estado');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@pais');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Emisor/x:ExpedidoEn/@codigoPostal');

        // Fiscal Regime
        originalChain += this.getAllRegimenFiscal();

        // Customer information (Receptor)
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/@rfc');
        originalChain += this.removeDuplicatedSpaces(this.getXpathValue(@'/x:Comprobante/x:Receptor/@nombre'));

        //Customer main address (Domicilio)
        originalChain += this.removeDuplicatedSpaces(this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@calle'));
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@noExterior');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@noInterior');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@colonia');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@localidad');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@referencia');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@municipio');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@estado');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@pais');
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Receptor/x:Domicilio/@codigoPostal');

        // Concepts (+ informacion Aduana + Cuenta Predial)
        originalChain += this.removeDuplicatedSpaces(this.getAllConceptos());

        // Retained taxes
        originalChain += this.getAllRetenciones();
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Impuestos/@totalImpuestosRetenidos');

        //Sales taxes
        originalChain += this.getAllTraslados();
        originalChain += this.getXpathValue(@'/x:Comprobante/x:Impuestos/@totalImpuestosTrasladados');

        originalChain += #delimiter + #delimiter;

        originalChain = this.getFormattedOriginalChain(originalChain);

        return originalChain;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the response code from a XML.
    /// </summary>
    /// <returns>The response code.</returns>
    public str getResponse()
    {
        str response;

        response = this.getXpathValue(@'/Resultado/@IdRespuesta',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseComprobanteNode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the comprobante node.
    /// </summary>
    /// <returns>The comprobante node.</returns>
    public str getResponseComprobanteNode()
    {
        str response;

        response = this.getXpathNode('/Resultado/x:Comprobante').toString();
        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the response description from a XML.
    /// </summary>
    /// <returns>The response description.</returns>
    public str getResponseDescription()
    {
        str response;

        response = this.getXpathValue(@'/Resultado/@Descripcion',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseFechaTimbrado</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the fechaTimbrado attribute.
    /// </summary>
    /// <returns>The fechaTimbrado attribute.</returns>
    public str getResponseFechaTimbrado()
    {
        str response;

        this.createResponseNamespace();
        response = this.getXpathValue(@'/Resultado/x:Comprobante/x:Complemento/timbre:TimbreFiscalDigital/@FechaTimbrado',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseNode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the response node from a XML.
    /// </summary>
    /// <returns>The response node.</returns>
    public str getResponseNode()
    {
        XmlNode response;

        response = this.getXpathNode('/Resultado').cloneNode(false);

        return response.toString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseSATCertificateNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the SAT certificate from a XML.
    /// </summary>
    /// <returns>The SAT certificate.</returns>
    public str getResponseSATCertificateNumber()
    {
        str response;

        this.createResponseNamespace();
        response = this.getXpathValue(@'/Resultado/x:Comprobante/x:Complemento/timbre:TimbreFiscalDigital/@noCertificadoSAT',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseSelloCFD</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sello attribute from a XML.
    /// </summary>
    /// <returns>The sello attribute.</returns>
    public str getResponseSelloCFD()
    {
        str response;

        this.createResponseNamespace();
        response = this.getXpathValue(@'/Resultado/x:Comprobante/x:Complemento/timbre:TimbreFiscalDigital/@selloCFD',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseSelloSAT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the selloSAT attribute from a XML.
    /// </summary>
    /// <returns>The selloSAT attribute.</returns>
    public str getResponseSelloSAT()
    {
        str response;

        this.createResponseNamespace();
        response = this.getXpathValue(@'/Resultado/x:Comprobante/x:Complemento/timbre:TimbreFiscalDigital/@selloSAT',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponseUUID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the UUID attribute from a XML.
    /// </summary>
    /// <returns>The UUID attribute.</returns>
    public str getResponseUUID()
    {
        str response;

        this.createResponseNamespace();
        response = this.getXpathValue(@'/Resultado/x:Comprobante/x:Complemento/timbre:TimbreFiscalDigital/@UUID',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSello</Name>
				<Source><![CDATA[
    public str getSello()
    {
        str sello;
        str trimmedStamp;

        sello = this.getXpathValue(@'/x:Comprobante/@sello');

        trimmedStamp = substr(sello, 2, strLen(sello));

        return trimmedStamp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getXMLNodeToReceiveSello</Name>
				<Source><![CDATA[
    public XmlNode getXMLNodeToReceiveSello()
    {
        return this.getXpathNode(@'/x:Comprobante');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getXpathNode</Name>
				<Source><![CDATA[
    protected XmlNode getXpathNode(str _xPath)
    {
        XmlNode node;

        node = xmlDocument.selectSingleNode(_xPath, nsmgr);

        return node;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getXpathValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// gets the value of a element on the XML
    /// </summary>
    /// <param name="_xPath">The path of the element</param>
    /// <param name="_delimiter">Indicates if must return a delimiter on the begining of string.</param>
    /// <returns>The element value.</returns>
    protected str getXpathValue(str _xPath, boolean _delimiter = true)
    {
        XmlNode node;
        str xPathValue;

        node = xmlDocument.selectSingleNode(_xPath, nsmgr);

        if (node != null)
        {
            if (_delimiter)
            {
                xPathValue = #delimiter + node.innerXml();
            }
            else
            {
                xPathValue = node.innerXml();
            }
        }

        return xPathValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getXpathValueBasedOnNode</Name>
				<Source><![CDATA[
    protected str getXpathValueBasedOnNode(XmlNode _node, str _xPath)
    {
        XmlNode node;
        str xPathValue;

        node = _node.selectSingleNode(_xPath, nsmgr);

        if (node != null)
        {
            xPathValue = #delimiter + node.innerXml();
        }

        return xPathValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the XML to string
    /// </summary>
    /// <returns>The xml as string.</returns>
    public str toString()
    {
        return xmlDocument.toString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCancelationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the cancelation ID from a XML.
    /// </summary>
    /// <returns>
    /// The cancelation ID code.
    /// </returns>
    public str getCancelationId()
    {
        str response = this.getXpathValue(@'/Resultado/@ConsultaCancelacionId',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeclaration</Name>
				<Source><![CDATA[
    /// <summary>
    /// creates the declaration with version and encoding to the approved XML.
    /// </summary>
    /// <returns>The declaration with version and encoding to the approved XML.</returns>
    public str getDeclaration()
    {
        str declaration;

        #define.UTF8('UTF-8')
        #define.CharNewLine('\n')

        declaration = xmlDocument.createXmlDeclaration('1.0', #UTF8, '').toString();
        declaration = declaration + #CharNewLine;

        return declaration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the EStatus from a XML.
    /// </summary>
    /// <returns>
    /// The EStatus code.
    /// </returns>
    public str getEStatus()
    {
        str response = this.getXpathValue(@'/Resultado/@Estatus',false);

        return response;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>EInvoiceXMLDocReader_MX</c> class.
    /// </summary>
    /// <param name="_xmlDocument">The XML document.</param>
    protected void new(XmlDocument _xmlDocument)
    {
        xmlDocument = _xmlDocument;
        nsmgr = new XmlNamespaceManager(xmlDocument.nameTable());
        nsmgr.addNamespace('x', this.getNameSpace());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create an <c>EInvoiceXMLDocReader_MX</c> object for correct version of electronic invoice.
    /// </summary>
    /// <param name="_eInvoiceJour">The electronic invoice to be read.</param>
    /// <returns>A <c>EInvoiceXMLDocReader_MX</c> object.</returns>
    /// <exception cref="Exception::Error">The method must be called with a valid <c>EInvoiceJour_MX</c>.</exception>
    public static EInvoiceXMLDocReader_MX construct(EInvoiceJour_MX _eInvoiceJour)
    {
        if (!_eInvoiceJour.CFDI)
        {
            throw error("@SYS341183");
        }
            
        return EInvoiceXMLDocReader_MX::create(_eInvoiceJour.CFDIVersion, _eInvoiceJour.XMLDoc, _eInvoiceJour.RefTableId, _eInvoiceJour.CFDIDocType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromResponseMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create an <c>EInvoiceXMLDocReader_MX</c> object for correct version of electronic invoice.
    /// </summary>
    /// <param name = "_version">The version of the web service contract.</param>
    /// <param name = "_responseMessage">The response message that came from the web service.</param>
    /// <returns>A <c>EInvoiceXMLDocReader_MX</c> object.</returns>
    /// <exception cref="Exception::Error">The method must be called with a valid <c>EInvoiceJour_MX</c>.</exception>
    public static EInvoiceXMLDocReader_MX constructFromResponseMessage(EInvoiceCFDIVersion_MX _version, XML _responseMessage)
    {
        return EInvoiceXMLDocReader_MX::create(_version, _responseMessage);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromPaymentMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create an <c>EInvoiceXMLDocReader_MX</c> object for correct version of electronic invoice.
    /// </summary>
    /// <param name = "_version">The version of the web service contract.</param>
    /// <param name = "_paymentMessage">The payment message that came from the web service.</param>
    /// <returns>A <c>EInvoiceXMLDocReader_MX</c> object.</returns>
    /// <exception cref="Exception::Error">The method must be called with a valid <c>EInvoiceJour_MX</c>.</exception>
    public static EInvoiceXMLDocReader_MX constructFromPaymentMessage(EInvoiceCFDIVersion_MX _version, XML _paymentMessage)
    {
        return EInvoiceXMLDocReader_MX::create(_version, _paymentMessage, tableNum(CustTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    private static EInvoiceXMLDocReader_MX create(EInvoiceCFDIVersion_MX _version, XML _responseMessage, RefTableId _refTableId = 0, CFDIDocType_MX _cfdiDocType = CFDIDocType_MX::Invoice)
    {
        XmlDocument xmlDoc = XmlDocument::newXml(_responseMessage);

        if (_cfdiDocType == CFDIDocType_MX::Withholding)
        {
            switch (_version)
            {
                case EInvoiceCFDIVersion_MX::V4:
                    return new CFDIWithholdingXMLDocReader_V4_MX(xmlDoc);

                default:
                    return new CFDIWithholdingXMLDocReader_MX(xmlDoc);
            }
        }
        
        switch (_version)
        {
            case EInvoiceCFDIVersion_MX::V3_2:
                return new EInvoiceXMLDocReader_MX(xmlDoc);

            case EInvoiceCFDIVersion_MX::V3_3:
                switch (_refTableId)
                {
                    case tableNum(CustTrans):
                        return new EInvoicePaymentXMLDocReader_V3_3_MX(xmlDoc);

                    default:
                        return new EInvoiceXMLDocReader_V3_3_MX(xmlDoc);
                }

            case EInvoiceCFDIVersion_MX::V4:
                switch (_refTableId)
                {
                    case tableNum(CustTrans):
                        return new EInvoicePaymentXMLDocReader_V4_MX(xmlDoc);

                    default:
                        return new EInvoiceXMLDocReader_V4_MX(xmlDoc);
                }

            default:
                throw error("@SYS341183");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>