<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppFieldValueMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppFieldValueMap</c> class extends the <c>Map</c> to store mobile app field name-value pairs.
/// It provides additional methods to create the map from container or xml stored in <c>WHSWorkUserSession</c> table.
/// </summary>
public class WHSMobileAppFieldValueMap extends Map
{
    #WHSRF
    #WHSWorkExecuteControlElements

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        super(Types::String, Types::AnyType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSMobileAppFieldValueMap construct()
    {
        return new WHSMobileAppFieldValueMap();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of <c>WHSMobileAppFieldValueMap</c> from a container.
    /// </summary>
    /// <param name = "_con">
    /// Container from which the map should be created.
    /// </param>
    /// <returns>
    /// The created <c>WHSMobileAppFieldValueMap</c> object.
    /// </returns>
    public static WHSMobileAppFieldValueMap constructFromContainer(container _con)
    {
        WHSMobileAppFieldValueMap fieldValueMap = WHSMobileAppFieldValueMap::construct();

        for (int i = #ControlsStart; i <= conLen(_con); ++i)
        {
            container subCon = conPeek(_con, i);
            fieldValueMap.insertFromContainerControlNode(subCon);
        }

        return fieldValueMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromContainerControlNode</Name>
				<Source><![CDATA[
    private void insertFromContainerControlNode(container _con)
    {
        var controlType = conPeek(_con, #controlType);
        if ((controlType == #RFText) || (controlType == #RFPassword))
        {
            this.insert(conPeek(_con, #name), conPeek(_con, #data));
        }
        else if (controlType == #RFCombobox)
        {
            boolean isInbound = WHSMobileAppIsInboundContext::current()
                && WHSMobileAppIsInboundContext::current().parmIsInboundContainer();

            this.insert(conPeek(_con, #name), conPeek(_con, isInbound ? #data : #selected));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>