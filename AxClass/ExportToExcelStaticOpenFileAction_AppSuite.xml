<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ExportToExcelStaticOpenFileAction_AppSuite</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.DynamicsOnline.Infrastructure.Components.SharedServiceUnitStorage;

/// <summary>
/// Handles the static export to Excel open file action.
/// </summary>
internal class ExportToExcelStaticOpenFileAction_AppSuite
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    internal static void main (Args args)
    {
        SystemNotificationExecuteActionDataContract data = args.parmObject() as SystemNotificationExecuteActionDataContract;
        if (data)
        {
            str filePath = data.Data();
            boolean openInNewTab = true;

            // If the file path isn't a path, then it must be an identifier for a file stored in blob storage - so instead
            // get a link for the file in blob storage.
            if (!strContains(filePath, ":"))
            {
                var blobStorageService = new SharedServiceUnitStorage(SharedServiceUnitStorage::GetDefaultStorageContext());
                var uploadedBlobInfo = blobStorageService.GetData(filePath, FileUploadTemporaryStorageStrategy::AzureStorageCategory, BlobUrlPermission::Read, System.TimeSpan::FromMinutes(10));
                filePath = uploadedBlobInfo.BlobLink;
                openInNewTab = false;
            }

            if (filePath)
            {
                Browser br = new Browser();
                br.navigate(filePath, openInNewTab, false);
            }

            // Complete and dismiss the notification and action
            SystemNotificationsManager::CompleteNotificationAction(data.NotificationActionId());
            SystemNotificationsManager::CompleteNotification(data.NotificationId());
            SystemNotificationsManager::DismissNotification(curUserId(), data.NotificationId());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>