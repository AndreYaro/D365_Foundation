<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostBreakdownInsertionRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostBreakdownInsertionRule</c> class is responsible for determining if a cost breakdown should be inserted when calculating boms,
/// estimating production costs and calculating realized costs.
/// </summary>
public class CostBreakdownInsertionRule
{
    InventTable      inventTable;
    CostingVersionId costingVersionId;
    boolean          isProduction;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCostBreakdownActivated</Name>
				<Source><![CDATA[
    private boolean isCostBreakdownActivated()
    {
        return InventParameters::isCostBreakdownActivated();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCostingVersionAllowingBreakdown</Name>
				<Source><![CDATA[
    private boolean isCostingVersionAllowingBreakdown()
    {
        CostingVersion costingVersion = CostingVersion::find(costingVersionId);

        return costingVersion.CostingType == CostingVersionCostingType::Standard
            || costingVersion.CostingType == CostingVersionCostingType::Conversion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCostingVersionIdProvided</Name>
				<Source><![CDATA[
    private boolean isCostingVersionIdProvided()
    {
        return costingVersionId != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemBeingConvertedToStdCost</Name>
				<Source><![CDATA[
    private boolean isItemBeingConvertedToStdCost()
    {
        if (!this.isCostingVersionIdProvided())
        {
            return false;
        }

        return InventStdCostConvItem::itemWillBeConverted(inventTable.ItemId, costingVersionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemProducedByDefault</Name>
				<Source><![CDATA[
    private boolean isItemProducedByDefault()
    {
        InventItemSetupSupplyType inventItemSetupSupplyType = inventTable.inventItemSetupSupplyType();

        return inventItemSetupSupplyType.DefaultOrderType == ReqPOType::Kanban
            || inventItemSetupSupplyType.DefaultOrderType == ReqPOType::Production;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemStandardCost</Name>
				<Source><![CDATA[
    private boolean isItemStandardCost()
    {
        return inventTable.modelGroup().inventModelType().stdCostBased();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustInsertCostBreakdown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the cost breakdown should be inserted or not.
    /// </summary>
    /// <returns>
    /// True if cost breakdown should be inserted; false otherwise.
    /// </returns>
    public boolean mustInsertCostBreakdown()
    {
        if (!this.isCostBreakdownActivated() || this.parmIsProduction())
        {
            return false;
        }

        if (this.isCostingVersionIdProvided() && !this.isCostingVersionAllowingBreakdown())
        {
            return false;
        }

        if ((this.isItemStandardCost() || this.isItemBeingConvertedToStdCost())
          && this.isItemProducedByDefault())
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostingVersionId</Name>
				<Source><![CDATA[
    public CostingVersionId parmCostingVersionId(CostingVersionId _costingVersionId = costingVersionId)
    {
        costingVersionId = _costingVersionId;

        return costingVersionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTable</Name>
				<Source><![CDATA[
    public InventTable parmInventTable(InventTable _inventTable = inventTable)
    {
        inventTable = _inventTable;

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsProduction</Name>
				<Source><![CDATA[
    public boolean parmIsProduction(boolean _isProduction = isProduction)
    {
        isProduction = _isProduction;

        return isProduction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = inventTable.itemId)
    {
        this.parmInventTable(inventTable::find(_itemId));

        return inventTable.itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CostBreakdownInsertionRule construct()
    {
        return new CostBreakdownInsertionRule();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>