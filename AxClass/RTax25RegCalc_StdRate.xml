<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rTax25RegCalc_StdRate</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rTax25RegCalc_StdRate extends RTax25RegCalc_Std implements BatchRetryable
{
    #RTax25
    #define.ConPos3(3)
    #define.ConPos4(4)
    #define.ConPos6(6)
    #define.ConPos7(7)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addTrans</Name>
				<Source><![CDATA[
    public boolean addTrans(Map _transMap)
    {
        RefRecId          profitTableRecId = _transMap.lookup(#ProfitRecIdOffset).longLong();
        RTax25ProfitTable profitTable = RTax25ProfitTable::find(profitTableRecId);
        container         values;

        values = [profitTable.ProfitId,
                  profitTable.Description,
                  0.0,
                  0.0,
                  RTax25StdExpressionTable::find(this.seqTable().SeqNum, profitTableRecId).Description,
                  0.0,
                  0.0];

        values = this.peekValue(values, #ConPos3, _transMap); // Total expense amount
        values = this.peekValue(values, #ConPos4, _transMap); // Total base amount
        values = this.peekValue(values, #ConPos6, _transMap); // Standard
        values = this.peekValue(values, #ConPos7, _transMap); // Factor

        this.addTotals(profitTableRecId, values);
        regQuery.addBodyRecord(profitTableRecId,
                               values,
                               profitTable.TableId,
                               profitTable.RecId);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    public void calc()
    {
        try
        {
            ttsbegin;

            super();

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mandatoryFields</Name>
				<Source><![CDATA[
    public container mandatoryFields()
    {
        return connull();//  [7];
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>