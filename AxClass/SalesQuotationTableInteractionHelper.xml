<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationTableInteractionHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesQuotationTableInteractionHelper</c> class is the interaction helper class for the sales
/// quotation details form.
/// </summary>
/// <remarks>
/// This class determines the controls visibility state.
/// </remarks>
class SalesQuotationTableInteractionHelper
{
    SalesQuotationTable         salesQuotationTable;
    SalesQuotationLine          salesQuotationLine;
    SalesQuotationTableType     salesQuotationTableType;
    boolean                     isCommonInitialized;
    BankLGFeatureChecker        bankLGFeatureChecker;
    // <GBR>
    SalesQuotationTableForm     salesQuotationTableForm;
    // </GBR>

    // Header states
    boolean     isProspect;
    boolean     isNotTemplate;
    boolean     quotationNotConfirmed;

    boolean     bankLGRequestFormEnabled;
    boolean     journalQuotationEnabled;
    boolean     journalConfirmationEnabled;
    boolean     attachedSalesOrdersEnabled;

    boolean     updateQuotationEnabled;
    boolean     updateConfirmationEnabled;
    boolean     updateLostEnabled;
    boolean     updateCancelledEnabled;

    // Line states
    boolean     availableDlvDateLineEnabled;
    boolean     isCategoryBasedLine;
    boolean     bomCalculationsEnabled;
    boolean     isInventoried;
    boolean     hasMultipleDeliveries;
    boolean     lineInventTransEnabled;
    boolean     lineInventOnHandEnabled;
    boolean     pcExecuteEnabled;

    // Line function buttons status
    boolean     deliveryScheduleEnabled;

    // Line setup buttons status
    boolean     miscChargesEnabled;

    // Function buttons status
    boolean     canConvert2Customer;
    boolean     alternativeQuotationsEnabled;
    boolean     mayQuotationBeCopied;
    boolean     changeReasonCodeEnabled;
    boolean     transferToProjectEnabled;
    
    private boolean buttonAutoChargesEnabled;
    private boolean buttonAutoChargesVisible;
    private boolean isIntegrationOwnerDynamics365Sales;
    private boolean isIntegrationOwnerDynamics365SalesAndNotCreated;
    private boolean canUpdateQuotationOwnership;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initCommon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the common header and line level controls visibility state.
    /// </summary>
    protected void initCommon()
    {
        if (isCommonInitialized)
        {
            return;
        }
        bankLGFeatureChecker            = BankLGFeatureChecker::construct();
        isCommonInitialized             = true;

        isNotTemplate                   = !salesQuotationTable.isTemplate();

        salesQuotationTableType         = salesQuotationTable.type();
        mayQuotationBeCopied            = salesQuotationTableType.mayQuotationBeCopied();

        // Header update actions
        SalesQuotationTableCheckIfUpdateContract checkIfUpdateContract = SalesQuotationTableCheckIfUpdateContract::newCheckAll();
        container canBeUpdated = salesQuotationTable.checkIfUpdate(checkIfUpdateContract.pack());
        SalesQuotationTableCanBeUpdatedContract canBeUpdatedContract = SalesQuotationTableCanBeUpdatedContract::create(canBeUpdated);

        // only quotation and confirmation enable depends on both header and lines data
        updateQuotationEnabled          = canBeUpdatedContract.parmCanQuotationBeUpdated();
        updateConfirmationEnabled       = canBeUpdatedContract.parmCanConfirmationBeUpdated();
        updateLostEnabled               = canBeUpdatedContract.parmCanLostBeUpdated();
        updateCancelledEnabled          = canBeUpdatedContract.parmCanCancelledBeUpdated();

        isIntegrationOwnerDynamics365Sales  = salesQuotationTable.isIntegrationOwnerDynamics365Sales();
        isIntegrationOwnerDynamics365SalesAndNotCreated = isIntegrationOwnerDynamics365Sales && salesQuotationTable.QuotationStatus != SalesQuotationStatus::Created;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDeliveryScheduleEnabledState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the delivery schedule control state.
    /// </summary>
    protected void initDeliveryScheduleEnabledState()
    {
        deliveryScheduleEnabled   = false;

        if (!isIntegrationOwnerDynamics365Sales)
        {
            if (salesQuotationLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
                || salesQuotationLine.LineDeliveryType == LineDeliveryType::DeliveryLine)
            {
                // existing delivery schedule
                deliveryScheduleEnabled = true;
            }
            else
            {
                // Determines whether an order line can be converted to a delivery schedule.
                deliveryScheduleEnabled =
                    salesQuotationLine.RecId                                                   //check on RecId before invoking server methods and other checks
                    && salesQuotationTable.QuotationType == QuotationType::Sales
                    && (this.isDeliveryScheduleEnabledForQuotationStatus(salesQuotationLine.QuotationStatus))
                    && salesQuotationLine.SalesQty >= 0                                        // No negative qty
                    && salesQuotationLine.InventRefType == InventRefType::None                 // no reference to other modules (eg production)
                    && !salesQuotationTable.ProjIdRef;                                           // not part of a project
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeliveryScheduleEnabledForQuotationStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if delivery schedule is enabled for the <c>SalesQuotationStatus</c>.
    /// </summary>
    /// <param name = "_quotationStatus">A <c>SalesQuotationStatus</c> value.</param>
    /// <returns></returns>
    protected boolean isDeliveryScheduleEnabledForQuotationStatus(SalesQuotationStatus _quotationStatus)
    {
        return _quotationStatus == SalesQuotationStatus::Sent
            || _quotationStatus == SalesQuotationStatus::Created;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initHeaderActions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the quotation header controls visibility states
    /// </summary>
    /// <param name="_salesQuotationTable">
    /// The sales quotation header record.
    /// </param>
    public void initHeaderActions(SalesQuotationTable _salesQuotationTable)
    {
        salesQuotationTable = _salesQuotationTable;
        this.initCommon();

        isProspect = salesQuotationTable.BusRelAccount != '';

        // Header function actions
        canConvert2Customer                 = salesQuotationTableType.mayConvert2Customer();
        alternativeQuotationsEnabled        = salesQuotationTableType.mayQuotationBeLinked();
        changeReasonCodeEnabled             = !salesQuotationTable.checkUpdate(false);
        transferToProjectEnabled            = salesQuotationTableType.mayLinkToProjectBeUpdated();
        buttonAutoChargesEnabled            = AutoChargesSetupSequenceCompoundFeature::instance().isEnabled() && salesQuotationTable.markupAllowed();
        buttonAutoChargesVisible            = AutoChargesSetupSequenceCompoundFeature::instance().isEnabled();
        canUpdateQuotationOwnership         = salesQuotationTable.canUpdateQuotationOwnership();

        // Header inquiry actions
        container existingJournals = salesQuotationTable.existingJournals();
        journalQuotationEnabled = conpeek(existingJournals, SalesQuotationTableType::posQuotation()) ? true : false;
        journalConfirmationEnabled = conpeek(existingJournals, SalesQuotationTableType::posConfirmation()) ? true : false;
        quotationNotConfirmed = salesQuotationTable.QuotationStatus != SalesQuotationStatus::Confirmed;
        attachedSalesOrdersEnabled = isNotTemplate && salesQuotationTable.SalesIdRef != '';

        // Header setup actions
        bankLGRequestFormEnabled = bankLGFeatureChecker.checkFeatureEnabled() && salesQuotationTable.isMarkedForBankLG();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLineActions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the quotation line controls visibility states
    /// </summary>
    /// <param name="_salesQuotationTable">
    /// The sales quotation header record.
    /// </param>
    /// <param name="_salesQuotationLine">
    /// The sales quotation line record
    /// </param>
    public void initLineActions(SalesQuotationTable _salesQuotationTable, SalesQuotationLine _salesQuotationLine)
    {
        salesQuotationTable     = _salesQuotationTable;
        salesQuotationLine      = _salesQuotationLine;

        this.initCommon();
        this.initLinePCActions(salesQuotationLine);

        isCategoryBasedLine     = salesQuotationLine.isCategoryBased();
        isInventoried           = salesQuotationLine.isStocked();
        hasMultipleDeliveries   = salesQuotationLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries;

        // Line setup actions
        miscChargesEnabled = isNotTemplate && salesQuotationLine.markupAllowed();

        // Line function actions
        this.initDeliveryScheduleEnabledState();

        // Line calculation actions
        bomCalculationsEnabled    = !isIntegrationOwnerDynamics365SalesAndNotCreated && isInventoried && salesQuotationLine.inventTable().inventItemType().canHaveBOM();

        // Line inventory actions
        lineInventTransEnabled    = isInventoried && isNotTemplate && !hasMultipleDeliveries;
        lineInventOnHandEnabled   = isInventoried && isNotTemplate;

        // Delivery actions
        availableDlvDateLineEnabled = !isIntegrationOwnerDynamics365Sales && isNotTemplate && salesQuotationLine.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLinePCActions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the quotation line product builder configuration controls visibility state.
    /// </summary>
    /// <param name="_salesQuotationLine">
    /// The sales quotation header record.
    /// </param>
    public void initLinePCActions(SalesQuotationLine _salesQuotationLine)
    {
        pcExecuteEnabled = !isIntegrationOwnerDynamics365SalesAndNotCreated
            && _salesQuotationLine.ItemId
            && _salesQuotationLine.QuotationStatus != SalesQuotationStatus::Confirmed
            && _salesQuotationLine.LineDeliveryType == LineDeliveryType::OrderLine
            && PCRuntimeLibrary::isConstraintBasedConfigurable(_salesQuotationLine.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAlternativeQuotationsEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Checks is alternative quotation control should be enabled.
    /// </summary>
    /// <returns>
    ///   true if alternative quotation control should be enabled; otherwise, false.
    /// </returns>
    public boolean parmAlternativeQuotationsEnabled()
    {
        return alternativeQuotationsEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAttachedSalesOrdersEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Checks is attached sales order control should be enabled.
    /// </summary>
    /// <returns>
    ///   true if attached sales order control should be enabled; otherwise, false.
    /// </returns>
    public boolean parmAttachedSalesOrdersEnabled()
    {
        return attachedSalesOrdersEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAvailableDlvDateLineEnabled</Name>
				<Source><![CDATA[
    public boolean parmAvailableDlvDateLineEnabled()
    {
        return availableDlvDateLineEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankLGRequestFormEnabled</Name>
				<Source><![CDATA[
    public boolean parmBankLGRequestFormEnabled()
    {
        return bankLGRequestFormEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBOMCalculationsEnabled</Name>
				<Source><![CDATA[
    public boolean parmBOMCalculationsEnabled()
    {
        return bomCalculationsEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanConvert2Customer</Name>
				<Source><![CDATA[
    public boolean parmCanConvert2Customer()
    {
        return canConvert2Customer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeReasonCodeEnabled</Name>
				<Source><![CDATA[
    public boolean parmChangeReasonCodeEnabled()
    {
        return changeReasonCodeEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryScheduleEnabled</Name>
				<Source><![CDATA[
    public boolean parmDeliveryScheduleEnabled()
    {
        return deliveryScheduleEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCategoryBasedLine</Name>
				<Source><![CDATA[
    public boolean parmIsCategoryBasedLine()
    {
        return isCategoryBasedLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsNotTemplate</Name>
				<Source><![CDATA[
    public boolean parmIsNotTemplate()
    {
        return isNotTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsProspect</Name>
				<Source><![CDATA[
    public boolean parmIsProspect()
    {
        return isProspect;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalConfirmationEnabled</Name>
				<Source><![CDATA[
    public boolean parmJournalConfirmationEnabled()
    {
        return journalConfirmationEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalQuotationEnabled</Name>
				<Source><![CDATA[
    public boolean parmJournalQuotationEnabled()
    {
        return journalQuotationEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineInventOnHandEnabled</Name>
				<Source><![CDATA[
    public boolean parmLineInventOnHandEnabled()
    {
        return lineInventOnHandEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineInventTransEnabled</Name>
				<Source><![CDATA[
    public boolean parmLineInventTransEnabled()
    {
        return lineInventTransEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMayQuotationBeCopied</Name>
				<Source><![CDATA[
    public boolean parmMayQuotationBeCopied()
    {
        return mayQuotationBeCopied;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMiscChargesEnabled</Name>
				<Source><![CDATA[
    public boolean parmMiscChargesEnabled()
    {
        return miscChargesEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPCExecuteEnabled</Name>
				<Source><![CDATA[
    public boolean parmPCExecuteEnabled()
    {
        return pcExecuteEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceSimEnabled</Name>
				<Source><![CDATA[
    public boolean parmPriceSimEnabled()
    {
        return isNotTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationNotConfirmed</Name>
				<Source><![CDATA[
    public boolean parmQuotationNotConfirmed()
    {
        return quotationNotConfirmed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferToProjectEnabled</Name>
				<Source><![CDATA[
    public boolean parmTransferToProjectEnabled()
    {
        return transferToProjectEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateCancelledEnabled</Name>
				<Source><![CDATA[
    public boolean parmUpdateCancelledEnabled()
    {
        return updateCancelledEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateConfirmationEnabled</Name>
				<Source><![CDATA[
    public boolean parmUpdateConfirmationEnabled()
    {
        return updateConfirmationEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateLostEnabled</Name>
				<Source><![CDATA[
    public boolean parmUpdateLostEnabled()
    {
        return updateLostEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateQuotationEnabled</Name>
				<Source><![CDATA[
    public boolean parmUpdateQuotationEnabled()
    {
        return updateQuotationEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonAutoChargesEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean parmButtonAutoChargesEnabled()
    {
        return buttonAutoChargesEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonAutoChargesVisible</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean parmButtonAutoChargesVisible()
    {
        return buttonAutoChargesVisible;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonSupplementaryItemsVisible</Name>
				<Source><![CDATA[
    internal boolean parmButtonSupplementaryItemsVisible()
    {
        return !isIntegrationOwnerDynamics365SalesAndNotCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanUpdateQuotationOwnership</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean parmCanUpdateQuotationOwnership()
    {
        return canUpdateQuotationOwnership;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesQuotationTableForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a <c>SalesQuotationTableForm</c> form.
    /// </summary>
    /// <param name="_salesQuotationTableForm">
    /// An instance of the <c>SalesQuotationTableForm</c> class.
    /// </param>
    public void setSalesQuotationTableForm(SalesQuotationTableForm _salesQuotationTableForm)
    {
        salesQuotationTableForm = _salesQuotationTableForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SalesQuotationTableInteractionHelper construct()
    {
        return new SalesQuotationTableInteractionHelper();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>