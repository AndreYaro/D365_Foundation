<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rhrmGradeScaleCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rhrmGradeScaleCopy extends RunBase
{
    RHRMGradeScaleTable     gradeScaleTable, gradeScaleTableNew;
    StartDate               startDate;
    RHRMGradeScaleId        scaleId;

    DialogField             dialogStartDate;
    DialogField             dialogFactor;
    DialogField             dialogScaleId;
    DialogField             dialogCopyCurrent;

    QueryRun                queryRun;
    Factor                  factor;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyScale</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void copyScale()
    {
        RHRMGradeScaleLine      gradeScaleLineSource;
        RHRMGradeScaleLine      gradeScaleLineTarget;
        RHRMGradeScaleTable     gradeScaleTableActive;
        ;

        if (RHRMGradeScaleTable::find(scaleId, startDate))
        {
            throw error(strFmt("@RUP2488", scaleId, startDate));
        }

        gradeScaleTableActive = RHRMGradeScaleTable::findActive(scaleId, startDate);

        if (gradeScaleTableActive.RecId && gradeScaleTableActive.StartDate >= startDate)
        {
            throw error("@RUP2489");
        }

        gradeScaleTableNew.initValue();

        gradeScaleTableNew.GradeScaleId   = scaleId ? scaleId : gradeScaleTable.GradeScaleId;
        gradeScaleTableNew.StartDate      = startDate;
        gradeScaleTableNew.FirstGradeWage = gradeScaleTable.FirstGradeWage * factor;
        gradeScaleTableNew.Active         = NoYes::No;

        gradeScaleTableNew.insert();

        while select gradeScaleLineSource
            where gradeScaleLineSource.StartDate    == gradeScaleTable.StartDate &&
                  gradeScaleLineSource.GradeScaleId == gradeScaleTable.GradeScaleId
        {
            gradeScaleLineTarget.data(gradeScaleLineSource);

            gradeScaleLineTarget.StartDate    = gradeScaleTableNew.StartDate;
            gradeScaleLineTarget.GradeScaleId = gradeScaleTableNew.GradeScaleId;

            gradeScaleLineTarget.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase       dialog = super();
        FormDateControl     dateControl;
        FormCheckBoxControl checkboxControl;
        ;

        dialog.caption("@RUP2487");

        dialogCopyCurrent = dialog.addFieldValue(extendedTypeStr(NoYesId), NoYes::Yes, "@RUP2490");
        checkboxControl = dialogCopyCurrent.control();

        dialog.addGroup("@RUP2491");

        dialogScaleId   = dialog.addFieldValue(extendedTypeStr(RHRMGradeScaleId), scaleId);

        dialogStartDate = dialog.addField(extendedTypeStr(StartDate), "@RUP543");
        dateControl = dialogStartDate.control();
        dateControl.mandatory(true);

        dialogFactor = dialog.addFieldValue(extendedTypeStr(Factor), 1);

        dialog.allowUpdateOnSelectCtrl(true);
        this.dialogSelectCtrl();

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogSelectCtrl</Name>
				<Source><![CDATA[
    void dialogSelectCtrl()
    {
        super();

        this.updateQuery(gradeScaleTable, dialogCopyCurrent.value());

        dialogScaleId.allowEdit(dialogCopyCurrent.value());

        if (!dialogCopyCurrent.value())
        {
            dialogScaleId.value('');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            startDate = dialogStartDate.value();
            factor    = dialogFactor.value();
            scaleId   = dialogScaleId.value();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void initQuery(RHRMGradeScaleTable _gradeScaleTable)
    {
        Query query = new Query();
        ;

        query.addDataSource(tableNum(RHRMGradeScaleTable));

        queryRun = new QueryRun(query);

        this.updateQuery(_gradeScaleTable, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initValue(RHRMGradeScaleTable _gradeScaleTable)
    {
        ;

        gradeScaleTable = _gradeScaleTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(RHRMGradeScaleTable _gradeScaleTable)
    {
        ;
        super();

        gradeScaleTable  = _gradeScaleTable;
        scaleId          = gradeScaleTable.GradeScaleId;

        this.initQuery(_gradeScaleTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        RHRMGradeScaleId    currentScaleId;
        ;
        queryRun.query().dataSourceTable(tableNum(RHRMGradeScaleTable)).sortClear();
        queryRun.query().dataSourceTable(tableNum(RHRMGradeScaleTable)).addSortField(fieldNum(RHRMGradeScaleTable, GradeScaleId));
        queryRun.query().dataSourceTable(tableNum(RHRMGradeScaleTable)).addSortField(fieldNum(RHRMGradeScaleTable, StartDate), SortOrder::Descending);

        ttsbegin;

        while (queryRun.next())
        {
            gradeScaleTable = queryRun.get(tableNum(RHRMGradeScaleTable));
            if (gradeScaleTable.GradeScaleId != currentScaleId)
            {
                this.copyScale();
                currentScaleId = gradeScaleTable.GradeScaleId;
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        ;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void updateQuery(RHRMGradeScaleTable _gradeScaleTable, boolean _copyCurrent = true)
    {
        QueryBuildDataSource    qbds = queryRun.query().dataSourceTable(tableNum(RHRMGradeScaleTable));
        QueryBuildRange         range;
        ;

        range = SysQuery::findOrCreateRange(qbds, fieldNum(RHRMGradeScaleTable, GradeScaleId));
        range.value(_copyCurrent  ? _gradeScaleTable.GradeScaleId : '');
        range.status(_copyCurrent ? RangeStatus::Locked : RangeStatus::Open);

        range = SysQuery::findOrCreateRange(qbds, fieldNum(RHRMGradeScaleTable, Active));
        range.value(_copyCurrent ? queryValue(_gradeScaleTable.Active) : queryValue(NoYes::Yes));
        range.status(RangeStatus::Hidden);

        range = SysQuery::findOrCreateRange(qbds, fieldNum(RHRMGradeScaleTable, StartDate));
        range.value(_copyCurrent ? queryValue(_gradeScaleTable.StartDate) : SysQuery::valueUnlimited());
        range.status(RangeStatus::Hidden);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object _p1 = null)
    {
        boolean ret;
        ;

        ret = super(_p1);

        if (ret)
        {
            if (! startDate)
            {
                ret = checkFailed("@SYS77971");
            }

            if (factor <= 0)
            {
                ret = checkFailed("@SYS82797");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public ClassDescription description()
    {
        return "@RUP2487";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RHRMGradeScaleCopy  gradeScaleCopy;
        ;

        if (!_args || _args.dataset() != tableNum(RHRMGradeScaleTable))
        {
            throw error(Error::missingRecord("@RUP2487"));
        }

        gradeScaleCopy = new RHRMGradeScaleCopy(_args.record());

        if (gradeScaleCopy.prompt())
        {
            gradeScaleCopy.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>