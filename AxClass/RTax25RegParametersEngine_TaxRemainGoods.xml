<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rTax25RegParametersEngine_TaxRemainGoods</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rTax25RegParametersEngine_TaxRemainGoods extends RTax25RegParametersEngine
{
    #define.GroupParameterCode(4)
    #define.ParameterCode10(10)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ledgerDimensionVisible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies visibility of the dimension control on the parameter form.
    /// </summary>
    /// <returns>
    /// true if the dimension control should be visible; otherwise, false.
    /// </returns>
    public boolean ledgerDimensionVisible()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
public void lookup(FormStringControl _lookupCtrl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query = new Query();
        QueryBuildDataSource    qbd;

            registerParameters = registerParametersDs.cursor();

        if (registerParameters.ParameterCode && _lookupCtrl)
        {
            _lookupCtrl.replaceOnLookup(true);

            if (registerParameters.ParameterCode <= #GroupParameterCode || registerParameters.ParameterCode == #ParameterCode10)
            {
                sysTableLookup = SysTableLookup::newParameters(tablenum(RTax25LedgerIntervalGroup), _lookupCtrl);
                qbd = query.addDataSource(tablenum(RTax25LedgerIntervalGroup));
                sysTableLookup.addLookupfield(fieldnum(RTax25LedgerIntervalGroup, IntervalGroup));
                sysTableLookup.addLookupfield(fieldnum(RTax25LedgerIntervalGroup, Name));
                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
            }
        }
        else
        {
            throw error("@SYS3461");
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>lookupEnabled</Name>
				<Source><![CDATA[
        public boolean lookupEnabled()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parameterAllowEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies possibility of editing of the register parameter.
    /// </summary>
    /// <returns>
    /// true, if the register parameter can be edited; otherwise, false.
    /// </returns>
    public boolean parameterAllowEdit()
    {
        registerParameters = registerParametersDs.cursor();

        if (registerParameters.ParameterCode && (registerParameters.ParameterCode <= #GroupParameterCode  || registerParameters.ParameterCode == #ParameterCode10))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        registerParameters = registerParametersDs.cursor();

        if (registerParameters.ParameterCode && (registerParameters.ParameterCode <= #GroupParameterCode  || registerParameters.ParameterCode == #ParameterCode10))
        {
            return RTax25LedgerIntervalGroup::checkExist(strLRTrim(registerParameters.Parameter));
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>