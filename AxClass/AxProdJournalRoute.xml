<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxProdJournalRoute</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysObsolete('The AxD-framework is replaced by the Data Entity-framework', true, 30\06\2020)]
class AxProdJournalRoute extends AxInternalBase
{
    ProdJournalRoute    prodJournalRoute;
    ProdJournalRoute    prodJournalRoute_Last;
    JournalTableData    journalTableData;
    JournalTransData    journalTransData;

    int                 prodRouteIdx;
    int                 prodJournalTableIdx;
    int                 prodTableIdx;
    int                 prodJobTypeIdx;
    int                 prodJournalRouteIdx;

    LineNum             lineNum;

    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _prodJournalRoute = prodJournalRoute)
    {
        if (!prmisdefault(_prodJournalRoute))
        {
            super(_prodJournalRoute);
            prodJournalRoute = _prodJournalRoute as ProdJournalRoute;
        }
        else
        {
            super();
        }

        return prodJournalRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>ProdJournalRoute</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>ProdJournalRoute</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        ProdJournalRoute localProdJournalRoute;

        return localProdJournalRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>end</Name>
				<Source><![CDATA[
    /// <summary>
    /// Throws an error if an <c>inventDim</c> section was missing in an XML string.
    /// </summary>
    /// <remarks>
    /// The <c>end</c> method is used for processing incoming documents and is run before popping an
    /// <c>AxBC </c>object off the stack. The method is needed because <c>AxBC </c>classes have
    /// <c>AxInventDim</c> as a child. Therefore it must throw an error if no inventory dimension section
    /// has been encountered in the XML. The method is intended for internal use only and should not be
    /// called through the interface.
    /// </remarks>
    public void end()
    {
        super();
        lineNum = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodstr(AxProdJournalRoute, parmTransDate));
        this.setParmMethodAsNotMandatory(methodstr(AxProdJournalRoute, parmProdId));

    //    this.setParmMethodAsNotMandatory(methodstr(AxInventProdJournalBOM, parmTransDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRecord</Name>
				<Source><![CDATA[
    protected void initRecord()
    {
        ProdJournalRoute   lastProdJournalRoute;

        journalTableData = new JournalTableData(ProdJournalTable::find(this.parmJournalId()));

        super();

        select firstonly lastProdJournalRoute order by LineNum desc
               where lastProdJournalRoute.JournalId == this.parmJournalId();

        prodJournalRoute_Last = lastProdJournalRoute.data();
        journalTransData = new JournalTransData(this.currentRecord(), journalTableData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProdJournalTableRecordFieldsSet</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isProdJournalTableRecordFieldsSet()
    {
        return this.isFieldSet(fieldnum(ProdJournalRoute, JournalId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProdTableRecordFieldsSet</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isProdTableRecordFieldsSet()
    {
        return this.isFieldSet(fieldnum(ProdJournalRoute, OprNum));
    }

]]></Source>
			</Method>
			<Method>
				<Name>localProdJournalRouteRecord</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdJournalRoute localProdJournalRouteRecord(ProdJournalRoute _prodJournalRoute = null)
    {
        ProdJournalRoute   localProdJournalRoute;

        if (!prodJournalRouteIdx)
        {
            prodJournalRouteIdx          = this.nextCacheIdx();
        }

        if (!prmisdefault(_prodJournalRoute))
        {
            this.tableCacheInsert(prodJournalRouteIdx, _prodJournalRoute);
            localProdJournalRoute = _prodJournalRoute;
        }
        else
        {
            if (this.tableCacheExist(prodJournalRouteIdx))
            {
                localProdJournalRoute = this.tableCacheLookup(prodJournalRouteIdx);
            }
            else
            {
                localProdJournalRoute.clear();
                this.prodJobType().initProdJournalRoute(this.prodJournalRoute().prodRoute(), localProdJournalRoute);
                this.tableCacheInsert(prodJournalRouteIdx, localProdJournalRoute);
            }
        }

        return localProdJournalRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCancelled</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Cancelled parmCancelled(Cancelled _cancelled = NoYes::No)
    {
        if (!prmisdefault(_cancelled))
        {
            this.setField(fieldnum(ProdJournalRoute, Cancelled), _cancelled);
        }

        return prodJournalRoute.Cancelled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryHoursId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RouteCostCategoryId parmCategoryHoursId(RouteCostCategoryId _categoryHoursId = '')
    {
        if (!prmisdefault(_categoryHoursId))
        {
            this.setField(fieldnum(ProdJournalRoute, CategoryHoursId), _categoryHoursId);
        }

        return prodJournalRoute.CategoryHoursId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryQtyId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RouteCostCategoryId parmCategoryQtyId(RouteCostCategoryId _categoryQtyId = '')
    {
        if (!prmisdefault(_categoryQtyId))
        {
            this.setField(fieldnum(ProdJournalRoute, CategoryQtyId), _categoryQtyId);
        }

        return prodJournalRoute.CategoryQtyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisdefault(_defaultDimension))
        {
            this.setField(fieldnum(ProdJournalRoute, DefaultDimension), _defaultDimension);
        }

        return prodJournalRoute.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmErrorCause</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdErrorCause parmErrorCause(ProdErrorCause _errorCause = ProdErrorCause::None)
    {
        if (!prmisdefault(_errorCause))
        {
            this.setField(fieldnum(ProdJournalRoute, ErrorCause), _errorCause);
        }

        return prodJournalRoute.ErrorCause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExecutedPct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdExecutedPct parmExecutedPct(ProdExecutedPct _executedPct = 0)
    {
        if (!prmisdefault(_executedPct))
        {
            this.setField(fieldnum(ProdJournalRoute, ExecutedPct), _executedPct);
        }

        return prodJournalRoute.ExecutedPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromTime</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public SchedFromTime parmFromTime(SchedFromTime _fromTime = 0)
    {
        if (!prmisdefault(_fromTime))
        {
            this.setField(fieldnum(ProdJournalRoute, FromTime), _fromTime);
        }

        return prodJournalRoute.FromTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHourPrice</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdHourPrice parmHourPrice(ProdHourPrice _hourPrice = 0)
    {
        if (!prmisdefault(_hourPrice))
        {
            this.setField(fieldnum(ProdJournalRoute, HourPrice), _hourPrice);
        }

        return prodJournalRoute.HourPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHours</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdReportedHours parmHours(ProdReportedHours _hours = 0)
    {
        if (!prmisdefault(_hours))
        {
            this.setField(fieldnum(ProdJournalRoute, Hours), _hours);
        }

        return prodJournalRoute.Hours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJobFinished</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdFinishedJob parmJobFinished(ProdFinishedJob _jobFinished = NoYes::No)
    {
        if (!prmisdefault(_jobFinished))
        {
            this.setField(fieldnum(ProdJournalRoute, JobFinished), _jobFinished);
        }

        return prodJournalRoute.JobFinished;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJobId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdJobId parmJobId(ProdJobId _jobId = '')
    {
        if (!prmisdefault(_jobId))
        {
            this.setField(fieldnum(ProdJournalRoute, JobId), _jobId);
        }

        return prodJournalRoute.JobId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJobType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RouteJobType parmJobType(RouteJobType _jobType = RouteJobType::QueueBefore)
    {
        if (!prmisdefault(_jobType))
        {
            this.setField(fieldnum(ProdJournalRoute, JobType), _jobType);
        }

        return prodJournalRoute.JobType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdJournalIdRoute parmJournalId(ProdJournalIdRoute _journalId = '')
    {
        if (!prmisdefault(_journalId))
        {
            this.setField(fieldnum(ProdJournalRoute, JournalId), _journalId);
        }

        return prodJournalRoute.JournalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisdefault(_lineNum))
        {
            this.setField(fieldnum(ProdJournalRoute, LineNum), _lineNum);
        }

        return prodJournalRoute.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOprFinished</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdFinishedOpr parmOprFinished(ProdFinishedOpr _oprFinished = NoYes::No)
    {
        if (!prmisdefault(_oprFinished))
        {
            this.setField(fieldnum(ProdJournalRoute, OprFinished), _oprFinished);
        }

        return prodJournalRoute.OprFinished;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOprId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RouteOprId parmOprId(RouteOprId _oprId = '')
    {
        if (!prmisdefault(_oprId))
        {
            this.setField(fieldnum(ProdJournalRoute, OprId), _oprId);
        }

        return prodJournalRoute.OprId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOprNum</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public OprNum parmOprNum(OprNum _oprNum = 0)
    {
        if (!prmisdefault(_oprNum))
        {
            this.setField(fieldnum(ProdJournalRoute, OprNum), _oprNum);
        }

        return prodJournalRoute.OprNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOprPriority</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RouteOprPriority parmOprPriority(RouteOprPriority _oprPriority = RouteOprPriority::Primary)
    {
        if (!prmisdefault(_oprPriority))
        {
            this.setField(fieldnum(ProdJournalRoute, OprPriority), _oprPriority);
        }

        return prodJournalRoute.OprPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyError</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PdsCWBatchErr parmPdsCWQtyError(PdsCWBatchErr _pdsCWQtyError = 0)
    {
        if (!prmisdefault(_pdsCWQtyError))
        {
            this.setField(fieldnum(ProdJournalRoute, PdsCWQtyError), _pdsCWQtyError);
        }

        return prodJournalRoute.PdsCWQtyError;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyGood</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PdsCWBatchGood parmPdsCWQtyGood(PdsCWBatchGood _pdsCWQtyGood = 0)
    {
        if (!prmisdefault(_pdsCWQtyGood))
        {
            this.setField(fieldnum(ProdJournalRoute, PdsCWQtyGood), _pdsCWQtyGood);
        }

        return prodJournalRoute.PdsCWQtyGood;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdId parmProdId(ProdId _prodId = '')
    {
        if (!prmisdefault(_prodId))
        {
            this.setField(fieldnum(ProdJournalRoute, ProdId), _prodId);
        }

        return prodJournalRoute.ProdId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdInventDimId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public InventDimId parmProdInventDimId(InventDimId _prodInventDimId = '')
    {
        if (!prmisdefault(_prodInventDimId))
        {
            this.setField(fieldnum(ProdJournalRoute, ProdInventDimId), _prodInventDimId);
        }

        return prodJournalRoute.ProdInventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdPickList</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdRouteAutoPickList parmProdPickList(ProdRouteAutoPickList _prodPickList = NoYes::No)
    {
        if (!prmisdefault(_prodPickList))
        {
            this.setField(fieldnum(ProdJournalRoute, ProdPickList), _prodPickList);
        }

        return prodJournalRoute.ProdPickList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdPickListJournalId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdJournalIdBOM parmProdPickListJournalId(ProdJournalIdBOM _prodPickListJournalId = '')
    {
        if (!prmisdefault(_prodPickListJournalId))
        {
            this.setField(fieldnum(ProdJournalRoute, ProdPickListJournalId), _prodPickListJournalId);
        }

        return prodJournalRoute.ProdPickListJournalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdReportFinished</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdAutoReportFinished parmProdReportFinished(ProdAutoReportFinished _prodReportFinished = NoYes::No)
    {
        if (!prmisdefault(_prodReportFinished))
        {
            this.setField(fieldnum(ProdJournalRoute, ProdReportFinished), _prodReportFinished);
        }

        return prodJournalRoute.ProdReportFinished;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdReportFinishedJournalId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdJournalIdProd parmProdReportFinishedJournalId(ProdJournalIdProd _prodReportFinishedJournalId = '')
    {
        if (!prmisdefault(_prodReportFinishedJournalId))
        {
            this.setField(fieldnum(ProdJournalRoute, ProdReportFinishedJournalId), _prodReportFinishedJournalId);
        }

        return prodJournalRoute.ProdReportFinishedJournalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyError</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdReportedError parmQtyError(ProdReportedError _qtyError = 0)
    {
        if (!prmisdefault(_qtyError))
        {
            this.setField(fieldnum(ProdJournalRoute, QtyError), _qtyError);
        }

        return prodJournalRoute.QtyError;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyGood</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdReportedGood parmQtyGood(ProdReportedGood _qtyGood = 0)
    {
        if (!prmisdefault(_qtyGood))
        {
            this.setField(fieldnum(ProdJournalRoute, QtyGood), _qtyGood);
        }

        return prodJournalRoute.QtyGood;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyPrice</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdQtyPrice parmQtyPrice(ProdQtyPrice _qtyPrice = 0)
    {
        if (!prmisdefault(_qtyPrice))
        {
            this.setField(fieldnum(ProdJournalRoute, QtyPrice), _qtyPrice);
        }

        return prodJournalRoute.QtyPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReleaseKindId_RU</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdReleaseKindId_RU parmReleaseKindId_RU(ProdReleaseKindId_RU _releaseKindId = '')
    {
        if (! prmisdefault(_releaseKindId))
        {
            this.setField(fieldnum(ProdJournalRoute, ReleaseKindId_RU), _releaseKindId);
        }

        return prodJournalRoute.ReleaseKindId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStornoPhysical_RU</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Storno_RU parmStornoPhysical_RU(Storno_RU _stornoPhysical = NoYes::No)
    {
        if (!prmisdefault(_stornoPhysical))
        {
            this.setField(fieldnum(ProdJournalRoute, StornoPhysical_RU), _stornoPhysical);
        }

        return prodJournalRoute.StornoPhysical_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToTime</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public SchedToTime parmToTime(SchedToTime _toTime = 0)
    {
        if (!prmisdefault(_toTime))
        {
            this.setField(fieldnum(ProdJournalRoute, ToTime), _toTime);
        }

        return prodJournalRoute.ToTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public JournalTransDate parmTransDate(JournalTransDate _transDate = dateNull())
    {
        if (!prmisdefault(_transDate))
        {
            this.setField(fieldnum(ProdJournalRoute, TransDate), _transDate);
        }

        return prodJournalRoute.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVoucher</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Voucher parmVoucher(Voucher _voucher = '')
    {
        if (!prmisdefault(_voucher))
        {
            this.setField(fieldnum(ProdJournalRoute, Voucher), _voucher);
        }

        return prodJournalRoute.Voucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorker</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdWorker parmWorker(ProdWorker _worker = 0)
    {
        if (!prmisdefault(_worker))
        {
            this.setField(fieldnum(ProdJournalRoute, Worker), _worker);
        }

        return prodJournalRoute.Worker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWrkCtrId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public WrkCtrIdBase parmWrkCtrId(WrkCtrIdBase _wrkCtrId = '')
    {
        if (!prmisdefault(_wrkCtrId))
        {
            this.setField(fieldnum(ProdJournalRoute, WrkCtrId), _wrkCtrId);
        }

        return prodJournalRoute.WrkCtrId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodJobType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdJobType prodJobType(ProdJobType _prodJobType = null)
    {
        ProdJobType  prodJobType;

        if (!prodJobTypeIdx)
        {
            prodJobTypeIdx = this.nextCacheIdx();
        }

        if (!prmisdefault(_prodJobType))
        {
            this.classCacheInsert(prodJobTypeIdx, _prodJobType);
            prodJobType = _prodJobType;
        }
        else
        {
            if (this.classCacheExist(prodJobTypeIdx))
            {
                prodJobType = this.classCacheLookup(prodJobTypeIdx);
            }
            else
            {
                prodJobType = ProdJobType::construct(this.parmJobType());
                this.classCacheInsert(prodJobTypeIdx, prodJobType);
            }
        }

        return prodJobType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodJournalRoute</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdJournalRoute prodJournalRoute(ProdJournalRoute _prodJournalRoute = prodJournalRoute)
    {
        if (!prmisdefault(_prodJournalRoute))
        {
            this.setCurrentRecordFromExternal(_prodJournalRoute);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodJournalTableRecord</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdJournalTable prodJournalTableRecord(ProdJournalTable _prodJournalTable = null)
    {
        ProdJournalTable   prodJournalTable;

        if (!prodJournalTableIdx)
        {
            prodJournalTableIdx          = this.nextCacheIdx();
        }

        if (!prmisdefault(_prodJournalTable))
        {
            this.tableCacheInsert(prodJournalTableIdx, _prodJournalTable);
            prodJournalTable = _prodJournalTable;
        }
        else
        {
            if (this.tableCacheExist(prodJournalTableIdx))
            {
                prodJournalTable = this.tableCacheLookup(prodJournalTableIdx);
            }
            else
            {
                this.setProdJournalTableRecordFields();
                prodJournalTable = ProdJournalTable::find(this.parmJournalId());
                this.tableCacheInsert(prodJournalTableIdx, prodJournalTable);
            }
        }

        return prodJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodRouteRecord</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdRoute prodRouteRecord(ProdRoute _prodRoute = null)
    {
        ProdRoute   prodRoute;

        if (!prodRouteIdx)
        {
            prodRouteIdx          = this.nextCacheIdx();
        }

        if (!prmisdefault(_prodRoute))
        {
            this.tableCacheInsert(prodRouteIdx, _prodRoute);
            prodRoute = _prodRoute;
        }
        else
        {
            if (this.tableCacheExist(prodRouteIdx))
            {
                prodRoute = this.tableCacheLookup(prodRouteIdx);
            }
            else
            {
                this.setProdRouteRecordFields();
                prodRoute = ProdRoute::find(this.parmProdId(),this.parmOprNum(),this.parmOprPriority());
                this.tableCacheInsert(prodRouteIdx, prodRoute);
            }
        }

        return prodRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodTableRecord</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ProdTable prodTableRecord(ProdTable _prodTable = null)
    {
        ProdTable     prodTable;

        if (!prodTableIdx)
        {
            prodTableIdx = this.nextCacheIdx();
        }

        if (!prmisdefault(_prodTable))
        {
            this.tableCacheInsert(prodTableIdx, _prodTable);
            prodTable = _prodTable;
        }
        else
        {
            if (this.tableCacheExist(prodTableIdx))
            {
                prodTable = this.tableCacheLookup(prodTableIdx);
            }
            else
            {
                this.setProdJournalTableRecordFields();
                prodTable   = ProdTable::find(this.parmProdId());
                this.tableCacheInsert(prodTableIdx, prodTable);
            }
        }

        return prodTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCancelled</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setCancelled()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, Cancelled)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCategoryHoursId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setCategoryHoursId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, CategoryHoursId)))
        {
            return;
        }

        this.setJobType();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, JobType)))
        {
            this.parmCategoryHoursId(this.localProdJournalRouteRecord().CategoryHoursId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCategoryQtyId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setCategoryQtyId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, CategoryQtyId)))
        {
            return;
        }

        this.setJobType();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, JobType)))
        {
            this.parmCategoryQtyId(this.localProdJournalRouteRecord().CategoryQtyId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, DefaultDimension)))
        {
            return;
        }

        this.setProdId();
        this.setOprNum();
        this.setWrkCtrId();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, ProdId)) ||
            this.isFieldSet(fieldnum(ProdJournalRoute, OprNum)) ||
            this.isFieldSet(fieldnum(ProdJournalRoute, WrkCtrId)))
        {
            this.parmDefaultDimension(this.currentRecord().mergeDimension(
                                      this.prodJournalRoute().wrkCtrTable().DefaultDimension,
                                      this.prodJournalRoute().prodRoute().DefaultDimension));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record.
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method so that all of the fields that are
    ///    entity specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldnum(ProdJournalRoute, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setErrorCause</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setErrorCause()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ErrorCause)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExecutedPct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setExecutedPct()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ExecutedPct)))
        {
            return;
        }

        this.setJobType();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, JobType)))
        {
            this.parmExecutedPct(this.prodJournalRoute().proposalRouteExecutedPct());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromTime</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setFromTime()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, FromTime)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHourPrice</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setHourPrice()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, HourPrice)))
        {
            return;
        }

        this.setJobType();
        this.setCategoryHoursId();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, CategoryHoursId)) &&
            this.isFieldSet(fieldnum(ProdJournalRoute, JobType)))
        {
            this.parmHourPrice(RouteCostCategory::find(this.parmCategoryHoursId()).costPrice(InventDim::find(this.parmProdInventDimId()).InventSiteId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHours</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setHours()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, Hours)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJobFinished</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setJobFinished()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, JobFinished)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJobId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setJobId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, JobId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJobType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setJobType()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, JobType)))
        {
            return;
        }

        this.setProdJournalTableRecordFields();

        if (this.isProdJournalTableRecordFieldsSet())
        {
            this.parmJobType(prodJournalRoute_Last ? prodJournalRoute_Last.JobType : RouteJobType::Process);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJournalId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setJournalId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, JournalId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, LineNum)))
        {
            return;
        }

        this.setProdJournalTableRecordFields();

        if (this.isProdJournalTableRecordFieldsSet())
        {
            if (!lineNum)
            {
                lineNum = ProdJournalRoute::lastLineNum(this.parmJournalId());
            }

            lineNum += 1;
            this.parmLineNum(lineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOprFinished</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setOprFinished()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, OprFinished)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOprId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setOprId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, OprId)))
        {
            return;
        }

        this.setJobType();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, JobType)))
        {
            this.parmOprId(this.localProdJournalRouteRecord().OprId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOprNum</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setOprNum()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, OprNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOprPriority</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setOprPriority()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, OprPriority)))
        {
            return;
        }

        this.setJobType();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, JobType)))
        {
            this.parmOprPriority(this.localProdJournalRouteRecord().OprPriority);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyError</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setPdsCWQtyError()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, PdsCWQtyError)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyGood</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setPdsCWQtyGood()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, PdsCWQtyGood)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setProdId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ProdId)))
        {
            return;
        }

        this.setProdJournalTableRecordFields();

        if (this.isProdJournalTableRecordFieldsSet())
        {
            this.parmProdId(this.prodJournalTableRecord().ProdId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdInventDimId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setProdInventDimId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ProdInventDimId)))
        {
            return;
        }

        this.setProdId();
        this.setProdReportFinished();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, ProdId))              &&
           this.isFieldSet(fieldnum(ProdJournalRoute, ProdReportFinished)))
        {
            if ((this.parmProdReportFinished()) && (!this.parmProdInventDimId()))
            {
                this.parmProdInventDimId(ProdTable::find(this.parmProdId()).InventDimId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdJournalTableRecordFields</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setProdJournalTableRecordFields()
    {
        this.setJournalId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdPickList</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setProdPickList()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ProdPickList)))
        {
            return;
        }

        this.setProdJournalTableRecordFields();

        if (this.isProdJournalTableRecordFieldsSet())
        {
            this.parmProdPickList(this.prodJournalTableRecord().ProdAutoPickList);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdPickListJournalId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setProdPickListJournalId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ProdPickListJournalId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdReportFinished</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setProdReportFinished()
    {
        OprNumNext  oprNumNext;

        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ProdReportFinished)))
        {
            return;
        }

        this.setProdId();
        this.setOprNum();
        this.setOprPriority();
        this.setProdJournalTableRecordFields();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, ProdId))      &&
           this.isFieldSet(fieldnum(ProdJournalRoute, OprNum))      &&
           this.isFieldSet(fieldnum(ProdJournalRoute, OprPriority)) &&
           this.isProdJournalTableRecordFieldsSet())
        {
            oprNumNext = ProdRoute::find(this.parmProdId(), this.parmOprNum(), this.parmOprPriority()).OprNumNext;

            if (oprNumNext == 0)
            {
                this.parmProdReportFinished(this.prodJournalTableRecord().AutoReportFinished);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdReportFinishedJournalId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setProdReportFinishedJournalId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ProdReportFinishedJournalId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProdRouteRecordFields</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setProdRouteRecordFields()
    {
        this.setOprNum();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyError</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setQtyError()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, QtyError)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyGood</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setQtyGood()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, QtyGood)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyPrice</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setQtyPrice()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, QtyPrice)))
        {
            return;
        }

        this.setJobType();
        this.setCategoryQtyId();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, CategoryQtyId)) &&
            this.isFieldSet(fieldnum(ProdJournalRoute, JobType)))
        {
            this.parmQtyPrice(RouteCostCategory::find(this.parmCategoryQtyId()).costPrice(InventDim::find(this.parmProdInventDimId()).InventSiteId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStornoPhysical_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>StornoPhysical_RU</c> field.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setStornoPhysical_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, StornoPhysical_RU)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setJournalId();
        this.setVoucher();
        this.setLineNum();
        this.setTransDate();
        this.setProdId();
        this.setOprNum();
        this.setJobType();
        this.setWrkCtrId();
        this.setHours();
        this.setHourPrice();
        this.setQtyGood();
        this.setQtyError();
        this.setPdsCWQtyGood();
        this.setPdsCWQtyError();
        this.setErrorCause();
        this.setCategoryHoursId();
        this.setQtyPrice();
        this.setWorker();
        this.setOprFinished();
        this.setCategoryQtyId();
        this.setExecutedPct();
        this.setJobFinished();
        this.setOprPriority();
        this.setDefaultDimension();
        this.setFromTime();
        this.setToTime();
        this.setJobId();
        this.setOprId();
        this.setCancelled();
        this.setProdInventDimId();
        this.setProdReportFinished();
        this.setProdPickList();
        this.setProdPickListJournalId();
        this.setProdReportFinishedJournalId();
        this.setWorker();

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.setStornoPhysical_RU();
        }
        // </GEERU>

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToTime</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setToTime()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, ToTime)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setTransDate()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, TransDate)))
        {
            return;
        }

        this.setProdJournalTableRecordFields();

        if (this.isProdJournalTableRecordFieldsSet())
        {
            this.parmTransDate(prodJournalRoute_Last.RecId ? prodJournalRoute_Last.TransDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVoucher</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setVoucher()
    {
        Voucher newVoucher;

        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, Voucher)))
        {
            return;
        }

        this.setTransDate();
        this.setProdId();

        if ((this.isFieldSet(fieldnum(ProdJournalRoute, TransDate)) ||
            this.isFieldSet(fieldnum(ProdJournalRoute, ProdId)))   &&
            journalTableData.journalVoucherNum()                   &&
            journalTableData.journalTable().VoucherDraw == JournalVoucherDraw::Entering)
        {
            journalTransData.initVoucher(prodJournalRoute_Last.Voucher, true);
            newVoucher = journalTransData.journalTrans().Voucher;

            if (newVoucher)
                this.parmVoucher(newVoucher);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorker</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setWorker()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, Worker)))
        {
            return;
        }

        this.setJobType();
        this.setWrkCtrId();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, JobType)) ||
            this.isFieldSet(fieldnum(ProdJournalRoute, WrkCtrId)))
        {
            this.parmWorker(this.localProdJournalRouteRecord().Worker);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWrkCtrId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void setWrkCtrId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(ProdJournalRoute, WrkCtrId)))
        {
            return;
        }

        this.setJobType();

        if (this.isFieldSet(fieldnum(ProdJournalRoute, JobType)))
        {
            this.parmWrkCtrId(this.localProdJournalRouteRecord().WrkCtrId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static AxProdJournalRoute construct()
    {
        return new AxProdJournalRoute();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProdJournalRoute</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AxProdJournalRoute newProdJournalRoute(ProdJournalRoute _prodJournalRoute)
    {
        AxProdJournalRoute axProdJournalRoute = AxProdJournalRoute::construct();
        axProdJournalRoute.prodJournalRoute(_prodJournalRoute);

        return axProdJournalRoute;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>