<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSysQuery_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventSysQuery_Extension</c> class extends <c>SysQuery</c> class in order to add inventory related functionality.
/// </summary>
[ExtensionOf(classStr(SysQuery))]
internal final class InventSysQuery_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>adjustQueryToExtractOnlyDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adjusts the query in order to optimize it for extracting only the first data source data.
    /// </summary>
    /// <param name = "_query">A query to optimize.</param>
    /// <param name = "_dataSourceIdsToExtract">List of data source ids that need to be extracted therefore skipped for optimization.</param>
    internal static void adjustQueryToExtractOnlyDataSources(Query _query, Set _dataSourceIdsToExtract)
    {
        if (_query)
        {
            if (!_dataSourceIdsToExtract || _dataSourceIdsToExtract.empty()){
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            for (int i = 1; i <= _query.dataSourceCount(); i++)
            {
                QueryBuildDataSource qbds = _query.dataSourceNo(i);

                if (qbds && !_dataSourceIdsToExtract.in(qbds.id()))
                {
                    SysQuery::clearFieldsToSelect(qbds);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearFieldsToSelect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears fields to select for the <paramref name="_queryBuildDataSource"/> data source query builder.
    /// </summary>
    /// <param name = "_queryBuildDataSource">A data source query builder to clear selection fields for.</param>
    private static void clearFieldsToSelect(QueryBuildDataSource _queryBuildDataSource)
    {
        if (_queryBuildDataSource.joinMode() == JoinMode::InnerJoin
            || _queryBuildDataSource.joinMode() == JoinMode::OuterJoin)
        {
            _queryBuildDataSource.fields().dynamic(QueryFieldListDynamic::No);
            _queryBuildDataSource.fields().clearFieldList();
            _queryBuildDataSource.fields().addField(fieldNum(Common, TableId));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>