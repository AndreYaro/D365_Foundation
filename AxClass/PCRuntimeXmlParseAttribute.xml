<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCRuntimeXmlParseAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCRuntimeXmlParseAttribute</c> class parses the runtime XML for an attribute.
/// </summary>
class PCRuntimeXmlParseAttribute extends PCRuntimeXmlParseBase
{
    #PC
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addAttributeToParent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds an attribute to the parent.
    /// </summary>
    /// <param name="_runtimeParent">
    /// The runtime parent.
    /// </param>
    /// <returns>
    /// An instance of the runtime attribute class.
    /// </returns>
    protected PCRuntimeAttribute addAttributeToParent(PCRuntimeAttributeCollection _runtimeParent)
    {
        PCRuntimeAttribute runtimeAttribute = PCRuntimeAttribute::construct();

        _runtimeParent.addAttribute(runtimeAttribute);

        return runtimeAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses a runtime XML element.
    /// </summary>
    /// <param name="_attributeXmlElement">
    /// An <c>XmlElement</c> value.
    /// </param>
    /// <param name="_runtimeParent">
    /// A runtime data structure instance.
    /// </param>
    public void parse(XmlElement _attributeXmlElement, PCRuntimeInterface _runtimeParent)
    {
        PCRuntimeAttribute runtimeAttribute = this.addAttributeToParent(_runtimeParent as PCRuntimeAttributeCollection);

        this.parseAttributeDetails(_attributeXmlElement, runtimeAttribute);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseAttributeDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the attribute details.
    /// </summary>
    /// <param name="_attributeXmlElement">
    /// An attribute xml element.
    /// </param>
    /// <param name="_runtimeAttribute">
    /// A runtime attribute instance.
    /// </param>
    /// <exception cref="M:Exception::Error">
    /// An unknown data type is found the XML of the attribute.
    /// </exception>
    protected void parseAttributeDetails(XmlElement _attributeXmlElement, PCRuntimeAttribute _runtimeAttribute)
    {
        _runtimeAttribute.parmDisplayName(_attributeXmlElement.getAttribute(#displayName));
        _runtimeAttribute.parmAttributeRecId(str2int64(_attributeXmlElement.getAttribute(#ReqIdAttribute)));
        _runtimeAttribute.parmInstanceId(str2int(_attributeXmlElement.getAttribute(#instanceId)));

        this.parseAttributeDomain(_attributeXmlElement, _runtimeAttribute);

        this.parseAttributeModifiers(_attributeXmlElement, _runtimeAttribute);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseAttributeDomain</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the attribute details.
    /// </summary>
    /// <param name="_attributeXmlElement">
    /// An attribute XML element.
    /// </param>
    /// <param name="_runtimeAttribute">
    /// A runtime attribute instance.
    /// </param>
    /// <exception cref="M:Exception::Error">
    /// An unknown data type is found the xml of the attribute.
    /// </exception>
    protected void parseAttributeDomain(XmlElement _attributeXmlElement, PCRuntimeAttribute _runtimeAttribute)
    {
        switch ( _attributeXmlElement.getAttribute(#typeAttribute))
        {
            case #variableTypeEnum :
                _runtimeAttribute.parmDataType(PCRuntimeAttributeDataType::Enum);
                this.parseEnumDomainDefinitionId(_attributeXmlElement, _runtimeAttribute);
                break;

            case #variableTypeInteger :
                _runtimeAttribute.parmDataType(PCRuntimeAttributeDataType::Integer);
                this.parseIntegerRanges(_attributeXmlElement, _runtimeAttribute);
                break;

            case #variableTypeBoolean :
                _runtimeAttribute.parmDataType(PCRuntimeAttributeDataType::Boolean);
                break;

            case #variableTypeText :
                _runtimeAttribute.parmDataType(PCRuntimeAttributeDataType::Text);
                break;

            case #variableTypeDecimal :
                _runtimeAttribute.parmDataType(PCRuntimeAttributeDataType::Decimal);
                break;

            case #variableTypeIntegerUnbound :
                _runtimeAttribute.parmDataType(PCRuntimeAttributeDataType::UnboundedInteger);
                break;
            case #variableTypeIntegerSet :
                _runtimeAttribute.parmDataType(PCRuntimeAttributeDataType::IntegerSet);
                this.parseIntegerSetDomainDefinitionId(_attributeXmlElement, _runtimeAttribute);
                break;

            default :
                throw error(error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseIntegerSetDomainDefinitionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the integer set definition ID.
    /// </summary>
    /// <param name="_attributeXmlElement">
    /// An attribute xml element.
    /// </param>
    /// <param name="_runtimeAttribute">
    /// A runtime attribute instance.
    /// </param>
    protected void parseIntegerSetDomainDefinitionId(XmlElement _attributeXmlElement, PCRuntimeAttribute _runtimeAttribute)
    {
        XmlElement xmlElement = _attributeXmlElement.getNamedElement(#IntegerSetDomainElement);

        _runtimeAttribute.parmIntegerSetDefinitionId(xmlElement.getAttribute(#integerSetDomainId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseAttributeModifiers</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the attribute details.
    /// </summary>
    /// <param name="_attributeXmlElement">
    /// An attribute xml element.
    /// </param>
    /// <param name="_runtimeAttribute">
    /// A runtime attribute instance.
    /// </param>
    protected void parseAttributeModifiers(XmlElement _attributeXmlElement, PCRuntimeAttribute _runtimeAttribute)
    {
        XmlElement xmlElementModifier;

        xmlElementModifier = _attributeXmlElement.getNamedElement(#HiddenModifierElement);

        // If a modifier has no condition then is will always be true

        if (xmlElementModifier != null)
        {
            _runtimeAttribute.parmIsHidden( xmlElementModifier.getNamedElement(#ModifierConditionType) == null );
        }

        xmlElementModifier = _attributeXmlElement.getNamedElement(#MandatoryModifierElement);

        if (xmlElementModifier != null)
        {
            _runtimeAttribute.parmIsMandatory( xmlElementModifier.getNamedElement(#ModifierConditionType) == null );
        }

        xmlElementModifier = _attributeXmlElement.getNamedElement(#ReadOnlyModifierElement);

        if (xmlElementModifier != null)
        {
            _runtimeAttribute.parmIsReadOnly( xmlElementModifier.getNamedElement(#ModifierConditionType) == null );
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseEnumDomainDefinitionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the enumeration definition ID.
    /// </summary>
    /// <param name="_attributeXmlElement">
    /// An attribute xml element.
    /// </param>
    /// <param name="_runtimeAttribute">
    /// A runtime attribute instance.
    /// </param>
    protected void parseEnumDomainDefinitionId(XmlElement _attributeXmlElement, PCRuntimeAttribute _runtimeAttribute)
    {
        XmlElement xmlElement = _attributeXmlElement.getNamedElement(#EnumDomainElement);

        _runtimeAttribute.parmEnumDefinitionId(xmlElement.getAttribute(#enumDefinitionId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseIntegerRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the integer rangers for a bounded integer attribute.
    /// </summary>
    /// <param name="_attributeXmlElement">
    /// An attribute xml element.
    /// </param>
    /// <param name="_runtimeAttribute">
    /// A runtime attribute instance.
    /// </param>
    protected void parseIntegerRanges(XmlElement _attributeXmlElement, PCRuntimeAttribute _runtimeAttribute)
    {
        XmlElement xmlElement = _attributeXmlElement.getNamedElement(#integerDomainElement);

        _runtimeAttribute.parmIntFrom(str2int(xmlElement.getAttribute(#fromAttribute)));

        _runtimeAttribute.parmIntTo(str2int(xmlElement.getAttribute(#toAttribute)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCRuntimeXmlParseAttribute construct()
    {
        return new PCRuntimeXmlParseAttribute();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>