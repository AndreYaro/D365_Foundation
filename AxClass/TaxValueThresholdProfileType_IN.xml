<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxValueThresholdProfileType_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Deals with logic of table <c>TaxValueThresholdProfile_IN</c>
/// </summary>
class TaxValueThresholdProfileType_IN
{
    AccountType_IN              accountType;
    AccountNum                  accountNum;
    Common                      referenceCodeBuffer;
    Threshold_IN                threshold;
    boolean                     isThresholdCalc;
    TaxValueThresholdProfile_IN taxValueThresholdProfile;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcTargetThreshold</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for target threshold based on accountType and accountNum
    /// </summary>
    private void calcTargetThreshold()
    {
        switch (accountType)
        {
            case AccountType_IN::Vend:
                select firstOnly taxValueThresholdProfile
                    where taxValueThresholdProfile.AccountType                  == AccountType_IN::Vend
                        && taxValueThresholdProfile.AccountTableGroupAll        == TableGroupAll::Table
                        && taxValueThresholdProfile.CustVendGroupOrTable        == accountNum
                        && taxValueThresholdProfile.SourceCodeTableId           == referenceCodeBuffer.TableId
                        && taxValueThresholdProfile.SourceCodeRecId             == referenceCodeBuffer.RecId;
                if (!taxValueThresholdProfile)
                {
                    select firstOnly taxValueThresholdProfile
                        where taxValueThresholdProfile.AccountType              == AccountType_IN::Vend
                            && taxValueThresholdProfile.AccountTableGroupAll    == TableGroupAll::GroupId
                            && taxValueThresholdProfile.CustVendGroupOrTable    == VendTable::find(accountNum).VendGroup
                            && taxValueThresholdProfile.SourceCodeTableId       == referenceCodeBuffer.TableId
                            && taxValueThresholdProfile.SourceCodeRecId         == referenceCodeBuffer.RecId;
                    if (!taxValueThresholdProfile)
                    {
                        select firstOnly taxValueThresholdProfile
                            where taxValueThresholdProfile.AccountType              == AccountType_IN::Vend
                                && taxValueThresholdProfile.AccountTableGroupAll    == TableGroupAll::All
                                && taxValueThresholdProfile.SourceCodeTableId       == referenceCodeBuffer.TableId
                                && taxValueThresholdProfile.SourceCodeRecId         == referenceCodeBuffer.RecId;
                    }
                }
                break;

            case AccountType_IN::Cust:
                select firstOnly taxValueThresholdProfile
                    where taxValueThresholdProfile.AccountType                  == AccountType_IN::Cust
                        && taxValueThresholdProfile.AccountTableGroupAll        == TableGroupAll::Table
                        && taxValueThresholdProfile.CustVendGroupOrTable        == accountNum
                        && taxValueThresholdProfile.SourceCodeTableId           == referenceCodeBuffer.TableId
                        && taxValueThresholdProfile.SourceCodeRecId             == referenceCodeBuffer.RecId;
                if (!taxValueThresholdProfile)
                {
                    select firstOnly taxValueThresholdProfile
                        where taxValueThresholdProfile.AccountType              == AccountType_IN::Cust
                            && taxValueThresholdProfile.AccountTableGroupAll    == TableGroupAll::GroupId
                            && taxValueThresholdProfile.CustVendGroupOrTable    == CustTable::find(accountNum).CustGroup
                            && taxValueThresholdProfile.SourceCodeTableId       == referenceCodeBuffer.TableId
                            && taxValueThresholdProfile.SourceCodeRecId         == referenceCodeBuffer.RecId;

                    if (!taxValueThresholdProfile)
                    {
                        select firstOnly taxValueThresholdProfile
                            where taxValueThresholdProfile.AccountType              == AccountType_IN::Cust
                                && taxValueThresholdProfile.AccountTableGroupAll    == TableGroupAll::All
                                && taxValueThresholdProfile.SourceCodeTableId       == referenceCodeBuffer.TableId
                                && taxValueThresholdProfile.SourceCodeRecId         == referenceCodeBuffer.RecId;
                    }
                }
                break;

            default:
                break;
        }

        if (!taxValueThresholdProfile)
        {
            select firstOnly taxValueThresholdProfile
                where taxValueThresholdProfile.AccountType                      == AccountType_IN::All
                    && taxValueThresholdProfile.SourceCodeTableId               == referenceCodeBuffer.TableId
                    && taxValueThresholdProfile.SourceCodeRecId                 == referenceCodeBuffer.RecId;
        }

        threshold = Threshold_IN::findByRecId(taxValueThresholdProfile.Threshold);

        isThresholdCalc = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTargetThreshold</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns target threshold
    /// </summary>
    /// <returns>
    /// target threshold
    /// </returns>
    public Threshold_IN getTargetThreshold()
    {
        if (!isThresholdCalc)
        {
            this.calcTargetThreshold();
        }
        return threshold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiates an instance of <c>TaxValueThresholdProfileType_IN</c>
    /// </summary>
    /// <param name="_accountType">
    /// account type
    /// </param>
    /// <param name="_accountNum">
    /// account number
    /// </param>
    /// <param name="_referenceCodeBuffer">
    /// reference table, such as taxWithholdTable for withholding tax
    /// </param>
    private void initialize(AccountType_IN _accountType, AccountNum _accountNum, Common _referenceCodeBuffer)
    {
        accountType = _accountType;
        accountNum = _accountNum;
        referenceCodeBuffer = _referenceCodeBuffer;
        this.calcTargetThreshold();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxValueThresholdProfileRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns recId of <c>taxValueThresholdProfile</c>
    /// </summary>
    /// <returns>
    /// <c>RecId</c>
    /// </returns>
    public RefRecId parmTaxValueThresholdProfileRecId()
    {
        return taxValueThresholdProfile.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxValueThresholdProfileTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns tableId of <c>taxValueThresholdProfile</c>
    /// </summary>
    /// <returns>
    /// Table Id
    /// </returns>
    public RefTableId parmTaxValueThresholdProfileTableId()
    {
        return taxValueThresholdProfile.TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initiates an instance of <c>TaxValueThresholdProfileType_IN</c>
    /// </summary>
    /// <param name="_accountType">
    /// account type
    /// </param>
    /// <param name="_accountNum">
    /// account num
    /// </param>
    /// <param name="_referenceCodeBuffer">
    /// <c>_referenceCodeBuffer</c>
    /// </param>
    /// <returns>
    /// Instance of <c>TaxValueThresholdProfileType_IN</c>
    /// </returns>
    public static TaxValueThresholdProfileType_IN construct(AccountType_IN _accountType, AccountNum _accountNum, Common _referenceCodeBuffer)
    {
        TaxValueThresholdProfileType_IN taxValueThresholdProfileType;
        taxValueThresholdProfileType = new TaxValueThresholdProfileType_IN();
        taxValueThresholdProfileType.initialize(_accountType, _accountNum, _referenceCodeBuffer);
        return taxValueThresholdProfileType;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>