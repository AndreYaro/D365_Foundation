<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSFwkNumberSequenceHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Ax.Tms.Base.Data;
using Microsoft.Dynamics.Ax.Tms.Base.Utility;
using System.Xml.Linq;

/// <summary>
/// The class <c>TMSFwkNumberSequenceHelper</c> exposes helper functions related to retrieval of number sequences.
/// </summary>
public class TMSFwkNumberSequenceHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TMSFwkNumberSequenceHelper construct()
    {
        return new TMSFwkNumberSequenceHelper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateNumberSequence</Name>
				<Source><![CDATA[
    private TMSFwkNumberSequenceHelperResponse generateNumberSequence(System.String _numberSequenceCode)
    {
        TMSFwkNumberSequenceHelperResponse numberHelperResponse = TMSFwkNumberSequenceHelperResponse::construct();

        try
        {
            TMSNumberSequence numberSequence = TMSNumberSequence::find(_numberSequenceCode);

            if (numberSequence)
            {
                numberHelperResponse.parmNumberSequence(TMSNumberSequence::getNextProNumber(_numberSequenceCode));
            }
        }
        catch (Exception::Error)
        {
            numberHelperResponse.parmErrorDto(StringHelpers::FormatError(TMSFwkErrorDtoBuilder::technicalError(), infolog.text(infologLine())));
            error("@TRX2574");
        }

        return numberHelperResponse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveNumberSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method retrieves the relevant number sequences for the carrier codes that are present int the transaction payload.
    /// </summary>
    /// <param name="_tmsTransactionFacade">The transaction payload.</param>
    /// <param name="_type">The type of the number sequence.</param>
    public void retrieveNumberSequence(TmsTransactionFacade _tmsTransactionFacade, TMSNumberSequenceType _type)
    {
        var shipments = _tmsTransactionFacade.parmRequestXml().RetrieveListMatchingNodes(EntityXmlConstants::ShippingEntity, ElementXmlConstants::ShippingEntityType, EntityTypeXmlConstants::Ship).GetListEnumerator();

        XElement carrierElement = null;
        XElement re = null;
        TMSFwkNumberSequenceHelperResponse numberSequenceHelperResponse = null;
        System.String numberSequenceCode = "";
        RatingDto ratingDto;

        while (shipments.MoveNext())
        {
            XElement shipment = shipments.Current();
            ratingDto = new RatingDto();
            if (!System.String::IsNullOrEmpty(shipment.GetString(ElementXmlConstants::CarrierCode)))
            {
                ratingDto.CarrierCode = shipment.GetString(ElementXmlConstants::CarrierCode);
                RatingDto.CarrierServiceCode = shipment.GetString(ElementXmlConstants::CarrierServiceCode);
            }
            else
            {
                System.String carrierCode = "";
                System.String carrierService = "";
                carrierElement = shipment;

				// create the <c>RatingDto</c> object for the last carrier.
                while (System.String::IsNullOrEmpty(carrierCode) && carrierElement.Parent != null)
                {
                    carrierElement = carrierElement.Parent;
                    carrierCode = carrierElement.GetString(ElementXmlConstants::CarrierCode);
                    carrierService = carrierElement.GetString(ElementXmlConstants::CarrierServiceCode);
                }

                ratingDto.CarrierCode = carrierCode;
                RatingDto.CarrierServiceCode = carrierService;
            }
            re = shipment.RetrieveOrCreateRatingEntity(ratingDto);

            TMSCarrier carrier;
            select firstOnly ProNumberCode from carrier
                where   carrier.CarrierCode == re.GetString(ElementXmlConstants::CarrierCode)
                &&      carrier.Active      == NoYes::Yes;

            numberSequenceCode = this.retrieveNumberSequenceCode(carrier, _type);

            if (!System.String::IsNullOrEmpty(numberSequenceCode))
            {
                numberSequenceHelperResponse = this.generateNumberSequence(numberSequenceCode);

                if (!System.String::IsNullOrEmpty(numberSequenceHelperResponse.parmErrorDto().Code))
                {
                    re.AddError(numberSequenceHelperResponse.parmErrorDto());
                }
                else
                {
                    if (!System.String::IsNullOrEmpty(numberSequenceHelperResponse.parmNumberSequence()))
                            re.Add(new XElement(ElementXmlConstants::ProNumber, numberSequenceHelperResponse.parmNumberSequence()));
                }

                if (!System.String::IsNullOrEmpty(numberSequenceHelperResponse.parmWarningDto().Code))
                {
                    re.AddInfoLog(numberSequenceHelperResponse.parmWarningDto());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveNumberSequenceCode</Name>
				<Source><![CDATA[
    private TMSProNumberCode retrieveNumberSequenceCode(TMSCarrier _carrier, TMSNumberSequenceType _type)
    {
        TMSProNumberCode ret = '';
        if (_type == TMSNumberSequenceType::ProNumber)
        {
            ret = _carrier.ProNumberCode;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>