<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWaveExecutedBusinessEvent</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Warehouse wave executed business event.
/// </summary>
[BusinessEvents(classStr(WhsWaveExecutedBusinessEventContract), 'WAX:WaveExecutedBusinessEventName', 'WAX:WaveExecutedBusinessEventDescription', ModuleAxapta::InventoryAndAdvancedWarehouse)]
public final class WhsWaveExecutedBusinessEvent extends BusinessEventsBase
{
    private WHSWaveTable waveTable;
    private WHSWaveExecutionId waveExecutionId;
    private boolean success;
    private InfologText exceptionMessage;
    private WHSNumWorkCreated numWorkCreated;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromWaveExecution</Name>
				<Source><![CDATA[
    public static WhsWaveExecutedBusinessEvent newFromWaveExecution(WHSWaveTable _waveTable, WHSWaveExecutionID _waveExecutionId, boolean _success, WHSNumWorkCreated _numWorkCreated)
    {
        WhsWaveExecutedBusinessEvent event = new WhsWaveExecutedBusinessEvent();

        event.waveTable = _waveTable;
        event.waveExecutionId = _waveExecutionId;
        event.success = _success;
        event.numWorkCreated = _numWorkCreated;

        return event;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromWaveExecutionWithException</Name>
				<Source><![CDATA[
    public static WhsWaveExecutedBusinessEvent newFromWaveExecutionWithException(WHSWaveTable _waveTable, WHSWaveExecutionID _waveExecutionId, InfologText _exceptionMessage)
    {
        WhsWaveExecutedBusinessEvent event = WhsWaveExecutedBusinessEvent::newFromWaveExecution(_waveTable, _waveExecutionId, false, 0);
        event.exceptionMessage = _exceptionMessage;
        
        return event;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildContract</Name>
				<Source><![CDATA[
    protected BusinessEventsContract buildContract()
    {
        return WhsWaveExecutedBusinessEventContract::newFromWaveExecution(waveTable, waveExecutionId, success, numWorkCreated, exceptionMessage);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>