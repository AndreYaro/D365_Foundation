<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RouteMapInterface</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Base class providing an interface to common functionality applicable for tables mapped to the <c>RouteMap</c> table map.
/// </summary>
/// <remarks>
///     Intended usage of this hierarchy is to allow for extensions of <c>RouteMap</c> table map.
/// </remarks>
public abstract class RouteMapInterface
{
    private RouteMap routeMap;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(RouteMap _routeMap)
    {
        routeMap = _routeMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>RouteMapInterface</c> object based on the provided <c>RouteMap</c> record.
    /// </summary>
    /// <param name = "_routeMap">
    /// A <c>RouteMap</c> record to create a <c>RouteMapInterface</c> object for.
    /// </param>
    /// <returns>
    /// The instance of <c>RouteMapInterface</c>.
    /// </returns>
    [Hookable(false)]
    public static RouteMapInterface createInstance(RouteMap _routeMap)
    {
        RouteMapInterfaceFactoryAttribute attribute = new RouteMapInterfaceFactoryAttribute(tableId2Name(_routeMap.TableId));
        RouteMapInterface        instance  = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(RouteMapInterface), attribute) as RouteMapInterface;
        
        // possibly an ISV table mapping => instantiate a default object
        if (!instance)
        {
            instance = new RouteMapDefaultImplementation();
        }

        instance.initialize(_routeMap);

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRouteMap</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final void initFromRouteMap(RouteMap _routeMap)
    {
        routeMap.data(_routeMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRouteMap</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final RouteMap parmRouteMap()
    {
        return routeMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccError</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final RouteAccErrorPct parmAccError()
    {
        return routeMap.AccError;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmErrorPct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final RouteErrorPct parmErrorPct()
    {
        return routeMap.ErrorPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJobPayType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final JmgJobPayType parmJobPayType()
    {
        return routeMap.JobPayType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLevel</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final RouteLevel parmLevel()
    {
        return routeMap.Level;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinkType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final SchedJobLinkType parmLinkType()
    {
        return routeMap.LinkType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOprId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final RouteOprId parmOprId()
    {
        return routeMap.OprId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOprNum</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final OprNum parmOprNum()
    {
        return routeMap.OprNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOprNumNext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final OprNumNext parmOprNumNext()
    {
        return routeMap.OprNumNext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOprPriority</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final RouteOprPriority parmOprPriority()
    {
        return routeMap.OprPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPlanVersion</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final RefRecId parmPlanVersion()
    {
        return routeMap.PlanVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public final InventTransId parmRefId()
    {
        return routeMap.RefId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>