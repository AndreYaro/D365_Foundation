<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleTax</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class NumberSeqModuleTax extends NumberSeqApplicationModule
{
    /// <summary>
    ///    Configures all the data types that are being used by the module.
    /// </summary>
    /*
    Detailed description of how to setup references for number sequences can
    be found i method loadModule() on the 'father' class: NumberSeqApplicationModule.
    */

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();
        ;
        /* Setup tax report voucher number */

        datatype.parmDatatypeId(extendedTypeNum(TaxReportingVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53917"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(4000);
        datatype.parmWizardHighest(5999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup withholding tax report voucher number */

        datatype.parmDatatypeId(extendedTypeNum(TaxWithholdReportingVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53917"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(4000);
        datatype.parmWizardHighest(5999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup package number for the xml tax report */

        datatype.parmDatatypeId(extendedTypeNum(TaxReportingVoucherXML));
        datatype.parmReferenceHelp(literalStr("@SYS82354"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::Yes);
        datatype.parmWizardIsChangeUpAllowed(NoYes::Yes);
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(99999);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup tax invoice number for sales */

        datatype.parmDatatypeId(extendedTypeNum(TaxInvoiceSalesId));
        datatype.parmReferenceHelp(literalStr("@SYS53894"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::Yes);
        datatype.parmWizardIsChangeUpAllowed(NoYes::Yes);
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(99999);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup tax invoice number for purch */

        datatype.parmDatatypeId(extendedTypeNum(TaxInvoicePurchId));
        datatype.parmReferenceHelp(literalStr("@SYS53894"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::Yes);
        datatype.parmWizardIsChangeUpAllowed(NoYes::Yes);
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(99999);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup tax communication id */

        datatype.parmDatatypeId(extendedTypeNum(TaxYearlyComId_IT));
        datatype.parmReferenceHelp(literalStr("@SYS125671"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(9999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup annual tax listing XML id for Belgium */
        datatype.parmDatatypeId(extendedTypeNum(CustInvoiceXMLId_BE));
        datatype.parmReferenceHelp(literalStr("@SYS125564"));
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup declaration number for Belgian Intervat declaration */

        datatype.parmDatatypeId(extendedTypeNum(TaxIntervatID));
        datatype.parmReferenceHelp(literalStr("@SYS333533"));
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(999999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // <GIN>
        /* Setup tax withhold report voucher number */

        datatype.parmDatatypeId(extendedtypenum(TaxWithholdReportingVoucher_IN));
        datatype.parmReferenceHelp(literalstr("@GLS6144"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(4000);
        datatype.parmWizardHighest(5999);
        datatype.parmSortField(3);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(TDSTCSVoucherReversal_IN));
        datatype.parmReferenceHelp(literalstr("@SYS78874"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(4000);
        datatype.parmWizardHighest(5999);
        datatype.parmSortField(3);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        /* SetUp Deferment Voucher Id*/

        datatype.parmDatatypeId(extendedtypenum(DefermentVoucher_IN));
        datatype.parmReferenceHelp(literalstr("@SYS82651"));
        datatype.parmReferenceLabel(literalStr("@GLS6044"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* NumberSequence for the Tax Setoff Document Voucher */

        datatype.parmDatatypeId(extendedtypenum(TaxSetoffDocumentVoucher_IN));
        datatype.parmReferenceHelp(literalstr("@GLS221798"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* NumberSequence for the Customs Charge as expense percent*/

        datatype.parmDatatypeId(extendedtypenum(ChargeAsExpenseDocumentVoucher_IN));
        datatype.parmReferenceHelp(literalstr("@GLS223846"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GIN>

        /* Setup electronic message id */

        datatype.parmDatatypeId(extendedtypenum(ElectronicMessageId));
        datatype.parmReferenceHelp(literalstr("@TaxSII:NumberSeq_MessageId"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup electronic message item id */

        datatype.parmDatatypeId(extendedtypenum(EMItemNum));
        datatype.parmReferenceHelp(literalstr("@ElectronicMessage_NumberSequence:NumberSeq_EMItemNum"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* NumberSequence for the Italian invoices communication */
        datatype.parmDatatypeId(extendedTypeNum(ElectronicMessagesFileID_IT));
        datatype.parmReferenceHelp(literalStr("@Tax_ITInvoiceCommunication:NumbSeqHelp_InvoiceCommunicationXMLID"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(99999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the application-specific module for this class.
    /// </summary>
    /// <returns>
    ///    The module-specific ID.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Tax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleTax), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>