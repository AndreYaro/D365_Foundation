<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ExternalFiscalDocument_BR_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
public static class ExternalFiscalDocument_BR_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getThirdPartyMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>CustVendFiscalEstablishmentMap</c> related to the external fiscal document third party account
    /// </summary>
    /// <param name = "_externalFiscalDocument">The <d>ExternalFiscalDocument_BR</d> record</param>
    /// <returns>The <c>CustVendFiscalEstablishmentMap</c> related to the external fiscal document third party account</returns>
    public static CustVendFiscalEstablishmentMap getThirdPartyMap(ExternalFiscalDocument_BR _externalFiscalDocument)
    {
        CustVendFiscalEstablishmentMap map;
        switch (_externalFiscalDocument.FiscalDocumentAccountType)
        {
            case CustVendType_BR::Customer :
                CustTable custTable = CustTable::find(_externalFiscalDocument.FiscalDocumentAccountNum);
                map = custTable;
                break;

            case CustVendType_BR::Vendor :
                VendTable vendTable = VendTable::find(_externalFiscalDocument.FiscalDocumentAccountNum);
                map = vendTable;
                break;

            case CustVendType_BR::FiscalEstablishment :
                map = FiscalEstablishment_BR::findById(_externalFiscalDocument.FiscalDocumentAccountNum);
                break;

            default : throw error(Error::wrongUseOfFunction(funcName()));
        }

        return map;
    }

]]></Source>
			</Method>
			<Method>
				<Name>thirdPartyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>Name</c> related to the external fiscal document third party account
    /// </summary>
    /// <param name = "_externalFiscalDocument">The <d>ExternalFiscalDocument_BR</d> record</param>
    /// <returns>The <c>Name</c> related to the external fiscal document third party account</returns>
    public static Name thirdPartyName(ExternalFiscalDocument_BR _externalFiscalDocument)
    {
        Name name;

        switch (_externalFiscalDocument.FiscalDocumentAccountType)
        {
            case CustVendType_BR::Customer :
                CustTable custTable = CustTable::find(_externalFiscalDocument.FiscalDocumentAccountNum);
                name = custTable.name();
                break;

            case CustVendType_BR::Vendor :
                VendTable vendTable = VendTable::find(_externalFiscalDocument.FiscalDocumentAccountNum);
                name = vendTable.name();
                break;

            case CustVendType_BR::FiscalEstablishment :
                FiscalEstablishment_BR fiscalEstablishment = FiscalEstablishment_BR::findById(_externalFiscalDocument.FiscalDocumentAccountNum);
                name = fiscalEstablishment.Name;
                break;

            default : throw error(Error::wrongUseOfFunction(funcName()));
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>thirdPartySuframa</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>CustSuframaNumber_BR</c> related to the external fiscal document third party account
    /// </summary>
    /// <param name = "_externalFiscalDocument">The <d>ExternalFiscalDocument_BR</d> record</param>
    /// <returns>The <c>CustSuframaNumber_BR</c> related to the external fiscal document third party account</returns>
    public static CustSuframaNumber_BR thirdPartySuframa(ExternalFiscalDocument_BR _externalFiscalDocument)
    {
        switch (_externalFiscalDocument.FiscalDocumentAccountType)
        {
            case CustVendType_BR::Customer : return CustTable::find(_externalFiscalDocument.FiscalDocumentAccountNum).SuframaNumber_BR;
            default : return "";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>LogisticsPostalAddress</c> related to the external fiscal document third party account
    /// </summary>
    /// <param name = "_externalFiscalDocument">The <d>ExternalFiscalDocument_BR</d> record</param>
    /// <returns>The <c>LogisticsPostalAddress</c> related to the external fiscal document third party account</returns>
    public static LogisticsPostalAddress postalAddress(ExternalFiscalDocument_BR _externalFiscalDocument)
    {
        LogisticsPostalAddress logisticsPostalAddress;

        switch (_externalFiscalDocument.FiscalDocumentAccountType)
        {
            case CustVendType_BR::Customer :
                CustTable custTable = CustTable::find(_externalFiscalDocument.FiscalDocumentAccountNum);
                logisticsPostalAddress = custTable.postalAddress();
				break;

            case CustVendType_BR::Vendor :
                VendTable vendTable = VendTable::find(_externalFiscalDocument.FiscalDocumentAccountNum);
                logisticsPostalAddress = vendTable.postalAddress();
				break;

            case CustVendType_BR::FiscalEstablishment :
                FiscalEstablishment_BR fiscalEstablishment = FiscalEstablishment_BR::findById(_externalFiscalDocument.FiscalDocumentAccountNum);
                logisticsPostalAddress = fiscalEstablishment.postalAddress();
                break;

            default : throw error(Error::wrongUseOfFunction(funcName()));
        }

        return logisticsPostalAddress;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>