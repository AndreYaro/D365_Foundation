<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGeneralJournalReconciliationController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  The <c>TaxGeneralJournalReconciliationController</c> class is the controller for the <c>TaxGeneralJournalReconciliation</c> report.
/// </summary>
public class TaxGeneralJournalReconciliationController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Changes the report contract before running the report.
    /// </summary>
    protected void preRunModifyContract()
    {
        TaxGeneralJournalReconciliationContract contract = this.parmReportContract().parmRdpContract() as TaxGeneralJournalReconciliationContract;

        if (contract.parmGroupDataBy() == TaxSpecPerLedgerTransGroupBy::LedgerAccount)
        {
            this.parmReportContract().parmReportName(ssrsReportStr(TaxGeneralJournalReconciliation, PrecisionDesignMainAccount));
        }
        else if (contract.parmGroupDataBy() == TaxSpecPerLedgerTransGroupBy::SalesTaxCode)
        {
            this.parmReportContract().parmReportName(ssrsReportStr(TaxGeneralJournalReconciliation, PrecisionDesignTaxCode));
        }

        contract.parmDisplayBalanceSign(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        TaxGeneralJournalReconciliationController controller = new TaxGeneralJournalReconciliationController();
        controller.parmReportName(ssrsReportStr(TaxGeneralJournalReconciliation, PrecisionDesignMainAccount));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>