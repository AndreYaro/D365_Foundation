<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqTransNeutralBundle</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqTransNeutralBundle</c> class tracks a specific dimension of transactions that may be neutralizable.
/// </summary>
abstract public class ReqTransNeutralBundle
{
    private const str keySeparator = '~';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addReqTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the given transaction to the bundle.
    /// </summary>
    /// <param name = "_reqTrans">A transaction to be added to the bundle.</param>
    /// <returns>An integer indicating the change in the number of transactions that are currently in the bundle.</returns>
    abstract internal int addReqTrans(ReqTrans _reqTrans)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>bundleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a bundle id based on the given requirement transaction.
    /// </summary>
    /// <param name = "_reqTrans">The requirement transaction to create a bundle id for.</param>
    /// <returns>A bundle id based on the given requirement transaction.</returns>
    internal static str bundleId(ReqTrans _reqTrans)
    {
        return System.String::Concat(_reqTrans.CovInventDimId,
                                     keySeparator,
                                     int2Str(ReqRefTypeDescriptor::neutralGroupForTransferRefType(_reqTrans.RefType)),
               System.String::Concat(keySeparator,
                                     _reqTrans.RefId,
                                     keySeparator,
                                     int2Str(date2Num(_reqTrans.ReqDateDlvOrig))));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>