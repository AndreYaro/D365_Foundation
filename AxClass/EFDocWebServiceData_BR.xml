<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocWebServiceData_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class EFDocWebServiceData_BR
{
    EFDocWebService_BR  webService;
    EFDocEnvironment_BR environment;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assemblyClassName</Name>
				<Source><![CDATA[
    protected str assemblyClassName()
    {
        return this.assemblyClassNamePrefix() + 'Soap12Client';
    }

]]></Source>
			</Method>
			<Method>
				<Name>assemblyClassQualifiedName</Name>
				<Source><![CDATA[
    public str assemblyClassQualifiedName()
    {
        return strfmt('%1.%2.%3', this.packageRoot(), this.webServicePackage(), this.AssemblyClassName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>assemblyName</Name>
				<Source><![CDATA[
    public str assemblyName()
    {
        return 'Microsoft.Dynamics.AX.ElectronicFiscalDocument';
    }

]]></Source>
			</Method>
			<Method>
				<Name>endingPointConfigurationName</Name>
				<Source><![CDATA[
    final public str endingPointConfigurationName()
    {
        return this.webServiceName() + 'Soap';
    }

]]></Source>
			</Method>
			<Method>
				<Name>messageHeaderQualifiedName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the qualified name of the message header type.
    /// </summary>
    /// <returns>
    /// The qualified name of the message header type.
    /// </returns>
    str messageHeaderQualifiedName()
    {
        return strfmt('%1.%2.%3', this.packageRoot(), this.webServicePackage(), 'nfeCabecMsg');
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(EFDocEnvironment_BR _environment, EFDocWebService_BR _webService)
    {
        environment = _environment;
        webService  = _webService;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packageRoot</Name>
				<Source><![CDATA[
    private str packageRoot()
    {
        return 'Microsoft.Dynamics.AX.ElectronicFiscalDocument';
    }

]]></Source>
			</Method>
			<Method>
				<Name>webServiceMethod</Name>
				<Source><![CDATA[
    public abstract str webServiceMethod()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>webServiceName</Name>
				<Source><![CDATA[
    public abstract str webServiceName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>webServicePackage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of the package to locate the assembly types.
    /// </summary>
    /// <returns>
    /// The name of the package where the assembly types are.
    /// </returns>
    abstract protected str webServicePackage()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static EFDocWebServiceData_BR construct(EFiscalDocVersion_BR _version, EFDocEnvironment_BR _environment, EFDocWebService_BR _webService, CityIBGECode_BR _issuingStateIbgeCode = '', EFDocAuthority_BR _authority = null)
    {
        EFDocFactory_BR factory = EFDocFactory_BR::construct();

        return factory.createWebServiceData(_version, _environment, _webService, _issuingStateIbgeCode, _authority);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assemblyClassNamePrefix</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name prefix of the SOAP client class present in the assembly
    /// </summary>
    /// <returns>
    /// The SOAP client class name prefix
    /// </returns>
    protected str assemblyClassNamePrefix()
    {
        return this.webServiceName();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>