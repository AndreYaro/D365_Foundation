<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlafondCloseService_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PlafondCloseService</c> class gets actions for plafond closing.
/// </summary>
public class PlafondCloseService_IT extends SysOperationServiceBase
{
    Plafond_IT plafond;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>runClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs closing operations.
    /// </summary>
    /// <param name = "_dataContract">The data contract to be used for closing.</param>
    public void runClosing(PlafondCloseDataContract_IT _dataContract)
    {
        FormDataSource callerFormDataSource = _dataContract.parmFormDataSource();
        int closedCounter, selectedCounter;
        plafond = _dataContract.parmPlafond();

        if (plafond && callerFormDataSource)
        {
            selectedCounter = callerFormDataSource.recordsMarked().lastIndex();

            if (callerFormDataSource.getFirst(true))
            {
                for (plafond = callerFormDataSource.getFirst(true); plafond; plafond = callerFormDataSource.getNext())
                {
                    if (this.closePlafond())
                    {
                        closedCounter++;
                    }
                }
            }
            else
            {
                if (this.closePlafond())
                {
                    closedCounter++;
                }
            }

            callerFormDataSource.reSearch();
        }

        info(strFmt("@ExtendedItallianLocalization:PlafondsClosed", closedCounter));

        if (closedCounter != selectedCounter)
        {
            warning("@ExtendedItallianLocalization:SomeSelectedPlafondsClosed");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closePlafond</Name>
				<Source><![CDATA[
    /// <summary>
    /// Closes plafond.
    /// </summary>
    /// <returns>true if plafond can be closed; false otherwise.</returns>
    protected boolean closePlafond()
    {
        boolean ret;
        Plafond_IT plafondLocal = Plafond_IT::find(plafond.PlafondId, true);

        if (plafondLocal && plafondLocal.Status == PlafondStatus_IT::Open)
        {
            ttsbegin;
            plafondLocal.closePlafond();
            plafondLocal.update();
            ret = true;
            ttscommit;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>