<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxMCRSalesTableShipping</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AxBC</c> class that relates to the <c>MCRSalesTableShipping</c> table.
/// </summary>
public class AxMCRSalesTableShipping extends AxInternalBase
{
    MCRSalesTableShipping   mcrSalesTableShipping;

    boolean                 skipSalesIdValidation;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
        public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
        public Common currentRecord(Common _mcrSalesTableShipping = mcrSalesTableShipping)
    {
        if (!prmisDefault(_mcrSalesTableShipping))
        {
            super(_mcrSalesTableShipping);
            mcrSalesTableShipping = _mcrSalesTableShipping as MCRSalesTableShipping;
        }
        else
        {
            super();
        }

        return mcrSalesTableShipping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>MCRSalesTableShipping</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>MCRSalesTableShipping</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        MCRSalesTableShipping localMCRSalesTableShipping;
        return localMCRSalesTableShipping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrSalesTableShipping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the record associated to the current instance.
    /// </summary>
    /// <param name="_mcrSalesTableShipping">
    /// The record to assocate with the current class; optional.
    /// </param>
    /// <returns>
    /// The record associated with the current class.
    /// </returns>
    public MCRSalesTableShipping mcrSalesTableShipping(MCRSalesTableShipping _mcrSalesTableShipping = mcrSalesTableShipping)
    {
        if (!prmisDefault(_mcrSalesTableShipping))
        {
            this.setCurrentRecordFromExternal(_mcrSalesTableShipping);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExpedite</Name>
				<Source><![CDATA[
        public MCRExpedite parmExpedite(MCRExpedite _expedite = '')
    {
        if (!prmisDefault(_expedite))
        {
            this.setField(fieldNum(MCRSalesTableShipping, Expedite), _expedite);
        }

        return mcrSalesTableShipping.Expedite;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDiscGroup</Name>
				<Source><![CDATA[
        public MCRPriceDiscGroupType parmPriceDiscGroup(MCRPriceDiscGroupType _priceDiscGroup = MCRPriceDiscGroupType::Standard)
    {
        if (!prmisDefault(_priceDiscGroup))
        {
            this.setField(fieldNum(MCRSalesTableShipping, PriceDiscGroup), _priceDiscGroup);
        }

        return mcrSalesTableShipping.PriceDiscGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesTable</Name>
				<Source><![CDATA[
        public MCRSalesTableRefRecId parmSalesTable(MCRSalesTableRefRecId _mcrSalesTableRefRecId = 0)
    {
        if (!prmisDefault(_mcrSalesTableRefRecId))
        {
            this.setField(fieldNum(MCRSalesTableShipping, SalesTable), _mcrSalesTableRefRecId);
        }

        return mcrSalesTableShipping.SalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipComplete</Name>
				<Source><![CDATA[
        public NoYes parmShipComplete(NoYes _shipComplete = NoYes::No)
    {
        if (!prmisDefault(_shipComplete))
        {
            this.setField(fieldNum(MCRSalesTableShipping, ShipComplete), _shipComplete);
        }

        return mcrSalesTableShipping.ShipComplete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExpedite</Name>
				<Source><![CDATA[
        protected void setExpedite()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTableShipping, Expedite)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDiscGroup</Name>
				<Source><![CDATA[
        protected void setPriceDiscGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTableShipping, PriceDiscGroup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesTable</Name>
				<Source><![CDATA[
        protected void setSalesTable()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTableShipping, SalesTable)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipComplete</Name>
				<Source><![CDATA[
        protected void setShipComplete()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTableShipping, ShipComplete)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
        protected void setTableFields()
    {
        this.setExpedite();
        this.setSalesTable();
        this.setShipComplete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static AxMCRSalesTableShipping construct()
    {
        return new AxMCRSalesTableShipping();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructValidateInput</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the input validation for the <c>AxMCRSalesTableShipping</c> class.
    /// </summary>
    /// <param name="_mcrSalesTableShipping">
    /// The <c>MCRSalesTableShipping</c> record to validate.
    /// </param>
    /// <returns>
    /// The current record of the <c>AxMCRSalesTableShipping</c> class.
    /// </returns>
    public static AxMCRSalesTableShipping constructValidateInput(MCRSalesTableShipping _mcrSalesTableShipping)
    {
        AxMCRSalesTableShipping axMCRSalesTableShipping = AxMCRSalesTableShipping::newValidateInput();

        axMCRSalesTableShipping.MCRSalesTableShipping(_mcrSalesTableShipping);

        return axMCRSalesTableShipping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMCRSalesTableShipping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the <c>AxMCRSalesTableShipping</c> class.
    /// </summary>
    /// <param name="_mcrSalesTableShipping">
    /// The specified base record of the <c>MCRSalesTableShipping</c> table.
    /// </param>
    /// <returns>
    /// The instantiated and initialized object of the <c>AxMCRSalesTableShipping</c> class.
    /// </returns>
    public static AxMCRSalesTableShipping newMCRSalesTableShipping(MCRSalesTableShipping _mcrSalesTableShipping)
    {
        AxMCRSalesTableShipping axMCRSalesTableShipping = AxMCRSalesTableShipping::construct();

        axMCRSalesTableShipping.MCRSalesTableShipping(_mcrSalesTableShipping);

        return axMCRSalesTableShipping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newValidateInput</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the input validation for the <c>AxMCRSalesTableShipping</c> class.
    /// </summary>
    /// <returns>
    /// The current <c>AxMCRSalesTableShipping</c> record.
    /// </returns>
    public static AxMCRSalesTableShipping newValidateInput()
    {
        AxMCRSalesTableShipping axMCRSalesTableShipping = AxMCRSalesTableShipping::construct();

        axMCRSalesTableShipping.validateInput(true);
        return axMCRSalesTableShipping;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>