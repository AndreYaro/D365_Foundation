<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetSourceIntegrator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetSourceIntegrator</c> class is an abstract class that defines the data management
/// interface for a record of the <c>BudgetSource</c> table that includes retrieving records and
/// creating records.
/// </summary>
abstract public class BudgetSourceIntegrator extends BudgetSourceCollectionIntegrator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createBudgetSource</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a record in the <c>BudgetSource</c> table.
    /// </summary>
    /// <returns>
    ///    A <c>BudgetSource</c> record.
    /// </returns>
    public abstract BudgetSource createBudgetSource()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetSourceTrackingNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the budget source tracking number.
    /// </summary>
    public abstract Num getBudgetSourceTrackingNumber()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetSourceTrackingDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the budget source tracking date.
    /// </summary>
    public abstract TransDate getBudgetSourceTrackingDate()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCommonId</Name>
				<Source><![CDATA[
    protected RecId parmCommonId(RecId _commonId = commonId)
    {
        commonId = _commonId;

        return commonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBudgetSourceIntegrator</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an instance of the <c>BudgetSourceIntegrator</c> subclass by using the specified
    ///    <c>Common</c> record.
    /// </summary>
    /// <param name="_common">
    ///    The <c>Common</c> record that is associated to a <c>BudgetSource</c> record of a specific
    ///    <c>BudgetSourceType</c> value.
    /// </param>
    /// <returns>
    ///    An instance of the <c>BudgetSourceIntegrator</c> subclass.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The budget source type of the specified <c>BudgetSource</c> record is unsupported.
    /// </exception>
    public static BudgetSourceIntegrator newBudgetSourceIntegrator(Common _common)
    {
        return BudgetSourceCollectionIntegrator::newBudgetSourceCollectionIntegrator(_common);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBudgetSourceIntegratorFromBudgetSource</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an instance of the <c>BudgetSourceIntegrator</c> subclass by using the specified
    ///    <c>BudgetSource</c> record.
    /// </summary>
    /// <param name="_budgetSource">
    ///    The <c>BudgetSource</c> record.
    /// </param>
    /// <returns>
    ///    An instance of the <c>BudgetSourceIntegrator</c> subclass.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    An unsupported <c>BudgetSource</c> record was specified.
    /// </exception>
    public static BudgetSourceIntegrator newBudgetSourceIntegratorFromBudgetSource(BudgetSource _budgetSource)
    {
        BudgetSourceIntegrator  budgetSourceIntegrator;

        switch (_budgetSource.BudgetSourceType)
        {
            case BudgetSourceType::BudgetTransactionLine:
                budgetSourceIntegrator = BudgetSourceBudgetTransactionLine::newBudgetSourceBudgetTransactionLine(_budgetSource.BudgetTransactionLine);
                break;

            case BudgetSourceType::LedgerEntry:
                budgetSourceIntegrator = BudgetSourceGeneralJournalEntry::newBudgetSourceGeneralJournalEntry(
                    GeneralJournalEntry::find(_budgetSource.LedgerEntryGeneralJournalEntry));
                break;

            case BudgetSourceType::LedgerJournalEntry:
                changecompany(CompanyInfo::getDataArea(_budgetSource.LedgerEntryJournalLegalEntity))
                {
                    budgetSourceIntegrator = BudgetSourceLedgerJournalTrans::newBudgetSourceLedgerJournalTrans(
                        LedgerJournalTrans::find(_budgetSource.LedgerEntryJournalNumber, _budgetSource.LedgerEntryJournalReferenceNumber, false));
                }
                break;

            case BudgetSourceType::SourceDocumentLine:
                budgetSourceIntegrator = BudgetSourceSourceDocumentLine::newBudgetSourceSourceDocumentLine(_budgetSource.SourceDocumentLine);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        return budgetSourceIntegrator;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>