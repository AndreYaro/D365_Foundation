<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAlternativeProductUsageResponse</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventAlternativeProductUsageResponse</c> class contains the response from the alternative product usage strategy.
/// </summary>
final public class InventAlternativeProductUsageResponse
{
    private boolean         isResponseInitialized;

    private ItemId          alternativeItemId;
    private InventDim       alternativeInventDim;
    private boolean         replaceWithAlternativeProduct;

    private InventTable     inventTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAlternativeItemId</Name>
				<Source><![CDATA[
    [HookableAttribute(false)]
    final public ItemId parmAlternativeItemId()
    {
        return alternativeItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAlternativeInventDim</Name>
				<Source><![CDATA[
    [HookableAttribute(false)]
    final public InventDim parmAlternativeInventDim()
    {
        return alternativeInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReplaceWithAlternativeProduct</Name>
				<Source><![CDATA[
    [HookableAttribute(false)]
    final public boolean parmReplaceWithAlternativeProduct()
    {
        return replaceWithAlternativeProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignAlternativeProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the alternative product to use.
    /// </summary>
    /// <param name = "_alternativeInventTable">
    /// An <c>InventTable</c> buffer referencing the alternative product.
    /// </param>
    [HookableAttribute(false)]
    final internal void assignAlternativeProduct(InventTable _alternativeInventTable)
    {
        if (isResponseInitialized)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        alternativeItemId = _alternativeInventTable.AltItemId;
        alternativeInventDim.initAlternativeProductDimensionsFromInventTable(_alternativeInventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignReplaceWithAlternativeProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the result of whether an alternative product should be used.
    /// </summary>
    /// <param name = "_replaceWithAlternativeProduct">
    /// true if an alternative product should be used; otherwise, false.
    /// </param>
    [HookableAttribute(false)]
    final internal void assignReplaceWithAlternativeProduct(boolean _replaceWithAlternativeProduct)
    {
        if (isResponseInitialized)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        replaceWithAlternativeProduct = _replaceWithAlternativeProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endInitialization</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ends the initialization of the response.
    /// </summary>
    [HookableAttribute(false)]
    final internal void endInitialization()
    {
        this.doEndInitialization();
    }

]]></Source>
			</Method>
			<Method>
				<Name>doEndInitialization</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the initialization to ended.
    /// </summary>
    protected void doEndInitialization()
    {
        isResponseInitialized = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newResponse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new response.
    /// </summary>
    /// <returns>
    /// The instantiated <c>InventAlternativeProductUsageResponse</c> response object.
    /// </returns>
    [HookableAttribute(false)]
    public static InventAlternativeProductUsageResponse newResponse()
    {
        return new InventAlternativeProductUsageResponse();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>