<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCopyingForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class PurchCopyingForm
{
    SalesPurchCopy      salesPurchCopy;
    Common              callerTable;
    FormDataSource      callerDataSource;
    FormRun             callerFormRun;
    // <GIN>
    NoYes               taxAsPerOriginalInv;
    // </GIN>
    // <GEERU>
    NoYes               copyExchRate;
    // </GEERU>
    // <GBR>
    RefRecId            reasonCode;
    // </GBR>
    TmpFrmVirtual       tmpFrmVirtualRBOLines;
    PurchCopyingContract contract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkUpdate</Name>
				<Source><![CDATA[
    public boolean checkUpdate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchCopyingForm</Name>
				<Source><![CDATA[
    public static PurchCopyingForm newPurchCopyingForm(SalesPurchCopy _salesPurchCopy, Common _callerTable, FormRun _callerFormRun = null)
    {
        SysTableNameFactoryAttribute    attribute               = new SysTableNameFactoryAttribute(tableId2Name(_callerTable.TableId));
        PurchCopyingForm                purchCopyingForm        = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(PurchCopyingForm), attribute) as PurchCopyingForm;

        if (!purchCopyingForm)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        purchCopyingForm.parmCallerFormRun(_callerFormRun);
        purchCopyingForm.parmSalesPurchCopy(_salesPurchCopy);
        purchCopyingForm.parmCallerTable(_callerTable);
        purchCopyingForm.parmCallerDataSource(FormDataUtil::getFormDataSource(_callerTable));

        return purchCopyingForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        this.initContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructAndInitCopying</Name>
				<Source><![CDATA[
    public void constructAndInitCopying(TmpFrmVirtual   _tmpFrmVirtualLines,
                                        TmpFrmVirtual   _tmpFrmVirtualHeader,
                                        Qty             _qtyFactor         = 1,
                                        NoYes           _reverseSign       = NoYes::No,
                                        NoYes           _recalculateAmount = NoYes::No,
                                        NoYes           _copyMarkup        = NoYes::No,
                                        NoYes           _copyPrecisely     = NoYes::No,
                                        NoYes           _deleteLines       = NoYes::No,
                                        VendInvoiceJour _vendInvoiceJour   = null)
    {
        List tmpFrmVirtualLinesList = new List(Types::Record);
        List tmpFrmVirtualHeaderList = new List(Types::Record);

        while select _tmpFrmVirtualHeader
        {
            tmpFrmVirtualHeaderList.addEnd(_tmpFrmVirtualHeader);
        }

        while select _tmpFrmVirtualLines
        {
            tmpFrmVirtualLinesList.addEnd(_tmpFrmVirtualLines);
        }

        contract.parmCallingTable(callerTable);
        contract.parmPackedTmpFrmVirtualLines(tmpFrmVirtualLinesList.pack());
        contract.parmPackedTmpFrmVirtualHeader(tmpFrmVirtualHeaderList.pack());
        contract.parmQtyFactor(_qtyFactor);
        contract.parmReverseSign(_reverseSign);
        contract.parmRecalculateAmount(_recalculateAmount);
        contract.parmCopyMarkup(_copyMarkup);
        contract.parmCopyPrecisely(_copyPrecisely);
        contract.parmDeleteLines(_deleteLines);

        // <GIN>
        if (TaxParameters::checkTaxParameters_IN())
        {
            contract.parmTaxAsPerOrginalInvoice_IN(taxAsPerOriginalInv);
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructInventMovement</Name>
				<Source><![CDATA[
    public InventMovement constructInventMovement()
    {
        PurchLine purchLine;

        return InventMovement::construct(purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Performs the copying.
    /// </summary>
    public void copy()
    {
        PurchCopyService::runFromContract(contract, contract.parmCallingTable(), salesPurchCopy);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Initializes the contract class.
    /// </summary>
    protected void initContract()
    {
        contract = PurchCopyingContract::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the state of controls on <c>PurchCopying</c> form.
    /// </summary>
    /// <param name="_element">
    /// The form.
    /// </param>
    /// <param name="_qtyFactor">
    /// The qtyFactor FormRealControl.
    /// </param>
    /// <param name="_reverseSign">
    /// The reverseSign FormCheckBoxControl.
    /// </param>
    /// <param name="_copyMarkup">
    /// The copyMarkup FormCheckBoxControl.
    /// </param>
    /// <param name="_recalculateAmount">
    /// The recalculateAmount FormCheckBoxControl.
    /// </param>
    /// <param name="_copyPrecisely">
    /// The copyPrecisely FormCheckBoxControl.
    /// </param>
    /// <param name="_deleteLines">
    /// The deleteLines FormCheckBoxControl.
    /// </param>
    /// <param name="_copyHeader">
    /// The copyHeader FormCheckBoxControl.
    /// </param>
    /// <param name="_tabPagePurch">
    /// The tabPagePurch FormTabPageControl.
    /// </param>
    /// <param name="_tabPagePurchOrder">
    /// The tabPagePurchOrder FormTabPageControl.
    /// </param>
    /// <param name="_tabPagePackingSlip">
    /// The tabPagePackingSlip FormTabPageControl.
    /// </param>
    /// <param name="_tabPageInvoice">
    /// The tabPageInvoice FormTabPageControl.
    /// </param>
    /// <param name="_tabPageRFQCaseTable">
    /// The tabPageRFQCaseTable FormTabPageControl.
    /// </param>
    /// <param name="_tabPagePurchReqTable">
    /// The tabPagePurchReqTable FormTabPageControl.
    /// </param>
    /// <param name="_tabPageAgreementPO">
    /// The tabPageAgreementPO FormTabPageControl.
    /// </param>
    /// <param name="_groupReasonCode">
    /// The groupReasonCode FormGroupControl.
    /// </param>
    public void initializeControls(FormRun             _element,
                                   FormRealControl     _qtyFactor,
                                   FormCheckBoxControl _reverseSign,
                                   FormCheckBoxControl _copyMarkup,
                                   FormCheckBoxControl _recalculateAmount,
                                   FormCheckBoxControl _copyPrecisely,
                                   FormCheckBoxControl _deleteLines,
                                   FormCheckBoxControl _copyHeader,
                                   FormTabPageControl  _tabPagePurch,
                                   FormTabPageControl  _tabPagePurchOrder,
                                   FormTabPageControl  _tabPagePackingSlip,
                                   FormTabPageControl  _tabPageInvoice,
                                   FormTabPageControl  _tabPageRFQCaseTable,
                                   FormTabPageControl  _tabPagePurchReqTable,
                                   FormTabPageControl  _tabPageAgreementPO,
                                   FormGroupControl    _groupReasonCode)
    {
        _tabPageRFQCaseTable.visible(false);
        _tabPagePurchReqTable.visible(false);
        _tabPageAgreementPO.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmCallerDataSource(FormDataSource _callerDatasource = callerDatasource)
    {
        callerDatasource = _callerDatasource;

        return callerDatasource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerFormRun</Name>
				<Source><![CDATA[
    public FormRun parmCallerFormRun(FormRun _callerFormRun = callerFormRun)
    {
        callerFormRun = _callerFormRun;

        return callerFormRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerTable</Name>
				<Source><![CDATA[
    public Common parmCallerTable(Common _callerTable = callerTable)
    {
        callerTable = _callerTable;

        return callerTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCopyExchRate</Name>
				<Source><![CDATA[
    public NoYes parmCopyExchRate(NoYes _copyExchRate = copyExchRate)
    {
        copyExchRate = _copyExchRate;

        return copyExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonCode_BR</Name>
				<Source><![CDATA[
    public RefRecId parmReasonCode_BR(RefRecId _reasonCode = reasonCode)
    {
        reasonCode = _reasonCode;
        return reasonCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchCopy</Name>
				<Source><![CDATA[
    public SalesPurchCopy parmSalesPurchCopy(SalesPurchCopy _salesPurchCopy = salesPurchCopy)
    {
        salesPurchCopy = _salesPurchCopy;

        return salesPurchCopy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxAsPerOrginalInvoice_IN</Name>
				<Source><![CDATA[
    public NoYes parmTaxAsPerOrginalInvoice_IN(NoYes     _taxAsPerOriginalInv = taxAsPerOriginalInv)
    {
        taxAsPerOriginalInv = _taxAsPerOriginalInv;

        return taxAsPerOriginalInv;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmtmpFrmVirtualRBOLines</Name>
				<Source><![CDATA[
    public void parmtmpFrmVirtualRBOLines(TmpFrmVirtual _tmpFrmVirtualRBOLines)
    {
        tmpFrmVirtualRBOLines = _tmpFrmVirtualRBOLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCallerDatasource</Name>
				<Source><![CDATA[
    public void updateCallerDatasource()
    {
        Object              object_callerDatasource;
        PurchRFQCaseTable   purchRFQCaseTable;

        if (callerTable is PurchRFQCaseTable)
        {
            purchRFQCaseTable = callerTable as PurchRFQCaseTable;
            purchRFQCaseTable.updateStatus();
        }

        callerDatasource.reread();
        callerDatasource.refresh();

        object_callerDatasource = callerDatasource;
        if (formDataSourceHasMethod(object_callerDatasource, identifierStr(reReadLines)))
        {
            object_callerDatasource.reReadLines();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the selected header record is valid.
    /// </summary>
    /// <param name="_header">
    /// A header record.
    /// </param>
    /// <returns>
    /// true if the validation passes; Otherwise, false.
    /// </returns>
    public boolean validateHeader(Common _header)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the selected line record is valid.
    /// </summary>
    /// <param name="_line">
    /// A line record.
    /// </param>
    /// <returns>
    /// true if the validation passes; Otherwise, false.
    /// </returns>
    public boolean validateLine(Common _line)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether all line records are valid.
    /// </summary>
    /// <returns>
    /// true if the validation passes; Otherwise, false.
    /// </returns>
    public boolean validateLines()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchReqTable_ds_executeQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_purchReqTable_DS">
    /// The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    public void purchReqTable_ds_executeQuery(FormDataSource _purchReqTable_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchReqTable_ds_Init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_purchReqTable_DS">
    /// The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    public void purchReqTable_ds_Init(FormDataSource _purchReqTable_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoice4PaymJour_ds_executeQuery_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendInvoice4PaymJour_DS">
    /// The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    public void vendInvoice4PaymJour_ds_executeQuery_RU(FormDataSource _vendInvoice4PaymJour_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoice4PaymJour_ds_init_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendInvoice4PaymJour_DS">
    /// The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    public void vendInvoice4PaymJour_ds_init_RU(FormDataSource _vendInvoice4PaymJour_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoice4PaymJour_RU_ds_linkActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendInvoice4PaymJour_DS">
    /// The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    public void vendInvoice4PaymJour_RU_ds_linkActive(FormDataSource _vendInvoice4PaymJour_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoice4PaymTrans_RU_ds_linkActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendInvoice4PaymTrans_DS">
    /// The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    public void vendInvoice4PaymTrans_RU_ds_linkActive(FormDataSource _vendInvoice4PaymTrans_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceJour_ds_executeQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendInvoiceJour_DS">
    /// The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    public void vendInvoiceJour_ds_executeQuery(FormDataSource _vendInvoiceJour_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceJour_ds_Init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendInvoiceJour_DS">
    /// The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    public void vendInvoiceJour_ds_Init(FormDataSource _vendInvoiceJour_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceJour_ds_linkActive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendInvoiceJour_DS">
    ///    The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    /// <remarks>
    ///    This method does nothing because it is only a method stub to be overridden in child classes.
    /// </remarks>
    public void vendInvoiceJour_ds_linkActive(FormDataSource _vendInvoiceJour_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceTrans_ds_linkActive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendInvoiceTrans_DS">
    ///    The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    /// <remarks>
    ///    This method does nothing because it is only a method stub to be overridden in child classes.
    /// </remarks>
    public void vendInvoiceTrans_ds_linkActive(FormDataSource _vendInvoiceTrans_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendPackingSlipJour_ds_executeQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendPackingSlipJour_DS">
    ///    The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    /// <remarks>
    ///    This method does nothing because it is only a method stub to be overridden in child classes.
    /// </remarks>
    public void vendPackingSlipJour_ds_executeQuery(FormDataSource _vendPackingSlipJour_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendPackingSlipJour_ds_Init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendPackingSlip_DS">
    ///    The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    /// <remarks>
    ///    This method does nothing because it is only a method stub to be overridden in child classes.
    /// </remarks>
    public void vendPackingSlipJour_ds_Init(FormDataSource _vendPackingSlip_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendPurchOrderJour_ds_executeQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendPurchOrderJour_DS">
    ///    The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    /// <remarks>
    ///    This method does nothing because it is only a method stub to be overridden in child classes.
    /// </remarks>
    public void vendPurchOrderJour_ds_executeQuery(FormDataSource _vendPurchOrderJour_DS)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendPurchOrderJour_ds_Init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Does nothing because it is only a method stub for inherited classes.
    /// </summary>
    /// <param name="_vendPurchOrderJour_DS">
    ///    The data source from the <c>PurchCopying</c> form on which properties can be changed.
    /// </param>
    /// <remarks>
    ///    This method does nothing because it is only a method stub to be overridden in child classes.
    /// </remarks>
    public void vendPurchOrderJour_ds_Init(FormDataSource _vendPurchOrderJour_DS)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>