<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSDataEntityValidationHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used to invoke validation and insertion of the records used in data entities.
/// </summary>
public class WHSDataEntityValidationHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateAndInsertRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate the supplied record and invoke insertion.
    /// </summary>
    /// <param name = "_record">Record for which the validation and insertion is performed.</param>
    public static void validateAndInsertRecord(Common _record)
    {
        boolean isRecordValid = WHSDataEntityValidationHelper::validateRecordFields(_record);

        _record.defaultRow();

        if (isRecordValid)
        {
            isRecordValid = _record.validateWrite();
        }

        if (!isRecordValid)
        {
            throw error(strFmt("@WAX:WHSCannotInsertRecordInTable", tableId2PName(_record.TableId)));
        }

        _record.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAndUpdateRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate the supplied record and invoke update.
    /// </summary>
    /// <param name = "_record">Record for which the validation and update is performed.</param>
    public static void validateAndUpdateRecord(Common _record)
    {
        boolean isRecordValid = WHSDataEntityValidationHelper::validateRecordFields(_record);

        _record.defaultRow();

        if (isRecordValid)
        {
            isRecordValid = _record.validateWrite();
        }

        if (!isRecordValid)
        {
            throw error(strFmt("@WAX:WHSCannotUpdateRecordInTable", tableId2PName(_record.TableId)));
        }

        _record.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAndDeleteRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate the current record can be deleted and invoke deletion.
    /// </summary>
    /// <param name = "_record">Record for which the validation and deletion is performed.</param>
    public static void validateAndDeleteRecord(Common _record)
    {
        if (!_record.validateDelete())
        {
            throw error(strFmt("@WAX:WHSCannotDeleteRecordInTable", tableId2PName(_record.TableId)));
        }

        _record.delete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRecordFields</Name>
				<Source><![CDATA[
    private static boolean validateRecordFields(Common _record)
    {
        boolean ret = true;

        DictTable dictTable = new DictTable(_record.TableId);

        for (int fCount = 1; fCount <= dictTable.fieldCnt(); fCount++)
        {
            DictField   dictField   = dictTable.fieldObject(dictTable.fieldCnt2Id(fCount));
            FieldId     fieldId     = dictField.id();

            if (dictField && !dictField.isSystem() && _record.isFieldSet(fieldId) && !_record.validateField(fieldId))
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>