<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdJournalFormTransRouteJob</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProdJournalFormTransRouteJob extends ProdJournalFormTransRoute
{
    ObjectIdent         formRunJob;

    FormRealControl     ctrlGridExecutedPct;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buttonClickedJob</Name>
				<Source><![CDATA[
    void buttonClickedJob()
    {
        formRunJob = this.openProdRouteJobCurrentForm(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    protected void enableButtonsActive()
    {
        ProdJobType     prodJobType = ProdJobType::construct(prodJournalRoute.JobType);

        super();

        boolean check = prodJournalRoute.OprPriority ? false : true;
        ctrlGridExecutedPct.skip(!check);
        ctrlGridExecutedPct.allowEdit(check);
        ctrlGridExecutedPct.enabled(prodJournalRoute.OprPriority ? false : true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedJobIdPost</Name>
				<Source><![CDATA[
    void fieldModifiedJobIdPost()
    {
        ProdRouteJob        prodRouteJob = ProdRouteJob::findJobId(prodJournalRoute.JobId);
        ProdJobType         prodJobType  = ProdJobType::construct(prodRouteJob.JobType);
        ProdJournalTable prodJournalTable = journalTableData.journalTable();
        prodJobType.initProdJournalRoute(prodRouteJob.prodRoute(), prodJournalRoute, prodRouteJob, true);

        if (prodJournalRoute.isProjMethodConsumed())
        {
            prodJobType.initProdJournalRouteProj(ProdRouteTransType::Time,prodJournalRoute,prodJournalRouteProjHour);
            prodJobType.initProdJournalRouteProj(ProdRouteTransType::Qty,prodJournalRoute,prodJournalRouteProjQuantity);
        }

        this.enableButtonsActive();

        if (formRunJob)
        {
            Object formObject = formRunJob.object();
            if (formObject)
                formObject.doLinkActive();
        }

        if (prodJournalTable.AutoReportFinished)
        {
            if (ProdRoute::find(prodRouteJob.ProdId,prodRouteJob.OprNum,RouteOprPriority::Primary).OprNumNext == 0)
            {
                prodJournalRoute.ProdReportFinished = NoYes::Yes;
                this.fieldModifiedProdReportFinishedPost();
            }
        }

        if (prodJournalTable.RouteAutoPickList)
        {
            if (ProdBOM::findOprNum(prodJournalRoute.ProdId,prodJournalRoute.OprNum).RecId)
            {
                prodJournalRoute.ProdPickList = NoYes::Yes;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlGridExecutedPct</Name>
				<Source><![CDATA[
    FormRealControl parmCtrlGridExecutedPct(FormRealControl _ctrlGridExecutedPct = ctrlGridExecutedPct)
    {
        ctrlGridExecutedPct = _ctrlGridExecutedPct;
        return ctrlGridExecutedPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExecutedPct</Name>
				<Source><![CDATA[
    void setExecutedPct()
    {
        prodJournalRoute.ExecutedPct = prodJournalRoute.proposalJobExecutedPct();
        this.setJobFinished();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHours</Name>
				<Source><![CDATA[
    void setHours()
    {
        prodJournalRoute.Hours = prodJournalRoute.proposalHours();
        this.setExecutedPct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJobFinished</Name>
				<Source><![CDATA[
    void setJobFinished()
    {
        prodJournalRoute.JobFinished = prodJournalRoute.proposalJobFinished();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>