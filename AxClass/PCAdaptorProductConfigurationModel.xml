<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcAdaptorProductConfigurationModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PcAdaptorProductConfigurationModel
{
    PCProductConfigurationModel productConfigurationModel;
    PCAdaptorRootComponent      rootComponent;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accept</Name>
				<Source><![CDATA[
    /// <summary>
    /// Accepts a <c>PCAdaptorVisitor</c> object and passes it on to its sub elements.
    /// </summary>
    /// <param name="_visitor">
    /// The <c>PCAdaptorVisitor</c> object to be passed on to the sub elements.
    /// </param>
    public void accept(PCAdaptorVisitor _visitor)
    {
        _visitor.visitProductConfigurationModelStart(this);

        this.getRootComponent().accept(_visitor);

        _visitor.visitProductConfigurationModelEnd(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getConfigurationModelName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the <c>productConfigurationModel</c> object.
    /// </summary>
    /// <returns>
    /// The name of the <c>productConfigurationModel</c> object.
    /// </returns>
    public PCName getConfigurationModelName()
    {
        return productConfigurationModel.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRootComponent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the <c>rootComponent</c> object.
    /// </summary>
    /// <returns>
    /// The value of the <c>rootComponent</c> object.
    /// </returns>
    public PCAdaptorRootComponent getRootComponent()
    {
        return rootComponent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasBOMLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the component has any BOM operations.
    /// </summary>
    /// <returns>
    /// true if the component has BOM operations; otherwise, false.
    /// </returns>
    public boolean hasBOMLines()
    {
        return this.getRootComponent().hasBOMLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasRouteOperations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the component has any route operations.
    /// </summary>
    /// <returns>
    /// true if the component has route operations; otherwise, false.
    /// </returns>
    public boolean hasRouteOperations()
    {
        return this.getRootComponent().hasRouteOperations();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProductConfigurationModel</Name>
				<Source><![CDATA[
        protected void setProductConfigurationModel(PCProductConfigurationModel _productConfigurationModel)
    {
        productConfigurationModel.data(_productConfigurationModel);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRootComponent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>rootComponent</c> object.
    /// </summary>
    /// <param name="_component">
    /// The value for which to set the <c>rootComponent</c> object.
    /// </param>
    public void setRootComponent(PCAdaptorRootComponent _component)
    {
        rootComponent = _component;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PCAdaptorProductConfigurationModel construct(PCProductConfigurationModel _productConfigurationModel)
    {
        PCAdaptorProductConfigurationModel adaptorProductConfigurationModel = new PCAdaptorProductConfigurationModel();

        adaptorProductConfigurationModel.setProductConfigurationModel(_productConfigurationModel);

        return adaptorProductConfigurationModel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>