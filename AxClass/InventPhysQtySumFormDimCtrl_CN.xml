<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPhysQtySumFormDimCtrl_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This <c>InventPhysQtySumFormDimCtrl_CN</c> class controls the controls on the form according to inventory dimention setting.
/// </summary>

class InventPhysQtySumFormDimCtrl_CN
{
    FormRun formObject;
    InventDimParm dimParmVisible;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustShowField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets whether the control of dimension field is shown in the form.
    /// </summary>
    /// <param name="_tmpDimFieldId">
    /// A dimension field.
    /// </param>
    /// <returns>
    /// Whether the control of dimension field is shown in the form.
    /// </returns>

    protected NoYes mustShowField(fieldId _tmpDimFieldId)
    {
        fieldId dimfield;

        dimfield = InventPhysQtySumTmp_CN::tmpDim2Dim(_tmpDimFieldId);
        return dimParmVisible.(InventDim::dim2dimParm(dimfield));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimParmVisible</Name>
				<Source><![CDATA[
        InventDimParm parmDimParmVisible(InventDimParm _dimParmVisible = dimParmVisible)
    {
        dimParmVisible = _dimParmVisible;
        return dimParmVisible;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormObject</Name>
				<Source><![CDATA[
        public FormRun parmFormObject(FormRun _formObject = formObject)
    {
        formObject = _formObject;
        return formObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the property of control on the form.
    /// </summary>

    void updateControls()
    {
        FormDataSource dataSource;
        int i;

        for (i = 1; i <= formObject.dataSourceCount(); i++)
        {
            dataSource = formObject.dataSource(i);
            if (dataSource.table() == tablenum(InventPhysQtySumTmp_CN))
            {
                this.updateDataSource(dataSource);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// updates the controls bond to the datasource.
    /// </summary>
    /// <param name="_dataSource">
    /// A form datasource.
    /// </param>

    private void updateDataSource(FormDataSource _dataSource)
    {
        container dimFields = InventPhysQtySumTmp_CN::dimFieldList();
        Counter i;

        for (i = 1; i <= conlen(dimFields); i++)
        {
            _dataSource.object(conpeek(dimFields ,i)).visible(this.mustShowField(conpeek(dimFields ,i)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventPhysQtySumFormDimCtrl_CN construct()
    {
        return new InventPhysQtySumFormDimCtrl_CN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an InventPhysQtySumFormDimCtrl_CN class instance for a form.
    /// </summary>
    /// <param name="_formRun">
    /// A form.
    /// </param>
    /// <returns>
    /// An InventPhysQtySumFormDimCtrl_CN class instance for the form.
    /// </returns>

    public static InventPhysQtySumFormDimCtrl_CN newFromForm(FormRun _formRun)
    {
        InventPhysQtySumFormDimCtrl_CN inventDimCtrl;

        inventDimCtrl = InventPhysQtySumFormDimCtrl_CN::construct();
        inventDimCtrl.parmFormObject(_formRun);
        return inventDimCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>