<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalWFApprResubmitToWF</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerJournalWFApprResubmitToWF</c> class supports the clicked event from a workflow common
///    control Resubmit action button on the <c>LedgerJournalTable</c> form.
/// </summary>
public class LedgerJournalWFApprResubmitToWF
{
    Args args;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArgs</Name>
				<Source><![CDATA[
    protected Args parmArgs(Args _args = args)
    {
        args = _args;
        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens a dialog box to use for resubmitting a journal workflow.
    /// </summary>
    protected void run()
    {
        recID                           recID               = args.record().RecId;
        tableId                         tableId             = args.record().TableId;
        LedgerJournalTable              ledgerJournalTable  = args.record();
		WorkflowWorkItemTable           workItem            = args.caller().getActiveWorkflowWorkItem();
        WorkflowWorkItemActionDialog    workflowWorkItemActionDialog;

        Debug::assert(tableId == tablenum(LedgerJournalTable));
        Debug::assert(recId != 0);

        // The method has not been called correctly.
        if (tableId != tablenum(LedgerJournalTable) ||
            recId == 0)
        {
            throw error(strfmt("@SYS19306", funcname()));
        }

        // The journal has an active workflow.
        if (workItem.RecId > 0)
        {
            try
            {
                // The journal does support workflow approvals.
                workflowWorkItemActionDialog = WorkflowWorkItemActionDialog::construct( workItem,
                                                                                        WorkflowWorkItemActionType::Resubmit,
                                                                                        new MenuFunction(args.menuItemName(), args.menuItemType()));

                workflowWorkItemActionDialog.preDialogRun += eventhandler(this.preWorkflowDialogRun);
                workflowWorkItemActionDialog.run();

                if (workflowWorkItemActionDialog.parmIsClosedOK())
                {
                    LedgerJournalTable ledgerJournalTableLoc = LedgerJournalTable::findByRecId(recID);

                    if (ledgerJournalTableLoc.WorkflowApprovalStatus == LedgerJournalWFApprovalStatus::ChangeRequested ||
                        ledgerJournalTableLoc.WorkflowApprovalStatus == LedgerJournalWFApprovalStatus::Rejected)
                    {
                        workItem    = args.caller().getActiveWorkflowWorkItem();
                        WorkflowWorkItemActionManager::dispatchWorkItemAction(  workItem,
                                                                                workflowWorkItemActionDialog.parmWorkflowComment(),
                                                                                workflowWorkItemActionDialog.parmTargetUser(),
                                                                                WorkflowWorkItemActionType::Resubmit,
                                                                                args.menuItemName());

                        // Set the workflow status to Submitted.
                        LedgerJournalWFApprovalStatusManager::resubmitFromForm(ledgerJournalTable);
					}
                    else
                    {
                        throw Exception::Error;
                    }
                }
            }

            catch(Exception::Error)
            {
                throw error(strfmt("@SYS111652", ledgerJournalTable.JournalName, ledgerJournalTable.JournalNum));
            }
        }
        // Make the form refresh its common workflow UI controls.
        args.caller().updateWorkflowControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>preWorkflowDialogRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the workflow dialog run event.
    /// </summary>
    protected void preWorkflowDialogRun()
    {
        if (BudgetControlAccountingJournalProcessor::isLedgerBudgetCheckRequiredForLedgerJournalTable(args.record().RecId))
        {
            // Check budget prior to prompting the submit dialog to allow users to cancel their submission action.
            BudgetControlAccountingJournalProcessor::submitLedgerJournalTableToCheckBudget(args.record().RecId, true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        LedgerJournalWFApprResubmitToWF journalWFApprResubmit = new LedgerJournalWFApprResubmitToWF();
        journalWFApprResubmit.parmArgs(_args);
        journalWFApprResubmit.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>