<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkExecuteDisplayCatchWeightControls</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Mobile device controls used to support catch weight operations.
/// </summary>
internal class WHSWorkExecuteDisplayCatchWeightControls
{
    /// <summary>
    /// Control name on the mobile device for storing the weight of a catch weight item.
    /// </summary>
    internal static const FormControlName CatchWeight                   = 'CatchWeight';

    /// <summary>
    /// Control name on the mobile device for storing the tag value of a catch weight item.
    /// </summary>
    internal static const FormControlName CatchWeightTag                = 'CatchWeightTag';

    /// <summary>
    /// Control name on the mobile device for storing the weight associated to a catch weight tag.
    /// </summary>
    internal static const FormControlName CatchWeightTagWeight          = 'CatchWeightTagWeight';

    /// <summary>
    /// Control name on the mobile device for storing the current count of catch weight tags scanned.
    /// </summary>
    internal static const FormControlName CatchWeightTagCounter         = 'CatchWeightTagCounter';

    /// <summary>
    /// Control name on the mobile device for storing the handling quantity associated to the catch weight tag.
    /// </summary>
    internal static const FormControlName CatchWeightTagQty             = 'CatchWeightTagQty';

    /// <summary>
    /// Control name on the mobile device for storing the identifier of the catch weight tag during outbound operations.
    /// </summary>
    internal static const FormControlName OutboundCatchWeightTag        = 'OutboundCatchWeightTag';

    /// <summary>
    /// Control name on the mobile device for storing the identifier of the catch weight tags during outbound operations.
    /// </summary>
    internal static const FormControlName OutboundCatchWeightTags       = 'OutboundCatchWeightTags';

    /// <summary>
    /// Control name on the mobile device for storing the weight scanned during outbound operations.
    /// </summary>
    internal static const FormControlName OutboundWeight                = 'OutboundWeight';

    /// <summary>
    /// Control name on the mobile device for storing the catch weight quantity associated to the weight scanned during outbound operations.
    /// </summary>
    internal static const FormControlName CatchWeightQtyOutboundWeight  = 'CatchWeightQtyOutboundWeight';

    /// <summary>
    /// Control name on the mobile device for storing the values entered when a user is prompted to enter weight.
    /// </summary>
    internal static const FormControlName WeightPrompt                  = 'WeightPrompt';

    /// <summary>
    /// Control name on the mobile device for storing the summation of catch weight quantities.
    /// </summary>
    internal static const FormControlName CatchWeightQtySum             = 'CatchWeightQtySum';

    /// <summary>
    /// Control name on the mobile device for storing the summation of weight for catch weight items.
    /// </summary>
    internal static const FormControlName CatchWeightWeightSum          = 'CatchWeightWeightSum';

    /// <summary>
    /// Control name on the mobile device for storing the summation of catch weight quantities on a catch weight tag.
    /// </summary>
    internal static const FormControlName CatchWeightTagQtySum          = 'CatchWeightTagQtySum';

    /// <summary>
    /// Control name on the mobile device for storing the summation of weight on a catch weight tag.
    /// </summary>
    internal static const FormControlName CatchWeightTagWeightSum       = 'CatchWeightTagWeightSum';

    /// <summary>
    /// Tracks a list of created catch weight tags through the pass.
    /// </summary>
    internal static const FormControlName ScannedCatchWeightTagList     = 'ScannedCatchWeightTagList';

    /// <summary>
    /// Control name on the mobile device for storing the summation of catch weight quantity across dimension tracking records.
    /// </summary>
    internal static const FormControlName CatchWeightDimQtySum          = 'CatchWeightDimQtySum';

    /// <summary>
    /// Control name on the mobile device for storing the summation of weight across catch weight dimension tracking records.
    /// </summary>
    internal static const FormControlName CatchWeightDimWeightSum       = 'CatchWeightDimWeightSum';

    /// <summary>
    /// Control name on the mobile device for storing the weight that will be consumed through the mobile device flow.
    /// </summary>
    internal static const FormControlName WeightToConsume               = 'WeightToConsume';

    /// <summary>
    /// Record identifier for ASN Item which weight is captured against.
    /// </summary>
    internal static const FormControlName ASNItemRecId                  = 'ASNItemRecId';

    /// <summary>
    /// Tracks a list of created processed ASN items through the pass.
    /// </summary>
    internal static const FormControlName ProcessedASNItemRecIdCollection = 'ProcessedASNItemRecIdCollection';

    /// <summary>
    /// Record identifier for ReceiptDetails.
    /// </summary>
    internal static const FormControlName ReceiptDetailRecId            = 'ReceiptDetailRecId';

    /// <summary>
    /// Journal ID used during the warehouse transfers. 
    /// </summary>
    internal static const FormControlName JournalId                     = 'JournalId';

    /// <summary>
    /// New capture weight when modifying a mixed LP line.
    /// </summary>
    internal static const FormControlName NewCaptureWeight              = 'NewCaptureWeight';

    /// <summary>
    /// Determines if the catch weight field should be set to read-only on a form.
    /// </summary>
    internal static const FormControlName WeightIsReadOnly              = 'WeightIsReadOnly';

    /// <summary>
    /// Unique item/dimension combination for the specific location or license plate and the corresponding handling qty.
    /// </summary>
    internal static const FormControlName QuarantineItemDimensionAndQty = 'QuarantineItemDimensionAndQty';

    /// <summary>
    /// Unique item/dimension combination for the specific location or license plate and the corresponding inventory weight.
    /// </summary>
    internal static const FormControlName QuarantineItemDimensionAndWeight = 'QuarantineItemDimensionAndWeight';

    /// <summary>
    /// The item and dimension combination for which user is capturing the weight.
    /// </summary>
    internal static const FormControlName QuarantineProcessSelectedKey = 'QuarantineProcessSelectedKey';

    /// <summary>
    /// Format of the key for storing the item and dimension combination (ItemRecId#InventDimId).
    /// </summary>
    internal static const FormControlName QuarantineProcessItemDimKeyFormat = '%1#%2';

    /// <summary>
    /// The handling quantity that was previously picked for a production order in material consumption.
    /// </summary>
    internal static const FormControlName HandlingQtyPicked = "HandlingQtyPicked";

    /// <summary>
    /// The weight quantity that was previously picked for a production order in material consumption.
    /// </summary>
    internal static const FormControlName WeightPicked = "WeightPicked";
}
]]></Declaration>
		<Methods />
	</SourceCode>
</AxClass>