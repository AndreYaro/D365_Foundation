<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleObligateFundsExpProdExtPrice</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductOrder), BusinessEvent_ProductOrder::ObligateBudgetFundsForExpensedProducts, MonetaryAmount::ExtendedPrice),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductOrder), BusinessEvent_ProductOrder::ObligateBudgetFundsForExpensedProducts, MonetaryAmount::Charge),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductOrder), BusinessEvent_ProductOrder::ObligateBudgetFundsForExpensedProducts, MonetaryAmount::ChargeVariance),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductOrder), BusinessEvent_ProductOrder::ObligateBudgetFundsForExpensedProducts, MonetaryAmount::TaxNonRecoverable),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductOrder), BusinessEvent_ProductOrder::ObligateBudgetFundsForExpensedProducts, MonetaryAmount::TaxNonRecoverableVariance)
]
public class AccDistRuleObligateFundsExpProdExtPrice extends AccountingDistributionRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        ProjectAccDistRule                  projectAccDistRule;
        boolean                             isProject;
        SourceDocumentLineItemIProduct      iProduct;
        boolean                             isStocked;
        LedgerPostingType                   ledgerPostingType;
        // <GEERU>
        #ISOCountryRegionCodes
        boolean                             countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>

        if (this.parmMonetaryAmount() != MonetaryAmount::Charge)
        {
            projectAccDistRule = ProjectAccDistRule::newFromAccountingDistributionRule(this);
            isProject = projectAccDistRule.parmIsProject();
        }

        if (sourceDocumentLineItem is SourceDocumentLineItemIProduct)
        {
            iProduct = sourceDocumentLineItem as SourceDocumentLineItemIProduct;
            isStocked = iProduct.parmStocked();
        }

        if (isProject)
        {
            ledgerPostingType = projectAccDistRule.parmLedgerPostingType();
        }
        else if (isStocked)
        {
            // <GEERU>
            if (countryRegion_RU && !VendParameters::find().UsePurchConsumpAccount_RU)
            {
                ledgerPostingType = LedgerPostingType::PurchReceipt;
            }
            else
            {
            // </GEERU>
                ledgerPostingType = LedgerPostingType::PurchConsump;
            // <GEERU>
            }
            // </GEERU>
        }
        else
        {
            ledgerPostingType = LedgerPostingType::PurchExpense;
        }

        return ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        if (this.parmAmount() >= 0.0)
        {
            return DebitCredit::Debit;
        }
        else
        {
            return DebitCredit::Credit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>