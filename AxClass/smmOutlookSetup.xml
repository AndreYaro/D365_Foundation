<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmOutlookSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysObsolete('Microsoft discontinued support for synchronizing contacts, appointments, and tasks between Dynamics 365 Supply Chain Management and Outlook.', false, 01\12\2023)]
public class smmOutlookSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>action2mappingType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts an action enumeration value to a mapping type.
    /// </summary>
    /// <param name="_action">
    /// The <c>smmOutlookSetupActions</c> enumeration value.
    /// </param>
    /// <returns>
    /// The <c>smmOutlookMappingTypes</c> enumeration value.
    /// </returns>
    private static smmOutlookMappingTypes action2mappingType(smmOutlookSetupActions _action)
    {
        smmOutlookMappingTypes type;

        switch (_action)
        {
            case smmOutlookSetupActions::PickCalendarFolder :
                type = smmOutlookMappingTypes::Appointments;
                break;

            case smmOutlookSetupActions::PickContactFolder :
                type = smmOutlookMappingTypes::Contacts;
                break;

            case smmOutlookSetupActions::PickTaskFolder :
                type = smmOutlookMappingTypes::Tasks;
                break;
        }

        return type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args, boolean _showForm = true)
    {
        FormDatasource  callerDatasource;
        container                   outlookUser;
        Email                       email, userEmail;
        OutlookUserSetup            outlookUserSetup;
        smmOutlookSync              synchronization;
        smmOutlookMappingTypes      mappingType;

        if (_args.record() || FormDataUtil::isFormDataSource(_args.record()))
        {
            outlookUserSetup = _args.record();
            callerDatasource = FormDataUtil::getFormDataSource(_args.record());
        }

        if (_args.parmEnumType() == enumnum(smmOutlookSetupActions))
        {
            switch (_args.parmEnum())
            {
                case smmOutlookSetupActions::UseCurrentProfile :
                    // Get the current Outlook user profile id
                    outlookUser = smmOutlookSync::currentOutlookUser();
                    // Was a Outlook user profile found
                    if (outlookUser)
                    {
                        email = conpeek(outlookUser,3);
                        userEmail =  SysUserInfo::find(outlookUserSetup.UserId).emailDisplay();
                        if (email != userEmail)
                        {
                            // Outlook profile email address '%1' is different from employee's email address '%2'.
                            throw error(strfmt("@SYS94334",email,userEmail));
                        }
                        // Store Outlook user profile on the employee
                        ttsbegin;
                        // UserId is already set in the main form.
                        outlookUserSetup.OutlookUserID      = conpeek(outlookUser,1);
                        outlookUserSetup.OutlookUserEntryID = conpeek(outlookUser,2);
                        // Clear old outlook folder information
                        outlookUserSetup.clearOutlookFolders();
                        outlookUserSetup.write();
                        ttscommit;
                        // Outlook user identification for %1 was set to %2
                        info(strfmt("@SYS86425", outlookUserSetup.UserId, outlookUserSetup.OutlookUserID));
                        // Refresh data source to show the updated employee record
                        callerDatasource.reread();
                        callerDatasource.refresh();
                    }
                    break;
                case smmOutlookSetupActions::PickContactFolder :
                case smmOutlookSetupActions::PickTaskFolder :
                case smmOutlookSetupActions::PickCalendarFolder :

                    // Initialize synchronization class
                    mappingType = smmOutlookSetup::action2mappingType(_args.parmEnum());

                    // Return if flag is off
                    if (!_showForm)
                    {
                        return;
                    }
                    synchronization = smmOutlookSync::construct(mappingType,outlookUserSetup.UserId);
                    synchronization.init();

                    // Only show pick folder dialog if connection be Outlook client could be established
                    if (synchronization.connectedToOutlook())
                    {
                        // Update the employee record
                        callerDatasource.write();
                    }
                    break;
                case smmOutlookSetupActions::ClearFolders :
                    // Should Outlook folders be cleared?
                    if (!_showForm || Box::yesNo("@SYS90820", DialogButton::Yes, "@SYS90642") == DialogButton::Yes)
                    {
                        // Clear Outlook folders
                        outlookUserSetup.clearOutlookFolders();

                        if (callerDatasource != null)
                        {
                            // Update the employee record
                            callerDatasource.write();
                        }
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>