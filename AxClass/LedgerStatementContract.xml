<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerStatementContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerStatementContract</c> class is the data contract for the <c>LedgerStatement</c> SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationGroupAttribute(identifierStr(AllParameters), "@GLS108155", '1')
]
public class LedgerStatementContract implements SysOperationValidatable
{
    TransDate startDate;
    TransDate endDate;
    LedgerReportUnitOption unitOption;

    // not displayed on the dialog
    LogisticsAddressing companyAddress;
    DirPartyName companyLongName;
    LogisticsAddressZipCodeId companyZipCode;
    CompanyCoRegNum companyTaxRegistrationNumber;
    CurrencyCode accountingCurrency;
    TempStr ikf;
    TempStr numberLine;
    Decimals decimalPlaces;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(EndDate)),
        SysOperationLabelAttribute(literalstr("@GLS108152")),
        SysOperationHelpTextAttribute(literalstr("@SYS301209")),
        SysOperationGroupMemberAttribute(identifierStr(AllParameters)),
        SysOperationDisplayOrderAttribute('2')
    ]
    public TransDate parmEndDate(TransDate _endDate = endDate)
    {
        endDate = _endDate;
        return endDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenAccountingCurrency</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(AccountingCurrency))]
    public CurrencyCode parmHiddenAccountingCurrency(CurrencyCode _accountingCurrency = accountingCurrency)
    {
        accountingCurrency = _accountingCurrency;

        return accountingCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyAddress</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyAddress))]
    public LogisticsAddressing parmHiddenCompanyAddress(LogisticsAddressing _companyAddress = companyAddress)
    {
        companyAddress = _companyAddress;

        return companyAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyLongName</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyLongName))]
    public DirPartyName parmHiddenCompanyLongName(DirPartyName _companyLongName = companyLongName)
    {
        companyLongName = _companyLongName;

        return companyLongName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyTaxRegistrationNum</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyTaxRegistrationNumber))]
    public CompanyCoRegNum parmHiddenCompanyTaxRegistrationNum(CompanyCoRegNum _companyTaxRegistrationNumber = companyTaxRegistrationNumber)
    {
        companyTaxRegistrationNumber = _companyTaxRegistrationNumber;

        return companyTaxRegistrationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyZipCode</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyZipCode))]
    public LogisticsAddressZipCodeId parmHiddenCompanyZipCode(LogisticsAddressZipCodeId _companyZipCode = companyZipCode)
    {
        companyZipCode = _companyZipCode;

        return companyZipCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenDecimalPlaces</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(DecimalPlaces))]
    public Decimals parmHiddenDecimalPlaces(Decimals _decimalPlaces = decimalPlaces)
    {
        decimalPlaces = _decimalPlaces;

        return decimalPlaces;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenIKF</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(IKF))]
    public TempStr parmHiddenIKF(TempStr _ikf = ikf)
    {
        ikf = _ikf;

        return ikf;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenNumberLine</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(NumberLine))]
    public TempStr parmHiddenNumberLine(TempStr _numberLine = numberLine)
    {
        numberLine = _numberLine;

        return numberLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[

    [
        DataMemberAttribute(identifierStr(StartDate)),
        SysOperationLabelAttribute(literalStr("@SYS23633")),
        SysOperationHelpTextAttribute(literalStr("@SYS301210")),
        SysOperationGroupMemberAttribute(identifierStr(AllParameters)),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmStartDate(TransDate _startDate = startDate)
    {
        startDate = _startDate;
        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitOption</Name>
				<Source><![CDATA[

    [
        DataMemberAttribute(identifierStr(UnitOption)),
        SysOperationLabelAttribute(literalStr("@GLS108042")),
        // help comes from the EDT
        SysOperationGroupMemberAttribute(identifierStr(AllParameters)),
        SysOperationDisplayOrderAttribute('3')
    ]
    public LedgerReportUnitOption parmUnitOption(LedgerReportUnitOption _unitOption = unitOption)
    {
        unitOption = _unitOption;
        return unitOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Indicates whether the contract is valid.
    /// </summary>
    /// <returns>
    /// true if the contract is valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (isValid && (startDate == dateNull() || endDate == dateNull()))
        {
            isValid = checkFailed("@GLS108154");
        }

        if (isValid && startDate > endDate)
        {
            isValid = checkFailed("@GLS108158");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>