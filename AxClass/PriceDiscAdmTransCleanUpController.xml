<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscAdmTransCleanUpController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PriceDiscAdmTransCleanUpController</c> class acts as a controller
/// for the <c>PriceDiscAdmTransCleanUpService</c> service.
/// </summary>
internal final class PriceDiscAdmTransCleanUpController extends SysOperationServiceController implements BatchRetryable
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>PriceDiscAdmTransCleanUpController</c> class.
    /// </summary>
    /// <param name="_args">
    /// An instance of the <c>Args</c> class.
    /// </param>
    /// <returns>
    /// A new instance of <c>PriceDiscAdmTransCleanUpController</c> class.
    /// </returns>
    [Hookable(false)]
    public static PriceDiscAdmTransCleanUpController construct(Args _args)
    {
        SysOperationController controller = new PriceDiscAdmTransCleanUpController(
            classStr(PriceDiscAdmTransCleanUpService),
            methodStr(PriceDiscAdmTransCleanUpService, deleteRecords),
            SysOperationExecutionMode::Synchronous);

        controller.parmArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        PriceDiscAdmTransCleanUpController::construct(_args).startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SCM:CleanUpTradeAgreementJournals";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    protected boolean validate()
    {
        boolean ret = super();

        ret = ret && Box::yesNo("@SCM:CleanUpTradeAgreementJournalsConfirmMessage", DialogButton::Yes) == DialogButton::Yes;
               
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>