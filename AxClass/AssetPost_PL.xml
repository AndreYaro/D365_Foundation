<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetPost_PL</Name>
	<SourceCode>
		<Declaration><![CDATA[
final public class AssetPost_PL extends AssetPost
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    public boolean check(boolean _budget = false, boolean _checkNetBookValue = true)
    {
        boolean ok = super();

        AssetBook assetBook = AssetBook::find(assetTrans.AssetId, assetTrans.BookId);

        if (!assetBook.Depreciation &&
            (assetTrans.TransType == AssetTransType::AccumulatedDepreciation_PL ||
             assetTrans.TransType == AssetTransType::DepreciationNotCost_PL ||
             assetTrans.TransType == AssetTransType::PostOffAccDepreciation_PL))
        {
            ok = checkFailed(strFmt("@FixedAssets:FA_MessageError_BookHasNotBeenSetupForDepreciation", assetBook.AssetId, assetBook.BookId));
        }

        if (!_budget && assetBook.AcquisitionDate && assetTrans.TransDate < assetBook.AcquisitionDate)
        {
            ok = checkFailed(strFmt("@GLS110883", assetBook.AssetId));
        }

        // method checks the last depreciation date - this is only info method
        if (assetTrans.TransDate < AssetTrans::lastDepreciateDate_PL(assetTrans.AssetId, assetTrans.BookId))
        {
            warning("@GLS110659");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTransType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the transaction type is supported for posting.
    /// </summary>
    /// <param name="_transType">
    ///    The transaction type to check.
    /// </param>
    /// <returns>
    ///    True if the transaction type is supported, false otherwise.
    /// </returns>
    protected boolean checkTransType(AssetTransType _transType)
    {
        boolean ret = true;

        if (_transType == AssetTransType::ExtraDepPriorYears
            || _transType == AssetTransType::ExtraDepThisYear
            || _transType == AssetTransType::BonusDepreciation
            || _transType == AssetTransType::BonusDepPriorYears
            || _transType == AssetTransType::BonusDepThisYear
            || _transType == AssetTransType::DerogatoryIncreaseAllYears
            || _transType == AssetTransType::DerogatoryDecreaseAllYears
            || _transType == AssetTransType::AssetTransfer
            || _transType == AssetTransType::PreAcquisition_CZ)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustInvoiceTrans</Name>
				<Source><![CDATA[
    public void initFromCustInvoiceTrans(CustInvoiceTrans _custInvoiceTrans)
    {
        CustInvoiceTransAsset custInvoiceTransAsset;

        super(_custInvoiceTrans);

        // If the sale factor is not specified or found, the sale will be consider to be done at 100%.  Additionally,
        // assets with non-Polish depreciation methods do not have a value specified for the partial sale percentage.
        custInvoiceTransAsset = CustInvoiceTransAsset::findByCustInvoiceTransId(_custInvoiceTrans.RecId);

        if (custInvoiceTransAsset)
        {
            assetSaleFactor = custInvoiceTransAsset.AssetSaleFactor;
        }
        else
        {
            assetSaleFactor = 100;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerJournalTrans</Name>
				<Source><![CDATA[
    public void initFromLedgerJournalTrans(
        LedgerJournalTrans _ledgerJournalTrans,
        LedgerJournalTrans _originalLedgerJournalTrans,
        LedgerJournalTrans_Asset _ledgerJournalTrans_Asset,
        boolean _isOffset,
        TaxAmount _taxAmount = 0,
        TaxAmount _taxAmountInCostPrice = 0)
    {
        super(_ledgerJournalTrans, _originalLedgerJournalTrans, _ledgerJournalTrans_Asset, _isOffset, _taxAmount, _taxAmountInCostPrice);

        assetSaleFactor = _ledgerJournalTrans_Asset.SaleFactor_PL;
        this.setAssetTransDocument_W();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(LedgerVoucher _ledgerVoucher)
    {
        super(_ledgerVoucher);

        assetSaleFactor = 100;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an instance of the <c>AssetPost_PL</c> class from the specified <c>VendInvoiceTrans</c> table buffer for Poland
    /// </summary>
    /// <param name="_vendInvoiceTrans">
    ///    The <c>VendInvoiceTrans</c> table buffer from which to initialize.
    /// </param>
    /// <param name="_vendInvoiceJour">
    ///    The <c>VendInvoiceJour</c> table buffer from which to initialize.
    /// </param>
    /// <param name="_vendInvoiceInfoLine_Asset">
    ///    The <c>VendInvoiceInfoLine_Asset</c> table buffer from which to initialize.
    /// </param>
    /// <param name="_tax">
    ///     The <c>Tax</c> object from which to initialize.
    /// </param>
    public void initFromVendInvoiceTrans(
        VendInvoiceTrans _vendInvoiceTrans,
        VendInvoiceJour _vendInvoiceJour,
        VendInvoiceInfoLine_Asset _vendInvoiceInfoLine_Asset,
        Tax _tax = null)
    {
        super(_vendInvoiceTrans, _vendInvoiceJour, _vendInvoiceInfoLine_Asset, _tax);

        this.setAssetTransDocument_W();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjEstimate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the class for posting of asset transaction originated from <c>ProjControlPeriodTable</c> table buffer.
    /// </summary>
    /// <param name = "_projControlPeriodTable">The <c>ProjControlPeriodTable</c> table buffer from which to initialize.</param>
    /// <param name = "_amountMST">The transaction amount, in the accounting currency.</param>
    public void initFromProjEstimate(ProjControlPeriodTable _projControlPeriodTable, AmountMST _amountMST)
    {
        super(_projControlPeriodTable, _amountMST);

        this.setAssetTransDocument_W();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetTransDocument_W</Name>
				<Source><![CDATA[
    private void setAssetTransDocument_W()
    {
        if (!assetTrans.DocumentDate_W)
        {
            assetTrans.DocumentDate_W = assetTrans.TransDate;
        }

        if (!assetTrans.DocumentNum_W)
        {
            assetTrans.DocumentNum_W = assetTrans.Voucher;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>