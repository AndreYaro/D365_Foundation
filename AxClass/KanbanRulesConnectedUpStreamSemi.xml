<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanRulesConnectedUpStreamSemi</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>KanbanRulesConnectedUpStreamSemi</c> class explores upstream connected kanban rules until a
/// rule is encountered that does not detect partially finished items.
/// </summary>
public class KanbanRulesConnectedUpStreamSemi extends KanbanRulesConnected
{
    KanbanFlow                  kanbanFlow;
    PlanActivity                planActivity;
    LeanProductionFlowActivity  leanProductionFlowActivity;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>includeKanbanRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a given kanban rule is included in additional exploration.
    /// </summary>
    /// <param name="_kanbanRule">
    /// The <c>KanbanRule</c> record to check.
    /// </param>
    /// <returns>
    /// true if the kanban rule should be included; otherwise, false.
    /// </returns>
    protected boolean includeKanbanRule(KanbanRule _kanbanRule)
    {
        return    super(_kanbanRule)
               && leanProductionFlowActivity
               && leanProductionFlowActivity.PickUpSemiFinished;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFindRules</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>KanbanFindRule</c> object.
    /// </summary>
    /// <param name="_kanbanRule">
    /// The <c>KanbanRule</c> record that is used for the initialization.
    /// </param>
    /// <returns>
    /// true if the initialization was successful; otherwise, false.
    /// </returns>
    protected boolean initFindRules(KanbanRule _kanbanRule)
    {
        boolean result = super(_kanbanRule);

        if (result)
        {
            kanbanFlow                 = _kanbanRule.kanbanFlow();
            leanProductionFlowActivity = kanbanFlow.firstLeanProductionFlowActivity();
            planActivity               = leanProductionFlowActivity.planActivity();
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConnectionParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the connection parameters.
    /// </summary>
    /// <param name="_kanbanRule">
    ///    The <c>KanbanRule</c> record that is used to set the connection parameters.
    /// </param>
    protected void setConnectionParameters(KanbanRule _kanbanRule)
    {
        if (kanbanFindRules)
        {
            kanbanFindRules.parmIncludeReceiveSemiFinished(true);
            kanbanFindRules.parmIncludeReceiveFinished(false);
            kanbanFindRules.parmIncludeOnHandUpdateReceipt(false);
            kanbanFindRules.parmIncludeNotOnHandUpdateReceipt(true);
            kanbanFindRules.parmIncludePickupFinished(true);
            kanbanFindRules.parmIncludePickupSemiFinished(true);
            kanbanFindRules.parmLastPlanActivityDownstreamRecId(planActivity.RecId);
            kanbanFindRules.parmExcludeKanbanRuleRecId(kanbanRuleRoot.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static KanbanRulesConnectedUpStreamSemi construct()
    {
        return new KanbanRulesConnectedUpStreamSemi();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a <c>KanbanRulesConnectedUpStreamSemi</c> object.
    /// </summary>
    /// <param name="_kanbanRuleRoot">
    /// The <c>KanbanRule</c> record that serves as a root to find connected rules.
    /// </param>
    /// <param name="_itemId">
    /// The item ID to find connected rules for.
    /// </param>
    /// <param name="_inventDimId">
    /// The product dimensions to find connected rules for.
    /// </param>
    /// <param name="_dateTimeFrom">
    /// The start date and time at which the connected rules are active.
    /// </param>
    /// <param name="_dateTimeTo">
    /// The end date and time at which the connected rules are active; optional.
    /// </param>
    /// <param name="_inventQty">
    /// The inventory quantity to find connected rules for; optional.
    /// </param>
    /// <returns>
    /// An instance of the <c>KanbanRulesConnectedUpStreamSemi</c> object.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static KanbanRulesConnectedUpStreamSemi newStandard(
        KanbanRule    _kanbanRuleRoot,
        ItemId        _itemId,
        InventDimId   _inventDimId,
        TransDateTime _dateTimeFrom,
        TransDateTime _dateTimeTo = _dateTimeFrom,
        InventQty     _inventQty  = 0)
    {
        KanbanRulesConnectedUpStreamSemi  kanbanRulesConnectedUpStreamSemi = KanbanRulesConnectedUpStreamSemi::construct();

        kanbanRulesConnectedUpStreamSemi.parmKanbanRuleRoot(_kanbanRuleRoot);
        kanbanRulesConnectedUpStreamSemi.parmItemId(_itemId);
        kanbanRulesConnectedUpStreamSemi.parmInventDimId(_inventDimId);
        kanbanRulesConnectedUpStreamSemi.parmDateTimeFrom(_dateTimeFrom);
        kanbanRulesConnectedUpStreamSemi.parmDateTimeTo(_dateTimeTo);
        kanbanRulesConnectedUpStreamSemi.parmInventQty(_inventQty);

        return kanbanRulesConnectedUpStreamSemi;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>