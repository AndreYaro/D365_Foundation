<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSLoadBuildSessionService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TMSLoadBuildProposalPurgeService</c> class provides the stateless service operations for the
/// <c>TMSLoadBuildSession</c> table.
/// </summary>
class TMSLoadBuildSessionService
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>purgeSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves matching records in <c>TMSLoadBuildSession</c> based on user query and deletes all related records in Load Proposal tables
    /// </summary>
    /// <param name="_dataContract">
    /// An instance of <c>TMSLoadBuildSessionDataContract</c> class.
    /// </param>
    public void purgeSession(TMSLoadBuildSessionDataContract _dataContract)
    {
        //Decode the container from the string until query is supported as a data contract
        container                       queryContainer = SysOperationHelper::base64Decode(_dataContract.parmLoadBuildSessionQuery());
        QueryRun                        queryRun;
        TMSLoadBuildSession             loadBuildSessionFromQuery;

        if (!queryContainer)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        queryRun = new QueryRun(new Query(queryContainer));

        while (queryRun.next())
        {
            loadBuildSessionFromQuery = queryRun.get(tableNum(TMSLoadBuildSession));
            TMSLoadBuildSession::cleanUpSession(loadBuildSessionFromQuery.RecId);
        }
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
