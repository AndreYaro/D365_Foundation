<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleVendPaymentReqTax</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::Tax),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::TaxNonRecoverable),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::TaxVariance),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::TaxNonRecoverableVariance),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::TaxDeferred_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::TaxDeferredVariance_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::Incentiveschemetax_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::ServiceTaxInterimAmount_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::ServiceTaxInterimAmountVariance_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::ServiceTaxNonRecoverable_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::ServiceTaxNonRecoverableVariance_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::ServiceTaxExpense_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::ServiceTaxExpenseVariance_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::ServiceTaxInterimExpense_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPaymentRequestForExpensedProducts, MonetaryAmount::ServiceTaxInterimExpenseVariance_IN),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPrepaymentApplication, MonetaryAmount::Tax),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPrepaymentApplication, MonetaryAmount::TaxNonRecoverable),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPrepaymentReverseApplication, MonetaryAmount::Tax),
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_VendorInvoice), BusinessEvent_VendorInvoice::VendorPrepaymentReverseApplication, MonetaryAmount::TaxNonRecoverable)
]
public class AccDistRuleVendPaymentReqTax extends AccDistRuleProductTax
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getHistoricalExchangeRateDate</Name>
				<Source><![CDATA[
    public HistoricalExchangeRateDate getHistoricalExchangeRateDate()
    {
        AssetBook assetBook;
        AssetGroupId assetGroupId;
        TransDate exchangeRateDate;
        boolean isFixedAssetAccount;
        VendorInvoiceLineSourceDocLineItem vendorInvoiceLineSourceDocLineItem;
        SourceDocumentLineItem sourceDocumentLineItemLocal;
        SourceDocumentLineItem parentSourceDocumentLineItem;

        sourceDocumentLineItemLocal = this.parmSourceDocumentLineItem();
        parentSourceDocumentLineItem = sourceDocumentLineItemLocal.parmParentSourceDocumentLineItem();

        if (parentSourceDocumentLineItem is VendorInvoiceLineSourceDocLineItem)
        {
            vendorInvoiceLineSourceDocLineItem = parentSourceDocumentLineItem as VendorInvoiceLineSourceDocLineItem;
        }

        if (vendorInvoiceLineSourceDocLineItem)
        {
            assetBook = AssetBook::find(VendorInvoiceLineSourceDocLineItem.parmAssetId(),VendorInvoiceLineSourceDocLineItem.parmValueModel());
            assetGroupId = VendorInvoiceLineSourceDocLineItem.parmAssetGroupId();
            // If the line contains an asset, then capture the acquisition date of the asset.
            if (assetBook || assetGroupId)
            {
                isFixedAssetAccount = AssetLedgerAccounts::isFixedAssetAccount(
                    assetBook,
                    assetGroupId,
                    this.parmAccountingdistribution().LedgerDimension,
                    AssetTransType::Acquisition,
                    assetBook.currentOperationsTax());
                if (isFixedAssetAccount)
                {
                    exchangeRateDate = assetBook.exchangeRateDate();
                    if (!exchangeRateDate)
                    {
                        exchangeRateDate = VendorInvoiceLineSourceDocLineItem.parmAccountingDate();
                    }
                }
            }
        }

        return exchangeRateDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        DebitCredit debitCredit = DebitCredit::Debit;

        if (accountingDistribution.TransactionCurrencyAmount < 0)
        {
            debitCredit = DebitCredit::Credit;
        }

        return debitCredit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>