<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTransType_RCash</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerJournalTransType_RCash</c> class provides the RCash account type
/// defaulting and validation.
/// </summary>
public class LedgerJournalTransType_RCash extends LedgerJournalTransType
{
    RCashTable rCashTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultDefaultDimension</Name>
				<Source><![CDATA[
    protected void defaultDefaultDimension()
    {
        // don't default for RCash
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultOffsetDefaultDimension</Name>
				<Source><![CDATA[
    protected void defaultOffsetDefaultDimension()
    {
        // don't default for RCash
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultTaxGroup</Name>
				<Source><![CDATA[
    protected void defaultTaxGroup()
    {
        // don't default for RCash
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultTaxItemGroup</Name>
				<Source><![CDATA[
    protected void defaultTaxItemGroup()
    {
        // don't default for RCash
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineDefaultCurrencyCode</Name>
				<Source><![CDATA[
    protected CurrencyCode determineDefaultCurrencyCode()
    {
        CurrencyCode currencyCode;

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::RCash && ledgerJournalTrans.parmLedgerDimension())
        {
            this.initializeRCashTable();
            // get CurrencyCode from the account first
            currencyCode = rCashTable.CurrencyCode;
        }

        // if still not defaulted, use fallback
        if (currencyCode == '')
        {
            currencyCode = super();
        }

        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeRCashTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the RCashTable record for a ledger journal transaction.
    /// </summary>
    protected void initializeRCashTable()
    {
        if (ledgerJournalTrans.parmLedgerDimension())
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::RCash)
            {
                if (rCashTable.AccountNum != ledgerJournalTrans.parmAccount())
                {
                    this.defaultCompany();
                    this.validateCompany();
                    rCashTable = ledgerJournalTrans.rCashTable();
                }
            }
            else
            {
                rCashTable.clear();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>LedgerJournalTransType_RCash</c> class.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// An instance of the <c>LedgerJournalTrans</c> table that is defaulted and validated.
    /// </param>
    /// <param name="_operation">
    /// A <c>LedgerJournalOperation</c> enumeration value that indicates the callers operation.
    /// </param>
    /// <param name="_isInteractiveContext">
    /// A Boolean value that indicates the caller context.
    /// </param>
    protected void new(LedgerJournalTrans _ledgerJournalTrans, LedgerJournalOperation _operation, boolean _isInteractiveContext)
    {
        ledgerJournalTrans = _ledgerJournalTrans;
        operation = _operation;
        isInteractiveContext = _isInteractiveContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLedgerDimension</Name>
				<Source><![CDATA[
    protected boolean validateLedgerDimension(boolean _logFault = true)
    {
        boolean isValid = true;

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::RCash && ledgerJournalTrans.parmLedgerDimension())
        {
            this.initializeRCashTable();
            if (!rCashTable)
            {
                isValid = false;

                if (_logFault)
                {
                    checkFailed(strfmt("@SYS27061", ledgerJournalTrans.parmAccount()));
                }
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an initialized instance of the <c>LedgerJournalTransType_RCash</c> class.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// An instance of the <c>LedgerJournalTrans</c> table that represents the data that is applied and
    /// validated.
    /// </param>
    /// <param name="_operation">
    /// A <c>LedgerJournalOperation</c> enumeration value that indicates the callers operation.
    /// </param>
    /// <param name="_isInteractiveContext">
    /// A Boolean value that indicates the caller context.
    /// </param>
    /// <returns>
    /// A <c>LedgerJournalTableType_RCash</c> instance.
    /// </returns>
    public static LedgerJournalTransType_RCash construct(LedgerJournalTrans _ledgerJournalTrans, LedgerJournalOperation _operation, boolean _isInteractiveContext)
    {
        return new LedgerJournalTransType_RCash(_ledgerJournalTrans, _operation, _isInteractiveContext);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>