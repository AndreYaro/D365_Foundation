<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashBookContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CashBookContract</c> class is the data contract class for the <c>CashBook_LV</c> and
/// <c>CashBook_LT</c> reports.
/// </summary>
[
    DataContractAttribute,
    SysOperationGroupAttribute('PettyCash', "@GLS100666", "1"),
    SysOperationGroupAttribute('DateInterval', "@SYS22526", "2"),
    SysOperationGroupAttribute('CurrencyCode', "@SYS7572", "3")
]
public class CashBookContract implements SysOperationValidatable
{
    FromDate                fromDate;
    ToDate                  toDate;
    RCashAccount            cashAccount;
    NoYes                   newDayOnNewPage;
    CurrencyCode            currencyCode;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmCashAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter CashAccount.
    /// </summary>
    /// <param name="_cashAccount">
    /// The new value of the data contract parameter CashAccount; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter CashAccount.
    /// </returns>
    [
        DataMemberAttribute(identifierStr(CashAccount)),
        SysOperationGroupMemberAttribute('PettyCash')
    ]
    public RCashAccount parmCashAccount(RCashAccount  _cashAccount = cashAccount)
    {
        cashAccount = _cashAccount;
        return cashAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter CurrencyCode.
    /// </summary>
    /// <param name="_cashAccount">
    /// The new value of the data contract parameter CurrencyCode; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter CurrencyCode.
    /// </returns>
    [
        DataMemberAttribute(identifierStr(CurrencyCode)),
        SysOperationGroupMemberAttribute('CurrencyCode')
    ]
    public CurrencyCode parmCurrencyCode(CurrencyCode _currencyCode = currencyCode)
    {
        currencyCode = _currencyCode;
        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter FromDate.
    /// </summary>
    /// <param name="_cashAccount">
    /// The new value of the data contract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter FromDate.
    /// </returns>
    [
        DataMemberAttribute(identifierStr(FromDate)),
        SysOperationGroupMemberAttribute('DateInterval'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewDayOnNewPage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter NewDayOnNewPage.
    /// </summary>
    /// <param name="_cashAccount">
    /// The new value of the data contract parameter NewDayOnNewPage; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter NewDayOnNewPage.
    /// </returns>
    [
        DataMemberAttribute(identifierStr(NewDayOnNewPage)),
        SysOperationLabelAttribute(literalStr("@GLS108504")),
        SysOperationGroupMemberAttribute('DateInterval'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public boolean parmNewDayOnNewPage(boolean _newDayOnNewPage = newDayOnNewPage)
    {
        newDayOnNewPage = _newDayOnNewPage;
        return newDayOnNewPage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the data contract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter ToDate.
    /// </returns>
    [
        DataMemberAttribute(identifierStr(ToDate)),
        SysOperationGroupMemberAttribute('DateInterval'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the values entered by the user in the dialog fields.
    /// </summary>
    /// <returns>
    /// true if the values are valid; false, otherwise.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (! cashAccount)
        {
            ret = checkFailed("@GLS108763");
        }

        if (!currencyCode)
        {
            ret = checkFailed("@SYS23229");
        }

        if (!fromDate || !toDate)
        {
            ret = checkFailed("@SYS71110");
        }
        else if (fromDate > toDate)
        {
            ret = checkFailed("@SYS120590");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>