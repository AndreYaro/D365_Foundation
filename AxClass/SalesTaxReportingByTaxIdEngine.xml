<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTaxReportingByTaxIdEngine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>SalesTaxReportingByTaxIdEngine</c> class prompts the user for inputs for company reports by Tax ID
///    and invokes the country specific report using the Tax regitration number.
/// </summary>
class SalesTaxReportingByTaxIdEngine extends RunBaseBatch implements BatchRetryable
{
    Args args;

    TaxRegistrationNumber taxID;
    TaxRegistration taxRegistration;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the SysOperationFramework classes VATDeclaration..._W to produce an ER file.
    /// </summary>
	public void run()
    {
        #OCCRetryCount
        args.parmObject(args.caller());
        args.caller(this);

        new MenuFunction(menuitemoutputstr(TaxReportByCompanyId), MenuItemType::Output).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        #OCCRetryCount
        SalesTaxReportingByTaxIdEngine salesTaxReportingByTaxIdEngine = new SalesTaxReportingByTaxIdEngine();

        salesTaxReportingByTaxIdEngine.parmArgs(Args::createFromArgs(_args)); // this conversion is required, because when run through MenuItem we got xArgs object in main() method
        salesTaxReportingByTaxIdEngine.parmArgs(_args);

        try
            {
                salesTaxReportingByTaxIdEngine.runOperation();
            }
            catch (Exception::Deadlock)
            {
                retry;
            }
            catch (Exception::UpdateConflict)
            {
                if (appl.ttsLevel() == 0)
                {
                    if (xSession::currentRetryCount() >= #RetryNum)
                    {
                        throw Exception::UpdateConflictNotRecovered;
                    }
                    else
                    {
                        retry;
                    }
                }
                else
                {
                    throw Exception::UpdateConflict;
                }
            }

            catch (Exception::Error)
            {
                throw error("@SYS93835");
            }
  		
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArgs</Name>
				<Source><![CDATA[
    public Args parmArgs(Args _args = args)
    {
        args = _args;
        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>