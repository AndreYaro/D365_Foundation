<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetLineToForecastMapperUtil</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.AliasedValue;

internal final class ProjBudgetLineToForecastMapperUtil
{
    private const str NON_CHARGEABLE = "NoCharge";
    private const str CHARGEABLE = "Chargeable";
    private const str COMPLIMENTARY = "Complim";
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>convertBillingTypeToLineProperty</Name>
				<Source><![CDATA[
    public static ProjLinePropertyId convertBillingTypeToLineProperty(OptionSetValue billingType)
    {
        ProjLinePropertyId linePropertyId;
        ProjLineProperty projLineProperty;
        int billingTypeValue = billingType ? billingType.Value : 0;
        switch (billingTypeValue)
        {
            case ProjBudgetDataverseConstants::NON_CHARGEBLE:
                linePropertyId = NON_CHARGEABLE;
                break;
            case ProjBudgetDataverseConstants::CHARGEABLE:
                linePropertyId = CHARGEABLE;
                break;
            case ProjBudgetDataverseConstants::COMPLIMENTARY:
                linePropertyId = COMPLIMENTARY;
                break;
            case ProjBudgetDataverseConstants::NOT_AVAILABLE:
                break;
        }

        return ProjLineProperty::find(linePropertyId) ? linePropertyId : '';

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetLineItem</Name>
				<Source><![CDATA[
    public static AliasedValue getBudgetLineItem(AttributeCollection _attributes, str _path)
    {
        return ProjBudgetLineToForecastMapperUtil::getItem(_attributes, _path, ProjBudgetDataverseConstants::BUDGETLINE_ENTITY);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItem</Name>
				<Source><![CDATA[
    public static AliasedValue getItem(AttributeCollection _attributes, str _fieldName, str _entityName)
    {
        str newPath = ProjBudgetLineToForecastMapperUtil::prefixEntityName(_fieldName, _entityName);
        AliasedValue value = _attributes.ContainsKey(newPath) ? _attributes.get_Item(newPath) : null;
        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prefixEntityName</Name>
				<Source><![CDATA[
    private static str prefixEntityName(str _path, str _entityName)
    {
        str newPath = _entityName + '.' + _path;
        return newPath;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>