<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjJournalTransMapForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjJournalTransMapForm
{
    ProjJournalTransMap projJournalTransMap;
    Common              childBuffer;

    JournalFormTrans    journalFormTrans;
    ProjSalesPriceCost  salesPrice;
    boolean             priceFound;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activityNumberFieldId</Name>
				<Source><![CDATA[
    protected FieldId activityNumberFieldId()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>canValidate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the current record should be checked for Category Ids
    /// </summary>
    /// <returns>
    /// true if record should be checked; false otherwise
    /// </returns>
    protected boolean canValidate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkActivity</Name>
				<Source><![CDATA[
    private boolean checkActivity()
    {
        boolean ret = true;

        if (projJournalTransMap.ActivityNumber)
        {
            ret = ProjActivityHelper::validateProjActivityParentLinkV2(projJournalTransMap.ProjId, projJournalTransMap.ActivityNumber);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCategoryAllowed</Name>
				<Source><![CDATA[
    public boolean checkCategoryAllowed()
    {
        boolean ret = true;

        if (projJournalTransMap.ActivityNumber && this.getProjCategoryIdField())
        {
            if (ProjActivity::find(projJournalTransMap.ActivityNumber).Mandatory &&
                    ProjCategory::find(ProjActivity::find(projJournalTransMap.ActivityNumber).CategoryDefault).CategoryType == ProjCategoryType::Hour)
            {
                if (this.getProjCategoryIdField() != (ProjActivity::find(projJournalTransMap.ActivityNumber).CategoryDefault))
                {
                    ret = checkFailed("@SYS81827");
                }

                this.setProjCategoryIdField(ProjActivity::find(projJournalTransMap.ActivityNumber).CategoryDefault);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProjCategoryIdField</Name>
				<Source><![CDATA[
    public boolean checkProjCategoryIdField()
    {
        ProjCategory        projCategory;
        boolean             ret = true;

        if (this.getProjCategoryIdField())
        {
            projCategory = ProjCategory::find(this.getProjCategoryIdField());

            ret = projCategory.validateIfInactiveAllowed();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProjId</Name>
				<Source><![CDATA[
    public boolean checkProjId()
    {
        if (projJournalTransMap.ProjId)
        {
            return ProjTable::find(projJournalTransMap.ProjId).checkActiveInTree();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkReqActivity</Name>
				<Source><![CDATA[
    private boolean checkReqActivity()
    {
        RequireActivity             requireActivity;
        boolean                     ret = true;

        requireActivity = ProjTable::checkRequireActivity(projJournalTransMap.ProjId,tableNum(ProjEmplTrans));
        if (requireActivity && (!projJournalTransMap.ActivityNumber))
        {
            ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkResource</Name>
				<Source><![CDATA[
    public boolean checkResource(boolean _suppressInfolog = false)
    {
        boolean ret = true;
        ProjWorkerRecId worker;

        ResourceRecId resource = this.getResourceField();

        if (resource)
        {
            worker = ResourceFacade::getWorker(resource);

            if (!worker)
            {
                throw Global::error("@Res:ResourceNotWorker");
            }
        }

        if (HcmWorker::find(worker).workerStatus() == HcmWorkerStatus::Terminated && !ProjParameters::find().ShowInactiveEmployees)
        {
            ret = _suppressInfolog ? false : checkFailed("@SYS39651");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkResourceAllowed</Name>
				<Source><![CDATA[
    private boolean checkResourceAllowed()
    {
        ResourceRecId resource;

        resource = this.resource();
        TableId tableId = this.projJournalTransMap.TableId;
        FieldId mappedTableFieldId = SysDictField::findMappedFieldId(tableNum(ProjJournalTransMap), fieldNum(ProjJournalTransMap, Resource), tableId);

        if (!resource && mappedTableFieldId)	// If the underlying table doesn't have a field that is mapped to the Resource field in the map, then don't show an error since the Resource field is going to be null.
        {
            return checkFailed("@Res:WorkerNotAssociatedWithResource");
        }

        if (resource)
        {
            return ProjJournalTrans::checkCategoryResourceOption(this.getProjCategoryIdField(),resource);
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedActivityNumberPost</Name>
				<Source><![CDATA[
	public void fieldModifiedActivityNumberPost()
    {
        this.initFromProjActivity(ProjActivity::find(projJournalTransMap.ActivityNumber));
        this.fieldModifiedCategoryIdPost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedCategoryIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedCategoryIdPost()
    {
        projJournalTransMap.ProjTaxItemGroupId = ProjCategory::find(this.getProjCategoryIdField()).TaxItemGroupId;
        this.setLineProperty();

        this.checkCategoryAllowed();

        this.setHourCostPrice();
        this.setHourSalesPrice();

        this.manageZeroSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedCostPricePost</Name>
				<Source><![CDATA[
    public void fieldModifiedCostPricePost()
    {
        this.setHourSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedCurrencyPost</Name>
				<Source><![CDATA[
    public void fieldModifiedCurrencyPost()
    {
        // Do not update the Cost Price, recalculate the Sales Price
        this.setHourSalesPrice();

        this.manageZeroSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedLinePropertyIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedLinePropertyIdPost()
    {
        this.setHourCostPrice();
        this.setHourSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedProjIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedProjIdPost()
    {
        this.setCurrencyId();
        this.setHourCostPrice();
        this.setHourSalesPrice();
        this.setTaxGroupId();
        this.setDimension();
        this.setLineProperty();

        this.manageZeroSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedProjTransDatePost</Name>
				<Source><![CDATA[
    public void fieldModifiedProjTransDatePost()
    {
        this.setTransDate();
        this.setPeriodDate();

        if (journalFormTrans)
        {
            this.fieldModifiedTransDatePost();
        }

        this.setHourCostPrice();
        this.setHourSalesPrice();

        this.manageZeroSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedQtyPost</Name>
				<Source><![CDATA[
    public void fieldModifiedQtyPost()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedResourcePost</Name>
				<Source><![CDATA[
    public void fieldModifiedResourcePost()
    {
        this.setHourSalesPrice();
        this.setHourCostPrice();

        this.manageZeroSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedResourcePre</Name>
				<Source><![CDATA[
    public void fieldModifiedResourcePre()
    {
        // Call before super as it may change the Trans Date used to determine Voucher values.
        this.initFromResource();
        this.setTransDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedTransDatePost</Name>
				<Source><![CDATA[
    public void fieldModifiedTransDatePost()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedTxtPre</Name>
				<Source><![CDATA[
    public void fieldModifiedTxtPre()
    {
        ProjJournalTxt journalTxt;

        journalTxt = ProjJournalTxt::findTxt(projJournalTransMap.Txt);

        if (journalTxt.Txt)
        {
            projJournalTransMap.Txt = journalTxt.Txt;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldValidateTxt</Name>
				<Source><![CDATA[
    public boolean fieldValidateTxt()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjCategoryIdField</Name>
				<Source><![CDATA[
    protected ProjCategoryId getProjCategoryIdField()
    {
        return projJournalTransMap.ProjCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjCostPriceField</Name>
				<Source><![CDATA[
    protected ProjCostPriceCost getProjCostPriceField()
    {
        return projJournalTransMap.ProjCostPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResourceField</Name>
				<Source><![CDATA[
    protected ResourceRecId getResourceField()
    {
        return (projJournalTransMap && projJournalTransMap.Resource) ? projJournalTransMap.Resource : 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProdRouteTrans</Name>
				<Source><![CDATA[
    void initFromProdRouteTrans(ProdRouteTrans prodRouteTrans)
    {
        projJournalTransMap.ProjId                 = prodRouteTrans.ProjId;
        this.setProjCategoryIdField(prodRouteTrans.CategoryId);
        projJournalTransMap.ActivityNumber         = prodRouteTrans.ActivityNumber;
        projJournalTransMap.ProjLinePropertyId     = prodRouteTrans.ProjLinePropertyId;
        projJournalTransMap.ProjSalesPrice         = prodRouteTrans.ProjSalesPrice;
        projJournalTransMap.ProjSalesCurrencyId    = prodRouteTrans.ProjSalesCurrencyId;
        projJournalTransMap.ProjTaxGroupId         = prodRouteTrans.ProjTaxGroupId;
        projJournalTransMap.ProjTaxItemGroupId     = prodRouteTrans.ProjTaxItemGroupId;
        this.setDimensionField(prodRouteTrans.DefaultDimension);
        this.setProjCostPriceField(prodRouteTrans.TransType == ProdRouteTransType::Time ? prodRouteTrans.HourPrice : prodRouteTrans.QtyPrice);
        projJournalTransMap.Txt                    = prodRouteTrans.Txt;
        
        ResourceRecId resource = this.resource();

        if (resource)
        {
            FieldId mappedTableFieldId = SysDictField::findMappedFieldId(tableNum(ProjJournalTransMap), fieldNum(ProjJournalTransMap, Resource), this.projJournalTransMap.TableId);
            // If underlying table have a field that is mapped to the resource field in the map, then set resource field otherwise do not set resource field.
            if (mappedTableFieldId)
            {
                this.setResourceField(ResourceFacade::findByWorker(prodRouteTrans.Worker));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjActivity</Name>
				<Source><![CDATA[
    void initFromProjActivity(ProjActivity _projActivity)
    {
        if (!_projActivity || !_projActivity.CategoryDefault ||
                ProjCategory::find(_projActivity.CategoryDefault).CategoryType != ProjCategoryType::Hour)
        {
            return;
        }

        this.setProjCategoryIdField(_projActivity.CategoryDefault);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjTable</Name>
				<Source><![CDATA[
    public void initFromProjTable(ProjTable projTable)
    {
        ProjInvoiceTable    projInvoiceTable = projTable.projInvoice();

        if (projInvoiceTable.CurrencyId)
        {
            projJournalTransMap.ProjSalesCurrencyId = projInvoiceTable.CurrencyId;
        }
        else
        {
            projJournalTransMap.ProjSalesCurrencyId = CompanyInfoHelper::standardCurrency();
        }

        this.setDimensionField(projTable.DefaultDimension);
        projJournalTransMap.ProjTaxGroupId = ProjParameters::taxGroupInvoice(projJournalTransMap.ProjId);

        if (! ProjValProjCategorySetUp::checkProjCategory(projJournalTransMap.ProjId,this.getProjCategoryIdField()))
        {
            this.setProjCategoryIdField('');
        }

        this.setLineProperty();

        if (this.canSetHourPricesAndPeriodDate())
        {
            if (this.resource())
            {
                this.setHourCostPrice();
                this.setHourSalesPrice();
                this.setPeriodDate();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSetHourPricesAndPeriodDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Verifies whether the hour prices and period date can be set.
    /// </summary>
    /// <returns>
    ///     true if the hour prices and period date can be set, otherwise, false.
    /// </returns>
    protected boolean canSetHourPricesAndPeriodDate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromResource</Name>
				<Source><![CDATA[
    void initFromResource()
    {
        this.setHourCostPrice();
        this.setHourSalesPrice();
        this.setResourceChanged();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProdJournalRouteProj</Name>
				<Source><![CDATA[
    void initProdJournalRouteProj(ProdRouteTransType   type)
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProdRouteProj</Name>
				<Source><![CDATA[
    void initProdRouteProj(ItemCalcType _itemCalcType)
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPost</Name>
				<Source><![CDATA[
    void insertPost()
    {
        if (projJournalTransMap.ProjId)
        {
            projJournalTransMap.ProjTransId = ProjParameters::newTransId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>manageZeroSalesPrice</Name>
				<Source><![CDATA[
    void manageZeroSalesPrice()
    {
        /* If no combination found for the given category in cost price hour Table then the previous sales price is restored*/
        if (!priceFound && this.parmSalesPrice())
        {
            projJournalTransMap.ProjSalesPrice = this.parmSalesPrice();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSetCostPrice</Name>
				<Source><![CDATA[
    protected boolean mustSetCostPrice()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustValidateReqActivity</Name>
				<Source><![CDATA[
    protected boolean mustValidateReqActivity()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(ProjJournalTransMap _projJournalTransMap, Common _childBuffer = null)
    {
        projJournalTransMap  = _projJournalTransMap;
        childBuffer = _childBuffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChildBuffer</Name>
				<Source><![CDATA[
    public void parmChildBuffer(Common _childBuffer)
    {
        childBuffer = _childBuffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalFormTrans</Name>
				<Source><![CDATA[
    public JournalFormTrans parmJournalFormTrans(JournalFormTrans _journalFormTrans = journalFormTrans)
    {
        journalFormTrans = _journalFormTrans;
        return journalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjJournalTransMap</Name>
				<Source><![CDATA[
    public void parmProjJournalTransMap(ProjJournalTransMap _projJournalTransMap)
    {
        projJournalTransMap = _projJournalTransMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPrice</Name>
				<Source><![CDATA[
    public ProjSalesPriceCost parmSalesPrice(ProjSalesPriceCost _salesPrice = salesPrice)
    {
        salesPrice = _salesPrice;
        return salesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resource</Name>
				<Source><![CDATA[
    protected ResourceRecId resource()
    {
        return this.getResourceField();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyId</Name>
				<Source><![CDATA[
    public void setCurrencyId()
    {
        if (ProjInvoiceTable::find(ProjTable::find(projJournalTransMap.ProjId).ProjInvoiceProjId).CurrencyId)
        {
            projJournalTransMap.ProjSalesCurrencyId = ProjInvoiceTable::find(ProjTable::find(projJournalTransMap.ProjId).ProjInvoiceProjId).CurrencyId;
        }
        else
        {
            projJournalTransMap.ProjSalesCurrencyId = Ledger::accountingCurrency(CompanyInfo::findDataArea(curext()).RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimension</Name>
				<Source><![CDATA[
    public void setDimension()
    {
        this.setDimensionField(ProjTable::find(projJournalTransMap.ProjId).DefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionField</Name>
				<Source><![CDATA[
    protected void setDimensionField(DimensionDefault _defaultdimension)
    {
        projJournalTransMap.DefaultDimension = _defaultdimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHourCostPrice</Name>
				<Source><![CDATA[
    public void setHourCostPrice()
    {
        if (this.mustSetCostPrice())
        {
            ProjPriceParameters priceParams = ProjHourCostPrice::constructPriceParametersForFindCostPrice(
                projJournalTransMap.ProjId,
                this.resource(),
                this.getProjCategoryIdField(),
                projJournalTransMap.ProjLinePropertyId,
                projJournalTransMap.ProjTransDate);

            this.setProjCostPriceField(ProjHourCostPrice::findCostPriceByPriceParameters(priceParams));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHourSalesPrice</Name>
				<Source><![CDATA[
    public void setHourSalesPrice()
    {
        ProjPriceParameters priceParams = ProjHourSalesPrice::constructPriceParametersForFindHourSalesPrice(
            projJournalTransMap.ProjId,
            this.resource(),
            this.getProjCategoryIdField(),
            projJournalTransMap.ProjLinePropertyId,
            this.getProjCostPriceField(),
            projJournalTransMap.ProjSalesCurrencyId,
            projJournalTransMap.ProjTransDate);

        [projJournalTransMap.ProjSalesPrice, priceFound] = ProjHourSalesPrice::findHourSalesPriceByPriceParameters(priceParams);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineProperty</Name>
				<Source><![CDATA[
    public void setLineProperty()
    {
        if (!projJournalTransMap.ProjLinePropertyId /*|| (projJournalTransMap.ProjLinePropertyId && projJournalTransMap.ProjLinePropertyId != ProdJournalTable::find(projJournalTransMap.JournalId).ProjLinePropertyId)*/)
        {
            projJournalTransMap.ProjLinePropertyId = ProjLinePropertySetup::findLinePropertyId(projJournalTransMap.ProjId, this.getProjCategoryIdField());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPeriodDate</Name>
				<Source><![CDATA[
    public void setPeriodDate()
    {
        PeriodRecId period;

        if (this.resource())
        {
            period = ResourceFacade::getPeriod(this.resource());
            if (period)
            {
                projJournalTransMap.PeriodDate = PeriodFacade::startDate(period, projJournalTransMap.ProjTransDate);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjCategoryIdField</Name>
				<Source><![CDATA[
    protected void setProjCategoryIdField(ProjCategoryId _projCategoryId)
    {
        projJournalTransMap.ProjCategoryId = _projCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjCostPriceField</Name>
				<Source><![CDATA[
    protected void setProjCostPriceField(ProjCostPriceCost _projCostPrice)
    {
        projJournalTransMap.ProjCostPrice = _projCostPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResourceChanged</Name>
				<Source><![CDATA[
    public void setResourceChanged()
    {
        ResourceRecId resource;

        resource = this.resource();

        if (! ProjValEmplProjSetup::checkResourceProj(resource, projJournalTransMap.ProjId))
        {
            projJournalTransMap.ProjId = '';
        }

        if (! ProjValEmplCategorySetUp::checkResourceCategory(resource, this.getProjCategoryIdField()))
        {
            this.setProjCategoryIdField('');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxGroupId</Name>
				<Source><![CDATA[
    public void setTaxGroupId()
    {
        projJournalTransMap.ProjTaxGroupId = ProjParameters::taxGroupInvoice(projJournalTransMap.ProjId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransDate</Name>
				<Source><![CDATA[
    public void setTransDate()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransDateField</Name>
				<Source><![CDATA[
    protected void setTransDateField(TransDate _transDate)
    {
        projJournalTransMap.TransDate = _transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResourceField</Name>
				<Source><![CDATA[
    protected void setResourceField(ResourceRecId _resourceRecId)
    {
        projJournalTransMap.Resource = _resourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldPost</Name>
				<Source><![CDATA[
    public boolean validateFieldPost(FieldId _fieldIdToCheck)
    {
        boolean     ret = true;

        switch (_fieldIdToCheck)
        {
            case this.activityNumberFieldId():
                ret = this.checkActivity() && ret;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWritePost</Name>
				<Source><![CDATA[
    boolean validateWritePost()
    {
        boolean ret = true;
        ProjValCheckTrans   projValCheckTrans;

        if (this.canValidate() && projJournalTransMap.ProjId)
        {
            if (!this.getProjCategoryIdField())
            {
                ret = checkFailed("@SYS76856") && ret;
            }

            if (!projJournalTransMap.ProjLinePropertyId)
            {
                ret = checkFailed("@SYS76857") && ret;
            }

            if (!projJournalTransMap.ProjSalesCurrencyId)
            {
                ret = checkFailed("@SYS76866") && ret;
            }

            ret = this.checkProjId() && this.checkProjCategoryIdField() && this.checkResource() && ret;

            ret = this.checkResourceAllowed() && ret;

            ret = this.checkActivity() && ret;

            if (this.mustValidateReqActivity() && ! this.checkReqActivity())
            {
                ret = checkFailed("@SYS104469") && ret;
            }

            projValCheckTrans = new ProjValCheckTrans();
            ret = projValCheckTrans.validateMandatory(projJournalTransMap) && ret;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjJournalTransMapForm construct(ProjJournalTransMap _projJournalTransMap, Common _childBuffer)
    {
        ProjJournalTransMapForm   projJournalTransMapForm;

        switch (_projJournalTransMap.TableId)
        {
            case tableNum(ProdRouteProj):
                if (_childBuffer.TableId == tableNum(ProdRoute))
                {
                    projJournalTransMapForm = new ProjJournalTransMapForm_ProdRoute(_projJournalTransMap, _childBuffer);
                }
                else
                {
                    throw error("@SYS18626");
                }
                break;
            case tableNum(ProdJournalRouteProj):
                if (_childBuffer.TableId == tableNum(ProdJournalRoute))
                {
                    projJournalTransMapForm = new ProjJourTransMapForm_ProdJourRoute(_projJournalTransMap, _childBuffer);
                }
                else
                {
                    throw error("@SYS18626");
                }
                break;
            default:
                throw error("@SYS18626");
        }

        return projJournalTransMapForm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>