<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostManagementInstrumentationInventoryCancellationDeletionActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostManagementInstrumentationInventoryClosingCalculateActivities</c> class provides activities for inventory closing calculate for cost management instrumentation logging.
/// </summary>
internal final class CostManagementInstrumentationInventoryCancellationDeletionActivities
{
    private const str ActivityNamePrefix = 'InventCostClosingCancel.End.';
    private const str DeleteVirtualTransfersMethodName = "deleteVirtualTransfers";

    private CostManagementInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(CostManagementInstrumentationLogger _instrumentationLogger)
    {
        instrumentationLogger = _instrumentationLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static CostManagementInstrumentationInventoryCancellationDeletionActivities newFromLogger(CostManagementInstrumentationLogger _instrumentationLogger)
    {
        return new CostManagementInstrumentationInventoryCancellationDeletionActivities(_instrumentationLogger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteVirtualTransfers</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext deleteVirtualTransfers(InventClosing _cancelClosing)
    {
        SysInstrumentationActivity activity = instrumentationLogger.activity(ActivityNamePrefix + DeleteVirtualTransfersMethodName);
        SysInstrumentationActivityContext activityContext = instrumentationLogger.activityContext(activity);

        activityContext.addCustomProperty(ActivityNamePrefix + "Voucher", _cancelClosing.Voucher);

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>