<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCatalogPublishSchedulerJob</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailCatalogPublishSchedulerJob</c> class is a dialog class
/// used to schedule retail catalog publishing job.
/// </summary>
class RetailCatalogPublishSchedulerJob extends RunBaseBatch implements BatchRetryable
{
    int64   catalogId;
    RetailCatalogPublishingType publishType;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        catalogId,
        publishType
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLast</Name>
				<Source><![CDATA[
    public void getLast()
    {
        // override so we preserve theinput parameters and not retrieve the last ones.
		//   super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes the current instance of the <c>RetailCatalogPublishSchedulerJob</c> class.
    /// </summary>
    /// <returns>A container that contains the current instance of <c>RetailCatalogPublishSchedulerJob</c>.</returns>
    public container pack()
    {
        container ret;

        ret = [#CurrentVersion,#CurrentList];

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCatalogId</Name>
				<Source><![CDATA[
    public CatalogRefRecId parmCatalogId(CatalogRefRecId _catalogId = catalogId)
    {
        catalogId = _catalogId;

        return catalogId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCatalogPublishingType</Name>
				<Source><![CDATA[
    public RetailCatalogPublishingType parmCatalogPublishingType(RetailCatalogPublishingType _publishType = publishType)
    {
        publishType = _publishType;

        return publishType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the implementation of the class.
    /// </summary>
    public void run()
    {
        #OCCRetryCount

        CatalogManager catalogManager = CatalogManager::construct(catalogId);
        catalogManager.parmIgnoreWarnings(true);

        catalogManager.publishCatalog(publishType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deserializes the <paramref name="_packedClass"/> parameter to the current instance of <c>RetailCatalogPublishSchedulerJob</c>.
    /// </summary>
    /// <param name = "packedClass">The container from which to deserialize the instance.</param>
    /// <returns>true if deserialization was successful; otherwise, false.</returns>
    public boolean unpack(container packedClass)
    {
        Version version = RunBase::getVersion(packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = packedClass;
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static RetailCatalogPublishSchedulerJob construct()
    {
        return new RetailCatalogPublishSchedulerJob();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides class description.
    /// </summary>
    /// <returns>The <c>ClassDescription</c>.</returns>
    public static ClassDescription description()
    {
        return "@RET490170";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// The main method which initializes the call for the other methods.
    /// </summary>
    /// <param name="_args">
    /// Retail catalog scheduler job record.
    /// </param>
    /// <param name="_supress_dialog">
    /// Boolean value, which shows suppress dialog state.
    /// </param>
    public static void main(Args _args, boolean _supress_dialog = false)
    {
        RetailCatalogPublishSchedulerJob scheduler = RetailCatalogPublishSchedulerJob::construct();
        Catalog inputCatalog = _args.record();

        scheduler.parmCatalogId(inputCatalog.RecId);

        if (_args.parmEnumType() == enumNum(RetailCatalogPublishingType))
        {
            scheduler.parmCatalogPublishingType(_args.parmEnum());
        }
        else
        {
            //incremental by default
            scheduler.parmCatalogPublishingType(RetailCatalogPublishingType::Incremental);
        }
        if (!_supress_dialog)
        {
            if (scheduler.prompt())
            {
                scheduler.runOperation();
            }
        }
        else
        {
            scheduler.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method returns a value indicating if the <c>RetailCatalogPublishSchedulerJob</c>
    /// class can be run in a new session.
    /// </summary>
    /// <returns>true if the the class <c>RetailCatalogPublishSchedulerJob</c> can
    /// be run in a new session; otherwise, false.</returns>
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>