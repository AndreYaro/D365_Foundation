<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayTimeCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
final public class rPayTimeCopy extends RunBase
{
    RPayTimeId      fromPayTimeId;
    RPayTimeId      toPayTimeId;
    boolean         copyPropertyId;

    DialogField     fieldFromPayTimeId;
    DialogField     fieldToPayTimeId;
    DialogField     fieldcopyPropertyId;
    int             payControlTypeId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
    private void copy()
    {
        RPayTimeTable   payTimeTable,
                        toPayTimeTable;
        RPayTimeLine    payTimeLine;
        WeekDay         lastWeekDay = 0;
        ;
        setPrefix(RPayTimeCopy::description());

        ttsbegin;

        payTimeTable    = RPayTimeTable::find(fromPayTimeId, true);
        toPayTimeTable  = RPayTimeTable::find(toPayTimeId, true);

        if (! toPayTimeTable)
        {
            payTimeTable.PayTimeId     = toPayTimeId;
            payTimeTable.Name          = strFmt("@RUP291", payTimeTable.Name);
            if (! payTimeTable.validateWrite())
            {
                throw error("@RUP283");
            }
            payTimeTable.insert();
        }
        else
        {
            toPayTimeTable.PeriodFrequency = payTimeTable.PeriodFrequency;
            if (payTimeTable.Periodicity > toPayTimeTable.Periodicity)
            {
                toPayTimeTable.Periodicity = payTimeTable.Periodicity;
            }
            toPayTimeTable.update();
        }

        setPrefix(fieldLabelValue(tableNum(RPayTimeLine), fieldNum(RPayTimeLine,PayTimeId), toPayTimeId));

        while select forupdate payTimeLine
            where payTimeLine.PayTimeId   == fromPayTimeId
        {
            if (payTimeLine.Weekday != lastWeekDay)
            {
                setPrefix(fieldLabelValue(tableNum(RPayTimeLine), fieldNum(RPayTimeLine,Weekday), payTimeLine.Weekday));
            }

            setPrefix(strFmt("@RUP278",
                             time2str(payTimeLine.FromTime, -1, -1),
                             time2str(payTimeLine.ToTime, -1, -1)));

            payTimeLine.PayTimeId = toPayTimeId;

            if (! payTimeLine.validateWrite())
            {
                throw error("@RUP283");
            }

            payTimeLine.insert();

            lastWeekDay = payTimeLine.Weekday;
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase   dialog = super();
        ;
        fieldFromPayTimeId = dialog.addField(extendedTypeId2name(payControlTypeId), "@RUP295");
        fieldToPayTimeId   = dialog.addField(extendedTypeId2name(payControlTypeId), "@RUP296");

        fieldFromPayTimeId.value(fromPayTimeId);
        fieldToPayTimeId.value(toPayTimeId);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        fromPayTimeId  = fieldFromPayTimeId.value();
        toPayTimeId    = fieldToPayTimeId.value();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmControlTypeId</Name>
				<Source><![CDATA[
    private int parmControlTypeId(int _id = payControlTypeId)
    {
        payControlTypeId = _id;

        return payControlTypeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromPayTimeId</Name>
				<Source><![CDATA[
    private RPayTimeId parmFromPayTimeId(RPayTimeId _id = fromPayTimeId)
    {
        fromPayTimeId = _id;

        return fromPayTimeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (! this.validate())
        {
            throw error("@RUP283");
        }

        try
        {
            ttsbegin;

            this.copy();

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null)
    {
        if (! fromPayTimeId)
        {
            return checkFailed("@RUP299");
        }

        if (! RPayTimeTable::checkExist(fromPayTimeId))
        {
            return false;
        }

        if (fromPayTimeId == toPayTimeId)
        {
            return checkFailed("@RUP301");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ClassDescription description()
    {
        return "@RUP304";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RPayTimeCopy        copy;
        Object              fr;
        ;
        copy = RPayTimeCopy::newPayTimeForm(_args);

        if (copy.prompt())
        {
            copy.runOperation();
        }
        fr = _args.caller();
        fr.doResearch();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPayTimeForm</Name>
				<Source><![CDATA[
    private static RPayTimeCopy newPayTimeForm(Args _args)
    {
        RPayTimeCopy     copy           = new RPayTimeCopy();
        Object           obj            = _args.caller();
        ;
        copy.parmFromPayTimeId(obj.curPayTimeId());
        copy.parmControlTypeId(obj.curPayTypeId());

        return copy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>