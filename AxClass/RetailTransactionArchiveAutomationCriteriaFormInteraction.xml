<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionArchiveAutomationCriteriaFormInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Holds the interaction on the form <c>RetailTransactionArchiveAutomationCriteriaForm</c>.
/// </summary>
internal final class RetailTransactionArchiveAutomationCriteriaFormInteraction
{
    private RetailTransactionArchiveAutomationCriteriaFormContract formContract;
    private RetailTransactionArchiveAutomationCriteriaIForm uIForm;
    private const str EmptyString = '';
    private RetailTransactionArchiveTrans displayedArchiveRecord;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static RetailTransactionArchiveAutomationCriteriaFormInteraction construct(
        RetailTransactionArchiveAutomationCriteriaIForm _form,
        RetailTransactionArchiveAutomationCriteriaFormContract _formContract)
    {
        RetailTransactionArchiveAutomationCriteriaFormInteraction interaction = new RetailTransactionArchiveAutomationCriteriaFormInteraction();
        interaction.formContract = _formContract;
        interaction.uIForm = _form;
        return interaction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createArchiveJobs</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal ArchiveServiceIProvideManagedJobCreationContracts createArchiveJobs(ArchiveServiceJobName _archiveJobName)
    {
        var proposedRetailTransactionArchiveTrans = this.initRetailTransactionArchiveTransFromContract(_archiveJobName);

        RetailTransactionArchiveAutomationJobRequestCreator jobRequestCreator = new RetailTransactionArchiveAutomationJobRequestCreator();
        var jobPostRequest = jobRequestCreator.createPostJobRequest(proposedRetailTransactionArchiveTrans);
  
        var singleJobContract = ArchiveServiceManagedJobCreationContract::newForSourceLinkToBeCreatedAfterJobCreation(
            RetailTransactionArchiveAutomationConstants::RegisteredTypeName,
            jobPostRequest,
            proposedRetailTransactionArchiveTrans);

        return singleJobContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControls</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void setControls()
    {
        uIForm.retailTransactionArchiveStartDateTimeControl().mandatory(true);
        uIForm.retailTransactionArchiveEndDateTimeControl().mandatory(true);
        uIForm.retailTransactionArchiveDataAreaIdControl().mandatory(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onModifiedRetailTransactionArchiveStartDateTime</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void onModifiedRetailTransactionArchiveStartDateTime()
    {
        formContract.parmStartDateTime(uIForm.retailTransactionArchiveStartDateTimeControl().dateTimeValue());
        if (displayedArchiveRecord)
        {
            displayedArchiveRecord.StartDateTime = formContract.parmStartDateTime();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onModifiedRetailTransactionArchiveEndDateTime</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void onModifiedRetailTransactionArchiveEndDateTime()
    {
        formContract.parmEndDateTime(uIForm.retailTransactionArchiveEndDateTimeControl().dateTimeValue());
        if (displayedArchiveRecord)
        {
            displayedArchiveRecord.EndDateTime = formContract.parmEndDateTime();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onModifiedRetailTransactionArchiveDataAreaId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onModifiedRetailTransactionArchiveDataAreaId()
    {
        formContract.parmRetailTransactionDataAreaId(uIForm.retailTransactionArchiveDataAreaIdControl().valueStr());
        if (displayedArchiveRecord)
        {
            displayedArchiveRecord.RetailTransactionDataAreaId = formContract.parmRetailTransactionDataAreaId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean validate()
    {
        return formContract.validate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRetailTransactionArchiveTransFromContract</Name>
				<Source><![CDATA[
    private RetailTransactionArchiveTrans initRetailTransactionArchiveTransFromContract(ArchiveServiceJobName _jobName)
    {
        RetailTransactionArchiveTrans retailTransactionArchiveTrans;
        retailTransactionArchiveTrans.Name = _jobName;
        retailTransactionArchiveTrans.StartDateTime = formContract.parmStartDateTime();
        retailTransactionArchiveTrans.EndDateTime = formContract.parmEndDateTime();
        retailTransactionArchiveTrans.RetailTransactionDataAreaId = formContract.parmRetailTransactionDataAreaId();
        
        return retailTransactionArchiveTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>