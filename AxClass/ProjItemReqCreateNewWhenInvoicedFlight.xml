<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjItemReqCreateNewWhenInvoicedFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
using IFeatureLifecycle = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureLifecycle;
using FeatureLifecycleStage = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.FeatureLifecycleStage;

/// <summary>
/// <c>ProjItemReqCreateNewWhenInvoicedFlight</c> flight is enabled by default,
/// it will create new Item Requirment header (Sales table) if the existing one is Invoiced or Canceled.
/// </summary>
class ProjItemReqCreateNewWhenInvoicedFlight implements IFeatureLifecycle
{
    private static ProjItemReqCreateNewWhenInvoicedFlight instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new ProjItemReqCreateNewWhenInvoicedFlight();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>ProjItemReqCreateNewWhenInvoicedFlight</c> instance.</returns>
    [Hookable(false)]
    static internal ProjItemReqCreateNewWhenInvoicedFlight instance()
    {
        return ProjItemReqCreateNewWhenInvoicedFlight::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates the stage of the feature in its lifecycle.
    /// </summary>
    /// <returns>A <c>FeatureLifeCycleState</c> value.</returns>
   public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>