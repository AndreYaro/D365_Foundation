<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalDepBookJournalParmPost</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrades data from <c>AssetDepBookJournalParmPost</c> to <c>LedgerJournalParmPost</c> table.
/// </summary>
class ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalDepBookJournalParmPost extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncUpgradeAssetDepBookJournalParmPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Move <c>AssetDepBookJournalParmPost</c> data into a temporary table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeScriptTableAttribute('AssetDepBookJournalParmPost', false, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpgradeAssetDepBookJournalParmPost()
    {
        // Drop the AssetDepBookJournalParmPostUpgradeTmp table if it exists.
        this.executeSqlStatement(this.getSQLDropAssetDepBookJournalParmPostUpgradeTmp());

        // Create temp upgrade table.
        this.executeSqlStatement(this.getSQLCreateAssetDepBookJournalParmPostUpgradeTmp());

        // Move AssetDepBookJournalParmPost rows to temp table.
        this.executeSqlStatement(this.getSQLInsertAssetDepBookJournalParmPostUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpgradeAssetDepBookJournalParmPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the <c>AssetDepBookJournalParmPost</c> data from the temporary table into <c>LedgerJournalParmPost</c> table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalDepBookJournalTrans), methodStr(ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalDepBookJournalTrans, postSyncAllocateVoucherAssetDepBookJournalTrans)),
     UpgradeDependsOnModuleAttribute(classStr(ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalDepBookJournalTrans), methodStr(ReleaseUpdateDB70_FixedAssetJournalDepBookRemovalDepBookJournalTrans, postSyncUpgradeAssetDepBookJournalTrans)),
     UpgradeScriptTableAttribute(tableStr(LedgerJournalParmPost), true, true, false, false),
     UpgradeScriptTableAttribute('AssetDepBookJournalParmPost', false, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpgradeAssetDepBookJournalParmPost()
    {
        // Move the data into the LedgerJournalParmPost from the AssetDepBookJournalParmPostUpgradeTmp table
        this.executeSqlStatement(this.getSQLInsertAssetDepBookJournalParm());

        // drop temporary upgrade table
        this.executeSqlStatement(this.getSQLDropAssetDepBookJournalParmPostUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDropAssetDepBookJournalParmPostUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLDropAssetDepBookJournalParmPostUpgradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP', 'U') IS NOT NULL
                DROP TABLE ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLCreateAssetDepBookJournalParmPostUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLCreateAssetDepBookJournalParmPostUpgradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.[ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP]', 'U') IS NULL
                CREATE TABLE [dbo].[ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP](
                    [EXECUTEDDATETIME] [datetime] NOT NULL,
                    [EXECUTEDDATETIMETZID] [int] NOT NULL,
                    [JOBSTATUS] [int] NOT NULL,
                    [JOURNALID] [nvarchar](20) NOT NULL,
                    [LINENUM] [numeric](32, 16) NOT NULL,
                    [PARMID] [nvarchar](20) NOT NULL,
                    [TRANSFERERRORS] [int] NOT NULL,
                    [MODIFIEDDATETIME] [datetime] NOT NULL,
                    [MODIFIEDBY] [nvarchar](20) NOT NULL,
                    [DATAAREAID] [nvarchar](4) NOT NULL,
                    [PARTITION] [bigint] NOT NULL,
                 CONSTRAINT [I_4828DEPBOOKJOURNALPARMPOSTUPGRADETMPIDX] PRIMARY KEY CLUSTERED
                (
                    [PARTITION] ASC,
                    [DATAAREAID] ASC,
                    [PARMID] ASC,
                    [JOURNALID] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                ) ON [PRIMARY]
                ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetDepBookJournalParmPostUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetDepBookJournalParmPostUpgradeTmp()
    {
        str sqlStatement = @"
            INSERT INTO [dbo].[ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP]
                       ([EXECUTEDDATETIME]
                       ,[EXECUTEDDATETIMETZID]
                       ,[JOBSTATUS]
                       ,[JOURNALID]
                       ,[LINENUM]
                       ,[PARMID]
                       ,[TRANSFERERRORS]
                       ,[MODIFIEDDATETIME]
                       ,[MODIFIEDBY]
                       ,[DATAAREAID]
                       ,[PARTITION])
                    SELECT [EXECUTEDDATETIME]
                       ,[EXECUTEDDATETIMETZID]
                       ,[JOBSTATUS]
                       ,[JOURNALID]
                       ,[LINENUM]
                       ,[PARMID]
                       ,[TRANSFERERRORS]
                       ,[MODIFIEDDATETIME]
                       ,[MODIFIEDBY]
                       ,[DATAAREAID]
                       ,[PARTITION]
                      FROM [dbo].[ASSETDEPBOOKJOURNALPARMPOST]
                            WHERE NOT EXISTS
                                (SELECT RECID FROM [dbo].[ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP]
                                WHERE [ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP].[PARMID] = [ASSETDEPBOOKJOURNALPARMPOST].[PARMID]
                                    AND [ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP].[JOURNALID] = [ASSETDEPBOOKJOURNALPARMPOST].[JOURNALID]
                                    AND [ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP].[DATAAREAID] = [ASSETDEPBOOKJOURNALPARMPOST].[DATAAREAID]
                                    AND [ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP].[PARTITION] = [ASSETDEPBOOKJOURNALPARMPOST].[PARTITION])
            ";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetDepBookJournalParm</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetDepBookJournalParm()
    {
        str sqlStatement = @"
            INSERT INTO [dbo].[LEDGERJOURNALPARMPOST]
                ([EXECUTEDDATETIME]
                ,[EXECUTEDDATETIMETZID]
                ,[JOBSTATUS]
                ,[LEDGERJOURNALID]
                ,[LEDGERJOURNALTYPE]
                ,[LINENUM]
                ,[PARMID]
                ,[TRANSFERERRORS]
                ,[DATAAREAID]
                ,[PARTITION])
            SELECT [EXECUTEDDATETIME]
                ,[EXECUTEDDATETIMETZID]
                ,[JOBSTATUS]
                ,[JOURNALID]
                ,13
                ,[LINENUM]
                ,[PARMID]
                ,[TRANSFERERRORS]
                ,[DATAAREAID]
                ,[PARTITION]
            FROM [dbo].[ASSETDEPBOOKJOURNALPARMPOSTUPGRADETMP]
            ";

        return sqlStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>