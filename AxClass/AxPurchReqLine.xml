<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxPurchReqLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxPurchReqLine extends AxApplicationBase
{
    PurchReqLine                purchReqLine;
    AxInventDim_PurchReqLine    axInventDim;
    PurchReqLine                tempPurchReqLine;
    int                     inventTableIdx;
    int                     axPurchReqTableIdx;
    int                     priceDisc_LineDiscIdx;
    int                     priceDisc_PriceIdx;
    int                     zipCodeIdx;
    str                     county;
    str                     state;
    str                     item;
    LineNum                 lineNum;
    SequenceNumber          sequenceNumber;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axInventDim</Name>
				<Source><![CDATA[
    public AxInventDim_PurchReqLine axInventDim(AxInventDim_PurchReqLine _axInventDim = axInventDim)
    {
        axInventDim = _axInventDim;

        return axInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchReqTable</Name>
				<Source><![CDATA[
    public AxPurchReqTable axPurchReqTable(AxPurchReqTable _axPurchReqTable = null)
    {
        AxPurchReqTable axPurchReqTable;
        PurchReqTable   purchReqTable;

        if (!axPurchReqTableIdx)
        {
            axPurchReqTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axPurchReqTable))
        {
            this.classCacheInsert(axPurchReqTableIdx, _axPurchReqTable);
            axPurchReqTable = _axPurchReqTable;
        }
        else
        {
            if (this.classCacheExist(axPurchReqTableIdx))
            {
                axPurchReqTable = this.classCacheLookup(axPurchReqTableIdx);
            }
            else
            {
                this.setPurchReqTable();

                purchReqTable = PurchReqTable::find(this.parmPurchReqTable());
                axPurchReqTable = AxPurchReqTable::newPurchReqTable(purchReqTable);

                this.classCacheInsert(axPurchReqTableIdx, axPurchReqTable);
            }
        }

        return axPurchReqTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _purchReqLine = purchReqLine)
    {
        if (!prmisDefault(_purchReqLine))
        {
            super(_purchReqLine);
            purchReqLine = _purchReqLine as PurchReqLine;
        }
        else
        {
            super();
        }

        return purchReqLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>PurchReqLine</c> record.
    /// </summary>
    /// <returns>
    /// An empy <c>PurchReqLine</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        PurchReqLine localPurchReqLine;
        return localPurchReqLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>end</Name>
				<Source><![CDATA[
    /// <summary>
    /// Throws an error when an <c>InventDim</c> section is missing in an XML string.
    /// </summary>
    /// <remarks>
    /// The <c>AxPurchReqLine.end</c> method is used for processing incoming documents and it is run before
    /// popping an <c>AxBC</c> object off the stack.The method is required because <c>AxBC</c> classes have
    /// the <c>AxInventDim</c> class as a child.Therefore, this method must throw an error when no
    /// inventory dimension section has been encountered in the XML. This method is intended for internal
    /// use only and should not be called through the interface.
    /// </remarks>
    public void end()
    {
        super();
        lineNum = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodStr(AxPurchReqLine, parmCurrencyCode));
        this.setParmMethodAsNotMandatory(methodStr(AxPurchReqLine, parmVendAccount));
        this.setParmMethodAsNotMandatory(methodStr(AxPurchReqLine, parmSequenceNumber));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTableRecord</Name>
				<Source><![CDATA[
    public InventTable inventTableRecord(InventTable _inventTable = null)
    {
        InventTable   inventTable;

        if (!inventTableIdx)
        {
            inventTableIdx          = this.nextCacheIdx();
        }

        if (!prmisDefault(_inventTable))
        {
            this.tableCacheInsert(inventTableIdx, _inventTable);
            inventTable = _inventTable;
        }
        else
        {
            if (this.tableCacheExist(inventTableIdx))
            {
                inventTable = this.tableCacheLookup(inventTableIdx);
            }
            else
            {
                this.setInventTableRecordFields();
                inventTable = InventTable::find(this.parmItemId());
                this.tableCacheInsert(inventTableIdx, inventTable);
            }
        }

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAxPurchReqTableFieldsSet</Name>
				<Source><![CDATA[
    public boolean isAxPurchReqTableFieldsSet()
    {
        return this.isFieldSet(fieldNum(PurchReqLine, RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventTableRecordFieldsSet</Name>
				<Source><![CDATA[
    public boolean isInventTableRecordFieldsSet()
    {
        return this.isFieldSet(fieldNum(PurchReqLine, ItemId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPriceDisc_LineDiscFieldsSet</Name>
				<Source><![CDATA[
    protected boolean isPriceDisc_LineDiscFieldsSet()
    {
        AxPurchReqLine localPurchReqLine = this.axOrig() as AxPurchReqLine;
        return this.isFieldSet(fieldNum(PurchReqLine, ItemId))                                                     ||
               this.isFieldSet(fieldNum(PurchReqLine, PurchUnitOfMeasure))                                                  ||
               this.isFieldSet(fieldNum(PurchReqLine, PurchQty))                                                   ||
               this.isInventTableRecordFieldsSet()                                                              ||
               (this.isInventTableRecordFieldsSet()             &&
                this.inventTableRecord().purchLineDisc() != localPurchReqLine.inventTableRecord().purchLineDisc())  ||
               this.axInventDim().isPurchPriceDiscFieldsSet(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPriceDisc_PriceFieldsSet</Name>
				<Source><![CDATA[
    protected boolean isPriceDisc_PriceFieldsSet()
    {
        return this.isFieldSet(fieldNum(PurchReqLine, ItemId))                                          ||
               this.isFieldSet(fieldNum(PurchReqLine, PurchUnitOfMeasure))                                       ||
               this.isFieldSet(fieldNum(PurchReqLine, PurchQty))                                        ||
               this.isInventTableRecordFieldsSet()                                                      ||
               this.axInventDim().isPurchPriceDiscFieldsSet(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        axInventDim = AxInventDim_PurchReqLine::newAxPurchReqLine(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDistributionTemplate</Name>
				<Source><![CDATA[
    public RefRecId parmAccountingDistributionTemplate(RefRecId _accountingDistributionTemplate = 0)
    {
        if (!prmisDefault(_accountingDistributionTemplate))
        {
            this.setField(fieldNum(PurchReqLine, AccountingDistributionTemplate), _accountingDistributionTemplate);
        }

        return purchReqLine.AccountingDistributionTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActivityNumber</Name>
				<Source><![CDATA[
    public ProjActivityNumber parmActivityNumber(ProjActivityNumber _activityNumber = '')
    {
        if (!prmisDefault(_activityNumber))
        {
            this.setField(fieldNum(PurchReqLine, ActivityNumber), _activityNumber);
        }

        return purchReqLine.ActivityNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActivityNumberDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmActivityNumberDataArea(DataAreaId _activityNumberDataArea = '')
    {
        if (!prmisDefault(_activityNumberDataArea))
        {
            this.setField(fieldNum(PurchReqLine, ActivityNumberDataArea), _activityNumberDataArea);
        }

        return purchReqLine.ActivityNumberDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefRecId</Name>
				<Source><![CDATA[
    public AddressRefRecId parmAddressRefRecId(AddressRefRecId _addressRefRecId = 0)
    {
        if (!prmisDefault(_addressRefRecId))
        {
            this.setField(fieldNum(PurchReqLine, AddressRefRecId), _addressRefRecId);
        }

        return purchReqLine.AddressRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefTableId</Name>
				<Source><![CDATA[
    public AddressRefTableId parmAddressRefTableId(AddressRefTableId _addressRefTableId = 0)
    {
        if (!prmisDefault(_addressRefTableId))
        {
            this.setField(fieldNum(PurchReqLine, AddressRefTableId), _addressRefTableId);
        }

        return purchReqLine.AddressRefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetGroup</Name>
				<Source><![CDATA[
    public AssetGroupId parmAssetGroup(AssetGroupId _assetGroup = '')
    {
        if (!prmisDefault(_assetGroup))
        {
            this.setField(fieldNum(PurchReqLine, AssetGroup), _assetGroup);
        }

        return purchReqLine.AssetGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetGroupDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmAssetGroupDataArea(DataAreaId _assetGroupDataArea = '')
    {
        if (!prmisDefault(_assetGroupDataArea))
        {
            this.setField(fieldNum(PurchReqLine, AssetGroupDataArea), _assetGroupDataArea);
        }

        return purchReqLine.AssetGroupDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetRuleQualifierOption</Name>
				<Source><![CDATA[
    public RefRecId parmAssetRuleQualifierOption(RefRecId _assetRuleQualifierOption = 0)
    {
        if (!prmisDefault(_assetRuleQualifierOption))
        {
            this.setField(fieldNum(PurchReqLine, AssetRuleQualifierOption), _assetRuleQualifierOption);
        }

        return purchReqLine.AssetRuleQualifierOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetRuleQualifierOptionLocal</Name>
				<Source><![CDATA[
    public RefRecId parmAssetRuleQualifierOptionLocal(RefRecId _assetRuleQualifierOptionLocal = 0)
    {
        if (!prmisDefault(_assetRuleQualifierOptionLocal))
        {
            this.setField(fieldNum(PurchReqLine, AssetRuleQualifierOptionLocal), _assetRuleQualifierOptionLocal);
        }

        return purchReqLine.AssetRuleQualifierOptionLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAttention</Name>
				<Source><![CDATA[
    public PurchReqAttention parmAttention(PurchReqAttention _attention = '')
    {
        if (!prmisDefault(_attention))
        {
            this.setField(fieldNum(PurchReqLine, Attention), _attention);
        }

        return purchReqLine.Attention;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBusinessJustification</Name>
				<Source><![CDATA[
    public BusinessJustificationRefRecId parmBusinessJustification(RefRecId _businessJustification = 0)
    {
        if (!prmisDefault(_businessJustification))
        {
            this.setField(fieldNum(PurchReqLine, BusinessJustification), _businessJustification);
        }

        return purchReqLine.BusinessJustification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBusinessJustificationDescription</Name>
				<Source><![CDATA[
    public JustificationDescription parmBusinessJustificationDescription(JustificationDescription _businessJustificationDescription = '')
    {
        PurchReqBusinessJustificationCodes purchReqBusinessJustificationCodes;
        BusinessJustificationRefRecId   businessJustificationRefRecId;

        if (!prmisDefault(_businessJustificationDescription))
        {
            businessJustificationRefRecId = PurchReqBusinessJustificationCodes::find(_businessJustificationDescription).RecId;
            this.setField(fieldNum(PurchReqLine, BusinessJustification), businessJustificationRefRecId);
        }

        if (!purchReqLine.BusinessJustification)
        {
            tempPurchReqLine = PurchReqLine::find(purchReqLine.RecId);
            purchReqLine.BusinessJustification = tempPurchReqLine.BusinessJustification;
        }

        select firstonly Description from purchReqBusinessJustificationCodes
            where purchReqBusinessJustificationCodes.RecId == purchReqLine.BusinessJustification;

        return purchReqBusinessJustificationCodes.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuyingLegalEntity</Name>
				<Source><![CDATA[
    public RefRecId parmBuyingLegalEntity(RefRecId _buyingLegalEntity = 0)
    {
        if (!prmisDefault(_buyingLegalEntity))
        {
            this.setField(fieldNum(PurchReqLine, BuyingLegalEntity), _buyingLegalEntity);
        }

        return purchReqLine.BuyingLegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuyingLegalEntityDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmBuyingLegalEntityDataArea(DataAreaId _buyingLegalEntityDataArea = '')
    {
        CompanyInfo         companyInfo;
        RefRecId            refRecId;
        if (!prmisDefault(_buyingLegalEntityDataArea))
        {
            refRecId = CompanyInfo::findDataArea(_buyingLegalEntityDataArea).RecId;
            this.setField(fieldNum(PurchReqLine, BuyingLegalEntity), refRecId);
        }

        if (!purchReqLine.BuyingLegalEntity)
        {
            tempPurchReqLine = PurchReqLine::find(purchReqLine.RecId);
            purchReqLine.BuyingLegalEntity = tempPurchReqLine.BuyingLegalEntity;
        }

        companyInfo = CompanyInfo::findRecId(purchReqLine.BuyingLegalEntity);

        return companyInfo.DataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCFOPTable_BR</Name>
				<Source><![CDATA[
    public RefRecId parmCFOPTable_BR(RefRecId _cfopTAble_BR = 0)
    {
        if (!prmisDefault(_cfopTAble_BR))
        {
            this.setField(fieldNum(PurchReqLine, cfopTable_BR), _cfopTAble_BR);
        }

        return purchReqLine.cfopTable_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCFPSTable_BR</Name>
				<Source><![CDATA[
    public RefRecId parmCFPSTable_BR(RefRecId _cfpsTAble_BR = 0)
    {
        if (!prmisDefault(_cfpsTAble_BR))
        {
            this.setField(fieldNum(PurchReqLine, cfpsTable_BR), _cfpsTAble_BR);
        }

        return purchReqLine.cfpsTable_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;

        if (!prmisDefault(_currencyCode))
        {
            dictField = new DictField(tableNum(PurchReqLine), fieldNum(PurchReqLine, CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode,dictField);

            if (this.valueMappingInbound())
            {
                _currencyCode = this.axCurrencyCode(_currencyCode);
            }

            this.setField(fieldNum(PurchReqLine, CurrencyCode), _currencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(purchReqLine.CurrencyCode);
        }
        return purchReqLine.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension =0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.setField(fieldNum(PurchReqLine, DefaultDimension), _defaultDimension);
        }

        return purchReqLine.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public Name parmDeliveryName(Name _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(PurchReqLine, DeliveryName), _deliveryName);
        }

        return purchReqLine.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(RefRecId _deliveryPostalAddress = 0)
    {
        if (!prmisDefault(_deliveryPostalAddress))
        {
            this.setField(fieldNum(PurchReqLine, DeliveryPostalAddress), _deliveryPostalAddress);
        }

        return purchReqLine.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExternalItemId</Name>
				<Source><![CDATA[
    public PurchExternalItemId parmExternalItemId(PurchExternalItemId _externalItemId = '')
    {
        if (!prmisDefault(_externalItemId))
        {
            this.setField(fieldNum(PurchReqLine, ExternalItemId), _externalItemId);
        }

        return purchReqLine.ExternalItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
        if (!prmisDefault(_inventDimId))
        {
            this.setField(fieldNum(PurchReqLine, InventDimId), _inventDimId);
        }

        return purchReqLine.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmInventDimIdDataArea(DataAreaId _inventDimIdDataArea = '')
    {
        if (!prmisDefault(_inventDimIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, InventDimIdDataArea), _inventDimIdDataArea);
        }

        return purchReqLine.InventDimIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocationId</Name>
				<Source><![CDATA[
    public PurchInventLocationId parmInventLocationId(PurchInventLocationId _inventLocationId = '')
    {
        if (!prmisDefault(_inventLocationId))
        {
            this.setField(fieldNum(PurchReqLine, InventLocationId), _inventLocationId);
        }

        return purchReqLine.InventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocationIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmInventLocationIdDataArea(DataAreaId _inventLocationIdDataArea = '')
    {
        if (!prmisDefault(_inventLocationIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, InventLocationIdDataArea), _inventLocationIdDataArea);
        }

        return purchReqLine.InventLocationIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsModified</Name>
				<Source><![CDATA[
    public VersioningIsModified parmIsModified(VersioningIsModified _isModified = NoYes::No)
    {
        if (!prmisDefault(_isModified))
        {
            this.setField(fieldNum(PurchReqLine, IsModified), _isModified);
        }

        return purchReqLine.IsModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPreEncumbranceRequired</Name>
				<Source><![CDATA[
    public UnknownNoYes parmIsPreEncumbranceRequired(UnknownNoYes _isPreEncumbranceRequired = UnknownNoYes::No)
    {
        if (!prmisDefault(_isPreEncumbranceRequired))
        {
            this.setField(fieldNum(PurchReqLine, IsPreEncumbranceRequired), _isPreEncumbranceRequired);
        }

        return purchReqLine.IsPreEncumbranceRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrepayment</Name>
				<Source><![CDATA[
    public NoYes parmIsPrepayment(NoYes _isPrepayment = NoYes::No)
    {
        if (!prmisDefault(_isPrepayment))
        {
            this.setField(fieldNum(PurchReqLine, Requisitioner), _isPrepayment);
        }

        return purchReqLine.IsPrepayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPurchaseOrderGenerationManual</Name>
				<Source><![CDATA[
    public boolean parmIsPurchaseOrderGenerationManual(boolean _isPurchaseOrderGenerationManual = false)
    {
        if (!prmisDefault(_isPurchaseOrderGenerationManual))
        {
            this.setField(fieldNum(PurchReqLine, IsPurchaseOrderGenerationManual), _isPurchaseOrderGenerationManual);
        }

        return purchReqLine.IsPurchaseOrderGenerationManual;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsSaved</Name>
				<Source><![CDATA[
    public NoYesId parmIsSaved(NoYesId _isSaved = NoYes::No)
    {
        if (!prmisDefault(_isSaved))
        {
            this.setField(fieldNum(PurchReqLine, IsSaved), _isSaved);
        }

        return purchReqLine.IsSaved;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public str parmItemId(str _itemId = '')
    {
        DictField   dictField;

        if (!prmisDefault(_itemId))
        {
            dictField = new DictField(tableNum(PurchReqLine), fieldNum(PurchReqLine, ItemId));
            this.validateInboundItemIdString(_itemId,dictField);
            if (this.valueMappingInbound())
            {
                item = _itemId;
            }

            this.setField(fieldNum(PurchReqLine, ItemId), _itemId);
        }

        if (this.valueMappingOutbound())
        {
            return conPeek(this.axPurchItemId(purchReqLine.VendAccount,purchReqLine.ItemId,purchReqLine.inventDim()),1);
        }
        else
        {
            return purchReqLine.ItemId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmItemIdDataArea(DataAreaId _itemIdDataArea = '')
    {
        if (!prmisDefault(_itemIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, ItemIdDataArea), _itemIdDataArea);
        }

        return purchReqLine.ItemIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemIdNonCatalog</Name>
				<Source><![CDATA[
    public str parmItemIdNonCatalog(str _itemIdNonCatalog = '')
    {
        if (!prmisDefault(_itemIdNonCatalog))
        {
            this.setField(fieldNum(PurchReqLine, ItemIdNonCatalog), _itemIdNonCatalog);
        }

        return purchReqLine.ItemIdNonCatalog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    public PurchLineAmount parmLineAmount(PurchLineAmount _lineAmount = 0)
    {
        if (!prmisDefault(_lineAmount))
        {
            this.setField(fieldNum(PurchReqLine, LineAmount), _lineAmount);
        }

        return purchReqLine.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineComplete</Name>
				<Source><![CDATA[
    public LineComplete parmLineComplete(LineComplete _lineComplete = NoYes::No)
    {
        if (!prmisDefault(_lineComplete))
        {
            this.setField(fieldNum(PurchReqLine, LineComplete), _lineComplete);
        }

        return purchReqLine.LineComplete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    public PurchLineDisc parmLineDisc(PurchLineDisc _lineDisc = 0)
    {
        if (!prmisDefault(_lineDisc))
        {
            this.setField(fieldNum(PurchReqLine, LineDisc), _lineDisc);
        }

        return purchReqLine.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisDefault(_lineNum))
        {
            this.setField(fieldNum(PurchReqLine, LineNum), _lineNum);
        }

        return purchReqLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePercent</Name>
				<Source><![CDATA[
    public PurchLinePercent parmLinePercent(PurchLinePercent _linePercent = 0)
    {
        if (!prmisDefault(_linePercent))
        {
            this.setField(fieldNum(PurchReqLine, LinePercent), _linePercent);
        }

        return purchReqLine.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineRefId</Name>
				<Source><![CDATA[
    public PurchReqLineRefId parmLineRefId(PurchReqLineRefId _lineRefId = nullValueBaseType(Types::Guid))
    {
        if (!prmisDefault(_lineRefId))
        {
            this.setField(fieldNum(PurchReqLine, LineRefId), _lineRefId);
        }

        return purchReqLine.LineRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineType</Name>
				<Source><![CDATA[
    public PurchReqLineType parmLineType(PurchReqLineType _lineType = PurchReqLineType::Item)
    {
        if (!prmisDefault(_lineType))
        {
            this.setField(fieldNum(PurchReqLine, LineType), _lineType);
        }

        return purchReqLine.LineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    public ItemFreeTxt parmName(ItemFreeTxt _name = '')
    {
        if (!prmisDefault(_name))
        {
            this.setField(fieldNum(PurchReqLine, Name), _name);
        }

        return purchReqLine.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrePaymentDetails</Name>
				<Source><![CDATA[
    public PurchReqLinePrePaymentDetails parmPrePaymentDetails(PurchReqLinePrePaymentDetails _prePaymentDetails = '')
    {
        if (!prmisDefault(_prePaymentDetails))
        {
            this.setField(fieldNum(PurchReqLine, PrePaymentDetails), _prePaymentDetails);
        }

        return purchReqLine.PrePaymentDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceDiscountTransfer</Name>
				<Source><![CDATA[
    public PurchReqPriceDiscountTransfer parmPriceDiscountTransfer(PurchReqPriceDiscountTransfer _priceDiscountTransfer = PurchReqPriceDiscountTransfer::UsePolicy)
    {
        if (!prmisdefault(_priceDiscountTransfer))
        {
            this.setField(fieldNum(PurchReqLine, PriceDiscountTransfer), _priceDiscountTransfer);
        }

        return purchReqLine.PriceDiscountTransfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    public PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
        if (!prmisDefault(_priceUnit))
        {
            this.setField(fieldNum(PurchReqLine, PriceUnit), _priceUnit);
        }

        return purchReqLine.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcurementCategory</Name>
				<Source><![CDATA[
    public EcoResCategoryId parmProcurementCategory(EcoResCategoryId _procurementCategory = 0)
    {
        if (!prmisDefault(_procurementCategory))
        {
            this.setField(fieldNum(PurchReqLine, ProcurementCategory), _procurementCategory);
        }

        return purchReqLine.ProcurementCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjCategoryId</Name>
				<Source><![CDATA[
    public ProjCategoryId parmProjCategoryId(ProjCategoryId _projCategoryId = '')
    {
        if (!prmisDefault(_projCategoryId))
        {
            this.setField(fieldNum(PurchReqLine, ProjCategoryId), _projCategoryId);
        }

        return purchReqLine.ProjCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjCategoryIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmProjCategoryIdDataArea(DataAreaId _projCategoryIdDataArea = '')
    {
        if (!prmisDefault(_projCategoryIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, ProjCategoryIdDataArea), _projCategoryIdDataArea);
        }

        return purchReqLine.ProjCategoryIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    public ProjId parmProjId(ProjId _projId = '')
    {
        if (!prmisDefault(_projId))
        {
            this.setField(fieldNum(PurchReqLine, ProjId), _projId);
        }

        return purchReqLine.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmProjIdDataArea(DataAreaId _projIdDataArea = '')
    {
        if (!prmisDefault(_projIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, ProjIdDataArea), _projIdDataArea);
        }

        return purchReqLine.ProjIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjLinePropertyId</Name>
				<Source><![CDATA[
    public ProjLinePropertyId parmProjLinePropertyId(ProjLinePropertyId _projLinePropertyId = '')
    {
        if (!prmisDefault(_projLinePropertyId))
        {
            this.setField(fieldNum(PurchReqLine, ProjLinePropertyId), _projLinePropertyId);
        }

        return purchReqLine.ProjLinePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjLinePropertyIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmProjLinePropertyIdDataArea(DataAreaId _projLinePropertyIdDataArea = '')
    {
        if (!prmisDefault(_projLinePropertyIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, ProjLinePropertyIdDataArea), _projLinePropertyIdDataArea);
        }

        return purchReqLine.ProjLinePropertyIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesCurrencyId</Name>
				<Source><![CDATA[
    public CurrencyCode parmProjSalesCurrencyId(CurrencyCode _projSalesCurrencyId = '')
    {
        if (!prmisDefault(_projSalesCurrencyId))
        {
            this.setField(fieldNum(PurchReqLine, ProjSalesCurrencyId), _projSalesCurrencyId);
        }

        return purchReqLine.ProjSalesCurrencyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesPrice</Name>
				<Source><![CDATA[
    public ProjSalesPriceCost parmProjSalesPrice(ProjSalesPriceCost _projSalesPrice = 0)
    {
        if (!prmisDefault(_projSalesPrice))
        {
            this.setField(fieldNum(PurchReqLine, ProjSalesPrice), _projSalesPrice);
        }

        return purchReqLine.ProjSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesUnitOfMeasure</Name>
				<Source><![CDATA[
    public RefRecId parmProjSalesUnitOfMeasure(RefRecId _unitOfMeasureRecId = 0)
    {
        if (!prmisDefault(_unitOfMeasureRecId))
        {
            this.setField(fieldNum(PurchReqLine, ProjSalesUnitOfMeasure), _unitOfMeasureRecId);
        }

        return purchReqLine.ProjSalesUnitOfMeasure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxGroupId</Name>
				<Source><![CDATA[
    public ProjTaxGroup parmProjTaxGroupId(ProjTaxGroup _projTaxGroupId = '')
    {
        if (!prmisDefault(_projTaxGroupId))
        {
            this.setField(fieldNum(PurchReqLine, ProjTaxGroupId), _projTaxGroupId);
        }

        return purchReqLine.ProjTaxGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxGroupIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmProjTaxGroupIdDataArea(DataAreaId _projTaxGroupIdDataArea = '')
    {
        if (!prmisDefault(_projTaxGroupIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, ProjTaxGroupIdDataArea), _projTaxGroupIdDataArea);
        }

        return purchReqLine.ProjTaxGroupIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxItemGroupId</Name>
				<Source><![CDATA[
    public ProjTaxItemGroup parmProjTaxItemGroupId(ProjTaxItemGroup _projTaxItemGroupId = '')
    {
        if (!prmisDefault(_projTaxItemGroupId))
        {
            this.setField(fieldNum(PurchReqLine, ProjTaxItemGroupId), _projTaxItemGroupId);
        }

        return purchReqLine.ProjTaxItemGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxItemGroupIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmProjTaxItemGroupIdDataArea(DataAreaId _projTaxItemGroupIdDataArea = '')
    {
        if (!prmisDefault(_projTaxItemGroupIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, ProjTaxItemGroupIdDataArea), _projTaxItemGroupIdDataArea);
        }

        return purchReqLine.ProjTaxItemGroupIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTransId</Name>
				<Source><![CDATA[
    public ProjItemTransId parmProjTransId(ProjItemTransId _projTransId = '')
    {
        if (!prmisDefault(_projTransId))
        {
            this.setField(fieldNum(PurchReqLine, ProjTransId), _projTransId);
        }

        return purchReqLine.ProjTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTransIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmProjTransIdDataArea(DataAreaId _projTransIdDataArea = '')
    {
        if (!prmisDefault(_projTransIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, ProjTransIdDataArea), _projTransIdDataArea);
        }

        return purchReqLine.ProjTransIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchAgreement</Name>
				<Source><![CDATA[
    public RefRecId parmPurchAgreement(RefRecId _purchAgreement = 0)
    {
        if (!prmisDefault(_purchAgreement))
        {
            this.setField(fieldNum(PurchReqLine, PurchAgreement), _purchAgreement);
        }

        return purchReqLine.PurchAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchId</Name>
				<Source><![CDATA[
    public PurchId parmPurchId(PurchId _purchId = '')
    {
        if (!prmisDefault(_purchId))
        {
            this.setField(fieldNum(PurchReqLine, PurchId), _purchId);
        }

        return purchReqLine.PurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmPurchIdDataArea(DataAreaId _purchIdDataArea = '')
    {
        if (!prmisDefault(_purchIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, PurchIdDataArea), _purchIdDataArea);
        }

        return purchReqLine.PurchIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLineCreated</Name>
				<Source><![CDATA[
    public PurchReqPurchLineCreated parmPurchLineCreated(PurchReqPurchLineCreated _purchLineCreated = NoYes::No)
    {
        if (!prmisDefault(_purchLineCreated))
        {
            this.setField(fieldNum(PurchReqLine, PurchLineCreated), _purchLineCreated);
        }

        return purchReqLine.PurchLineCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchMarkup</Name>
				<Source><![CDATA[
    public PurchMarkup parmPurchMarkup(PurchMarkup _purchMarkup = 0)
    {
        if (!prmisDefault(_purchMarkup))
        {
            this.setField(fieldNum(PurchReqLine, PurchMarkup), _purchMarkup);
        }

        return purchReqLine.PurchMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchPrice</Name>
				<Source><![CDATA[
    public PurchPrice parmPurchPrice(PurchPrice _purchPrice = 0)
    {
        if (!prmisDefault(_purchPrice))
        {
            this.setField(fieldNum(PurchReqLine, PurchPrice), _purchPrice);
        }

        return purchReqLine.PurchPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchQty</Name>
				<Source><![CDATA[
    public PurchOrderedQty parmPurchQty(PurchOrderedQty _purchQty = 0)
    {
        if (!prmisDefault(_purchQty))
        {
            this.setField(fieldNum(PurchReqLine, PurchQty), _purchQty);
        }

        return purchReqLine.PurchQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchReqConsolidationStatus</Name>
				<Source><![CDATA[
    public PurchReqConsolidationStatus parmPurchReqConsolidationStatus(PurchReqConsolidationStatus _status =
                PurchReqConsolidationStatus::None)
    {
        if (!prmisDefault(_status))
        {
            this.setField(fieldNum(PurchReqLine, PurchReqConsolidationStatus), _status);
        }

        return purchReqLine.PurchReqConsolidationStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchReqTable</Name>
				<Source><![CDATA[
    public RefRecId parmPurchReqTable(RefRecId _refRecId = 0)
    {
        if (!prmisDefault(_refRecId))
        {
            this.setField(fieldNum(PurchReqLine, PurchReqTable), _refRecId);
        }

        return purchReqLine.PurchReqTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchRFQCaseId</Name>
				<Source><![CDATA[
    public PurchRFQCaseId parmPurchRFQCaseId(PurchRFQCaseId _purchRFQCaseId = '')
    {
        if (!prmisDefault(_purchRFQCaseId))
        {
            this.setField(fieldNum(PurchReqLine, PurchRFQCaseId), _purchRFQCaseId);
        }

        return purchReqLine.PurchRFQCaseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchRFQCaseIdDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmPurchRFQCaseIdDataArea(DataAreaId _purchRFQCaseIdDataArea = '')
    {
        if (!prmisDefault(_purchRFQCaseIdDataArea))
        {
            this.setField(fieldNum(PurchReqLine, PurchRFQCaseIdDataArea), _purchRFQCaseIdDataArea);
        }

        return purchReqLine.PurchRFQCaseIdDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchUnitOfMeasure</Name>
				<Source><![CDATA[
    public RefRecId parmPurchUnitOfMeasure(RefRecId _unitOfMeasureRecId = 0)
    {
        if (!prmisDefault(_unitOfMeasureRecId))
        {
            this.setField(fieldNum(PurchReqLine, PurchUnitOfMeasure), _unitOfMeasureRecId);
        }

        return purchReqLine.PurchUnitOfMeasure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonRefRecID</Name>
				<Source><![CDATA[
    public ReasonRefRecID parmReasonRefRecID(ReasonRefRecID _reasonRefRecID = 0)
    {
        if (!prmisDefault(_reasonRefRecID))
        {
            this.setField(fieldNum(PurchReqLine, ReasonRefRecId), _reasonRefRecID);
        }

        return purchReqLine.ReasonRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceivingOperatingUnit</Name>
				<Source><![CDATA[
    public RefRecId parmReceivingOperatingUnit(RefRecId _receivingOperatingUnit = 0)
    {
        if (!prmisDefault(_receivingOperatingUnit))
        {
            this.setField(fieldNum(PurchReqLine, ReceivingOperatingUnit), _receivingOperatingUnit);
        }

        return purchReqLine.ReceivingOperatingUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequiredDate</Name>
				<Source><![CDATA[
    public PurchReqRequiredDate parmRequiredDate(PurchReqRequiredDate _requiredDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        if (!prmisDefault(_requiredDate))
        {
            this.setField(fieldNum(PurchReqLine, RequiredDate), _requiredDate);
        }

        return purchReqLine.RequiredDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequisitioner</Name>
				<Source><![CDATA[
    public RecId parmRequisitioner(RecId _requisitionerRecId = 0)
    {
        if (!prmisDefault(_requisitionerRecId))
        {
            this.setField(fieldNum(PurchReqLine, Requisitioner), _requisitionerRecId);
        }

        return purchReqLine.Requisitioner;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequisitionPurpose</Name>
				<Source><![CDATA[
    public RequisitionPurpose parmRequisitionPurpose(RequisitionPurpose _requisitionPurpose = RequisitionPurpose::Consumption)
    {
        if (!prmisDefault(_requisitionPurpose))
        {
            this.setField(fieldNum(PurchReqLine, RequisitionPurpose), _requisitionPurpose);
        }

        return purchReqLine.RequisitionPurpose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequisitionStatus</Name>
				<Source><![CDATA[
    public PurchReqRequisitionStatus parmRequisitionStatus(PurchReqRequisitionStatus _status = PurchReqRequisitionStatus::Draft)
    {
        if (!prmisDefault(_status))
        {
            this.setField(fieldNum(PurchReqLine, RequisitionStatus), _status);
        }

        return purchReqLine.RequisitionStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQCaseId</Name>
				<Source><![CDATA[
    public PurchRFQCaseId parmRFQCaseId(PurchRFQCaseId _purchRFQCaseId = '')
    {
        if (!prmisDefault(_purchRFQCaseId))
        {
            this.setField(fieldNum(PurchReqLine, PurchRFQCaseId), _purchRFQCaseId);
        }

        return purchReqLine.PurchRFQCaseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQRequirement</Name>
				<Source><![CDATA[
    public PurchReqRFQRequirement parmRFQRequirement(PurchReqRFQRequirement _rfqRequirement = PurchReqRFQRequirement::None)
    {
        if (!prmisDefault(_rfqRequirement))
        {
            this.setField(fieldNum(PurchReqLine, rfqRequirement), _rfqRequirement);
        }

        return purchReqLine.rfqRequirement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchOperationType_BR</Name>
				<Source><![CDATA[
    public RefRecId parmSalesPurchOperationType_BR(RefRecId _salesPurchOperationType_BR = 0)
    {
        if (!prmisDefault(_salesPurchOperationType_BR))
        {
            this.setField(fieldNum(PurchReqLine, SalesPurchOperationType_BR), _salesPurchOperationType_BR);
        }

        return purchReqLine.SalesPurchOperationType_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSequenceNumber</Name>
				<Source><![CDATA[
    public SequenceNumber parmSequenceNumber(SequenceNumber _sequenceNum = 0)
    {
        return purchReqLine.SequenceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentLine</Name>
				<Source><![CDATA[
    public RefRecId parmSourceDocumentLine(RefRecId _sourceDocumentLine = 0)
    {
        if (!prmisDefault(_sourceDocumentLine))
        {
            this.setField(fieldNum(PurchReqLine, SourceDocumentLine), _sourceDocumentLine);
        }

        return purchReqLine.SourceDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
        if (!prmisDefault(_taxGroup))
        {
            this.setField(fieldNum(PurchReqLine, TaxGroup), _taxGroup);
        }

        return purchReqLine.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroupDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmTaxGroupDataArea(DataAreaId _taxGroupDataArea = '')
    {
        if (!prmisDefault(_taxGroupDataArea))
        {
            this.setField(fieldNum(PurchReqLine, TaxGroupDataArea), _taxGroupDataArea);
        }

        return purchReqLine.TaxGroupDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroup</Name>
				<Source><![CDATA[
    public TaxItemGroup parmTaxItemGroup(TaxItemGroup _taxItemGroup = '')
    {
        if (!prmisDefault(_taxItemGroup))
        {
            this.setField(fieldNum(PurchReqLine, TaxItemGroup), _taxItemGroup);
        }

        return purchReqLine.TaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroupDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmTaxItemGroupDataArea(DataAreaId _taxItemGroupDataArea = '')
    {
        if (!prmisDefault(_taxItemGroupDataArea))
        {
            this.setField(fieldNum(PurchReqLine, TaxItemGroupDataArea), _taxItemGroupDataArea);
        }

        return purchReqLine.TaxItemGroupDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxServiceCode_BR</Name>
				<Source><![CDATA[
    public TaxServiceCodeId_BR parmTaxServiceCode_BR(TaxServiceCodeId_BR _taxServiceCode = '')
    {
        if (!prmisDefault(_taxServiceCode))
        {
            this.setField(fieldNum(PurchReqLine, TaxServiceCode_BR), _taxServiceCode);
        }

        return purchReqLine.TaxServiceCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the transaction date.
    /// </summary>
    /// <param name="_transDate">
    ///    The transaction date.
    /// </param>
    /// <returns>
    ///    The transaction date.
    /// </returns>

    public TransDate parmTransDate(TransDate _transDate = dateNull())
    {
        if (!prmisDefault(_transDate))
        {
            this.setField(fieldNum(PurchReqLine, TransDate), _transDate);
            purchReqLine.updateAccountingDate();
        }

        return purchReqLine.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmURL</Name>
				<Source><![CDATA[
    public URL parmURL(URL _url = '')
    {
        if (!prmisDefault(_url))
        {
            this.setField(fieldNum(PurchReqLine, url), _url);
        }

        return purchReqLine.url;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendAccount</Name>
				<Source><![CDATA[
    public str parmVendAccount(str _vendAccount = '')
    {
        DictField   dictField;

        if (!prmisDefault(_vendAccount))
        {
            dictField = new DictField(tableNum(PurchReqLine), fieldNum(PurchReqLine, VendAccount));

            if (this.valueMappingInbound())
            {
                this.validateInboundString(_vendAccount,dictField,this.mapPolicy().xMLMapVendAccount());
                _vendAccount = this.axVendAccount(_vendAccount);
            }
            else
            {
                this.validateInboundString(_vendAccount,dictField);
            }

            this.setField(fieldNum(PurchReqLine, VendAccount), _vendAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axVendAccount(purchReqLine.VendAccount);
        }
        return purchReqLine.VendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendAccountDataArea</Name>
				<Source><![CDATA[
    public DataAreaId parmVendAccountDataArea(DataAreaId _vendAccountDataArea = '')
    {
        if (!prmisDefault(_vendAccountDataArea))
        {
            this.setField(fieldNum(PurchReqLine, VendAccountDataArea), _vendAccountDataArea);
        }

        return purchReqLine.VendAccountDataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendQuoteNumber</Name>
				<Source><![CDATA[
    public VendQuoteNumber parmVendQuoteNumber(VendQuoteNumber _vendQuoteNumber = '')
    {
        if (!prmisDefault(_vendQuoteNumber))
        {
            this.setField(fieldNum(PurchReqLine, VendQuoteNumber), _vendQuoteNumber);
        }

        return purchReqLine.VendQuoteNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDisc_LineDisc</Name>
				<Source><![CDATA[
    public PriceDisc_LineDisc priceDisc_LineDisc(PriceDisc_LineDisc _priceDisc_LineDisc = null)
    {
        PriceDisc_LineDisc  priceDisc_LineDisc;
        AxPurchReqLine      localPurchReqLine = this.axOrig() as AxPurchReqLine;

        if (!priceDisc_LineDiscIdx)
        {
            priceDisc_LineDiscIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_priceDisc_LineDisc))
        {
            this.classCacheInsert(priceDisc_LineDiscIdx, _priceDisc_LineDisc);
            priceDisc_LineDisc = _priceDisc_LineDisc;
        }
        else
        {
            if (this.classCacheExist(priceDisc_LineDiscIdx))
            {
                priceDisc_LineDisc = this.classCacheLookup(priceDisc_LineDiscIdx);
            }
            else
            {
                this.setPriceDisc_LineDiscFields();

                priceDisc_LineDisc =  new PriceDisc_LineDisc();
                priceDisc_LineDisc.parmModuleType(ModuleInventPurchSales::Purch);
                priceDisc_LineDisc.parmItemId(this.parmItemId());
                priceDisc_LineDisc.parmInventDim(this.axInventDim().inventDim());
                priceDisc_LineDisc.parmUnitID(UnitOfMeasure::find(this.parmPurchUnitOfMeasure()).Symbol);
                priceDisc_LineDisc.parmDiscDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                priceDisc_LineDisc.parmQty(this.parmPurchQty());
                priceDisc_LineDisc.parmAccountNum('');
                priceDisc_LineDisc.parmCurrencyCode(localPurchReqLine.parmCurrencyCode());
                priceDisc_LineDisc.parmItemLineDiscCode(this.inventTableRecord().purchLineDisc());

                this.classCacheInsert(priceDisc_LineDiscIdx, priceDisc_LineDisc);
            }
        }

        return priceDisc_LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDisc_Price</Name>
				<Source><![CDATA[
    public PriceDisc_Price priceDisc_Price(PriceDisc_Price _priceDisc_Price = null)
    {
        PriceDisc_Price  priceDisc_Price;
        AxPurchReqLine   localPurchReqLine = this.axOrig() as AxPurchReqLine;

        if (!priceDisc_PriceIdx)
        {
            priceDisc_PriceIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_priceDisc_Price))
        {
            this.classCacheInsert(priceDisc_PriceIdx, _priceDisc_Price);
            priceDisc_Price = _priceDisc_Price;
        }
        else
        {
            if (this.classCacheExist(priceDisc_PriceIdx))
            {
                priceDisc_Price = this.classCacheLookup(priceDisc_PriceIdx);
            }
            else
            {
                this.setPriceDisc_PriceFields();

                priceDisc_Price =  new PriceDisc_Price();
                priceDisc_Price.parmModuleType(ModuleInventPurchSales::Purch);
                priceDisc_Price.parmItemId(this.parmItemId());
                priceDisc_Price.parmInventDim(this.axInventDim().inventDim());
                priceDisc_Price.parmUnitID(UnitOfMeasure::find(this.parmPurchUnitOfMeasure()).Symbol);
                priceDisc_Price.parmPriceDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                priceDisc_Price.parmQty(this.parmPurchQty());
                priceDisc_Price.parmCurrencyCode(localPurchReqLine.parmCurrencyCode());

                this.classCacheInsert(priceDisc_PriceIdx, priceDisc_Price);
            }
        }

        return priceDisc_Price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchReqLine</Name>
				<Source><![CDATA[
    public PurchReqLine purchReqLine(PurchReqLine _purchReqLine = purchReqLine)
    {
        if (!prmisDefault(_purchReqLine))
        {
            this.setCurrentRecordFromExternal(_purchReqLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetInternalValues</Name>
				<Source><![CDATA[
    public void resetInternalValues()
    {
        super();

        axInventDim.inventDim(purchReqLine.inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountingDistributionTemplate</Name>
				<Source><![CDATA[
    protected void setAccountingDistributionTemplate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, AccountingDistributionTemplate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefRecId</Name>
				<Source><![CDATA[
    protected void setAddressRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, AddressRefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefTableId</Name>
				<Source><![CDATA[
    protected void setAddressRefTableId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, AddressRefTableId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetGroup</Name>
				<Source><![CDATA[
    protected void setAssetGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, AssetGroup)))
        {
            return;
        }

        this.setAxPurchReqTableFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAttention</Name>
				<Source><![CDATA[
    protected void setAttention()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, Attention)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAxPurchReqTableFields</Name>
				<Source><![CDATA[
    public void setAxPurchReqTableFields()
    {
        this.setPurchReqTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAxPurchTableFields</Name>
				<Source><![CDATA[
    public void setAxPurchTableFields()
    {
        this.setPurchReqTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBusinessJustification</Name>
				<Source><![CDATA[
    protected void setBusinessJustification()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, BusinessJustification)))
        {
            return;
        }

        this.setAxPurchReqTableFields();

        if (this.isAxPurchReqTableFieldsSet() || this.axPurchReqTable().isFieldModified(fieldNum(PurchReqTable, BusinessJustification)))
        {
            this.parmBusinessJustification(this.axPurchReqTable().parmBusinessJustification());
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBusinessJustificationDescription</Name>
				<Source><![CDATA[
    protected void setBusinessJustificationDescription()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, BusinessJustification)))
        {
            return;
        }

        this.setAxPurchReqTableFields();

        if (this.isAxPurchReqTableFieldsSet() || this.axPurchReqTable().isFieldModified(fieldNum(PurchReqTable, BusinessJustification)))
        {
            this.parmBusinessJustificationDescription(this.axPurchReqTable().parmBusinessJustificationDescription());
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCFOPTable_BR</Name>
				<Source><![CDATA[
    protected void setCFOPTable_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, cfopTable_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCFPSTable_BR</Name>
				<Source><![CDATA[
    protected void setCFPSTable_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, cfpsTable_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, CurrencyCode)))
        {
            return;
        }

        this.setAxPurchReqTableFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
    protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, DefaultDimension)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    protected void setDeliveryName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, DeliveryName)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDistributionTemplate</Name>
				<Source><![CDATA[
    protected void setDistributionTemplate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, AccountingDistributionTemplate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExternalItemId</Name>
				<Source><![CDATA[
    protected void setExternalItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, ExternalItemId)))
        {
            return;
        }

        this.setVendExternalItemDescriptionFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    protected void setInventDimId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, InventDimId)))
        {
            return;
        }

        this.axInventDim().setInventDimId();

        if (this.axInventDim().isFieldSet(fieldNum(InventDim, InventDimId)))
        {
            this.parmInventDimId(this.axInventDim().parmInventDimId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    protected void setInventLocationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, InventLocationId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTableRecordFields</Name>
				<Source><![CDATA[
    public void setInventTableRecordFields()
    {
        this.setItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsPreEncumbranceRequired</Name>
				<Source><![CDATA[
    protected void setIsPreEncumbranceRequired()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, IsPreEncumbranceRequired)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsPurchaseOrderGenerationManual</Name>
				<Source><![CDATA[
    protected void setIsPurchaseOrderGenerationManual()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, IsPurchaseOrderGenerationManual)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemId</Name>
				<Source><![CDATA[
    protected void setItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, ItemId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    protected void setLineAmount()
    {
        AxPurchReqLine localPurchReqLine = this.axOrig() as AxPurchReqLine;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, LineAmount)))
        {
            return;
        }

        this.setPriceUnit();
        this.setLineDisc();
        this.setLinePercent();
        this.setPurchQty();

        if (this.isFieldSet(fieldNum(PurchReqLine, PurchPrice))    ||
            this.isFieldSet(fieldNum(PurchReqLine, PriceUnit))     ||
            this.isFieldSet(fieldNum(PurchReqLine, LineDisc))      ||
            this.isFieldSet(fieldNum(PurchReqLine, LinePercent))   ||
            this.isFieldSet(fieldNum(PurchReqLine, PurchQty))      ||
            this.isFieldSet(fieldNum(PurchReqLine, PurchMarkup)))
        {
            this.parmLineAmount(this.currentRecord().calcLineAmountForced());
            return;
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(PurchReqLine, CurrencyCode)))
        {
            if (localPurchReqLine.parmCurrencyCode())
            {
                this.parmLineAmount(CurrencyExchangeHelper::curAmount2CurAmount(this.parmLineAmount(), localPurchReqLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineComplete</Name>
				<Source><![CDATA[
    protected void setLineComplete()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, LineComplete)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    protected void setLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, LineDisc)))
        {
            return;
        }

        if (this.isFieldSetExternally(fieldNum(PurchReqLine, LineAmount)))
        {
            this.parmLineDisc(0);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, LineNum)))
        {
            return;
        }

        this.setPurchReqTable();

        if (this.isFieldSet(fieldNum(PurchReqLine, PurchReqTable)))
        {
            if (!lineNum)
            {
                lineNum = PurchReqLine::lastLineNum(this.parmPurchReqTable());
            }
            lineNum +=1;

            this.parmLineNum(lineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePercent</Name>
				<Source><![CDATA[
    protected void setLinePercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, LinePercent)))
        {
            return;
        }

        if (this.isFieldSetExternally(fieldNum(PurchReqLine, LineAmount)))
        {
            this.parmLinePercent(0);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineType</Name>
				<Source><![CDATA[
    protected void setLineType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, LineType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setName</Name>
				<Source><![CDATA[
    protected void setName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, Name)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc_LineDiscFields</Name>
				<Source><![CDATA[
    protected void setPriceDisc_LineDiscFields()
    {
        this.setItemId();
        this.setPurchQty();
        this.setPurchUnitOfMeasure();
        this.setItemId();
        this.setAxPurchReqTableFields();
        this.axInventDim().setPurchPriceDiscFields(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc_PriceFields</Name>
				<Source><![CDATA[
    protected void setPriceDisc_PriceFields()
    {
        this.setItemId();
        this.setPurchQty();
        this.setPurchUnitOfMeasure();
        this.setInventTableRecordFields();
        this.setAxPurchReqTableFields();
        this.axInventDim().setPurchPriceDiscFields(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDiscountTransfer</Name>
				<Source><![CDATA[
    protected void setPriceDiscountTransfer()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PriceDiscountTransfer)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceUnit</Name>
				<Source><![CDATA[
    protected void setPriceUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PriceUnit)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchId</Name>
				<Source><![CDATA[
    protected void setPurchId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PurchId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchLineCreated</Name>
				<Source><![CDATA[
    protected void setPurchLineCreated()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PurchLineCreated)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchMarkup</Name>
				<Source><![CDATA[
    protected void setPurchMarkup()
    {
        AxPurchReqLine localPurchReqLine = this.axOrig() as AxPurchReqLine;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PurchMarkup)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(PurchReqLine, LineAmount)))
        {
            this.parmPurchMarkup(0);
            return;
        }

        this.setPriceDisc_PriceFields();

        if (this.isPriceDisc_PriceFieldsSet())
        {
            this.parmPurchMarkup(this.priceDisc_Price().priceMarkup());
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(PurchReqLine, CurrencyCode)))
        {
            if (localPurchReqLine.parmCurrencyCode())
            {
                this.parmPurchMarkup(ExchangeRateHelper::curPrice2CurPrice(this.parmPurchMarkup(), localPurchReqLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchPrice</Name>
				<Source><![CDATA[
    protected void setPurchPrice()
    {
        AxPurchReqLine localPurchReqLine = this.axOrig() as AxPurchReqLine;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PurchPrice)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(PurchReqLine, LineAmount)))
        {
            this.parmPurchPrice(0);
            return;
        }

        this.setPriceDisc_PriceFields();

        if (this.isPriceDisc_PriceFieldsSet())
        {
            this.parmPurchPrice(this.priceDisc_Price().price());
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, CurrencyCode)))
        {
            if (localPurchReqLine.parmCurrencyCode())
            {
                this.parmPurchPrice(ExchangeRateHelper::curPrice2CurPrice(this.parmPurchPrice(), localPurchReqLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchQty</Name>
				<Source><![CDATA[
    protected void setPurchQty()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PurchQty)))
        {
            return;
        }

        this.setInventTableRecordFields();

        this.setPurchUnitOfMeasure();

        if (this.isFieldSet(fieldNum(PurchReqLine, PurchUnitOfMeasure)))
        {
            this.parmPurchQty(decRound(this.parmPurchQty(), UnitOfMeasure::unitOfMeasureDecimalPrecision(this.parmPurchUnitOfMeasure())));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchReqTable</Name>
				<Source><![CDATA[
    protected void setPurchReqTable()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PurchReqTable)))
        {
            return;
        }

        if (!this.parmPurchReqTable())
        {
            this.parmPurchReqTable(this.axPurchReqTable().parmRecId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchUnitOfMeasure</Name>
				<Source><![CDATA[
    protected void setPurchUnitOfMeasure()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, PurchUnitOfMeasure)))
        {
            return;
        }

        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.parmPurchUnitOfMeasure(UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTableRecord().purchUnitId()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReasonRefRecId</Name>
				<Source><![CDATA[
    protected void setReasonRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, ReasonRefRecId)))
        {
            return;
        }

        this.setAxPurchReqTableFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequiredDate</Name>
				<Source><![CDATA[
    protected void setRequiredDate()
    {
        int64                       orgArray[];

        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, RequiredDate)))
        {
            return;
        }

        this.setAxPurchReqTableFields();

        if (this.isAxPurchReqTableFieldsSet() || this.axPurchReqTable().isFieldModified(fieldNum(PurchReqTable, RequiredDate)))
        {
            this.parmRequiredDate(this.axPurchReqTable().parmRequiredDate());

            orgArray[1] = CompanyInfo::findDataArea(curext()).RecId;

            if (PurchReqControlRule::findPurchReqControlRuleParameters(orgArray).IsReqDateTransDate)
            {
                this.parmTransDate(this.axPurchReqTable().parmRequiredDate());
            }

            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequisitionStatus</Name>
				<Source><![CDATA[
    protected void setRequisitionStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, RequisitionStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQCaseId</Name>
				<Source><![CDATA[
    protected void setRFQCaseId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, rfqCaseId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesPurchOperationType_BR</Name>
				<Source><![CDATA[
    protected void setSalesPurchOperationType_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, SalesPurchOperationType_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSequenceNumber</Name>
				<Source><![CDATA[
    protected void setSequenceNumber()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, SequenceNumber)))
        {
            return;
        }

        this.setPurchReqTable();

        if (this.isFieldSet(fieldNum(PurchReqLine, PurchReqTable)))
        {
            if (!sequenceNumber)
            {
                sequenceNumber = any2int(PurchReqLine::lastLineNum(this.parmPurchReqTable()));
            }
            sequenceNumber +=1;

            this.setField(fieldNum(PurchReqLine, SequenceNumber), this.purchReqLine().LineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSourceDocumentLine</Name>
				<Source><![CDATA[
    protected void setSourceDocumentLine()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, SourceDocumentLine)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setPurchReqTable();
        this.setLineNum();
        this.setItemId();
        this.setRequisitionStatus();
        this.setName();
        this.setPriceUnit();
        this.setCurrencyCode();
        this.setLinePercent();
        this.setLineDisc();
        this.setLineAmount();
        this.setInventDimId();
        this.setExternalItemId();
        this.setPurchUnitOfMeasure();
        this.setVendAccount();
        this.setAddressRefRecId();
        this.setAddressRefTableId();
        this.setAttention();
        this.setPurchQty();
        this.setTaxItemGroup();
        this.setInventDimId();
        this.setDeliveryName();
        this.setRequiredDate();
        this.setTransDate();
        this.setBusinessJustification();
        this.setSequenceNumber();
        this.setPriceDiscountTransfer();

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            this.setCFOPTable_BR();
            this.setCFPSTable_BR();
            this.setTaxServiceCode_BR();
            this.setSalesPurchOperationType_BR();
        }
        // </GBR>

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFieldsForce</Name>
				<Source><![CDATA[
    void setTableFieldsForce()
    {
        this.setTableFields();

        this.setDimensionEntitySpecifiers();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxItemGroup</Name>
				<Source><![CDATA[
    protected void setTaxItemGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, TaxItemGroup)))
        {
            return;
        }

        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.parmTaxItemGroup(this.inventTableRecord().purchTaxItemGroupId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxServiceCode_BR</Name>
				<Source><![CDATA[
    protected void setTaxServiceCode_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, TaxServiceCode_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransDate</Name>
				<Source><![CDATA[
    protected void setTransDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, TransDate)))
        {
            return;
        }

        this.setAxPurchReqTableFields();

        if (this.axPurchReqTable().isFieldModified(fieldNum(PurchReqTable, TransDate)))
        {
            this.parmTransDate(this.axPurchReqTable().parmTransDate());
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setURL</Name>
				<Source><![CDATA[
    protected void setURL()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, url)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendAccount</Name>
				<Source><![CDATA[
    protected void setVendAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchReqLine, VendAccount)))
        {
            return;
        }

        this.setAxPurchReqTableFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendExternalItemDescriptionFields</Name>
				<Source><![CDATA[
    protected void setVendExternalItemDescriptionFields()
    {
        this.setItemId();
        this.axInventDim().setConfigId();
        this.setAxPurchReqTableFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventDim</Name>
				<Source><![CDATA[
    public void updateFromInventDim()
    {
        //When updating axPurchReqLine through an instance of axInventDim_PurchReqLine only
        //this.setInventDimId() is allowed to be called, not the entire setTableFields()
        //as is done through the save-method.

        ttsbegin;

        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        this.setInventDimId();
        inventDimIdDirtySaved = false;

        this.validateWrite();

        this.write();

        purchReqLine.InventDimId = InventDim::inventDimIdBlank();

        this.resetInternalValues();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>super</c> method for the current record and logs an error for validation failures.
    /// </summary>
    /// <param name="_field">
    /// The field identifier that corresponds to the field being validated.
    /// </param>
    /// <remarks>
    /// An error will be thrown when the <c>continueOnError</c> parameter is set to false for endpoint.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// Creation has been canceled.
    /// </exception>
    protected void validateField(FieldId _field)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxPurchReqLine construct()
    {
        return new AxPurchReqLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchReqLine</Name>
				<Source><![CDATA[
    public static AxPurchReqLine newPurchReqLine(PurchReqLine _purchReqLine)
    {
        AxPurchReqLine axPurchReqLine = AxPurchReqLine::construct();

        axPurchReqLine.purchReqLine(_purchReqLine);

        return axPurchReqLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>