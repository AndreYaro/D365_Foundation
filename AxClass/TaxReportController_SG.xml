<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportController_SG</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxReportController_SG</c> class is the controller class for the <c>TaxReport_SG</c> report.
/// </summary>
public class TaxReportController_SG extends SrsReportRunController implements BatchRetryable
{
    #define.ReportName('TaxReport_SG.Report')

    TaxReport           taxReport;
    TaxReportVoucher    taxReportVoucher;

    // The following global variable fields from Begin... to End... comments has been moved to TaxReportDP_SG,
    // These variables are obsoleted, please do not use them any more.
    // Begin...
    TaxTrans            localTaxTrans;
    TaxTable            taxTable;
    TaxReportTmp_SG     taxReportTmp_SG;

    TaxRepVersion       taxRepVersion;
    TaxPeriod           taxPeriod;
    TransDate           fromDate;
    TransDate           toDate;
    TaxVersion          taxRepCounter;
    TransDate           transDate;
    Voucher             voucher;
    NoYes               taxReported;

    TaxBase             amountStd;
    TaxBase             amountZero;
    TaxBase             amountExmpt;
    TaxBase             amountTaxPurch;
    TaxBase             amountOpTaxDue;
    TaxBase             amountIpTaxRefund;
    TaxBase             amountNetGST;
    TaxBase             amountMES;

    Query               query;
    QueryRun            queryRun;
    Name                taxVersionParam;
    QueryBuildRange     qbr;
    // End...

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceSG00003, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>TaxReport_SG</c> report.
    /// </summary>
    /// <param name="_args">
    ///    The context.
    /// </param>
    public void init(Args _args)
    {
        TaxReportContract_SG     contract;
        contract = this.parmReportContract().parmRdpContract() as TaxReportContract_SG;

        if (_args && _args.dataset() == tablenum(TaxReportVoucher))
        {
            taxReportVoucher = _args.record();

            contract.parmTaxRepVerisonContract(taxReportVoucher.TaxRepVersion);
            contract.parmTaxPeriodContract(taxReportVoucher.TaxPeriod);
            contract.parmTaxFromDateContract(taxReportVoucher.FromDate);
            contract.parmTaxToDateContract(taxReportVoucher.ToDate);
            contract.parmTaxRepCounterContract(taxReportVoucher.TaxRepCounter);
            contract.parmTransDateContract(taxReportVoucher.TransDate);
            contract.parmVoucher(taxReportVoucher.Voucher);
        }
        else if (_args &&
            (classidget(_args.parmObject()) == classnum(TaxReport) ||
             classidget(_args.parmObject()) == classnum(TaxReportAdjustTrans)))
        {
            taxReport      = _args.parmObject();

            contract.parmTaxRepVerisonContract( taxReport.taxRepVersion());
            contract.parmTaxPeriodContract(taxReport.taxPeriod());
            contract.parmTaxFromDateContract(taxReport.fromDate());
            contract.parmTaxToDateContract(taxReport.toDate());
            contract.parmReported(taxReport.taxReported());
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        this.init(this.parmArgs());
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        SrsReportRunController  controller = new TaxReportController_SG();
        controller.parmReportName(#ReportName);
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>