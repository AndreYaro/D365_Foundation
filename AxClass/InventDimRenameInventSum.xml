<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimRenameInventSum</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventDimRenameInventSum</c> class handles renaming an inventory dimension values for the <c>InventSum</c> table.
/// </summary>
[SysTableNameFactory(tableStr(InventSum))]
class InventDimRenameInventSum extends InventDimRenameTable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>renameInventDimValues</Name>
				<Source><![CDATA[
    public void renameInventDimValues()
    {
        InventSum               inventSum;
        InventDim               inventDimExistsJoin;
        int                     cnt;
        FieldId                 dimFieldId = this.dimFieldId();
        InventDimParm           inventDimParm;

        inventDimParm.(InventDim::dim2dimParm(dimFieldId)) = NoYes::Yes;

        if (InventUseDimOfInventSumForPublicQueryToggle::instance().isEnabled())
        {
            while select forupdate inventSum
            where inventSum.ItemId      == itemId &&
            #InventDimFieldsFilter(inventSum, inventDimOrig, inventDimParm)
            {
                this.renameInventDimValuesUptake(inventSum, dimFieldId);
                cnt++;
            }
        }
        else
        {
            while select forupdate inventSum
            where inventSum.ItemId      == itemId
            #InventDimExistsJoin(inventSum.inventDimId, inventDimExistsJoin, inventDimOrig, inventDimParm)
            {
                this.renameInventDimValuesUptake(inventSum, dimFieldId);
                cnt++;
            }
        }

        if (cnt)
        {
            info(strFmt("@SYS74545", cnt, tableStr(InventSum)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>renameInventDimValuesUptake</Name>
				<Source><![CDATA[
    private void renameInventDimValuesUptake(InventSum _inventSum, FieldId _dimFieldId)
    {
        InventDim inventDimThis = InventDim::find(_inventSum.InventDimId);
        inventDimThis.(_dimFieldId) = inventDim.(_dimFieldId);
        inventDimThis = InventDim::findOrCreate(inventDimThis);
        InventSum inventSumExisting = InventSum::find(itemId, inventDimThis.InventDimId, true);
        if (inventSumExisting && inventSumExisting.RecId != _inventSum.RecId)
        {
            inventSumExisting.merge(_inventSum);
            _inventSum.doUpdate();
            inventSumExisting.doDelete();
        }
        else
        {
            _inventSum.InventDimId = inventDimThis.InventDimId;
            _inventSum.update();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>