<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportDP_SE</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxReportDP_SE</c> class is a report data provider (RDP) class for the associated SSRS
///    <c>TaxReport_SE</c> report.
/// </summary>
/// <remarks>
///    This is the RDP class for the <c>TaxReport_SE</c> SSRS report.
/// </remarks>
[
    SRSReportParameterAttribute(classStr(TaxReportContract_W))
]
[SysObsolete('This class is no longer used.', true, 01\12\2022)]
public class TaxReportDP_SE extends SRSReportDataProviderBase
{
    TaxReportTmp_SE taxReportTmp_SE;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTaxReportTmp_SE</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the data from the <c>TaxReportTmp_SE</c> table.
    /// </summary>
    /// <returns>
    ///    The data from the <c>TaxReportTmp_SE</c> table.
    /// </returns>
    [SRSReportDataSetAttribute('TaxReportDS_SE')]
    public TaxReportTmp_SE getTaxReportTmp_SE()
    {
        select * from taxReportTmp_SE;
        return taxReportTmp_SE;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the SSRS report business logic
    /// </summary>
    /// <remarks>
    ///    This method provides the ability to write the report business logic.This method will be called by
    ///    SSRS at runtime.The method should compute data and populate the data tables that will be returned
    ///    to SSRS.
    /// </remarks>
    public void processReport()
    {
        SRSReportRunPermission r;
        TaxReportContract_W contract;

        contract = this.parmDataContract() as TaxReportContract_W;

        r = new SRSReportRunPermission();
        r.assert();

        taxReportTmp_SE = SRSTmpTblMarshaller::getTmpTbl(contract.parmSrsTmpTblMarshallerContract().parmTmpTableDataRecId());
        //SRSTmpTblMarshaller::deleteTmpTblData(contract.parmTmpTableDataRecId());
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>