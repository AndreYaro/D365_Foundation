<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCommitmentCarryFwdPOAcctDist_PSNFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When <c>PurchCommitmentCarryFwdPOAcctDistFlight </c> is enabled, the logic is changed for retrieving
/// the active distributions for carried forward Purchase Orders relieving Purchasing Commitments to make sure 
/// to not include the Closing <c>AccountingDistribution</c> record as part of the active distribution.
/// </summary>
/// <remarks>
/// Purchase commitments are carried forward with Purchase Orders, resulting in a different data state for the PO <c>AccountingDistribution</c>
/// Opening record(s). They reference the purcahse commitment in the new year instead of the Closing transaction. This breaks the base 
/// <c>AccountingDistributionProcessor</c> logic for getting the active accounting distribution, resulting in the Closing distribution being
/// incorrectly considered as part of the active distributions for the PO.
/// </remarks>
internal final class PurchCommitmentCarryFwdPOAcctDist_PSNFlight extends Flight
{
    static private PurchCommitmentCarryFwdPOAcctDist_PSNFlight singleton = new PurchCommitmentCarryFwdPOAcctDist_PSNFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static PurchCommitmentCarryFwdPOAcctDist_PSNFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>