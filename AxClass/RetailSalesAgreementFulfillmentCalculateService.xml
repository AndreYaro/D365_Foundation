<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesAgreementFulfillmentCalculateService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Service to calculate sales agreement fulfillment value.
/// </summary>
internal class RetailSalesAgreementFulfillmentCalculateService extends SysOperationServiceBase
{
    private BatchHeader batchHeader;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructSyncBatch</Name>
				<Source><![CDATA[
    private RetailCDXScheduleRunner constructSyncBatch()
    {
        RetailCDXScheduleRunner operationSync = new RetailCDXScheduleRunner();
        RetailConnSchedule schedule;
        BatchInfo batchSyncInfo;

        schedule = RetailConnSchedule::find('1025');

        if (schedule)
        {
            batchSyncInfo = operationSync.batchInfo();
            batchSyncInfo.parmCaption('CDX job 1025 for sales agreement fulfillment'); // Description Batch Job
            batchSyncInfo.parmBatchExecute(NoYes::Yes);
            operationSync.paramScheduleRecID(schedule.RecId);
        }

        return operationSync;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processOperation</Name>
				<Source><![CDATA[
    public void processOperation()
    {
        RetailSalesAgreementFulfillmentCalculate calculateBatch = RetailSalesAgreementFulfillmentCalculate::construct();

        RetailCDXScheduleRunner syncBatch = this.constructSyncBatch();

        if (!batchHeader)
        {
            batchHeader = BatchHeader::construct();
        }

        batchHeader.addTask(calculateBatch);
        batchHeader.addTask(syncBatch);
        batchHeader.addDependency(syncBatch, calculateBatch, BatchDependencyStatus::Finished);
        batchHeader.save();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>