<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanStagingTableFillerInventTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ReqDemPlanStagingTableFillerInventTrans</c> class reads and filters the staging table based on inventory transactions.
/// </summary>
[ReqDemPlanStagingTableFillerAttribute]
class ReqDemPlanStagingTableFillerInventTrans extends ReqDemPlanStagingTableFiller
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Provides the description of the staging table filler.
    /// </summary>
    /// <returns>
    ///     The string description of the staging table filler.
    /// </returns>
    public ReqDemPlanStagingTableProcessorDesc description()
    {
        return "@SYS1286";
    }

]]></Source>
			</Method>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    public int64 execute(
        ReqDemPlanCubeStagingTable              _stagingTable,
        ReqDemPlanExportBaseDataContract        _dataContract,
        RefRecId                                _version,
        ReqDemPlanDataSourceRecId               _dataSource,
        ReqDemPlanAllocationKeyFilterTmp        _allocationKeyFilterTable)
    {
        InventTable                             inventTable;
        InventTrans                             inventTrans;
        InventTransOrigin                       inventTransOrigin;
        InventDim                               inventDim;
        InventDim                               itemAllocationInventDim;
        ReqProductForecastingUomConversionCache productUomConversionCache;
        ForecastItemAllocationLine              itemAllocationLine;

        date                                    includeNonDeductedTransFromDate;
        int64                                   rowCount;

        if (_dataContract.parmHistoricalEnd() < _dataContract.parmTodaysDate())
        {
            includeNonDeductedTransFromDate = _dataContract.parmHistoricalEnd() + 1;
        }
        else
        {
            includeNonDeductedTransFromDate = _dataContract.parmTodaysDate();
        }

        #inventDimDevelop

        insert_recordset _stagingTable
        (
            AllocationKey, Version, DataSource, ItemId,
            InventTransOrigin, InventDimId, InventTransRecId, TransactionDate, TransactionQty,
            TransactionType,
            Site, Warehouse, Configuration, Color, ProductVersion, Size, Style, StatusId
        )
        select forceSelectOrder forceNestedLoop AllocationId from itemAllocationLine
        join _allocationKeyFilterTable
            where _allocationKeyFilterTable.AllocateId == itemAllocationLine.AllocationId
        join  _version, _dataSource, ItemId
            from inventTable
        where inventTable.ItemId == itemAllocationLine.ItemId
        join InventTransOrigin, InventDimId, RecId, DateExpected, Qty
            from inventTrans
        where  inventTrans.ItemId   == inventTable.ItemId
            && inventTrans.Qty      <  0
            && !inventTrans.PackingSlipReturned
            && (    inventTrans.StatusIssue == StatusIssue::Deducted
                ||  inventTrans.StatusIssue == StatusIssue::Sold
                || (inventTrans.StatusIssue != StatusIssue::None && inventTrans.DateExpected >= includeNonDeductedTransFromDate)
                )
            && inventTrans.StatusReceipt == StatusReceipt::None
            && inventTrans.DateExpected >= _dataContract.parmHistoricalStart()
            && inventTrans.DateExpected <= _dataContract.actualDemandEndDate()
        join ReferenceCategory from inventTransOrigin
            where  inventTransOrigin.DataAreaId == inventTrans.DataAreaId
                && inventTransOrigin.RecId      == inventTrans.InventTransOrigin
                && (    (inventTransOrigin.ReferenceCategory == InventTransType::Sales && _allocationKeyFilterTable.SalesOrder)
                    ||  (inventTransOrigin.ReferenceCategory == InventTransType::ProdLine && _allocationKeyFilterTable.ProductionLine)
                    ||  (inventTransOrigin.ReferenceCategory == InventTransType::SalesQuotation && _allocationKeyFilterTable.SalesQuotation)
                    ||  (inventTransOrigin.ReferenceCategory == InventTransType::InventTransaction && _allocationKeyFilterTable.InventTransaction)
                    ||  (inventTransOrigin.ReferenceCategory == InventTransType::KanbanJobPickingList && _allocationKeyFilterTable.KanbanJobPickingList)
                    ||  (inventTransOrigin.ReferenceCategory == InventTransType::KanbanJobTransferIssue && _allocationKeyFilterTable.KanbanJobTransferIssue)
                    ||  (inventTransOrigin.ReferenceCategory == InventTransType::InventTransfer && _allocationKeyFilterTable.InventTransfer)
                    ||  (inventTransOrigin.ReferenceCategory == InventTransType::TransferOrderShip && _allocationKeyFilterTable.InventTransfer)
                    ||  (inventTransOrigin.ReferenceCategory == InventTransType::Project && _allocationKeyFilterTable.Project))
        join InventSiteId, InventLocationId, ConfigId, InventColorId, InventVersionId, InventSizeId, InventStyleId, InventStatusId
        from inventDim
            where inventDim.InventDimId == inventTrans.InventDimId
        exists join itemAllocationInventDim
            where itemAllocationInventDim.InventDimId    == itemAllocationLine.InventDimId
                && itemAllocationInventDim.ConfigId      == inventDim.ConfigId
                && itemAllocationInventDim.InventSizeId  == inventDim.InventSizeId
                && itemAllocationInventDim.InventColorId == inventDim.InventColorId
                && itemAllocationInventDim.InventVersionId == inventDim.InventVersionId
                && itemAllocationInventDim.InventStyleId == inventDim.InventStyleId
        exists join productUomConversionCache
            where productUomConversionCache.Product      == inventTable.Product;

        rowCount = _stagingTable.RowCount();

        return rowCount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>