<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgIndirectActivityDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgIndirectActivityDP</c> class fetches records for the <c>JmgIndirectActivity</c> report.
/// </summary>
[
    SRSReportQueryAttribute(querystr(JmgIndirectActivityQuery))
]
public class JmgIndirectActivityDP extends SRSReportDataProviderBase
{
    JmgTmpIndirectActivity      jmgTmpIndirectActivity;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getJmgTmpIndirectActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data from the <c>JmgTmpIndirectActivity</c> temporary table.
    /// </summary>
    /// <returns>
    /// The data from the <c>JmgTmpIndirectActivity</c> temporary table.
    /// </returns>
    [
        SRSReportDataSetAttribute('JmgTmpIndirectActivity')
    ]
    public JmgTmpIndirectActivity getJmgTmpIndirectActivity()
    {
        select jmgTmpIndirectActivity;
        return jmgTmpIndirectActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches the required data for the <c>JmgIndirectActivity</c> report.
    /// </summary>
    public void processReport()
    {
        JmgIpcActivity          jmgIpcActivity;
        QueryRun                queryRun = new SysQueryRun(this.parmQuery());

            while (queryRun.next())
            {
                jmgIpcActivity = queryRun.get(tablenum(JmgIpcActivity));

                // Skip absence. Absence is not defined in SFC.
                if (jmgIpcActivity.Type == JmgStampTypeEnum::Absence)
                {
                    continue;
                }

                jmgTmpIndirectActivity.Activity                 = jmgIpcActivity.Activity;
                jmgTmpIndirectActivity.Category                 = jmgIpcActivity.Category;
                jmgTmpIndirectActivity.Description              = jmgIpcActivity.Description;
                jmgTmpIndirectActivity.JobId                    = jmgIpcActivity.JobId;

                jmgTmpIndirectActivity.EventApproveLabel        = enum2str(jmgIpcActivity.EventApprove);
                jmgTmpIndirectActivity.EventApprove             = jmgIpcActivity.EventApprove;

                jmgTmpIndirectActivity.BreakDropLabel           = enum2str(jmgIpcActivity.BreakDrop);
                jmgTmpIndirectActivity.BreakDrop                = jmgIpcActivity.BreakDrop;

                jmgTmpIndirectActivity.BreakPayableLabel        = enum2str(jmgIpcActivity.BreakPayable);
                jmgTmpIndirectActivity.BreakPayable             = jmgIpcActivity.BreakPayable;

                jmgTmpIndirectActivity.TypeLabel                = enum2str(jmgIpcActivity.Type);
                jmgTmpIndirectActivity.Type                     = jmgIpcActivity.Type;

                jmgTmpIndirectActivity.insert();
            }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
