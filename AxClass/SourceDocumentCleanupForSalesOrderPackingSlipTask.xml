<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocumentCleanupForSalesOrderPackingSlipTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data maintenance task to remove unnecessary source document header and line records
/// related to sales order packing slips.
/// </summary>
internal final class SourceDocumentCleanupForSalesOrderPackingSlipTask implements IDataMaintenanceTask
{
    #OCCRetryCount
    private DataMaintenanceTaskResult taskResult;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public DataMaintenanceTaskResult run()
    {
        System.Exception ex;

        taskResult = DataMaintenanceTaskResult::construct();

        ttsbegin;

        try
        {
            using (SysInstrumentationActivityContext activityContext = SourceDocumentCleanupForSalesOrderTaskHelper::getActivityContext(
                classStr(SourceDocumentCleanupForSalesOrderPackingSlipTask),
                SourceDocumentInstrumentationConstants::CleanupHeaderAndLineRecordsForSalesOrderPackSlip))
            {
                this.deleteSourceDocumentLine(activityContext);
                this.deleteSourceDocumentHeader(activityContext);
            }
        }
        catch (Exception::TransientSqlConnectionError)
        {
            if (SysTransientSqlConnectionErrorHandler::retryTransientSqlConnectionError())
            {
                retry;
            }
            else
            {
                throw Exception::Error;
            }
        }
        catch(ex)
        {
            throw ex;
        }

        ttscommit;
       
        return taskResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSourceDocumentHeader</Name>
				<Source><![CDATA[
    internal int deleteSourceDocumentHeader(SysInstrumentationActivityContext _actvityContext = null)
    {
        int impactedRows = 0;

        str sqlStatement = strfmt(@"
            DELETE FROM SOURCEDOCUMENTHEADER
            WHERE RECID IN
            (
            SELECT TOP %1 SDH.RECID
            FROM SOURCEDOCUMENTHEADER SDH
                JOIN CUSTPACKINGSLIPJOUR CPJ ON CPJ.PARTITION = SDH.PARTITION AND CPJ.SOURCEDOCUMENTHEADER = SDH.RECID
            WHERE
                SDH.PARTITION = %2
            AND SDH.SOURCERELATIONTYPE = %3
            AND CPJ.CREATEDDATETIME <= DATEADD(MONTH, -%4, GETUTCDATE())
            AND NOT EXISTS
                (SELECT 1 FROM SOURCEDOCUMENTLINE SDL WHERE SDL.PARTITION = SDH.PARTITION AND SDL.SOURCEDOCUMENTHEADER = SDH.RECID)
            )",
            SourceDocumentCleanupForSalesOrderTaskHelper::MaxRecordsToFix,
            getCurrentPartitionRecId(),
            tableNum(CustPackingSlipJour),
            SourceDocumentCleanupForSalesOrderTaskHelper::FixWindowMonths);

        impactedRows = SourceDocumentCleanupForSalesOrderTaskHelper::executeSQL(sqlStatement);

        if (_actvityContext)
        {
            _actvityContext.addCustomProperty(
                SourceDocumentInstrumentationConstants::NumberOfSourceDocumentHeadersDeletedForSalesOrderPackSlip,
                int2Str(impactedRows));
        }

        if (taskResult)
        {
            taskResult.addMessage(DataMaintenanceMessageContract::constructForLabel(Exception::Info,
            literalStr("@SourceDocumentAccountingFramework:SourceDocumentCleanupSourceDocumentHeaderDeletionInfoMessage"),
            [int2Str(impactedRows)]));
        }

        return impactedRows;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSourceDocumentLine</Name>
				<Source><![CDATA[
    internal int deleteSourceDocumentLine(SysInstrumentationActivityContext _actvityContext = null)
    {
        int impactedRows = 0;

        str sqlStatement = strfmt(@"
            DELETE FROM SOURCEDOCUMENTLINE
            WHERE RECID IN
            (
            SELECT TOP %1 SDL.RECID
            FROM SOURCEDOCUMENTHEADER SDH
                JOIN CUSTPACKINGSLIPJOUR CPJ ON CPJ.PARTITION = SDH.PARTITION AND CPJ.SOURCEDOCUMENTHEADER = SDH.RECID
                JOIN SOURCEDOCUMENTLINE SDL ON SDL.PARTITION = SDH.PARTITION AND SDL.SOURCEDOCUMENTHEADER = SDH.RECID
            WHERE 
                SDH.PARTITION = %2
            AND SDH.SOURCERELATIONTYPE = %3
            AND CPJ.CREATEDDATETIME <= DATEADD(MONTH, -%4, GETUTCDATE())
            )",
            SourceDocumentCleanupForSalesOrderTaskHelper::MaxRecordsToFix,
            getCurrentPartitionRecId(),
            tableNum(CustPackingSlipJour),
            SourceDocumentCleanupForSalesOrderTaskHelper::FixWindowMonths);

        impactedRows = SourceDocumentCleanupForSalesOrderTaskHelper::executeSQL(sqlStatement);

        if (_actvityContext)
        {
            _actvityContext.addCustomProperty(
                SourceDocumentInstrumentationConstants::NumberOfSourceDocumentLinesDeletedForSalesOrderPackSlip,
                int2Str(impactedRows));
        }

        if (taskResult)
        {
            taskResult.addMessage(DataMaintenanceMessageContract::constructForLabel(Exception::Info,
            literalStr("@SourceDocumentAccountingFramework:SourceDocumentCleanupSourceDocumentLineDeletionInfoMessage"),
            [int2Str(impactedRows)]));
        }

        return impactedRows;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public DataMaintenanceCaption caption()
    {
        return literalStr("@SourceDocumentAccountingFramework:SourceDocumentCleanupForSalesOrderPackingSlipTaskCaption");
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>