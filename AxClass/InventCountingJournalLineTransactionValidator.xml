<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCountingJournalLineTransactionValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventCountingJournalLineTransactionValidator</c> class validates inventory transactions for a counting journal line.
/// </summary>
public class InventCountingJournalLineTransactionValidator extends InventJournalLineTransactionValidator
{
    private Map financialDimsToQuantities = new Map(Types::String, Types::Real); // InventDimId -> InventQty
    private Map ownersToQuantities = new Map(Types::String, Types::Real); // InventOwnerId -> InventQty

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromInventJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>InventCountingJournalLineTransactionValidator</c> class.
    /// </summary>
    /// <param name = "_inventJournalTrans">A counting journal line record.</param>
    /// <returns>A new instance of the <c>InventCountingJournalLineTransactionValidator</c> class.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static InventCountingJournalLineTransactionValidator newFromInventJournalTrans(InventJournalTrans _inventJournalTrans)
    {
        var validator = new InventCountingJournalLineTransactionValidator();
        validator.journalLine = _inventJournalTrans;

        return validator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateDimensionQuantityMaps</Name>
				<Source><![CDATA[
    protected void populateDimensionQuantityMaps(boolean _needToCheckInventoryOwners)
    {
        if (_needToCheckInventoryOwners)
        {
            InventDim inventDim = journalLine.inventDim();
            if (inventDim.InventOwnerId_RU)
            {
                this.addQtyToMap(ownersToQuantities, inventDim.InventOwnerId_RU, 0);
            }

            InventTransOriginJournalTrans   inventTransOriginJournalTrans;
            InventTrans                     inventTrans;

            while select TableId from inventTransOriginJournalTrans
                where inventTransOriginJournalTrans.InventJournalDataAreaId == journalLine.DataAreaId
                    && inventTransOriginJournalTrans.InventJournalId        == journalLine.JournalId
                    && inventTransOriginJournalTrans.InventJournalLineNum   == journalLine.LineNum
                join Qty from inventTrans
                    where inventTrans.InventTransOrigin == inventTransOriginJournalTrans.InventTransOrigin
                    join inventDim
                        where inventDim.InventDimId == inventTrans.InventDimId
            {
                if (inventDim.InventOwnerId_RU)
                {
                    this.addQtyToMap(ownersToQuantities, inventDim.InventOwnerId_RU, inventTrans.Qty);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNoMixedCostingImpactQuantityMap</Name>
				<Source><![CDATA[
    protected Map getNoMixedCostingImpactQuantityMap()
    {
        return ownersToQuantities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkJournalLine</Name>
				<Source><![CDATA[
    protected boolean checkJournalLine(boolean _needToCheckInventoryOwners)
    {
        boolean ret = true;

        if (_needToCheckInventoryOwners)
        {
            ret = ret && this.checkNoMixedCostingImpactOwners();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>