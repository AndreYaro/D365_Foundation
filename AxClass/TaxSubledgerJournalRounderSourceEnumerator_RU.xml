<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSubledgerJournalRounderSourceEnumerator_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The Russian specific implementation of the <c>TaxSubledgerJournalRounderSourceEnumerator_RU</c> that fetches records to be processed by TaxSubledgerJourRounder.
/// </summary>
public class TaxSubledgerJournalRounderSourceEnumerator_RU extends TaxSubledgerJournalRounderSourceEnumerator
{
    MonetaryAmountTmpGroup  monetaryAmountGroup;
    TaxMap taxMap;
    DebitCredit curDebitCreditState;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>definitionString</Name>
				<Source><![CDATA[
    public str definitionString()
    {
        return classStr(TaxSubledgerJournalRounderSourceEnumerator_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    public void initialize(TaxMap _taxMap, SubledgerJournalAccountEntryTmpDetail _subledgerJournalAccountEntryTmpDetail, MonetaryAmountTmpGroup  _monetaryAmountGroup)
    {
        taxMap = SysDictTable::newTableId(_taxMap.TableId).makeRecord();
        tmpDetail.linkPhysicalTableInstance(_subledgerJournalAccountEntryTmpDetail);
        monetaryAmountGroup.linkPhysicalTableInstance(_monetaryAmountGroup);

        this.reset();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected void initQuery()
    {
        AccountingDistribution  accountingDistribution;

        select noFetch maxOf(RecId), sum(TransactionCurrencyAmount), sum(AccountingCurrencyAmount), sum(ReportingCurrencyAmount)
            from tmpDetail
            join accountingDistribution
            join taxMap
            join monetaryAmountGroup
            group by tmpDetail.TransactionCurrencyCode,
                     tmpDetail.ExchangeRate1,
                     tmpDetail.ExchangeRate2,
                     tmpDetail.ReportingExchangeRate1,
                     tmpDetail.ReportingExchangeRate2,
                     tmpDetail.ExchangeRateDate,
                     tmpDetail.Ledger,
                     taxMap.TaxCode,
                     monetaryAmountGroup.GroupNumber
            where tmpDetail.IsReversal == NoYes::No //reversal/relieving entries are backing out already rounded entries and should stay as they are
                && tmpDetail.PostingType == LedgerPostingType::Tax
               && tmpDetail.AccountingDistribution == accountingDistribution.RecId
               && accountingDistribution.SourceDocumentLine == taxMap.SourceDocumentLine
               && accountingDistribution.MonetaryAmount == monetaryAmountGroup.MonetaryAmount
               && tmpDetail.DebitCredit == curDebitCreditState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNext</Name>
				<Source><![CDATA[
    public boolean moveNext()
    {
        next tmpDetail;

        if (tmpDetail.RecId != 0)
        {
            return true;
        }
        else if (curDebitCreditState == DebitCredit::Debit)
        {
            curDebitCreditState = DebitCredit::Credit;
            this.initQuery();

            return this.moveNext();
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    public void reset()
    {
        curDebitCreditState = DebitCredit::Debit;

        this.initQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    public str toString()
    {
        return this.current().toString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>TaxSubledgerJournalRounderSourceEnumeratorGeneral</c> object.
    /// </summary>
    /// <returns>
    /// A <c>TaxSubledgerJournalRounderSourceEnumeratorGeneral</c> object.
    /// </returns>
    public static TaxSubledgerJournalRounderSourceEnumerator_RU construct()
    {
        return new TaxSubledgerJournalRounderSourceEnumerator_RU();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>