<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SAFTReportController_LT</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

/// <summary>
/// The class <c>SAFTReportController_LT</c> handles generation of the Standard Audit File report for Lithuania.
/// </summary>
internal class SAFTReportController_LT extends ERFormatMappingRunBaseController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        if (TaxParameters::find().SAFTERFormatMapping_W
            && SAFTERHelper_W::isEqualOrChildSolution(
                str2Guid(SAFTConstants_W::ERSAFTFormatSolutionGuidStr_NO),
                ERSolutionTable::find(ERFormatMappingTable::find(
                    TaxParameters::find().SAFTERFormatMapping_W).Solution).GUID))
        {
            throw error(strFmt(
                "@StandardAuditFile_SAFT_W:SAFTGeneralElectronicReportFeatureValiationLabel6",
                "@StandardAuditFile_SAFT_W:StandardAuditFileForTax",
                fieldPName(TaxParameters, SAFTERFormatMapping_W),
                SAFTERHelper_W::sAFTFormatName_NO()));
        }

        SAFTReportController_LT reportController = SAFTReportController_LT::construct(args);
        reportController.initContract();
        reportController.parmShowDialog(false);
        reportController.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SAFTReportController_LT construct(Args _args)
    {
        IdentifierName className, methodName;
        SysOperationExecutionMode mode;

        [className, methodName, mode] = SysOperationServiceController::parseServiceInfo(_args);
        SAFTReportController_LT controller = new SAFTReportController_LT(className, methodName, mode);
        controller.parmArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether the class instance can run in a new session.
    /// </summary>
    /// <returns>false</returns>
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initContract</Name>
				<Source><![CDATA[
    private void initContract()
    {
        SAFTReportContract_LT contract = this.getDataContractObject() as SAFTReportContract_LT;

        if (contract)
        {
            ERFormatMappingId erFormatMappingId = TaxParameters::find().SAFTERFormatMapping_W;
            contract.parmERFormatMappingId(erFormatMappingId);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>