<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmsRouteAssignment_Sales</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Assigns the routes to the loads associated with the sales order.
/// </summary>
class TmsRouteAssignment_Sales extends TMSRouteAssignment
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assignRoute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assign the carrier/service or route to a Sales Table record.
    /// </summary>
    public void assignRoute()
    {
        SalesTable      salesTable;
        TMSSalesTable   tmsSalesTable;

        salesTable      = common as SalesTable;

        ttsbegin;
        tmsSalesTable   = TMSSalesTable::find(salesTable.SalesId, true);

        if (tmsSalesTable.RecId == 0)
        {
            tmsSalesTable.initFromSalesTable(salesTable.SalesId);
        }
        tmsSalesTable.RouteConfigCode    = routeTable.RouteConfigCode;
        tmsSalesTable.write();

        SalesTable::updateDlvModeFromCarrierService(tmsSalesTable.SalesId, routeTable.CarrierCode, routeTable.CarrierServiceCode, this.updateLines());

        ttscommit;

        if (routeTable.CarrierCode)
        {
            info(strFmt("@TRX874", routeTable.CarrierCode, routeTable.CarrierServiceCode));
        }
        else if (tmsSalesTable.RouteConfigCode)
        {
            info(strFmt("@TRX2543", tmsSalesTable.RouteConfigCode));
        }
        else
        {
            error("@TRX:TMSNoValidRateFoundByAutoRateAssignment");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLines</Name>
				<Source><![CDATA[
    protected boolean updateLines()
    {
        return this.shouldFieldBeUpdated(fieldNum(SalesTable, DlvMode))
            && this.shouldFieldBeUpdated(fieldNum(SalesTable, DlvTerm))
            && this.shouldFieldBeUpdated(fieldNum(SalesTable, Transport));
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldFieldBeUpdated</Name>
				<Source><![CDATA[
    private boolean shouldFieldBeUpdated(FieldId _fieldId)
    {
        return SalesTable2LineParameters::find(tableNum(SalesTable), _fieldId).Table2LineUpdate == TradeTable2LineUpdate::Always;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCommon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes internal variable from <c>SalesTable</c> record.
    /// </summary>
    /// <param name="_common">
    /// The <c>SalesTable</c> record.
    /// </param>
    /// <returns>
    /// True if initialization is successfull; otherwise, false.
    /// </returns>
    public boolean initFromCommon(Common _common)
    {
        SalesTable              salesTable;
        boolean                 ret;

        salesTable              = _common;

        route.InventSiteId      = salesTable.InventSiteId;
        route.InventLocationId  = salesTable.InventLocationId;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates an instance of the <c>TMSRouteAssignment_Sales</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>TMSRouteAssignment_Sales</c> class.
    /// </returns>
    public static TMSRouteAssignment_Sales construct()
    {
        TMSRouteAssignment_Sales  routeAssignment;

        routeAssignment = new TMSRouteAssignment_Sales();

        return routeAssignment;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>