<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchFormLetterApprovalContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchFormLetterApprovalContract</c> class is used as the data contract class for the
/// <c>FormletterService</c> service when you post purchase order approvals.
/// </summary>
[DataContractAttribute]
class PurchFormLetterApprovalContract
extends PurchFormLetterInvoiceContract
{
    TransDate               defaultTransDate;
    TransDate               origTransDate;
    Voucher                 origVoucher;
    boolean                 wasQueryFormCancelled;

    //List of parameters common for FormLetter contract classes that needs to be packed
    //for the correct class transition between client and server.
    //If you need some additional parameters on the client, add them to this list.
    #define.CurrentVersion(2)
    #LOCALMACRO.ParmListPurchApprovalv1
        defaultTransDate,
        origTransDate,
        origVoucher
    #ENDMACRO

    #LOCALMACRO.ParmListPurchApproval
        defaultTransDate,
        origTransDate,
        origVoucher,
        wasQueryFormCancelled
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCanUseParallelism</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the selected records can be posted using batch parallelism.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    public boolean getCanUseParallelism()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentStatus</Name>
				<Source><![CDATA[
        public DocumentStatus getDocumentStatus()
    {
        return DocumentStatus::ApproveJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container  pack()
    {
        documentStatus = this.getDocumentStatus();

        return [#CurrentVersion, #ParmListCommon, #ParmListPurchApproval] + [super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultTransDate</Name>
				<Source><![CDATA[
        [DataMemberAttribute]
    public TransDate parmDefaultTransDate(TransDate _defaultTransDate = defaultTransDate)
    {
        defaultTransDate = _defaultTransDate;
        return defaultTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigTransDate</Name>
				<Source><![CDATA[
        [DataMemberAttribute]
    public TransDate parmOrigTransDate(TransDate _origTransDate = origTransDate)
    {
        origTransDate = _origTransDate;
        return origTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigVoucher</Name>
				<Source><![CDATA[
        [DataMemberAttribute]
    public Voucher parmOrigVoucher(Voucher _origVoucher = origVoucher)
    {
        origVoucher = _origVoucher;
        return origVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWasQueryFormCancelled</Name>
				<Source><![CDATA[
        [DataMemberAttribute]
    public boolean parmWasQueryFormCancelled(boolean _wasQueryFormCancelled = wasQueryFormCancelled)
    {
        wasQueryFormCancelled = _wasQueryFormCancelled;
        return wasQueryFormCancelled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean  unpack(container  _packedClass)
    {
        Integer         version = conPeek(_packedClass, 1);
        container       packedBase;

        switch (version)
        {
            case 1:
                [version, #ParmListCommon, #ParmListPurchApprovalv1, packedBase] = _packedClass;
                return super(packedBase);

            case #CurrentVersion:
                [version, #ParmListCommon, #ParmListPurchApproval, packedBase] = _packedClass;
                return super(packedBase);

            default :
                return super(_packedClass);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static PurchFormLetterApprovalContract construct()
    {
        return new PurchFormLetterApprovalContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>