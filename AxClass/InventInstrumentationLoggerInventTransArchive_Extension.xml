<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInstrumentationLoggerInventTransArchive_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>class InventTransArchiveServiceInstrumentationActivities</c> class adds activities for inventory transaction archiving process activity to the inventory instrumentation logging.
/// </summary>
[ExtensionOf(classStr(InventInstrumentationLogger))]
internal final class InventInstrumentationLoggerInventTransArchive_Extension
{
    private InventTransArchiveServiceInstrumentationActivities inventTransArchiveServiceInstrumentationActivities;
    private InventTransArchiveProcessTaskInstrumentationActivities inventTransArchiveProcessTaskInstrumentationActivities;
    private InventTransArchiveResumeInstrumentationActivities inventTransArchiveResumeInstrumentationActivities;

    private InventTransArchivingReverse_InitInstrumentationActivities inventTransArchivingReverse_InitInstrumentationActivities;
    private InventTransArchivingReverse_RestoreInstrumentationActivities inventTransArchivingReverse_RestoreInstrumentationActivities;
    private InventTransArchivingReverse_EndInstrumentationActivities inventTransArchivingReverse_EndInstrumentationActivities;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventTransArchiveService</Name>
				<Source><![CDATA[
    final internal InventTransArchiveServiceInstrumentationActivities inventTransArchiveService()
    {
        if (!inventTransArchiveServiceInstrumentationActivities)
        {
            inventTransArchiveServiceInstrumentationActivities = InventTransArchiveServiceInstrumentationActivities::newFromLogger(this);
        }

        return inventTransArchiveServiceInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransArchiveProcessTask</Name>
				<Source><![CDATA[
    final internal InventTransArchiveProcessTaskInstrumentationActivities inventTransArchiveProcessTask()
    {
        if (!inventTransArchiveProcessTaskInstrumentationActivities)
        {
            inventTransArchiveProcessTaskInstrumentationActivities = InventTransArchiveProcessTaskInstrumentationActivities::newFromLogger(this);
        }

        return inventTransArchiveProcessTaskInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransArchiveResume</Name>
				<Source><![CDATA[
    final internal InventTransArchiveResumeInstrumentationActivities inventTransArchiveResume()
    {
        if (!inventTransArchiveResumeInstrumentationActivities)
        {
            inventTransArchiveResumeInstrumentationActivities = InventTransArchiveResumeInstrumentationActivities::newFromLogger(this);
        }

        return inventTransArchiveResumeInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransArchivingReverse_Init</Name>
				<Source><![CDATA[
    final internal InventTransArchivingReverse_InitInstrumentationActivities inventTransArchivingReverse_Init()
    {
        if (!inventTransArchivingReverse_InitInstrumentationActivities)
        {
            inventTransArchivingReverse_InitInstrumentationActivities = InventTransArchivingReverse_InitInstrumentationActivities::newFromLogger(this);
        }

        return inventTransArchivingReverse_InitInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransArchivingReverse_Restore</Name>
				<Source><![CDATA[
    final internal InventTransArchivingReverse_RestoreInstrumentationActivities inventTransArchivingReverse_Restore()
    {
        if (!inventTransArchivingReverse_RestoreInstrumentationActivities)
        {
            inventTransArchivingReverse_RestoreInstrumentationActivities = InventTransArchivingReverse_RestoreInstrumentationActivities::newFromLogger(this);
        }

        return inventTransArchivingReverse_RestoreInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransArchivingReverse_End</Name>
				<Source><![CDATA[
    final internal InventTransArchivingReverse_EndInstrumentationActivities inventTransArchivingReverse_End()
    {
        if (!inventTransArchivingReverse_EndInstrumentationActivities)
        {
            inventTransArchivingReverse_EndInstrumentationActivities = InventTransArchivingReverse_EndInstrumentationActivities::newFromLogger(this);
        }

        return inventTransArchivingReverse_EndInstrumentationActivities;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>