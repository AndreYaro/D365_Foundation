<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceTotalsMatchingDetailFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;

[Export(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
[Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
public final class VendInvoiceTotalsMatchingDetailFeature implements IFeatureMetadata, IFeatureMetadataEnablementNotifiable
{
    private static VendInvoiceTotalsMatchingDetailFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    private static void typeNew()
    {
        instance = new VendInvoiceTotalsMatchingDetailFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static VendInvoiceTotalsMatchingDetailFeature instance()
    {
        return VendInvoiceTotalsMatchingDetailFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@AccountsPayable:MatchDetailVendorInvoiceLabel");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::AccountsPayable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@AccountsPayable:MatchDetailVendorInvoiceSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://docs.microsoft.com/en-us/dynamics365/finance/accounts-payable/accounts-payable-invoice-matching';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onEnabled()
    {
        ttsbegin;

        VendParameters vendParameters;
        while select forupdate crosscompany vendParameters
        {
            changecompany (vendParameters.DataAreaId)
            {
                vendParameters.UsePriceMatchingForSubTotalAmount = vendParameters.UseTotalPriceMatching;
                vendParameters.DisplayPriceMatchIconForSubTotalAmount = vendParameters.DisplayTotalPriceMatchIcon;
                vendParameters.PriceTolerancePercentageForSubTotalAmount = vendParameters.TotalPriceTolerancePercentage;

                vendParameters.UsePriceMatchingForTotalDiscount = vendParameters.UseTotalPriceMatching;
                vendParameters.DisplayPriceMatchIconForTotalDiscount = vendParameters.DisplayTotalPriceMatchIcon;
                vendParameters.PriceTolerancePercentageForTotalDiscount = vendParameters.TotalPriceTolerancePercentage;

                vendParameters.UsePriceMatchingForCharges = vendParameters.UseTotalPriceMatching;
                vendParameters.DisplayPriceMatchIconForCharges = vendParameters.DisplayTotalPriceMatchIcon;
                vendParameters.PriceTolerancePercentageForCharges = vendParameters.TotalPriceTolerancePercentage;

                vendParameters.UsePriceMatchingForSalesTax = vendParameters.UseTotalPriceMatching;
                vendParameters.DisplayPriceMatchIconForSalesTax = vendParameters.DisplayTotalPriceMatchIcon;
                vendParameters.PriceTolerancePercentageForSalesTax = vendParameters.TotalPriceTolerancePercentage;

                vendParameters.UsePriceMatchingForInvoiceAmount = vendParameters.UseTotalPriceMatching;
                vendParameters.DisplayPriceMatchIconForInvoiceAmount = vendParameters.DisplayTotalPriceMatchIcon;
                vendParameters.PriceTolerancePercentageForInvoiceAmount = vendParameters.TotalPriceTolerancePercentage;

                vendParameters.UsePriceMatchingForRoundOff = NoYes::No;
                
                vendParameters.doUpdate();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onDisabled()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    public static boolean isEnabled()
    {
        return Dynamics.AX.Application.FeatureStateProvider::isFeatureEnabled(VendInvoiceTotalsMatchingDetailFeature::instance);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>