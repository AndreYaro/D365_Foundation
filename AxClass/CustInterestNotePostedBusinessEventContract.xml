<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInterestNotePostedBusinessEventContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract for a <c>CustInterestNotePostedBusinessEvent</c>.
/// </summary>
[DataContract]
public final class CustInterestNotePostedBusinessEventContract extends BusinessEventsContract
{
    private CustAccount custAccount;
    private InterestNote interestNoteId;
    private StartDate startDate;
    private EndDate endDate;
    private AmountCur totalAmount;
    private InterestAmountCur interestAmount;
    private CustCurrencyCode currencyCode;
    private TaxAmount taxAmount;
    private LegalEntityDataAreaId legalEntity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromCustInterestJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>CustInterestNotePostedBusinessEventContract</c> from a <c>CustInterestJour</c> record.
    /// </summary>
    /// <param name = "_custInterestJour">A <c>CustInterestJour</c> record.</param>
    /// <returns>A <c>CustInterestNotePostedBusinessEventContract</c>.</returns>
    public static CustInterestNotePostedBusinessEventContract newFromCustInterestJour(CustInterestJour _custInterestJour)
    {
        var contract = new CustInterestNotePostedBusinessEventContract();
        contract.initialize(_custInterestJour);
        contract.calculateAmounts(_custInterestJour);

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(CustInterestJour _custInterestJour)
    {
        custAccount = _custInterestJour.AccountNum;
        interestNoteId = _custInterestJour.InterestNote;
        startDate = _custInterestJour.FromDate;
        endDate = _custInterestJour.ToDate;
        currencyCode = _custInterestJour.CurrencyCode;
        taxAmount = _custInterestJour.TaxAmount;
        legalEntity = _custInterestJour.DataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateAmounts</Name>
				<Source><![CDATA[
    private void calculateAmounts(CustInterestJour _custInterestJour)
    {
        totalAmount = _custInterestJour.totalInvoiceAmount();
        interestAmount = _custInterestJour.totalInterestAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerAccount</Name>
				<Source><![CDATA[
    [DataMember('CustAccount'), BusinessEventsDataMember("@AccountsReceivable:CustomerAccount")]
    public CustInvoiceAccount parmCustomerAccount(CustAccount _custAccount = custAccount)
    {
        custAccount = _custAccount;

        return custAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestNoteId</Name>
				<Source><![CDATA[
    [DataMember('InterestNoteId'), BusinessEventsDataMember("@AccountsReceivable:InterestNoteId")]
    public InterestNote parmInterestNoteId(InterestNote _interestNoteId = interestNoteId)
    {
        interestNoteId = _interestNoteId;

        return interestNoteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    [DataMember('StartDate'), BusinessEventsDataMember("@AccountsReceivable:StartDate")]
    public StartDate parmStartDate(StartDate _startDate = startDate)
    {
        startDate = _startDate;

        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    [DataMember('EndDate'), BusinessEventsDataMember("@AccountsReceivable:EndDate")]
    public EndDate parmEndDate(EndDate _endDate = endDate)
    {
        endDate = _endDate;

        return endDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalInvoiceAmount</Name>
				<Source><![CDATA[
    [DataMember('TotalInvoiceAmount'), BusinessEventsDataMember("@AccountsReceivable:TotalInvoiceAmount")]
    public AmountCur parmTotalInvoiceAmount(AmountCur _totalAmount = totalAmount)
    {
        totalAmount = _totalAmount;

        return totalAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterestAmount</Name>
				<Source><![CDATA[
    [DataMember('InterestAmount'), BusinessEventsDataMember("@AccountsReceivable:InterestAmount")]
    public InterestAmountCur parmInterestAmount(InterestAmountCur _interestAmount = interestAmount)
    {
        interestAmount = _interestAmount;

        return interestAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    [DataMember('CurrencyCode'), BusinessEventsDataMember("@AccountsReceivable:CurrencyCode")]
    public CustCurrencyCode parmCurrencyCode(CustCurrencyCode _currencyCode = currencyCode)
    {
        currencyCode = _currencyCode;

        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxAmount</Name>
				<Source><![CDATA[
    [DataMember('TaxAmount'), BusinessEventsDataMember("@AccountsReceivable:TaxAmount")]
    public TaxAmount parmTaxAmount(TaxAmount _taxAmount = taxAmount)
    {
        taxAmount = _taxAmount;

        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntity</Name>
				<Source><![CDATA[
    [DataMember('LegalEntity'), BusinessEventsDataMember("@AccountsReceivable:LegalEntity")]
    public LegalEntityDataAreaId parmLegalEntity(LegalEntityDataAreaId _legalEntity = legalEntity)
    {
        legalEntity = _legalEntity;

        return legalEntity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>