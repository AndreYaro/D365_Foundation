<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalEngine_AssetBudgets_ru</Name>
	<SourceCode>
		<Declaration><![CDATA[
class LedgerJournalEngine_AssetBudgets_ru extends LedgerJournalEngine
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue(LedgerJournalTrans _ledgerJournalTrans, LedgerJournalTrans_Asset _ledgerJournalTrans_Asset = null)
    {
        super(_ledgerJournalTrans, _ledgerJournalTrans_Asset);
  
        _ledgerJournalTrans.OffsetAccountType       = _ledgerJournalTrans.ledgerJournalTable().OffsetAccountType;
        _ledgerJournalTrans.OffsetLedgerDimension   = _ledgerJournalTrans.ledgerJournalTable().OffsetLedgerDimension;
        _ledgerJournalTrans.AccountType             = LedgerJournalACType::FixedAssets_RU;
        _ledgerJournalTrans.CurrencyCode            = CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>posted</Name>
				<Source><![CDATA[
    public NoYes posted()
    {
        return ledgerJournalTable.Posted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the internal caches for the journal and voucher tables and the data source of a specified
    /// <c>LedgerJournalTrans</c> record.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// A <c>LedgerJournalTrans</c> record.
    /// </param>
    /// <param name="_updateCashDisc">
    /// A Boolean value that indicates whether the cash discount of a journal line was manually entered;
    /// optional.
    /// </param>
    /// <param name="_ledgerJournalTrans_Asset">
    /// A <c>LedgerJournalTrans_Asset</c> record.
    /// </param>
    /// <param name="_ledgerJournalTrans_RDeferrals">
    /// A <c>LedgerJournalTrans_RDeferrals</c> record.
    /// </param>
    /// <param name="_ledgerJournalTrans_RCash">
    /// A <c>LedgerJournalTrans_RCash</c> record.
    /// </param>
    /// <remarks>
    /// This method must be called from the <c>LedgerJournalTrans</c> data source of the journal form
    /// <c>write</c> method after the <c>super</c> method call.
    /// </remarks>
    public void write(LedgerJournalTrans             _ledgerJournalTrans,
                      boolean                        _updateCashDisc                 = false,
                      LedgerJournalTrans_Asset       _ledgerJournalTrans_Asset       = null,
                      LedgerJournalTrans_RDeferrals  _ledgerJournalTrans_RDeferrals  = null,
                      LedgerJournalTrans_RCash       _ledgerJournalTrans_RCash       = null)
    {
        RAssetStandardIdDefault standardIdDefault   = RAssetParameters::find().StandardIdDefault;
        RAssetStandards    assetStandardsLocal = RAssetStandards::find(_ledgerJournalTrans.parmAccount(), standardIdDefault);
        LedgerDimensionDefaultAccount   account;

        super(_ledgerJournalTrans, _updateCashDisc, _ledgerJournalTrans_Asset, _ledgerJournalTrans_RDeferrals, _ledgerJournalTrans_RCash);
        account = assetStandardsLocal.assetOffsetLedgerDimension(standardIdDefault, _ledgerJournalTrans.PostingProfile, ledgerJournalTrans_RAsset.TransType, _ledgerJournalTrans.TransDate);
  
        _ledgerJournalTrans.OffsetLedgerDimension = account ? LedgerDimensionFacade::serviceLedgerDimensionFromLedgerDims(
                                                                                      account,
                                                                                      _ledgerJournalTrans.OffsetLedgerDimension) : 0;
        if (FormDataUtil::getFormDataSource(_ledgerJournalTrans))
        {
            FormDataUtil::getFormDataSource(_ledgerJournalTrans).refresh();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>