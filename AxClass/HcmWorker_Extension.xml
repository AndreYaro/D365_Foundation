<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmWorker_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The extensions for the <c>HcmWorker</c> table.
/// </summary>
public static class HcmWorker_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFIO_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns Surname, Name and Middle Name
    /// </summary>
    /// <param name = "_hcmWorker">The <c>HcmWorker</c> record</param>
    /// <returns>
    ///   The full name of the worker.
    /// </returns>
    public static display HcmWorkerName getFIO_RU(HcmWorker _hcmWorker)
    {
        HcmWorkerName strRet;
        DirPersonName personName = DirPersonName::find(_hcmWorker.Person);

        strRet = personName.LastName;

        if (personName.FirstName)
        {
            strRet += ' ' + subStr(personName.FirstName, 1, 1) + '.';
        }

        if (personName.MiddleName)
        {
            strRet += ' ' + subStr(personName.MiddleName, 1, 1) + '.';
        }

        return strRet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPaidByLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether there is a Legal Entity specified on any of the worker's
    /// positions that is used to pay the position.
    /// </summary>
    /// <param name="_workerRecId">
    /// Specifies the worker for which to determine if there is an Legal Entity that
    /// pays one of their positions.
    /// </param>
    /// <returns>
    /// True if there is at least one <c>PayrollPositionDetail</c> record for the worker.
    /// </returns>
    public static boolean isPaidByLegalEntity(HcmWorkerRecId _workerRecId)
    {
        PayrollPositionDetails      payrollPositionDetails;
        HcmPositionWorkerAssignment positionWorkerAssignment;

        utcdatetime minQueryDate = DateTimeUtil::minValue();
        utcdatetime maxQueryDate = DateTimeUtil::maxValue();

        // Determine if there is at least one position with a paid by LE for this worker
        select firstonly validTimeState(minQueryDate, maxQueryDate) PaidByLegalEntity from payrollPositionDetails
        group by PaidByLegalEntity
            join Position, Worker from positionWorkerAssignment
            where positionWorkerAssignment.Position == payrollPositionDetails.Position
            &&    positionWorkerAssignment.Worker == _workerRecId;

        return payrollPositionDetails.PaidByLegalEntity != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>