<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankReconciliationApprovalEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankReconciliationApprovalEventHandler</c> class is the event handler class that is used to
///    manage the workflow approval completed event and the workflow approval returned event.
/// </summary>
class BankReconciliationApprovalEventHandler implements WorkflowElementCompletedEventHandler,
                                                        WorkflowElementReturnedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the completed event for the workflow approval.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void completed(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        if (!BankReconciliationWorkfowEventFlight::instance().isEnabled())
        {
            SysInstrumentationLogger logger = SysInstrumentationLoggerFactory::createLogger(classStr(BankReconciliationApprovalEventHandler));

            using (SysInstrumentationActivityContext context = logger.activityContext(BankInstrumentationConstants::ActivityNameReconciliationWorkflowCompleted, BankInstrumentationConstants::BankNamespace))
            {
                RefRecId reconciliationRecId = _workflowElementEventArgs.parmWorkflowContext().parmRecId();

                context.addCustomProperty(BankInstrumentationConstants::CustomPropertyRecId, int642Str(reconciliationRecId));

                if (reconciliationRecId != 0 && !BankReconciliationHeader::find(reconciliationRecId))
                {
                    context.addCustomProperty(BankInstrumentationConstants::CustomPropertyWorkflowStatus, BankInstrumentationConstants::ErrorRecordNotFound);
                }

                BankReconciliationHeader::setWorkflowStatus(reconciliationRecId, BankReconciliationApprovalWFStatus::Approved);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the returned event for the workflow approval.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        BankReconciliationHeader::setWorkflowStatus(_workflowElementEventArgs.parmWorkflowContext().parmRecId(), BankReconciliationApprovalWFStatus::Rejected);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>