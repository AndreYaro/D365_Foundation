<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxLogisticsLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxLogisticsLocation extends AxInternalBase
{
    LogisticsLocation logisticsLocation;
    int               axAddressIdx;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axAddress</Name>
				<Source><![CDATA[
    public AxLogisticsPostalAddress  axAddress(AxLogisticsPostalAddress  _axAddress = null)
    {
        AxLogisticsPostalAddress  axAddress;

        if (! axAddressIdx)
        {
            axAddressIdx = this.nextCacheIdx();
        }

        if (!prmisdefault(_axAddress))
        {
            this.classCacheInsert(axAddressIdx, _axAddress);
            axAddress = _axAddress;
        }
        else
        {
            if (this.classCacheExist(axAddressIdx))
            {
                axAddress = this.classCacheLookup(axAddressIdx);
            }
            else
            {
                axAddress = AxLogisticsPostalAddress::newLogisticsPostalAddress(LogisticsLocationEntity::constructFromLocationRecId(this.parmRecId()).getPostalAddress());

                this.classCacheInsert(axAddressIdx, axAddress);
            }
        }

        return axAddress;
    }
]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _logisticsLocation = logisticsLocation)
    {
        if (!prmisdefault(_logisticsLocation))
        {
            super(_logisticsLocation);
            logisticsLocation = _logisticsLocation as LogisticsLocation;
        }
        else
        {
            super();
        }

        return logisticsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    protected Common emptyRecord()
    {
        LogisticsLocation localLogisticsLocation;
        return localLogisticsLocation;
    }
]]></Source>
			</Method>
			<Method>
				<Name>logisticsLocation</Name>
				<Source><![CDATA[
    public LogisticsLocation logisticsLocation(LogisticsLocation _logisticsLocation = logisticsLocation)
    {
        if (!prmisdefault(_logisticsLocation))
        {
            this.setCurrentRecordFromExternal(_logisticsLocation);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    public LogisticsDescription parmDescription(LogisticsDescription _description = '')
    {
        if (!prmisdefault(_description))
        {
            this.setField(fieldnum(LogisticsLocation, Description), _description);
        }

        return logisticsLocation.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDunsNumberRecId</Name>
				<Source><![CDATA[
    public LogisticsDunsNumberRecId parmDunsNumberRecId(LogisticsDunsNumberRecId _dunsNumberRecId = 0)
    {
        if (!prmisdefault(_dunsNumberRecId))
        {
            this.setField(fieldnum(LogisticsLocation, DunsNumberRecId), _dunsNumberRecId);
        }

        return logisticsLocation.DunsNumberRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPostalAddress</Name>
				<Source><![CDATA[
    public NoYes parmIsPostalAddress(NoYes _isPostalAddress = NoYes::Yes)
    {
        if (!prmisdefault(_isPostalAddress))
        {
            this.setField(fieldnum(LogisticsLocation, IsPostalAddress), _isPostalAddress);
        }

        return logisticsLocation.IsPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocationId</Name>
				<Source><![CDATA[
    public LogisticsLocationId parmLocationId(LogisticsLocationId _locationId = '')
    {
        if (!prmisdefault(_locationId))
        {
            this.setField(fieldnum(LogisticsLocation, LocationId), _locationId);
        }

        return logisticsLocation.LocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParentLocation</Name>
				<Source><![CDATA[
    public LogisticsLocationRecId parmParentLocation(LogisticsLocationRecId _parentLocation = 0)
    {
        if (!prmisdefault(_parentLocation))
        {
            this.setField(fieldnum(LogisticsLocation, ParentLocation), _parentLocation);
        }

        return logisticsLocation.ParentLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDescription</Name>
				<Source><![CDATA[
    protected void setDescription()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(LogisticsLocation, Description)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDunsNumberRecId</Name>
				<Source><![CDATA[
    protected void setDunsNumberRecId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(LogisticsLocation, DunsNumberRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsPostalAddress</Name>
				<Source><![CDATA[
    protected void setIsPostalAddress()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(LogisticsLocation, IsPostalAddress)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLocationId</Name>
				<Source><![CDATA[
    protected void setLocationId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(LogisticsLocation, LocationId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParentLocation</Name>
				<Source><![CDATA[
    protected void setParentLocation()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(LogisticsLocation, ParentLocation)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setLocationId();
        this.setDescription();
        this.setDunsNumberRecId();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxLogisticsLocation construct()
    {
        return new AxLogisticsLocation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLogisticsLocation</Name>
				<Source><![CDATA[
    public static AxLogisticsLocation newLogisticsLocation(LogisticsLocation _logisticsLocation)
    {
        AxLogisticsLocation axLogisticsLocation = AxLogisticsLocation::construct();
        axLogisticsLocation.logisticsLocation(_logisticsLocation);

        return axLogisticsLocation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>