<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSSourceLineUpdater</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSSourceLineUpdater</c> class is used to update values tracked in WHS tag tables when source lines are updated.
/// </summary>
abstract class WHSSourceLineUpdater
{
    UnitOfMeasureSymbol oldUOMSymbol;
    UnitOfMeasureSymbol newUOMSymbol;
    UnitOfMeasureSymbol inventUOM;
    InventQty           oldInventQty;
    InventQty           newInventQty;
    InventQty           loadLineDiffQty;
    internal protected UnitOfMeasureSymbol inventHandlingUOM;
    internal protected InventHandlingQty   oldInventHandlingQty;
    internal protected InventHandlingQty   newInventHandlingQty;
    internal protected InventHandlingQty   loadLineDiffHandlingQty;
    RefRecId            productRefRecId;  
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromBuffer</Name>
				<Source><![CDATA[
    /// <summary>
	/// Initializes from buffer.
	/// </summary>
	/// <param name="_common">
	/// Common buffer.
	/// </param>
        public abstract void initFromBuffer(Common _common)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set global parameters for the class.
    /// </summary>
    /// <param name="_common">
    /// Record buffer which holds the 'new' values of the source line.
    /// </param>
    /// <param name="_oldInventQty">
    /// The previous inventQty value of the record buffer.
    /// </param>
    /// <param name="_oldUOMSymbol">
    /// The previous UOMSymbol of the record buffer.
    /// </param>
    /// <param name="_loadLineDiffQty">
    /// The change in loadLine qty. (New - old)
    /// </param>
    /// <remarks>
    /// The method should be called after the source order line update so that the common passed in hold the new values.
    /// </remarks>
    [SysObsolete('Method is obsoleted to support catch weight items. Callers should redirect their calls to the setHandlingUpdateQuantities method. Please file an extensibility request if other access is required.', false, 30\9\2019)]
    public void setParameters(
        Common              _common,
        InventQty           _oldInventQty,
        UnitOfMeasureSymbol _oldUOMSymbol,
        InventQty           _loadLineDiffQty)
    {
        this.setCommonBuffer(_common);

        WHSCatchWeightConfigurationKeyManager::instance().executingNonCatchWeightItemLogic(funcName(), this.getItemIdFromBuffer());

        this.setUpdateQuantities(_common, _oldInventQty, _oldUOMSymbol, _loadLineDiffQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHandlingUpdateQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set global parameters for the class.
    /// </summary>
    /// <param name="_common">
    /// Record buffer which holds the 'new' values of the source line.
    /// </param>
    /// <param name="_oldInventHandlingQty">
    /// The previous inventHandlingQty value of the record buffer.
    /// </param>
    /// <param name="_oldUOMSymbol">
    /// The previous UOMSymbol of the record buffer.
    /// </param>
    /// <param name="_loadLineDiffHandlingQty">
    /// The change in loadLine handling qty. (New - old)
    /// </param>
    /// <remarks>
    /// The method should be called after the source order line update so that the common passed in hold the new values.
    /// </remarks>
    [Hookable(false)]
    final public void setHandlingUpdateQuantities(
        Common              _common,
        InventHandlingQty   _oldInventHandlingQty,
        UnitOfMeasureSymbol _oldUOMSymbol,
        InventHandlingQty   _loadLineDiffHandlingQty)
    {
        this.setCommonBuffer(_common);

        if (!WHSCatchWeightConfigurationKeyManager::instance().mustExecuteNonCatchWeightItemLogic(funcName(), this.getItemIdFromBuffer()))
        {
            this.setUpdateQuantities(_common, _oldInventHandlingQty, _oldUOMSymbol, _loadLineDiffHandlingQty);
        }
        else
        {
            this.setParameters(_common, _oldInventHandlingQty, _oldUOMSymbol, _loadLineDiffHandlingQty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUpdateQuantities</Name>
				<Source><![CDATA[
    private void setUpdateQuantities(
        Common              _common,
        InventHandlingQty   _oldInventHandlingQty,
        UnitOfMeasureSymbol _oldUOMSymbol,
        InventHandlingQty   _loadLineDiffHandlingQty)
    {
        oldInventHandlingQty = _oldInventHandlingQty;
        oldUOMSymbol = _oldUOMSymbol;
        loadLineDiffHandlingQty = _loadLineDiffHandlingQty;

        this.initFromBuffer(_common);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemCWFromCommonBuffer</Name>
				<Source><![CDATA[
    private boolean isItemCWFromCommonBuffer()
    {
        ItemId itemId = this.getItemIdFromBuffer();

        return PdsGlobal::pdsIsCWItem(itemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCommonBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the common buffer for the specific data source line to update
    /// </summary>
    /// <param name="_common">
    /// Common buffer.
    /// </param>
    [Hookable(false)]
    internal protected void setCommonBuffer(Common _common)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemIdFromBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the <c>ItemId</c> from the buffer
    /// </summary>
    /// <returns>
    /// <c>ItemId</c> from the associated buffer record
    /// </returns>
    [Hookable(false)]
    internal protected ItemId getItemIdFromBuffer()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTable</Name>
				<Source><![CDATA[
	/// <summary>
	/// Updates the source line record.
	/// </summary>
        public abstract void updateTable()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSourceLineTableBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create and instance of <c>WHSSourceLineUpdater</c> based on common.
    /// </summary>
    /// <param name="_common">
    /// Common record buffer used to determine what child class to initialize.
    /// </param>
    /// <returns>
    /// An instance of <c>WHSSoruceLineUpdater</c>.
    /// </returns>
    public static WHSSourceLineUpdater newFromSourceLineTableBuffer(Common _common)
    {
        WHSSourceLineTableUpdateAttribute whsSourceLineTableUpdateAttribute = new WHSSourceLineTableUpdateAttribute(tableId2name(_common.TableId));

        WHSSourceLineUpdater whsSourceLineUpdater = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(WHSSourceLineUpdater),whsSourceLineTableUpdateAttribute);

        if (!whsSourceLineUpdater)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }
        return whsSourceLineUpdater;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>