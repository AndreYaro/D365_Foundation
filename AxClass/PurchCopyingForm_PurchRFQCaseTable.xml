<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCopyingForm_PurchRFQCaseTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysTableNameFactoryAttribute(tableStr(PurchRFQCaseTable))]
class PurchCopyingForm_PurchRFQCaseTable extends PurchCopyingForm
{
    PurchRFQCaseTable   callerRFQCaseTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructAndInitCopying</Name>
				<Source><![CDATA[
    public void constructAndInitCopying(TmpFrmVirtual   _tmpFrmVirtualLines,
                                        TmpFrmVirtual   _tmpFrmVirtualHeader,
                                        Qty             _qtyFactor         = 1,
                                        NoYes           _reverseSign       = NoYes::No,
                                        NoYes           _recalculateAmount = NoYes::No,
                                        NoYes           _copyMarkup        = NoYes::No,
                                        NoYes           _copyPrecisely     = NoYes::No,
                                        NoYes           _deleteLines       = NoYes::No,
                                        VendInvoiceJour _vendInvoiceJour   = null)

    {
        super(_tmpFrmVirtualLines,
              _tmpFrmVirtualHeader,
              1,
              NoYes::No,
              NoYes::No,
              NoYes::No,
              NoYes::Yes,
              _deleteLines,
              _vendInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructInventMovement</Name>
				<Source><![CDATA[
    public InventMovement constructInventMovement()
    {
        PurchRFQCaseLine purchRFQCaseLine;

        return InventMovement::construct(purchRFQCaseLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inititalizes controls for <c>PurchCopying</c> form.
    /// </summary>
    /// <param name="_element">
    /// Instance of the <c>FormRun</c> object containing
    /// controls that need to be initialized.
    /// </param>
    /// <param name="_qtyFactor">
    /// Quantity factor control.
    /// </param>
    /// <param name="_reverseSign">
    /// Reverse sign control.
    /// </param>
    /// <param name="_copyMarkup">
    /// Copy markup control.
    /// </param>
    /// <param name="_recalculateAmount">
    /// Recalculate amount control.
    /// </param>
    /// <param name="_copyPrecisely">
    /// Copy precisely control.
    /// </param>
    /// <param name="_deleteLines">
    /// Delete lines control.
    /// </param>
    /// <param name="_copyHeader">
    /// Copy header control
    /// </param>
    /// <param name="_tabPagePurch">
    /// Tab page control Purchase order
    /// </param>
    /// <param name="_tabPagePurchOrder">
    /// Tab page control Confiramtiong
    /// </param>
    /// <param name="_tabPagePackingSlip">
    /// Tab page control Product receipt
    /// </param>
    /// <param name="_tabPageInvoice">
    /// Tab page control Invoice
    /// </param>
    /// <param name="_tabPageRFQCaseTable">
    /// Tab page control Request for quotation
    /// </param>
    /// <param name="_tabPagePurchReqTable">
    /// Tab page control Purchase requisition
    /// </param>
    /// <param name="_tabPageAgreementPO">
    /// Tab page control Purchase agreement
    /// </param>
    /// <param name="_groupReasonCode">
    /// Group control Reason code.
    /// </param>
    public void initializeControls(FormRun                _element,
                                   FormRealControl        _qtyFactor,
                                   FormCheckBoxControl    _reverseSign,
                                   FormCheckBoxControl    _copyMarkup,
                                   FormCheckBoxControl    _recalculateAmount,
                                   FormCheckBoxControl    _copyPrecisely,
                                   FormCheckBoxControl    _deleteLines,
                                   FormCheckBoxControl    _copyHeader,
                                   FormTabPageControl     _tabPagePurch,
                                   FormTabPageControl     _tabPagePurchOrder,
                                   FormTabPageControl     _tabPagePackingSlip,
                                   FormTabPageControl     _tabPageInvoice,
                                   FormTabPageControl     _tabPageRFQCaseTable,
                                   FormTabPageControl     _tabPagePurchReqTable,
                                   FormTabPageControl     _tabPageAgreementPO,
                                   FormGroupControl       _groupReasonCode)
    {
        super(_element,
              _qtyFactor,
              _reverseSign,
              _copyMarkup,
              _recalculateAmount,
              _copyPrecisely,
              _deleteLines,
              _copyHeader,
              _tabPagePurch,
              _tabPagePurchOrder,
              _tabPagePackingSlip,
              _tabPageInvoice,
              _tabPageRFQCaseTable,
              _tabPagePurchReqTable,
              _tabPageAgreementPO,
              _groupReasonCode
              );

        _tabPageRFQCaseTable.visible(true);
        _tabPageAgreementPO.visible(callerRFQCaseTable.rfqType == PurchRFQType::PurchAgreement);
        _qtyFactor.visible(false);
        _reverseSign.visible(false);
        _copyMarkup.visible(false);
        _recalculateAmount.visible(false);
        _copyHeader.visible(false);
        _copyPrecisely.visible(false);

        _tabPagePurchOrder.visible(false);
        _deleteLines.label("@SYS106111");
        _deleteLines.helpText("@SYS106110");

        switch (salesPurchCopy)
        {
            case SalesPurchCopy::CopyAllHeader:
                _deleteLines.value(NoYes::Yes); //fall through

            case SalesPurchCopy::CopyAllLines:
                _element.design().caption("@SCM:CopyingForm_FormCaption");
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerTable</Name>
				<Source><![CDATA[
    public Common parmCallerTable(Common _callerTable = callerRFQCaseTable)
    {
        Common ret = super(_callerTable);

        callerRFQCaseTable = _callerTable;

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>