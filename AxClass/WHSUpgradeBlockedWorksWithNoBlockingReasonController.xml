<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSUpgradeBlockedWorksWithNoBlockingReasonController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSUpgradeBlockedWorksWithNoBlockingReasonController</c> class acts as a controller
/// for the <c>WHSUpgradeBlockedWorksWithNoBlockingReasonControllerService</c> service when dealing with blocked works but with no
/// blocking reasons.
/// </summary>
internal final class WHSUpgradeBlockedWorksWithNoBlockingReasonController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromExecutionMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>WHSUpgradeBlockedWorksWithNoBlockingReasonController</c> class
    /// with the specified execution mode.
    /// </summary>
    /// <param name = "_executionMode">The execution mode.</param>
    /// <returns>
    /// A new instance of <c>WHSUpgradeBlockedWorksWithNoBlockingReasonController</c> class.
    /// </returns>
    public static WHSUpgradeBlockedWorksWithNoBlockingReasonController newFromExecutionMode(SysOperationExecutionMode _executionMode)
    {
        WHSUpgradeBlockedWorksWithNoBlockingReasonController controller = new WHSUpgradeBlockedWorksWithNoBlockingReasonController(
                classStr(WHSUpgradeBlockedWorksWithNoBlockingReasonService),
                methodStr(WHSUpgradeBlockedWorksWithNoBlockingReasonService, enableBlockingReasonFeature),
                _executionMode);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return "@WAX:WHSUpgradeBlockingCapabilities";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        SysOperationExecutionMode       executionMode = _args.parmEnum();
        WHSUpgradeBlockedWorksWithNoBlockingReasonController controller;

        controller = WHSUpgradeBlockedWorksWithNoBlockingReasonController::newFromExecutionMode(executionMode);

        controller.parmDialogCaption(strFmt("@WAX:WHSUpgradeBlockingDescription", curExt()));

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>