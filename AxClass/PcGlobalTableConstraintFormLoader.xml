<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PcGlobalTableConstraintFormLoader</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Loads the table constraint edit form.
/// </summary>
class PcGlobalTableConstraintFormLoader
{
    Form    form;
    FormRun formRun;
    Args    formArgs;

    PCGlobalTableConstraintDefinition tableConstraintDefinition;

    PCGlobalTableConstraintController       formController;
    PCGlobalTableConstraintFormBuilder      formBuilder;
    PCFormRunFactory                        formRunFactory;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildDynamicFormControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the dynamic form for editing a user defined table contraint.
    /// </summary>
    protected void buildDynamicFormControls()
    {
        formBuilder.build(tableConstraintDefinition, formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFormBase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the user defined table constraint edit form.
    /// </summary>
    protected void createFormBase()
    {
        formArgs.name(formStr(PCGlobalTableConstraintEdit));
        formArgs.openMode(OpenMode::Edit);
        formArgs.record(tableConstraintDefinition);

        formRun = formRunFactory.create(formArgs);
        form = formRun.form();
    }

]]></Source>
			</Method>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the logic to load the form.
    /// </summary>
    /// <param name="_args">
    /// Arguments to load the form with.
    /// </param>
    public void execute(Args _args)
    {
        this.parmTableConstraintDefinition(_args.record() as PCGlobalTableConstraintDefinition);
        this.createFormBase();
        this.buildDynamicFormControls();
        this.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        formBuilder     = PCGlobalTableConstraintFormBuilder::construct();
        formController  = PCGlobalTableConstraintController::construct();
        formRunFactory  = PCFormRunFactory::construct();
        formArgs        = new Args();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmForm</Name>
				<Source><![CDATA[
    public Form parmForm(Form _form = form)
    {
        form = _form;

        return form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormArgs</Name>
				<Source><![CDATA[
    public Args parmFormArgs(Args _args = formArgs)
    {
        formArgs = _args;

        return formArgs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormBuilder</Name>
				<Source><![CDATA[
    public PCGlobalTableConstraintFormBuilder parmFormBuilder(PCGlobalTableConstraintFormBuilder _formBuilder = formBuilder)
    {
        formBuilder = _formBuilder;

        return formBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormController</Name>
				<Source><![CDATA[
    public PCGlobalTableConstraintController parmFormController(PCGlobalTableConstraintController _formController = formController)
    {
        formController = _formController;

        return formController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormRunFactory</Name>
				<Source><![CDATA[
    public PCFormRunFactory parmFormRunFactory(PCFormRunFactory _formRunFactory = formRunFactory)
    {
        formRunFactory = _formRunFactory;

        return formRunFactory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTableConstraintDefinition</Name>
				<Source><![CDATA[
    public PCGlobalTableConstraintDefinition parmTableConstraintDefinition(PCGlobalTableConstraintDefinition _tableConstraintDefinition = tableConstraintDefinition)
    {
        tableConstraintDefinition = _tableConstraintDefinition;

        return tableConstraintDefinition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the loaded form.
    /// </summary>
    protected void run()
    {
        formRun.init();
        formRun.run();
        formRun.detach();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCGlobalTableConstraintFormLoader construct()
    {
        return new PCGlobalTableConstraintFormLoader();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        PCGlobalTableConstraintFormLoader loader = PCGlobalTableConstraintFormLoader::construct();

        PCContractNotNull::assertRecord(_args.record(), funcName());

        loader.execute(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>