<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PDFFillerYearlyAT</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PDFFillerYearlyAT extends PDFFiller
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFDFXml</Name>
				<Source><![CDATA[
    protected XmlDocument getFDFXml()
    {
        MapEnumerator fieldEnum;
        XmlDocument   xmlDoc;
        XmlElement    xFDF, xmlEl, xmlFields, xmlField;

        #TaxReportingCodesAT

        xmlDoc = XmlDocument::newBlank();

        xFDF = xmlDoc.createElement(#xfdf);
        xmlDoc.appendChild(xFDF);

        xFDF.setAttribute(#xmlns, #http_adobe);
        xFDF.setAttribute(#xml_space, #preserve);

        xmlEl = xmlDoc.createElement(#f);
        xmlEl.setAttribute(#href, pdfFileName);
        xFDF.appendChild(xmlEl);

        xmlEl = xmlDoc.createElement(#ids);
        xmlEl.setAttribute(#original, #originalString);
        xmlEl.setAttribute(#modified, #modifiedString);
        xFDF.appendChild(xmlEl);

        xmlFields = xmlDoc.createElement(#fields);
        xFDF.appendChild(xmlFields);

        fieldEnum  = fields.getEnumerator();

        while (fieldEnum.moveNext())
        {
            if (fieldEnum.currentKey() != #Zahl538 &&
                fieldEnum.currentKey() != #Zahl525 &&
                fieldEnum.currentKey() != #Zahl525x)
            {
                xmlField = xmlDoc.createElement(#field);
                xmlField.setAttribute(#name, fieldEnum.currentKey());
                xmlEl = xmlDoc.createElement(#value);
                xmlEl.appendChild(xmlDoc.createTextNode(fieldEnum.currentValue()));
                xmlField.appendChild(xmlEl);
                xmlFields.appendChild(xmlField);
            }

            if (fieldEnum.currentKey() == #Zahl24a)
            {
                if (fields.exists(#Zahl525))
                {
                    xmlField = xmlDoc.createElement(#field);
                    xmlField.setAttribute(#name, #Zahl525);
                    xmlEl = xmlDoc.createElement(#value);
                    xmlEl.appendChild(xmlDoc.createTextNode(fields.lookup(#Zahl525)));
                    xmlField.appendChild(xmlEl);
                    xmlFields.appendChild(xmlField);
                }
                if (fields.exists(#Zahl525x))
                {
                    xmlField = xmlDoc.createElement(#field);
                    xmlField.setAttribute(#name, #Zahl525x);
                    xmlEl = xmlDoc.createElement(#value);
                    xmlEl.appendChild(xmlDoc.createTextNode(fields.lookup(#Zahl525x)));
                    xmlField.appendChild(xmlEl);
                    xmlFields.appendChild(xmlField);
                }
            }

            if (fieldEnum.currentKey() == #Zahl37)
            {
                if (fields.exists(#Zahl538))
                {
                    xmlField = xmlDoc.createElement(#field);
                    xmlField.setAttribute(#name, #Zahl538);
                    xmlEl = xmlDoc.createElement(#value);
                    xmlEl.appendChild(xmlDoc.createTextNode(fields.lookup(#Zahl538)));
                    xmlField.appendChild(xmlEl);
                    xmlFields.appendChild(xmlField);
                }
            }
        }
        return xmlDoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PDFFillerYearlyAT construct()
    {
        return new PDFFillerYearlyAT();
    }

]]></Source>
			</Method>
			<Method>
				<Name>xfdfFileName</Name>
				<Source><![CDATA[
    public str xfdfFileName()
    {
        return 'AnnualSalesTaxReport';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>