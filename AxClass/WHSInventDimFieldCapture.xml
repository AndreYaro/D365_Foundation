<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventDimFieldCapture</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used to dynamically capture inventory dimension field values by prompting with a dialog box.
/// </summary>
class WHSInventDimFieldCapture extends RunBase implements InventItemIdProvider
{
    FieldId     dimFieldId;
    DialogField dfDimField;
    ItemId      itemId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDimFieldValue</Name>
				<Source><![CDATA[
	/// <summary>
	/// Prompts a dialog box to get inventory dimension field value.
	/// </summary>
	/// <returns>
	/// The inventory dimensions.
	/// </returns>
    protected inventDim getDimFieldValue()
    {
        InventDim inventDim;

        if (this.prompt())
        {
            inventDim.(dimFieldId) = dfDimField.value();
        }

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the item ID.
    /// </summary>
    /// <returns>The ID of the item to capture a dimension for.</returns>
    public ItemId itemId()
    {
        return this.parmItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an inventDim based on the captured dim field
    /// </summary>
    /// <returns>
    /// An inventDim with the captured inventDim field value.
    /// </returns>
    public InventDim getInventDim()
    {
        InventTable inventTable = InventTable::find(itemId);

        InventDim inventDim = this.getDimFieldValue();

        if (!inventDim.(dimFieldId))
        {
            throw error("@WAX5506");
        }
        else if (!inventDim.validateProductDimension(dimFieldId, inventTable))
        {
            throw error ("@WAX5507");
        }

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimFieldId</Name>
				<Source><![CDATA[
    public FieldId parmDimFieldId(FieldId _dimFieldId = dimFieldId)
    {
        dimFieldId = _dimFieldId;

        return dimFieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSInventDimFieldCapture construct()
    {
        return new WHSInventDimFieldCapture();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DictField dictField = new DictField(tableNum(InventDim), dimFieldId);

        Dialog dialog = new DialogRunbase(strFmt("@WAX5508", dictField.label()), this);
        dfDimField = dialog.addField(extendedTypeId2name(dictField.typeId()));

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
	/// <summary>
	/// Constructs an instance from this class with a dimensio field.
	/// </summary>
	/// <param name="_dimFieldId">
	/// Id of the dimension field.
	/// </param>
	/// <returns>
	/// The <c>WHSInventDimFieldCapture</c> instance.
	/// </returns>
	/// <exception cref="Exception::Error">
	/// Exception is thrown if field is not a dimension field.
	/// </exception>
    public static WHSInventDimFieldCapture newStandard(FieldId _dimFieldId, ItemId _itemId)
    {
        WHSInventDimFieldCapture whsInventDimFieldCapture;

        if (InventDim::isFieldIdDimensional(_dimFieldId) && _itemId)
        {
            whsInventDimFieldCapture = WHSInventDimFieldCapture::construct();
            whsInventDimFieldCapture.parmDimFieldId(_dimFieldId);
            whsInventDimFieldCapture.parmItemId(_itemId);
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        return whsInventDimFieldCapture;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
