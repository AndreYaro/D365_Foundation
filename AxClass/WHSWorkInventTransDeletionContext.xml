<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkInventTransDeletionContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class is used to transfer context to the <c>delete</c> method on
///  the <c>WHSWorkInventTrans</c> table.
/// </summary>
internal final class WHSWorkInventTransDeletionContext implements System.IDisposable
{
    private static WHSWorkInventTransDeletionContext instance;

    private boolean allowDeleteWhenInventQtyRemainNotEqualQty;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(boolean _allowDeleteWhenInventQtyRemainNotEqualQty)
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
        instance.allowDeleteWhenInventQtyRemainNotEqualQty = _allowDeleteWhenInventQtyRemainNotEqualQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParms</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class with flag which controls if work inventory transaction record can be deleted even when partially picked.
    /// </summary>
    /// <param name="_allowDeleteWhenInventQtyRemainNotEqualQty">
    /// Flag which controls if work inventory transaction record can be deleted even when partially picked.
    /// </param>
    /// <returns>A new instance of the class.</returns>
    public static WHSWorkInventTransDeletionContext newFromParms(boolean _allowDeleteWhenInventQtyRemainNotEqualQty)
    {
        return new WHSWorkInventTransDeletionContext(_allowDeleteWhenInventQtyRemainNotEqualQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDeleteWhenInventQtyRemainNotEqualQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns if work inventory transaction record can be deleted even when partially picked.
    /// </summary>
    /// <returns>Work inventory transaction record is allowed to be deleted when partially picked, return true.</returns>
    public static boolean allowDeleteWhenInventQtyRemainNotEqualQty()
    {
        if (!instance)
        {
            return false;
        }

        return instance.allowDeleteWhenInventQtyRemainNotEqualQty;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>