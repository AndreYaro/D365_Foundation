<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendSumForPaymRemittance</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class CustVendSumForPaymRemittance extends CustVendSumForPaym
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    protected Query buildQuery()
    {
        Query query;
        QueryBuildDataSource qbdsLedgerJournalTrans;
        QueryBuildRange rangeStatus;

        query = super();

        qbdsLedgerJournalTrans = query.dataSourceTable(tableNum(LedgerJournalTrans));

        rangeStatus = qbdsLedgerJournalTrans.rangeField(fieldNum(LedgerJournalTrans, paymentStatus));

        rangeStatus.value(SysQuery::valueUnlimited());

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dialog box for an instance of the <c>RunBase</c> class.
    /// </summary>
    /// <returns>
    ///    A dialog box for an instance of the <c>RunBase</c> class.
    /// </returns>
    public Object dialog()
    {
        dialog = super();

        bankAccountId = this.ledgerJournalTable().bankAccountId;

        dialogBank.value(bankAccountId);
        dialogBank.allowEdit(false);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldIdPaymModeExportClassId</Name>
				<Source><![CDATA[
    protected fieldId fieldIdPaymModeExportClassId()
    {
        tableId paymModeTableId = this.paymModeTable().tableId;

        return new DictField(paymModeTableId, fieldname2id(paymModeTableId, identifierStr(ClassIdRemittance))).id();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        if (ret && this.isDueDateExceeded())
        {
            ret = Box::yesNo("@SYS83549", DialogButton::No, "@SYS83550") == DialogButton::Yes;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDueDateExceeded</Name>
				<Source><![CDATA[
    protected boolean isDueDateExceeded()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether to add a Select button to the dialog.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    /// <remarks>
    /// If you click this button, it will show the query form. Therefore, the <c>queryRun</c> method has to
    /// return a valid <c>queryRun</c> object. If you change the return value to false the button will no
    /// longer be added.
    /// </remarks>
    public boolean showQueryValues()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object _calledFrom = null)
    {
        boolean ret;
        Counter numOfFormats;
        LedgerJournalTrans ledgerJournalTrans;

        ret = super();

        numOfFormats = CustVendSumForPaym::countPaymFormats(this.queryRun().query().pack());

        if (numOfFormats > 1)
        {
            ret = checkFailed(strfmt("@SYS83547", numOfFormats));
        }

        select firstonly recId from ledgerJournalTrans
            where ledgerJournalTrans.journalNum == ledgerJournalId
                && ledgerJournalTrans.paymentStatus == CustVendPaymStatus::Sent;

        if (ledgerJournalTrans.recId)
        {
            ret = checkFailed(strfmt("@SYS83548", CustVendPaymStatus::Sent));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>