<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimViewRdlContractWrapper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The class <c>InventDimViewRdlContractWrapper</c> is a wrapper for the  report RDL contract.
/// </summary>
/// <remarks>
///    The class is used to work with inventory dimension view parameters defined on the  report.
/// </remarks>
public class InventDimViewRdlContractWrapper
{
    #InventDimDevelop

    // parameter names as they are defined on the report
    private const str ViewConfigId = 'ViewConfigId';
    private const str ViewInventBatchId = 'ViewInventBatchId';
    private const str ViewInventColorId = 'ViewInventColorId';
    private const str ViewInventStyleId = 'ViewInventStyleId';
    private const str ViewInventVersionId = 'ViewInventVersionId';
    private const str ViewInventLocationId = 'ViewInventLocationId';
    private const str ViewInventSerialId = 'ViewInventSerialId';
    private const str ViewInventSiteId = 'ViewInventSiteId';
    private const str ViewInventSizeId = 'ViewInventSizeId';
    private const str ViewWMSLocationId = 'ViewWMSLocationId';
    private const str ViewInventOwnerId = 'ViewInventOwnerId';

    private const str ViewInventDimension1 = 'ViewInventDimension1';
    private const str ViewInventDimension2 = 'ViewInventDimension2';
    private const str ViewInventDimension3 = 'ViewInventDimension3';
    private const str ViewInventDimension4 = 'ViewInventDimension4';
    private const str ViewInventDimension5 = 'ViewInventDimension5';
    private const str ViewInventDimension6 = 'ViewInventDimension6';
    private const str ViewInventDimension7 = 'ViewInventDimension7';
    private const str ViewInventDimension8 = 'ViewInventDimension8';
    private const str ViewInventDimension9 = 'ViewInventDimension9';
    private const str ViewInventDimension10 = 'ViewInventDimension10';
    private const str ViewInventDimension11 = 'ViewInventDimension11';
    private const str ViewInventDimension12 = 'ViewInventDimension12';
    private const str ViewLicensePlateId = 'ViewLicensePlateId';

    private const str InventDimViewParameterType = 'Boolean';

    private boolean isVersionDimensionEnabled, isInventDimension11Enabled, isInventDimension12Enabled;

    SrsReportRdlDataContract    rdlDataContract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventDimParmValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves an <c>InventDimParm</c> table buffer that represents the values of inventory dimension
    ///    view parameters.
    /// </summary>
    /// <returns>
    ///    The buffer that holds the values for the parameters.
    /// </returns>
    public InventDimParm getInventDimParmValue()
    {
        InventDimParm       inventDimParm;

        inventDimParm.CompanyFlag           = this.parmViewConfigId();
        inventDimParm.InventBatchIdFlag     = this.parmViewInventBatchId();
        inventDimParm.InventColorIdFlag     = this.parmViewInventColorId();
        inventDimParm.InventStyleIdFlag     = this.parmViewInventStyleId();
        inventDimParm.InventVersionIdFlag   = this.parmViewInventVersionId();
        inventDimParm.InventLocationIdFlag  = this.parmViewInventLocationId();
        inventDimParm.InventSerialIdFlag    = this.parmViewInventSerialId();
        inventDimParm.InventSiteIdFlag      = this.parmViewInventSiteId();
        inventDimParm.InventSizeIdFlag      = this.parmViewInventSizeId();
        inventDimParm.wmsLocationIdFlag     = this.parmViewWMSLocationId();
        inventDimParm.InventOwnerIdFlag_RU  = this.parmViewInventOwnerId();
        inventDimParm.InventDimension1Flag  = this.parmViewInventDimension1();
        inventDimParm.InventDimension2Flag  = this.parmViewInventDimension2();
        inventDimParm.InventDimension3Flag  = this.parmViewInventDimension3();
        inventDimParm.InventDimension4Flag  = this.parmViewInventDimension4();
        inventDimParm.InventDimension5Flag  = this.parmViewInventDimension5();
        inventDimParm.InventDimension6Flag  = this.parmViewInventDimension6();
        inventDimParm.InventDimension7Flag  = this.parmViewInventDimension7();
        inventDimParm.InventDimension8Flag  = this.parmViewInventDimension8();
        inventDimParm.InventDimension9Flag  = this.parmViewInventDimension9();
        inventDimParm.InventDimension10Flag = this.parmViewInventDimension10();
        inventDimParm.InventDimension11Flag = this.parmViewInventDimension11();
        inventDimParm.InventDimension12Flag = this.parmViewInventDimension12();
        inventDimParm.LicensePlateFlag = this.parmViewLicensePlateId();

        return inventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        this.isVersionDimensionEnabled = isConfigurationkeyEnabled(configurationKeyNum(EcoResProductVersion));
        this.isInventDimension11Enabled = isConfigurationkeyEnabled(configurationKeyNum(InventDimension11));
        this.isInventDimension12Enabled = isConfigurationkeyEnabled(configurationKeyNum(InventDimension12));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRdlDataContract</Name>
				<Source><![CDATA[
    protected SrsReportRdlDataContract parmRdlDataContract(SrsReportRdlDataContract _rdlDataContract = rdlDataContract)
    {
        rdlDataContract = _rdlDataContract;

        return rdlDataContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewConfigId</Name>
				<Source><![CDATA[
    public boolean parmViewConfigId(boolean _viewConfigId = rdlDataContract.getValue(ViewConfigId))
    {
        rdlDataContract.setValue(ViewConfigId, _viewConfigId);

        return _viewConfigId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventBatchId</Name>
				<Source><![CDATA[
    public boolean parmViewInventBatchId(boolean _viewInventBatchId =  rdlDataContract.getValue(ViewInventBatchId))
    {
        rdlDataContract.setValue(ViewInventBatchId, _viewInventBatchId);

        return _viewInventBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventColorId</Name>
				<Source><![CDATA[
    public boolean parmViewInventColorId(boolean _viewInventColorId = rdlDataContract.getValue(ViewInventColorId))
    {
        rdlDataContract.setValue(ViewInventColorId, _viewInventColorId);

        return _viewInventColorId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventLocationId</Name>
				<Source><![CDATA[
    public boolean parmViewInventLocationId(boolean _viewInventLocationId = rdlDataContract.getValue(ViewInventLocationId))
    {
        rdlDataContract.setValue(ViewInventLocationId, _viewInventLocationId);

        return _viewInventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventSerialId</Name>
				<Source><![CDATA[
    public boolean parmViewInventSerialId(boolean _viewInventSerialId = rdlDataContract.getValue(ViewInventSerialId))
    {
        rdlDataContract.setValue(ViewInventSerialId, _viewInventSerialId);

        return _viewInventSerialId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventSiteId</Name>
				<Source><![CDATA[
    public boolean parmViewInventSiteId(boolean _viewInventSiteId = rdlDataContract.getValue(ViewInventSiteId))
    {
        rdlDataContract.setValue(ViewInventSiteId, _viewInventSiteId);

        return _viewInventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventSizeId</Name>
				<Source><![CDATA[
    public boolean parmViewInventSizeId(boolean _viewInventSizeId = rdlDataContract.getValue(ViewInventSizeId))
    {
        rdlDataContract.setValue(ViewInventSizeId, _viewInventSizeId);

        return _viewInventSizeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventStyleId</Name>
				<Source><![CDATA[
    public boolean parmViewInventStyleId(boolean _viewInventStyleId = rdlDataContract.getValue(ViewInventStyleId))
    {
        rdlDataContract.setValue(ViewInventStyleId, _viewInventStyleId);

        return _viewInventStyleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventVersionId</Name>
				<Source><![CDATA[
    public boolean parmViewInventVersionId()
    {
        if (this.isVersionDimensionEnabled)
        {
            return rdlDataContract.getValue(ViewInventVersionId);
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setViewInventVersionId</Name>
				<Source><![CDATA[
    public boolean setViewInventVersionId(boolean _viewInventVersionId)
    {
        if (this.isVersionDimensionEnabled)
        {
            rdlDataContract.setValue(ViewInventVersionId, _viewInventVersionId);
        }

        return _viewInventVersionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewWMSLocationId</Name>
				<Source><![CDATA[
    public boolean parmViewWMSLocationId(boolean _viewWMSLocationId = rdlDataContract.getValue(ViewWMSLocationId))
    {
        rdlDataContract.setValue(ViewWMSLocationId, _viewWMSLocationId);

        return _viewWMSLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventOwnerId</Name>
				<Source><![CDATA[
    public boolean parmViewInventOwnerId(boolean _viewInventOwnerId =  rdlDataContract.getValue(ViewInventOwnerId))
    {
        rdlDataContract.setValue(ViewInventOwnerId, _viewInventOwnerId);

        return _viewInventOwnerId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension1</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension1(boolean _viewInventDimension1 =  rdlDataContract.getValue(ViewInventDimension1))
    {
        rdlDataContract.setValue(ViewInventDimension1, _viewInventDimension1);

        return _viewInventDimension1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension2</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension2(boolean _viewInventDimension2 =  rdlDataContract.getValue(ViewInventDimension2))
    {
        rdlDataContract.setValue(ViewInventDimension2, _viewInventDimension2);

        return _viewInventDimension2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension3</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension3(boolean _viewInventDimension3 =  rdlDataContract.getValue(ViewInventDimension3))
    {
        rdlDataContract.setValue(ViewInventDimension3, _viewInventDimension3);

        return _viewInventDimension3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension4</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension4(boolean _viewInventDimension4 =  rdlDataContract.getValue(ViewInventDimension4))
    {
        rdlDataContract.setValue(ViewInventDimension4, _viewInventDimension4);

        return _viewInventDimension4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension5</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension5(boolean _viewInventDimension5 =  rdlDataContract.getValue(ViewInventDimension5))
    {
        rdlDataContract.setValue(ViewInventDimension5, _viewInventDimension5);

        return _viewInventDimension5;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension6</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension6(boolean _viewInventDimension6 =  rdlDataContract.getValue(ViewInventDimension6))
    {
        rdlDataContract.setValue(ViewInventDimension6, _viewInventDimension6);

        return _viewInventDimension6;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension7</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension7(boolean _viewInventDimension7 =  rdlDataContract.getValue(ViewInventDimension7))
    {
        rdlDataContract.setValue(ViewInventDimension7, _viewInventDimension7);

        return _viewInventDimension7;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension8</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension8(boolean _viewInventDimension8 =  rdlDataContract.getValue(ViewInventDimension8))
    {
        rdlDataContract.setValue(ViewInventDimension8, _viewInventDimension8);

        return _viewInventDimension8;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension9</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension9(boolean _viewInventDimension9 =  rdlDataContract.getValue(ViewInventDimension9))
    {
        rdlDataContract.setValue(ViewInventDimension9, _viewInventDimension9);

        return _viewInventDimension9;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension10</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension10(boolean _viewInventDimension10 =  rdlDataContract.getValue(ViewInventDimension10))
    {
        rdlDataContract.setValue(ViewInventDimension10, _viewInventDimension10);

        return _viewInventDimension10;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewLicensePlateId</Name>
				<Source><![CDATA[
    public boolean parmViewLicensePlateId(boolean _viewLicensePlateId =  rdlDataContract.getValue(ViewLicensePlateId))
    {
        rdlDataContract.setValue(ViewLicensePlateId, _viewLicensePlateId);

        return _viewLicensePlateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setViewInventDimension11</Name>
				<Source><![CDATA[
    private boolean setViewInventDimension11(boolean _viewInventDimension11)
    {
        if (this.isInventDimension11Enabled)
        {
            rdlDataContract.setValue(ViewInventDimension11, _viewInventDimension11);
        }

        return _viewInventDimension11;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension11</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension11()
    {
        if (this.isInventDimension11Enabled)
        {
            return rdlDataContract.getValue(ViewInventDimension11);
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setViewInventDimension12</Name>
				<Source><![CDATA[
    private boolean setViewInventDimension12(boolean _viewInventDimension12)
    {
        if (this.isInventDimension12Enabled)
        {
            rdlDataContract.setValue(ViewInventDimension12, _viewInventDimension12);
        }

        return _viewInventDimension12;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmViewInventDimension12</Name>
				<Source><![CDATA[
    private boolean parmViewInventDimension12()
    {
        if (this.isInventDimension12Enabled)
        {
            return rdlDataContract.getValue(ViewInventDimension12);
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimParmValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the values of inventory dimension view parameters according to the values from an
    ///    <c>InventDimParm</c> record.
    /// </summary>
    /// <param name="_inventDimParm">
    ///    A buffer that holds the values for the parameters to be set.
    /// </param>
    public void setInventDimParmValue(InventDimParm     _inventDimParm)
    {
        this.parmViewConfigId(_inventDimParm.ConfigIdFlag);
        this.parmViewInventBatchId(_inventDimParm.InventBatchIdFlag);
        this.parmViewInventColorId(_inventDimParm.InventColorIdFlag);
        this.parmViewInventStyleId(_inventDimParm.InventStyleIdFlag);
        this.setViewInventVersionId(_inventDimParm.InventVersionIdFlag);
        this.parmViewInventLocationId(_inventDimParm.InventLocationIdFlag);
        this.parmViewInventSerialId(_inventDimParm.InventSerialIdFlag);
        this.parmViewInventSiteId(_inventDimParm.InventSiteIdFlag);
        this.parmViewInventSizeId(_inventDimParm.InventSizeIdFlag);
        this.parmViewWMSLocationId(_inventDimParm.wmsLocationIdFlag);
        this.parmViewInventOwnerId(_inventDimParm.InventOwnerIdFlag_RU);
        this.parmViewInventDimension1(_inventDimParm.InventDimension1Flag);
        this.parmViewInventDimension2(_inventDimParm.InventDimension2Flag);
        this.parmViewInventDimension3(_inventDimParm.InventDimension3Flag);
        this.parmViewInventDimension4(_inventDimParm.InventDimension4Flag);
        this.parmViewInventDimension5(_inventDimParm.InventDimension5Flag);
        this.parmViewInventDimension6(_inventDimParm.InventDimension6Flag);
        this.parmViewInventDimension7(_inventDimParm.InventDimension7Flag);
        this.parmViewInventDimension8(_inventDimParm.InventDimension8Flag);
        this.parmViewInventDimension9(_inventDimParm.InventDimension9Flag);
        this.parmViewInventDimension10(_inventDimParm.InventDimension10Flag);
        this.setViewInventDimension11(_inventDimParm.InventDimension11Flag);
        this.setViewInventDimension12(_inventDimParm.InventDimension12Flag);
        this.parmViewLicensePlateId(_inventDimParm.LicensePlateFlag);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addParameter</Name>
				<Source><![CDATA[
    static private void addParameter(str _name, Map _parameterMap)
    {
        SRSReportParameter parameter = new SRSReportParameter();
        parameter.dataType(InventDimViewParameterType);
        parameter.name(_name);
        _parameterMap.insert(parameter.name(), parameter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInventDimParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds the inventory dimension view parameters to a <c>SrsReportRdlDataContract</c> object.
    /// </summary>
    /// <param name="_rdlDataContract">
    ///    A <c>SrsReportRdlDataContract</c> object to which to add the parameters.
    /// </param>
    static public void addInventDimParameters(SrsReportRdlDataContract  _rdlDataContract)
    {
        Map parameterMap = _rdlDataContract.getParametersMap();

        InventDimViewRdlContractWrapper::addParameter(ViewConfigId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventBatchId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventColorId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventStyleId, parameterMap);
        if (isConfigurationkeyEnabled(configurationKeyNum(EcoResProductVersion)))
        {
            InventDimViewRdlContractWrapper::addParameter(ViewInventVersionId, parameterMap);
        }
        InventDimViewRdlContractWrapper::addParameter(ViewInventLocationId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventSerialId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventSiteId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventSizeId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewWMSLocationId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventOwnerId, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension1, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension2, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension3, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension4, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension5, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension6, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension7, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension8, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension9, parameterMap);
        InventDimViewRdlContractWrapper::addParameter(ViewInventDimension10, parameterMap);
        if (isConfigurationkeyEnabled(configurationKeyNum(InventDimension11)))
        {
            InventDimViewRdlContractWrapper::addParameter(ViewInventDimension11, parameterMap);
        }
        if (isConfigurationkeyEnabled(configurationKeyNum(InventDimension12)))
        {
            InventDimViewRdlContractWrapper::addParameter(ViewInventDimension12, parameterMap);
        }

        InventDimViewRdlContractWrapper::addParameter(ViewLicensePlateId, parameterMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventDimViewRdlContractWrapper construct()
    {
        return new InventDimViewRdlContractWrapper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromRdlDataContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the specified <c>SrsReportRdlDataContract</c> object.
    /// </summary>
    /// <param name="_rdlDataContract">
    ///    A <c>SrsReportRdlDataContract</c> object to be wrapped.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>InventDimViewRdlContractWrapper</c> class.
    /// </returns>
    static public InventDimViewRdlContractWrapper newFromRdlDataContract(SrsReportRdlDataContract _rdlDataContract)
    {
        InventDimViewRdlContractWrapper     wrapper = InventDimViewRdlContractWrapper::construct();
        wrapper.parmRdlDataContract(_rdlDataContract);

        return wrapper;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>