<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAdvRuleFormHelper_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The asset advanced rule form helper.
/// </summary>
class AssetAdvRuleFormHelper_JP
{
    FormRun                 formRun;
    SysFormEnumComboBox     groupTypeComboBox;
    RefTableId              sourceTableId;
    RefRecId                sourceRecId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createDefaultRules</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates default rules.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// Throws exception when not override the method
    /// </exception>
    protected void createDefaultRules()
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRuleGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets current rule group
    /// </summary>
    /// <returns>
    /// Returns current rule group
    /// </returns>
    public AssetAdvancedRuleGroup_JP currentRuleGroup()
    {
        return AssetAdvancedRuleGroup_JP::findOrCreate(
            this.currentRuleGroupType(),
            this.getSourceTableId(),
            this.getSourceRecIdId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRuleGroupType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets current rule group type
    /// </summary>
    /// <returns>
    /// Returns current rule group type
    /// </returns>
    public AssetAdvancedRuleGroupType_JP currentRuleGroupType()
    {
        SetEnumerator       setEnumerator;

        AssetAdvancedRuleGroupType_JP   ret;

        ret = groupTypeComboBox.selection();

        if (ret == 255)
        {
            setEnumerator = this.ruleGroupTypeSet().getEnumerator();
            if (setEnumerator.moveNext())
            {
                ret = setEnumerator.current();
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <C>FormDataSource</C> object for a specified form data source.
    /// </summary>
    /// <param name="_objectSet">
    /// A specified form data source; optional.
    /// </param>
    /// <returns>
    /// A <C>FormDataSource</C> object for a specified form data source.
    /// </returns>
    protected FormDataSource getFormDataSource(anytype _objectSet = null)
    {
        FormDataSource      ret;

        if (prmisDefault(_objectSet))
        {
            ret = formRun.dataSource() as FormDataSource;
        }
        else
        {
            ret = formRun.dataSource(_objectSet) as FormDataSource;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRuleGroupTypeControlId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets rule group type control id
    /// </summary>
    /// <returns>
    /// Returns rule group type control id
    /// </returns>
    protected int getRuleGroupTypeControlId()
    {
        return formRun.controlId(formControlStr(AssetAdvancedRule_JP, RuleGroupType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceRecIdId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets source record id
    /// </summary>
    /// <returns>
    /// Returns source record id
    /// </returns>
    protected RefRecId getSourceRecIdId()
    {
        RefRecId    ret;

        if (formRun.args().dataset())
        {
            ret = formRun.args().record().RecId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets source table id
    /// </summary>
    /// <returns>
    /// Returns source table id
    /// </returns>
    protected RefTableId getSourceTableId()
    {
        return formRun.args().dataset();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForConstruct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes for construct
    /// </summary>
    /// <param name="_formRun">
    /// The form run
    /// </param>
    protected void initForConstruct(FormRun _formRun)
    {
        formRun = _formRun;

        sourceTableId = formRun.args().dataset();
        if (sourceTableId)
        {
            sourceRecId = formRun.args().record().RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRuleSetEmptyForGroupTypeSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if is rule set empty for group type set
    /// </summary>
    /// <returns>
    /// Returns true if not empty otherwise false
    /// </returns>
    protected boolean isRuleSetEmptyForGroupTypeSet()
    {
        boolean                     ret;
        SetEnumerator               setEnumerator;
        Query                       q;
        QueryBuildDataSource        qbds;
        QueryRun                    qr;

        q = new Query();
        qbds = q.addDataSource(tableNum(AssetAdvancedRule_JP));
        qbds.addSelectionField(fieldNum(AssetAdvancedRule_JP, RecId));
        qbds.firstOnly(true);

        qbds = qbds.addDataSource(tableNum(AssetAdvancedRuleGroup_JP));
        qbds.relations(true);
        qbds.joinMode(JoinMode::ExistsJoin);
        qbds.addRange(fieldNum(AssetAdvancedRuleGroup_JP, SourceTableId)).value(SysQuery::value(this.getSourceTableId()));
        qbds.addRange(fieldNum(AssetAdvancedRuleGroup_JP, SourceRecId)).value(SysQuery::value(this.getSourceRecIdId()));

        setEnumerator = this.ruleGroupTypeSet().getEnumerator();
        while (setEnumerator.moveNext())
        {
            qbds.addRange(fieldNum(AssetAdvancedRuleGroup_JP, Type)).value(SysQuery::value(enum2int(setEnumerator.current())));
        }

        qr = new QueryRun(q);
        if (qr.next())
        {
            ret = false;
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>needsToCreateDefaultRulesIfEmpty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if needed to create default rules when empty
    /// </summary>
    /// <returns>
    /// Returns false
    /// </returns>
    protected boolean needsToCreateDefaultRulesIfEmpty()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceRecId</Name>
				<Source><![CDATA[
    public RefRecId parmSourceRecId(RefRecId _sourceRecId = sourceRecId)
    {
        sourceRecId = _sourceRecId;
        return sourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceTableId</Name>
				<Source><![CDATA[
    public RefTableId parmSourceTableId(RefTableId _sourceTableId = sourceTableId)
    {
        sourceTableId = _sourceTableId;
        return sourceTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postInit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post initialization
    /// </summary>
    public void postInit()
    {
        QueryBuildDataSource    qbds;

        qbds = this.getFormDataSource().query().dataSourceTable(tableNum(AssetAdvancedRule_JP));
        if (qbds)
        {
            this.setupRulGroupTypeFilter();

            SysQuery::findOrCreateRange(qbds, fieldNum(AssetAdvancedRule_JP, AssetAdvancedRuleGroup_JP)).value(
                SysQuery::value(this.currentRuleGroup().RecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes additional logic post <C>run</C> of <C>FormRun</C>.
    /// </summary>
    public void postRun()
    {
        // Try to create default rules if needed
        if (this.isRuleSetEmptyForGroupTypeSet())
        {
            if (this.needsToCreateDefaultRulesIfEmpty())
            {
                this.createDefaultRules();
                this.getFormDataSource().executeQuery();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>preInit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Pre-initialization
    /// </summary>
    public void preInit()
    {
        groupTypeComboBox = SysFormEnumComboBox::newParameters(
            formRun,
            this.getRuleGroupTypeControlId(),
            enumNum(AssetAdvancedRuleGroupType_JP),
            this.ruleGroupTypeSet(),
            "@SYP4881457");     // Filter by rule type
    }

]]></Source>
			</Method>
			<Method>
				<Name>ruleGroupType_modified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if rule group type modified
    /// </summary>
    /// <param name="_formControl">
    /// The form control
    /// </param>
    /// <returns>
    /// Returns true if modified otherwise false
    /// </returns>
    public boolean ruleGroupType_modified(FormComboBoxControl _formControl)
    {
        boolean         ret;
        FormDataSource  rootFormDataSource;

        ret = _formControl.modified();

        if (ret)
        {
            rootFormDataSource = this.getFormDataSource();
            SysQuery::findOrCreateRange(
                rootFormDataSource.query().dataSourceTable(tableNum(AssetAdvancedRule_JP)),
                fieldNum(AssetAdvancedRule_JP, AssetAdvancedRuleGroup_JP)).value(SysQuery::value(this.currentRuleGroup().RecId));

            rootFormDataSource.executeQuery();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ruleGroupTypeSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets rule group type set
    /// </summary>
    /// <returns>
    /// Returns rule group type set
    /// </returns>
    public Set ruleGroupTypeSet()
    {
        Set   ret = new Set(Types::Enum);

        if (formRun.args().parmEnumType() == enumNum(AssetAdvancedRuleGroupType_JP))
        {
            ret.add(formRun.args().parmEnum());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ruleGroupTypeSetForCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets rule group type set for create
    /// </summary>
    /// <returns>
    /// Returns rule group type set
    /// </returns>
    public Set ruleGroupTypeSetForCreate()
    {
        Set   ret = new Set(Types::Enum);

        ret.add(this.currentRuleGroupType());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupRulGroupTypeFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets up rule group type filter
    /// </summary>
    protected void setupRulGroupTypeFilter()
    {
        Set                     ruleGroupTypeSet;
        FormComboBoxControl     ruleGroupFilterCtrl = formRun.control(this.getRuleGroupTypeControlId());
        SetEnumerator           setEnumerator;

        if (ruleGroupFilterCtrl)
        {
            // Register "modified" method for RuleGroupType control
            ruleGroupFilterCtrl.registerOverrideMethod(
                methodStr(FormComboBoxControl, modified),
                methodStr(AssetAdvRuleFormHelper_JP, ruleGroupType_modified),
                this);

            ruleGroupTypeSet = this.ruleGroupTypeSet();
            setEnumerator = ruleGroupTypeSet.getEnumerator();
            if (setEnumerator.moveNext())
            {
                groupTypeComboBox.select(setEnumerator.current());
            }

            if (ruleGroupTypeSet.elements() <= 1)
            {
                ruleGroupFilterCtrl.visible(false);
            }
            else
            {
                ruleGroupFilterCtrl.visible(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of a sub class of <C>AssetAdvRuleFormHelper_JP</C> based on the caller of specified <C>FormRun</C> object.
    /// </summary>
    /// <param name="_formRun">
    /// The <C>FormRun</C> object of <C>AssetAdvancedRule_JP</C> form.
    /// </param>
    /// <returns>
    /// A new instance of a sub class of <C>AssetAdvRuleFormHelper_JP</C>.
    /// </returns>
    public static AssetAdvRuleFormHelper_JP construct(FormRun _formRun)
    {
        AssetAdvRuleFormHelper_JP     ret;

        if (_formRun.name() != formStr(AssetAdvancedRule_JP))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ret = SysExtensionAppClassFactory::getClassFromSysAttribute(
            classStr(AssetAdvRuleFormHelper_JP),
            new AssetAdvRuleFormEntranceAttribute_JP(_formRun.args().menuItemName()));

        if (ret == null)
        {
            ret = new AssetAdvRuleFormHelper_JP();
        }

        ret.initForConstruct(_formRun);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>