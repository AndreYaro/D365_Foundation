<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCXmlParseReader</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is a wrapper class for the <c>System.Xml.XmlReader</c> class.
/// </summary>
/// <remarks>
/// Used to enable IL execution.
/// </remarks>
public class PCXmlParseReader
{
    System.Xml.XmlReader xmlReader;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    /// Closes the reader.
    /// </summary>
    public void close()
    {
        xmlReader.Close();
    }
]]></Source>
			</Method>
			<Method>
				<Name>getAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and XML attribute value from its name.
    /// </summary>
    /// <param name="_attributeName">
    /// An XML attribute name.
    /// </param>
    /// <returns>
    /// An XML attribute value.
    /// </returns>
    public str getAttribute(str _attributeName)
    {
        // the assignment to local member is needed for CLR compatability
        str value = xmlReader.GetAttribute(_attributeName);

        return value;
    }
]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the reader.
    /// </summary>
    /// <param name="_xml">
    /// The XML string to be read.
    /// </param>
    public void initialize(str _xml)
    {
        System.Xml.XmlReaderSettings settings = new System.Xml.XmlReaderSettings();
        System.IO.StringReader       stringReader;
        System.String                xml = _xml; //This is improves performance

        settings.set_ConformanceLevel(System.Xml.ConformanceLevel::Fragment);

        stringReader = new System.IO.StringReader(_xml);

        xmlReader = System.Xml.XmlReader::Create(stringReader, settings);
    }
]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the current XML element.
    /// </summary>
    /// <returns>
    /// The name of the current XML element.
    /// </returns>
    public str name()
    {
        // the assignment to local member is needed for CLR compatability
        str value = XmlReader.get_Name();

        return value;
    }
]]></Source>
			</Method>
			<Method>
				<Name>nameIfIsStartElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the current XML element.
    /// </summary>
    /// <returns>
    /// The name of the current XML element.
    /// </returns>
    public str nameIfIsStartElement()
    {
        str value;

        if (!xmlReader.IsStartElement())
        {
            return '';
        }

        // the assignment to local member is needed for CLR compatability
        value = XmlReader.get_Name();

        return value;
    }
]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }
]]></Source>
			</Method>
			<Method>
				<Name>read</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the current XML element.
    /// </summary>
    public void read()
    {
        xmlReader.Read();
    }
]]></Source>
			</Method>
			<Method>
				<Name>readOuterXml</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the outer XML.
    /// </summary>
    /// <returns>
    /// The outer XML.
    /// </returns>
    public str readOuterXml()
    {
        return xmlReader.ReadOuterXml();
    }
]]></Source>
			</Method>
			<Method>
				<Name>readStartElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the start element of an element given its name.
    /// </summary>
    /// <param name="_elementName">
    /// An element name.
    /// </param>
    public void readStartElement(str _elementName)
    {
        xmlReader.ReadStartElement(_elementName);
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCXmlParseReader construct()
    {
        return new PCXmlParseReader();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>