<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeAgreementInstrumentationPriceDisc_PriceActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TradeAgreementInstrumentationPriceDisc_PriceActivities</c> class provides activity contexts to the trade agreement instrumentation of the <c>PriceDisc_Price</c> class.
/// </summary>
class TradeAgreementInstrumentationPriceDisc_PriceActivities
{
    private const str FindPriceAgreement       = 'FindPriceAgreement';
    private const str ModuleType               = 'ModuleType';
    private const str InventDimId              = 'InventDimId';
    private const str AgreementHeaderExt_RU    = 'AgreementHeaderExt_RU';
    private const str AgreementPartnerCode_RU  = 'AgreementPartnerCode_RU';
    private const str UseRetailPricing         = 'UseRetailPricing';
    
    private TradeAgreementInstrumentationLogger logger;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(TradeAgreementInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static TradeAgreementInstrumentationPriceDisc_PriceActivities newFromLogger(TradeAgreementInstrumentationLogger _logger)
    {
        return new TradeAgreementInstrumentationPriceDisc_PriceActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return logger.activityContext(_activityName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPriceAgreement</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext findPriceAgreement()
    {
        return this.activityContext(FindPriceAgreement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>serializeBasicRunParameters</Name>
				<Source><![CDATA[
    internal static SysInstrumentationEventDataJsonSerializer serializeBasicRunParameters(PriceDiscParameters _parameters)
    {
        SysInstrumentationEventDataJsonSerializer sysInstrumentationEventDataJsonSerializer = new SysInstrumentationEventDataJsonSerializer();;

        sysInstrumentationEventDataJsonSerializer.setValue(TradeAgreementInstrumentationPriceDisc_PriceActivities::ModuleType, enum2Symbol(enumNum(ModuleInventPurchSales), _parameters.parmModuleType()));
        sysInstrumentationEventDataJsonSerializer.setValue(TradeAgreementInstrumentationPriceDisc_PriceActivities::InventDimId, _parameters.parmInventDim().inventDimId);
        sysInstrumentationEventDataJsonSerializer.setValue(TradeAgreementInstrumentationPriceDisc_PriceActivities::AgreementHeaderExt_RU, int642Str(_parameters.parmAgreementHeaderExt_RU()));
        sysInstrumentationEventDataJsonSerializer.setValue(TradeAgreementInstrumentationPriceDisc_PriceActivities::AgreementPartnerCode_RU, _parameters.parmAgreementPartnerCode_RU());
        sysInstrumentationEventDataJsonSerializer.setValue(TradeAgreementInstrumentationPriceDisc_PriceActivities::UseRetailPricing, any2Str(_parameters.parmUseRetailPricing()));

        return sysInstrumentationEventDataJsonSerializer;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>