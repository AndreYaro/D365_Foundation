<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTransientSQLConnectionRetryProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProjTransientSQLConnectionRetryProvider</c> class is responsible for handling exponential backoff retries for transient sql errors.
/// </summary>
internal static class ProjTransientSQLConnectionRetryProvider
{
    private static int defaultMaxRetryOfTransientSqlConnectionError = 5;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>retryTransientSqlConnectionError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles retry logic for transient sql connection error.
    /// </summary>
    /// <param name = "_maxRetryOfTransientSqlConnectionError">Maximum number of retries.</param>
    /// <returns>true if retry should be scheduled; otherwise, false.</returns>
    internal static boolean retryTransientSqlConnectionError(int _maxRetryOfTransientSqlConnectionError 
        = defaultMaxRetryOfTransientSqlConnectionError)
    {
        var currentRetryCount = xSession::currentRetryCount();
        var shouldRetry = currentRetryCount < _maxRetryOfTransientSqlConnectionError;

        if (shouldRetry)
        {
            ProjTransientSQLConnectionRetryProvider::delayRetry(currentRetryCount);
        }

        return shouldRetry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delayRetry</Name>
				<Source><![CDATA[
    static internal void delayRetry(int _retryCount)
    {
        var delay = 5000 * power(2, min(_retryCount, 5));
        sleep(min(60 * 1000, delay));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>