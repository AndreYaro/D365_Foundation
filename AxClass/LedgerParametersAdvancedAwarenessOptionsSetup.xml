<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerParametersAdvancedAwarenessOptionsSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class responsible for loading the default data for advanced ledger settlement parameters.
/// SysSetupConfig must be set as 1.0 so this script can only run once.
/// Default value should be synced with the current state of ExcludeLedgerSettledTransFromYECFeature, LedgerSettlementsAutomationFeature, and LedgerSettlePostForeignCurrencyGainLossFeature features.
/// </summary>
[SysSetupTable(tableStr(LedgerParameters))]
[SysSetupConfigKey(configurationKeyStr(LedgerBasic))]
[SysSetupConfig(true, 600, 1.0)]
public final class LedgerParametersAdvancedAwarenessOptionsSetup extends SysSetupAsync implements SysSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void loadData()
    {
        this.initLedgerSettlementAdvancedParameters();
        this.initForLedgerTransSettlementWork();

        // As of 10.0.40, PA ledger settlement schedule type will always be registered regardless of the parameter state.
        ProcessScheduleTypeRegistration::enableOrDisableType(LedgerSettlementsAutomationConstants::RegisteredTypeName, NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLedgerSettlementAdvancedParameters</Name>
				<Source><![CDATA[
    private void initLedgerSettlementAdvancedParameters()
    {
        LedgerParameters ledgerParameters = LedgerParameters::find(true);
        
        ttsbegin;

        ledgerParameters.selectForUpdate(true);

        ledgerParameters.EnableLedgerSettlementAdvancedAwarenessOptions = FeatureStateProvider::isFeatureEnabled(ExcludeLedgerSettledTransFromYECFeature::instance());
        ledgerParameters.EnableLedgerSettlementProcessAutomation = FeatureStateProvider::isFeatureEnabled(LedgerSettlementsAutomationFeature::instance());
        ledgerParameters.EnableLedgerSettlementPostRealizedGainLoss = FeatureStateProvider::isFeatureEnabled(LedgerSettlePostForeignCurrencyGainLossFeature::instance());

        ledgerParameters.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForLedgerTransSettlementWork</Name>
				<Source><![CDATA[
    private void initForLedgerTransSettlementWork()
    {
        LedgerParameters ledgerParameters = LedgerParameters::find();

        if (ledgerParameters.EnableLedgerSettlementAdvancedAwarenessOptions == NoYes::Yes)
        {
            LedgerTransSettlementAdvancedParameters::unmarkAllMarkedTransactions();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>