<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDocumentFAJournalAROGenerator_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Synchrinized ARO acquisition generator.
/// </summary>
[AssetDocumentGenerateTypeAttribute_JP(AssetDocumentGenerateType_JP::AssetRetirementObligationFAJournal)]
class AssetDocumentFAJournalAROGenerator_JP extends AssetDocumentFAJournalGenerator_JP
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createTrans</Name>
				<Source><![CDATA[
        protected void createTrans()
    {
        Array                               results;
        AssetDocumentPresentValueResult_JP  result;

        if (!AssetRetirementObligation_JP::isAcquired(assetDocumentEntry.RecId))
        {
            results = AssetRetirementPresentValueProvider_JP::calculate(assetDocumentEntry.RecId, ledgerJournalTrans.TransDate);
            if (results.lastIndex() > 0)
            {
                result = results.value(1);
                if (result.parmTransactionDate() == ledgerJournalTrans.TransDate)
                {
                    this.parmAssetTransDate(result.parmTransactionDate());
                    this.parmTransAmount(result.parmAdjustmentAmount());

                    super();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssetTransTypeJournal</Name>
				<Source><![CDATA[
        public AssetTransTypeJournal getAssetTransTypeJournal()
    {
        return AssetTransTypeJournal::Acquisition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init(Args _args)
    {
        #ISOCountryRegionCodes
        AssetDocumentEntry_JP         documentEntryLoc;
        AssetDocumentTable_JP         documentTableLoc;

        super(_args);
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
            [#isoJP, GlobalizationConstants::FeatureReferenceJP00018] ],
            funcName()
        );

        if (assetBook)
        {
            select firstonly documentEntryLoc
                where documentEntryLoc.AssetId  == assetBook.AssetId
                    && documentEntryLoc.BookId  == assetBook.BookId
                join documentTableLoc
                where documentTableLoc.Type == AssetDocumentType_JP::AssetRetirementObligation
                    && documentTableLoc.RecId   == documentEntryLoc.AssetDocumentTable_JP;

            this.parmAssetDocumentEntry(documentEntryLoc);
            this.parmAssetDocumentTable(documentTableLoc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
        protected boolean validate()
    {
        boolean ret = true;

        ret = super();
        if (ret)
        {
            if (this.parmAssetDocumentTable().MainType != AssetDocumentMainType_JP::AssetRetirementObligation
                || this.parmAssetDocumentTable().Type != AssetDocumentType_JP::AssetRetirementObligation
                || this.parmLedgerJournalTransAsset().TransType != AssetTransTypeJournal::Acquisition
                || this.parmLedgerJournalTransAsset().DocumentType_JP != AssetDocumentType_JP::None
                || this.parmLedgerJournalTransAsset().AssetDocumentEntry_JP )
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>