<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSChangeItemTrackingDimensionUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSChangeItemTrackingDimensionUIBuilder</c> class provides the UIBuilder for the
/// <c>WHSChangeItemTrackingDimensionDataContract</c> class.
/// </summary>
class WHSChangeItemTrackingDimensionUIBuilder extends SysOperationAutomaticUIBuilder
{
    DialogField dfTrackingDimensionName;
    DialogField dfHierarchyName;
    WHSChangeItemTrackingDimensionDataContract changeItemTrackingDimensionDataContract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupTrackingDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the lookup for tracking dimension name so there is a dropdown.
    /// </summary>
    /// <param name="_ctrl">
    /// The <c>FormStringControl</c> that will use the lookup.
    /// </param>
    public void lookupTrackingDimension(FormStringControl _ctrl)
    {
        EcoResTrackingDimensionGroup::lookup(_ctrl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the lookup for hierarchy name so there is a dropdown.
    /// </summary>
    /// <param name="_ctrl">
    /// The <c>FormStringControl</c> that will use the lookup.
    /// </param>
    public void lookupHierarchy(FormStringControl _ctrl)
    {
        WHSReservationHierarchy::lookupHierarchy(_ctrl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Used to override the need method of form controls.
    /// </summary>
    public void postBuild()
    {
        super();

        changeItemTrackingDimensionDataContract = this.dataContractObject();

        dfTrackingDimensionName = this.bindInfo().getDialogField(changeItemTrackingDimensionDataContract, methodStr(WHSChangeItemTrackingDimensionDataContract, parmNewTrackingDimensionName));
        dfHierarchyName = this.bindInfo().getDialogField(changeItemTrackingDimensionDataContract, methodStr(WHSChangeItemTrackingDimensionDataContract, parmNewHierarchyName));
        
        dfTrackingDimensionName.registerOverrideMethod(methodStr(FormStringControl, lookup), methodStr(WHSChangeItemTrackingDimensionUIBuilder, lookupTrackingDimension), this);
        dfTrackingDimensionName.registerOverrideMethod(methodStr(FormStringControl, validate), methodStr(WHSChangeItemTrackingDimensionUIBuilder, validateTrackingDimension), this);
        dfTrackingDimensionName.registerOverrideMethod(methodStr(FormControl, initialize), methodStr(WHSChangeItemTrackingDimensionUIBuilder, initializeTrackingDimension), this);

        dfHierarchyName.registerOverrideMethod(methodStr(FormStringControl, lookup), methodStr(WHSChangeItemTrackingDimensionUIBuilder, lookupHierarchy), this);
        dfHierarchyName.registerOverrideMethod(methodStr(FormStringControl, validate), methodStr(WHSChangeItemTrackingDimensionUIBuilder, validateHierarchy), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeTrackingDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the initialize method for the tracking dimension name.
    /// </summary>
    /// <param name="_ctrl">
    /// The <c>FormStringControl</c> that will use the validation logic.
    /// </param>
    public void initializeTrackingDimension(FormStringControl _ctrl)
    {
        EcoResTrackingDimensionGroup trackingDimensionGroup = EcoResTrackingDimensionGroup::findByDimensionGroupName(_ctrl.valueStr());
        this.infoChangeTrackingDimensionGroupToNonBatch(trackingDimensionGroup.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTrackingDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the validation method for the tracking dimension name so that invalid entries aren't permitted.
    /// </summary>
    /// <param name="_ctrl">
    /// The <c>FormStringControl</c> that will use the validation logic.
    /// </param>
    /// <returns>
    /// True if the tracking dimension name is valid; otherwise, false.
    /// </returns>
    public boolean validateTrackingDimension(FormStringControl _ctrl)
    {
        boolean ret = true;

        EcoResTrackingDimensionGroup trackingDimensionGroup = EcoResTrackingDimensionGroup::findByDimensionGroupName(_ctrl.valueStr());
        if (trackingDimensionGroup.RecId == 0)
        {
            ret = checkFailed("@SCM:InvalidTrackingDimensionGroupError");
        }

        this.infoChangeTrackingDimensionGroupToNonBatch(trackingDimensionGroup.RecId);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>infoChangeTrackingDimensionGroupToNonBatch</Name>
				<Source><![CDATA[
    private void infoChangeTrackingDimensionGroupToNonBatch(EcoResTrackingDimensionGroupRecId _newTrackingDimensionGroupRecId)
    {
        if (_newTrackingDimensionGroupRecId
            && #PdsBatchAttribEnabled
            && !InventDimGroupSetup::newDimensionGroups(0, 0, _newTrackingDimensionGroupRecId).getFieldSetup(fieldnum(InventDim, InventBatchId)).isActive())
        {
            info("@SCM:Warning_WHSChangeItemTrackingDimensionUIBuilder_ChangeTrackingDimensionGroupNonBatch_ResetShelfLife");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the validation method for the hierarchy name so that invalid entries aren't permitted.
    /// </summary>
    /// <param name="_ctrl">
    /// The <c>FormStringControl</c> that will use the validation logic.
    /// </param>
    /// <returns>
    /// True if the hierarchy name is valid; otherwise, false.
    /// </returns>
    public boolean validateHierarchy(FormStringControl _ctrl)
    {
        boolean ret = true;

        if (WHSReservationHierarchy::findByName(_ctrl.valueStr()).RecId == 0)
        {
            ret = checkFailed("@WAX4814");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>