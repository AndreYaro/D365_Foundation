<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustPostInvoiceEventHandlerEEFeatures</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustPostInvoiceEventHandlerEEFeatures</c> class is used by event handlers from the
/// <c>CustPostInvoice</c> class methods.
/// </summary>
class CustPostInvoiceEventHandlerEEFeatures
{
    #ISOCountryRegionCodes

    CustInvoiceTable    custInvoiceTable, origCustInvoiceTable;

    boolean             isCountryRegionPL;
    boolean             isCountryRegionHU;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkServiceTariffNumber</Name>
				<Source><![CDATA[
    private boolean checkServiceTariffNumber()
    {
        CustInvoiceLine     tmpCustInvoiceLine;
        TaxGroupHeading     taxGroupHeading;
        TaxServiceTariff    taxServiceTariff;
        boolean             ret = true;

        while select TaxGroup, Description from tmpCustInvoiceLine
            where tmpCustInvoiceLine.ParentRecId == custInvoiceTable.RecId
            exists join taxGroupHeading
            where taxGroupHeading.TaxGroup == tmpCustInvoiceLine.TaxGroup &&
                  taxGroupHeading.IsMandatoryServiceTariff_PL
            notexists join taxServiceTariff
            where taxServiceTariff.ParentTableId == tmpCustInvoiceLine.TableId &&
                  taxServiceTariff.ParentRecId == tmpCustInvoiceLine.RecId
        {
            ret = ret & checkFailed(
                strfmt("@GLS115882", custInvoiceTable.OrderAccount, tmpCustInvoiceLine.Description, tmpCustInvoiceLine.TaxGroup));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>CustPostInvoiceEventHandlerEEFeatures</c> class.
    /// </summary>
    /// <param name="_custInvoiceTable">
    /// The current instance of the <c>CustInvoiceTable</c> table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(CustInvoiceTable _custInvoiceTable)
    {
        custInvoiceTable = _custInvoiceTable;
        origCustInvoiceTable = _custInvoiceTable.orig();
        isCountryRegionPL = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]);
        isCountryRegionHU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and indicates whether the document can post.
    /// </summary>
    /// <param name="_invoiceAmount">
    /// The invoice amount.
    /// </param>
    /// <returns>
    /// true if document can post; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validate(AmountCur _invoiceAmount)
    {
        boolean ret = true;
        CustInvoiceLine localCustInvoiceLine;

        if (isCountryRegionPL || isCountryRegionHU)
        {
            select firstonly localCustInvoiceLine
                where localCustInvoiceLine.ParentRecId == custInvoiceTable.RecId &&
                        localCustInvoiceLine.TaxGroup                            &&
                        localCustInvoiceLine.TaxItemGroup;

            if (localCustInvoiceLine)
            {
                if (! custInvoiceTable.DocumentDate)
                {
                    ret = checkFailed("@GLS110109");
                }

                if (! custInvoiceTable.VatDueDate_W &&
                     CustTable::find(custInvoiceTable.InvoiceAccount).MandatoryVatDate_PL)
                {
                    ret = checkFailed("@GLS220905");
                }
            }

            ret = ret && this.checkServiceTariffNumber();

            ret = SalesInvoiceJournalCreate::checkDocumentDate_W(custInvoiceTable.PostalAddress,
                                                                 custInvoiceTable.DocumentDate,
                                                                 custInvoiceTable.SalesDate_W,
                                                                 custInvoiceTable.creditNote_W(),
                                                                 fieldPName(CustInvoiceTable, DocumentDate),
                                                                 fieldPName(CustInvoiceTable, SalesDate_W)) && ret;
        }

        CustInterestAdjustSalesDateContext context = CustInterestAdjustSalesDateContext::current();

        if (TaxGroupHeading::find(custInvoiceTable.TaxGroup).MandatorySalesDate_W &&
            ! custInvoiceTable.SalesDate_W
            && (context == null
                || !context.parmIsInterest()))
        {
            ret = checkFailed(strFmt("@SYS26332", fieldPName(CustInvoiceTable, SalesDate_W)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateEEFeatures</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(CustPostInvoice), methodStr(CustPostInvoice, validate))]
    /// <summary>
    /// The static method that is used to register the event in the <c>CustPostInvoice</c> class.
    /// </summary>
    /// <param name="_args">
    /// The arguments from caller method.
    /// </param>
    public static void validateEEFeatures(XppPrePostArgs _args)
    {
        #EECountryRegionCodes

        CustPostInvoiceEventHandlerEEFeatures       custInvoiceEventHandler;
        CustPostInvoice                             custPostInvoice;
        CustInvoiceTable                            custInvoiceTable;
        boolean                                     ret;

        if (! SysCountryRegionCode::isLegalEntityInCountryRegion(#easternEuropeAll))
        {
            return;
        }

        custPostInvoice        = _args.getThis();
        custInvoiceTable       = custPostInvoice.parmCustInvoiceTable();
        custInvoiceEventHandler = new CustPostInvoiceEventHandlerEEFeatures(custInvoiceTable);

        ret = _args.getReturnValue() && custInvoiceEventHandler.validate(_args.getArg('_invoiceAmount'));

        _args.setReturnValue(ret);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>