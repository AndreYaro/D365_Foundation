<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationTableType_Sales</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SalesQuotationTypeFactoryAttribute(QuotationType::Sales)]
class SalesQuotationTableType_Sales extends SalesQuotationTableType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canQuotationBePosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the <c>SalesQuotationTable</c> can be posted.
    /// </summary>
    /// <returns>true if the quotation can be posted; otherwise, false.</returns>
    public boolean canQuotationBePosted()
    {
        return (salesQuotationTable.QuotationStatus == SalesQuotationStatus::Sent
            || salesQuotationTable.QuotationStatus == SalesQuotationStatus::Created)
            && (!isIntegrationOwnerDynamics365Sales || salesQuotationTable.IsIntegration == TradeIntegrationType::Dynamics365Sales);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canQuotationBeCanceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the <c>SalesQuotationTable</c> can be canceled.
    /// </summary>
    /// <returns>true if the quotation can be canceled; otherwise, false.</returns>
    public boolean canQuotationBeCanceled()
    {
        return (salesQuotationTable.QuotationStatus == SalesQuotationStatus::Sent
            || (!salesQuotationTable.isTemplate() && salesQuotationTable.QuotationStatus == SalesQuotationStatus::Created))
            && (!isIntegrationOwnerDynamics365Sales || salesQuotationTable.IsIntegration == TradeIntegrationType::Dynamics365Sales);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        salesQuotationTable.QuotationStatus         = SalesQuotationStatus::Created;
        salesQuotationTable.QuotationType           = QuotationType::Sales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canQuotationBeSelected</Name>
				<Source><![CDATA[
    public boolean canQuotationBeSelected()
    {
        return salesQuotationTable.QuotationStatus == SalesQuotationStatus::Created    
            || salesQuotationTable.QuotationStatus == SalesQuotationStatus::Sent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastConfirm</Name>
				<Source><![CDATA[
    QuotationDocNum lastConfirm()
    {
        CustQuotationConfirmSalesLink    custQuotationConfirmSalesLink;
        CustQuotationConfirmJour         custQuotationConfirmJour;
         
        select firstonly TableId from custQuotationConfirmSalesLink
                order by QuotationDate desc, QuotationConfirmId desc
                where custQuotationConfirmSalesLink.OrigQuotationId == salesQuotationTable.QuotationId
            join QuotationDocNum from custQuotationConfirmJour
                where custQuotationConfirmJour.QuotationConfirmId   == custQuotationConfirmSalesLink.QuotationConfirmId   &&
                      custQuotationConfirmJour.QuotationDate        == custQuotationConfirmSalesLink.QuotationDate &&
                      custQuotationConfirmJour.QuotationType        == QuotationType::Sales;
        return custQuotationConfirmJour.QuotationDocNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastQuotation</Name>
				<Source><![CDATA[
    SalesQuotationId lastQuotation()
    {
        CustQuotationSalesLink    custQuotationSalesLink;
        CustQuotationJour         custQuotationJour;
        select firstonly TableId from custQuotationSalesLink
                order by QuotationDate desc, QuotationId desc
                where custQuotationSalesLink.OrigQuotationId == salesQuotationTable.QuotationId
            join QuotationDocNum from custQuotationJour
                where custQuotationJour.QuotationId == custQuotationSalesLink.QuotationId   &&
                      custQuotationJour.QuotationDate   == custQuotationSalesLink.QuotationDate;
        return custQuotationJour.QuotationDocNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [SysObsolete('Use SalesQuotationTableType::construct() instead.', false, 31\05\2017)]
    static SalesQuotationTableType  construct(SalesQuotationTable    _salesQuotationTable)
    {
        return new SalesQuotationTableType_Sales(_salesQuotationTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>