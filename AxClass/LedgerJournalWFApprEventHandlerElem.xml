<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalWFApprEventHandlerElem</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerJournalWFApprEventHandlerElem</c> class is the event handler for ledger journal
///    workflow approval tasks.
/// </summary>
class LedgerJournalWFApprEventHandlerElem extends       LedgerJournalWFApprovalEventHandler
                                          implements    WorkflowElementCanceledEventHandler,  WorkflowElemChangeRequestedEventHandler,
                                                        WorkflowElementCompletedEventHandler, WorkflowElementReturnedEventHandler,
                                                        WorkflowElementStartedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the <c>WorkflowApprovalStatus</c> field of the <c>LedgerJournalTable</c> table from its
    ///    current status to <c>LedgerJournalWFApprovalStatus::NotSubmitted</c>.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    A <c>WorkflowElementEventArgs</c> instance.
    /// </param>
    public void canceled(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        ;

        this.initProperties(_workflowElementEventArgs.parmWorkflowContext());

        if (this.validateWorkflowContext())
        {
            LedgerJournalWFApprovalStatusManager::cancelFromEvent(contextRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeRequested</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the <c>WorkflowApprovalStatus</c> field in the <c>LedgerJournalTable</c> table from its
    ///    current status to the <c>LedgerJournalWFApprovalStatus::ChangeRequested</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void changeRequested(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        ;

        this.initProperties(_workflowElementEventArgs.parmWorkflowContext());

        if (this.validateWorkflowContext())
        {
            LedgerJournalWFApprovalStatusManager::requestChangeFromElementEvent(contextRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Provides an extensiblity point to add business logic related to a workflow element completed event
    ///    for <c>LedgerJournalTable</c> workflow approvals.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    A WorkflowElementEventArgs instance.
    /// </param>
    /// <remarks>
    ///    It is the workflow completed event that is responsible for updating the <c>LedgerJournalTable</c>
    ///    table <c>WorkflowApprovalStatus</c> field from its current status to
    ///    <c>LedgerJournalWFApprovalStatus::Approved</c>. This is because the possible latency between the
    ///    element approval completed event and the workflow completed event creates a window of opportunity
    ///    for an approved journal to be posting or posted before the entire workflow completes.
    ///    This latency
    ///    also creates a condition where it could be possible to cancel a workflow on an approved posting or
    ///    posted journal.
    /// </remarks>
    public void completed(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        ;

        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the <c>WorkflowApprovalStatus</c> field in the <c>LedgerJournalTable</c> table from its
    ///    current status to the <c>LedgerJournalWFApprovalStatus::ChangeRequested</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        ;

        this.initProperties(_workflowElementEventArgs.parmWorkflowContext());

        if (this.validateWorkflowContext())
        {
            LedgerJournalWFApprovalStatusManager::returnFromElementEvent(contextRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the <c>WorkflowApprovalStatus</c> field in the <c>LedgerJournalTable</c> table from its
    ///    current status to the <c>LedgerJournalWFApprovalStatus::PendingApproval</c> enumeration value.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    ///    An instance of the <c>WorkflowElementEventArgs</c> class.
    /// </param>
    public void started(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        ;

        this.initProperties(_workflowElementEventArgs.parmWorkflowContext());

        if (this.validateWorkflowContext())
        {
            LedgerJournalWFApprovalStatusManager::startFromElementEvent(contextRecId);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>