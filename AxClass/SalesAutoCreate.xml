<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesAutoCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
class  SalesAutoCreate
{
    CustTable   custTable;
    SalesTable  salesTable;
    SalesLine   salesLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    void  create()
    {
        #OCCRetryCount

        try
        {
            setprefix("@SYS55110");

            ttsbegin;

            while (this.recordExist())
            {
                this.setCust();

                setprefix(#PreFixField(CustTable,AccountNum));

                this.setSalesTable();

                this.setSalesLine();

                setprefix(#PreFixField(SalesLine,ItemId));

                this.nextRecord();
            }

            this.endUpdate();

            ttscommit;
        }

        catch (Exception::Deadlock)
        {
            retry;
        }

        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSalesLine</Name>
				<Source><![CDATA[
    void  createSalesLine()
    {
        salesLine.createLine(NoYes::No,             // Validate
                             NoYes::No,             // initFromSalesTable
                             NoYes::No,             // initFromInventTable
                             NoYes::No,             // calcInventQty
                             NoYes::Yes,            // searchMarkup
                             NoYes::Yes             // searchPrice
                             );
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSalesTable</Name>
				<Source><![CDATA[
    void  createSalesTable()
    {
        salesTable.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerRef</Name>
				<Source><![CDATA[
    CustRef customerRef()
    {
        return salesTable.CustomerRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryDate</Name>
				<Source><![CDATA[
    DlvDate deliveryDate()
    {
        return salesTable.DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryLocation</Name>
				<Source><![CDATA[
    LogisticsLocationRecId deliveryLocation()
    {
        return LogisticsPostalAddress::findRecId(salesTable.DeliveryPostalAddress).Location;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryName</Name>
				<Source><![CDATA[
    Name deliveryName()
    {
        return salesTable.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryPostalAddress</Name>
				<Source><![CDATA[
    LogisticsPostalAddressRecId deliveryPostalAddress()
    {
        return salesTable.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endUpdate</Name>
				<Source><![CDATA[
    void  endUpdate()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccount</Name>
				<Source><![CDATA[
    CustInvoiceAccount invoiceAccount()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>languageId</Name>
				<Source><![CDATA[
    LanguageId languageId()
    {
        return salesTable.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void  new(Common    _initFromBuffer     = null,
              Object    _callBackClass      = null)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextRecord</Name>
				<Source><![CDATA[
    void nextRecord()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchOrderFormNum</Name>
				<Source><![CDATA[
    CustPurchaseOrder purchOrderFormNum()
    {
        return salesTable.PurchOrderFormNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordExist</Name>
				<Source><![CDATA[
    boolean recordExist()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesId</Name>
				<Source><![CDATA[
    SalesId  salesId()
    {
        return salesTable.SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesOriginId</Name>
				<Source><![CDATA[
    SalesOriginId salesOriginId()
    {
        return salesTable.SalesOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesType</Name>
				<Source><![CDATA[
    SalesType salesType()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCust</Name>
				<Source><![CDATA[
    void  setCust()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesLine</Name>
				<Source><![CDATA[
    void  setSalesLine()
    {
        salesLine.clear();
        salesLine.initFromSalesTable(salesTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesTable</Name>
				<Source><![CDATA[
    void  setSalesTable()
    {
        if (!custTable)
            throw error("@SYS23020");

        salesTable.clear();
        salesTable.initValue(this.salesType());

        NumberSeq num = this.retrieveSalesOrderNumberSequence();

        SalesId tmpSalesId = num.num();

        if (SalesTable::exist(tmpSalesId))
        {
            num.abort();
            checkFailed("@SYS55111");
            checkFailed(strfmt("@SYS55112", tmpSalesId));
            throw error("@SYS23020");
        }

        salesTable.SalesId = tmpSalesId;

        num.used();

        salesTable.SalesOriginId         = this.salesOriginId();

        salesTable.CustAccount           = custTable.AccountNum;
        salesTable.initFromCustTable();

        if (salesTable.InvoiceAccount != this.invoiceAccount())
        {
            salesTable.InvoiceAccount    = this.invoiceAccount();
            salesTable.initInvoiceAccount();
        }

        salesTable.LanguageId            = this.languageId();
        salesTable.ShippingDateRequested = this.deliveryDate();
        salesTable.DeliveryName          = this.deliveryName();
        salesTable.DeliveryPostalAddress = this.deliveryPostalAddress();
        salesTable.CustomerRef           = this.customerRef();
        salesTable.PurchOrderFormNum     = this.purchOrderFormNum();

        if (salesTable.ProjId)
        {
            salesTable.initFromProjInvoiceTable();
        }

        if (!salesTable.checkAccount())
        {
            throw error("@SYS23020");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParm</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Creates a <c>SalesAutoCreate</c> instance based on the given parameters.
    /// </summary>
    /// <param name = "_buffer">
    /// The first record to initialize from.
    /// </param>
    /// <param name = "_object">
    /// The object to initialize from.
    /// </param>
    /// <param name = "_buffer2">
    /// The second record to initialize from.
    /// </param>
    /// <returns>
    /// A <c>SalesAutoCreate</c> instance
    /// </returns>
    protected static SalesAutoCreate newFromParm(Common _buffer, Object _object, Common _buffer2)
    {
        SalesCreateReleaseOrderTableTmp salesCreateReleaseOrderTableTmp;

        switch (_buffer.TableId)
        {
            case tablenum(SalesCreateReleaseOrderLineTmp):
                SalesCreateReleaseOrderLineTmp salesCreateReleaseOrderLineTmp = _buffer  as SalesCreateReleaseOrderLineTmp;
                if (_buffer2.TableId == tablenum(SalesCreateReleaseOrderTableTmp))
                {
                    salesCreateReleaseOrderTableTmp = _buffer2 as SalesCreateReleaseOrderTableTmp;
                }
                if (salesCreateReleaseOrderLineTmp.AgreementLineQuantityCommitment
                    || salesCreateReleaseOrderTableTmp.AgreementHeader)
                {
                    return SalesAutoCreate_ReleaseFromAgreement::construct(_buffer, _object, _buffer2);
                }
                else
                {
                    return new SalesAutoCreate_ReleaseOrder(_buffer,_object,_buffer2);
                }
            case tablenum(PurchLine): return new SalesAutoCreate_ProjPurchLine(_buffer,_object);
            case tablenum(SalesBasketLine): return new SalesAutoCreate_Basket(_buffer,_object);
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>SalesAutoCreate</c> instance based on the given parameters.
    /// </summary>
    /// <param name = "_buffer">
    /// The first record to initialize from.
    /// </param>
    /// <param name = "_object">
    /// The object to initialize from.
    /// </param>
    /// <param name = "_buffer2">
    /// The second record to initialize from.
    /// </param>
    /// <returns>
    /// A <c>SalesAutoCreate</c> instance
    /// </returns>
    static SalesAutoCreate construct(Common       buffer = null,
                                     Object       object = null,
                                     Common       buffer2 = null)
    {
        SalesAutoCreate salesAutoCreate = SalesAutoCreate::newFromParm(buffer, object, buffer2);

        if (!salesAutoCreate)
        {
            throw error(strfmt("@SYS23419",tableid2name(buffer.TableId)));
        }

        return salesAutoCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSalesOrderNumberSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>NumberSeq</c> for sales order.
    /// </summary>
    /// <returns>A <c>NumberSeq</c> instance.</returns>
    private NumberSeq retrieveSalesOrderNumberSequence()
    {
        return NumberSeq::newGetNum(this.retrieveSalesOrderNumberSequenceReference());
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSalesOrderNumberSequenceReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>NumberSequenceReference</c> for sales order.
    /// </summary>
    /// <returns>A <c>NumberSequenceReference</c> instance.</returns>
    protected NumberSequenceReference retrieveSalesOrderNumberSequenceReference()
    {
        return SalesParameters::numRefSalesId();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>