<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankPromissoryNoteDP_FR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankPromissoryNoteDP_FR</c> class is the report data provider class for the
///    <c>BankPromissoryNote_FR</c> report.
/// </summary>
[
    SRSReportParameterAttribute(classstr(SRSTmpTblMarshallerContract))
]
class BankPromissoryNoteDP_FR extends SRSReportDataProviderBase
{
    BankPromissoryNoteTmp_FR     bankPromissoryNoteTmp_FR;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBankPromissoryNoteTmp_FR</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the data from the <c>BankPromissoryNoteTmp_FR</c> temporary table.
    /// </summary>
    /// <returns>
    ///    The data from the <c>BankPromissoryNoteTmp_FR</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tablestr(BankPromissoryNoteTmp_FR))
    ]
    public BankPromissoryNoteTmp_FR getBankPromissoryNoteTmp_FR()
    {
        select bankPromissoryNoteTmp_FR;
        return bankPromissoryNoteTmp_FR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the data into the <c>BankPromissoryNoteTmp_FR</c> temporary table.
    /// </summary>
    public void processReport()
    {
        SrsReportRunPermission      permission;
        SRSTmpTblMarshallerContract contract =  this.parmDataContract() as SRSTmpTblMarshallerContract;

        permission = new SrsReportRunPermission();
        permission.assert();

        if (contract.parmTmpTableDataRecId())
        {
            //Temp Table Object that was returned from SRSDataCarrier
            bankPromissoryNoteTmp_FR = SRSTmpTblMarshaller::getTmpTbl(contract.parmTmpTableDataRecId());
            SRSTmpTblMarshaller::deleteTmpTblData(contract.parmTmpTableDataRecId());
        }

        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
