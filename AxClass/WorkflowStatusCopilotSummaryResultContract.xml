<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WorkflowStatusCopilotSummaryResultContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WorkflowStatusCopilotSummaryResultContract</c> is the result contract for workflow copilot summary
/// </summary>
internal final class WorkflowStatusCopilotSummaryResultContract
{
    private RecId trackingStatusRecId;
    private RecId lastTrackingTableRecordId;
    private str workflowSummaryResult;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of <c>WorkflowStatusCopilotSummaryResultContract</c>.
    /// </summary>
    /// <param name = "_trackingStatusRecId">The tracking status record Id.</param>
    /// <param name = "_lastTrackingTableRecordId">The last tracking table record Id.</param>
    /// <param name = "_workflowSummaryResult">The workflow summary result.</param>
    /// <returns>The instance of <c>WorkflowStatusCopilotSummaryResultContract</c>.</returns>
    internal static WorkflowStatusCopilotSummaryResultContract newFromResult(RecId _trackingStatusRecId, RecId _lastTrackingTableRecordId, str _workflowSummaryResult)
    {
        WorkflowStatusCopilotSummaryResultContract contract = new WorkflowStatusCopilotSummaryResultContract();
        contract.trackingStatusRecId = _trackingStatusRecId;
        contract.lastTrackingTableRecordId = _lastTrackingTableRecordId;
        contract.workflowSummaryResult = _workflowSummaryResult;

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTrackingStatusRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tracking status record Id.
    /// </summary>
    /// <returns>The record id of tracking status.</returns>
    internal RecId getTrackingStatusRecId()
    {
        return trackingStatusRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastTrackingTableRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets last tracking table record Id.
    /// </summary>
    /// <returns>The last tracking table record Id.</returns>
    internal RecId getLastTrackingTableRecordId()
    {
        return lastTrackingTableRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkflowSummaryResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the workflow summary result.
    /// </summary>
    /// <returns>The workflow summary result</returns>
    internal str getWorkflowSummaryResult()
    {
        return workflowSummaryResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs the instance <c>WorkflowStatusCopilotSummaryResultContract</c> into container.
    /// </summary>
    /// <param name = "contract">The instance of <c>WorkflowStatusCopilotSummaryResultContract</c>.</param>
    /// <returns>The container after packing.</returns>
    internal static container pack(WorkflowStatusCopilotSummaryResultContract contract)
    {
        if (contract)
        {
            return [contract.getTrackingStatusRecId(), contract.getLastTrackingTableRecordId(), contract.getWorkflowSummaryResult()];
        }

        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unpacks the container into <c>WorkflowStatusCopilotSummaryResultContract</c> instance.
    /// </summary>
    /// <param name = "_workflowSummaryReusltContainer">The workflow summary result container.</param>
    /// <returns>The instance of <c>WorkflowStatusCopilotSummaryResultContract</c>.</returns>
    internal static WorkflowStatusCopilotSummaryResultContract unpack(container _workflowSummaryReusltContainer)
    {
        if (_workflowSummaryReusltContainer != conNull())
        {
            return WorkflowStatusCopilotSummaryResultContract::newFromResult(
                conPeek(_workflowSummaryReusltContainer, 1),
                conPeek(_workflowSummaryReusltContainer, 2),
                conPeek(_workflowSummaryReusltContainer, 3));
        }

        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>