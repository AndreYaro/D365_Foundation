<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfSysQueryRun</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Query run without prompt window.
/// </summary>
class PmfSysQueryRun extends SysQueryRun
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// public new
    /// </summary>
    /// <param name="_p1"> Any type of parameter. </param>
    public void new(anytype _p1 = null)
    {
        super (_p1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prompt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Do not launch prompt window.
    /// </summary>
    /// <returns> Return false.</returns>
    public boolean prompt()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Default construct to instanciate the class.
    /// </summary>
    /// <returns> New PmfSysQueryRun object.</returns>
    public static PmfSysQueryRun construct()
    {
        return new PmfSysQueryRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pmfInventTableIsBOMFormula</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a query range that can be used to filter products that have the production type of BOM or
    /// Formula or Planning item.
    /// </summary>
    /// <returns>
    /// The range value to apply to a query.
    /// </returns>
    [QueryRangeFunctionAttribute()]
    public static str pmfInventTableIsBOMFormula()
    {
        if (#PMFEnabled)
        {
            return strfmt('%1, %2, %3', enum2str(PmfProductType::BOM), enum2str(PmfProductType::Formula), enum2str(PmfProductType::MainItem));
        }
        else
        {
            return SysQuery::valueUnlimited();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>