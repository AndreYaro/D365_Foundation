<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransIdSum_VoucherPhysical</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransIdSum_VoucherPhysical extends InventTransIdSum
{
    InventTransOriginId markingRefInventTransOrigin;
    VoucherPhysical     voucherPhysical;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcSumImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and stores the results that are shown in internal variables.
    /// </summary>
    [Replaceable]
    protected void calcSumImplementation()
    {
        InventTrans     inventTrans;
        InventDim       inventDimTest;

        if (filterDimensions)
        {
            while select sum(Qty)
                from inventTrans
                group by StatusIssue, StatusReceipt
                where   inventTrans.InventTransOrigin             == transOriginId
                    && (inventTrans.TransChildType                == childType                    || !perChildType)
                    && (inventTrans.TransChildRefId               == childRefId                   || !perChildType)
                    &&  inventTrans.VoucherPhysical               == voucherPhysical
                    && (inventTrans.MarkingRefInventTransOrigin   == markingRefInventTransOrigin  || !markingRefInventTransOrigin)
                #InventDimExistsJoin(inventTrans.inventDimId, inventDimTest, inventDimCriteria, inventDimParmCriteria)
            {
                this.addInventTransToTotals(inventTrans);
            }
        }
        else
        {
            while select sum(Qty) 
                from inventTrans
                group by StatusIssue, StatusReceipt
                where   inventTrans.InventTransOrigin             == transOriginId
                    && (inventTrans.TransChildType                == childType                    || !perChildType)
                    && (inventTrans.TransChildRefId               == childRefId                   || !perChildType)
                    &&  inventTrans.VoucherPhysical               == voucherPhysical
                    && (inventTrans.MarkingRefInventTransOrigin   == markingRefInventTransOrigin  || !markingRefInventTransOrigin)
            {
                this.addInventTransToTotals(inventTrans);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkingRefInventTransOrigin</Name>
				<Source><![CDATA[
        public InventTransOriginId parmMarkingRefInventTransOrigin(InventTransOriginId _markingRefInventTransOrigin = markingRefInventTransOrigin)
    {
        markingRefInventTransOrigin = _markingRefInventTransOrigin;

        return markingRefInventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVoucherPhysical</Name>
				<Source><![CDATA[
        public VoucherPhysical parmVoucherPhysical(VoucherPhysical _voucherPhysical = voucherPhysical)
    {
        voucherPhysical = _voucherPhysical;

        return voucherPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newTransOriginId</Name>
				<Source><![CDATA[
        public static InventTransIdSum_VoucherPhysical newTransOriginId(InventTransOriginId _transOriginId)
    {
        return new InventTransIdSum_VoucherPhysical(_transOriginId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newVoucherPhysical</Name>
				<Source><![CDATA[
        public static InventTransIdSum_VoucherPhysical newVoucherPhysical(
        InventTransOriginId _transOriginId,
        VoucherPhysical     _voucherPhysical)
    {
        InventTransIdSum_VoucherPhysical inventTransIdSum_VoucherPhysical = InventTransIdSum_VoucherPhysical::newTransOriginId(_transOriginId);
        inventTransIdSum_VoucherPhysical.parmVoucherPhysical(_voucherPhysical);

        return inventTransIdSum_VoucherPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newVoucherPhysicalReference</Name>
				<Source><![CDATA[
        public static InventTransIdSum_VoucherPhysical newVoucherPhysicalReference(
        InventTransOriginId _inventTransOriginId,
        VoucherPhysical     _voucherPhysical,
        InventTransOriginId _markingRefInventTransOrigin)
    {
        InventTransIdSum_VoucherPhysical inventTransIdSum_VoucherPhysical = InventTransIdSum_VoucherPhysical::newTransOriginId(_inventTransOriginId);
        inventTransIdSum_VoucherPhysical.parmVoucherPhysical(_voucherPhysical);
        inventTransIdSum_VoucherPhysical.parmMarkingRefInventTransOrigin(_markingRefInventTransOrigin);

        return inventTransIdSum_VoucherPhysical;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
