<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryTransactionQuantityFormatConverter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventoryTransactionQuantityFormatConverter</c> class performs conversion between the two representations of the 
/// quantities we have in the solution.
/// </summary>
internal class WHSInventoryTransactionQuantityFormatConverter
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>convertFromCwFormatToWarehouseHandlingFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts from cwQty-based format to the handling quantity and weight.
    /// </summary>
    /// <param name = "_itemId">An item to perform a conversion for.</param>
    /// <param name = "_qty">Inventory quantity (can be discrete units or weight, depending on item type).</param>
    /// <param name = "_cwQty">Catch-weight quantity.</param>
    /// <returns>A container where first element is handling quantity and second - handling weight.</returns>
    [Hookable(false)]
    internal static container convertFromCwFormatToWarehouseHandlingFormat(
        ItemId          _itemId,
        InventQty       _qty,
        PdsCWInventQty  _cwQty)
    {
        WHSInventoryTransactionHandlingQty    handlingQty;
        WHSInventoryTransactionHandlingWeight handlingWeight;

        if (PdsGlobal::pdsIsCWItem(_itemId))
        {
            handlingQty = _cwQty;
            handlingWeight = _qty;
        }
        else
        {
            handlingQty = _qty;
        }

        return [handlingQty, handlingWeight];
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertFromWarehouseHandlingFormatToCwFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts from the handling quantity and weight to the cwQty-based format.
    /// </summary>
    /// <param name = "_itemId">An item to perform a conversion for.</param>
    /// <param name = "_handlingQty">Handling quantity.</param>
    /// <param name = "_handlingWeight">Handling weight.</param>
    /// <returns>A container where first element is inventory quantity and second - catch-weight quantity.</returns>
    [Hookable(false)]
    internal static container convertFromWarehouseHandlingFormatToCwFormat(
        ItemId _itemId,
        WHSInventoryTransactionHandlingQty _handlingQty,
        WHSInventoryTransactionHandlingWeight _handlingWeight)
    {
        Qty qty;
        PdsCWInventQty pdsCWQty;

        if (PdsGlobal::pdsIsCWItem(_itemId))
        {
            qty = _handlingWeight;
            pdsCWQty = _handlingQty;
        }
        else
        {
            qty = _handlingQty;
        }

        return [qty, pdsCWQty];
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertFromWarehouseHandlingFormatToInventoryFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts from the handling quantity and weight to the inventory-based format.
    /// </summary>
    /// <param name = "_itemId">An item to perform a conversion for.</param>
    /// <param name = "_handlingQty">Handling quantity.</param>
    /// <param name = "_handlingWeight">Handling weight.</param>
    /// <returns>A class representing quantities in inventory format.</returns>
    [Hookable(false)]
    internal static WHSInventoryQuantityPair convertFromWarehouseHandlingFormatToInventoryFormat(
        ItemId _itemId,
        WHSInventoryTransactionHandlingQty _handlingQty,
        WHSInventoryTransactionHandlingWeight _handlingWeight)
    {
        Qty qty;
        PdsCWInventQty pdsCWQty;

        [qty, pdsCWQty] = WHSInventoryTransactionQuantityFormatConverter::convertFromWarehouseHandlingFormatToCwFormat(
            _itemId,
            _handlingQty,
            _handlingWeight);

        return WHSInventoryQuantityPair::newFromValues(qty, pdsCWQty);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>