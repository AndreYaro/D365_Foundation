<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportInclAdjustmentContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>TaxReportInclAdjustment</c> SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>TaxReportInclAdjustment</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute
]
public class TaxReportInclAdjustmentContract
{
    boolean includeDetails;
    TaxPeriod taxPeriod;
    TransDate fromDate;
    TransDate toDate;
    TransDate transDate;
    Voucher voucher;
    NoYes taxReported;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FromDate
    /// </returns>

    [
        DataMemberAttribute('FromDate')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter IncludeDetails.
    /// </summary>
    /// <param name="_includeDetails">
    /// The new value of the datacontract parameter IncludeDetails; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter IncludeDetails
    /// </returns>
    [
        DataMemberAttribute('IncludeDetails'),
        SysOperationLabelAttribute(literalstr("@SYS316360"))
    ]
    public boolean parmIncludeDetails(boolean _includeDetails = includeDetails)
    {
        includeDetails = _includeDetails;
        return includeDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxPeriod.
    /// </summary>
    /// <param name="_taxPeriod">
    /// The new value of the datacontract parameter TaxPeriod; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxPeriod
    /// </returns>
    [
        DataMemberAttribute('TaxPeriod')
    ]
    public TaxPeriod parmTaxPeriod(TaxPeriod _taxPeriod = taxPeriod)
    {
        taxPeriod = _taxPeriod;
        return taxPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxReported</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TaxReported.
    /// </summary>
    /// <param name="_taxReported">
    /// The new value of the datacontract parameter TaxReported; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TaxReported
    /// </returns>
    [
        DataMemberAttribute('TaxReported')
    ]
    public NoYes parmTaxReported(NoYes _taxReported = taxReported)
    {
        taxReported = _taxReported;
        return taxReported;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TransDate.
    /// </summary>
    /// <param name="_transDate">
    /// The new value of the datacontract parameter TransDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TransDate
    /// </returns>
    [
        DataMemberAttribute('TransDate')
    ]
    public TransDate parmTransDate(TransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Voucher.
    /// </summary>
    /// <param name="_voucher">
    /// The new value of the datacontract parameter Voucher; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Voucher
    /// </returns>
    [
        DataMemberAttribute('Voucher')
    ]
    public Voucher parmVoucher(Voucher _voucher = voucher)
    {
        voucher = _voucher;
        return voucher;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>