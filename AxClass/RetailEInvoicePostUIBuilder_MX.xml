<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailEInvoicePostUIBuilder_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailEInvoicePostUIBuilder_MX</c> class controls the dialog behavior for the <c>RetailEInvoiceCFDIPostService_MX</c> class.
/// </summary>
public class RetailEInvoicePostUIBuilder_MX extends SysOperationAutomaticUIBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables invoice DateTime input on posting form after form build.
    /// </summary>
    public void postBuild()
    {
        super();

        boolean isAggregation = this.dataContractObject().parmIsAggregateStatements();

        DialogField dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmStatementId));
        dialogField.allowEdit(!isAggregation);

        dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmInvoiceDateTime));
        dialogField.allowEdit(isAggregation);

        dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriod));
        dialogField.allowEdit(isAggregation);

        dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodStart));
        dialogField.allowEdit(isAggregation);

        dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodEnd));
        dialogField.allowEdit(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides default form methods with retail-specific methods to find required statement.
    /// </summary>
    public void postRun()
    {
        Dialog dialogLocal = this.dialog();

        super();

        DialogField dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmStatementId));
        dialogField.registerOverrideMethod(methodStr(FormStringControl, modified), methodStr(RetailEInvoicePostUIBuilder_MX, statementIdModified), this);
        dialogField.registerOverrideMethod(methodStr(FormStringControl, lookup), methodStr(RetailEInvoicePostUIBuilder_MX, statementIdLookup), this);

        this.bindInfo()
            .getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmIsAggregateStatements))
            .registerOverrideMethod(methodStr(FormCheckboxControl, modified), methodStr(RetailEInvoicePostUIBuilder_MX, isAggregateStatementsModified), this);

        this.bindInfo()
            .getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriod))
            .registerOverrideMethod(methodStr(FormComboBoxControl, modified), methodStr(RetailEInvoicePostUIBuilder_MX, aggregationPeriodModified), this);

        this.bindInfo()
            .getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodStart))
            .registerOverrideMethod(methodStr(FormDateTimeControl, modified), methodStr(RetailEInvoicePostUIBuilder_MX, aggregationPeriodStartModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>statementIdlookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the lookup for statement ID control.
    /// </summary>
    /// <param name="_statementIdControl">
    /// The <c>FormStringControl</c> control.
    /// </param>
    public void statementIdlookup(FormStringControl _statementIdControl)
    {
        SysTableLookup statementIdLookup = SysTableLookup::newParameters(tableNum(RetailStatementJour), _statementIdControl, true);

        statementIdLookup.addLookupfield(fieldNum(RetailStatementJour, StatementId));
        statementIdLookup.addLookupfield(fieldNum(RetailStatementJour, StoreId));
        statementIdLookup.addLookupfield(fieldNum(RetailStatementJour, PostedDate));

        statementIdLookup.parmQuery(new Query(queryStr(RetailEInvoiceQuery)));

        statementIdLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>statementIdModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>TransDate</c> value when the <c>StatementId</c> field is modified.
    /// </summary>
    /// <param name = "_statementIdControl">
    /// The <c>FormStringControl</c> control.
    /// </param>
    /// <returns>
    /// true if the field can be edited; otherwise, false.
    /// </returns>
    public boolean statementIdModified(FormStringControl _statementIdControl)
    {
        boolean valueWasModified = _statementIdControl.modified();

        if (valueWasModified)
        {
            DialogField dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmInvoiceDateTime));

            RetailStatementJour statementJour = RetailStatementJour::find(_statementIdControl.valueStr());

            if (statementJour)
            {
                dialogField.value(DateTimeUtil::newDateTime(statementJour.postedDate, statementJour.postedTime));
                dialogField.allowEdit(true);
            }
            else
            {
                dialogField.value(utcDateTimeNull());
                dialogField.allowEdit(false);
            }
        }

        return valueWasModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAggregateStatementsModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets value when the <c>IsAggregateStatements</c> field is modified.
    /// </summary>
    /// <param name = "_isAggregateStatementsControl">
    /// The <c>FormCheckboxControl</c> control.
    /// </param>
    /// <returns>
    /// true if the field was modified; otherwise, false.
    /// </returns>
    private boolean isAggregateStatementsModified(FormCheckboxControl _isAggregateStatementsControl)
    {
        boolean valueWasModified = _isAggregateStatementsControl.modified();

        if (valueWasModified)
        {
            boolean isAggregation = _isAggregateStatementsControl.value();

            DialogField dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmStatementId));
            dialogField.value('');
            dialogField.allowEdit(!isAggregation);

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmInvoiceDateTime));
            dialogField.value(utcDateTimeNull());
            dialogField.allowEdit(isAggregation);

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriod));
            dialogField.value(RetailEInvoicePeriod_MX::Daily);
            dialogField.allowEdit(isAggregation);

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodStart));
            dialogField.value(dateNull());
            dialogField.allowEdit(isAggregation);

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodEnd));
            dialogField.value(dateNull());
        }

        return valueWasModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggregationPeriodModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets value when the <c>AggregationPeriod</c> field is modified.
    /// </summary>
    /// <param name = "_aggregationPeriodControl">
    /// The <c>FormComboboxControl</c> control.
    /// </param>
    /// <returns>
    /// true if the field was modified; otherwise, false.
    /// </returns>
    private boolean aggregationPeriodModified(FormComboboxControl _aggregationPeriodControl)
    {
        boolean valueWasModified = _aggregationPeriodControl.modified();

        if (valueWasModified)
        {
            DialogField dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodStart));
            dialogField.value(dateNull());

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodEnd));
            dialogField.value(dateNull());

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmInvoiceDateTime));
            dialogField.value(utcDateTimeNull());
        }

        return valueWasModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggregationPeriodStartModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets value when the <c>AggregationPeriodStart</c> field is modified.
    /// </summary>
    /// <param name = "_aggregationPeriodStartControl">
    /// The <c>FormComboboxControl</c> control.
    /// </param>
    /// <returns>
    /// true if the field was modified; otherwise, false.
    /// </returns>
    private boolean aggregationPeriodStartModified(FormDateControl _aggregationPeriodStartControl)
    {
        boolean valueWasModified = _aggregationPeriodStartControl.modified();

        if (valueWasModified)
        {
            DialogField dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriod));
            RetailEInvoicePeriod_MX period = dialogField.value();

            RetailEInvoicePeriodDatesCalculator_MX periodDatesCalculator = RetailEInvoicePeriodDatesCalculator_MX::calculate(period, _aggregationPeriodStartControl.dateValue());

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodStart));
            dialogField.value(periodDatesCalculator.getPeriodStart());

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmAggregationPeriodEnd));
            dialogField.value(periodDatesCalculator.getPeriodEnd());

            dialogField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(RetailEInvoicePostContract_MX, parmInvoiceDateTime));
            dialogField.value(DateTimeUtil::newDateTime(periodDatesCalculator.getPeriodEnd(), 0));
        }

        return valueWasModified;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>