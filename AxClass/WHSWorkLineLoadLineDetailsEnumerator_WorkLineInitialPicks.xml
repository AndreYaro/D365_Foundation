<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkLineLoadLineDetailsEnumerator_WorkLineInitialPicks</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWorkLineLoadLineDetailsEnumerator_WorkLineInitialPicks extends WHSWorkLineLoadLineDetailsEnumerator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSWorkLineLoadLineDetailsEnumerator_WorkLineInitialPicks construct()
    {
        return new WHSWorkLineLoadLineDetailsEnumerator_WorkLineInitialPicks();
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnTableId</Name>
				<Source><![CDATA[
    protected TableId returnTableId()
    {
        return tableNum(WHSWorkLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQueryRun</Name>
				<Source><![CDATA[
    protected void initQueryRun()
    {
        WHSWorkLine firstPutLine = WHSWorkTable::getFirstPutWorkLine(workId);

        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(this.returnTableId());
        
        if (!groupByLoadId)
        {
            qbds.addSelectionField(fieldNum(WHSWorkLine, LoadLineRefRecId));
            qbds.addSelectionField(fieldNum(WHSWorkLine, InventQtyWork), SelectionField::Sum);
            qbds.addSelectionField(fieldNum(WHSWorkLine, CapturedWeight), SelectionField::Sum);
        }

        qbds.addRange(fieldNum(WHSWorkLine, WorkId)).value(queryValue(workId));
        qbds.addRange(fieldNum(WHSWorkLine, WorkType)).value(queryValue(WHSWorkType::Pick));
        qbds.addRange(fieldNum(WHSWorkLine, LineNum)).value(strFmt('<%1', queryValue(firstPutLine.LineNum)));

        QueryBuildRange qbrWorkStatus = qbds.addRange(fieldNum(WHSWorkLine, WorkStatus));
        if (queryOnlyClosedWorkLines)
        {
            qbrWorkStatus.value(queryValue(WHSWorkStatus::Closed));
        }
        else
        {
            qbrWorkStatus.value(SysQuery::valueNot(WHSWorkStatus::Cancelled));
        }

        if (groupByLoadId)
        {
            this.appendGroupByLoadIdToQuery(qbds);
        }
        else
        {
            qbds.addGroupByField(fieldNum(WHSWorkLine, LoadLineRefRecId));
        }

        queryRun = new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    private WHSWorkLine currentRecord()
    {
        return this.current() as WHSWorkLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentLoadLineRefRecId</Name>
				<Source><![CDATA[
    public WHSLoadLineRefRecId currentLoadLineRefRecId()
    {
        return this.currentRecord().LoadLineRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentInventQtyWork</Name>
				<Source><![CDATA[
    public InventQty currentInventQtyWork()
    {
        return this.currentRecord().InventQtyWork;
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendGroupByLoadIdToQuery</Name>
				<Source><![CDATA[
    private void appendGroupByLoadIdToQuery(QueryBuildDataSource _qbds)
    {
        QueryBuildDataSource qbdsLoadLine = _qbds.addDataSource(tableNum(WHSLoadLine));
        qbdsLoadLine.relations(true);
        qbdsLoadLine.addGroupByField(fieldNum(WHSLoadLine, LoadId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentCapturedWeight</Name>
				<Source><![CDATA[
    public WHSCapturedWeight currentCapturedWeight()
    {
        return this.currentRecord().CapturedWeight;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>