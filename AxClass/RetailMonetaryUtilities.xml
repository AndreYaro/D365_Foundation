<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMonetaryUtilities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Monetary utilities class.
/// </summary>
[SysObsolete('This class is deprecated.', false, 22\06\2022)]
class RetailMonetaryUtilities
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isPositiveAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verify whether entered amount is positive or not.
    /// </summary>
    /// <param name = "_amount">The amount to check.</param>
    /// <returns>true if positive; otherwise, false.</returns>
    public static boolean isPositiveAmount(Amount _amount)
    {
        boolean isValid = _amount > 0;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, "@SYS99117");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPositiveQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verify whether entered amount is positive or not.
    /// </summary>
    /// <param name = "_quantity">The quantity to check.</param>
    /// <returns>true if positive; otherwise, false.</returns>
    public static boolean isPositiveQuantity(Qty _quantity)
    {
        boolean isValid = _quantity > 0;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, "@SYS53673");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPositiveQuantityAllowZero</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verify whether entered quantity is greater than or equal to zero.
    /// </summary>
    /// <param name = "_quantity">The quantity to check.</param>
    /// <returns>true if positive; otherwise, false.</returns>
    public static boolean isPositiveQuantityAllowZero(Qty _quantity)
    {
        boolean isValid = _quantity >= 0;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, "@Retail:QuantityLessThanZeroError");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDiscountAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Veify whether discount is valid or not.
    /// </summary>
    /// <param name = "_discountAmount">The discount amount to check.</param>
    /// <returns>true if valid; otherwise, false.</returns>
    public static boolean isValidDiscountAmount(DiscAmount _discountAmount)
    {
        boolean isValid = _discountAmount > 0;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, strFmt("@Retail:IncorrectDiscountAmount", _discountAmount));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDiscountAmountAllowZero</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verify whether it allows zero.
    /// </summary>
    /// <param name = "_discountAmount">The discount amount to check.</param>
    /// <returns>true if valid; otherwise, false.</returns>
    public static boolean isValidDiscountAmountAllowZero(DiscAmount _discountAmount)
    {
        boolean isValid = _discountAmount >= 0;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, "@Retail:NoNegativeDiscountAmount");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDiscountDealPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks deal price.
    /// </summary>
    /// <param name = "_dealPrice">The deal price to check.</param>
    /// <returns>true if it is positive; otherwise, false.</returns>
    public static boolean isValidDiscountDealPrice (Price _dealPrice)
    {
        boolean isValid = _dealPrice > 0;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, strFmt("@Retail:IncorrectDealPrice", _dealPrice));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDiscountDealPriceAllowZero</Name>
				<Source><![CDATA[
    /// <summary>
    /// Discount deal price.
    /// </summary>
    /// <param name = "_dealPrice">The deal price.</param>
    /// <returns>true if positive; otherwise, false.</returns>
    public static boolean isValidDiscountDealPriceAllowZero (Price _dealPrice)
    {
        boolean isValid = _dealPrice >= 0;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, "@Retail:NoNegativeDealPrice");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDiscountPercentageAllowZero</Name>
				<Source><![CDATA[
    /// <summary>
    /// Discount percentage.
    /// </summary>
    /// <param name = "_percent">The discount percentage to check.</param>
    /// <returns>true if percentage is between 0 and 100 inclusive; otherwise, false.</returns>
    public static boolean isValidDiscountPercentageAllowZero(Percent _percent)
    {
        boolean isValid = _percent >= 0 && _percent <= 100;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, "@SYS31248");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDiscountPercentage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Discount percentage.
    /// </summary>
    /// <param name = "_percent">The discount percentage to check.</param>
    /// <returns>true if percentage is valid non-zero value; otherwise, false.</returns>
    public static boolean isValidDiscountPercentage(Percent _percent)
    {
        boolean isValid = _percent > 0 && _percent <= 100;

        if (!isValid)
        {
            Message::Add(MessageSeverity::Warning, "@Retail:DiscountPctNotZero");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>