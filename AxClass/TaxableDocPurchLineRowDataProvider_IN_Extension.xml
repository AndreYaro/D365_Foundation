<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxableDocPurchLineRowDataProvider_IN_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(TaxableDocPurchLineRowDataProvider))]
final class TaxableDocPurchLineRowDataProvider_IN_Extension
{
    #ISOCountryRegionCodes


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillInFields</Name>
				<Source><![CDATA[
    public void fillInFields(TaxableDocumentLineObject _lineObj)
    {
        next fillInFields(_lineObj);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.addFieldValue(_lineObj, TaxEngineModelFields::ServiceCategory, gstTaxable.getGSTServiceCategory());
            this.addFieldValue(_lineObj, TaxEngineModelFields::NonBusinessUsagePercent, gstTaxable.getGSTNonBusinessUsagePercent() / 100);

            if (this.isCustomsImportOrder_IN())
            {
                this.addFieldValue(_lineObj, TaxEngineModelFields::ImportCustomsTariffCode, indirectTaxModelTaxable.getCustomsTariffCodeTable().TariffCode);
            }

            if (gstTaxable)
            {
                Debug::assert(gstTaxable is TaxModelDocLineBaseImpl_IN);
                TaxModelDocLineBaseImpl_IN taxModelDocLineBaseImpl_IN = gstTaxable;
                //GST fields
                this.addFieldValue(_lineObj, TaxEngineModelFields::SEZParty, taxModelDocLineBaseImpl_IN.getIsSEZParty());
                this.addFieldValue(_lineObj, TaxEngineModelFields::DeemedExport, taxModelDocLineBaseImpl_IN.getIsDeemedExport());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValidFields</Name>
				<Source><![CDATA[
    protected void initValidFields()
    {
        next initValidFields();

        validFields.add(TaxEngineModelFields::ServiceCategory, Types::Enum, enumNum(ServiceCategory_IN));
        validFields.add(TaxEngineModelFields::NonBusinessUsagePercent, Types::Real);
        validFields.add(TaxEngineModelFields::ImportCustomsTariffCode, Types::String);
        validFields.add(TaxEngineModelFields::SEZParty, Types::Enum, enumNum(NoYes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomsImportOrder_IN</Name>
				<Source><![CDATA[
    protected boolean isCustomsImportOrder_IN()
    {
        if (purchLine && purchLine.purchTable().purchTable_W().CustomsImportOrder_IN)
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>