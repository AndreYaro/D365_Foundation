<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendVoucherPurch</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendVoucherPurch extends VendVoucher
{
    VendPaymMode vendPaymMode;
    BankThirdPartyAccountId bankTransAccountId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copySpecTrans</Name>
				<Source><![CDATA[
    protected boolean copySpecTrans()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustVendTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the <c>CustVendTrans</c> map.
    /// </summary>
    /// <param name="custVendTrans">
    ///    The map object that holds the value of vendor or customer transaction.
    /// </param>
    /// <param name="_ledgerPostingJournal">
    ///    The ledger posting journal to use for ledger posting.
    /// </param>
    /// <param name="_useSubLedger">
    ///    A Boolean value that specifies whether the subledger should be used; optional.
    /// </param>
    protected void initCustVendTrans(CustVendTrans custVendTrans, LedgerVoucher _ledgerPostingJournal, boolean _useSubLedger = false)
    {
        VendInvoiceJour localVendInvoiceJour;
        VendTrans localVendTrans;
        CurrencyExchangeHelper currencyHelper;

        super(custVendTrans, _ledgerPostingJournal, _useSubLedger);

        //Cast maps as VendInvoiceJour and VendTrans
        localVendInvoiceJour = custVendInvoiceJour;
        localVendTrans = custVendTrans;

        localVendTrans.PaymId = localVendInvoiceJour.PaymId;
        localVendTrans.CashDiscCode = localVendInvoiceJour.CashDiscCode;
        localVendTrans.DocumentDate = localVendInvoiceJour.DocumentDate;
        localVendTrans.VendPaymentGroup = localVendInvoiceJour.VendPaymentGroup;
        localVendTrans.RemittanceAddress = localVendInvoiceJour.RemittanceAddress;
        localVendTrans.RemittanceLocation = LogisticsPostalAddress::locationRecIdFromAddressRecId(localVendInvoiceJour.RemittanceAddress);
        localVendTrans.DocumentNum = localVendInvoiceJour.DocumentNum;

        if (BankLCImportFeatureChecker::checkBankLCImportEnabled())
        {
            if (localVendInvoiceJour.BankLCImportLine)
            {
                custVendTrans.BankLCLine = localVendInvoiceJour.BankLCImportLine;
            }
        }

        custVendTrans = localVendTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>