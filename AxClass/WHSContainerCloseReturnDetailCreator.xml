<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSContainerCloseReturnDetailCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSContainerCloseReturnDetailCreator</c> class is responsible for creating the <c>WHSReturnDetail</c> and <c>WHSReturnLineDetail</c> data
/// when a <c>WHSContainerTable</c> container is closed.
/// </summary>
internal final class WHSContainerCloseReturnDetailCreator
{
    private WHSContainerTable containerTable;
    private Map loadLineRecIdInventTransIds = new Map(Types::Int64, Types::String);
    private WHSInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromContainer</Name>
				<Source><![CDATA[
    internal static WHSContainerCloseReturnDetailCreator newFromContainer(WHSContainerTable _containerTable)
    {
        WHSContainerCloseReturnDetailCreator creator = new WHSContainerCloseReturnDetailCreator();
        creator.containerTable = _containerTable.data();

        return creator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instrumentationLogger</Name>
				<Source><![CDATA[
    private WHSInstrumentationLogger instrumentationLogger()
    {
        if (!instrumentationLogger)
        {
            instrumentationLogger = WHSInstrumentationLogger::createLogger(classStr(WHSContainerCloseReturnDetailCreator));
        }

        return instrumentationLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReturnDetails</Name>
				<Source><![CDATA[
    internal void createReturnDetails()
    {
        if (WHSUseReturnDetailConfigurationProviderFlight::instance().isEnabled())
        {
            if (WHSReturnDetailConfigurationProvider::isContainerReturnDetailsCreationEnabled(this.containerTable))
            {
                WHSReturnDetail returnDetail = this.createReturnDetail();
                this.createReturnLineDetails(returnDetail);
            }
        }
        else
        {
            if (WHSParameters::isReturnDetailsCreationEnabled())
            {
                WHSReturnDetail returnDetail = this.createReturnDetail();
                this.createReturnLineDetails(returnDetail);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReturnDetail</Name>
				<Source><![CDATA[
    private WHSReturnDetail createReturnDetail()
    {
        WHSReturnDetail returnDetail;

        using (var activityContext = this.instrumentationLogger().containerCloseReturnDetailCreatorActivities().createReturnDetail())
        {
            WHSShipmentTable shipment = WHSShipmentTable::find(containerTable.ShipmentId);

            returnDetail.ContainerId = containerTable.ContainerId;
            returnDetail.initFromShipment(shipment);

            returnDetail.insert();

            this.instrumentationLogger().containerCloseReturnDetailCreatorActivities().returnDetailRecId(activityContext, returnDetail.RecId);
        }

        return returnDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReturnLineDetails</Name>
				<Source><![CDATA[
    private void createReturnLineDetails(WHSReturnDetail _returnDetail)
    {
        using (var activityContext = this.instrumentationLogger().containerCloseReturnDetailCreatorActivities().createReturnLineDetails())
        {
            NumberOfRecords returnLineDetailCount;

            RecordInsertList returnLineDetails = new RecordInsertList(tableNum(WHSReturnLineDetail));

            WHSContainerLine containerLine;

            while select containerLine
                where containerLine.ContainerId == containerTable.ContainerId
            {
                WHSReturnLineDetail returnLineDetail;
                returnLineDetail.initFromReturnDetail(_returnDetail);
                this.initReturnLineDetailInventTransId(returnLineDetail, containerLine);
                returnLineDetail.initFromContainerLine(containerLine);
            
                returnLineDetails.add(returnLineDetail);
                returnLineDetailCount++;
            }

            returnLineDetails.insertDatabase();

            this.instrumentationLogger().containerCloseReturnDetailCreatorActivities().returnLineDetailCount(activityContext, _returnDetail.RecId, returnLineDetailCount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReturnLineDetailInventTransId</Name>
				<Source><![CDATA[
    private void initReturnLineDetailInventTransId(WHSReturnLineDetail _returnLineDetail, WHSContainerLine _containerLine)
    {
        if (!loadLineRecIdInventTransIds.exists(_containerLine.LoadLine))
        {
            WHSLoadLine loadLine = WHSLoadLine::findbyRecId(_containerLine.LoadLine);

            loadLineRecIdInventTransIds.insert(_containerLine.LoadLine, loadLine.InventTransId);
        }

        _returnLineDetail.InventTransId = loadLineRecIdInventTransIds.lookup(_containerLine.LoadLine);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>