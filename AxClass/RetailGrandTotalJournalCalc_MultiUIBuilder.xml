<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailGrandTotalJournalCalc_MultiUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Calculates grand total journals.
/// </summary>
public class RetailGrandTotalJournalCalc_MultiUIBuilder extends SysOperationUIBuilder
{
    private DialogField fromDateField;
    private DialogField toDateField;
    private DialogField calcJournalField;
    private DialogField annualField;

    private RetailGrandTotalJournalCalc_MultiContract dataContract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    public void build()
    {
        SysOperationDialog dlg = dialog as SysOperationDialog;

        FormBuildTabControl tabControl = dlg.dialogForm().form().design().control('Tab');
        tabControl.showTabs(true);

        FormBuildTabPageControl policyOrganizationControl = dlg.dialogForm().form().design().control('PolicyOrganization');
        policyOrganizationControl.caption("@RET3005");

        dlg.addTabPage("@SYS7764");

        dataContract = this.dataContractObject();

        fromDateField = dlg.addFieldValue(extendedTypeStr(FromDate), dataContract.parmFromDate());
        fromDateField.enabled(false);

        toDateField = dlg.addFieldValue(extendedTypeStr(ToDate), dataContract.parmToDate());
        toDateField.control().registerOverrideMethod(
            methodStr(FormDateControl, modified),
            methodStr(RetailGrandTotalJournalCalc_MultiUIBuilder, fieldToDateModified),
            this);

        calcJournalField = dlg.addFieldValue(extendedTypeStr(NoYesId), dataContract.parmCalcJournal(), "@RetailGrandTotalJournal:CalculateJournal");

        annualField = dlg.addFieldValue(extendedTypeStr(NoYesId), dataContract.parmAnnual(), "@RetailGrandTotalJournal:Annual");
        annualField.control().registerOverrideMethod(
            methodStr(FormCheckBoxControl, modified),
            methodStr(RetailGrandTotalJournalCalc_MultiUIBuilder, fieldAnnualModified),
            this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public void getFromDialog()
    {
        super();

        dataContract.parmFromDate(fromDateField.value());
        dataContract.parmToDate(toDateField.value());
        dataContract.parmCalcJournal(calcJournalField.value());
        dataContract.parmAnnual(annualField.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldToDateModified</Name>
				<Source><![CDATA[
    private boolean fieldToDateModified(FormDateControl _callerControl)
    {
        return this.updatePeriodDates();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldAnnualModified</Name>
				<Source><![CDATA[
    private boolean fieldAnnualModified(FormCheckBoxControl _callerControl)
    {
        return this.updatePeriodDates();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePeriodDates</Name>
				<Source><![CDATA[
    private boolean updatePeriodDates()
    {
        container fiscalPeriod = RetailGrandTotalJournalTable::getFiscalPeriodByDateAndAnnual(toDateField.value(), annualField.value());

        fromDateField.value(conPeek(fiscalPeriod, 1));
        toDateField.value(conPeek(fiscalPeriod, 2));

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>