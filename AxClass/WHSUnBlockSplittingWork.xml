<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSUnBlockSplittingWork</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSUnBlockSplittingWork</c> class handles the unblocking of a work that is being split.
/// </summary>
internal class WHSUnBlockSplittingWork
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static void main(Args _args)
    {
        WHSWorkTable workArgs = _args.record() as WHSWorkTable;

        if (workArgs)
        {
            WHSSplitWorkForm workSplitForm = WHSSplitWorkForm::construct();

            WHSUnBlockSplittingWork::unBlockWorkBeingSplit(workArgs.WorkId);

            if (FormDataUtil::isFormDataSource(workArgs))
            {
                FormDataSource dataSource = FormDataUtil::getFormDataSource(workArgs) as FormDataSource;
                dataSource.research(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unBlockWorkBeingSplit</Name>
				<Source><![CDATA[
    private static void unBlockWorkBeingSplit(WHSWorkId _workId)
    {
        ttsbegin;

        if (!WHSWorkTable::isWorkBeingSplit(_workId))
        {
            warning("@WAX:WHSCancelSplitSessionWorkNotBeingSplit");
        }
        else
        {
            WHSUnBlockSplittingWork::unblockSplitWorkReason(_workId);

            info("@WAX:WHSCancelSplitWorkSessionSuccesMessage");
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unblockSplitWorkReason</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the SplitWork Blocking Reason and tries to unblock the work.
    /// </summary>
    /// <param name = "_workId">The id of the work that should be unblocked</param>
    [Hookable(false)]
    internal static void unblockSplitWorkReason(WHSWorkId _workId)
    {
        ttsbegin;

        WHSActiveWorkSplit::delete(_workId);

        WHSWorkUnBlockingValidationResult unBlockResult =
                WHSWorkBlocking::newFromWorkIdSkipInProgressWorkLineWithNoPreviousPutCheck(_workId).tryUnBlockWorkWithReasonType(WHSWorkBlockingReasonType::SplitWork);

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>