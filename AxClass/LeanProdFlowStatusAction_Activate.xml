<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanProdFlowStatusAction_Activate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LeanProdFlowStatusAction_Activate</c> class is used to activate production flows.
/// </summary>
public class LeanProdFlowStatusAction_Activate extends LeanProdFlowStatusAction implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the plan status.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void activate()
    {
        ttsbegin;
        Plan planLocal = Plan::find(this.plan().RecId,true);
        planLocal.Status = PlanStatus::Active;
        planLocal.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a caption string.
    /// </summary>
    /// <returns>
    ///    The caption string.
    /// </returns>
    public ClassDescription caption()
    {
        return "@SYS303294";
    }

]]></Source>
			</Method>
			<Method>
				<Name>leanPlanStatusAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the action performed by the class.
    /// </summary>
    /// <returns>
    ///    A <c>LeanPlanStatusAction</c> enumeration value.
    /// </returns>
    public LeanPlanStatusAction leanPlanStatusAction()
    {
        return LeanPlanStatusAction::Activate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runStatusAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Runs the status action.
    /// </summary>
    /// <returns>
    ///    true if the activation succeeds; otherwise, false.
    /// </returns>
    public boolean runStatusAction()
    {
        LeanProdFlowStatusAction_Validate leanProdFlowStatusAction_Validate = LeanProdFlowStatusAction_Validate::newLeanProductionFlow(leanProductionFlow);
        boolean result = leanProdFlowStatusAction_Validate.runStatusAction();

        if (result)
        {
            this.activate();
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates input parameters.
    /// </summary>
    /// <param name="_calledFrom">
    ///    An instance of the <c>Object</c> class that represents the caller; optional.
    /// </param>
    /// <returns>
    ///    true if the validation succeeds; otherwise, false.
    /// </returns>
    public boolean validate(Object _calledFrom = null)
    {
        boolean result = this.plan().Status < PlanStatus::Active;

        if (!result)
        {
            warning(strfmt("@SYS303295",this.plan().Status));
        }

        result =    super(_calledFrom)
                 && result;

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static LeanProdFlowStatusAction_Activate construct()
    {
        return new LeanProdFlowStatusAction_Activate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLeanProductionFlow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>LeanProdFlowStatusAction_Activate</c> class.
    /// </summary>
    /// <param name="_leanProductionFlow">
    ///    A <c>LeanProductionFlow</c> record that is used to initialize the instance of the class.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>LeanProdFlowStatusAction_Activate</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LeanProdFlowStatusAction_Activate newLeanProductionFlow(LeanProductionFlow _leanProductionFlow)
    {
        LeanProdFlowStatusAction_Activate    leanProdFlowStatusAction = LeanProdFlowStatusAction_Activate::construct();

        leanProdFlowStatusAction.parmLeanProductionFlow(_leanProductionFlow);

        return leanProdFlowStatusAction;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>
