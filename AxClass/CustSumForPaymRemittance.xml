<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustSumForPaymRemittance</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustSumForPaymRemittance extends CustVendSumForPaymRemittance
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bankFormat</Name>
				<Source><![CDATA[
    public BankFormat bankFormat()
    {
        return BankFormat::Remittance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Provides a dialog box for an instance of the <c>RunBase</c> class.
    /// </summary>
    /// <returns>
    ///    A dialog box for an instance of the <c>RunBase</c> class.
    /// </returns>
    public Object dialog()
    {
        dialog = super();

        dialog.addMenuItemButton(MenuItemType::Action, menuitemactionstr(CustOutPaym));

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDueDateExceeded</Name>
				<Source><![CDATA[
    protected boolean isDueDateExceeded()
    {
        LedgerJournalTrans ledgerJournalTrans;
        CustTransOpen custTransOpen;
        CustTrans custTrans;
        CustBillOfExchangeJour custBillOfExchangeJour;
        QueryRun queryRun_offsetVoucher;

        queryRun.reset();

        while (queryRun.next())
        {
            ledgerJournalTrans = queryRun.get(tablenum(LedgerJournalTrans));

            queryRun_offsetVoucher = SpecTrans::createQueryRunToRefTable(
                ledgerJournalTrans.company(),
                ledgerJournalTrans.TableId,
                ledgerJournalTrans.RecId,
                tablenum(CustTransOpen));

            queryRun_offsetVoucher.allowCrossCompany(true);

            while (queryRun_offsetVoucher.next())
            {
                if (queryRun_offsetVoucher.changed(tablenum(CustTransOpen)))
                {
                    custTransOpen = queryRun_offsetVoucher.get(tablenum(CustTransOpen));
                    if (custTransOpen)
                    {
                        changecompany(custTrans.company())
                        {
                            custTrans = custTransOpen.custTrans();

                            select DueDate from custBillOfExchangeJour
                                where custBillOfExchangeJour.BillOfExchangeId == custTrans.BillOfExchangeID;
                        }

                        if (custBillOfExchangeJour.DueDate != dateNull() && custBillOfExchangeJour.DueDate < ledgerJournalTrans.TransDate)
                        {
                            queryRun.reset();
                            return true;
                        }
                    }
                }
            }
        }

        queryRun.reset();

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalACType</Name>
				<Source><![CDATA[
    protected LedgerJournalACType ledgerJournalACType()
    {
        return LedgerJournalACType::Cust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymFormatTable</Name>
				<Source><![CDATA[
    public CustVendPaymFormatTable paymFormatTable()
    {
        return CustPaymFormat::findFormat(paymFormat, this.bankFormat());
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymModeTable</Name>
				<Source><![CDATA[
    public CustVendPaymModeTable paymModeTable()
    {
        return CustPaymModeTable::find(paymMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeFormat</Name>
				<Source><![CDATA[
    protected utilElementName typeFormat()
    {
        return extendedTypeStr(CustRemittanceFormat);
    }

]]></Source>
			</Method>
			<Method>
				<Name>typePaymMode</Name>
				<Source><![CDATA[
    protected utilElementName typePaymMode()
    {
        return extendedTypeStr(CustPaymMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ClassDescription description()
    {
        return "@SYS83541";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Describes whether the class is designed for execution in a new session.
    /// </summary>
    /// <returns>
    /// true if the class is designed for executing the operation in a new session; otherwise, false.
    /// </returns>
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>