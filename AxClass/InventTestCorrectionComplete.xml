<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTestCorrectionComplete</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventTestCorrectionComplete</c> should be used to mark a test correction as completed.
/// </summary>
class InventTestCorrectionComplete extends InventTestCorrectionUpdate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a standard dialog method for <c>RunBase</c> classes.
    /// </summary>
    /// <param name="_dialog">
    ///    The initial dialog created by the <c>RunBase</c> framework.
    /// </param>
    /// <param name="forceOnClient">
    ///    See the base class for a description. This parameter is not used by this class.
    /// </param>
    /// <returns>
    ///    A <c>DialogRunbase</c> object.
    /// </returns>
    public Object dialog(DialogRunbase _dialog = null, boolean forceOnClient = false)
    {
        DialogRunbase dialog = this.dialogInternal(_dialog, forceOnClient);
        dialog.formBuildDesign().dialogSize(0); // DialogSize::Small

        dialog.addText("@SYS114171");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs the actual change of the ended marking.
    /// </summary>
    public void run()
    {
        InventTestCorrection    inventTestCorrection;

        super();
        ttsbegin;
        update_recordset inventTestCorrection
            setting
                CorrectionCompleted             = NoYes::Yes,
                CorrectionCompletedDateTime     = DateTimeUtil::utcNow()
            where inventTestCorrection.InventNonConformanceID   == inventNonConformanceID
               && inventTestCorrection.RecId                    == recId
               && inventTestCorrection.CorrectionCompleted      == NoYes::No;

        if (inventTestCorrection.RowCount() != 1)
        {
            throw error(strFmt("@SYS114167", inventNonConformanceID));
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs validation for <c>RunBase</c> classes.
    /// </summary>
    /// <param name="calledFrom">
    ///    This parameter is not used by this class.
    /// </param>
    /// <returns>
    ///    true if the validation succeeded; otherwise, false.
    /// </returns>
    public boolean validate(Object calledFrom = null)
    {
        boolean ret = super(calledFrom);

        if (inventNonConformanceID)
        {
            InventNonConformanceTable inventNonConformanceTable = InventNonConformanceTable::find(inventNonConformanceID);
            if (!inventNonConformanceTable
              || inventNonConformanceTable.InventNonConformanceApproval == InventNonConformanceApproval::Refused)
            {
                return checkFailed(strFmt("@SYS114045", inventNonConformanceID));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventTestCorrectionComplete construct()
    {
        return new InventTestCorrectionComplete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SYS114168";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        InventTestCorrectionComplete    inventTestCorrectionComplete = InventTestCorrectionComplete::construct();

        inventTestCorrectionComplete.initFromArgs(args);

        if (!inventTestCorrectionComplete.prompt())
        {
            return;
        }

        inventTestCorrectionComplete.runOperation();

        if (args && args.record() && args.dataset() == tableNum(InventTestCorrection))
        {
            InventTestCorrectionUpdate::refreshCaller(args.record());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
