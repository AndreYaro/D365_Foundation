<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSRAFLicensePlateLabelBuildWithoutWork</Name>
	<SourceCode>
		<Declaration><![CDATA[
[WHSLPLabelBuildWithoutWorkFactory(WHSWorkTransType::ProdPut)]
internal final class WHSRAFLicensePlateLabelBuildWithoutWork extends WHSLicensePlateLabelBuildWithoutWork
{
    private ProdTable   prodOrder;
    private boolean     isCWItem;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromParameters</Name>
				<Source><![CDATA[
    internal void initFromParameters(WHSLicensePlateLabelBuildWithoutWorkParameters _parameters)
    {
        super(_parameters);

        prodOrder = orderLine as ProdTable;
        isCWItem = PdsGlobal::pdsIsCWItem(prodOrder.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    protected ItemId itemId()
    {
        return prodOrder.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderNum</Name>
				<Source><![CDATA[
    protected WHSOrderNum orderNum()
    {
        return prodOrder.ProdId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimId</Name>
				<Source><![CDATA[
    protected InventDimId inventDimId()
    {
        return prodOrder.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderedQty</Name>
				<Source><![CDATA[
    protected InventQty orderedQty()
    {
        if (isCWItem)
        {
            return prodOrder.PdsCWBatchSched;
        }
        else
        {
            return prodOrder.QtySched;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>remainingQty</Name>
				<Source><![CDATA[
    protected InventQty remainingQty()
    {
        if (isCWItem)
        {
            return prodOrder.PdsCWRemainInventPhysical;
        }
        else
        {
            return prodOrder.RemainInventPhysical;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>