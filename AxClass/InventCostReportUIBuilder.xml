<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCostReportUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventCostReportUIBuilder</c> class builds and handles the UI dialog for both the
///    <c>InventCostValue</c> and the <c>InventCostVariances</c> reports.
/// </summary>
class InventCostReportUIBuilder extends SrsReportDataContractUIBuilder
{
    DialogField             detailField;
    DialogField             levelField;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Builds the dialog for both of the <c>InventCostValue</c> and the <c>InventCostVariances</c> reports.
    /// </summary>
    public void build()
    {
        FormBuildGroupControl formBuildGroupControl = dialog.curFormGroup();
        formBuildGroupControl.columns(2);

        super();

        // Hide site
        this.bindInfo().getDialogField(this.dataContractObject(), methodStr(InventCostReportContract, parmSite)).visible(false);

        // IncludeBeginning is not shown on variances report
        SrsReportRunController myController = this.controller();
        if (myController.parmReportName() == ssrsReportStr(InventCostVariances, Report))
        {
            this.bindInfo().getDialogField(this.dataContractObject(), methodStr(InventCostReportContract, parmIncludeBeginning)).visible(false);
        }

        // Get dialog fields for visibility checks
        levelField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(InventCostReportContract, parmLevel));
        detailField = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(InventCostReportContract, parmDetail));
        this.setVisibilityForSelectionControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>detailModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles the UI modified event for the detail dialog field.
    /// </summary>
    /// <param name="_control">
    ///    The control behind the changed dialog field.
    /// </param>
    /// <returns>
    ///    true if the control value has been modified; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    The level must be enabled and disabled according to the value in detail field.
    /// </remarks>
    public boolean detailModified(FormComboBoxControl _control)
    {
        boolean ret = _control.modified();

        if (ret)
        {
            this.setVisibilityForSelectionControls();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers the method override in order to capture dialog events.
    /// </summary>
    public void postRun()
    {
        super();

        dialog.dialogForm().formRun().controlMethodOverload(false);
        detailField.registerOverrideMethod(methodStr(FormStringControl, modified), methodStr(InventCostReportUIBuilder, detailModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibilityForSelectionControls</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables and disables fields based on the field selection.
    /// </summary>
    protected void setVisibilityForSelectionControls()
    {
        levelField.enabled(true);

        if (detailField.value() == InventCostDetail::No)
        {
            levelField.enabled(false);
            return;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
