<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleProjAdvancedJournalExtendedPriceTaxMeasure</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class implements the GST tax accounting distribution rule for project advanced journal source document.
/// </summary>
[
    SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProjAdvancedJournal), BusinessEvent_ProjAdvancedJournal::RecordProjectActivity, MonetaryAmount::TaxMeasure),
    SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProjAdvancedJournal), BusinessEvent_ProjAdvancedJournal::RecordProjectActivity, MonetaryAmount::TaxMeasureComponent),
    SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProjAdvancedJournal), BusinessEvent_ProjAdvancedJournal::RecordProjectActivity, MonetaryAmount::TaxMeasureNonRecoverable)
]
internal final class AccDistRuleProjAdvancedJournalExtendedPriceTaxMeasure extends AccDistRuleProductTaxMeasure
{
    private ProjAdvancedJournalLine projAdvancedJournalLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the accounting rule.
    /// </summary>
    protected void initialize()
    {
        super();

        SourceDocumentLine origSourceDocumentLine = SourceDocumentLine::findTopParentSourceDocumentLine(sourceDocumentLineItem.parmSourceDocumentLine().RecId);
        projAdvancedJournalLine = ProjAdvancedJournalLine::findBySourceDocumentLine(origSourceDocumentLine.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        TaxAccountingProvider taxAccountingProvider = this.getTaxAccountingProvider();

        LedgerPostingType ledgerPostingType;
        switch (taxAccountingProvider)
        {
            case TaxAccountingProvider::Party:
                ledgerPostingType = projAdvancedJournalLine.getLedgerPostingTypeForPartyTaxProvider();
                break;
            case TaxAccountingProvider::Inventory:
                ledgerPostingType = LedgerPostingType::ProjCost;
                break;

            default:
                ledgerPostingType = super();
                break;

        }

        return ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxAccountingProvider</Name>
				<Source><![CDATA[
    private TaxAccountingProvider getTaxAccountingProvider()
    {
        TaxAccountingProvider taxAccountingProvider;

        if (monetaryAmount == MonetaryAmount::TaxMeasureNonRecoverable)
        {
            taxAccountingProvider = TaxAccountingProvider::Inventory;
        }
        else
        {
            taxAccountingProvider = taxMeasureSourceDocumentSublineItem.parmDistributionAccountingProvider();
        }

        return taxAccountingProvider;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>