<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscPartyCodeTypeOrderedList</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Represents the ordered list of enumeration values for <c>PriceDiscPartyCodeType</c> enum.
/// Allows to add values to the list to support extension.
/// </summary>
public class PriceDiscPartyCodeTypeOrderedList implements Enumerable
{
    List priceDiscPartyCodeTypeOrderedList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the enumerator of the ordered list.
    /// </summary>
    /// <returns>An instance of <c>ListEnumerator</c> class.</returns>
    public Enumerator getEnumerator()
    {
        return priceDiscPartyCodeTypeOrderedList.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addAfter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>PriceDiscPartyCodeType</c> enum to the ordered list after the specified value.
    /// </summary>
    /// <param name = "_newPriceDiscPartyCodeTypeValue">Value to be added.</param>
    /// <param name = "_addAfterValue">Value to add after.</param>
    /// <exception>Could not find _addAfterValue in the ordered list.</exception>
    public void addAfter(PriceDiscPartyCodeType _newPriceDiscPartyCodeTypeValue, PriceDiscPartyCodeType _addAfterValue)
    {
        ListIterator listIterator = new ListIterator(priceDiscPartyCodeTypeOrderedList);
        while (listIterator.more())
        {
            if (listIterator.value() == _addAfterValue)
            {
                listIterator.next();
                listIterator.insert(_newPriceDiscPartyCodeTypeValue);
                return;
            }
            listIterator.next();
        }
        throw error(strFmt("@SCM:CouldNotAddValueXAfterValueY_YnotFound", _newPriceDiscPartyCodeTypeValue, _addAfterValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addStart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>PriceDiscPartyCodeType</c> enum to the start of the ordered list.
    /// </summary>
    /// <param name = "_priceDiscPartyCodeType">Value to be added.</param>
    public void addStart(PriceDiscPartyCodeType _priceDiscPartyCodeType)
    {
        priceDiscPartyCodeTypeOrderedList.addStart(_priceDiscPartyCodeType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEnd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add a new value of <c>PriceDiscPartyCodeType</c> enum to the end of the ordered list.
    /// </summary>
    /// <param name = "_priceDiscPartyCodeType">Value to be added.</param>
    public void addEnd(PriceDiscPartyCodeType _priceDiscPartyCodeType)
    {
        priceDiscPartyCodeTypeOrderedList.addEnd(_priceDiscPartyCodeType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        priceDiscPartyCodeTypeOrderedList = new List(Types::Enum);

        this.initializePriceDiscPartyCodeTypeOrderedList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnumerateInOrder</Name>
				<Source><![CDATA[
    private void setEnumerateInOrder(SortOrder _enumerateInOrder)
    {
        if (_enumerateInOrder == SortOrder::Descending)
        {
            this.reverseOrderedList();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reverseOrderedList</Name>
				<Source><![CDATA[
    private void reverseOrderedList()
    {
        List reversedPriceDiscPartyCodeTypeOrderedList = new List(Types::Enum);
        ListEnumerator enumerator = this.getEnumerator() as ListEnumerator;
        
        while (enumerator.moveNext())
        {
            reversedPriceDiscPartyCodeTypeOrderedList.addStart(enumerator.current());
        }

        priceDiscPartyCodeTypeOrderedList = reversedPriceDiscPartyCodeTypeOrderedList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the <c>PriceDiscPartyCodeTypeOrderedList</c> class to be enumerated in the specified order.
    /// </summary>
    /// <param name="_enumerateInOrder">Enumerate the values in the enum in the specified order.</param>
    /// <returns>An instance of <c>PriceDiscPartyCodeTypeOrderedList</c> class.</returns>
    public static PriceDiscPartyCodeTypeOrderedList newFromOrder(SortOrder _enumerateInOrder = SortOrder::Ascending)
    {
        PriceDiscPartyCodeTypeOrderedList orderedList = new PriceDiscPartyCodeTypeOrderedList();
        orderedList.setEnumerateInOrder(_enumerateInOrder);
        return orderedList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializePriceDiscPartyCodeTypeOrderedList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the list with all the applicable values of <c>PriceDiscPartyCodeType</c> enumeration in ascending order.
    /// </summary>
    protected void initializePriceDiscPartyCodeTypeOrderedList()
    {
        priceDiscPartyCodeTypeOrderedList.addEnd(PriceDiscPartyCodeType::Table);
        priceDiscPartyCodeTypeOrderedList.addEnd(PriceDiscPartyCodeType::GroupId);
        priceDiscPartyCodeTypeOrderedList.addEnd(PriceDiscPartyCodeType::All);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>