<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayReportTuning_Report4SIF_2012</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class RPayReportTuning_Report4SIF_2012 extends RPayReportTuning
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
        public void lookup(FormStringControl _lookupCtrl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query = new Query();
        QueryBuildDataSource    qbds;

        rPayReportTuningTable = rPayReportTuningTableDs.cursor();

        switch (rPayReportTuningTable.ParameterCode)
        {
            case 9:
                sysTableLookup = SysTableLookup::newParameters(tableNum(RPayCounterTable), _lookupCtrl);

                _lookupCtrl.replaceOnLookup(true);

                qbds = query.addDataSource(tableNum(RPayCounterTable));
                qbds.addRange(fieldNum(RPayCounterTable, CounterType)).value(queryValue(RPayCounterType::Fund));
                qbds.addRange(fieldNum(RPayCounterTable, LineType)).value(queryValue(RPayCtypeType::BudgetFund));

                sysTableLookup.addLookupfield(fieldNum(RPayCounterTable, CounterUnit));
                sysTableLookup.addLookupfield(fieldNum(RPayCounterTable, Name));
                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
                break;

            case 1, 2:
                sysTableLookup = SysTableLookup::newParameters(tableNum(RPayCounterTable), _lookupCtrl);

                _lookupCtrl.replaceOnLookup(true);

                qbds = query.addDataSource(tableNum(RPayCounterTable));
                qbds.addRange(fieldNum(RPayCounterTable, CounterType)).value(queryValue(RPayCounterType::Fund));
                qbds.addRange(fieldNum(RPayCounterTable, LineType)).value(queryValue(RPayCtypeType::BaseTotal));

                sysTableLookup.addLookupfield(fieldNum(RPayCounterTable, CounterUnit));
                sysTableLookup.addLookupfield(fieldNum(RPayCounterTable, Name));
                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
                break;

            case 10:
                sysTableLookup = SysTableLookup::newParameters(tableNum(RPayCounterTable), _lookupCtrl);

                _lookupCtrl.replaceOnLookup(true);

                qbds = query.addDataSource(tableNum(RPayCounterTable));
                qbds.addRange(fieldNum(RPayCounterTable, CounterType)).value(queryValue(RPayCounterType::Fund));

                sysTableLookup.addLookupfield(fieldNum(RPayCounterTable, CounterUnit));
                sysTableLookup.addLookupfield(fieldNum(RPayCounterTable, Name));
                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
                break;

            case 3, 4, 5, 6, 7, 8, 13, 14, 15, 18, 19, 20, 21, 22, 23:
                sysTableLookup = SysTableLookup::newParameters(tablenum(RPayTable), _lookupCtrl);

                _lookupCtrl.replaceOnLookup(false);

                qbds = query.addDataSource(tablenum(RPayTable));

                sysTableLookup.addLookupfield(fieldnum(RPayTable, PayCtype));
                sysTableLookup.addLookupfield(fieldnum(RPayTable, Name));
                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
                break;

            case 11, 12, 25:
                sysTableLookup = SysTableLookup::newParameters(tablenum(RPayRateTable), _lookupCtrl);

                _lookupCtrl.replaceOnLookup(true);

                qbds = query.addDataSource(tablenum(RPayRateTable));

                sysTableLookup.addLookupfield(fieldnum(RPayRateTable, PayRate));
                sysTableLookup.addLookupfield(fieldnum(RPayRateTable, Name));
                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
                break;

            case 26, 27:
                sysTableLookup = SysTableLookup::newParameters(tableNum(RPayFundDeductionTable), _lookupCtrl);

                _lookupCtrl.replaceOnLookup(true);

                query = new Query();
                qbds = query.addDataSource(tableNum(RPayFundDeductionTable));

                sysTableLookup.addLookupfield(fieldNum(RPayFundDeductionTable, RpayFundDeductionCode));
                sysTableLookup.addLookupfield(fieldNum(RPayFundDeductionTable, Name));
                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
                break;

            case 16, 17, 24:
                sysTableLookup = SysTableLookup::newParameters(tablenum(RPayGroupTable), _lookupCtrl);

                _lookupCtrl.replaceOnLookup(true);

                qbds = query.addDataSource(tablenum(RPayGroupTable));

                sysTableLookup.addLookupfield(fieldnum(RPayGroupTable, PayGroup));
                sysTableLookup.addLookupfield(fieldnum(RPayGroupTable, Name));
                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(RPayReportName _reportName, FormRun _formRun)
    {
        parameterName = [literalStr("@RUP3420"),
                         literalStr("@RUP3421"),
                         literalStr("@RUP2146"),
                         literalStr("@RUP2357"),
                         literalStr("@RUP2148"),
                         literalStr("@RUP2149"),
                         literalStr("@RUP2150"),
                         literalStr("@RUP2151"),
                         literalStr("@RUP3422"),
                         literalStr("@RUP3423"),
                         literalStr("@RUP2155"),
                         literalStr("@RUP2156"),
                         literalStr("@RUP2157"),
                         literalStr("@RUP2158"),
                         literalStr("@RUP2159"),
                         literalStr("@RUP2160"),
                         literalStr("@RUP2162"),
                         literalStr("@RUP2166"),
                         literalStr("@RUP2167"),
                         literalStr("@RUP2358"),
                         literalStr("@RUP2169"),
                         literalStr("@RUP2359"),
                         literalStr("@RUP2360"),
                         literalStr("@RUP2361"),
                         literalStr("@RUP108"),
                         literalStr("@RUP3414"),
                         literalStr("@RUP3415")];
        super(_reportName,_formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>openReportTemplate</Name>
				<Source><![CDATA[
        public void openReportTemplate()
    {
        ComExcelDocument_RU doc = new ComExcelDocument_RU();

        doc.open(RPayReport4SIF_2012::fullTemplateName(),true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printReport</Name>
				<Source><![CDATA[
        public void printReport()
    {
        new MenuFunction(menuitemoutputstr(RPayReport4SIF_2012), MenuItemType::Output).run(new Args());
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        Query                   query;
        QueryBuildDataSource    qbds;
        QueryRun                queryRun;

        rPayReportTuningTable = rPayReportTuningTableDs.cursor();

        switch (rPayReportTuningTable.ParameterCode)
        {
            case 1, 2, 9, 10:
                if (rPayReportTuningTable.Parameter &&
                   RPayCounterTable::find(rPayReportTuningTable.Parameter).RecId == 0)
                {
                    return checkFailed(strFmt("@GLS106038",
                                       rPayReportTuningTable.Parameter,
                                       fieldPName(RPayCounterTable, CounterUnit),
                                       tablePName(RPayCounterTable)));
                }
                break;

            case 3, 4, 5, 6, 7, 8, 13, 14, 15, 18, 19, 20, 21, 22, 23:
                query = new Query();
                qbds = query.addDataSource(tableNum(RPayTable));
                qbds.addRange(fieldNum(RPayTable, PayCtype)).value(rPayReportTuningTable.Parameter);
                qbds.addSelectionField(fieldNum(RPayTable, RecId), SelectionField::Count);
                queryRun = new QueryRun(query);
                queryRun.next();

                if (rPayReportTuningTable.Parameter &&
                    queryRun.get(tableNum(RPayTable)).RecId == 0)
                {
                    return checkFailed(strFmt("@GLS106038",
                                       rPayReportTuningTable.Parameter,
                                       fieldPName(RPayTable, PayCtype),
                                       tablePName(RPayTable)));
                }
                break;

            case 11, 12, 25:
                if (rPayReportTuningTable.Parameter &&
                    RPayRateTable::find(rPayReportTuningTable.Parameter).RecId == 0)
                {
                    return checkFailed(strFmt("@GLS106038",
                                       rPayReportTuningTable.Parameter,
                                       fieldPName(RPayRateTable, PayRate),
                                       tablePName(RPayRateTable)));
                }
                break;

            case 16, 17, 24:
                if (rPayReportTuningTable.Parameter &&
                    RPayGroupTable::find(rPayReportTuningTable.Parameter).RecId == 0)
                {
                    return checkFailed(strFmt("@GLS106038",
                                       rPayReportTuningTable.Parameter,
                                       fieldPName(RPayGroupTable, PayGroup),
                                       tablePName(RPayGroupTable)));
                }
                break;

            case 26, 27:
                if (rPayReportTuningTable.Parameter &&
                   RPayFundDeductionTable::find(rPayReportTuningTable.Parameter).RecId == 0)
                {
                    return checkFailed(strFmt("@GLS106038",
                                       rPayReportTuningTable.Parameter,
                                       fieldPName(RPayFundDeductionTable, RpayFundDeductionCode),
                                       tablePName(RPayFundDeductionTable)));
                }
                break;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>