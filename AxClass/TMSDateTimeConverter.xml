<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSDateTimeConverter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Converts the date times from utc to a customized time zone and vice versa for a
///     specific table buffer.
/// </summary>
public abstract class TMSDateTimeConverter
{
    Timezone customTimeZone;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the customized time zone based on the current record.
    /// </summary>
    /// <param name = "_common">The current record.</param>
    public void init(Common _common)
    {
        customTimeZone = this.getCustomTimeZone(_common);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the customized time zone related to the current record.
    /// </summary>
    /// <param name = "_common">The current record</param>
    /// <returns>The customized time zone</returns>
    protected abstract Timezone getCustomTimeZone(Common _common)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>utcToCustomDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the utc date time to the customized time zone.
    /// </summary>
    /// <param name = "_dateTime">The utc date time value stored in a field of the current record.</param>
    /// <returns>The converted date time.</returns>
    public utcdatetime utcToCustomDateTime(utcdatetime _dateTime)
    {
        utcdatetime dateTime = _dateTime;

        dateTime = DateTimeUtil::applyTimeZoneOffset(dateTime, customTimeZone);

        return dateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>utcToUserTimeZoneDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the utc date time to the user preffered time zone.
    /// </summary>
    /// <param name = "_dateTime">The utc date time value stored in a field of the current record.</param>
    /// <returns>The converted date time.</returns>
    public utcdatetime utcToUserTimeZoneDateTime(utcdatetime _dateTime)
    {
        utcdatetime dateTime = _dateTime;

        dateTime = DateTimeUtil::applyTimeZoneOffset(dateTime, DateTimeUtil::getUserPreferredTimeZone());

        return dateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customToUTCDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the date time from the customized time zone to utc date time.
    /// </summary>
    /// <param name = "_dateTime">The current date time on the customized time zone.</param>
    /// <returns>The converted utc date time.</returns>
    public utcdatetime customToUTCDateTime(utcdatetime _dateTime)
    {
        utcdatetime dateTime = _dateTime;

        dateTime = DateTimeUtil::removeTimeZoneOffset(dateTime, customTimeZone);

        return dateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>userTimeZoneToUTCDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the date time from the user preferred time zone to utc date time.
    /// </summary>
    /// <param name = "_dateTime">The current date time on the user preferred time zone.</param>
    /// <returns>The converted utc date time.</returns>
    public utcdatetime userTimeZoneToUTCDateTime(utcdatetime _dateTime)
    {
        utcdatetime dateTime = _dateTime;

        dateTime = DateTimeUtil::removeTimeZoneOffset(dateTime, DateTimeUtil::getUserPreferredTimeZone());

        return dateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the date time passed in the customized time zone to the current date time field after converting it to utc
    /// or gets the date time from the current date time field after converting it to the customized time zone.
    /// </summary>
    /// <param name = "_common">The current record.</param>
    /// <param name = "_dateTimeFieldId">The current date time field ID.</param>
    /// <param name = "_set">True if the method is a setter; false if it is a getter.</param>
    /// <param name = "_setDateTime">The date time passed to the setter.</param>
    /// <returns>The date time.</returns>
    public utcdatetime editDateTime(
                            Common      _common,
                            FieldId     _dateTimeFieldId,
                            boolean     _set,
                            utcDateTime _setDateTime = utcDateTimeNull())
    {
        utcdatetime dateTime;

        if (_set)
        {
            dateTime = this.customToUTCDateTime(_setDateTime);

            this.setTableFieldValue(dateTime, _common, _dateTimeFieldId);
        }
        else
        {
            dateTime = this.utcToCustomDateTime(_common.(_dateTimeFieldId));
        }

        return dateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date time of the passed table field value to the customized time zone.
    /// </summary>
    /// <param name = "_common">The current record.</param>
    /// <param name = "_dateTimeFieldId">The current date time field ID.</param>
    /// <returns>The converted date time</returns>
    public utcdatetime displayDateTime(Common _common, FieldId _dateTimeFieldId)
    {
        return this.editDateTime(_common, _dateTimeFieldId, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFieldValue</Name>
				<Source><![CDATA[
    private void setTableFieldValue(utcdatetime _dateTime, Common _common, FieldId _dateTimeFieldId)
    {
        _common.(_dateTimeFieldId) = _dateTime;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>