<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgJobBundleProjStartupForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgJobBundleProjStartupForm</c> class supports the <c>JmgJobBundleProjStartup</c> form. The
///    form requests that the user input a cost category when making a start registration on a project job.
/// </summary>
/// <remarks>
///    Based on an instance of the <c>JmgJobBundle</c> class, the <c>JmgJobBundleProjStartupForm</c> class
///    initializes the <c>JmgTmpJobBundleProjStartup</c> temporary table, which is shown to the user. When
///    they close the form, the entered values are saved to the <c>JmgJobBundle</c> object. Use the
///    <c>JmgJobBundleProjStartupForm</c> class only from the <c>JmgJobBundleProjStartup</c> form.
/// </remarks>
class JmgJobBundleProjStartupForm
{
    JmgJobBundle    jmgJobBundle;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves whether the user is allowed to close the JmgJobBundleProjStartup form.
    /// </summary>
    /// <param name="_projStartup">
    ///    A temporary instance of the <c>JmgTmpJobBundleProjStartup</c> table that contains the values
    ///    entered by the user.
    /// </param>
    /// <returns>
    ///    true if the user is allowed to close the form; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    The <c>canClose</c> method is called from the <c>canClose</c> method of the
    ///    <c>JmgJobBundleProjStartup</c> form. The user is allowed to close the form if they have entered
    ///    legal cost categories.
    /// </remarks>
    public boolean canClose(JmgTmpJobBundleProjStartup _projStartup)
    {
        boolean ret;
        ret = true;

        while select _projStartup
        {
            ret = this.validateCategoryId(_projStartup);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpJobBundleProjStartup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves an instance of the <c>JmgTmpJobBundleProjStartup</c> temporary table that contains a
    ///    record for each job found in the <c>JmgJobBundle</c> object as specified in the <see
    ///    cref="M:JmgJobBundleProjStartupForm.new" /> method.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>JmgTmpJobBundleProjStartup</c> temporary table that contains the data to show
    ///    in the <c>JmgTmpJobBundleProjStartup</c> form.
    /// </returns>
    public JmgTmpJobBundleProjStartup getTmpJobBundleProjStartup()
    {
        JmgTmpJobBundleProjStartup  ret;
        MapIterator                 jobIterator;
        JmgTermJob                  job;
        ProjCategoryId              defaultCategory;
        defaultCategory = JmgEmployee::find(jmgJobBundle.worker()).ProjCategoryId;

        jobIterator = jmgJobBundle.getNewJobsIterator();

        while (jobIterator.more())
        {
            job = jobIterator.value();

            ret = this.initializeJmgTmpJobBundleProjStartup(job,defaultCategory);

            ret.insert();

            jobIterator.next();
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <see cref="T:JmgJobBundleProjStartupForm" />.
    /// </summary>
    /// <param name="_jmgJobBundle">
    ///    The job bundle that contains the jobs that cost categories should be entered for.
    /// </param>
    /// <remarks>
    ///    The <c>JmgJobBundleProjStartupForm</c> class should be instantiated only from the
    ///    <c>JmgJobBundleProjStartup</c> form.
    /// </remarks>
    void new(JmgJobBundle _jmgJobBundle)
    {
        jmgJobBundle = _jmgJobBundle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onClose</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Saves the entered values back to the <c>JmgJobBundle</c> object.
    /// </summary>
    /// <param name="_jobBundleProjStartup">
    ///    An instance of the <c>JmgTmpJobBundleProjStartup</c> temporary table that contains the values to be
    ///    saved in the <c>JmgJobBundle</c> object.
    /// </param>
    /// <remarks>
    ///    This method is called from the <c>close</c> method of the <c>JmgJobBundleProjStartup</c> form. Each
    ///    record in the <c>JmgTmpJobBundleStartupProj</c> table contains the registration parameters for a
    ///    job. These are saved back to the <c>JmgJobBundle</c> object.
    /// </remarks>
    public void onClose(JmgTmpJobBundleProjStartup _jobBundleProjStartup)
    {
        JmgTmpJobBundleProjStartup jobBundleProjStartup;
        JmgRegistrationParameters  startupParams;
        jobBundleProjStartup.setTmpData(_jobBundleProjStartup);

        while select jobBundleProjStartup
        {
            startupParams = this.initializeJmgRegistrationParametersForOnClose(jobBundleProjStartup);
            jmgJobBundle.setStartupParameters(jobBundleProjStartup.JobId, startupParams);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves whether a legal cost category was entered by the user.
    /// </summary>
    /// <param name="_jmgTmpJobBundleProjStartup">
    ///    A JmgTmpJobBundleProjStartup record that the cost category should be validated for.
    /// </param>
    /// <returns>
    ///    true if the entered cost category was valid; otherwise, false.
    /// </returns>
    private boolean validateCategoryId(JmgTmpJobBundleProjStartup _jmgTmpJobBundleProjStartup)
    {
        ProjValCheckTrans   projValCheckTrans;
        if (this.mustValidateForValidateCategoryId(_jmgTmpJobBundleProjStartup))
        {
            projValCheckTrans = new ProjValCheckTrans();
            return projValCheckTrans.validateMandatory(_jmgTmpJobBundleProjStartup);
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeJmgRegistrationParametersForOnClose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize an instance of the <c>JmgRegistrationParameters</c>
    /// </summary>
    /// <param name = "_jobBundleProjStartup">
    /// Parameters used to initialize the <c>JmgRegistrationParameters</c> instance with.
    /// </param>
    /// <returns>
    /// The <c>JmgRegistrationParameters</c> instance.
    /// </returns>
    protected JmgRegistrationParameters initializeJmgRegistrationParametersForOnClose(JmgTmpJobBundleProjStartup _jobBundleProjStartup)
    {
        JmgRegistrationParameters  startupParams;
        
        startupParams = new JmgRegistrationParameters();
        startupParams.costCategory(_jobBundleProjStartup.ProjCategory);
        
        return startupParams;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeJmgTmpJobBundleProjStartup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize an instance of the <c>JmgTmpJobBundleProjStartup</c>
    /// </summary>
    /// <param name = "_job">
    /// Used to initialize the <c>JmgTmpJobBundleProjStartup</c> instance with.
    /// </param>
    /// <param name = "_defaultCategory">
    /// Used to initialize the <c>JmgTmpJobBundleProjStartup</c> instance with.
    /// </param>
    /// <returns>
    /// The <c>JmgTmpJobBundleProjStartup</c> instance.
    /// </returns>
    protected JmgTmpJobBundleProjStartup initializeJmgTmpJobBundleProjStartup(JmgTermJob _job,  ProjCategoryId _defaultCategory)
    {
        JmgTmpJobBundleProjStartup  jmgTmpJobBundleProjStartup;

        jmgTmpJobBundleProjStartup.Worker       = jmgJobBundle.worker();
        jmgTmpJobBundleProjStartup.JobId        = _job.jobId();
        jmgTmpJobBundleProjStartup.JobRef       = _job.jobRef();
        jmgTmpJobBundleProjStartup.ActOprId     = _job.actOprId();
        jmgTmpJobBundleProjStartup.Description  = _job.jobDescription();
        jmgTmpJobBundleProjStartup.ProjCategory = _defaultCategory;
        
        return jmgTmpJobBundleProjStartup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustValidateForValidateCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the validation succeeds.
    /// </summary>
    /// <param name = "_jmgTmpJobBundleProjStartup">
    /// A <c>JmgTmpJobBundleProjStartup</c> record buffer.
    /// </param>
    /// <returns>
    /// true if the validation succeeds; otherwise, false.
    /// </returns>
    protected boolean mustValidateForValidateCategoryId(JmgTmpJobBundleProjStartup _jmgTmpJobBundleProjStartup)
    {
        return _jmgTmpJobBundleProjStartup.validateWrite();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>