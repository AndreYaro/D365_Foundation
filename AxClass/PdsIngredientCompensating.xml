<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsIngredientCompensating</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PdsIngredient</c> class handles <c>BOM</c> and <c>ProdBom</c> logic for a compensating ingredient.
/// </summary>
[PDSIngredientTypeFactoryAttribute(PDSIngredientTypeEnum::Compensating)]
class PdsIngredientCompensating extends PdsIngredient
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedProdBomIngredientType</Name>
				<Source><![CDATA[
    public void modifiedProdBomIngredientType(ProdBOM _prodBom)
    {
        _prodBom.bomConsump = BOMConsumpType::Variable;
        _prodBom.ProdFlushingPrincip = ProdFlushingPrincipBOM::Manual;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBOMField</Name>
				<Source><![CDATA[
    public void defaultBOMField(BOM _bom, FieldName _fieldName)
    {
        switch (_fieldName)
        {
            case fieldStr(BOM, BomConsump):
                _bom.BOMConsump = BOMConsumpType::Variable;
                break;

            case fieldStr(BOM, PDSBaseValue):
                _bom.PDSBaseValue = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBOM</Name>
				<Source><![CDATA[
    public boolean validateBOM(BOM _bom)
    {
        if (!PDSCompensationPrinciple::findByBomItem(_bom.bomId, _bom.ItemId))
        {
            return checkFailed(strFmt("@PSC173", _bom.ItemId));
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProdBOM</Name>
				<Source><![CDATA[
    public boolean validateProdBOM(ProdBom _prodBom)
    {
        if (!PDSProdCompensationPrinciple::findProdBOMItem(_prodBOM.ProdId, _prodBom.ItemId))
        {
            return checkFailed(strFmt("@PSC173", _prodBom.ItemId));
        }
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>