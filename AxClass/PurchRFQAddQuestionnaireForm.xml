<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQAddQuestionnaireForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchRFQAddQuestionnaireForm</c> class supports the business logic of the <c>PurchRFQAddQuestionnaireForm</c> form.
/// </summary>
class PurchRFQAddQuestionnaireForm
{
    PurchRFQCaseTable  purchRFQCaseTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>PurchRFQAddQuestionnaireForm</c> class instance.
    /// </summary>
    /// <param name="_purchRFQCaseTable">
    /// A <c>PurchRFQCaseTable</c> instance.
    /// </param>
    protected void new(PurchRFQCaseTable _purchRFQCaseTable)
    {
        purchRFQCaseTable = _purchRFQCaseTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectQuestionnaire</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects the marked questionnaires.
    /// </summary>
    /// <param name="_kmCollection">
    /// The <c>KMCollection</c> form data source.
    /// </param>
    /// <param name="_purchRFQCaseTableKMCollection">
    /// The <c>PurchRFQCaseTableKMCollection</c> record.
    /// </param>
    public void selectQuestionnaire(
        FormDataSource                 _kmCollection,
        PurchRFQCaseTableKMCollection  _purchRFQCaseTableKMCollection)
    {
        KMCollection                   selectedQuestionnaire;
        PurchRFQCaseTableKMCollection  tmpPurchRFQCaseTableKMCollection;

        tmpPurchRFQCaseTableKMCollection.recordLevelSecurity(true);

        tmpPurchRFQCaseTableKMCollection.setTmp();

        // Are there any marked records?
        for (selectedQuestionnaire = getFirstSelection(_kmCollection);
                selectedQuestionnaire;
                selectedQuestionnaire = _kmCollection.getNext())
        {
            tmpPurchRFQCaseTableKMCollection.setTmpData(_purchRFQCaseTableKMCollection);

            select RecId from tmpPurchRFQCaseTableKMCollection
                where tmpPurchRFQCaseTableKMCollection.RFQCaseId == purchRFQCaseTable.RFQCaseId
                    && tmpPurchRFQCaseTableKMCollection.kmCollectionId == selectedQuestionnaire.KmCollectionId;

            if (!tmpPurchRFQCaseTableKMCollection.RecId)
            {
                tmpPurchRFQCaseTableKMCollection.clear();
                tmpPurchRFQCaseTableKMCollection.initValue();
                tmpPurchRFQCaseTableKMCollection.RFQCaseId = purchRFQCaseTable.RFQCaseId;
                tmpPurchRFQCaseTableKMCollection.kmCollectionId = selectedQuestionnaire.KmCollectionId;
                tmpPurchRFQCaseTableKMCollection.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>PurchRFQAddQuestionnaireForm</c> class.
    /// </summary>
    /// <param name="_purchRFQCaseTable">
    /// The <c>PurchRFQCaseTable</c> record.
    /// </param>
    /// <returns>
    /// An instance of the <c>PurchRFQAddQuestionnaireForm</c> class.
    /// </returns>
    public static PurchRFQAddQuestionnaireForm construct(PurchRFQCaseTable _purchRFQCaseTable)
    {
        return new PurchRFQAddQuestionnaireForm(_purchRFQCaseTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuestionnaire</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Adds the records in the <c>PurchRFQCaseTableKMCollection</c> table.
    /// </summary>
    /// <param name="_rfqCaseId">
    /// The <c>RFQCaseId</c> of the record.
    /// </param>
    /// <param name="_purchRFQCaseTableKMCollection">
    /// The <c>PurchRFQCaseTableKMCollection</c> record to update from.
    /// </param>
    public static void updateQuestionnaire(
        PurchRFQCaseId                 _rfqCaseId,
        PurchRFQCaseTableKMCollection  _purchRFQCaseTableKMCollection)
    {
        PurchRFQCaseTableKMCollection  newPurchRFQCaseTableKMCollection,
                                       tmpPurchRFQCaseTableKMCollection,
                                       selectedPurchRFQCaseTableKMCollection;

        tmpPurchRFQCaseTableKMCollection.recordLevelSecurity(true);

        tmpPurchRFQCaseTableKMCollection.setTmp();
        tmpPurchRFQCaseTableKMCollection.setTmpData(_purchRFQCaseTableKMCollection);

        ttsbegin;

        insert_recordset newPurchRFQCaseTableKMCollection(RFQCaseID,
                                                          KMCollectionId)
            select rfqCaseId, KMCollectionId from _purchRFQCaseTableKMCollection
                notExists join selectedPurchRFQCaseTableKMCollection
                    where selectedPurchRFQCaseTableKMCollection.RFQCaseId == _rfqCaseId
                        && selectedPurchRFQCaseTableKMCollection.KMCollectionId == _purchRFQCaseTableKMCollection.KMCollectionId;

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>