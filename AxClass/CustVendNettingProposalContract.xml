<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendNettingProposalContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute]
internal final class CustVendNettingProposalContract extends ProcessScheduleWorkItem implements SysOperationValidatable
{
    private Name rule;
    private TransDate transDate;
    private TransDate invoiceDueDate;
    private boolean enablePreview;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRule</Name>
				<Source><![CDATA[
    [DataMember]
    internal Name parmRule(Name _rule = rule)
    {
        rule = _rule;
        return rule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    [DataMember]
    internal TransDate parmTransDate(TransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceDueDate</Name>
				<Source><![CDATA[
    [DataMember]
    internal TransDate parmInvoiceDueDate(TransDate _invoiceDueDate = invoiceDueDate)
    {
        invoiceDueDate = _invoiceDueDate;
        return invoiceDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnablePreview</Name>
				<Source><![CDATA[
    [DataMember]
    internal boolean parmEnablePreview(boolean _enablePreview = enablePreview)
    {
        enablePreview = _enablePreview;
        return enablePreview;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean ok = true;

        if (!this.transDate)
        {
            ok = checkFailed(strFmt("@SYS331078", "@CashManagement:NettingPostingDate"));
        }
        if (!this.rule)
        {
            ok = checkFailed(strFmt("@SYS331078", "@CashManagement:NettingRule"));
        }
        else
        {
            CustVendNettingRule nettingRule = CustVendNettingRule::find(this.rule);
            if (nettingRule)
            {
                if (!nettingRule.Active)
                {
                    ok = checkFailed("@CashManagement:NettingAutomationInactiveRuleError");
                }
            }
            else
            {
                ok = checkFailed("@CashManagement:NettingAutomationRuleNotExistError");
            }
        }
        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>