<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppFieldPriorityForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Controller class for <c>WHSMobileAppFieldPriority</c> form
/// </summary>
public class WHSMobileAppFieldPriorityForm
{
    private FormTreeControl unassignedTypesTree;
    private FormTreeControl assignedPriorityTree;
    Map assignedPositionMap;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FormTreeControl _unassignedTypesTree, FormTreeControl _assignedPriorityTree)
    {
        unassignedTypesTree = _unassignedTypesTree;
        assignedPriorityTree = _assignedPriorityTree;
        assignedPositionMap = new Map(Types::String, Types::Integer);

        this.initializeTrees();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPriority</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a new priority group before the currently selected priority.
    /// </summary>
    public void addPriority()
    {
        var selectedItemIndex = assignedPriorityTree.getFirstSelected();
        WHSFieldDisplayPriority priority;
        if (selectedItemIndex == 0)
        {
            priority = 1;
        }
        else
        {
            var selectedItem = assignedPriorityTree.getItem(selectedItemIndex);
            priority = conPeek(str2con(selectedItem.data(), ','), 1);
        }

        WHSMobileAppFieldPriority::addPriority(priority);

        this.initializeAssignedTree();
        assignedPriorityTree.select(this.getAssignedTreeIndexByName(WHSMobileAppFieldPriority::findByPriority(priority, 0).GroupName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>removePriority</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes the currently selected priority group.
    /// </summary>
    public void removePriority()
    {
        var selectedItemIndex = assignedPriorityTree.getFirstSelected();

        if (selectedItemIndex != 0)
        {
            var selectedItem = assignedPriorityTree.getItem(selectedItemIndex);

            if (selectedItem.children() > 0)
            {
                return;
            }

            var priority = conPeek(str2con(selectedItem.data(), ','), 1);

            str nameToHighlight = '';
            var itemToHighlight = assignedPriorityTree.getNextSibling(selectedItemIndex);
            if (itemToHighlight == 0)
            {
                itemToHighlight = assignedPriorityTree.getPrevSibling(selectedItemIndex);
            }
            if (itemToHighlight != 0)
            {
                nameToHighlight = assignedPriorityTree.getItem(itemToHighlight).text();
            }

            WHSMobileAppFieldPriority::removePriority(priority);

            this.initializeAssignedTree();

            if (nameToHighlight != '')
            {
                assignedPriorityTree.select(this.getAssignedTreeIndexByName(nameToHighlight));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves up the currently selected record.
    /// </summary>
    public void moveUp()
    {
        this.moveRecord(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves down the currently selected record.
    /// </summary>
    public void moveDown()
    {
        this.moveRecord(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the currently selected record in the unassigned tree.
    /// It is assigned just above the selected position in the assigned tree.
    /// </summary>
    public void assign()
    {
        var selectedTypeIndex = unassignedTypesTree.getFirstSelected();
        if (selectedTypeIndex != 0)
        {
            FormTreeItem selectedType = unassignedTypesTree.getItem(selectedTypeIndex);

            WHSMobileAppField mobileAppField = WHSMobileAppField::findByClassName(selectedType.data());

            var selectedIndexToAssign = assignedPriorityTree.getFirstSelected();

            WHSFieldDisplayPriority    priority;
            WHSFieldDisplaySubPriority subPriority;
            if (selectedIndexToAssign == 0)
            {
                WHSMobileAppFieldPriority firstItemPriority;

                select firstonly firstItemPriority
                    order by Priority, SubPriority
                       where firstItemPriority.LineType == WHSMobileAppFieldPriorityLineType::Item;

                priority    = firstItemPriority.Priority;
                subPriority = firstItemPriority.SubPriority;
            }
            else
            {
                [priority, subPriority] = str2con(assignedPriorityTree.getItem(selectedIndexToAssign).data(), ',');
            }

            WHSMobileAppFieldPriority::assignPriority(mobileAppField, priority, subPriority);

            this.initializeTrees();
            assignedPriorityTree.select(this.getAssignedTreeIndexByName(mobileAppField.Name()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unassign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unassigns the currently selected record in the assigned tree.
    /// </summary>
    public void unassign()
    {
        var selectedItemIndex = assignedPriorityTree.getFirstSelected();
        if (selectedItemIndex != 0)
        {
            FormTreeItem selectedItem = assignedPriorityTree.getItem(selectedItemIndex);

            if (selectedItem.children() > 0)
            {
                return;
            }

            WHSFieldDisplayPriority    priority;
            WHSFieldDisplaySubPriority subPriority;
            [priority, subPriority] = str2con(selectedItem.data(), ',');

            str nameToHighlight = '';
            var itemToHighlight = assignedPriorityTree.getNextSibling(selectedItemIndex);
            if (itemToHighlight == 0)
            {
                itemToHighlight = assignedPriorityTree.getPrevSibling(selectedItemIndex);
            }
            if (itemToHighlight == 0)
            {
                itemToHighlight = assignedPriorityTree.getParent(selectedItemIndex);
            }
            if (itemToHighlight != 0)
            {
                nameToHighlight = assignedPriorityTree.getItem(itemToHighlight).text();
            }

            WHSMobileAppFieldPriority::unassignPriority(priority, subPriority);

            this.initializeTrees();

            if (nameToHighlight != '')
            {
                assignedPriorityTree.select(this.getAssignedTreeIndexByName(nameToHighlight));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeTrees</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the assigned and unassigned trees.
    /// </summary>
    public void initializeTrees()
    {
        this.initializeUnassignedTree();
        this.initializeAssignedTree();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeUnassignedTree</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the unassigned tree.
    /// </summary>
    public void initializeUnassignedTree()
    {
        unassignedTypesTree.deleteAll();

        WHSMobileAppField mobileAppField;
        WHSMobileAppFieldPriority mobileAppFieldPriority;

        while select mobileAppField
            notexists join mobileAppFieldPriority
            where mobileAppField.RecId == mobileAppFieldPriority.WHSMobileAppField
        {
            SysFormTreeControl::addTreeItem(
                                        unassignedTypesTree,
                                        mobileAppField.name(),
                                        FormTreeAdd::Root,
                                        mobileAppField.FieldClassName);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeAssignedTree</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the assigned tree.
    /// </summary>
    public void initializeAssignedTree()
    {
        WHSMobileAppField mobileAppField;
        WHSMobileAppFieldPriority mobileAppFieldPriority;

        boolean assignedTreeIsEmpty = true;

        assignedPriorityTree.deleteAll();

        int currentGroupItemIdx = 0;
        while select mobileAppFieldPriority
          outer join mobileAppField
            order by mobileAppFieldPriority.Priority, mobileAppFieldPriority.SubPriority
               where mobileAppFieldPriority.WHSMobileAppField == mobileAppField.RecId
        {
            var dataString = strFmt("%1,%2", mobileAppFieldPriority.Priority, mobileAppFieldPriority.SubPriority);
            if (mobileAppFieldPriority.LineType == WHSMobileAppFieldPriorityLineType::Group)
            {
                currentGroupItemIdx = SysFormTreeControl::addTreeItem(
                                                            assignedPriorityTree,
                                                            this.getPriorityNodeName(mobileAppFieldPriority.Priority),
                                                            FormTreeAdd::Root,
                                                            dataString);
                assignedPositionMap.insert(this.getPriorityNodeName(mobileAppFieldPriority.Priority), currentGroupItemIdx);
                assignedTreeIsEmpty = false;
            }
            else if (currentGroupItemIdx != 0)
            {
                var itemIdx = SysFormTreeControl::addTreeItem(
                                                    assignedPriorityTree,
                                                    mobileAppField.name(),
                                                    currentGroupItemIdx,
                                                    dataString);
                assignedPositionMap.insert(mobileAppField.name(), itemIdx);
                assignedTreeIsEmpty = false;
            }
        }

        if (assignedTreeIsEmpty)
        {
            var parentIdx = SysFormTreeControl::addTreeItem(
                                    assignedPriorityTree,
                                    this.getPriorityNodeName(1),
                                    FormTreeAdd::Root,
                                    this.getPriorityNodeName(1));
        }

        SysFormTreeControl::expandTree(assignedPriorityTree, assignedPriorityTree.getRoot());
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveRecord</Name>
				<Source><![CDATA[
    private void moveRecord(boolean _moveUp)
    {
        var selectedItemIndex = assignedPriorityTree.getFirstSelected();
        if (selectedItemIndex != 0)
        {
            var selectedItem = assignedPriorityTree.getItem(selectedItemIndex);
            WHSFieldDisplayPriority    priority;
            WHSFieldDisplaySubPriority subPriority;
            [priority, subPriority] = str2con(selectedItem.data(), ',');
            var name = selectedItem.text();
            if (_moveUp)
            {
                WHSMobileAppFieldPriority::moveUpRecord(priority, subPriority);
            }
            else
            {
                WHSMobileAppFieldPriority::moveDownRecord(priority, subPriority);
            }

            this.initializeAssignedTree();
            assignedPriorityTree.select(this.getAssignedTreeIndexByName(name));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriorityNodeName</Name>
				<Source><![CDATA[
    private str getPriorityNodeName(int _priority)
    {
        return strFmt("@WAX:Priority", _priority);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssignedTreeIndexByName</Name>
				<Source><![CDATA[
    private int getAssignedTreeIndexByName(str _name)
    {
        if (assignedPositionMap.exists(_name))
        {
            return assignedPositionMap.lookup(_name);
        }

        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>