<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalLineTransactionValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventJournalLineTransactionValidator</c> class validates inventory transactions for an inventory journal line.
/// </summary>
public abstract class InventJournalLineTransactionValidator
{
    #isoCountryRegionCodes
    protected InventJournalTrans journalLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addQtyToMap</Name>
				<Source><![CDATA[
    protected void addQtyToMap(Map _map, str _key, InventQty _qty)
    {
        real newQty;

        if (_map.exists(_key))
        {
            newQty = _map.lookup(_key) + _qty;
        }
        else
        {
            newQty = _qty;
        }

        _map.insert(_key, newQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateDimensionQuantityMaps</Name>
				<Source><![CDATA[
    protected abstract void populateDimensionQuantityMaps(boolean _needToCheckInventoryOwners)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNoMixedCostingImpactQuantityMap</Name>
				<Source><![CDATA[
    protected abstract Map getNoMixedCostingImpactQuantityMap()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNoMixedCostingImpactOwners</Name>
				<Source><![CDATA[
    protected boolean checkNoMixedCostingImpactOwners()
    {
        boolean ok = true;

        Map noMixedCostingImpactQuantities = this.getNoMixedCostingImpactQuantityMap();

        var legalEntityOwner = InventOwner_RU::findOrCreateCurrentLegalEntity().InventOwnerId;

        if (noMixedCostingImpactQuantities.elements() > 1
            && noMixedCostingImpactQuantities.exists(legalEntityOwner))
        {
            ok = checkFailed("@Consignment:MessageValidation_JournalMixedCostingImpactOwners");
        }
        else if (journalLine.inventDim().InventOwnerId_RU == legalEntityOwner
            && ((noMixedCostingImpactQuantities.elements() > 1)
                || !noMixedCostingImpactQuantities.exists(legalEntityOwner)))
        {
            ok = checkFailed("@Consignment:MessageValidation_JournalMixedCostingImpactOwners");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkJournalLine</Name>
				<Source><![CDATA[
    protected abstract boolean checkJournalLine(boolean _needToCheckInventoryOwners)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates inventory transactions.
    /// </summary>
    /// <returns>true if the inventory transactions are valid; otherwise, false.</returns>
    public boolean check()
    {
        if (!journalLine)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        boolean needToCheckInventoryOwners = isConfigurationKeyEnabled(configurationKeyNum(ConsignmentInbound))
            && InventTable::find(journalLine.ItemId).isItemInventoryOwnerActivated()
            && !SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);

        this.populateDimensionQuantityMaps(needToCheckInventoryOwners);

        return this.checkJournalLine(needToCheckInventoryOwners);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>