<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInstrumentationOnHandCalculationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities related to warehouse on hand inventory calculations.
/// </summary>
internal class WHSInstrumentationOnHandCalculationActivities
{
    private WHSInstrumentationLogger logger;

    private const str ActivityNamePrefix = 'WarehouseOnHandCalculations.';
    private const str CalculateQuantitiesForLevel = 'CalculateQuantitiesForLevel';
    private const str FindOrCreateInventDimCriteria = 'FindOrCreateInventDimCriteria';
    private const str RetrieveInventSiteIdFromInventLocationId = 'RetrieveInventSiteIdFromInventLocationId';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of the <WHSInstrumentationOnHandCalculationActivities></c> class.
    /// </summary>
    /// <param name = "_logger">The logger used for logging the telemetry.</param>
    /// <returns>A new instance of the <WHSInstrumentationOnHandCalculationActivities></c> class</returns>
    [Hookable(false)]
    internal static WHSInstrumentationOnHandCalculationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSInstrumentationOnHandCalculationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    private SysInstrumentationActivity activity(str _activityName)
    {
        return logger.activity(ActivityNamePrefix + _activityName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateQuantitiesForLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new activity context used when calculating quantities for level.
    /// </summary>
    /// <returns>A new activity context.</returns>
    [Hookable(false)]
    internal SysInstrumentationActivityContext calculateQuantitiesForLevel()
    {
        return logger.activityContext(this.activity(CalculateQuantitiesForLevel));
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateInventDimCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new activity context used when we use inventDim::findOrCreate on inventDimCriteria
    /// </summary>
    /// <returns>A new activity context.</returns>
    [Hookable(false)]
    internal SysInstrumentationActivityContext findOrCreateInventDimCriteria()
    {
        return logger.activityContext(this.activity(FindOrCreateInventDimCriteria));
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveInventSiteIdFromInventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new activity context used when retrieving the inventSiteId based on the inventLocationId
    /// </summary>
    /// <returns>A new activity context.</returns>
    [Hookable(false)]
    internal SysInstrumentationActivityContext retrieveInventSiteIdFromInventLocationId()
    {
        return logger.activityContext(this.activity(RetrieveInventSiteIdFromInventLocationId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>