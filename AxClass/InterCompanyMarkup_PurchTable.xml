<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyMarkup_PurchTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InterCompanyMarkup_PurchTable extends InterCompanyMarkup
{
    PurchTable  purchTable;
    SalesTable  salesTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyFrom</Name>
				<Source><![CDATA[
        void copyFrom(boolean _insert = false)
    {
        MarkupTrans     markupTransRef;

        changecompany(markupTrans.company())
        {
            purchTable = PurchTable::findRecId(markupTrans.TransRecId);
            if (purchTable.InterCompanyCompanyId)
            {
                setprefix(strfmt("@SYS93821",TradeInterCompany::curCompanyName()));
                changecompany(purchTable.InterCompanyCompanyId)
                {
                    setprefix(strfmt("@SYS93821",TradeInterCompany::curCompanyName()));

                    salesTable = SalesTable::find(purchTable.InterCompanySalesId);
                    if (salesTable.RecId)
                    {
                        if (this.writeMarkUpTransNeeded())
                        {
                            ttsBegin;
                            markupTransRef = this.getMarkupTransDerived(salesTable.RecId);

                            if (markupTransRef.RecId 
                                || !markupTrans.IsDeleted 
                                || markupAction != InterCompanyMarkupAction::Calc)
                            {
                                this.writeMarkupTrans(markupTransRef, salesTable, true, markupTrans);
                            }
                            ttsCommit;
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeMarkUpTransNeeded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if related <c>MarkupTrans</c> was already allocated with invoice.
    /// </summary>
    /// <returns>True if we have to udpate related <c>MarkupTrans</c>.</returns>
    private boolean writeMarkUpTransNeeded()
    {
        CustInvoiceJour custInvoiceJour;
        MarkupTrans     markupTransRef;

        if (markupTrans.InterCompanyInvoiceId)
        {
            select firstonly RecId from markupTransRef
                where markupTransRef.InterCompanyCompanyId  == markupTrans.DataAreaId
                    && markupTransRef.InterCompanyRefRecId  == markupTrans.RecId
                    && !markupTransRef.IsDeleted
                exists join custInvoiceJour
                    where custInvoiceJour.RecId     == markupTransRef.TransRecId
                       && custInvoiceJour.InvoiceId == markupTrans.InterCompanyInvoiceId;
        }

        return !markupTransRef.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromInterCompanyTradingValueMap</Name>
				<Source><![CDATA[
        public InterCompanyTradingValueMap fromInterCompanyTradingValueMap()
    {
        return purchTable.interCompanyTradingValueMap();
    }

]]></Source>
			</Method>
			<Method>
				<Name>toInterCompanyTradingValueMap</Name>
				<Source><![CDATA[
        public InterCompanyTradingValueMap toInterCompanyTradingValueMap()
    {
        return salesTable.interCompanyTradingValueMap();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>