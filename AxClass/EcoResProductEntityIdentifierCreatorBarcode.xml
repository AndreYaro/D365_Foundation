<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityIdentifierCreatorBarcode</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The product entity barcode identifier creator class.
/// </summary>
[EcoResProductEntityIdentifierCreatorAttribute(EcoResProductEntityIdentifierCodeType::Barcode)]
public class EcoResProductEntityIdentifierCreatorBarcode extends EcoResProductEntityIdentifierCreator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createIdentifiers</Name>
				<Source><![CDATA[
    public void createIdentifiers()
    {
        Map barcodeToLegalEntityMap = new Map(Types::String, Types::String);
        Map barcodeToSalesUnitIdMap = new Map(Types::String, Types::String);
        Map barcodeToQuantityMap = new Map(Types::String, Types::Real);

        InventItemBarcode       inventItemBarcode;
        BarcodeSetup            barcodeSetup;
        InventDistinctProduct   inventDistinctProduct;
        InventTableModule       inventTableModule;

        while select crosscompany inventItemBarcode
                where inventItemBarcode.barcodeSetupId == identifierCode.Id
            exists join barcodeSetup
                where barcodeSetup.BarcodeSetupId == inventItemBarcode.barcodeSetupId
            exists join inventDistinctProduct
                where inventDistinctProduct.Product == product.RecId
                    && inventDistinctProduct.ItemId == inventItemBarcode.ItemId
                    && inventDistinctProduct.InventDimId == inventItemBarcode.inventDimId
            exists join inventTableModule
                where inventTableModule.ItemId == inventDistinctProduct.ItemId
                    && inventTableModule.ModuleType == ModuleInventPurchSales::Sales
                    && inventTableModule.UnitId == inventItemBarcode.UnitId
        {
            barcodeToLegalEntityMap = this.updateMap(inventItemBarcode.ItemBarcode, inventItemBarcode.DataAreaId, barcodeToLegalEntityMap);
            barcodeToSalesUnitIdMap = this.updateMap(inventItemBarcode.ItemBarcode, inventItemBarcode.UnitId, barcodeToSalesUnitIdMap);
            barcodeToQuantityMap = this.updateMap(inventItemBarcode.ItemBarcode, inventItemBarcode.qty, barcodeToQuantityMap);
        }

        this.createIdentifiersFromData(barcodeToLegalEntityMap, barcodeToSalesUnitIdMap, barcodeToQuantityMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>