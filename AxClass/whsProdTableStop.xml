<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>whsProdTableStop</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSProdTableStop</c> class handles actions for production orders
/// that are used in warehouse management transactions.
/// </summary>
public class whsProdTableStop
{
    Args    args;

    boolean actionStop;
    boolean actionStopAndPick;
    boolean actionRemoveStop;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>WHSProdTableStop</c> class.
    /// </summary>
    /// <param name="_args">
    /// An <c>Args</c> object from the caller.
    /// </param>
    protected void initialize(Args _args)
    {
        args = _args;

        if (args)
        {
            actionStop = args.menuItemType() == MenuItemType::Action
                        && args.menuItemName() == menuitemActionStr(WHSProdTableStop);
            actionStopAndPick = args.menuItemType() == MenuItemType::Action
                        && args.menuItemName() == menuitemActionStr(WHSProdTableStopAndUnpick);
            actionRemoveStop = args.menuItemType() == MenuItemType::Action
                        && args.menuItemName() == menuitemActionStr(WHSProdTableRemoveStop);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {        
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeStop</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes the stop of a production order that are used in warehouse management transaction.
    /// </summary>
    /// <param name="_prodId">
    /// The ID of the production order.
    /// </param>
    protected void removeStop(ProdId _prodId)
    {
        WHSProdTable::removeStop(_prodId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs an action for selected production orders that are used in warehouse management transactions.
    /// </summary>
    protected void run()
    {
        FormDataSource  prodTable_ds;
        ProdTable       prodTable;

        using(var activityContext = ProdInstrumentationLogger::createLogger(classStr(whsProdTableStop)).whs().stopAndPick())
        {
            prodTable_ds    = FormDataUtil::getFormDataSource(args.record());

            if (prodTable_ds.table() == tableNum(ProdTable))
            {
                for (prodTable = prodTable_ds.getFirst(true) ? prodTable_ds.getFirst(true) : prodTable_ds.cursor();
                prodTable;
                prodTable = prodTable_ds.getNext())
                {
                    switch (true)
                    {
                        case actionStop:
                            this.stop(prodTable.ProdId);
                            break;

                        case actionStopAndPick:
                            this.stopAndUnpick(prodTable.ProdId);
                            break;

                        case actionRemoveStop:
                            this.removeStop(prodTable.ProdId);
                            break;

                        default:
                            throw error(Error::wrongUseOfFunction(funcName()));
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>stop</Name>
				<Source><![CDATA[
    /// <summary>
    /// Stops a production order that are used in warehouse management transaction.
    /// </summary>
    /// <param name="_prodId">
    /// The ID of the production order.
    /// </param>
    protected void stop(ProdId _prodId)
    {
        WHSProdTable::stop(_prodId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>stopAndUnpick</Name>
				<Source><![CDATA[
    /// <summary>
    /// Stops and unpicks a production order that are used in warehouse management transaction.
    /// </summary>
    /// <param name="_prodId">
    /// The ID of the production order.
    /// </param>
    protected void stopAndUnpick(ProdId _prodId)
    {
        WHSProdTable::stopAndUnpick(_prodId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSProdTableStop construct()
    {
        return new WHSProdTableStop();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSProdTableStop whsProdTableStop = WHSProdTableStop::construct();

        if (_args != null
            && _args.record()
            && FormDataUtil::getFormDataSource(_args.record()))
        {
            whsProdTableStop.initialize(_args);
            whsProdTableStop.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>