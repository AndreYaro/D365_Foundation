<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferOrdOverviewController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventTransferOrderOverviewController</c> class is the controller class for the
///    <c>InventTransferOrderOverview</c> report.
/// </summary>
class InventTransferOrdOverviewController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the report query ranges based on caller.
    /// </summary>
    protected void prePromptModifyContract()
    {
        this.setRanges(this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the report query ranges based on caller.
    /// </summary>
    /// <param name="_query">
    /// The hold the <c>Query</c> object of the report.
    /// </param>
    public void setRanges(Query _query)
    {
        if ( this.parmArgs() || this.parmArgs().caller() || this.parmArgs().dataset() == tableNum(InventTransferTable) )
        {
            InventTransferTable inventTransferTable = this.parmArgs().record();

            if (_query && inventTransferTable)
            {
                QueryBuildDataSource queryBuildDataSource = _query.dataSourceTable(tableNum(InventTransferTable));

                // check for QueryBuildDataSource
                if (queryBuildDataSource)
                {
                    // find the range, if it's not found add it
                    QueryBuildRange queryBuildRange = queryBuildDataSource.findRange(fieldNum(InventTransferTable , TransferId));
                    if (!queryBuildRange)
                    {
                        queryBuildRange = queryBuildDataSource.addRange(fieldNum(InventTransferTable , TransferId));
                    }
                    queryBuildRange.value(queryValue(inventTransferTable.TransferId));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        InventTransferOrdOverviewController  controller = new InventTransferOrdOverviewController();

        controller.parmReportName(ssrsReportStr(InventTransferOrderOverview, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>
