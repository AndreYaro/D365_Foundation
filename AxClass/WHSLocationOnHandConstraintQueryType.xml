<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLocationOnHandConstraintQueryType</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSLocationOnHandConstraintQueryType</c> holds the parameters of the
/// <c>WHSLocationOnHandConstraintQuery</c>.
/// </summary>
class WhsLocationOnHandConstraintQueryType
{
    boolean groupByStatus;
    boolean groupByItem;
    boolean groupByBatch;
    boolean groupByVariant;
    boolean includeDelta;
    boolean singleRecordSelect;
    boolean selectProduct;
    boolean selectInventUnit;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupByBatch</Name>
				<Source><![CDATA[
    public boolean parmGroupByBatch(boolean _groupByBatch = groupByBatch)
    {
        groupByBatch = _groupByBatch;

        return groupByBatch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupByItem</Name>
				<Source><![CDATA[
    public boolean parmGroupByItem(boolean _groupByItem = groupByItem)
    {
        groupByItem = _groupByItem;

        return groupByItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupByStatus</Name>
				<Source><![CDATA[
    public boolean parmGroupByStatus(boolean _groupByStatus = groupByStatus)
    {
        groupByStatus = _groupByStatus;

        return groupByStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupByVariant</Name>
				<Source><![CDATA[
    public boolean parmGroupByVariant(boolean _groupByVariant = groupByVariant)
    {
        groupByVariant = _groupByVariant;

        return groupByVariant;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldUseGroupBy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the query contains GROUP BY clause.
    /// </summary>
    /// <returns>
    /// true if query contains GROUP BY clause; otherwise, false.
    /// </returns>
    public boolean shouldUseGroupBy()
    {
        return groupByBatch || groupByItem || groupByStatus || groupByVariant;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeDelta</Name>
				<Source><![CDATA[
    public boolean parmIncludeDelta(boolean _includeDelta = includeDelta)
    {
        includeDelta = _includeDelta;

        return includeDelta;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSingleRecordSelect</Name>
				<Source><![CDATA[
    public boolean parmSingleRecordSelect(boolean _singleRecordSelect = singleRecordSelect)
    {
        singleRecordSelect = _singleRecordSelect;

        return singleRecordSelect;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static WHSLocationOnHandConstraintQueryType construct()
    {
        return new WHSLocationOnHandConstraintQueryType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newNoDelta</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new query type which will only <c>InventSum</c> records
    /// as a source of on hand.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>WHSLocationOnHandConstraintQueryType</c> class.
    /// </returns>
    public static WHSLocationOnHandConstraintQueryType newNoDelta()
    {
        return WHSLocationOnHandConstraintQueryType::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWithDelta</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new query type which will use both <c>InventSum</c> and <c>InventSumDelta</c> records
    /// as a source of on hand.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>WHSLocationOnHandConstraintQueryType</c> class.
    /// </returns>
    public static WHSLocationOnHandConstraintQueryType newWithDelta()
    {
        WHSLocationOnHandConstraintQueryType queryType = WHSLocationOnHandConstraintQueryType::construct();
        queryType.parmIncludeDelta(true);
        return queryType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWithSingleRecordSelect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new query type which will only return first record.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>WHSLocationOnHandConstraintQueryType</c> class.
    /// </returns>
    public static WHSLocationOnHandConstraintQueryType newWithSingleRecordSelect()
    {
        WHSLocationOnHandConstraintQueryType queryType = WHSLocationOnHandConstraintQueryType::construct();
        queryType.parmSingleRecordSelect(true);
        return queryType;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>