<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CBDDestinationsFormLetterContext_PurchRFQ</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CBDDestinationsFormLetterContext_PurchRFQ</c> class is an abstraction
/// for Request for quotation based documents to support
/// runtime Electronic reporting destinations.
/// </summary>
internal abstract class CBDDestinationsFormLetterContext_PurchRFQ
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQueryTableBuffer</Name>
				<Source><![CDATA[
    public Common getQueryTableBuffer(Common _reference, Object _formLetter)
    {
        //The table VendRFQJour does not contain isProforma() method.
        //So it cannot be used be used to search print management settings before posting.
        Common common;
        return common;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCountReferences</Name>
				<Source><![CDATA[
    public NumberOfRecords getCountReferences(Object _formLetter)
    {
        PurchRFQFormLetter purchRFQFormLetter = _formLetter as PurchRFQFormLetter;

        if (!purchRFQFormLetter)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        PurchRFQParmUpdate purchRFQParmUpdate = purchRFQFormLetter.purchRFQParmUpdate();
        PurchRFQParmTable purchRFQParmTable;

        select count(RecId) from purchRFQParmTable
            where purchRFQParmTable.ParmId == purchRFQParmUpdate.ParmId;

        return purchRFQParmTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReferenceBuffer</Name>
				<Source><![CDATA[
    public Common getReferenceBuffer(Object _formLetter)
    {
        PurchRFQFormLetter purchRFQFormLetter = _formLetter as PurchRFQFormLetter;

        if (!purchRFQFormLetter)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        PurchRFQParmUpdate purchRFQParmUpdate = purchRFQFormLetter.purchRFQParmUpdate();
        PurchRFQParmTable purchRFQParmTable;

        select purchRFQParmTable
            where purchRFQParmTable.ParmId == purchRFQParmUpdate.ParmId;

        return purchRFQParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintContext</Name>
				<Source><![CDATA[
    public PrintMgmtPrintContext getPrintContext(Common _printMgmtReferencedTable, Common _queryTableBuffer)
    {
        FormLetterReport formLetterReport = FormLetterReport::construct(this.getPrintMgmtDocumentType());

        return formLetterReport.getDefaultPrintMgmtContext(_queryTableBuffer, _printMgmtReferencedTable.data());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets print management document type.
    /// </summary>
    /// <returns>The print management document type.</returns>
    abstract protected PrintMgmtDocumentType getPrintMgmtDocumentType()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>