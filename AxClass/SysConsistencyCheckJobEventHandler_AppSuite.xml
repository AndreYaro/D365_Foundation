<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysConsistencyCheckJobEventHandler_AppSuite</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handle events for the <c>SysConsistencyCheckJob</c> class.
/// </summary>
public final class SysConsistencyCheckJobEventHandler_AppSuite
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>SysConsistencyCheckJob_Post_getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle post event of getFromDialog method to show notification for the on-hand consistency check.
    /// </summary>
    /// <param name="args"><c>XppPrePostArgs</c> parameter.
    /// </param>
    [PostHandlerFor(classStr(SysConsistencyCheckJob), methodStr(SysConsistencyCheckJob, getFromDialog))]
    public static void SysConsistencyCheckJob_Post_getFromDialog(XppPrePostArgs args)
    {
        SysConsistencyCheckJob  sysConsistencyCheckJob = args.getThis() as SysConsistencyCheckJob;
        TmpSysConsistencyCheck  tmpSysConsistencyCheck_OnHand = sysConsistencyCheckJob.getTmp(classNum(InventConsistencyCheck_Onhand));
        boolean isInventoryVisibilityEnabled = FeatureStateProvider::IsFeatureEnabled(InventInventoryDataServiceFeature::instance());

        if (tmpSysConsistencyCheck_OnHand.selected)
        {
            if (Box::YesNo("@SCM:WarningOfOnHandConsistencyCheck", DialogButton::No) == DialogButton::No)
            {
                args.setReturnValue(false);
                return;
            }

            if (isInventoryVisibilityEnabled && InventIVConsistencyCheckSyncIvFlight::instance().isEnabled())
            {
                InventInventoryDataServiceParameters parameter = InventInventoryDataServiceParameters::find();
                if (parameter.RecId && parameter.isInventoryServiceStatusEnable())
                {
                    var serviceHealthChecker = new InventoryServiceServiceHealthChecker();
                    if (!serviceHealthChecker.checkHealth(parameter.InventoryServiceEndpoint))
                    {
                        Box::stop("@SCM:InventOnHandConsistencyCheckFailToConnectIVError");
                        args.setReturnValue(false);
                        return;
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>