<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysListPanelSet_InventTurnoverReport_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>SysListPanelSet_InventTurnoverReport_RU</c> class initializes and sets up the <c>SysListPanel</c>
///    control on the Inventory balance turnover form.
/// </summary>
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
class SysListPanelSet_InventTurnoverReport_RU extends SysListPanelSet_FieldGroup_RU
{
    DimensionFocusRecId     dimensionFocusId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createAllowedSet</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the allowed fields IDs set.
    /// </summary>
    /// <exception cref="Exception::Error">
    ///    An exception is thrown when the fields group name is not found or not valid.
    /// </exception>
    protected void createAllowedSet()
    {
        DictFieldGroup          dictGroup = new DictFieldGroup(tableId, groupName);
        DictField               dictField;
        int                     idx;
        int                     arrayIdx;

        if (! dictGroup)
        {
            throw error(strFmt("@GLS1179", groupName, tableId2name(tableId)));
        }

        allowedSet = new Set(Types::Integer);

        for (idx = 1; idx <= dictGroup.numberOfFields(); idx++)
        {
            dictField = new DictField(tableId, dictGroup.field(idx));
            if (dictField.isSql())
            {
                if (dictField.id() == fieldNum(InventSumDateFinancialDim_RU, Dimension))
                {
                    for (arrayIdx = 1; arrayIdx <= dictField.arraySize(); arrayIdx++)
                    {
                        if (dimensionFocusId && DimensionHierarchyLevel::findByDimensionHierarchyAndLevel(dimensionFocusId, arrayIdx))
                        {
                            allowedSet.add(fieldId2Ext(dictField.id(), arrayIdx));
                        }
                    }
                }
                else
                {
                    allowedSet.add(dictField.id());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Loads data for specified field.
    /// </summary>
    /// <param name="_fieldId">
    ///    The Id of the field.
    /// </param>
    /// <returns>
    ///    A container that contains the data for specified field.
    /// </returns>
    protected container getDataItem(FieldId _fieldId)
    {
        SysDictField    dictField = new SysDictField(tableId, _fieldId);
        int             arrayIdx  = fieldExt2Idx(_fieldId);
        DimensionAttribute dimAttr;

        if (fieldExt2Id(_fieldId) == fieldNum(InventSumDateFinancialDim_RU, Dimension))
        {
            dimAttr = DimensionAttribute::find(
                DimensionHierarchyLevel::findByDimensionHierarchyAndLevel(dimensionFocusId, arrayIdx).DimensionAttribute);

            return [_fieldId, dictField.image(), dimAttr.localizedName(), dimAttr.localizedName()];
        }

        return [_fieldId, dictField.image(), dictField.label(arrayIdx), dictField.help(arrayIdx)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new()
    {
        super();

        dimensionFocusId = InventParameters::find().InventSumDateFinancialDimensionFocus_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static SysListPanelSet_InventTurnoverReport_RU construct()
    {
        return new SysListPanelSet_InventTurnoverReport_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>SysListPanelSet_InventTurnoverReport_RU</c> class given the form reference.
    /// </summary>
    /// <param name="_formRun">
    ///    The reference of the form that would display the list panel.
    /// </param>
    /// <param name="_parentId">
    ///    The ID of the control that would contain the list panel.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>SysListPanelSet_InventTurnoverReport_RU</c> class.
    /// </returns>
    public static SysListPanelSet_InventTurnoverReport_RU newForm(FormRun         _formRun,
                                                                  int             _parentId)
    {
        SysListPanelSet_InventTurnoverReport_RU sysListPanel = SysListPanelSet_InventTurnoverReport_RU::construct();

        sysListPanel.parmFormRun(_formRun);
        sysListPanel.parmParentId(_parentId);
        sysListPanel.parmTableId(tableNum(InventSumDateFinancialDim_RU));
        sysListPanel.parmGroupName(tableFieldgroupStr(InventSumDateFinancialDim_RU, Dimensions));
        sysListPanel.parmHasUpDownButton(true);
        sysListPanel.build();

        return sysListPanel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>