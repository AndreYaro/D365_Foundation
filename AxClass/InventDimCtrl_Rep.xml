<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimCtrl_Rep</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventDimCtrl_Rep extends InventDimCtrl
{
    InventDimReportInterface    callingElement;
    boolean                     disableLabelOnControl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustShowControl</Name>
				<Source><![CDATA[
    protected boolean mustShowControl(InventDimControlInterface _fc)
    {
        FieldId dimParmFieldId = InventDim::dim2dimParm(inventDimControls.fieldId(_fc));
        return dimParmVisible.(dimParmFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallingElement</Name>
				<Source><![CDATA[
    public InventDimReportInterface parmCallingElement(InventDimReportInterface _callingElement = callingElement)
    {
        callingElement = _callingElement;
        return callingElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisableLabel</Name>
				<Source><![CDATA[
    public boolean parmDisableLabel(boolean _disableLabelOnControl = disableLabelOnControl)
    {
        disableLabelOnControl = _disableLabelOnControl;
        return disableLabelOnControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlVisible</Name>
				<Source><![CDATA[
    protected void setControlVisible(InventDimControlInterface _control)
    {
        InventDimReportControlInterface reportControl = _control;
        super(_control);

        if (disableLabelOnControl && _control.visible() &&
            _control.controlObject().handle() != classNum(ReportPromptControl))
        {
            reportControl.showLabel(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControls</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the controls in the user interface, such as a form or report, based on current parameter
    ///    values.
    /// </summary>
    /// <remarks>
    ///    Hides or shows controls. Also responsible for enabling and disabling controls.
    /// </remarks>
    public void updateControls()
    {
        callingElement.arrangeLevelNone();
        this.hideAll();
        this.setVisible();
        callingElement.arrangeLevelGlobal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventDimCtrl_Rep construct()
    {
        return new InventDimCtrl_Rep();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>