<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSOutboundUOMStructureCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSOutboundUOMStructureCreator</c> class is responsible for creating outbound <c>WHSUOMStructure</c> records.
/// </summary>
internal class WHSOutboundUOMStructureCreator
{
    private WHSLicensePlateId licensePlateId;
    private WHSWorkLine workLine;
    private WHSWorkId createdWorkId;
    private WHSModule whsModule;
    private WHSUOM uomPack;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSOutboundUOMStructureCreator construct()
    {
        return new WHSOutboundUOMStructureCreator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLicensePlateId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSLicensePlateId parmLicensePlateId(WHSLicensePlateId _licensePlateId = licensePlateId)
    {
        licensePlateId = _licensePlateId;

        return licensePlateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkLine</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSWorkLine parmWorkLine(WHSWorkLine _workLine = workLine)
    {
        workLine = _workLine;

        return workLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreatedWorkId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSWorkId parmCreatedWorkId(WHSWorkId _createdWorkId = createdWorkId)
    {
        createdWorkId = _createdWorkId;

        return createdWorkId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWHSModule</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSModule parmWHSModule(WHSModule _whsModule = whsModule)
    {
        whsModule = _whsModule;

        return whsModule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUOMPack</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSUOM parmUOMPack(WHSUOM _uomPack = uomPack)
    {
        uomPack = _uomPack;

        return uomPack;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createUOMStructure</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSUOMStructure createUOMStructure()
    {
        WHSUOMStructure uomStructure;

        ttsbegin;

        uomStructure.LicensePlateId = licensePlateId;
        uomStructure.ItemId         = workLine.ItemId;
        uomStructure.ShipmentId     = workLine.ShipmentId;
        uomStructure.LoadId         = workLine.LoadId;
        uomStructure.Qty            = workLine.InventQtyWork;
        uomStructure.UOMItem        = WHSCatchWeightHelper::inventHandlingUnitId(workLine.ItemId);
        uomStructure.Module         = whsModule;
        uomStructure.UOMPack        = uomPack;
        uomStructure.HasPacks       = NoYes::No;
        uomStructure.insert();

        WHSUOMStructureIssue uomStructureIssue;
        uomStructureIssue.UOMStructure = uomStructure.RecId;
        uomStructureIssue.CreatedWorkId = createdWorkId;
        uomStructureIssue.insert();

        ttscommit;

        return uomStructure;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>