<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetReport_OC4_Trans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class rAssetReport_OC4_Trans extends RAssetReport_OC4_Base
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cntScrapRowIntoReport</Name>
				<Source><![CDATA[
    protected Integer cntScrapRowIntoReport()
    {
        const int cntScrapRowIntoReport = 2;

        return cntScrapRowIntoReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>comment</Name>
				<Source><![CDATA[
    protected str comment()
    {
        return "@GLS116454";
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    protected Dialog dialog()
    {
        Dialog dlg = super();

        this.documentDate(rAssetTrans.AttachDocumentDate ? rAssetTrans.AttachDocumentDate : this.transDate());
        this.documentNumber(rAssetTrans.AttachDocumentNumber);

        return dlg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssetName</Name>
				<Source><![CDATA[
    protected TempStr getAssetName()
    {
        return rAssetTable.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDocumentValue</Name>
				<Source><![CDATA[
    public void initDocumentValue(RAssetDocument _document)
    {
        super(_document);

        _document.StandardId = rAssetTrans.AssetStandardId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initStructScrapBlokCoordinate</Name>
				<Source><![CDATA[
    protected Struct initStructScrapBlokCoordinate()
    {
        Struct struct = super();

        struct.value(RowNumber, 31);
        struct.value(ScrapDocNumber, 'AK');
        struct.value(ScrapItemName, 'AR');
        struct.value(ScrapItemID, 'BA');
        struct.value(Unit, 'BH');
        struct.value(ScrapQty, 'BN');
        struct.value(ScrapCostPrice, 'BT');
        struct.value(ScrapCostAmount, 'CA');
        struct.value(AccountNumDeb, 'CH');
        struct.value(AccountNumCred, 'CO');

        return struct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(Args _args)
    {
        if (_args.dataset() != tablenum(RAssetTrans))
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        rAssetTrans = _args.record();
        rAssetTable = RAssetTable::find(rAssetTrans.AccountNum);
        rAssetStandards = RAssetStandards::find(rAssetTrans.AccountNum, rAssetTrans.AssetStandardId);

        super(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>outputUnPostingInvent</Name>
				<Source><![CDATA[
    protected boolean outputUnPostingInvent()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>printPage01</Name>
				<Source><![CDATA[
    protected void printPage01()
    {
        super();

        Months months = rAssetStandards.lifeTimePass(this.transDate() - 1);
        this.insertValueIntoDoc(ConstObservedLife, this.dateIntervalAsStr(months));
    }

]]></Source>
			</Method>
			<Method>
				<Name>printPage02</Name>
				<Source><![CDATA[
    protected void printPage02()
    {
        super();

        this.outScrapBlok();
        this.outSection_2();
    }

]]></Source>
			</Method>
			<Method>
				<Name>relatedRecord</Name>
				<Source><![CDATA[
    public Common relatedRecord()
    {
        return rAssetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateName</Name>
				<Source><![CDATA[
    protected str templateName()
    {
        return resourceStr(RAsset_4);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    protected TransDate transDate()
    {
        return rAssetTrans.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDocuments</Name>
				<Source><![CDATA[
    protected void updateDocuments()
    {
        super();

        rAssetTrans = RAssetTrans::find(rAssetTrans.RecId, true);
        rAssetTrans.AttachDocumentDate = documentDate;
        rAssetTrans.AttachDocumentNumber = documentNumber;
        rAssetTrans.doUpdate();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>