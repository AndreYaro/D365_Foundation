<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepPreTaxDedCalc_Ordinary_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The calculator class of pre-tax deduction logic for ordinary depreciation.
/// </summary>
[AssetDepTypeAttribute_JP(AssetDepType_JP::OrdinaryDepreciation)]
class AssetDepPreTaxDedCalc_Ordinary_JP extends AssetDepPreTaxDedCalculator_JP
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPostedAmountForValueModelYTD</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the posted amount for value model.
    /// </summary>
    /// <param name="_toPeriodDate">
    /// The to period date
    /// </param>
    /// <param name="_assetBook">
    /// The asset book instance
    /// </param>
    /// <returns>
    /// Returns the posted amount
    /// </returns>
    protected AssetAmount getPostedAmountForValueModelYTD(AssetTransDate _toPeriodDate, AssetBook _assetBook)
    {
        AssetAmount         ret;
        AssetTransDate      firstDayOfYear = assetTableInterval.findFirstDayOfYear(_toPeriodDate);
        AssetDepBookMap_JP  assetDepBookMap = AssetDepBookMap_JP::findByAssetIdBookId(assetBookTax.AssetId, _assetBook.BookId);

        // Base ordinary depreciation trans
        ret = AssetDepTransMap_JP::calcAccumulatedDepAmountMst(assetDepBookMap, firstDayOfYear, _toPeriodDate);

        // The posted accelerated amount is also considered as a part of ordinary depreciation amount.
        ret += -1 * AssetDepTransMap_JP::calcAmountMstPerDateTransTypeDocType(
            _assetBook,
            firstDayOfYear,
            _toPeriodDate,
            AssetTransType::ExtraordinaryDepreciation,
            AssetDocumentType_JP::AssetAcceleratedDepreciation);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReserveAllocationAmountYTD</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the posted allocation amount for reserve.
    /// </summary>
    /// <param name="_toDate">
    /// The to date
    /// </param>
    /// <param name="_layer">
    /// The layer
    /// </param>
    /// <returns>
    /// Returns the amount based on to date and layer
    /// </returns>
    public AssetAmount getReserveAllocationAmountYTD(AssetTransDate _toDate, CurrentOperationsTax _layer)
    {
        AssetAmount     ret;
        AssetBook       assetBookLoc    = this.getAssetBookForLayer(_layer);

        ret = AssetTrans::amountMSTPerDateTransTypes(
            assetBookLoc.AssetId,
            assetBookLoc.BookId,
            [AssetTransType::ReductionEntryReserveAllocation_JP],
            assetTableInterval.findFirstDayOfYear(_toDate),
            _toDate);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>