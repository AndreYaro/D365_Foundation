<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchInvoice4PaymJournalPrint_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchInvoice4PaymJournalPrint_RU</c> class handles the printing of the Purchase order invoices for payment.
/// </summary>
class PurchInvoice4PaymJournalPrint_RU
extends FormletterJournalPrint
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doPrint</Name>
				<Source><![CDATA[
        protected void doPrint()
    {
        PurchInvoice4PaymJournalPrint_RU::printFormLetter(this, journalList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJournalList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a record sorted list.
    /// </summary>
    /// <returns>
    /// A new record sorted list.
    /// </returns>
    /// <remarks>
    /// The record sorted list is used by reports, where the report prints the invoice for payment posted purchase orders that are in the record sorted list.
    /// </remarks>
    public RecordSortedList  newJournalList()
    {
        RecordSortedList jourList = new RecordSortedList(tablenum(VendInvoice4PaymJour_RU));
        jourList.sortOrderFromContainer(this.formLetterSorting(tablenum(VendInvoice4PaymJour_RU),
                                                               fieldnum(VendInvoice4PaymJour_RU, RecId)));

        return jourList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PurchInvoice4PaymJournalPrint_RU construct()
    {
        return new PurchInvoice4PaymJournalPrint_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>printFormLetter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs printout of invoice for payment
    /// </summary>
    /// <param name="_print">
    /// Caller <c>PurchInvoice4PaymJournalPrint_RU</c> object
    /// </param>
    /// <param name="_journalList">
    /// <c>List</c> of journals to be printed
    /// </param>
    public static void printFormLetter(
        PurchInvoice4PaymJournalPrint_RU _print       = null,
        RecordSortedList                 _journalList = null)
    {
        Args         args = new Args();
        MenuFunction invoice4PaymMenu = new MenuFunction(menuitemoutputstr(PurchInvoice4Paym_RU), MenuItemType::Output);

        if (_print)
        {
            args.caller(_print);
        }
        if (_journalList)
        {
            args.object(_journalList);
        }
        args.record(new DictTable(tablenum(VendInvoice4PaymJour_RU)).makeRecord());

        invoice4PaymMenu.run(args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>