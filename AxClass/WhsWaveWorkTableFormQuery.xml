<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWaveWorkTableFormQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WhsWaveWorkTableFormQuery</c> class handles logic for the work form query that is specific for the wave table.
/// </summary>
[SysTableNameFactoryAttribute(tableStr(WHSWaveTable))]
public class WhsWaveWorkTableFormQuery extends WhsWorkTableFormQuery
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmWHSWaveTable</Name>
				<Source><![CDATA[
	/// <summary>
    /// Gets the <c>WHSWaveTable</c> record.
    /// </summary>
    /// <returns>A <c>WHSWaveTable</c> record.</returns>
    protected WHSWaveTable parmWHSWaveTable()
    {
        return record as WHSWaveTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWorkTableFormQuery</Name>
				<Source><![CDATA[
    public void updateWorkTableFormQuery(Query _workTableFormQuery)
    {
        QueryBuildDataSource qbdsWHSWorkTable = _workTableFormQuery.dataSourceTable(tableNum(WHSWorkTable));

        qbdsWHSWorkTable.addRange(fieldNum(WHSWorkTable, WaveId)).value(this.getWaveIdsFromSelectedWaves());

        /*
            The dynalinks are cleared so that the query is not filtered by the last selected wave record.
            This allows the query to select works from multiple waves.
        */
        qbdsWHSWorkTable.clearDynalinks();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWaveIdsFromSelectedWaves</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the comma separated string of wave ids from the selected waves.
    /// </summary>
    /// <returns>Comma separated string of wave ids.</returns>
    private str getWaveIdsFromSelectedWaves()
    {
        str waveIds;

        WHSWaveTable	waveTable	= this.parmWHSWaveTable();
        FormDataSource	dataSource	= FormDataUtil::getFormDataSource(waveTable) as FormDataSource;

        if (dataSource)
        {
            for (WHSWaveTable currentRecord = dataSource.getFirst(true) ? dataSource.getFirst(true) : dataSource.cursor(); currentRecord; currentRecord = dataSource.getNext())
            {
                waveIds = queryRangeConcat(waveIds, currentRecord.WaveId);
            }
        }
        else
        {
            waveIds = waveTable.WaveId;
        }

        return waveIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>