<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionsSetTransactionStatusContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class contains the values needed when updating <c>CustDispute</c> table
/// </summary>
class CustCollectionsSetTransactionStatusContext
{
    ReasonCode reasonCode;

    ReasonComment reasonComment;

    CustVendDisputeStatus status;

    AmountCur amountCur;

    TransDate followUpDate;

    smmActivityUserMemo note;

    boolean useUserMemo, createTask, recordAction;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>contruct</Name>
				<Source><![CDATA[
    public static CustCollectionsSetTransactionStatusContext contruct()
    {
        return new CustCollectionsSetTransactionStatusContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ReasonCode</c> parameter.
    /// </summary>
    /// <param name="_reasonCode">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>ReasonCode</c> parameter.
    /// </returns>
    public ReasonCode parmReasonCode(ReasonCode _reasonCode = reasonCode)
    {
        reasonCode = _reasonCode;
        return reasonCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonComment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ReasonComment</c> parameter.
    /// </summary>
    /// <param name="_reasonComment">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>ReasonComment</c> parameter.
    /// </returns>
    public ReasonCode parmReasonComment(ReasonComment _reasonComment = reasonComment)
    {
        reasonComment = _reasonComment;
        return reasonComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Status</c> parameter.
    /// </summary>
    /// <param name="_status">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>Status</c> parameter.
    /// </returns>
    public CustVendDisputeStatus parmStatus(CustVendDisputeStatus _status = status)
    {
        status = _status;
        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the amount on the dispute record
    /// </summary>
    /// <param name = "_amountCur">The amount to be saved on the dispute record</param>
    /// <returns>The amount on dispute record</returns>
    public AmountCur parmAmountCur(AmountCur _amountCur = amountCur)
    {
        amountCur = _amountCur;
        return amountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFollowUpDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the follow up date on the dispute record
    /// </summary>
    /// <param name = "_followUpDate">The follow up date on the dispute record</param>
    /// <returns>The follow up date</returns>
    public TransDate parmFollowUpDate(TransDate _followUpDate = followUpDate)
    {
        followUpDate = _followUpDate;
        return followUpDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUseUserMemo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets and gets the use user memo field which determins if the default note or the users note is used
    /// </summary>
    /// <param name = "_useUserMemo">The value of useusermemo</param>
    /// <returns>True if use the users inputed memo; false to use default memo</returns>
    public boolean parmUseUserMemo(boolean _useUserMemo = useUserMemo)
    {
        useUserMemo = _useUserMemo;
        return useUserMemo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNote</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets and gets the user note for the dispute status
    /// </summary>
    /// <param name = "_note">The note to save on the disputestatus</param>
    /// <returns>The note saved on the dispute record</returns>
    public smmActivityUserMemo parmNote(smmActivityUserMemo _note = note)
    {
        note = _note;
        return note;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreateTask</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a task will be created
    /// </summary>
    /// <param name = "_createTask">True to create task</param>
    /// <returns>If a task is to be created</returns>
    public boolean parmCreateTask(boolean _createTask = createTask)
    {
        createTask = _createTask;
        return createTask;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecordAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if an action will be recorded
    /// </summary>
    /// <param name = "_recordAction">True if an action will be recorded</param>
    /// <returns>If an aciton is to be recorded</returns>
    public boolean parmRecordAction(boolean _recordAction = recordAction)
    {
        recordAction = _recordAction;
        return recordAction;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>