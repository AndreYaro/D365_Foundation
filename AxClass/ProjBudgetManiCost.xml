<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetManiCost</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjBudgetManiCost extends ProjBudgetMani
{
    #define.CurrentVersion(8)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCategoryIdField</Name>
				<Source><![CDATA[
        public void addCategoryIdField(Dialog _dialog)
    {
        _newCategoryId  = _dialog.addFieldValue(extendedTypeStr(ProjCategoryCostId), newCategoryId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    ///    interface.
    /// </summary>
    /// <returns>
    ///    A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    ///    in the Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        Args    args = new Args(formStr(ProjForecastManiCost));

        args.caller(this);
        dialog = classfactory.formRunClass(args);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        return [#CurrentVersion, #CurrentList] + [super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>search</Name>
				<Source><![CDATA[
        public Query search()
    {
        Query query = new Query(queryStr(ProjBudgetManiCost));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container packedClass)
    {
        container       base;
        boolean         ret;
        Integer         version     = conPeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList, base] = packedClass;
                ret = super(base);
                break;

            default:
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
        boolean validate(Object _calledFrom = null)
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (changeCategoryId && newCategoryId)
            {
                if (ProjCategory::find(newCategoryId).CategoryType != ProjCategoryType::Cost)
                {
                    return checkFailed(strFmt("@SYS56468",ProjTransType::Cost));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        protected static ClassDescription description()
    {
        return "@SYS342499";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>