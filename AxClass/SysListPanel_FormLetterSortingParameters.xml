<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysListPanel_FormLetterSortingParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SysListPanel_FormLetterSortingParameters extends SysListPanel
{
    SysListPanel_FormLetterSortingParameters panel;
    TableId tableId;
    TableId subTableId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newForm</Name>
				<Source><![CDATA[
    static SysListPanel newForm(FormRun                     formRun,
                                    int                     parentId,
                                    str                     notSelectedLabel,
                                    str                     selectedLabel,
                                    TableId                 tableId,
                                    TableId                 subTableId = 0)
    {
        SysListPanel_FormLetterSortingParameters sysListPanel = new SysListPanel_FormLetterSortingParameters();

        sysListPanel.parmTableId(tableId);
        sysListPanel.parmFormRun(formRun);
        sysListPanel.parmParentId(parentId);
        syslistPanel.parmHasUpDownButton(true);
        sysListPanel.parmCaptionAvailable(notSelectedLabel);
        sysListPanel.parmCaptionSelected(selectedLabel);
        sysListPanel.parmSubTableId(subTableId);

        sysListPanel.build();
        return sysListPanel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTableId</Name>
				<Source><![CDATA[
    private TableId parmTableId(TableId _tableId = tableId)
    {
        tableId = _tableId;
        return tableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubTableId</Name>
				<Source><![CDATA[
    private TableId parmSubTableId(TableId _subTableId = subTableId)
    {
        subTableId = _subTableId;
        return subTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addData</Name>
				<Source><![CDATA[
    void addData(container data)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    container getData()
    {
        container availableData = this.fillNotSelected();
        container selectedData = this.fillSelected();

        return [availableData, selectedData];
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillNotSelected</Name>
				<Source><![CDATA[
    private container fillNotSelected()
    {
        return this.fillData(FormLetterSortingParameters::packedNotSelectedFieldIdList(this.parmTableId(), this.parmSubTableId()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillData</Name>
				<Source><![CDATA[
    private container fillData(container packedList)
    {
        List            fieldIdList;
        ListEnumerator  enumerator;
        fieldId         fieldId;
        container       results;

        if (packedList)
        {
            fieldIdList = List::create(packedList);
            enumerator = fieldIdList.getEnumerator();

            while (enumerator.moveNext())
            {
                fieldId = enumerator.current();
                results += [[int2str(fieldId), FormLetterSortingParameters::fieldName(this.parmTableId(), fieldId)]];
            }
        }
        return results;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillSelected</Name>
				<Source><![CDATA[
    private container fillSelected()
    {
        return this.fillData(FormLetterSortingParameters::packedSelectedFieldIdList(this.parmTableId(), this.parmSubTableId()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>finalize</Name>
				<Source><![CDATA[
    public void finalize()
    {
        super();

        this.writeFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeFields</Name>
				<Source><![CDATA[
    public void writeFields()
    {
        List    selectedFieldIdList = new List(Types::Integer);
        int     idx;

        idx = this.parmViewSelected().getNextItem(FormListNext::All);

        while (idx != -1)
        {
            selectedFieldIdList.addEnd(str2int(this.parmViewSelected().getItem(idx).data()));
            idx = this.parmViewSelected().getNextItem(FormListNext::All, idx);
        }

        FormLetterSortingParameters::writeFromPackedList(this.parmTableId(), selectedFieldIdList.pack(), this.parmSubTableId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeData</Name>
				<Source><![CDATA[
    void removeData(container data)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>