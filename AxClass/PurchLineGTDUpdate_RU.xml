<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchLineGTDUpdate_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
#ISOCountryRegionCodes
/// <summary>
/// The <c>PurchLineGTDUpdate_RU</c> class updates GTD in Purchase order.
/// </summary>
internal final class PurchLineGTDUpdate_RU extends RunBase
{
    private InventGTDId_RU inventGTDId;
    private DialogField    fieldInventGTDId;  
 
    private PurchLineRefRecId purchLineRefRecId;
    private ItemId itemId;
    private InventGTDId_RU previousinventGTDIdValue;

    private const int retryNum = 5;

    private const container allowedDocumentState = [VersioningDocumentState::InReview, VersioningDocumentState::Approved, VersioningDocumentState::Confirmed];
    private const container allowedPurchStatus = [PurchStatus::Backorder, PurchStatus::Received];

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventGTDId</Name>
				<Source><![CDATA[
    internal void setInventGTDId(InventGTDId_RU _inventGTDId)
    {
        inventGTDId = _inventGTDId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLine</Name>
				<Source><![CDATA[
    internal boolean checkLine(boolean showMessage = true)
    {
        boolean ret = true;
        PurchLine purchLine = PurchLine::findRecId(purchLineRefRecId);
        
        if (!purchLine)
        {
            ret = showMessage 
                    ? checkFailed(strfmt("@SYS113080", purchLineRefRecId, tableStr(PurchLine)))
                    : false;
        }

        if (ret && !(conFind(allowedPurchStatus, purchLine.PurchStatus)))
        {
            ret = showMessage
                    ? checkFailed("@ApplicationSuite_Localization:PurchLineUpdateGTDOnlyOpenLine")
                    : false;
        }

        PurchTable purchTable = purchLine.purchTable();

        if (! (purchTable.ChangeRequestRequired || VersioningPurchaseOrder::checkCanChangeBeRequested(purchTable))
            || !conFind(allowedDocumentState, purchTable.DocumentState) )
        {
            ret = showMessage
                    ? checkFailed(strFmt("@ApplicationSuite_Localization:PurchLineUpdateGTDOnlyListedApprovalStatusCanBeProcessed", this.enumCon2Str(allowedDocumentState)))
                    : false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enumCon2Str</Name>
				<Source><![CDATA[
    private str enumCon2Str(container _con)
    {
        str ret;
        for (Integer i = 1;  i <= conLen(_con);   i++)
        {
            ret = ret 
                    + (ret ? ', ' : '') 
                    + enum2str(conPeek(_con, i));
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase dialog;

        dialog = super();

        dialog.addFieldValue(extendedTypeStr(InventGTDId_RU), previousinventGTDIdValue, "@ApplicationSuite_Localization:PurchLineUpdateGTDCurrentValue").enabled(false);

        fieldInventGTDId = dialog.addField(extendedTypeStr(InventGTDId_RU));
        
        fieldInventGTDId.registerOverrideMethod(
            methodStr(FormStringControl, lookup),
            methodStr(PurchLineGTDUpdate_RU, lookupItemGTDId),
            this);

        if (this.isTradeAgreementAllowed())
        {
            dialog.addText("@ApplicationSuite_Localization:PurchLineUpdateGTDPriceCannotBeUpdated");
        }

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTradeAgreementAllowed</Name>
				<Source><![CDATA[
    private boolean isTradeAgreementAllowed()
    {
        return InventDim::mustUseFieldPurchPriceDisc(fieldNum(InventDim, InventGtdId_RU), InventDimGroupSetup::newItemId(ItemId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>visible</Name>
				<Source><![CDATA[
    public static boolean visible(PurchLine _purchLine)
    {
        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enable</Name>
				<Source><![CDATA[
    public static boolean enable(PurchLine _purchLine)
    {
        return _purchLine
            && InventTable::find(_purchLine.ItemId).isItemGTDActivated()
            && PurchLineGTDUpdate_RU::constructFromPurchLine(_purchLine).checkLine(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupItemGTDId</Name>
				<Source><![CDATA[
    private void lookupItemGTDId(FormControl _lookupCtrl)
    {
        Query query = new Query();
        QueryBuildDataSource iventGTDQBDS = query.addDataSource(tableNum(InventGTD_RU));
        findOrCreateRange_W(
            iventGTDQBDS,
            fieldNum(InventGTD_RU, ItemId),
            queryValue(itemId));

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(InventGTD_RU), _lookupCtrl);
        sysTableLookup.addLookupfield(fieldNum(InventGTD_RU, InventGTDId));
        sysTableLookup.addLookupfield(fieldNum(InventGTD_RU, ItemOrigCountryRegionId));
        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            inventGTDId = fieldInventGTDId.value();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        try
        {
            ttsbegin;

            PurchLine purchLine = PurchLine::findRecId(purchLineRefRecId, true);

            InventDim inventDim = purchLine.inventDim();
            inventDim.InventGtdId_RU = inventGTDId;
            purchLine.InventDimId = InventDim::findOrCreate(inventDim).inventDimId;
            using (var context = PurchLineGTDUpdateBypassChangeManagementValidationContext::instance())
            {
                purchLine.update();
            }

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= retryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null)
    {
        boolean ret;

        ret = super(calledFrom);

        if (ret && previousinventGTDIdValue == InventGtdId)
        {
            ret = checkFailed("@ApplicationSuite_Localization:PurchLineUpdateGTDNewGTDIsTheSameAsPevious");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes a new instance of <c>PurchLineGTDUpdate_RU</c> from the cursor of the <c>PurhLine</c> table.
    /// </summary>
    /// <param name = "_purchLine">The cursor of the <c>PurhLine</c> table</param>
    /// <returns>Initialized instance of the <c>PurchLineGTDUpdate_RU</c> object.</returns>
    public static PurchLineGTDUpdate_RU constructFromPurchLine(PurchLine _purchLine)
    {
        PurchLineGTDUpdate_RU purchLineGTDUpdate_RU = new PurchLineGTDUpdate_RU();

        purchLineGTDUpdate_RU.initFromPurchLine(_purchLine);

        return purchLineGTDUpdate_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    private void initFromPurchLine(PurchLine _purchLine)
    {
        this.purchLineRefRecId = _purchLine.RecId;
        this.itemId = _purchLine.ItemId;
        this.previousinventGTDIdValue = _purchLine.inventDim().InventGtdId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    client server static Description description()
    {
        return "@ApplicationSuite_Localization:PurchLineUpdateGTD";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args _args)
    {
        if (! _args || _args.dataset() != tablenum(PurchLine)) 
        {
            throw error(strfmt("@SYS25516", PurchLineGTDUpdate_RU::description()));
        }

        if (! _args.record() || ! FormDataUtil::isFormDataSource(_args.record()))
        {
            throw error("@SYS82774");
        }

        PurchLineGTDUpdate_RU purchLineGTDUpdate_RU = PurchLineGTDUpdate_RU::constructFromPurchLine(_args.record());

        if (purchLineGTDUpdate_RU.checkLine() && 
            purchLineGTDUpdate_RU.prompt())
        {
            purchLineGTDUpdate_RU.runOperation();
        }

        FormDataSource formDataSource = FormDataUtil::getFormDataSource(_args.record());
        if (formDataSource) 
        {
            formDataSource.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>