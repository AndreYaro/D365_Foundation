<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsJournalTableData</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysTableNameFactory(tableStr(WMSJournalTable))]
class WmsJournalTableData extends JournalTableData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromJournalName</Name>
				<Source><![CDATA[
    public void initFromJournalName(JournalNameMap _journalName)
    {
        WMSJournalTable     wmsJournalTable = this.journalTable();
        WMSJournalName      wmsJournalName  = _journalName;

        super(_journalName);

        wmsJournalTable.PalletTransports        = wmsJournalName.PalletTransports;
        wmsJournalTable.CheckPickingLocation    = wmsJournalName.CheckPickingLocation;
        wmsJournalTable.CheckBufferLocation     = wmsJournalName.CheckBufferLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalVoucherNum</Name>
				<Source><![CDATA[
    public JournalVoucherNum journalVoucherNum(JournalVoucherNum _journalVoucherNum = journalVoucherNum)
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWritePre</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates data before submission.
    /// </summary>
    /// <param name="_ret">
    ///    The return value of the <c>WMSJournalTable.validateWrite</c> method; optional.
    /// </param>
    /// <returns>
    ///    true if all validation conditions are met; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    This method is called from the <c>WMSJournalTable.validateWrite</c> method.
    /// </remarks>
    public boolean validateWritePre(boolean _ret = true)
    {
        boolean         ret = super(_ret);
        PurchTable      purchTable;
        SalesTable      salesTable;
        WMSJournalTable wmsJournalTable = this.journalTable();
        InventDim       inventDim = wmsJournalTable.inventDim();

        if (!ret)
        {
            return false;
        }

        if (inventDim.wmsLocationId && !wmsJournalTable.wmsLocation())
        {
            return checkFailed(strFmt("@SYS53781", inventDim.wmsLocationId, inventDim.InventLocationId));
        }

        if (wmsJournalTable.VendAccount)
        {
            switch (wmsJournalTable.InventTransType)
            {
                case InventTransType::Purch :
                    if (!VendTable::exist(wmsJournalTable.VendAccount))
                    {
                        //Vendor %1 does not exist.
                        return checkFailed(strFmt("@SYS11817", wmsJournalTable.VendAccount));
                    }
                    if (wmsJournalTable.InventTransRefId)
                    {
                        purchTable = PurchTable::find(wmsJournalTable.InventTransRefId);
                        if (!purchTable)
                        {
                            //Purchase %1 does not exist.
                            return checkFailed(strFmt("@SYS15741", wmsJournalTable.InventTransRefId));
                        }
                        if (purchTable.OrderAccount != wmsJournalTable.VendAccount)
                        {
                            //Purchase %1 was not placed with vendor %2.
                            return checkFailed(strFmt("@SYS51073", wmsJournalTable.InventTransRefId, wmsJournalTable.VendAccount));
                        }
                    }
                    break;

                case InventTransType::ConsignmentReplenishmentOrder :
                    if (!VendTable::exist(wmsJournalTable.VendAccount))
                    {
                        return checkFailed(strFmt("@SYS11817", wmsJournalTable.VendAccount));
                    }

                    if (wmsJournalTable.InventTransRefId)
                    {
                        var consignmentReplenishmentOrderHeader = ConsignmentReplenishmentOrderHeader::find(wmsJournalTable.InventTransRefId);
                        if (!consignmentReplenishmentOrderHeader)
                        {
                            return checkFailed(strFmt("@Consignment:MessageValidation_ConsignmentReplenishmentOrderNotExists", wmsJournalTable.InventTransRefId));
                        }

                        if (consignmentReplenishmentOrderHeader.OrderVendorAccountNumber != wmsJournalTable.VendAccount)
                        {
                            return checkFailed(strFmt("@Consignment:MessageValidation_VendorMatchesConsignmentReplenishmentOrder", wmsJournalTable.InventTransRefId, wmsJournalTable.VendAccount));
                        }
                    }

                    break;

                case InventTransType::Sales :
                    if (!CustTable::exist(wmsJournalTable.VendAccount))
                    {
                        //Customer %1 does not exist.
                        return checkFailed(strFmt("@SYS4730", wmsJournalTable.VendAccount));
                    }
                    if (wmsJournalTable.InventTransRefId)
                    {
                        salesTable = SalesTable::find(wmsJournalTable.InventTransRefId);
                        if (!salesTable)
                        {
                            //Sales %1 does not exist.
                            return checkFailed(strFmt("@SYS115105", wmsJournalTable.InventTransRefId));
                        }
                        if (salesTable.CustAccount != wmsJournalTable.VendAccount)
                        {
                            //Sales %1 was not placed with customer %2.
                            return checkFailed(strFmt("@SYS115107", wmsJournalTable.InventTransRefId, wmsJournalTable.VendAccount));
                        }
                    }
                    break;

                default :
                    // Reference must be either Sales order or Purch order if Account number is specified.
                    return checkFailed("@SYS115358");
            }
        }

        if (wmsJournalTable.ReturnItemNum)
        {
            if (!SalesTable::findReturnItemNum(wmsJournalTable.ReturnItemNum).RecId)
            {
                //Return order %1 doesn't exists
                return checkFailed(strFmt("@SYS115108", wmsJournalTable.ReturnItemNum));
            }
        }

        if (wmsJournalTable.InventTransType != InventTransType::Sales)
        {
            wmsJournalTable.ReturnItemNum = '';
        }

        //dont allow the quarantine management flag to be set if the transtype does not support quarantine management.
        if (wmsJournalTable.CreateQuarantineOrder && !InventTrans::canTransTypeDoQuarantineMgmt(wmsJournalTable.InventTransType))
        {
            ret = checkFailed(strFmt("@SYS70689",fieldPName(WMSJournalTable,CreateQuarantineOrder)));
        }

        ret = ret & this.validateInventTransType(inventDim, wmsJournalTable);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInventTransType</Name>
				<Source><![CDATA[
    private boolean validateInventTransType(inventDim _inventDim, WMSJournalTable _wmsJournalTable)
    {
        boolean ret = true;
        if (_wmsJournalTable.InventTransRefId && _wmsJournalTable.InventTransType == InventTransType::TransferOrderReceive)
        {
            InventTransferTable inventTransferTable = InventTransferTable::find(_wmsJournalTable.InventTransRefId);

            if (_inventDim.InventLocationId
                && inventTransferTable.InventLocationIdTo != _inventDim.InventLocationId)
            {
                ret = checkFailed(strFmt("@SYS54084",inventTransferTable.InventLocationIdTo));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>