<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsPostPackingSlipInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WhsPostPackingSlipInstrumentationActivities</c> class provides activities for post packing slip instrumentation logging.
/// </summary>
internal final class WhsPostPackingSlipInstrumentationActivities
{
    private const str ActivityNamePrefix            = 'PostPackingSlip.';
    private const str CustomPropertyLoadsCount      = 'LoadsCount';
    private const str CustomPropertyLoadLinesCount  = 'LoadLinesCount';
    private const str CustomPropertyLoadSize        = 'SizeOfLoad';
    private const str CustomPropertyLoadRecId       = 'LoadRecId';

    private WHSInstrumentationLogger logger;

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WhsPostPackingSlipInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WhsPostPackingSlipInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext run()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'run'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpackPackSlipLoadLines</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext unpackPackSlipLoadLines(RecIdCount _loadLinesCount)
    {
        var activity = logger.activity(ActivityNamePrefix + 'unpackPackSlipLoadLines');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(CustomPropertyLoadLinesCount, any2Str(_loadLinesCount));
                
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLoadVendorPackingSlipJour</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext createLoadVendorPackingSlipJour(RecId _loadRecId)
    {
        var activity = logger.activity(ActivityNamePrefix + 'createLoadVendorPackingSlipJour');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(CustomPropertyLoadRecId, any2Str(_loadRecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateShipmentStatusByLoadId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext updateShipmentStatusByLoadId(RecId _loadRecId)
    {
        var activity = logger.activity(ActivityNamePrefix + 'updateShipmentStatusByLoadId');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(CustomPropertyLoadRecId, any2Str(_loadRecId));
        
        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postPackingSlipAndUpdateLoadAndShipment</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext postPackingSlipAndUpdateLoadAndShipment(RecIdCount _loadLinesCount)
    {
        var activity = logger.activity(ActivityNamePrefix + 'postPackingSlipAndUpdateLoadAndShipment');
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(CustomPropertyLoadLinesCount, any2Str(_loadLinesCount));
        activityContext.addCustomProperty(CustomPropertyLoadSize, _loadLinesCount < 15 ? "Small" : "Large" );

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preparePackingSlipPosting</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext preparePackingSlipPosting()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'preparePackingSlipPosting'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void loadRecId(SysInstrumentationActivityContext _activityContext, RecId _loadRecId)
    {
        _activityContext.addCustomProperty(CustomPropertyLoadRecId, any2Str(_loadRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postedLoadsCount</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void postedLoadsCount(SysInstrumentationActivityContext _activityContext, int _loadCount)
    {
        _activityContext.addCustomProperty(CustomPropertyLoadsCount, any2Str(_loadCount));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>