<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryTransactionContainerCloseController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventoryTransactionContainerCloseController</c> class controls the interaction of the warehouse container closing
/// with the warehouse inventory transaction stack.
/// </summary>
internal final class WHSInventoryTransactionContainerCloseController extends WHSInventoryTransactionContainerController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInventoryTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates inventory transactions for all items in the closing container.
    /// </summary>
    /// <param name = "_containerTable">Container to close.</param>
    /// <param name = "_itemSetsMap">Information about item sets within container.</param>
    /// <param name = "_putLocation">Destination location of a container and items within.</param>
    /// <param name = "_licensePlateIdTo">Destination license plate.</param>
    [Hookable(false)]
    internal void createInventoryTransactions(
        WHSContainerTable           _containerTable,
        WHSInventoryItemSetsMap     _itemSetsMap,
        WMSLocation                 _putLocation,
        WHSLicensePlateId           _licensePlateIdTo)
    {
        MapEnumerator itemSetsCreatorEnumerator = _itemSetsMap.getEnumerator();
        while (itemSetsCreatorEnumerator.moveNext())
        {
            WHSInventoryItemSetsPair    currentItemSetPair      = itemSetsCreatorEnumerator.currentValue();
            WHSLicensePlateId           sourceLicensePlateId    = itemSetsCreatorEnumerator.currentKey();

            guid inventoryTransactionOriginId = this.linkContainerInventTransWithInventoryTransaction(currentItemSetPair);

            this.createInventoryTransactionsForSourceLicensePlate(
                inventoryTransactionOriginId,
                _containerTable,
                _putLocation,
                sourceLicensePlateId,
                _licensePlateIdTo,
                currentItemSetPair);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemSetsKey</Name>
				<Source><![CDATA[
    protected WHSLicensePlateId getItemSetsKey(WHSContainerTrans _containerTrans)
    {
        return InventDim::find(_containerTrans.InventDimIdFrom).LicensePlateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInventoryTransactionsForSourceLicensePlate</Name>
				<Source><![CDATA[
    private void createInventoryTransactionsForSourceLicensePlate(
        guid                        _inventoryTransactionOriginId,
        WHSContainerTable           _containerTable,
        WMSLocation                 _putLocation,
        WHSLicensePlateId           _licensePlateIdFrom,
        WHSLicensePlateId           _licensePlateIdTo,
        WHSInventoryItemSetsPair    _itemSets)
    {
        WHSInventoryStorageDimensions storageDimFrom = this.getStorageDimFrom(_containerTable, _licensePlateIdFrom);
        WHSInventoryStorageDimensions storageDimTo   = this.getStorageDimTo(storageDimFrom, _putLocation, _licensePlateIdTo);

        this.createAndExecuteWorkInventoryTransactions(_inventoryTransactionOriginId, _containerTable, _itemSets, storageDimFrom, storageDimTo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStorageDimTo</Name>
				<Source><![CDATA[
    private WHSInventoryStorageDimensions getStorageDimTo(WHSInventoryStorageDimensions _storageDim, WMSLocation _putLocation, WHSLicensePlateId _licensePlateIdTo)
    {
        WHSInventoryStorageDimensions storageDimTo = WHSInventoryStorageDimensions::newFromValues(
            _storageDim.parmInventSiteId(),
            _storageDim.parmInventLocationId(),
            _putLocation.wMSLocationId,
            _licensePlateIdTo);

        return storageDimTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSInventoryTransactionContainerCloseController construct()
    {
        return new WHSInventoryTransactionContainerCloseController();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>