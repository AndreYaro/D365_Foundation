<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalCalendarCreateYearEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FiscalCalendarCreateYearEventHandler</c> class implements event handlers for the <c>FiscalCalendarCreateYear</c> form.
/// </summary>
public class FiscalCalendarCreateYearEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>FiscalCalendarCreateYear_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handler for the closing event of the form.
    /// </summary>
    /// <param name="_sender">The formrun.</param>
    /// <param name="_e">The event args.</param>
    [FormEventHandler(formStr(FiscalCalendarCreateYear), FormEventType::Closing)]
    public static void FiscalCalendarCreateYear_OnClosing(xFormRun _sender, FormEventArgs _e)
    {
        // <GIN>
        if (AssetParameters::isDepreciationCompaniesActEnable_IN() && _sender.args().menuItemName() == menuitemdisplaystr(FiscalCalendarCreateCalendar))
        {
            FiscalCalendar_IN   fiscalCalendar_IN;
            FiscalCalendar      fiscalCalendar;

            FormComboBoxControl calendarType = _sender.design().controlName(formControlStr(FiscalCalendarCreateYear, CalendarType_IN));
            FormStringControl   calendarId   = _sender.design().controlName(formControlStr(FiscalCalendarCreateYear, CalendarId));
            FormStringControl   yearName     = _sender.design().controlName(formControlStr(FiscalCalendarCreateYear, YearName));

            fiscalCalendar = FiscalCalendar::findByCalendarId(calendarId.text());

            // Only when the fiscal calendar has been inserted.
            if (fiscalCalendar.RecId)
            {
                fiscalCalendar_IN = FiscalCalendar_IN::findByFiscalCalendar(fiscalCalendar.RecId);

                // Avoid duplicate insertion.
                if (!fiscalCalendar_IN.RecId)
                {
                    ttsbegin;
                    fiscalCalendar_IN.CalendarType      = calendarType.selection();
                    fiscalCalendar_IN.FiscalCalendar    = fiscalCalendar.RecId;
                    fiscalCalendar_IN.insert();
                    ttscommit;
                }
            }
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>FiscalCalendarCreateYear_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handler for <c>Init</c> method.
    /// </summary>
    /// <param name="_sender">The formrun.</param>
    /// <param name="_e">The event args.</param>
    [FormEventHandler(formStr(FiscalCalendarCreateYear), FormEventType::Initialized)]
    public static void FiscalCalendarCreateYear_OnInitialized(xFormRun _sender, FormEventArgs _e)
    {
        // <GIN>
        FormComboBoxControl calendarType    = _sender.design().controlName(formControlStr(FiscalCalendarCreateYear, CalendarType_IN));
        FiscalCalendar      fiscalCalendar  = _sender.args().record() as FiscalCalendar;

        if (AssetParameters::isDepreciationCompaniesActEnable_IN())
        {
            calendarType.visible(true);

            if (_sender.args().menuItemName() == menuitemdisplaystr(FiscalCalendarCreateCalendar))
            {
                calendarType.enabled(true);
            }
            else
            {
                calendarType.enabled(false);
                calendarType.selection(FiscalCalendar_IN::findByFiscalCalendar(fiscalCalendar.RecId).CalendarType);
            }
        }
        else
        {
            calendarType.visible(false);
        }
        // </GIN>
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>