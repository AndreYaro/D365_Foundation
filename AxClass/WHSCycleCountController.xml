<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCycleCountController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>WHSCycleCountController</c> class is the controller class for the
///    <c>WHSCycleCount</c> report.
/// </summary>
public class WHSCycleCountController extends SrsReportRunController implements BatchRetryable
{
    private static const str CurUserIdParameterName = 'CurrentUserId';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        SrsReportRdlDataContract rdlContract = this.parmReportContract().parmRdlContract();
        if (rdlContract.parameterExists(WHSCycleCountController::CurUserIdParameterName))
        {
            rdlContract.getParameter(WHSCycleCountController::CurUserIdParameterName).setValueTyped(curUserId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSCycleCountController controller = new WHSCycleCountController();

        controller.parmReportName(ssrsReportStr(WHSCycleCount, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>