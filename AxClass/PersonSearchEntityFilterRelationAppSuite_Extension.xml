<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PersonSearchEntityFilterRelationAppSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(PersonSearchEntityFilterRelation))]
public final class PersonSearchEntityFilterRelationAppSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createKnownData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create the known data for Application Suite.
    /// </summary>
    protected static void createKnownData()
    {
        next createKnownData();

        PersonSearchEntityFilterRelation entityFilterRelation;

        ttsbegin;

        // CustAccount EDT. Lookup: CustAccount.AccountNum.
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Customer;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(CustAccount);
        entityFilterRelation.FilterValueTable = tableNum(CustTable);
        entityFilterRelation.FilterValueField = fieldNum(CustTable, AccountNum);
        entityFilterRelation.insert();

        // CustInvoiceAccount EDT. Lookup: CustAccount.AccountNum.
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Customer;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(CustInvoiceAccount);
        entityFilterRelation.FilterValueTable = tableNum(CustTable);
        entityFilterRelation.FilterValueField = fieldNum(CustTable, AccountNum);
        entityFilterRelation.insert();

        // VendAccount EDT. Lookup: VendAccount.AccountNum
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Vendor;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(VendAccount);
        entityFilterRelation.FilterValueTable = tableNum(VendTable);
        entityFilterRelation.FilterValueField = fieldNum(VendTable, AccountNum);
        entityFilterRelation.insert();

        // VendInvoiceAccount EDT. Lookup: VendAccount.AccountNum
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Vendor;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(VendInvoiceAccount);
        entityFilterRelation.FilterValueTable = tableNum(VendTable);
        entityFilterRelation.FilterValueField = fieldNum(VendTable, AccountNum);
        entityFilterRelation.insert();

        // ItemPrimaryVendId EDT. Lookup: VendAccount.AccountNum
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Vendor;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(ItemPrimaryVendId);
        entityFilterRelation.FilterValueTable = tableNum(VendTable);
        entityFilterRelation.FilterValueField = fieldNum(VendTable, AccountNum);
        entityFilterRelation.insert();

        // SMMBusRelAccount EDT. Lookup: SMMBusRelTable.BusRelAccount
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Prospect;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(smmBusRelAccount);
        entityFilterRelation.FilterValueTable = tableNum(smmBusRelTable);
        entityFilterRelation.FilterValueField = fieldNum(smmBusRelTable, BusRelAccount);
        entityFilterRelation.insert();

        // TMSDriverLicense EDT. Lookup: TMSDriverLog.DriverLicense
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::DriverLog;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(TMSDriverLicense);
        entityFilterRelation.FilterValueTable = tableNum(TMSDriverLog);
        entityFilterRelation.FilterValueField = fieldNum(TMSDriverLog, DriverLicense);
        entityFilterRelation.insert();

        // TMSDriverName EDT. Lookup: TMSDriverLog.DriverName
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::DriverLog;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(TMSDriverName);
        entityFilterRelation.FilterValueTable = tableNum(TMSDriverLog);
        entityFilterRelation.FilterValueField = fieldNum(TMSDriverLog, DriverName);
        entityFilterRelation.insert();

        // Customer Payment Journal Lines entity field AccountDisplayValue. Lookup: CustTable.AccountNum
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Customer;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::EntityField;
        entityFilterRelation.SourceTable = tableNum(CustomerPaymentJournalLineEntity);
        entityFilterRelation.SourceField = fieldNum(CustomerPaymentJournalLineEntity, AccountDisplayValue);
        entityFilterRelation.FilterValueTable = tableNum(CustTable);
        entityFilterRelation.FilterValueField = fieldNum(CustTable, AccountNum);
        entityFilterRelation.insert();

        // TMSVendorCode EDT. Lookup: VendTable.AccountNum
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Vendor;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(TMSVendorCode);
        entityFilterRelation.FilterValueTable = tableNum(VendTable);
        entityFilterRelation.FilterValueField = fieldNum(VendTable, AccountNum);
        entityFilterRelation.insert();

        // TMSCustomerCode EDT. Lookup: CustTable.AccountNum
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Customer;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(TMSCustomerCode);
        entityFilterRelation.FilterValueTable = tableNum(CustTable);
        entityFilterRelation.FilterValueField = fieldNum(CustTable, AccountNum);
        entityFilterRelation.insert();

        // WrkCtrId EDT. Lookup: HcmWorker.PersonnelNumber
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Worker;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(WrkCtrId);
        entityFilterRelation.FilterValueTable = tableNum(HcmWorker);
        entityFilterRelation.FilterValueField = fieldNum(HcmWorker, PersonnelNumber);
        entityFilterRelation.insert();

        // VendProspectiveVendorRegistrationRequest.Email table field. Lookup: VendProspectiveVendorRegistrationRequest.Email
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::ProspectiveVendor;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::TableField;
        entityFilterRelation.SourceTable = tableNum(VendProspectiveVendorRegistrationRequest);
        entityFilterRelation.SourceField = fieldNum(VendProspectiveVendorRegistrationRequest, Email);
        entityFilterRelation.FilterValueTable = tableNum(VendProspectiveVendorRegistrationRequest);
        entityFilterRelation.FilterValueField = fieldNum(VendProspectiveVendorRegistrationRequest, Email);
        entityFilterRelation.insert();

        // Vendor collaboration user requests entity field UserEmail. Lookup: UserInfo.NetworkAlias
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::ProspectiveUser;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::EntityField;
        entityFilterRelation.SourceTable = tableNum(VendVendorCollaborationUserRequestEntity);
        entityFilterRelation.SourceField = fieldNum(VendVendorCollaborationUserRequestEntity, UserEmail);
        entityFilterRelation.FilterValueTable = tableNum(VendVendorPortalUserRequest);
        entityFilterRelation.FilterValueField = fieldNum(VendVendorPortalUserRequest, UserAlias);
        entityFilterRelation.insert();

        // PdsRebateTable.CustAccount table field. Lookup: CustTable.AccountNum
        // Despite the field name, this table field has an EDT of AccountNum, not CustAccount
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Customer;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::TableField;
        entityFilterRelation.SourceTable = tableNum(PdsRebateTable);
        entityFilterRelation.SourceField = fieldNum(PdsRebateTable, CustAccount);
        entityFilterRelation.FilterValueTable = tableNum(CustTable);
        entityFilterRelation.FilterValueField = fieldNum(CustTable, AccountNum);
        entityFilterRelation.insert();

        // TAMVendRebateRelation EDT. Lookup: VendTable.AccountNum
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Vendor;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(TAMVendRebateRelation);
        entityFilterRelation.FilterValueTable = tableNum(VendTable);
        entityFilterRelation.FilterValueField = fieldNum(VendTable, AccountNum);
        entityFilterRelation.insert();

        // MCRBrokerVendAccount EDT. Lookup: VendTable.AccountNum
        entityFilterRelation.clear();
        entityFilterRelation.Category = PersonSearchResultCategory::Vendor;
        entityFilterRelation.CategoryFieldType = PersonSearchFieldType::ExtendedDataType;
        entityFilterRelation.MetadataTypeId = extendedTypeNum(MCRBrokerVendAccount);
        entityFilterRelation.FilterValueTable = tableNum(VendTable);
        entityFilterRelation.FilterValueField = fieldNum(VendTable, AccountNum);
        entityFilterRelation.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PersonSearchEntityFilterRelation_Post_initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Merge the set of person search entity filter relations into a single filter group
    /// so that the relations will concatenate into a single or clause.
    /// </summary>
    /// <param name="args">The event args.</param>
    [PostHandlerFor(tableStr(PersonSearchEntityFilterRelation), tableStaticMethodStr(PersonSearchEntityFilterRelation, initialize))]
    public static void PersonSearchEntityFilterRelation_Post_initialize(XppPrePostArgs args)
    {
        const PersonSearchFilterGroup AppSuiteFilterGroup = 'AppSuiteFilters';
        PersonSearchEntityFilterRelation entityFilterRelation;

        update_recordset entityFilterRelation
            setting FilterGroup = AppSuiteFilterGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>