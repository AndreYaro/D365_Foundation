<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostManagementInstrumentationBatchAttributeReserveActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CostManagementInstrumentationBatchAttributeReserveActivities
{
    private const str ActivityNamePrefix = 'BatchAttributeReserve.';
    private const str GetReservationBatches = 'GetReservationBatches';
    private const str RefreshSelection = 'RefreshSelection';

    private CostManagementInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(CostManagementInstrumentationLogger _instrumentationLogger)
    {
        instrumentationLogger = _instrumentationLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static CostManagementInstrumentationBatchAttributeReserveActivities newFromLogger(CostManagementInstrumentationLogger _instrumentationLogger)
    {
        return new CostManagementInstrumentationBatchAttributeReserveActivities(_instrumentationLogger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReservationBatches</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext getReservationBatches()
    {
        SysInstrumentationActivity activity = instrumentationLogger.activity(ActivityNamePrefix + GetReservationBatches);
        return instrumentationLogger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshSelection</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext refreshSelection()
    {
        SysInstrumentationActivity activity = instrumentationLogger.activity(ActivityNamePrefix + RefreshSelection);
        return instrumentationLogger.activityContext(activity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>