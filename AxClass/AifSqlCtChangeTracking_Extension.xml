<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AifSqlCtChangeTracking_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AifSqlCtChangeTracking_Extension</c> class is an SQL CDC Change Tracking provider extension class to extend canDisableChangeTrackingForTableScope and include
/// RetailConnSchedulerSubjobTable table in scope to check before disable tracking.
/// </summary>
/// <remarks>
/// This class is owned by Retail team.
/// </remarks>
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
[ExtensionOf(classStr(AifSqlCtChangeTracking))]
final class AifSqlCtChangeTracking_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canDisableChangeTrackingForTableScope</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extend canDisableChangeTrackingForTableScope to Checks whether Change Tracking can be disabled for RetailConnSchedulerSubjobTable table and scope.
    /// </summary>
    /// <param name="_tableId">
    /// The ID of the table for which  Change Tracking configuration is being queried.
    /// </param>
    /// <param name="_scope">
    /// The change tracking scope for which the configuration is being queried.
    /// </param>
    /// <param name="_legacyScope">
    /// The legacy change tracking scope for which the configuration is being queried.
    /// </param>
    /// <returns>
    /// true if the table can be disabled for hange Tracking; otherwise, false.
    /// </returns>
    public boolean canDisableChangeTrackingForTableScope(TableId _tableId, AifChangeTrackingScope _scope, AifChangeTrackingScope _legacyScope)
    {
        boolean canDisable = next canDisableChangeTrackingForTableScope(_tableId, _scope, _legacyScope);

        RetailConnSchedulerSubjobTable retailConnSchedulerSubjobTable;

        // if canDisable = true, check for other scope before disable
        if (canDisable)
        {
            //check if this table needs to stay enabled for subjob scope
            select RecId from retailConnSchedulerSubjobTable
                where retailConnSchedulerSubjobTable.AXTableName == tableId2name(_tableId)
                && retailConnSchedulerSubjobTable.enabled == 1
                && retailConnSchedulerSubjobTable.dataReplicationByPull == 0;

            if (retailConnSchedulerSubjobTable.RecId)
            {
                canDisable = false;
            }
        }

        return canDisable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>