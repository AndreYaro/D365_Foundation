<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUpd_FinancialIV_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventUpd_Financial))]
final class InventUpd_FinancialIV_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateNow</Name>
				<Source><![CDATA[
    public CostAmountSecCur_RU updateNow()
    {
        var res = next updateNow();

        if (InventInventoryDataServiceAdjustmentOffsetHelper::shouldProcessTrigger() && this.updFinancial())
        {
            if (movement is InventMov_Sales)
            {
                SalesLine salesLine = movement.buffer() as SalesLine;

                if (InventInventoryDataServiceAdjustmentOffsetHelper::shouldOffsetForSales(salesLine, InventoryServiceAdjustmentOffsetOrderEvent::Invoice))
                {
                    InventInventoryDataServiceAdjustmentOffsetQueue::insertRecordWithInventSumQueue(salesLine.itemId, salesLine.inventDimId, salesLine.inventDimId, salesLine.InventoryServiceAdjustmentOffsetDatasource, salesLine.InventoryServiceAdjustmentOffsetPhysicalMeasure, -this.updFinancial());
                }
            }

            if (movement is InventMov_Journal)
            {
                InventJournalTrans journalLine = movement.buffer() as InventJournalTrans;

                if (InventInventoryDataServiceAdjustmentOffsetHelper::shouldOffsetForInventJournal(journalLine, InventoryServiceAdjustmentOffsetJournalEvent::Post))
                {
                    InventInventoryDataServiceAdjustmentOffsetQueue::insertRecordWithInventSumQueue(journalLine.itemId, journalLine.inventDimId, journalLine.inventDimId, journalLine.InventoryServiceAdjustmentOffsetDatasource, journalLine.InventoryServiceAdjustmentOffsetPhysicalMeasure, this.updFinancial());
                }
            }
        }

        return res;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>