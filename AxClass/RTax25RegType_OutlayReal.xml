<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25RegType_OutlayReal</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class RTax25RegType_OutlayReal extends RTax25RegType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>childRegisters</Name>
				<Source><![CDATA[
        public container childRegisters()
    {
        container           ret = connull();
        int                 idx;

        if (childRegisters)
        {
            for (idx = 1; idx <= conlen(childRegisters); idx ++)
            {
                if (RTax25RegisterTable::exist(conpeek(childRegisters, idx)))
                {
                    ret = conins(ret, conlen(ret) + 1, conpeek(childRegisters, idx));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public NotesLine description()
    {
        return "@GLS104827";
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
#define.FieldNum(4)
    public void init(boolean _useDetachedTable = true)
    {
        if (_useDetachedTable)
        {
            detachedTableId = tablenum(RTax25RegisterTrans_OutlayReal);
            this.initFromDetachedTable();
        }
        else
    {
        fieldType        = [ extendedtypenum(TransDate),
                             extendedtypenum(RTax25ProfitId),
                             extendedtypenum(Name),
                             extendedtypenum(AmountMST) ];

        fieldLabel       = [ "@SYS67",
                             "@GLS103733",
                             "@GLS104826",
                             "@SYS12227" ];

        fieldDescription = [ "@SYS67",
                             "@GLS103733",
                             "@GLS104826",
                             "@GLS104779" ];
        }
        registerType = RTax25RegisterType::OutlayReal;

        childRegisters   = [ RTax25RegisterType::Deferrals,
                             RTax25RegisterType::IntangibleDepreciation,
                             RTax25RegisterType::StdCurrentExpense,
                             RTax25RegisterType::InventReceipt,
                             RTax25RegisterType::NonInventReceipt,
                             RTax25RegisterType::OutlayRealTax ];
        headerFields     = [0, 0, 0, 1 ];

        super();

        balanceField = #FieldNum;
    }
]]></Source>
			</Method>
			<Method>
				<Name>supportLedger</Name>
				<Source><![CDATA[
        public boolean supportLedger()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>