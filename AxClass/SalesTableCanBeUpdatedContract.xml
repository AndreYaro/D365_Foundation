<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTableCanBeUpdatedContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesTableCanBeUpdatedContract</c> class is the output data contract class for the
/// <c>SalesTable.checkIfUpdate</c> method.
/// </summary>
class SalesTableCanBeUpdatedContract
implements SysPackable
{
    boolean canConfirmationBeUpdated;
    boolean canPickingListBeUpdated;
    boolean canPackingSlipBeUpdated;
    boolean canInvoiceBeUpdated;
    boolean canPickingListBeRegistrated;
    boolean canProjectPackingSlipBeUpdated;

    // <GEERU>
    boolean canInvoice4PaymBeUpdated;
    boolean canFactureBeUpdated;
    boolean canCommFactureBeUpdated;    
    // </GEERU>

    // <GBR>
    boolean canDeliverySlipBeUpdated_BR;
    boolean canFiscalDocTextBeRegistrated_BR;
    // </GBR>

    // <GBR>
    #localmacro.List1
        canConfirmationBeUpdated,
        canPickingListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated,
        canPickingListBeRegistrated,
        canProjectPackingSlipBeUpdated
    #endmacro
    // </GBR>

    // <GBR>
    #localmacro.List2
        canConfirmationBeUpdated,
        canPickingListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated,
        canPickingListBeRegistrated,
        canProjectPackingSlipBeUpdated
        ,canInvoice4PaymBeUpdated
        ,canFactureBeUpdated
    #endmacro
    // </GBR>

    #define.CurrentVersion(4)

    #localmacro.List3
        canConfirmationBeUpdated,
        canPickingListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated,
        canPickingListBeRegistrated,
        canProjectPackingSlipBeUpdated
        // <GEERU>
        ,canInvoice4PaymBeUpdated
        ,canFactureBeUpdated
        // </GEERU>
        // <GBR>
        ,canDeliverySlipBeUpdated_BR
        ,canFiscalDocTextBeRegistrated_BR
        // </GBR>
    #endmacro

    #localmacro.CurrentList
        canConfirmationBeUpdated,
        canPickingListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated,
        canPickingListBeRegistrated,
        canProjectPackingSlipBeUpdated
        // <GEERU>
        ,canInvoice4PaymBeUpdated
        ,canFactureBeUpdated
        // </GEERU>
        // <GBR>
        ,canDeliverySlipBeUpdated_BR
        ,canFiscalDocTextBeRegistrated_BR
        // </GBR>
        // <GEERU>
        ,canCommFactureBeUpdated
        // </GEERU>
        #endmacro

    // <GEERU>
    #ISOCountryRegionCodes
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanCommFactureBeUpdated_RU</Name>
				<Source><![CDATA[
    public boolean parmCanCommFactureBeUpdated_RU(boolean _canCommFactureBeUpdated = canCommFactureBeUpdated)
    {
        canCommFactureBeUpdated = _canCommFactureBeUpdated;
        return canCommFactureBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanConfirmationBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanConfirmationBeUpdated(boolean _canConfirmationBeUpdated = canConfirmationBeUpdated)
    {
        canConfirmationBeUpdated = _canConfirmationBeUpdated;
        return canConfirmationBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanDeliverySlipBeUpdated_BR</Name>
				<Source><![CDATA[
    public Boolean parmCanDeliverySlipBeUpdated_BR(Boolean _canDeliverySlipBeUpdated_BR = canDeliverySlipBeUpdated_BR)
    {
        canDeliverySlipBeUpdated_BR = _canDeliverySlipBeUpdated_BR;

        return canDeliverySlipBeUpdated_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanFactureBeUpdated_RU</Name>
				<Source><![CDATA[
    public boolean parmCanFactureBeUpdated_RU(boolean _canFactureBeUpdated = canFactureBeUpdated)
    {
        canFactureBeUpdated = _canFactureBeUpdated;
        return canFactureBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanFiscalDocTextBeRegistrated_BR</Name>
				<Source><![CDATA[
    public Boolean parmCanFiscalDocTextBeRegistrated_BR(Boolean _canFiscalDocTextBeRegistrated_BR = canFiscalDocTextBeRegistrated_BR)
    {
        canFiscalDocTextBeRegistrated_BR = _canFiscalDocTextBeRegistrated_BR;
        return canFiscalDocTextBeRegistrated_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanInvoice4PaymBeUpdated_RU</Name>
				<Source><![CDATA[
    public boolean parmCanInvoice4PaymBeUpdated_RU(boolean _canInvoice4PaymBeUpdated = canInvoice4PaymBeUpdated)
    {
        canInvoice4PaymBeUpdated = _canInvoice4PaymBeUpdated;
        return canInvoice4PaymBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanInvoiceBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanInvoiceBeUpdated(boolean _canInvoiceBeUpdated = canInvoiceBeUpdated)
    {
        canInvoiceBeUpdated = _canInvoiceBeUpdated;
        return canInvoiceBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanPackingSlipBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanPackingSlipBeUpdated(boolean _canPackingSlipBeUpdated = canPackingSlipBeUpdated)
    {
        canPackingSlipBeUpdated = _canPackingSlipBeUpdated;
        return canPackingSlipBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanPickingListBeRegistrated</Name>
				<Source><![CDATA[
    public boolean parmCanPickingListBeRegistrated(boolean _canPickingListBeRegistrated = canPickingListBeRegistrated)
    {
        canPickingListBeRegistrated = _canPickingListBeRegistrated;
        return canPickingListBeRegistrated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanPickingListBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanPickingListBeUpdated(boolean _canPickingListBeUpdated = canPickingListBeUpdated)
    {
        canPickingListBeUpdated = _canPickingListBeUpdated;
        return canPickingListBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanProjectPackingSlipBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanProjectPackingSlipBeUpdated(boolean _canProjectPackingSlipBeUpdated = canProjectPackingSlipBeUpdated)
    {
        canProjectPackingSlipBeUpdated = _canProjectPackingSlipBeUpdated;
        return canProjectPackingSlipBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        int version     = RunBase::getVersion(_packedClass);

        switch (version)
        {
            // <GBR>
            case 1:
                [version,#List1] = _packedClass;
                return true;
            case 2:
                [version,#List2] = _packedClass;
                return true;
            // </GBR>
            case 3:
                [version,#List3] = _packedClass;
                return true;
            case #CurrentVersion:
                [version,#CurrentList] = _packedClass;
                return true;
            default :
                return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static public SalesTableCanBeUpdatedContract construct()
    {
        return new SalesTableCanBeUpdatedContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>SalesTableCanBeUpdatedContract</c> class based on a container from a
    /// prior call to the <c>SalesTableCanBeUpdatedContract.pack</c> method.
    /// </summary>
    /// <param name="_packedClass">
    /// A container that contains the packed class.
    /// </param>
    /// <returns>
    /// An instance of the <c>SalesTableCanBeUpdatedContract</c> class that is identical to the one that
    /// was contained in the container.
    /// </returns>
    static public SalesTableCanBeUpdatedContract create(container _packedClass)
    {
        SalesTableCanBeUpdatedContract salesTableCanBeUpdatedContract = SalesTableCanBeUpdatedContract::construct();
        salesTableCanBeUpdatedContract.unpack(_packedClass);
        return salesTableCanBeUpdatedContract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>