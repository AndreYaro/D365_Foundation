<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdTableReferences</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdTableReferences
{
    ProdId      prodId[];
    Integer     prodMax;
    Integer     prodX;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addQueryRanges</Name>
				<Source><![CDATA[
    void addQueryRanges(Query query)
    {
        if (!prodMax)
            query.dataSourceTable(tablenum(ProdTable)).addRange(fieldnum(ProdTable,ProdId)).value(queryValue('-1'));
        else
        {
            Integer x = 0;
            while (x < prodMax)
            {
                x++;
                query.dataSourceTable(tablenum(ProdTable)).addRange(fieldnum(ProdTable,ProdId)).value(queryValue(prodId[x]));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initfromSalesLine</Name>
				<Source><![CDATA[
    void initfromSalesLine(SalesLine _salesLine)
    {
        InventTrans         inventTrans;
        InventTrans         inventTransProd;
        InventTransOrigin   inventTransOriginProd;

        if (_salesLine.InventRefType == InventRefType::Production)
        {
            this.insertProdId(_salesLine.InventRefId);
        }
        else
        {
            InventTransOriginId inventTransOriginIdSales = InventTransOriginSalesLine::findInventTransOriginId(_salesLine.DataAreaId, _salesLine.InventTransId);

            while select inventTrans
                group by MarkingRefInventTransOrigin
                where inventTrans.InventTransOrigin             == inventTransOriginIdSales
                   && inventTrans.MarkingRefInventTransOrigin   != 0
            {
                while select inventTransOriginProd
                    group by ReferenceId
                    where inventTransOriginProd.RecId                       == inventTrans.MarkingRefInventTransOrigin
                       && inventTransOriginProd.ReferenceCategory           == InventTransType::Production
                    exists join inventTransProd
                        where inventTransProd.InventTransOrigin             == inventTransOriginProd.RecId
                           && inventTransProd.MarkingRefInventTransOrigin   == inventTransOriginIdSales
                {
                    this.insertProdId(inventTransOriginProd.ReferenceId);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertProdId</Name>
				<Source><![CDATA[
    void insertProdId(ProdId _prodId)
    {
        if (!ProdTable::find(_prodId).RecId)
            return;

        Integer x = 0;
        while (x < prodMax)
        {
            x++;
            if (prodId[x] == _prodId)
                return;
        }

        prodMax++;
        prodId[prodMax] = _prodId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfReferences</Name>
				<Source><![CDATA[
    Integer numOfReferences()
    {
        return prodMax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasSalesLineProductions</Name>
				<Source><![CDATA[
    static boolean hasSalesLineProductions(SalesLine _salesLine)
    {
        ProdTableReferences prodTableReferences = new ProdTableReferences();
        prodTableReferences.initfromSalesLine(_salesLine);
        return prodTableReferences.numOfReferences();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
