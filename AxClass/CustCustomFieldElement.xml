<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCustomFieldElement</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustCustomFieldElement</c> class is used for temporarily holding information about a free text invoice custom field value.
/// </summary>

class CustCustomFieldElement
{
    anytype value;
    anytype origValue;
    RefRecId custCustomFieldId, custBillingCodeCustomFieldId, custInvBillCodeCusotmFieldBaseId, custInvoiceStandardLineTemplateRecId;
    str customField;
    boolean isRequired, isActive;
    DialogField controlObject;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmControlObject</Name>
				<Source><![CDATA[
    public DialogField parmControlObject(DialogField _controlObject = controlObject)
    {
        controlObject = _controlObject;
        return controlObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustBillingCodeCustomFieldId</Name>
				<Source><![CDATA[
    public RefRecId parmCustBillingCodeCustomFieldId(RefRecId _custBillingCodeCustomFieldId = custBillingCodeCustomFieldId)
    {
        custBillingCodeCustomFieldId = _custBillingCodeCustomFieldId;
        return custBillingCodeCustomFieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustCustomFieldId</Name>
				<Source><![CDATA[
    public RefRecId parmCustCustomFieldId(RefRecId _custCustomFieldId=custCustomFieldId)
    {
        custCustomFieldId = _custCustomFieldId;
        return custCustomFieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustInvBillCodeCusotmFieldBaseId</Name>
				<Source><![CDATA[
    public RefRecId parmCustInvBillCodeCusotmFieldBaseId(RefRecId _custInvBillCodeCusotmFieldBaseId = custInvBillCodeCusotmFieldBaseId)
    {
        custInvBillCodeCusotmFieldBaseId = _custInvBillCodeCusotmFieldBaseId;
        return custInvBillCodeCusotmFieldBaseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustInvoiceStandardLineTemplateRecId</Name>
				<Source><![CDATA[
    public RefRecId parmCustInvoiceStandardLineTemplateRecId(RefRecId _custInvoiceStandardLineTemplateRecId = custInvoiceStandardLineTemplateRecId)
    {
        custInvoiceStandardLineTemplateRecId = _custInvoiceStandardLineTemplateRecId;
        return custInvoiceStandardLineTemplateRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomField</Name>
				<Source><![CDATA[
    public str parmCustomField(str _customField = customField)
    {
        customField = _customField;

        return customField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsActive</Name>
				<Source><![CDATA[
    public boolean parmIsActive(boolean _isActive = isActive)
    {
        isActive = _isActive;

        return isActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsRequired</Name>
				<Source><![CDATA[
    public boolean parmIsRequired(boolean _isRequired = isRequired)
    {
        isRequired = _isRequired;

        return isRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigValue</Name>
				<Source><![CDATA[
    public anytype parmOrigValue(anytype _origValue = origValue)
    {
        origValue = _origValue;

        return origValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValue</Name>
				<Source><![CDATA[
    public anytype parmValue(anytype _value = value)
    {
        value = _value;
        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeCustomFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the free text invoice custom field values to the database depending on the data type of the <c>CustCustomField</c> class.
    /// </summary>
    /// <param name="_customFieldSourceType">
    /// An enumerator value of type of table source the method called for.
    /// </param>
    /// <param name="_record">
    /// A <c>Common</c> table buffer.
    /// </param>

    public void writeCustomFieldValue(CustCustomFieldSourceType _customFieldSourceType,
                                        Common _record)
    {
        CustInvLineBillCodeCustomFieldInt intValue;
        CustInvLineBillCodeCustomFieldBool boolValue;
        CustInvLineBillCodeCustomFieldReal realValue;
        CustInvLineBillCodeCustomFieldDateTime dateTimeValue;
        CustInvLineBillCodeCustomFieldText textValue;
        CustCustomField custCustomField;
        CustInvoiceLine custInvoiceLine;

        custCustomField = CustCustomField::find(custCustomFieldId);

        switch (custCustomField.DataType)
        {
            case CustomFieldDataType::Boolean:
                if (custInvBillCodeCusotmFieldBaseId)
                {
                    boolValue = CustInvLineBillCodeCustomFieldBool::find(custInvBillCodeCusotmFieldBaseId, true);
                }
                else
                {
                    boolValue.CustBillingCodeCustomField = custBillingCodeCustomFieldId;
                    boolValue.CustCustomFieldSourceType = _customFieldSourceType;
                    switch (_customFieldSourceType)
                    {
                        case CustCustomFieldSourceType::CustInvoiceLine:
                            custInvoiceLine = _record as CustInvoiceLine;
                            boolValue.CustInvoiceLine = custInvoiceLine.RecId;
                            boolValue.CustInvoiceLineParent = custInvoiceLine.ParentRecId;
                            boolValue.CustInvoiceLineLineNum = custInvoiceLine.LineNum;
                        break;

                        case CustCustomFieldSourceType::CustInvoiceTemplateLine:
                            boolValue.CustInvoiceStandardLineTemplate = _record.RecId;
                        break;

                        case CustCustomFieldSourceType::CustRecurrenceInvoice:
                            boolValue.CustRecurrenceInvoice = _record.RecId;
                            boolValue.CustInvoiceStandardLineTemplate = custInvoiceStandardLineTemplateRecId;
                        break;
                    }
                }
                boolValue.BoolValue = value;
                boolValue.write();
                custInvBillCodeCusotmFieldBaseId = boolValue.RecId;
            break;

            case CustomFieldDataType::Currency:
                if (custInvBillCodeCusotmFieldBaseId)
                {
                    realValue = CustInvLineBillCodeCustomFieldReal::find(custInvBillCodeCusotmFieldBaseId, true);
                }
                else
                {
                    realValue.CustBillingCodeCustomField = custBillingCodeCustomFieldId;
                    realValue.CustCustomFieldSourceType = _customFieldSourceType;
                    switch (_customFieldSourceType)
                    {
                        case CustCustomFieldSourceType::CustInvoiceLine :
                            custInvoiceLine = CustInvoiceLine::find(_record.RecId);
                            realValue.CustInvoiceLine = custInvoiceLine.RecId;
                            realValue.CustInvoiceLineParent = custInvoiceLine.ParentRecId;
                            realValue.CustInvoiceLineLineNum = custInvoiceLine.LineNum;
                        break;

                        case CustCustomFieldSourceType::CustInvoiceTemplateLine:
                            realValue.CustInvoiceStandardLineTemplate = _record.RecId;
                        break;

                        case CustCustomFieldSourceType::CustRecurrenceInvoice:
                            realValue.CustRecurrenceInvoice = _record.RecId;
                            realValue.CustInvoiceStandardLineTemplate = custInvoiceStandardLineTemplateRecId;
                        break;
                    }
                }
                realValue.RealValue = value;
                realValue.write();
                custInvBillCodeCusotmFieldBaseId = realValue.RecId;
            break;

            case CustomFieldDataType::Date:
                if (custInvBillCodeCusotmFieldBaseId)
                {
                    dateTimeValue = CustInvLineBillCodeCustomFieldDateTime::find(custInvBillCodeCusotmFieldBaseId, true);
                }
                else
                {
                    dateTimeValue.CustBillingCodeCustomField = custBillingCodeCustomFieldId;
                    dateTimeValue.CustCustomFieldSourceType = _customFieldSourceType;
                    switch (_customFieldSourceType)
                    {
                        case CustCustomFieldSourceType::CustInvoiceLine :
                            custInvoiceLine = CustInvoiceLine::find(_record.RecId);
                            dateTimeValue.CustInvoiceLine = custInvoiceLine.RecId;
                            dateTimeValue.CustInvoiceLineParent = custInvoiceLine.ParentRecId;
                            dateTimeValue.CustInvoiceLineLineNum = custInvoiceLine.LineNum;
                        break;

                        case CustCustomFieldSourceType::CustInvoiceTemplateLine:
                            dateTimeValue.CustInvoiceStandardLineTemplate = _record.RecId;
                        break;

                        case CustCustomFieldSourceType::CustRecurrenceInvoice:
                            dateTimeValue.CustRecurrenceInvoice = _record.RecId;
                            dateTimeValue.CustInvoiceStandardLineTemplate = custInvoiceStandardLineTemplateRecId;
                        break;
                    }
                }
                dateTimeValue.DateValue = value;
                dateTimeValue.write();
                custInvBillCodeCusotmFieldBaseId = dateTimeValue.RecId;
            break;

            case CustomFieldDataType::Decimal:
                if (custInvBillCodeCusotmFieldBaseId)
                {
                    realValue = CustInvLineBillCodeCustomFieldReal::find(custInvBillCodeCusotmFieldBaseId, true);
                }
                else
                {
                    realValue.CustBillingCodeCustomField = custBillingCodeCustomFieldId;
                    realValue.CustCustomFieldSourceType = _customFieldSourceType;
                    switch (_customFieldSourceType)
                    {
                        case CustCustomFieldSourceType::CustInvoiceLine :
                            custInvoiceLine = CustInvoiceLine::find(_record.RecId);
                            realValue.CustInvoiceLine = custInvoiceLine.RecId;
                            realValue.CustInvoiceLineParent = custInvoiceLine.ParentRecId;
                            realValue.CustInvoiceLineLineNum = custInvoiceLine.LineNum;
                        break;

                        case CustCustomFieldSourceType::CustInvoiceTemplateLine:
                            realValue.CustInvoiceStandardLineTemplate = _record.RecId;
                        break;

                        case CustCustomFieldSourceType::CustRecurrenceInvoice:
                            realValue.CustRecurrenceInvoice = _record.RecId;
                            realValue.CustInvoiceStandardLineTemplate = custInvoiceStandardLineTemplateRecId;
                        break;
                    }
                }
                realValue.RealValue = value;
                realValue.write();
                custInvBillCodeCusotmFieldBaseId = realValue.RecId;
            break;

            case CustomFieldDataType::Integer:
                if (custInvBillCodeCusotmFieldBaseId)
                {
                    intValue = CustInvLineBillCodeCustomFieldInt::find(custInvBillCodeCusotmFieldBaseId, true);
                }
                else
                {
                    intValue.CustBillingCodeCustomField = custBillingCodeCustomFieldId;
                    intValue.CustCustomFieldSourceType = _customFieldSourceType;
                    switch (_customFieldSourceType)
                    {
                        case CustCustomFieldSourceType::CustInvoiceLine :
                            custInvoiceLine = CustInvoiceLine::find(_record.RecId);
                            intValue.CustInvoiceLine = custInvoiceLine.RecId;
                            intValue.CustInvoiceLineParent = custInvoiceLine.ParentRecId;
                            intValue.CustInvoiceLineLineNum = custInvoiceLine.LineNum;
                        break;

                        case CustCustomFieldSourceType::CustInvoiceTemplateLine:
                            intValue.CustInvoiceStandardLineTemplate = _record.RecId;
                        break;

                        case CustCustomFieldSourceType::CustRecurrenceInvoice:
                            intValue.CustRecurrenceInvoice = _record.RecId;
                            intValue.CustInvoiceStandardLineTemplate = custInvoiceStandardLineTemplateRecId;
                        break;
                    }
                }
                intValue.IntValue = value;
                intValue.write();
                custInvBillCodeCusotmFieldBaseId = intValue.RecId;
            break;

            case CustomFieldDataType::Text:
                if (custInvBillCodeCusotmFieldBaseId)
                {
                    textValue = CustInvLineBillCodeCustomFieldText::find(custInvBillCodeCusotmFieldBaseId, true);
                }
                else
                {
                    textValue.CustBillingCodeCustomField = custBillingCodeCustomFieldId;
                    textValue.CustCustomFieldSourceType = _customFieldSourceType;
                    switch (_customFieldSourceType)
                    {
                        case CustCustomFieldSourceType::CustInvoiceLine :
                            custInvoiceLine = CustInvoiceLine::find(_record.RecId);
                            textValue.CustInvoiceLine = custInvoiceLine.RecId;
                            textValue.CustInvoiceLineParent = custInvoiceLine.ParentRecId;
                            textValue.CustInvoiceLineLineNum = custInvoiceLine.LineNum;
                        break;

                        case CustCustomFieldSourceType::CustInvoiceTemplateLine:
                            textValue.CustInvoiceStandardLineTemplate = _record.RecId;
                        break;

                        case CustCustomFieldSourceType::CustRecurrenceInvoice:
                            textValue.CustRecurrenceInvoice = _record.RecId;
                            textValue.CustInvoiceStandardLineTemplate = custInvoiceStandardLineTemplateRecId;
                        break;
                    }
                }
                textValue.TextValue = value;
                textValue.write();
                custInvBillCodeCusotmFieldBaseId = textValue.RecId;
            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CustCustomFieldElement</c> class.
    /// </summary>
    /// <returns>
    /// An instance of <c>CustCustomFieldElement</c>.
    /// </returns>

    public static CustCustomFieldElement construct()
    {
        return new CustCustomFieldElement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustInvoiceTable</Name>
				<Source><![CDATA[
    private static date getCustInvoiceTable(CustInvoiceTableRefRecId _custInvoiceTableRefRecId)
    {
        CustInvoiceLine     custInvoiceLine;
        CustInvoiceTable    custInvoiceTable;

        select firstonly RecId, InvoiceDate from custInvoiceTable
        join ParentRecId from custInvoiceLine
            where   custInvoiceTable.RecId == _custInvoiceTableRefRecId;

        return custInvoiceTable.InvoiceDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomFieldValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the custom field value for an invoice line.
    /// </summary>
    /// <param name="_customFieldSourceType">
    /// An enumerator value of type of table source the method called for.
    /// </param>
    /// <param name="_record">
    /// A <c>Common</c> table buffer.
    /// </param>
    /// <param name="_custInvoiceStandardLinTemplateRecId">
    /// The Record ID of <c>CustInvoiceStandardLineTemplate</c> table; optional.
    /// </param>
    /// <param name="_invoiceDate">
    /// The date on which invoice is generated; optional.
    /// </param>
    /// <returns>
    /// A map which contains the custom field values.
    /// </returns>
    public static Map getCustomFieldValues(CustCustomFieldSourceType _customFieldSourceType,
                                            Common _record,
                                            RefRecId _custInvoiceStandardLinTemplateRecId = 0,
                                            date _invoiceDate = dateNull())
    {
        Query customFieldValuesQuery = CustCustomFieldElement::buildCustomFieldQuery(_customFieldSourceType,
                                                            _record,
                                                            _custInvoiceStandardLinTemplateRecId,
                                                            _invoiceDate);
        Map custCustomFieldElements = new Map(Types::String, Types::Class);
        QueryRun queryRun = new queryRun(customFieldValuesQuery);

        while (queryRun.next())
        {
            custCustomFieldElements = CustCustomFieldElement::processCustomField(queryRun, custCustomFieldElements);
        }

        return custCustomFieldElements;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCustCustomFieldElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>CustCustomFieldElement</c> class instance.
    /// </summary>
    /// <param name="_custBillingCodeCustomField">
    /// A <c>CustBillingCodeCustomField</c> table buffer.
    /// </param>
    /// <param name="_custInvLineBillCodeCustomFieldBase">
    /// A <c>CustInvLineBillCodeCustomFieldBase</c> table buffer.
    /// </param>
    /// <param name="_custCustomField">
    /// A <c>CustCustomField</c> table buffer.
    /// </param>
    /// <param name="_controlObject">
    /// An instance of <c>DialogField</c> used on a <c>RunBase</c> form.
    /// </param>
    /// <returns>
    /// An instance of <c>CustCustomFieldElement</c> class.
    /// </returns>

    public static CustCustomFieldElement newCustCustomFieldElement(CustBillingCodeCustomField _custBillingCodeCustomField,
                                                    CustInvLineBillCodeCustomFieldBase _custInvLineBillCodeCustomFieldBase,
                                                    CustCustomField _custCustomField, DialogField _controlObject)
    {
        CustCustomFieldElement custCustomFieldElement = new CustCustomFieldElement();

        custCustomFieldElement.parmCustBillingCodeCustomFieldId(_custBillingCodeCustomField.RecId);
        custCustomFieldElement.parmCustCustomFieldId(_custCustomField.RecId);
        custCustomFieldElement.parmCustomField(_custCustomField.CustomField);
        custCustomFieldElement.parmIsActive(_custBillingCodeCustomField.IsActive);
        custCustomFieldElement.parmIsRequired(_custBillingCodeCustomField.IsRequired);

        custCustomFieldElement.parmCustInvBillCodeCusotmFieldBaseId(_custInvLineBillCodeCustomFieldBase.RecId);
        custCustomFieldElement.parmControlObject(_controlObject);

        if (_controlObject != null)
        {
            custCustomFieldElement.parmOrigValue(_controlObject.value());
        }
        else
        {
            custCustomFieldElement.parmOrigValue(null);
        }

        return custCustomFieldElement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildCustomFieldQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the custom field value for an invoice line.
    /// </summary>
    /// <param name="_customFieldSourceType">
    /// An enumerator value of type of table source the method called for.
    /// </param>
    /// <param name="_record">
    /// A <c>Common</c> table buffer.
    /// </param>
    /// <param name="_custInvoiceStandardLinTemplateRecId">
    /// The Record ID of <c>CustInvoiceStandardLineTemplate</c> table; optional.
    /// </param>
    /// <param name="_invoiceDate">
    /// The date on which invoice is generated; optional.
    /// </param>
    /// <returns>
    /// A query which returns the custom fields from a template.
    /// </returns>
    public static Query buildCustomFieldQuery(CustCustomFieldSourceType _customFieldSourceType,
                                            Common _record,
                                            RefRecId _custInvoiceStandardLinTemplateRecId = 0,
                                            date _invoiceDate = dateNull())
    {
        Query customFieldValuesQuery = new Query(queryStr(custCustomFieldElement));
        QueryBuildDataSource billingCodeVersionDS;
        CustInvoiceLine custInvoiceLine;
        CustInvoiceStandardLineTemplate custInvoiceStandardLineTemplate = CustInvoiceStandardLineTemplate::find(_custInvoiceStandardLinTemplateRecId);
        CustRecurrenceInvoice custRecurrenceInvoice;
        RefRecId billingCodeRecId;
        TransDate invoiceDate;
        QueryBuildDataSource custInvLineBillCodeCustomFieldBaseDS;
        Map custCustomFieldElements = new Map(Types::String, Types::Class);

        custInvLineBillCodeCustomFieldBaseDS = customFieldValuesQuery.dataSourceTable(tableNum(CustInvLineBillCodeCustomFieldBase));
        custInvLineBillCodeCustomFieldBaseDS.addRange(fieldNum(CustInvLineBillCodeCustomFieldBase, CustCustomFieldSourceType)).value(queryValue(_customFieldSourceType));

        billingCodeVersionDS = customFieldValuesQuery.dataSourceTable(tableNum(CustBillingCodeVersion));

        switch (_customFieldSourceType)
        {
            case CustCustomFieldSourceType::CustInvoiceLine:
                custInvoiceLine = _record as CustInvoiceLine;
                invoiceDate = CustCustomFieldElement::getCustInvoiceTable(custInvoiceLine.ParentRecId);
                billingCodeRecId = custInvoiceLine.CustBillingCode;

                custInvLineBillCodeCustomFieldBaseDS.addRange(fieldNum(CustInvLineBillCodeCustomFieldBase, CustInvoiceLine)).value(queryValue(custInvoiceLine.Recid));
                custInvLineBillCodeCustomFieldBaseDS.addRange(fieldNum(CustInvLineBillCodeCustomFieldBase, CustInvoiceLineParent)).value(queryValue(custInvoiceLine.ParentRecId));
                custInvLineBillCodeCustomFieldBaseDS.addRange(fieldNum(CustInvLineBillCodeCustomFieldBase, CustInvoiceLineLineNum)).value(queryValue(custInvoiceLine.LineNum));
            break;

            case CustCustomFieldSourceType::CustInvoiceTemplateLine:
                billingCodeRecId = custInvoiceStandardLineTemplate.BillingCode;
                invoiceDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            break;

            case CustCustomFieldSourceType::CustRecurrenceInvoice:
                custRecurrenceInvoice = _record as CustRecurrenceInvoice;
                billingCodeRecId = custInvoiceStandardLineTemplate.BillingCode;
                invoiceDate = _invoiceDate;

                custInvLineBillCodeCustomFieldBaseDS.addRange(fieldNum(CustInvLineBillCodeCustomFieldBase, CustInvoiceStandardLineTemplate)).value(queryValue(_custInvoiceStandardLinTemplateRecId));
                custInvLineBillCodeCustomFieldBaseDS.addRange(fieldNum(CustInvLineBillCodeCustomFieldBase, CustRecurrenceInvoice)).value(queryValue(custRecurrenceInvoice.Recid));

                custInvLineBillCodeCustomFieldBaseDS.joinMode(JoinMode::OuterJoin );
            break;
        }

        customFieldValuesQuery.validTimeStateAsOfDate(invoiceDate);

        billingCodeVersionDS.addRange(fieldNum(CustBillingCodeVersion, CustBillingCode)).value(queryValue(billingCodeRecId));

        return customFieldValuesQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processCustomField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the value for a single <c>CustCustomFieldElement</c> and inserts the results in the map parameter.
    /// </summary>
    /// <param name="_queryRun">
    /// The query we are processing.
    /// </param>
    /// <param name="_custCustomFieldElements">
    /// The map of custom field elements to insert.
    /// </param>
    /// <returns>
    /// A new item in the _custCustomFieldElements map parameter.
    /// </returns>
    public static Map processCustomField(QueryRun _queryRun, Map _custCustomFieldElements)
    {
        CustCustomFieldElement custCustomFieldElement;
        CustBillingCodeCustomField custBillingCodeCustomField = _queryRun.get(tableNum(CustBillingCodeCustomField));
        CustCustomField custCustomField = _queryRun.get(tableNum(CustCustomField));
        CustInvLineBillCodeCustomFieldBase custInvLineBillCodeCustomFieldBaseDS = _queryRun.get(tableNum(CustInvLineBillCodeCustomFieldBase));
        custCustomFieldElement = CustCustomFieldElement::newCustCustomFieldElement(custBillingCodeCustomField, custInvLineBillCodeCustomFieldBaseDS, custCustomField, null);

        if (!_custCustomFieldElements)
        {
             _custCustomFieldElements = new Map(Types::String, Types::Class);
        }

        switch (custCustomField.DataType)
        {
            case CustomFieldDataType::Boolean:
                custCustomFieldElement.parmValue(
                    custInvLineBillCodeCustomFieldBaseDS.RecId ? CustInvLineBillCodeCustomFieldBool::find(custInvLineBillCodeCustomFieldBaseDS.RecId).BoolValue : custCustomField.DefaultBoolean);
            break;

            case CustomFieldDataType::Currency:
                custCustomFieldElement.parmValue(
                    custInvLineBillCodeCustomFieldBaseDS.RecId ? CustInvLineBillCodeCustomFieldReal::find(custInvLineBillCodeCustomFieldBaseDS.RecId).RealValue : custCustomField.DefaultReal);
            break;

            case CustomFieldDataType::Date:
                custCustomFieldElement.parmValue(
                    custInvLineBillCodeCustomFieldBaseDS.RecId ? CustInvLineBillCodeCustomFieldDateTime::find(custInvLineBillCodeCustomFieldBaseDS.RecId).DateValue :DateTimeUtil::applyTimeZoneOffset(custCustomField.DefaultDate, DateTimeUtil::getUserPreferredTimeZone()));
            break;

            case CustomFieldDataType::Decimal:
                custCustomFieldElement.parmValue(
                    custInvLineBillCodeCustomFieldBaseDS.RecId ? CustInvLineBillCodeCustomFieldReal::find(custInvLineBillCodeCustomFieldBaseDS.RecId).RealValue : custCustomField.DefaultReal);
            break;

            case CustomFieldDataType::Integer:
                custCustomFieldElement.parmValue(
                    custInvLineBillCodeCustomFieldBaseDS.RecId ? CustInvLineBillCodeCustomFieldInt::find(custInvLineBillCodeCustomFieldBaseDS.RecId).IntValue : custCustomField.DefaultInt);
            break;

            case CustomFieldDataType::Text:
                custCustomFieldElement.parmValue(
                    custInvLineBillCodeCustomFieldBaseDS.RecId ? CustInvLineBillCodeCustomFieldText::find(custInvLineBillCodeCustomFieldBaseDS.RecId).TextValue : custCustomField.DefaultText);
            break;
        }

        _custCustomFieldElements.insert(custCustomField.CustomField, custCustomFieldElement);

        return _custCustomFieldElements;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>