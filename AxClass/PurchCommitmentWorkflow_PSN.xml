<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCommitmentWorkflow_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchCommitmentWorkflow_PSN</c> class is the <c>SubmitToWorkflow</c> class and
/// the <c>ResubmitToWorkflow</c> class for the commiment document workflow.
/// </summary>
class PurchCommitmentWorkflow_PSN
{
    PurchCommitmentHeader_PSN       purchCommitmentHeader_PSN;
    WorkflowVersionTable            workflowVersionTable;
    WorkflowComment                 workflowComment;
    boolean                         submit;
    WorkflowWorkItemTable           workflowWorkItemTable;
    userId                          userId;
    menuItemName                    menuItemName;
    workflowTypeName                workflowTemplateName;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialogOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens a dialog box for submitting a commitment document workflow.
    /// </summary>
    /// <returns>
    /// true if the dialog box was closed by pressing the Ok button; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Boolean dialogOk()
    {
        WorkflowSubmitDialog            WorkflowSubmitDialog;
        WorkflowWorkItemActionDialog    WorkflowWorkItemActionDialog;
        boolean                         ok;

        if (menuItemName == menuitemactionstr(PurchCommitmentWFSubmit_PSN))
        {
            WorkflowSubmitDialog = WorkflowSubmitDialog::construct(this.parmWorkflowVersionTable());
            workflowSubmitDialog.run();
            this.parmWorkflowComment(workflowSubmitDialog.parmWorkflowComment());
            ok = workflowSubmitDialog.parmIsClosedOK();
        }
        else if (menuItemName == menuitemactionstr(PurchCommitmentWFReSubmit_PSN))
        {
            workflowWorkItemActionDialog = WorkflowWorkItemActionDialog::construct( workflowWorkItemTable,
                                                                                    WorkflowWorkItemActionType::Resubmit,
                                                                                    new MenuFunction(menuitemactionstr(PurchCommitmentWFReSubmit_PSN), MenuItemType::Action));
            workflowWorkItemActionDialog.run();
            this.parmWorkflowComment(workflowWorkItemActionDialog.parmWorkflowComment());
            ok = workflowWorkItemActionDialog.parmIsClosedOK();
            userId = workflowWorkItemActionDialog.parmTargetUser();
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the commitment workflow
    /// </summary>
    /// <param name="_documentRecord">
    /// The document record for which the workflow is initialize.
    /// </param>
    /// <param name="_menuItemName">
    /// The name of the caller menu item.
    /// </param>
    /// <param name="_workflowVersionTable">
    /// A record in the <c>WorkflowVersionTable</c> table.
    /// </param>
    /// <param name="_workflowWorkItemTable">
    /// A record in the <c>WorkflowWorkItemTable</c> table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void init(Common                      _documentRecord,
                     menuItemName                _menuItemName,
                     WorkflowVersionTable        _workflowVersionTable,
                     WorkflowWorkItemTable       _workflowWorkItemTable
                     )
    {
        this.parmPurchCommitmentHeader(_documentRecord);
        this.parmSubmit(_menuItemName == menuitemactionstr(PurchCommitmentWFSubmit_PSN));
        this.parmMenuItemName(_menuItemName);

        this.parmWorkflowVersionTable(_workflowVersionTable);
        this.parmWorkflowWorkItemtable(_workflowWorkItemTable);
        this.parmWorkflowTypeName(this.parmWorkflowVersionTable().workflowTable().TemplateName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the name of the workflow menu item.
    /// </summary>
    /// <param name="_menuItemName">
    /// The menu item name to set.
    /// </param>
    /// <returns>
    /// The current menu item name.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public menuItemName parmMenuItemName(menuItemName _menuItemName = menuItemName)
    {
        menuItemName = _menuItemName;

        return menuItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchCommitmentHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>PurchCommitmentHeader_PSN</c> record.
    /// </summary>
    /// <param name="_purchCommitmentHeader_PSN">
    /// The <c>PurchCommitmentHeader_PSN</c> record to set.
    /// </param>
    /// <returns>
    /// The current <c>PurchCommitmentHeader_PSN</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PurchCommitmentHeader_PSN parmPurchCommitmentHeader(PurchCommitmentHeader_PSN _purchCommitmentHeader_PSN = purchCommitmentHeader_PSN)
    {
        purchCommitmentHeader_PSN = _purchCommitmentHeader_PSN;

        return purchCommitmentHeader_PSN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurhCommitmentHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>PurchCommitmentHeader_PSN</c> record.
    /// </summary>
    /// <param name="_purchCommitmentHeader_PSN">
    /// The <c>PurchCommitmentHeader_PSN</c> record to set.
    /// </param>
    /// <returns>
    /// The current <c>PurchCommitmentHeader_PSN</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PurchCommitmentHeader_PSN parmPurhCommitmentHeader(PurchCommitmentHeader_PSN _purchCommitmentHeader_PSN = purchCommitmentHeader_PSN)
    {
        purchCommitmentHeader_PSN = _purchCommitmentHeader_PSN;

        return purchCommitmentHeader_PSN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the submit class variable.
    /// </summary>
    /// <param name="_submit">
    /// The value of submit class variable to set.
    /// </param>
    /// <returns>
    /// The current value of the submit class variable.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmSubmit(boolean _submit = submit)
    {
        submit = _submit;

        return submit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>WorkflowComment</c> record.
    /// </summary>
    /// <param name="_workflowComment">
    /// The <c>WorkflowComment</c> record to set.
    /// </param>
    /// <returns>
    /// The current <c>WorkflowComment</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public WorkflowComment parmWorkflowComment(WorkflowComment _workflowComment = workflowComment)
    {
        workflowComment = _workflowComment;

        return workflowComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowTemplateName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the template name of the commitment workflow.
    /// </summary>
    /// <param name="_workflowTemplateName">
    /// The template name of the commitment workflow to set.
    /// </param>
    /// <returns>
    /// The current template name of the commitment workflow.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public workflowTypeName parmWorkflowTemplateName(workflowTypeName _workflowTemplateName = workflowTemplateName)
    {
        workflowTemplateName = _workflowTemplateName;

        return workflowTemplateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowTypeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the workflow type name of the commitment workflow.
    /// </summary>
    /// <param name="_workflowTemplateName">
    /// The template name of the commitment workflow to set.
    /// </param>
    /// <returns>
    /// The current template name of the commitment workflow.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public workflowTypeName parmWorkflowTypeName(workflowTypeName _workflowTemplateName = workflowTemplateName)
    {
        workflowTemplateName = _workflowTemplateName;

        return workflowTemplateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowVersionTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>WorkflowVersionTable</c> record.
    /// </summary>
    /// <param name="_workflowVersionTable">
    /// The <c>WorkflowVersionTable</c> record to set.
    /// </param>
    /// <returns>
    /// The current <c>WorkflowVersionTable</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public WorkflowVersionTable parmWorkflowVersionTable(WorkflowVersionTable _workflowVersionTable = workflowVersionTable)
    {
        workflowVersionTable = _workflowVersionTable;

        return workflowVersionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkflowWorkItemtable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>WorkflowWorkItemTable</c> record.
    /// </summary>
    /// <param name="_workflowWorkItemTable">
    /// The <c>WorkflowWorkItemTable</c> record to set.
    /// </param>
    /// <returns>
    /// The current <c>WorkflowWorkItemTable</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public WorkflowWorkItemTable parmWorkflowWorkItemtable(WorkflowWorkItemTable _workflowWorkItemTable = workflowWorkItemTable)
    {
        workflowWorkItemTable = _workflowWorkItemTable;

        return workflowWorkItemTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reSubmit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resubmits the commitment to workflow.
    /// </summary>
    /// <remarks>
    /// This method is called from the workflow framework when the task/approval is resubmitted.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void reSubmit()
    {
        if (this.parmWorkflowWorkItemtable() && this.parmPurchCommitmentHeader())
        {
            WorkflowWorkItemActionManager::dispatchWorkItemAction(  this.parmWorkflowWorkItemtable(),
                                                                    this.parmWorkflowComment(),
                                                                    userId,
                                                                    WorkflowWorkItemActionType::Resubmit,
                                                                    this.parmMenuItemName());

            this.setWorkflowState(PurchCommitmentWorkflowApprovalState_PSN::InReview);

            this.updateFormDataSource();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkflowState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the workflow status for the commitment document.
    /// </summary>
    /// <param name="_workflowStatus">
    /// The workflow status value to set on the commitment document.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setWorkflowState(PurchCommitmentWorkflowApprovalState_PSN _workflowStatus)
    {
        PurchCommitmentHeader_PSN::setWorkflowState(this.parmPurchCommitmentHeader().RecId, _workflowStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>submit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activates the commitment workflow.
    /// </summary>
    /// <remarks>
    /// This method starts the workflow configuration by calling the <c>activateFromWorkflowTemplate</c>
    /// method of the <c>Workflow</c> class by using information about the commitment record.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void submit()
    {
        if (this.parmPurchCommitmentHeader().canSubmitToWorkflow())
        {
            Workflow::activateFromWorkflowType( this.parmWorkflowTypeName(),
                                                this.parmPurchCommitmentHeader().RecId,
                                                this.parmWorkflowComment(),
                                                false);

            this.setWorkflowState(PurchCommitmentWorkflowApprovalState_PSN::InReview);

            this.updateFormDataSource();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFormDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>FormDataSource</c> associated to the <c>PurchCommitmentHeader_PSN</c>.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateFormDataSource()
    {
        FormDataSource purchCommitmentHeader_ds;

        purchCommitmentHeader_ds = FormDataUtil::getFormDataSource(this.parmPurchCommitmentHeader());

        if (purchCommitmentHeader_ds)
        {
            purchCommitmentHeader_ds.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>PurchCommitmentWorkflow_PSN</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>PurchCommitmentWorkflow_PSN</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PurchCommitmentWorkflow_PSN construct()
    {
        return new PurchCommitmentWorkflow_PSN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Submits a commitment document workflow document and starts the corresponding workflow.
    /// </summary>
    /// <param name="_args">
    /// An <c>Args</c> value from the caller.
    /// </param>
    public static void main(Args _args)
    {
        PurchCommitmentWorkflow_PSN purchCommitmentWorkflow_PSN;
        PurchCommitmentHeader_PSN   purchCommitmentHeader_PSN;
        str                         menuItemName;
        FormRun                     commitmentForm;

        purchCommitmentWorkflow_PSN = PurchCommitmentWorkflow_PSN::construct();
        purchCommitmentHeader_PSN   = _args.record() as PurchCommitmentHeader_PSN;
        menuItemName                = _args.menuItemName();
        commitmentForm              = _args.caller();

        if (purchCommitmentHeader_PSN && (strLen(menuItemName) > 0))
        {
            if ((commitmentForm != null) && (menuItemName == menuitemactionstr(PurchCommitmentWFSubmit_PSN) ||
                menuItemName == menuitemactionstr(PurchCommitmentWFReSubmit_PSN)))
            {
                purchCommitmentWorkflow_PSN.init(purchCommitmentHeader_PSN, menuItemName, commitmentForm.getActiveWorkflowConfiguration(), commitmentForm.getActiveWorkflowWorkItem());
            }
            else
            {
                PurchCommitmentWorkflow_PSN.init(purchCommitmentHeader_PSN, menuItemName, null, null);
            }

            if (PurchCommitmentWorkflow_PSN.dialogOk())
            {
                if (PurchCommitmentWorkflow_PSN.parmSubmit())
                {
                    PurchCommitmentWorkflow_PSN.submit();
                }
                else
                {
                    PurchCommitmentWorkflow_PSN.reSubmit();
                }

                if ((commitmentForm != null) && (menuItemName == menuitemactionstr(PurchCommitmentWFSubmit_PSN) ||
                    menuItemName == menuitemactionstr(PurchCommitmentWFReSubmit_PSN)))
                {
                    commitmentForm.updateWorkflowControls();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>