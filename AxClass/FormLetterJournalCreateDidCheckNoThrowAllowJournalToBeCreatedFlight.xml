<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
using IFeatureLifecycle = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureLifecycle;
using FeatureLifecycleStage = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.FeatureLifecycleStage;
/// <summary>
/// The <c>FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight</c> defines to consider if creating a sales journal has been successful.
/// </summary>
internal final class FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight implements IFeatureLifecycle
{
    private static FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    private static void typeNew()
    {
        instance = new FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight</c> instance.</returns>
    [Hookable(false)]
    public static FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight instance()
    {
        return FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates the stage of the feature in its lifecycle.
    /// </summary>
    /// <returns>A <c>FeatureLifeCycleState</c> value.</returns>
    [Hookable(false)]
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::PrivatePreview;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check to see if <c>FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight</c> is enabled or not.
    /// </summary>
    /// <returns>true, if enabled; otherwise, false</returns>
    [Hookable(false)]
    public static boolean isEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(FormLetterJournalCreateDidCheckNoThrowAllowJournalToBeCreatedFlight::instance());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>