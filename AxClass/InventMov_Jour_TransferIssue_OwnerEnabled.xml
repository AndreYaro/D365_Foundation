<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_Jour_TransferIssue_OwnerEnabled</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventMov_Jour_TransferIssue_OwnerEnabled</c> class is used as a data carrier together with the <c>InventUpdate</c>
///    class when the inventory is updated with inventory transfer journal line issues with consignment inventory.
/// </summary>
/// <remarks>
///    This class is used when creating or making changes to a transfer journal lines with consignment inventory.
/// </remarks>
public class InventMov_Jour_TransferIssue_OwnerEnabled extends InventMov_Jour_TransferIssue
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newMovement_Orig</Name>
				<Source><![CDATA[
    public InventMovement newMovement_Orig()
    {
        if (!inventJournalTrans.RecId)
        {
            return null;
        }
        return new InventMov_Jour_TransferIssue_OwnerEnabled(inventJournalTrans.orig(),inventType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>InventMov_Jour_TransferIssue_OwnerEnabled</c> class based on the
    ///    specified record.
    /// </summary>
    /// <param name="_inventJournalTrans">
    ///    The <c>InventJournalTrans</c> record for which the class is instantiated.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventMov_Jour_TransferIssue_OwnerEnabled</c> class.
    /// </returns>
    public static InventMov_Jour_TransferIssue_OwnerEnabled newFromInventJournalTrans(InventJournalTrans _inventJournalTrans)
    {
        return new InventMov_Jour_TransferIssue_OwnerEnabled(_inventJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCheckItemPrice</Name>
				<Source><![CDATA[
    protected boolean mustCheckItemPrice()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCreateCostTransactions</Name>
				<Source><![CDATA[
    public boolean mustCreateCostTransactions()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustExcludeFromInventoryValue</Name>
				<Source><![CDATA[
    public boolean mustExcludeFromInventoryValue()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAutoDimOwnerId</Name>
				<Source><![CDATA[
    public boolean updateAutoDimOwnerId()
    {
        if (isConfigurationKeyEnabled(configurationKeyNum(ConsignmentInbound)))
        {
            return false;
        }
        else
        {
            return super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasMandatoryInventoryOwner</Name>
				<Source><![CDATA[
    public boolean hasMandatoryInventoryOwner()
    {
        if (isConfigurationKeyEnabled(configurationKeyNum(ConsignmentInbound)))
        {
            return false;
        }
        else
        {
            return super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postEstimated</Name>
				<Source><![CDATA[
    private void postEstimated()
    {
        var estimated = InventUpd_Estimated::newInventMovement(InventMovement::construct(inventJournalTrans));

        estimated.updateNow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postPhysical</Name>
				<Source><![CDATA[
    private void postPhysical(LedgerVoucher _ledgerVoucher)
    {
        var physical = InventUpd_Physical::newCheckPostOwnerEnabledInventJournalTrans(InventMovement::construct(inventJournalTrans));

        physical.updateNow(_ledgerVoucher);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postFinancial</Name>
				<Source><![CDATA[
    private void postFinancial()
    {
        var inventUpd_FinancialLite = InventUpd_FinancialLite::newOwnerEnabledInventJournal(InventMovement::construct(inventJournalTrans));

        inventUpd_FinancialLite.updateNow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalPostTransFinancialUpdate</Name>
				<Source><![CDATA[
    protected void journalPostTransFinancialUpdate(
        LedgerVoucher           _ledgerVoucher,
        InventUpd_Financial     _financial      = null,
        CostAmount              _costAmount     = 0)
    {
        this.postPhysical(_ledgerVoucher);
        this.postFinancial();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_TransferIssue</Name>
				<Source><![CDATA[
    public InventMovement newMovement_TransferIssue()
    {
        return InventMov_Jour_TransferIssue_OwnerEnabled::newFromInventJournalTrans(this.buffer());
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_TransferReceipt</Name>
				<Source><![CDATA[
    public InventMovement newMovement_TransferReceipt()
    {
        var movement = InventMov_Jour_TransferReceipt_OwnerEnabled::newFromInventJournalTrans(this.buffer());

        movement.inventMovSubType(InventMovSubType::TransferReceipt);

        return movement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>