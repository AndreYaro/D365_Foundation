<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InvoiceListReportContractHU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract class for the Invoice list report.
/// </summary>
[
    DataContractAttribute,
    SysOperationGroup(extendedTypeStr(InvoiceDate), "@AccountsReceivable:InvoiceDate", '1'),
    SysOperationGroup(extendedTypeStr(InvoiceId), "@AccountsReceivable:InvoiceId", '2'),
    SysOperationGroup('ElectronicReporting', "@ElectronicReporting:ElectronicReporting", '3'),
    SysOperationContractProcessing(classStr(InvoiceListReportUIBuilderHU))
]
class InvoiceListReportContractHU implements SysOperationValidatable
{
    const ModelName ModelName = 'Invoice list model';

    InvoiceId fromInvoiceId, toInvoiceId;
    InvoiceDate fromDate, toDate;

    ERFormatMappingId erBinding;
    ERFileName filename;

    str query;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [
        DataMember(extendedTypeStr(FromDate)),
        SysOperationDisplayOrder('1'),
        SysOperationGroupMember(extendedTypeStr(InvoiceDate)),
        SysOperationLabel(literalstr('@SYS4083'))
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [
        DataMember(extendedTypeStr(ToDate)),
        SysOperationDisplayOrder('2'),
        SysOperationGroupMember(extendedTypeStr(InvoiceDate)),
        SysOperationLabel(literalstr('@SYS53942'))
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromInvoiceId</Name>
				<Source><![CDATA[
    [
        DataMember('FromInvoiceId'),
        SysOperationDisplayOrder('1'),
        SysOperationGroupMember(extendedTypeStr(InvoiceId)),
        SysOperationLabel(literalstr('@SYS4083'))
    ]
    public InvoiceId parmFromInvoiceId(InvoiceId _fromInvoiceId = fromInvoiceId)
    {
        fromInvoiceId = _fromInvoiceId;
        return fromInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToInvoiceId</Name>
				<Source><![CDATA[
    [
        DataMember('ToInvoiceId'),
        SysOperationDisplayOrder('2'),
        SysOperationGroupMember(extendedTypeStr(InvoiceId)),
        SysOperationLabel(literalstr('@SYS53942'))
    ]
    public InvoiceId parmToInvoiceId(InvoiceId _toInvoiceId = toInvoiceId)
    {
        toInvoiceId = _toInvoiceId;
        return toInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmERBinding</Name>
				<Source><![CDATA[
    [
        DataMember(extendedTypeStr(ERFormatMappingId)),
        SysOperationDisplayOrder('1'),
        SysOperationGroupMember('ElectronicReporting'),
        SysOperationLabel(literalstr('@ElectronicReporting:FormatMapping'))
    ]
    public ERFormatMappingId  parmERBinding(ERFormatMappingId  _erBinding = erBinding)
    {
        erBinding = _erBinding;
        return erBinding;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilename</Name>
				<Source><![CDATA[
    [
        DataMember(extendedTypeStr(ERFilename)),
        SysOperationDisplayOrder('2'),
        SysOperationGroupMember('ElectronicReporting'),
        SysOperationLabel(literalstr('@SYS16423'))
    ]
    public ERFileName parmFilename(ERFileName _filename = filename)
    {
        fileName = _filename;
        return fileName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModelName</Name>
				<Source><![CDATA[
    public static str parmModelName()
    {
        return ModelName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [DataMember, AifQueryTypeAttribute('_query', '')]
    public str parmQuery(str _query = query)
    {
        query = _query;
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    public Query getQuery()
    {
        return new Query(SysOperationHelper::base64Decode(query));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuery</Name>
				<Source><![CDATA[
    public void setQuery(Query _query)
    {
        query = SysOperationHelper::base64Encode(_query.pack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    public void initQuery()
    {
        Query newQuery = new Query();
        QueryBuildDataSource qbds;

        qbds = newQuery.addDataSource(tableNum(CustInvoiceJour));
        qbds.label("@SYS191694");
        SysQuery::findOrCreateRange(qbds,fieldNum(CustInvoiceJour, InvoiceId));
        SysQuery::findOrCreateRange(qbds,fieldNum(CustInvoiceJour, InvoiceDate));

        qbds = newQuery.addDataSource(tableNum(ProjInvoiceJour));
        SysQuery::findOrCreateRange(qbds,fieldNum(ProjInvoiceJour, ProjInvoiceId));
        SysQuery::findOrCreateRange(qbds,fieldNum(ProjInvoiceJour, InvoiceDate));

        qbds = newQuery.addDataSource(tableNum(CzCustAdvanceInvoiceTable));
        qbds.label("@AccountsReceivable:CustomerAdvanceInvoice");
        SysQuery::findOrCreateRange(qbds,fieldNum(CzCustAdvanceInvoiceTable, InvoiceId));
        SysQuery::findOrCreateRange(qbds,fieldNum(CzCustAdvanceInvoiceTable, InvoiceDate));

        qbds = newQuery.addDataSource(tableNum(CzVendAdvanceInvoiceTable));
        qbds.label("@AccountsReceivable:VendorAdvanceInvoice");
        SysQuery::findOrCreateRange(qbds,fieldNum(CzVendAdvanceInvoiceTable, InvoiceId));
        SysQuery::findOrCreateRange(qbds,fieldNum(CzVendAdvanceInvoiceTable, InvoiceDate));

        this.setQuery(newQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object _calledFrom = null)
    {
        boolean ret = true;;

        if (fromDate && toDate && (fromDate > toDate))
        {
            ret = checkFailed("@SYS120590");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>