<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RHRMEmplReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RHRMEmplReference
{
    date                        curDate;
    ComWordDocument_RU          wordDocument;
    COM                         document;
    RHRMEmplTable               emplTable;
    RHRMPersonTable             personTable;
    RPayHistory                 rPayHistoryRecieve;
    FormRun                     animationForm;
    FormAnimateControl          animationControl;
    FilePath                    animationFile;
    #macrolib.RHRMMSOfficeConstant
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>animationBoxCaption</Name>
				<Source><![CDATA[
    private str animationBoxCaption()
    {
        return "@RUP1606";
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillFields</Name>
				<Source><![CDATA[
    private void fillFields()
    {
        CompanyInfo             company = CompanyInfo::find();
        LogisticsPostalAddress  address = company.postalAddress();
        RPayHistory             rPayHistory;

        wordDocument.insertValue(#CompanyCountry,  LogisticsAddressCountryRegion::name(address.CountryRegionId));
        wordDocument.insertValue(#CompanyName1,    company.Name);
        wordDocument.insertValue(#CompanyAddress,  address.getAddressAsLine_RU());
        wordDocument.insertValue(#Day,             int2str(dayofmth(curDate)));
        wordDocument.insertValue(#Month,           mthname(mthofyr(curDate)));
        wordDocument.insertValue(#Year,            year(curDate));
        wordDocument.insertValue(#CompanyName2,    company.Name);
        wordDocument.insertValue(#EmplName,        emplTable.name());
        wordDocument.insertValue(#Pronoun,         this.getPronoun());
        wordDocument.insertValue(#Verb,            this.getVerb());
        wordDocument.insertValue(#EmplPosition,    this.getEmplPosition());
        rPayHistory = this.getLastOrderHistory();
        wordDocument.insertValue(#OrderNum,        this.getOrderNum(rPayHistory));
        wordDocument.insertValue(#OrderDate,       this.getEmplOrderDate(rPayHistory));
        wordDocument.insertValue(#EmplStartDate,   this.getEmplStartDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEmplOrderDate</Name>
				<Source><![CDATA[
    #define.Value123(123)
    #define.Value2(2)
    private str getEmplOrderDate(RPayHistory _rPayHistory)
    {
        return date2str(_rPayHistory.hrmOrderDate, #Value123, #Value2, #Value2, #Value2, #Value2, #Value2, DateFlags::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEmplPosition</Name>
				<Source><![CDATA[
    private str getEmplPosition()
    {
        return emplTable.titleId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEmplStartDate</Name>
				<Source><![CDATA[
    #define.Value123(123)
    #define.Value2(2)
    private str getEmplStartDate()
    {
        return date2str(emplTable.PayEmploymentDate, #Value123, #Value2, #Value2, #Value2, #Value2, #Value2, DateFlags::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastOrderHistory</Name>
				<Source><![CDATA[
    private RPayHistory getLastOrderHistory()
    {
        RPayHistory rPayHistory, rPayHistoryExists;
        StartDate   startDate = maxDate();

        select firstonly rPayHistory
            order StartDate desc, TransTime desc
            where rPayHistory.Number           == emplTable.EmployeeId      &&
                  rPayHistory.StartDate        >  rPayHistoryRecieve.StartDate &&
                  (rPayHistory.OperationType   == RHRMJournalType::Transfer ||
                  rPayHistory.OperationType    == RHRMJournalType::Receive) &&
                  rPayHistory.HcmTitle         == emplTable.HcmTitle
        notexists join rPayHistoryExists
            where rPayHistoryExists.Number      == rPayHistory.Number &&
                  rPayHistoryExists.StartDate   <  rPayHistory.StartDate &&
                  rPayHistoryExists.HcmTitle    == rPayHistory.HcmTitle &&
                  rPayHistory.StartDate         >  rPayHistoryRecieve.StartDate;

        if (!rPayHistory)
        {
            rPayHistory = rPayHistoryRecieve;
        }

        return rPayHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrderNum</Name>
				<Source><![CDATA[
    private str getOrderNum(RPayHistory _rPayHistory)
    {
        return _rPayHistory.hrmOrderNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPronoun</Name>
				<Source><![CDATA[
    private str getPronoun()
    {
        return personTable.Gender == RHRMGender::Male ? "@RUP1607":
               personTable.Gender == RHRMGender::Female ? "@RUP1608": "@RUP1691";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVerb</Name>
				<Source><![CDATA[
    private str getVerb()
    {
        if  (this.isEmplWorkingNow())
            return "@RUP1609";
        else
            return personTable.Gender == RHRMGender::Male ? "@RUP1610" :
                   personTable.Gender == RHRMGender::Female ? "@RUP1611" : "@RUP1692";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEmplWorkingNow</Name>
				<Source><![CDATA[
    private boolean isEmplWorkingNow()
    {
        return emplTable.PayEmploymentDate && ! emplTable.PayResignedDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeDocument</Name>
				<Source><![CDATA[
    private void makeDocument()
    {
        resourceNode rn  = SysResource::getResourceNode(classId2Name(classIdGet(this)));
        str templateFile;

        rn.AOTload();
        templateFile = SysResource::saveToTempFile(rn, false);

        if (! winApi::fileExists(templateFile))
            throw error(strfmt("@GLS106466", templateFile));

        this.showAnimationBox();

        wordDocument = new ComWordDocument_RU();

        wordDocument.newFile(templateFile, false);
        document = wordDocument.getComDocument();

        this.fillFields();
        this.unlinkFields();
        this.resetSelection();

        wordDocument.visible(true);
        wordDocument.finalize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(RHRMEmplTable _emplTable)
    {
        emplTable   =  _emplTable;
        personTable = emplTable.personTable();
        curDate     = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetSelection</Name>
				<Source><![CDATA[
    private void resetSelection()
    {
        COM         activeWindow;
        COM         selection;

        activeWindow = document.activeWindow();
        selection    = activeWindow.selection();
        selection.homeKey(6);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    private void run()
    {
        RPayHistory rPayHistoryDissmiss;

        rPayHistoryRecieve = RPayHistory::findLastOperation(emplTable.EmployeeId, RHRMJournalType::Receive);
        rPayHistoryDissmiss = RPayHistory::findLastOperation(emplTable.EmployeeId, RHRMJournalType::Dismiss);

        if (rPayHistoryRecieve &&
            (!rPayHistoryDissmiss || rPayHistoryDissmiss.StartDate < rPayHistoryRecieve.StartDate))
        {
            this.makeDocument();
        }
        else
        {
            info("@GLS101555");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showAnimationBox</Name>
				<Source><![CDATA[
    private void showAnimationBox()
    {
        Args                  args;
        FormStaticTextControl text;

        if (winApi::fileExists(xInfo::directory(DirectoryType::Include) + #107avi))
        {
            animationFile = xInfo::directory(DirectoryType::Include) + #107avi;
            args = new Args(formstr(RHRMAnimationBox));
            animationForm = classfactory.formRunClass(args);
            animationForm.init();
            animationForm.design().caption(this.animationBoxCaption());
            animationControl = animationForm.design().controlName(#AnimationControl);
            animationControl.animateFile(animationFile);

            text = animationForm.design().controlName(#Text);

            text.text("@RUP1810");

            animationForm.run();
            animationControl.play();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unlinkFields</Name>
				<Source><![CDATA[
    private void unlinkFields()
    {
        COM         fields;

        fields = document.fields();
        fields.unlink();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RHRMEmplReference  emplReference;
        RHRMEmplTable          parEmplTable;

        if (! _args || _args.dataset() != tablenum(RHRMEmplTable))
            throw(error(strfmt("@SYS19306", funcname())));

        parEmplTable = _args.record();
        emplReference = new RHRMEmplReference(parEmplTable);
        emplReference.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>