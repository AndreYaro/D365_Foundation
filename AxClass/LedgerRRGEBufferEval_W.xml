<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEBufferEval_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class LedgerRRGEBufferEval_W
{
    LedgerRRGEBufferEval_W      parent;
    LedgerRRGOperationParm_RU   parms;
    Map                         datasourcesMap;
    boolean                     evaluated;
    str                         value;
    str                         updatedKeyCode;
    Common                      buffer;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowUpdateKeyCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean allowUpdateKeyCode()
    {
        if (parent)
        {
            return parent.allowUpdateKeyCode();
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buffer</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Common buffer()
    {
        return buffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentEvaluator</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEBufferEval_W currentEvaluator(LedgerRRGEBufferEval_W _currentEvaluator = null)
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEDatasourceQuery_W datasourceQuery(LedgerRRGEQueryRecId_W _queryRecId, LedgerRRGEDocuments_W _document = null)
    {
        LedgerRRGEDatasourceQuery_W datasourceQuery;

        if (parent)
        {
            return parent.datasourceQuery(_queryRecId, _document);
        }

        if (!datasourcesMap)
        {
            datasourcesMap = new Map(Types::Int64, Types::Class);
        }

        if (datasourcesMap.exists(_queryRecId))
        {
            datasourceQuery = datasourcesMap.lookup(_queryRecId);
        }
        else
        {
            datasourceQuery = LedgerRRGEQueries_W::datasourceQuery(_queryRecId, _document, false);
            datasourcesMap.insert(_queryRecId, datasourceQuery);
        }

        return datasourceQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteWorksheet</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void deleteWorksheet(str _worksheet)
    {
        if (parent)
        {
            parent.deleteWorksheet(_worksheet);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>document</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEDocuments_W document(LedgerRRGEDocuments_W _document = null)
    {
        if (!prmisDefault(_document))
        {
            parms.document(_document);
        }

        return parms.document();
    }

]]></Source>
			</Method>
			<Method>
				<Name>eval</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    abstract protected str eval()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPropertyValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str findPropertyValue(LedgerRRGEPropertyId_W _propertyId)
    {
        if (_propertyId && parent)
        {
            return parent.findPropertyValue(_propertyId);
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBuffer</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromBuffer(Common _buffer)
    {
        if (parent)
        {
            parms = parent.parms();
        }

        parms = LedgerRRGOperationParm_RU::newFromBuffer(_buffer, parms);
        buffer.data(_buffer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>keyCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str keyCode()
    {
        if (parent)
        {
            return parent.keyCode();
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkToTableId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void linkToTableId(LedgerRRGEQueryRecId_W _queryRecId, int _tableId)
    {
        if (parent)
        {
            parent.linkToTableId(_queryRecId, _tableId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWorksheetName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str newWorksheetName(str _worksheetName)
    {
        if (parent)
        {
            return parent.newWorksheetName(_worksheetName);
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parent</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEBufferEval_W parent(LedgerRRGEBufferEval_W _parent = parent)
    {
        parent = _parent;
        return parent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parms</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGOperationParm_RU parms(LedgerRRGOperationParm_RU _parms = parms)
    {
        parms = _parms;
        return parms;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void reset()
    {
        evaluated = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startEvaluation</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void startEvaluation()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>stopEvaluation</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void stopEvaluation()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatedKeyCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str updatedKeyCode()
    {
        if (!evaluated)
        {
            this.value();
        }

        return updatedKeyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateKeyCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateKeyCode(str _keyCode)
    {
        updatedKeyCode = _keyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>value</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str value()
    {
        if (!evaluated)
        {
            value       = this.eval();
            evaluated   = true;
        }

        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>evalBuffer</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static server str evalBuffer(Common _buffer, LedgerRRGEBufferEval_W _parent = null)
    {
        return LedgerRRGEBufferEval_W::newFromBuffer(_buffer, _parent).eval();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBuffer</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static server LedgerRRGEBufferEval_W newFromBuffer(Common _buffer, LedgerRRGEBufferEval_W _parent = null)
    {
        LedgerRRGEBufferEval_W  bufferEval;

        if (!_buffer)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        switch(_buffer.TableId)
        {
            case tableNum(LedgerRRGOperationTable_RU):
                bufferEval = LedgerRRGEBufferEvalOperation_W::construct();
                break;

            case tableNum(LedgerRRGCellTable_RU):
                bufferEval = LedgerRRGEBufferEvalCellTable_W::construct();
                break;

            case tableNum(LedgerRRGEQueries_W):
                bufferEval = LedgerRRGEBufferEvalEQuery_W::construct();
                break;

            case tableNum(LedgerRRGReportTable_RU):
                bufferEval = LedgerRRGEBufferEvalReport_W::construct();
                break;

            case tableNum(LedgerRRGEProperties_W):
                bufferEval = LedgerRRGEBufferEvalProperty_W::construct();
                break;

        }

        if (!bufferEval)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        bufferEval.parent(_parent);
        bufferEval.initFromBuffer(_buffer);

        return bufferEval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueFromBuffer</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static server str valueFromBuffer(Common _buffer, LedgerRRGEBufferEval_W _parent = null)
    {
        return LedgerRRGEBufferEval_W::newFromBuffer(_buffer, _parent).value();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>