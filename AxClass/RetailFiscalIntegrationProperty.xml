<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalIntegrationProperty</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailFiscalIntegrationProperty</c> class is the fiscal integration property class.
/// </summary>
public class RetailFiscalIntegrationProperty
{
    // Property
    private str ns; // Can't use namespace, compiler says its a reserved word for future use
    private str name;
    private str displayName;
    private str description;
    private str displayDescription;
    private str stringValue;
    private FalseTrue isEncrypted;
    private FalseTrue isPassword;
    private FalseTrue isReadonly;
    private FalseTrue isHidden;
    private LanguageId languageId;
    private Str60 sequenceNumber;
    private int displayHeight;
    private boolean booleanValue;
    private boolean isDisplayValueNodeExist;
    private boolean isDisplayPropertyNodeExist;
    private utcdatetime dateTimeValue;
    private real decimalValue;
    private int intValue;
    private str axEDTName;

    private RetailFiscalIntegrationProperties propertyListValue;
    private RetailFiscalIntegrationConnectorPropertyDataType valueType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmBooleanValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean parmBooleanValue(boolean _value = booleanValue)
    {
        booleanValue = _value;
        return booleanValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateTimeValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public utcdatetime parmDateTimeValue(utcdatetime _value = dateTimeValue)
    {
        dateTimeValue = _value;
        return dateTimeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDecimalValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public real parmDecimalValue(real _value = decimalValue)
    {
        decimalValue = _value;
        return decimalValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Description parmDescription(Description _description = description)
    {
        description = _description;
        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayDescription</Name>
				<Source><![CDATA[
    public str parmDisplayDescription(str _displayDescription = displayDescription)
    {
        displayDescription = _displayDescription;
        return displayDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayHeight</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public int parmDisplayHeight(int _dispalyHeight = displayHeight)
    {
        displayHeight = _dispalyHeight;
        return displayHeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmDisplayName(str _displayName = displayName)
    {
        displayName = _displayName;
        return displayName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntegerValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public int parmIntegerValue(int _value = intValue)
    {
        intValue = _value;
        return intValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsDisplayValueNodeExist</Name>
				<Source><![CDATA[
    public boolean parmIsDisplayValueNodeExist(boolean _isDisplayValueNodeExist = isDisplayValueNodeExist)
    {
        isDisplayValueNodeExist = _isDisplayValueNodeExist;
        return isDisplayValueNodeExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsDisplayPropertyNodeExist</Name>
				<Source><![CDATA[
    public boolean parmIsDisplayPropertyNodeExist(boolean _isDisplayPropertyNodeExist = isDisplayPropertyNodeExist)
    {
        isDisplayPropertyNodeExist = _isDisplayPropertyNodeExist;
        return isDisplayPropertyNodeExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsEncrypted</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FalseTrue parmIsEncrypted(FalseTrue _isEncrypted = isEncrypted)
    {
        isEncrypted = _isEncrypted;
        return isEncrypted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPassword</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FalseTrue parmIsPassword(FalseTrue _isPassword = isPassword)
    {
        isPassword = _isPassword;
        return isPassword;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsReadonly</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FalseTrue parmIsReadonly(FalseTrue _isReadonly = isReadonly)
    {
        isReadonly = _isReadonly;
        return isReadonly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsHidden</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FalseTrue parmIsHidden(FalseTrue _isHidden = isHidden)
    {
        isHidden = _isHidden;
        return isHidden;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLanguageId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LanguageId parmLanguageId(LanguageId _languageId = languageId)
    {
        languageId = _languageId;
        return languageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmName(str _name = name)
    {
        name = _name;
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNamespace</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmNamespace(str _namespace = ns)
    {
        ns = _namespace;
        return ns;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSequenceNumber</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Str60 parmSequenceNumber(Str60 _sequenceNumber = sequenceNumber)
    {
        sequenceNumber = _sequenceNumber;
        return sequenceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStringValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmStringValue(str _value = stringValue)
    {
        stringValue = _value;
        return stringValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValueType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RetailFiscalIntegrationConnectorPropertyDataType parmValueType(RetailFiscalIntegrationConnectorPropertyDataType _valueType = valueType)
    {
        valueType = _valueType;
        return valueType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAxEDTName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str parmAxEDTName(str _value = axEDTName)
    {
        axEDTName = _value;
        return axEDTName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertStr2ConnectorType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts a str data type to a <c>RetailFiscalIntegrationConnectorType</c> enumeration.
    /// </summary>
    /// <param name = "_connectorType">
    /// The str value needs to be converted.
    /// </param>
    /// <returns>
    /// A value in the <c>RetailFiscalIntegrationConnectorType</c> enumeration.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// An unrecognized data type was encountered.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RetailFiscalIntegrationConnectorType convertStr2ConnectorType(str _connectorType)
    {
        switch (_connectorType)
        {
            case 'Internal' :
                return RetailFiscalIntegrationConnectorType::Internal;
            case 'External' :
                return RetailFiscalIntegrationConnectorType::External;
            case 'Local' :
                return RetailFiscalIntegrationConnectorType::Local;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>toDataType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts a str data type to a <c>RetailFiscalIntegrationConnectorPropertyDataType</c> enumeration.
    /// </summary>
    /// <param name="_dataType">
    /// The str value needs to be converted.
    /// </param>
    /// <returns>
    /// A value in the <c>RetailFiscalIntegrationConnectorPropertyDataType</c> enumeration.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// An unrecognized data type was encountered.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RetailFiscalIntegrationConnectorPropertyDataType toDataType(str _dataType)
    {
        switch (_dataType)
        {
            case 'Boolean':
                return RetailFiscalIntegrationConnectorPropertyDataType::Boolean;
            case 'DateTime':
                return RetailFiscalIntegrationConnectorPropertyDataType::DateTime;
            case 'Decimal':
                return RetailFiscalIntegrationConnectorPropertyDataType::Decimal;
            case 'Integer':
                return RetailFiscalIntegrationConnectorPropertyDataType::Integer;
            case 'String':
                return RetailFiscalIntegrationConnectorPropertyDataType::String;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>toFalseTrue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts a str data type to a <c>FalseTrue</c> enumeration.
    /// </summary>
    /// <param name = "_falseTrue">
    /// The str value needs to be converted.
    /// </param>
    /// <returns>
    /// A value in the <c>FalseTrue</c> enumeration.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// An unrecognized data type was encountered.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static FalseTrue toFalseTrue(str _falseTrue)
    {
        switch (_falseTrue)
        {
            case 'false' :
                return FalseTrue::False;
            case 'true' :
                return FalseTrue::True;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>