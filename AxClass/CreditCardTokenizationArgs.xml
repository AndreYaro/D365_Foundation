<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardTokenizationArgs</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class encapsulates the argument object for credit card tokenization form.
/// </summary>
class CreditCardTokenizationArgs
{
    str tokenizationPageUrl;
    str tokenizationContent;
    str tokenizationPageSubmitUrl;
    str tokenizationMessageOrigin;
    str note;
    str tokenAccessCode;
    boolean promptForTokenScope;
    RetailTokenScope tokenScope;
    boolean isSupportSalesOrderScope;
    private RetailTokenScope tokenScopeOverride;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmTokenizationPageUrl</Name>
				<Source><![CDATA[
    public str parmTokenizationPageUrl(str _tokenizationPageUrl = '')
    {
        if (!prmisdefault(_tokenizationPageUrl))
        {
            tokenizationPageUrl = _tokenizationPageUrl;
        }

        return tokenizationPageUrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTokenizationContent</Name>
				<Source><![CDATA[
    public str parmTokenizationContent(str _tokenizationContent = '')
    {
        if (!prmisdefault(_tokenizationContent))
        {
            tokenizationContent = _tokenizationContent;
        }

        return tokenizationContent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTokenizationPageSubmitUrl</Name>
				<Source><![CDATA[
    public str parmTokenizationPageSubmitUrl(str _tokenizationPageSubmitUrl = '')
    {
        if (!prmisdefault(_tokenizationPageSubmitUrl))
        {
            tokenizationPageSubmitUrl = _tokenizationPageSubmitUrl;
        }

        return tokenizationPageSubmitUrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTokenizationMessageOrigin</Name>
				<Source><![CDATA[
    public str parmTokenizationMessageOrigin(str _tokenizationMessageOrigin = '')
    {
        if (!prmisdefault(_tokenizationMessageOrigin))
        {
            tokenizationMessageOrigin = _tokenizationMessageOrigin;
        }

        return tokenizationMessageOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNote</Name>
				<Source><![CDATA[
    public str parmNote(str _note = '')
    {
        if (!prmisdefault(_note))
        {
            note = _note;
        }

        return note;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTokenAccessCode</Name>
				<Source><![CDATA[
    public str parmTokenAccessCode(str _tokenAccessCode = '')
    {
        if (!prmisdefault(_tokenAccessCode))
        {
            tokenAccessCode = _tokenAccessCode;
        }

        return tokenAccessCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPromptForTokenScope</Name>
				<Source><![CDATA[
    internal boolean parmPromptForTokenScope(boolean _promptForTokenScope = false)
    {
        if (!prmisdefault(_promptForTokenScope))
        {
            promptForTokenScope = _promptForTokenScope;
        }

        return promptForTokenScope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTokenScope</Name>
				<Source><![CDATA[
    internal RetailTokenScope parmTokenScope(RetailTokenScope _tokenScope = RetailTokenScope::Unknown)
    {
        if (!prmisdefault(_tokenScope))
        {
            tokenScope = _tokenScope;
        }

        return tokenScope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsSupportSalesOrderScope</Name>
				<Source><![CDATA[
    internal boolean parmIsSupportSalesOrderScope(boolean _isSupportSalesOrderScope = false)
    {
        if (!prmisdefault(_isSupportSalesOrderScope))
        {
            isSupportSalesOrderScope = _isSupportSalesOrderScope;
        }

        return isSupportSalesOrderScope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTokenScopeOverride</Name>
				<Source><![CDATA[
    internal RetailTokenScope parmTokenScopeOverride(RetailTokenScope _tokenScopeOverride = RetailTokenScope::Unknown)
    {
        if (!prmisdefault(_tokenScopeOverride))
        {
            tokenScopeOverride = _tokenScopeOverride;
        }

        return tokenScopeOverride;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>