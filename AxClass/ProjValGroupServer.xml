<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjValGroupServer</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjValGroupServer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addEmplCategoryGroupToCategory</Name>
				<Source><![CDATA[
    static void addEmplCategoryGroupToCategory(container projLine, ProjCategoryId _categoryId)
    {
        int                         i;
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        ProjValEmplCategoryGroupId  groupId;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId     = conPeek(projLine, i);
            projValEmplCategorySetUp.GroupId    = groupId;
            projValEmplCategorySetUp.CategoryId = _categoryId;
            if (projValEmplCategorySetUp.validateWrite())
            {
                projValEmplCategorySetUp.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEmplCategoryGroupToResource</Name>
				<Source><![CDATA[
    static void addEmplCategoryGroupToResource(container projLine, ResourceRecId _resourceRecId)
    {
        int                         i;
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        ProjValEmplCategoryGroupId  groupId;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId     = conPeek(projLine, i);
            projValEmplCategorySetUp.GroupId    = groupId;
            projValEmplCategorySetUp.Resource   = _resourceRecId;            
            if (projValEmplCategorySetUp.validateWrite())
            {
                projValEmplCategorySetUp.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEmplProjGroupToProj</Name>
				<Source><![CDATA[
    static void addEmplProjGroupToProj(container _projLine, ProjId _projId)
    {
        ProjValEmplProjSetup projValEmplProjSetup;

        for (int i = 1; i <= conLen(_projLine); i++)
        {
            ProjValEmplProjGroupId groupId = conPeek(_projLine, i);

            projValEmplProjSetup.initValue();
            projValEmplProjSetup.GroupId = groupId;
            projValEmplProjSetup.Projid = _projId;

            if (projValEmplProjSetup.validateWrite())
            {
                ttsbegin;
                projValEmplProjSetup.insert();
				ttscommit;
			}
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEmplProjGroupToResource</Name>
				<Source><![CDATA[
    static void addEmplProjGroupToResource(container projLine, ResourceRecId _resourceRecId)
    {
        int                         i;
        ProjValEmplProjSetup    projValEmplProjSetup;
        ProjValEmplProjGroupId  groupId;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId     = conPeek(projLine, i);
            projValEmplProjSetup.GroupId    = groupId;
            projValEmplProjSetup.Resource   = _resourceRecId;
            if (projValEmplProjSetup.validateWrite())
            {
                projValEmplProjSetup.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addProjCategoryGroupToCategory</Name>
				<Source><![CDATA[
    static void addProjCategoryGroupToCategory(container projLine, ProjCategoryId _categoryId)
    {
        int                         i;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        ProjValProjCategoryGroupId  groupId;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId     = conPeek(projLine, i);
            projValProjCategorySetUp.GroupId    = groupId;
            projValProjCategorySetUp.CategoryId = _categoryId;
            if (projValProjCategorySetUp.validateWrite())
            {
                projValProjCategorySetUp.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addProjCategoryGroupToProj</Name>
				<Source><![CDATA[
    static void addProjCategoryGroupToProj(container projLine, ProjId _projId)
    {
        int                         i;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        ProjValProjCategoryGroupId  groupId;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId     = conPeek(projLine, i);
            projValProjCategorySetUp.GroupId    = groupId;
            projValProjCategorySetUp.ProjId     = _projId;
            if (projValProjCategorySetUp.validateWrite())
            {
                projValProjCategorySetUp.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEmplCategoryGroupFromCategory</Name>
				<Source><![CDATA[
    static void deleteEmplCategoryGroupFromCategory(container projLine, ProjCategoryId _categoryId)
    {
        ProjValEmplCategoryGroupId  groupId;
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId = conPeek(projLine, i);

            delete_from projValEmplCategorySetUp
                where projValEmplCategorySetUp.GroupId      == groupId &&
                        projValEmplCategorySetUp.CategoryId   == _categoryId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEmplCategoryGroupFromResource</Name>
				<Source><![CDATA[
    static void deleteEmplCategoryGroupFromResource(container projLine, ResourceRecId _resourceRecId)
    {
        ProjValEmplCategoryGroupId  groupId;
        ProjValEmplCategorySetUp    projValEmplCategorySetUp;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId = conPeek(projLine, i);

            delete_from projValEmplCategorySetUp
                where projValEmplCategorySetUp.GroupId == groupId &&
                        projValEmplCategorySetUp.Resource == _resourceRecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEmplProjGroupFromResource</Name>
				<Source><![CDATA[
    static void deleteEmplProjGroupFromResource(container projLine, ResourceRecId _resourceRecId)
    {
        ProjValEmplProjGroupId  groupId;
        ProjValEmplProjSetup    projValEmplProjSetup;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId = conPeek(projLine, i);

            delete_from projValEmplProjSetup
                where projValEmplProjSetup.GroupId == groupId &&
                        projValEmplProjSetup.Resource == _resourceRecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProjCategoryGroupFromCategory</Name>
				<Source><![CDATA[
    static void deleteProjCategoryGroupFromCategory(container projLine, ProjCategoryId _categoryId)
    {
        ProjValProjCategoryGroupId  groupId;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId = conPeek(projLine, i);

            delete_from projValProjCategorySetUp
                where projValProjCategorySetUp.GroupId      == groupId &&
                        projValProjCategorySetUp.CategoryId   == _categoryId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProjCategoryGroupFromProj</Name>
				<Source><![CDATA[
    static void deleteProjCategoryGroupFromProj(container projLine, ProjId _projId)
    {
        ProjValProjCategoryGroupId  groupId;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        int i;

        for (i=1; i<=conLen(projLine); i++)
        {
            groupId = conPeek(projLine, i);

            delete_from projValProjCategorySetUp
                where projValProjCategorySetUp.GroupId == groupId &&
                        projValProjCategorySetUp.ProjId  == _projId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaAddProjCategoryGroupToProjInvoice</Name>
				<Source><![CDATA[
    [SysObsoleteAttribute('This method is no longer needed because  ProjValProjCategorySetUp.PSAProjInvoiceProjId field is obsolete.', false, 15\09\2018)]
    // Define validation on project invoice table
    static void psaAddProjCategoryGroupToProjInvoice(container projLine, ProjInvoiceProjId _sProjInvoiceProjId)
    {
        int                         i;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        ProjValProjCategoryGroupId  groupId;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            for (i=1; i<=conLen(projLine); i++)
            {
                groupId     = conPeek(projLine, i);
                projValProjCategorySetUp.GroupId    = groupId;
                projValProjCategorySetUp.psaProjInvoiceProjId = _sProjInvoiceProjId;
                if (projValProjCategorySetUp.validateWrite())
                {
                    projValProjCategorySetUp.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaDeleteProjCategoryGroupFromProjInvoic</Name>
				<Source><![CDATA[
    [SysObsoleteAttribute('This method is no longer needed because  ProjValProjCategorySetUp.PSAProjInvoiceProjId field is obsolete.', false, 15\09\2018)]
    // Define validation on project invoice table
    static void psaDeleteProjCategoryGroupFromProjInvoic(container projLine, ProjInvoiceProjId _sProjInvoiceProjId)
    {
        ProjValProjCategoryGroupId  groupId;
        ProjValProjCategorySetUp    projValProjCategorySetUp;
        int i;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            for (i=1; i<=conLen(projLine); i++)
            {
                groupId = conPeek(projLine, i);

                delete_from projValProjCategorySetUp
                    where projValProjCategorySetUp.GroupId == groupId &&
                            projValProjCategorySetUp.psaProjInvoiceProjId == _sProjInvoiceProjId;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>