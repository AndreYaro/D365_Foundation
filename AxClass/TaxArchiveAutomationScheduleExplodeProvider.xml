<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxArchiveAutomationScheduleExplodeProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>TaxArchiveAutomationScheduleExplodeProvider</c> class is designed to handle criteria records upon occurrence explosion.
/// </summary>
[ExportMetadata(extendedTypeStr(ProcessScheduleTypeName), 'TaxArchiveAutomation')]
[Export(identifierStr(Dynamics.AX.Application.ProcessScheduleIExplodeOccurrences))]
internal final class TaxArchiveAutomationScheduleExplodeProvider implements ProcessScheduleIExplodeOccurrences
{
    private TaxArchiveAutomationCriteria automationCriteria;
    private TaxArchiveAutomationCriteria automationCriteriaSelect;
    private ProcessScheduleSeriesOccurrenceTmp occurrencesExplodedTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>explodeOccurrences</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event that fires when occurrences are created in the schedule.
    /// </summary>
    /// <param name = "_occurrencesExplodedTmp">Temporary table containing the occurrences that were created.</param>
    [Hookable(false)]
    public void explodeOccurrences(ProcessScheduleSeriesOccurrenceTmp _occurrencesExplodedTmp)
    {
        occurrencesExplodedTmp.linkPhysicalTableInstance(_occurrencesExplodedTmp);

        SysDaInsertObject scheduleExplodeInsertObject = this.buildInsertObject();
        SysDaInsertStatement scheduleExplodeInsertStatement = new SysDaInsertStatement();

        scheduleExplodeInsertStatement.insert(scheduleExplodeInsertObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInsertObject</Name>
				<Source><![CDATA[
    private SysDaInsertObject buildInsertObject()
    {
        SysDaInsertObject scheduleExplodeInsertObject = new SysDaInsertObject(automationCriteria);

        SysDaQueryObject scheduleExplodeInsertQuery = this.buildInsertQueryObject();

        scheduleExplodeInsertObject.query(scheduleExplodeInsertQuery);
        scheduleExplodeInsertObject.fields()
            .add(fieldStr(TaxArchiveAutomationCriteria, TaxArchiveTrans))
            .add(fieldStr(TaxArchiveAutomationCriteria, ProcessScheduleOccurrence));

        return scheduleExplodeInsertObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInsertQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject buildInsertQueryObject()
    {
        SysDaQueryObject scheduleExplodeInsertQuery;

        scheduleExplodeInsertQuery =
            SysDaQueryObjectBuilder::from(automationCriteriaSelect)
                .select(fieldStr(TaxArchiveAutomationCriteria, TaxArchiveTrans))
                .innerJoin(occurrencesExplodedTmp)
                    .select(fieldStr(ProcessScheduleSeriesOccurrenceTmp, ProcessScheduleOccurrence))
                    .where(occurrencesExplodedTmp, fieldStr(ProcessScheduleSeriesOccurrenceTmp, ProcessScheduleSeries))
                        .isEqualTo(automationCriteriaSelect, fieldStr(TaxArchiveAutomationCriteria, ProcessScheduleSeries))
                    .where(occurrencesExplodedTmp, fieldStr(ProcessScheduleSeriesOccurrenceTmp, TypeName))
                        .isEqualToLiteral(TaxArchiveAutomationConstants::RegisteredTypeName)
            .toSysDaQueryObject();

        return scheduleExplodeInsertQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>