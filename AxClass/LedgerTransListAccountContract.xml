<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTransListAccountContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerTransListAccountContract</c> class is the Data Contract class for the
///    <c>LedgerTransListAccount</c> SSRS report.
/// </summary>
[DataContract]
[SysOperationGroup('Date', "@SYS7402", '1')]
[SysOperationGroup('PrintOut',"@SYS12608",'2')]
[SysOperationContractProcessing(classstr(LedgerTransListAccountUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)]
public class LedgerTransListAccountContract implements SysOperationValidatable
{
    boolean taxSpecification;
    boolean displayCompanyForLedgerAccount;
    boolean includeReversed;
    TransDate fromDate;
    TransDate toDate;
    DateCode dateCode;
    boolean summaryOnly;

    // The following parameters are not shown to the user.
    str hiddenSysVersion;
    DirPartyName userName;
    boolean displayDescription;
    TitleFields reportTitle;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDateCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter dateCode.
    /// </summary>
    /// <param name="_dateCode">
    /// The new value of the datacontract parameter dateCode.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter dateCode.
    /// </returns>
    [
        DataMember('DateCode'),
        SysOperationLabel(literalstr("@SYS22526")),
        SysOperationHelpText(literalstr("@SYS60051")),
        SysOperationGroupMember('Date'),
        SysOperationDisplayOrder('1')
    ]
    public DateCode parmDateCode(DateCode _dateCode = dateCode)
    {
        dateCode = _dateCode;
        return dateCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayCompanyForLedgerAccount</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(DisplayCompanyForLedgerAccount))]
    public boolean parmDisplayCompanyForLedgerAccount(boolean _displayCompanyForLedgerAccount = displayCompanyForLedgerAccount)
    {
        displayCompanyForLedgerAccount = _displayCompanyForLedgerAccount;
        return displayCompanyForLedgerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDisplayDescription</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(DisplayDescription))]
    public boolean parmDisplayDescription(boolean _displayDescription = displayDescription)
    {
        displayDescription = _displayDescription;
        return displayDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromdate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter fromdate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter fromdate.
    /// </returns>
    [
        DataMember('FromDate'),
        SysOperationLabel(literalstr("@SYS5209")),
        SysOperationHelpText(literalstr("@SYS67")),
        SysOperationGroupMember('Date'),
        SysOperationDisplayOrder('2')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeReversed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter IncludeReversed.
    /// </summary>
    /// <param name="_includeReversed">
    /// The new value of the data contract parameter IncludeReversed; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter IncludeReversed.
    /// </returns>
    [
        DataMember('IncludeReversed'),
        SysOperationLabel(literalstr("@SYS78625")),
        SysOperationHelpText(literalstr("@SYS78627")),
        SysOperationGroupMember('PrintOut'),
        SysOperationDisplayOrder('2')
    ]
    public boolean parmIncludeReversed(boolean _includeReversed = includeReversed)
    {
        includeReversed = _includeReversed;
        return includeReversed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSummaryOnly</Name>
				<Source><![CDATA[
    [
        DataMember('SummaryOnly'),
        SysOperationLabel(literalStr("@GeneralLedger:SummaryOnly")),
        SysOperationHelpText(literalStr("@GeneralLedger:SummaryOnly")),
        SysOperationGroupMember('PrintOut'),
        SysOperationDisplayOrder('3')
    ]
    public boolean parmSummaryOnly(boolean _summaryOnly = summaryOnly)
    {
        summaryOnly = _summaryOnly;
        return summaryOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSysVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>HiddenSysVersion</c> parameter of the data contract.
    /// </summary>
    /// <param name="_sysVersion">
    ///    The new value of the <c>SysVersion</c> parameter of the data contract; optional.
    /// </param>
    /// <returns>
    ///    The current value of the <c>HiddenSysVersion</c> parameter of the data contract.
    /// </returns>
    [DataMember(identifierStr(SysVersion))]
    public Description255 parmSysVersion(str _sysVersion = hiddenSysVersion)
    {
        hiddenSysVersion = _sysVersion;
        return hiddenSysVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxSpecification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter TaxSpecification.
    /// </summary>
    /// <param name="_taxSpecification">
    /// The new value of the data contract parameter TaxSpecification; optional.
    /// </param>
    /// <returns>
    ///  The current value of data contract parameter TaxSpecification.
    /// </returns>
    [
        DataMember('TaxSpecification'),
        SysOperationLabel(literalstr("@SYS11582")),
        SysOperationHelpText(literalstr("@SYS83630")),
        SysOperationGroupMember('PrintOut'),
        SysOperationDisplayOrder('1')
    ]
    public boolean parmTaxSpecification(boolean _taxSpecification = taxSpecification)
    {
        taxSpecification = _taxSpecification;
        return taxSpecification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter toDate.
    /// </returns>
    [
        DataMember('ToDate'),
        SysOperationLabel(literalstr("@SYS14656")),
        SysOperationHelpText(literalstr("@SYS67")),
        SysOperationGroupMember('Date'),
        SysOperationDisplayOrder('3')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserName</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(UserName))]
    public DirPartyName parmUserName(DirPartyName _userName = userName)
    {
        userName = _userName;
        return userName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportTitle</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(ReportTitle))]
    public TitleFields parmReportTitle(TitleFields _reportTitle = reportTitle)
    {
        reportTitle = _reportTitle;
        return reportTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the  report parameters.
    /// </summary>
    /// <returns>
    /// true if all parameters are valid; otherwise false.
    /// </returns>
    public boolean validate()
    {
        return LedgerReportFromAndToDateValidator::validateReportFromAndToDate(this.fromDate, this.toDate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>