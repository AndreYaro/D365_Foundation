<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAdjustPostMSTCur_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class InventAdjustPostMSTCur_RU extends InventAdjustPost
{
    RTax25ExchAdjDimension exchAdjDimension;
    DimensionDefault       defaultDimension;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addLedger</Name>
				<Source><![CDATA[
    void addLedger(
        LedgerVoucher           _ledgerVoucher,
        LedgerPostingType       _ledgerPostingType,
        LedgerDimensionAccount  _ledgerAccount,
        DimensionDefault        _defaultDimension,
        CostAmount              _costAmountAdjustmentCur,
        ProjLedger              _projLedger                 = null,
        RecId                   _recId                      = 0,
        CostAmount              _costAmountAdjustmentMST_RU = 0.0,
        NoYes                   _correct_RU                 = false)
    {
        DimensionDefault            defaultDimensionLocal = defaultDimension,
                                    defaultDimensionLossProfit;

        if (!defaultDimension ||
            (_ledgerPostingType != LedgerPostingType::AdvanceAdjustmentGain_RU &&
             _ledgerPostingType != LedgerPostingType::AdvanceAdjustmentLoss_RU &&
             _ledgerPostingType != LedgerPostingType::AmountDiffGain_RU        &&
             _ledgerPostingType != LedgerPostingType::AmountDiffLoss_RU        &&
             _ledgerPostingType != LedgerPostingType::ExchRateGain             &&
             _ledgerPostingType != LedgerPostingType::ExchRateLoss))
        {
            defaultDimensionLocal = _defaultDimension;
        }

        if (exchAdjDimension)
        {
            defaultDimensionLossProfit = exchAdjDimension.getDefaultDimension(defaultDimension);
        }

        LedgerVoucherTransObject ledgerVoucherTransObject = LedgerVoucherTransObject::newAdjustmentDefault(
            _ledgerVoucher.findLedgerVoucherObject(),
            _ledgerPostingType,
            LedgerDimensionFacade::serviceCreateLedgerDimension(_ledgerAccount, defaultDimensionLossProfit, defaultDimensionLocal),
            currencyCode,
            _costAmountAdjustmentMST_RU,
            0);

        ledgerVoucherTransObject.parmProjLedger(_projLedger);
        ledgerVoucherTransObject.parmCustomTransferLevel(_recId);

        if (!prmisDefault(_correct_RU))
        {
            ledgerVoucherTransObject.parmCorrect(_correct_RU);
        }
        else
        {
            ledgerVoucherTransObject.parmCorrect(correct);
        }

        if (_ledgerVoucher.parmReversal()
            && FeatureStateProvider::isFeatureEnabled(ApplyFixedDimensionsToReversalInventAdjustPostTransFeature_RU::instance()))
        {
            ledgerVoucherTransObject.parmGeneralJournalAccountEntry().applyFixedDimensions();
        }

        _ledgerVoucher.addTrans(ledgerVoucherTransObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = defaultDimension)
    {
        defaultDimension = _defaultDimension;
        return defaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRTax25Profit</Name>
				<Source><![CDATA[
    public void parmRTax25Profit(RTax25ExchAdjDimension _exchAdjDimension)
    {
        exchAdjDimension = _exchAdjDimension;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>