<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSGS1BarcodeEAN128UserDirected</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class WHSGS1BarcodeEAN128UserDirected extends WHSGS1BarcodeEAN128Base
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSGS1BarcodeEAN128UserDirected construct(WHSRFPassthrough _pass)
    {
        WHSGS1BarcodeEAN128UserDirected barcodeEAN128 = new WHSGS1BarcodeEAN128UserDirected();

        barcodeEAN128.decodeStr = _pass.lookup(#Id);
        barcodeEAN128.pass = _pass;
        WHSGS1PolicyTable policy = WHSGS1BarcodeEAN128Base::findPolicyTable(_pass.lookupStr(#MenuItem));
        barcodeEAN128.policyName = policy.PolicyName;
        barcodeEAN128.policyAction = policy.Action;
        barcodeEAN128.controlName = #Id;

        return barcodeEAN128;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMDIdentifierAlreadyPopulated</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isMDIdentifierAlreadyPopulated(WHSGS1MDIdentifier _mdIdentifier)
    {
        return _mdIdentifier == #Id ? false : pass.exists(_mdIdentifier) && pass.lookupstr(_mdIdentifier) != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValue</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected internal void setValue(WHSGS1MDIdentifier _mdIdentifier, str _value)
    {
        if (this.isSaveForDefaultPolicy() && !this.isMDIdentifierAlreadyPopulated(_mdIdentifier))
        {
            if (_mdIdentifier == #Id)
            {
                pass.insert(_mdIdentifier, _value);
            }
            else if (_mdIdentifier != controlName)
            {
                this.populateGS1ScannedValues(_mdIdentifier, _value);
            }
            else
            {
                // value will be already populated as part of processing the control
                this.populateGS1UsedScannedValues(_mdIdentifier, _value);
            }
        }
        else
        {
            pass.insert(_mdIdentifier, _value);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>