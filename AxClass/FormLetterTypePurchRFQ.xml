<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormLetterTypePurchRFQ</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FormLetterTypeConsignment</c> class contains the logic specific to the <c>FormLetterType</c> purch RFQ.
/// </summary>
[FormLetterTypeFactoryAttribute(FormLetterType::PurchRFQ)]
class FormLetterTypePurchRFQ extends FormletterTypeBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formLetterContract</Name>
				<Source><![CDATA[
    public FormLetterContract formLetterContract(container _formLetterContractPacked)
    {
        return PurchRFQFormLetterContract::newFromPackedVersion(_formLetterContractPacked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formletterJournalPrint</Name>
				<Source><![CDATA[
    public FormletterJournalPrint formletterJournalPrint(FormLetterContract _formLetterContract)
    {
        return FormletterJournalPrint::newPurchRFQJournalPrint(_formLetterContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formletterProvider</Name>
				<Source><![CDATA[
    public FormletterProvider formletterProvider()
    {
        return FormletterProviderNull::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>formletterJournalCreate</Name>
				<Source><![CDATA[
    public FormletterJournalCreate formletterJournalCreate(FormletterService _formletterService,Common _parmTable)
    {
        return FormletterJournalCreate::newPurchRFQJournalCreate(_formletterService.parmFormLetterContract(), _parmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formletterJournalPost</Name>
				<Source><![CDATA[
    public FormletterJournalPost formletterJournalPost(FormletterService _formletterService, Common _parmTable)
    {
        return FormletterJournalPost::newPostPurchRFQ(_formletterService.parmFormLetterContract(), _formletterService.parmJournal(), _parmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formletterParmData</Name>
				<Source><![CDATA[
    public formletterParmData formletterParmData(FormletterService _formletterService)
    {
        return PurchRFQFormletterParmData::newChooseLines(_formletterService.parmFormLetterContract().pack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>formletterParmUpdate</Name>
				<Source><![CDATA[
    public FormletterParmUpdate formletterParmUpdate(FormletterService _formletterService)
    {
        return _formletterService.parmFormLetterContract().parmParmUpdate() as PurchRFQParmUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFormletterParmMaps</Name>
				<Source><![CDATA[
    public FormletterParmTable initFormletterParmMaps(FormletterService _formletterService)
    {
        PurchRFQParmTable emptyPurchRFQParmTable;
        return emptyPurchRFQParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>infologPrefixParmTable</Name>
				<Source><![CDATA[
    public str infologPrefixParmTable(FormletterParmTable _parmTable)
    {
        return fieldLabelValue(_parmTable.TableId, fieldNum(PurchRFQParmTable, rfqId), _parmTable.OrderId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFormletterParmTable</Name>
				<Source><![CDATA[
    public FormletterParmTable initFormletterParmTable(DocumentStatus _documentStatus)
    {
        PurchRFQParmTable   emptyPurchRFQParmTable;
        return emptyPurchRFQParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFormletterParmUpdate</Name>
				<Source><![CDATA[
    public FormletterParmUpdate initFormletterParmUpdate()
    {
        PurchRFQParmUpdate  emptyPurchRFQParmUpdate;
        return emptyPurchRFQParmUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFormletterJournal</Name>
				<Source><![CDATA[
    public FormletterJournal initFormletterJournal(DocumentStatus _documentStatus)
    {
        VendRFQJour emptyVendRFQJour;
        return emptyVendRFQJour;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>