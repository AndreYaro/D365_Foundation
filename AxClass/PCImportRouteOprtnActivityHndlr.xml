<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCImportRouteOprtnActivityHndlr</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PCImportRouteOprtnActivityHndlr extends PCImportModelNodeHandler
{
    WrkCtrPCRouteOperationActivity  routeOperationActivity;

    List                            requirementSets;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>importData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>WrkCtrActivity</c>, a <c>WrkCtrActivityRequirementSet</c> and
    /// a <c>WrkCtrPCRouteOperationActivity</c> for each of the selected legal entities.
    /// </summary>
    protected void importData()
    {
        WrkCtrActivityRequirementSet        activityRequirementSet;
        WrkCtrActivity                      activity;
        PCImportTemplateComponentHandler    parent                  = this.parent();
        ListEnumerator                      le                      = parent.insertedTemplateComponents().getEnumerator();

        requirementSets                                             = new List(Types::Int64);

        activity.EntityType                                         = WrkCtrActivityType::PCRouteOperation;

        activityRequirementSet.Description                          = this.getFieldByName(fieldStr(WrkCtrActivityRequirementSet, Description));
        activityRequirementSet.Quantity                             = this.getIntFieldByName(fieldStr(WrkCtrActivityRequirementSet, Quantity));
        activityRequirementSet.LoadPercent                          = this.getRealFieldByName(fieldStr(WrkCtrActivityRequirementSet, LoadPercent));

        while (le.moveNext())
        {
            activity.insert();

            activityRequirementSet.Activity                         = activity.RecId;
            activityRequirementSet.insert();

            requirementSets.addEnd(activityRequirementSet.RecId);

            routeOperationActivity.Activity                         = activity.RecId;
            routeOperationActivity.TemplateComponent                = le.current();
            routeOperationActivity.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>record</Name>
				<Source><![CDATA[
    public Common record(boolean _suppressValidation = false)
    {
        return routeOperationActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>requirementSetIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the list of all created activity requirement sets. Needed by the child handlers to add
    /// requirements for each of the sets.
    /// </summary>
    /// <returns>
    /// The int64 list of the RecIds of the activity requirement sets.
    /// </returns>
    public List requirementSetIds()
    {
        return requirementSets;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCImportRouteOprtnActivityHndlr construct()
    {
        return new PCImportRouteOprtnActivityHndlr();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>