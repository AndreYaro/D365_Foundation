<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMCustRebateApprWFEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRCustRebateApprWFEventHandler</c> class is the event handler class for managing the
/// workflow document started event, workflow document canceled event, and the workflow document
/// completed event.
/// </summary>
class TAMCustRebateApprWFEventHandler implements WorkflowCompletedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the completed event for the workflow document.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    public void completed(WorkflowEventArgs _workflowEventArgs)
    {
        Workflowtrackingtable                   workflowtrackingtable;
        Workflowtrackingstatustable             workflowtrackingstatustable;
        PdsRebateAgreement                      pdsRebateAgreement = PdsRebateAgreement::find(_workflowEventArgs.parmWorkflowContext().parmRecId(), true);

        if (pdsRebateAgreement)
        {
            ttsBegin;
            select firstonly User from workflowtrackingtable
            where workflowtrackingtable.TrackingContext == workflowtrackingcontext::WorkItem
                && workflowtrackingtable.TrackingType == workflowtrackingtype::Approval
            exists join workflowtrackingstatustable
            where workflowtrackingstatustable.CorrelationId == _workflowEventArgs.parmWorkflowContext().parmWorkflowCorrelationId()
                && workflowtrackingstatustable.Recid == workflowtrackingtable.WorkflowTrackingStatusTable;

            pdsRebateAgreement.TAMCustRebateApprovalStatus  = TAMCustRebateApprovalStatus::Approved;
            pdsRebateAgreement.Validated                    = NoYes::Yes;
            pdsRebateAgreement.Verifier                     = HcmWorker::userId2Worker(workflowtrackingtable.User);

            pdsRebateAgreement.update();
            ttsCommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>