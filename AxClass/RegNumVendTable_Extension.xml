<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RegNumVendTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension methods for the <c>VendTable</c> table.
/// </summary>
public static class RegNumVendTable_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getVatNumPrimaryRegistrationNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the TaxId registration number for the primary address of the given vendor.
    /// </summary>
    /// <param name = "_vendTable">VendTable cursor</param>
    /// <returns>TaxId registration number</returns>
    public static TaxRegistrationNumber getVatNumPrimaryRegistrationNumber(VendTable _vendTable)
    {
        return TaxRegistration::getPrimaryRegistrationNumber(_vendTable, TaxRegistrationTypesList::TAXID);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrimaryRegistrationNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets th registration number for the primary address of the given vendor.
    /// </summary>
    /// <param name = "_vendTable">VendTable cursor</param>
    /// <param name = "_type">Registration category.</param>
    /// <param name = "_date">Actual date of registration number</param>
    /// <returns>Registration number</returns>
    public static TaxRegistrationNumber getPrimaryRegistrationNumber(VendTable                _vendTable,
                                                                     TaxRegistrationTypesList _type,
                                                                     date                     _date  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        return TaxRegistration::getPrimaryRegistrationNumber(_vendTable, _type, _date);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyPrimaryRegistrationNumberToVATMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the registration number for the primary address of the given vendor.
    /// And copies the primary registration number, record ID, table ID to a map.
    /// </summary>
    /// <param name = "_vendTable">The data source to determine and copy from.</param>
    /// <param name = "_vatMapDest">The destination table to copy to.</param>
    /// <param name = "_date">The date to determine primary registration number.</param>
    public static void copyPrimaryRegistrationNumberToVATMap(
        VendTable _vendTable,
        TaxExemptVATNumMap _vatMapDest,
        date _date  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        if ((SysDictField::isFieldMapped(tableStr(TaxExemptVATNumMap), tableId2Name(_vatMapDest.TableId), fieldStr(TaxExemptVATNumMap, VATNumRecId))
                && SysDictField::isFieldMapped(tableStr(TaxExemptVATNumMap), tableId2Name(_vatMapDest.TableId), fieldStr(TaxExemptVATNumMap, VATNumTableType)))
            || _vatMapDest.TableId == tableNum(LedgerJournalTrans))
        {
            RefRecId vatNumRecId;
            TaxExemptNumberSourceType vatNumSourceType;
            LedgerJournalTransTaxExtension extensionTable;

            // Initializes the vatNumJournal, vatNumRecId and vatNumSourceType with default values.
            VATNumJournal vatNumJournal = _vatMapDest.VATNum;
            if (_vatMapDest.TableId == tableNum(LedgerJournalTrans))
            {
                LedgerJournalTrans ledgerJournalTrans = _vatMapDest as LedgerJournalTrans;
                extensionTable = ledgerJournalTrans.ledgerJournalTransTaxExtension();
                vatNumRecId = extensionTable.VATNumRecId;
                vatNumSourceType = extensionTable.VATNumTableType;
            }
            else
            {
                vatNumRecId = _vatMapDest.VATNumRecId;
                vatNumSourceType = _vatMapDest.VATNumTableType;
            }

            // Sets the value for vatNumJournal, vatNumRecId and vatNumSourceType.
            vatNumJournal = _vendTable.getPrimaryRegistrationNumber(TaxRegistrationTypesList::TAXID, _date);
            if (vatNumJournal)
            {
                // The registration number is set in the given vendor,
                // thus vatNumJournal, vatNumRecId and vatNumSourceType should be copied from given vendor.
                if (vatNumJournal == _vendTable.VATNum)
                {
                    vatNumRecId = _vendTable.VATNumRecId;
                    vatNumSourceType = _vendTable.VATNumTableType;
                }

                // The registration number is not set in the given vendor,
                // thus vatNumJournal, vatNumRecId and vatNumSourceType should be copied from primary address.
                // Especially, for tax service, if the given vendor doesn't have VATNumRecId and VATNumTableType,
                // these variables should be copied from primary address even if VATNumJournal exists in given vendor.
                if (vatNumJournal != _vendTable.VATNum
                    || (TaxIntegrationUtils::isMultipleTaxIdEnabledForTaxService()
                        && !vatNumRecId
                        && !vatNumSourceType))
                {
                    TaxRegistration taxRegistration = TaxRegistration::getPrimaryAddressTaxRegistration(
                        _vendTable,
                        TaxRegistrationTypesList::TAXID,
                        _date);

                    if (taxRegistration.RegistrationNumber)
                    {
                        vatNumJournal = taxRegistration.RegistrationNumber;
                        vatNumRecId = taxRegistration.RecId;
                        vatNumSourceType = TaxExemptNumberSourceType::TaxRegistration;
                    }
                    else
                    {
                        vatNumJournal = '';
                        vatNumSourceType = TaxExemptNumberSourceType::None;
                        vatNumRecId = 0;
                    }
                }
            }
            else
            {
                vatNumSourceType = TaxExemptNumberSourceType::None;
                vatNumRecId = 0;
            }

            // update the value to map or extension table
            if (_vatMapDest.TableId == tableNum(LedgerJournalTrans))
            {
                _vatMapDest.VATNum = vatNumJournal;
                extensionTable.VATNumRecId = vatNumRecId;
                extensionTable.VATNumTableType = vatNumSourceType;
                LedgerJournalTrans ledgerJournalTrans = _vatMapDest as LedgerJournalTrans;
                ledgerJournalTrans.packExtensionTable(extensionTable);
            }
            else
            {
                _vatMapDest.VATNum = vatNumJournal;
                _vatMapDest.VATNumRecId = vatNumRecId;
                _vatMapDest.VATNumTableType = vatNumSourceType;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnterpriseNumberPrimaryRegistrationNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the EnterpriseNumber registration number for the primary address of the vendor.
    /// </summary>
    /// <returns>
    ///     The Enterprise registration number.
    /// </returns>
    public static TaxRegistrationNumber getEnterpriseNumberPrimaryRegistrationNumber(VendTable _vendTable)
    {
        return TaxRegistration::getPrimaryRegistrationNumber(_vendTable, TaxRegistrationTypesList::UID);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>