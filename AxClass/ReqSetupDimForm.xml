<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqSetupDimForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>ReqSetupDimForm</c> class is used to set default settings in the form <c>reqItemTable</c>
///    table.
/// </summary>
/// <remarks>
///    The record that is created or modified in the form must be included in the calculation of default
///    values.
///    This should be done without saving the record. This is handled by calling the update
///    method.
/// </remarks>
class ReqSetupDimForm extends ReqSetupDim
{
    ReqItemTable    reqItemTableCaller;     // the caller record which must be included in the object

    ReqItemTable    reqItemTableDefault;    // buffer not containing the reqItemTableCursor
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmReqItemTableCaller</Name>
				<Source><![CDATA[
    public ReqItemTable parmReqItemTableCaller(ReqItemTable _reqItemTableCaller = reqItemTableCaller)
    {
        reqItemTableCaller = _reqItemTableCaller;

        return reqItemTableCaller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryReqItemTable</Name>
				<Source><![CDATA[
    protected Query     queryReqItemTable()
    {
        Query   query;

        query = super();

        if (! query)
        {
            return null;
        }

        query.dataSourceTable(tablenum(ReqItemTable)).addRange(fieldnum(ReqItemTable,RecId)).value(SysQuery::valueNot(reqItemTableCaller.RecId));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetCache</Name>
				<Source><![CDATA[
    protected void resetCache(ReqItemTable     _reqItemTableCaller_orig = null)
    {
        if (   reqItemTableCaller.LeadTimeProductionActive != _reqItemTableCaller_orig.LeadTimeProductionActive
            || reqItemTableCaller.LeadTimePurchaseActive   != _reqItemTableCaller_orig.LeadTimePurchaseActive
            || reqItemTableCaller.LeadTimeTransferActive   != _reqItemTableCaller_orig.LeadTimeTransferActive)
        {
            this.initMapLeadTime();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReqGroup</Name>
				<Source><![CDATA[
    protected void setReqGroup(ReqItemTable     _reqItemTableCaller_orig = null)
    {
        if ( ! reqGroup.isCacheInitialized()
            ||  (reqItemTableGrouped.ItemCovFieldsActive && reqItemTableGrouped.ReqGroupId != reqGroup.ReqGroupId)
            ||  (_reqItemTableCaller_orig.ItemId && reqItemTableCaller.ItemCovFieldsActive != _reqItemTableCaller_orig.ItemCovFieldsActive))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReqItemTableGrouped</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified item coverage record and eventual default records.
    /// </summary>
    /// <param name = "_builder">A <c>ReqSetupDimBuilder</c> instance.</param>
    /// <remarks>
    ///    Based on these records a grouped item coverage record buffer is created.The grouped item coverage
    ///    record contains specific settings and fallback settings.
    /// </remarks>
    protected void setReqItemTableGrouped(ReqSetupDimBuilder _builder = null)
    {
        super(_builder);  //the super() creates a reqItemTableGrouped which is the default settings for reqItemTableCaller

        reqItemTableDefault = reqItemTableGrouped.toRecord(); // the default is saved
        
        this.initReqItemTableGrouped();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReqItemTableGrouped</Name>
				<Source><![CDATA[
    private void initReqItemTableGrouped()
    {
        ReqItemTable reqItemTableGroupedLocal;
        reqItemTableGroupedLocal.data(reqItemTableCaller);
        reqItemTableGroupedLocal.initFromReqItemTable(reqItemTableDefault);
        reqItemTableGrouped.initFromRecord(reqItemTableGroupedLocal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates an object by using changes from a record.
    /// </summary>
    /// <param name="_reqItemTableCallerChanged">
    ///    The current table buffer of the record which this class has been instantiated from.
    /// </param>
    /// <remarks>
    ///    This method should be called every time that changes have been made on the current record.
    /// </remarks>
    void update(ReqItemTable    _reqItemTableCallerChanged)
    {
        ReqItemTable    reqItemTableCaller_Orig;

        reqItemTableCaller_Orig.data(reqItemTableCaller);

        this.parmReqItemTableCaller(_reqItemTableCallerChanged.data());

        this.initReqItemTableGrouped();

        this.setReqGroup(reqItemTableCaller_Orig);

        this.resetCache(reqItemTableCaller_Orig);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newfromForm</Name>
				<Source><![CDATA[
    public static ReqSetupDim newfromForm(
        ReqSetup            _reqSetup,
        ReqItemTable        _reqItemTableCursor)
    {
        ReqSetupDimForm reqSetupDimForm = new ReqSetupDimForm();

        ReqSetupDimBuilder builder = new ReqSetupDimBuilder();
        builder.reqSetup(_reqSetup);
        builder.covInventDimId(_reqItemTableCursor.CovInventDimId);

        reqSetupDimForm.parmReqItemTableCaller(_reqItemTableCursor.data());

        reqSetupDimForm.init(builder);

        return reqSetupDimForm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>