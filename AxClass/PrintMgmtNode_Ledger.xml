<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PrintMgmtNode_Ledger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PrintMgmtNode_Ledger</c> class is responsible for managing the print management settings at
/// the module-level in a general ledger module.
/// </summary>
public class PrintMgmtNode_Ledger extends PrintMgmtNode
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDisplayCaptionImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the display caption for a node.
    /// </summary>
    /// <param name="_tableBuffer">
    /// The record that is referenced by the node.
    /// </param>
    /// <returns>
    /// The display caption used to identify the reference to the node.
    /// </returns>
    /// <remarks>
    /// The caption typically includes a prefix like module, account, or transaction, followed by the
    /// caption property of the <paramref name="_tableBuffer" /> parameter.
    /// </remarks>
    protected str getDisplayCaptionImplementation(Common _tableBuffer)
    {
        return "@GLS220287";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentTypes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a list of valid document types for a node.
    /// </summary>
    /// <returns>
    /// A list of valid document types for the node.
    /// </returns>
    /// <remarks>
    /// The results can vary based on what is configured in the application because configuration keys are
    /// used to determine this list.
    /// </remarks>
    public List getDocumentTypes()
    {
        List docTypes;

        docTypes = new List(Types::Enum);

        if (isConfigurationkeyEnabled(configurationKeyNum(LedgerBasic)))
        {
            docTypes.addEnd(PrintMgmtDocumentType::TaxFiscalDocument_BR);
        }

        return docTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIconImageResNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the resource ID that is used to display the icon that represents a node.
    /// </summary>
    /// <returns>
    /// The resource ID that is used to display the icon that represents the node.
    /// </returns>
    public int getIconImageResNum()
    {
        #resAppl
        return #ImagePrintManagementTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNodeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>PrintMgmtNodeType</c> enumeration value of a node.
    /// </summary>
    /// <returns>
    /// The <c>PrintMgmtNodeType</c> enumeration value of the node.
    /// </returns>
    public PrintMgmtNodeType getNodeType()
    {
        ;

        return PrintMgmtNodeType::Ledger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReferencedTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the table ID that is referenced by a node.
    /// </summary>
    /// <returns>
    /// The table ID that is referenced by the node.
    /// </returns>
    public RefTableId getReferencedTableId()
    {
        ;

        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>