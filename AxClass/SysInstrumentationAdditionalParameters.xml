<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysInstrumentationAdditionalParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Providers a fluent API for adding additional parameters for a instrumented code segment.
/// </summary>
internal class SysInstrumentationAdditionalParameters
{
    private str parametersString;
    private System.Collections.Generic.List<System.String> parametersBuffer;
    private Map parameterCollection;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new()
    {
        parametersBuffer = new System.Collections.Generic.List<System.String>();
        parameterCollection = new Map(Types::String, Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the class.
    /// </summary>
    /// <returns>A new instance of <c>SysInstrumentationAdditionalParameters</c> class.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public SysInstrumentationAdditionalParameters construct()
    {
        return new SysInstrumentationAdditionalParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a parameter.
    /// </summary>
    /// <param name = "_parameterName">The name of the parameter.</param>
    /// <param name = "_parameterValue">The value of the parameter.</param>
    /// <returns>A <c>SysInstrumentationAdditionalParameters</c> object with added parameter.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public SysInstrumentationAdditionalParameters add(str _parameterName, str _parameterValue)
    {
        parametersBuffer.Add(System.String::Concat(', ', _parameterName, '=', _parameterValue));
        parameterCollection.insert(_parameterName, _parameterValue);

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addIsBatchParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a parameter that indicates if the operation that is being instrumented is running in batch.
    /// </summary>
    /// <param name = "_isBatch">Boolean value that indicates if the operation that is being instrumented is running in batch.</param>
    /// <returns>A <c>SysInstrumentationAdditionalParameters</c> object with added parameter.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public SysInstrumentationAdditionalParameters addIsBatchParameter(boolean _isBatch)
    {
        return this.add(SysInstrumentationActivities::ParmIsBatch, int2Str(_isBatch));
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the parameters as a string.
    /// </summary>
    /// <returns>A parameter string.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str toString()
    {
        if (parametersBuffer.Count)
        {
            parametersString += System.String::Join('', parametersBuffer.ToArray());
            parametersBuffer.Clear();
        }

        return parametersString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the parameters to an activity.
    /// </summary>
    /// <param name = "_sf_Activity">An activity.</param>
    public void addToActivity(SysInstrumentationActivityContext _sf_ActivityContext)
    {
        MapEnumerator enumerator = parameterCollection.getEnumerator();

        while (enumerator.moveNext())
        {
            _sf_ActivityContext.addCustomProperty(enumerator.currentKey(), enumerator.currentValue());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>