<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveTaskProcessingThresholdInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for wave task processing threshold instrumentation logging.
/// </summary>
internal final class WHSWaveTaskProcessingThresholdInstrumentationActivities
{
    private const str ActivityNamePrefix = 'WaveTaskProcessingThreshold.';

    private WHSInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static WHSWaveTaskProcessingThresholdInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSWaveTaskProcessingThresholdInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>replenishmentThresholdCalculation</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext replenishmentThresholdCalculation()
    {
        return this.createActivityContext('replenishmentThresholdCalculation');
    }

]]></Source>
			</Method>
			<Method>
				<Name>allocateThresholdCalculation</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext allocateThresholdCalculation()
    {
        return this.createActivityContext('allocateThresholdCalculation');
    }

]]></Source>
			</Method>
			<Method>
				<Name>labelPrintingThresholdCalculation</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext labelPrintingThresholdCalculation()
    {
        return this.createActivityContext('labelPrintingThresholdCalculation');
    }

]]></Source>
			</Method>
			<Method>
				<Name>createActivityContext</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal final SysInstrumentationActivityContext createActivityContext(str _activityName)
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + _activityName));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>