<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerExchAdjPostingSearchParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerExchAdjPostingSearchParameters
{
    private LedgerExchAdjPostingModule module;
    private CurrencyGainLossAccountType accountType;
    private CurrencyCode currency;
    private PostingProfileAccountRelation accountNum;
    private PostingProfileAccountRelation accountGroup;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns current module
    /// </summary>
    /// <returns>Current module</returns>
    [Hookable(false)]
    public LedgerExchAdjPostingModule parmModule()
    {
        return module;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns current account type
    /// </summary>
    /// <returns>Current account type</returns>
    [Hookable(false)]
    public CurrencyGainLossAccountType parmAccountType()
    {
        return accountType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns current currency
    /// </summary>
    /// <returns>Current currency</returns>
    [Hookable(false)]
    public CurrencyCode parmCurrency()
    {
        return currency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns current account number
    /// </summary>
    /// <returns>Current account number</returns>
    [Hookable(false)]
    public str parmAccountNum()
    {
        return accountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns current account group number
    /// </summary>
    /// <returns>Current account group number</returns>
    [Hookable(false)]
    public str parmAccountGroup()
    {
        return accountGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateAccountGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates AccountGroup if necessary
    /// </summary>
    [Hookable(false)]
    public void populateAccountGroup()
    {
        if (!this.accountGroup)
        {
            if (this.module == LedgerExchAdjPostingModule::GeneralLedger)
            {
                AccountCategoryRef categoryRef = MainAccount::findByMainAccountId(this.accountNum).AccountCategoryRef;

                this.accountGroup = MainAccountCategory::findAccountCategoryRef(categoryRef).AccountCategory;
            }
            else if (this.module == LedgerExchAdjPostingModule::AccountsPayable)
            {
                this.accountGroup = VendTable::groupId(this.accountNum);
            }
            else if (this.module == LedgerExchAdjPostingModule::AccountsReceivable)
            {
                this.accountGroup = CustTable::groupId(this.accountNum);
            }
            else if (this.module == LedgerExchAdjPostingModule::Bank)
            {
                this.accountGroup = BankAccountTable::find(this.accountNum).BankGroupId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clones <c>LedgerExchAdjPostingSearchParameters</c> instance
    /// </summary>
    /// <returns>Cloned <c>LedgerExchAdjPostingSearchParameters</c> instancce</returns>
    [Hookable(false)]
    public LedgerExchAdjPostingSearchParameters clone()
    {
        return LedgerExchAdjPostingSearchParameters::newFromParameters(
            this.module,
            this.accountType,
            this.currency,
            this.accountNum,
            this.accountGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct new <c>LedgerExchAdjPostingSearchParameters</c> based on parameters
    /// </summary>
    /// <returns>Newly constructed <c>LedgerExchAdjPostingSearchParameters</c> instancce</returns>
    [Hookable(false)]
    public static LedgerExchAdjPostingSearchParameters newFromParameters(
        LedgerExchAdjPostingModule _module,
        CurrencyGainLossAccountType _accountType,
        CurrencyCode _currency,
        PostingProfileAccountRelation _accountNum,
        PostingProfileAccountRelation _accountGroup = '')
    {
        LedgerExchAdjPostingSearchParameters parameter = LedgerExchAdjPostingSearchParameters::construct();

        parameter.module = _module;
        parameter.accountType = _accountType;
        parameter.currency = _currency;
        parameter.accountNum = _accountNum;
        parameter.accountGroup = _accountGroup;

        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static LedgerExchAdjPostingSearchParameters construct()
    {
        return new LedgerExchAdjPostingSearchParameters();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>