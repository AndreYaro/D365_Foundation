<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendAgingReportTmpFromVendTmpAccountSum</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendAgingReportTmpFromVendTmpAccountSum</c> class copies values from the <c>VendTmpAccountSum</c> table into the <c>VendAgingReportTmp</c> table.
/// </summary>
public final class VendAgingReportTmpFromVendTmpAccountSum extends SysQueryInsertRecordSet
{
    private VendAgingReportDPParameters vendAgingReportDPParameters;

    private int vendTmpAccountSumDataSourceId;
    private int custVendTransAgingDataSourceId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getVendTmpAccountSumDataSourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data source ID for <c>VendTmpAccountSum</c> table.
    /// </summary>
    /// <returns>The unique ID.</returns>
    protected int getVendTmpAccountSumDataSourceId()
    {
        return vendTmpAccountSumDataSourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustVendTransAgingDataSourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data source ID for <c>CustVendTransAging</c> table.
    /// </summary>
    /// <returns>The unique ID.</returns>
    protected int getCustVendTransAgingDataSourceId()
    {
        return custVendTransAgingDataSourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    protected void initFieldMapping()
    {
        if (vendAgingReportDPParameters.reverseAmountsAndHeadings)
        {
            if (vendAgingReportDPParameters.ledgerCurrencySelection == LedgerCurrencySelection::Accounting)
            {
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance01), fieldStr(VendAgingReportTmp, Balance01));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance07), fieldStr(VendAgingReportTmp, Balance02));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance06), fieldStr(VendAgingReportTmp, Balance03));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance05), fieldStr(VendAgingReportTmp, Balance04));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance04), fieldStr(VendAgingReportTmp, Balance05));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance03), fieldStr(VendAgingReportTmp, Balance06));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance02), fieldStr(VendAgingReportTmp, Balance07));
            }
            else if (vendAgingReportDPParameters.ledgerCurrencySelection == LedgerCurrencySelection::Reporting)
            {
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance01ReportingCurrency), fieldStr(VendAgingReportTmp, Balance01));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance07ReportingCurrency), fieldStr(VendAgingReportTmp, Balance02));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance06ReportingCurrency), fieldStr(VendAgingReportTmp, Balance03));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance05ReportingCurrency), fieldStr(VendAgingReportTmp, Balance04));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance04ReportingCurrency), fieldStr(VendAgingReportTmp, Balance05));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance03ReportingCurrency), fieldStr(VendAgingReportTmp, Balance06));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance02ReportingCurrency), fieldStr(VendAgingReportTmp, Balance07));
            }

            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance01cur), fieldStr(VendAgingReportTmp, Balance01cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance07cur), fieldStr(VendAgingReportTmp, Balance02cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance06cur), fieldStr(VendAgingReportTmp, Balance03cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance05cur), fieldStr(VendAgingReportTmp, Balance04cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance04cur), fieldStr(VendAgingReportTmp, Balance05cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance03cur), fieldStr(VendAgingReportTmp, Balance06cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance02cur), fieldStr(VendAgingReportTmp, Balance07cur));
        }
        else
        {
            if (vendAgingReportDPParameters.ledgerCurrencySelection == LedgerCurrencySelection::Accounting)
            {
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance01), fieldStr(VendAgingReportTmp, Balance01));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance02), fieldStr(VendAgingReportTmp, Balance02));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance03), fieldStr(VendAgingReportTmp, Balance03));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance04), fieldStr(VendAgingReportTmp, Balance04));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance05), fieldStr(VendAgingReportTmp, Balance05));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance06), fieldStr(VendAgingReportTmp, Balance06));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance07), fieldStr(VendAgingReportTmp, Balance07));
            }
            else if (vendAgingReportDPParameters.ledgerCurrencySelection == LedgerCurrencySelection::Reporting)
            {
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance01ReportingCurrency), fieldStr(VendAgingReportTmp, Balance01));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance02ReportingCurrency), fieldStr(VendAgingReportTmp, Balance02));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance03ReportingCurrency), fieldStr(VendAgingReportTmp, Balance03));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance04ReportingCurrency), fieldStr(VendAgingReportTmp, Balance04));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance05ReportingCurrency), fieldStr(VendAgingReportTmp, Balance05));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance06ReportingCurrency), fieldStr(VendAgingReportTmp, Balance06));
                this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance07ReportingCurrency), fieldStr(VendAgingReportTmp, Balance07));
            }

            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance01cur), fieldStr(VendAgingReportTmp, Balance01cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance02cur), fieldStr(VendAgingReportTmp, Balance02cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance03cur), fieldStr(VendAgingReportTmp, Balance03cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance04cur), fieldStr(VendAgingReportTmp, Balance04cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance05cur), fieldStr(VendAgingReportTmp, Balance05cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance06cur), fieldStr(VendAgingReportTmp, Balance06cur));
            this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Balance07cur), fieldStr(VendAgingReportTmp, Balance07cur));
        }

        this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, TransDate), fieldStr(VendAgingReportTmp, TransDate));
        this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, InvoiceId), fieldStr(VendAgingReportTmp, InvoiceId));
        this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Voucher), fieldStr(VendAgingReportTmp, Voucher));
        this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, AccountNum), fieldStr(VendAgingReportTmp, AccountNum));
        this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Name), fieldStr(VendAgingReportTmp, Name));
        this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, Txt), fieldStr(VendAgingReportTmp, Txt));
        this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, CurrencyCode), fieldStr(VendAgingReportTmp, CurrencyCode));
        this.mapField(vendTmpAccountSumDataSourceId, fieldStr(VendTmpAccountSum, GroupId), fieldStr(VendAgingReportTmp, VendGroup));

        this.mapField(custVendTransAgingDataSourceId, fieldStr(CustVendTransAging, SortOrder), fieldStr(VendAgingReportTmp, SortOrder));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected Query initQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsTmpAccountSum = query.addDataSource(tableNum(VendTmpAccountSum));
        qbdsTmpAccountSum.cursor(vendAgingReportDPParameters.vendTmpAccountSum);

        QueryBuildDataSource qbdsCustVendTransAging = qbdsTmpAccountSum.addDataSource(tableNum(CustVendTransAging));
        qbdsCustVendTransAging.addLink(fieldNum(VendTmpAccountSum, AccountNum), fieldNum(CustVendTransAging, AccountNum));
        qbdsCustVendTransAging.joinMode(JoinMode::InnerJoin);
        qbdsCustVendTransAging.cursor(vendAgingReportDPParameters.custVendTransAging);

        query.clearAllFields();

        vendTmpAccountSumDataSourceId = qbdsTmpAccountSum.uniqueId();
        custVendTransAgingDataSourceId = qbdsCustVendTransAging.uniqueId();

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onExecuted</Name>
				<Source><![CDATA[
    protected void onExecuted()
    {
        VendAgingReportTmp vendAgingReportTmp = vendAgingReportDPParameters.vendAgingReportTmp;

        if (vendAgingReportDPParameters.reverseAmountsAndHeadings)
        {
            update_recordset vendAgingReportTmp
                setting AsOfDate = vendAgingReportDPParameters.asOfDate,
                    HeadingAccount = vendAgingReportDPParameters.headingAccount,
                    HeadingName = vendAgingReportDPParameters.headingName,
                    HeadingDate = vendAgingReportDPParameters.headingDate,
                    Heading1 = vendAgingReportDPParameters.heading01,
                    Heading2DateValue = vendAgingReportDPParameters.heading02,
                    Heading2 = vendAgingReportDPParameters.heading07Text,
                    Heading3 = vendAgingReportDPParameters.heading03,
                    Heading4 = vendAgingReportDPParameters.heading04,
                    Heading5 = vendAgingReportDPParameters.heading05,
                    Heading6 = vendAgingReportDPParameters.heading06,
                    Heading7DateValue = vendAgingReportDPParameters.heading07,
                    Heading7 = vendAgingReportDPParameters.heading02Text,
                    Heading8 = vendAgingReportDPParameters.heading011,
                    Heading9 = vendAgingReportDPParameters.heading03,
                    Heading10 = vendAgingReportDPParameters.heading031,
                    Heading11 = vendAgingReportDPParameters.heading041,
                    Heading12 = vendAgingReportDPParameters.heading051,
                    Heading13 = vendAgingReportDPParameters.heading061,
                    Heading14 = vendAgingReportDPParameters.heading061,
                    HeadingAgingBucketDescription02 = vendAgingReportDPParameters.headingAgingBucketDescription02,
                    HeadingAgingBucketDescription03 = vendAgingReportDPParameters.headingAgingBucketDescription03,
                    HeadingAgingBucketDescription04 = vendAgingReportDPParameters.headingAgingBucketDescription04,
                    HeadingAgingBucketDescription05 = vendAgingReportDPParameters.headingAgingBucketDescription05,
                    HeadingAgingBucketDescription06 = vendAgingReportDPParameters.headingAgingBucketDescription06,
                    HeadingAgingBucketDescription07 = vendAgingReportDPParameters.headingAgingBucketDescription07,
                    Balance = vendAgingReportDPParameters.balance,
                    VendAccount = vendAgingReportTmp.AccountNum;
        }
        else
        {
            update_recordset vendAgingReportTmp
                setting AsOfDate = vendAgingReportDPParameters.asOfDate,
                    HeadingAccount = vendAgingReportDPParameters.headingAccount,
                    HeadingName = vendAgingReportDPParameters.headingName,
                    HeadingDate = vendAgingReportDPParameters.headingDate,
                    Heading1 = vendAgingReportDPParameters.heading01,
                    Heading2DateValue = vendAgingReportDPParameters.heading02,
                    Heading2 = vendAgingReportDPParameters.heading02Text,
                    Heading3 = vendAgingReportDPParameters.heading03,
                    Heading4 = vendAgingReportDPParameters.heading04,
                    Heading5 = vendAgingReportDPParameters.heading05,
                    Heading6 = vendAgingReportDPParameters.heading06,
                    Heading7DateValue = vendAgingReportDPParameters.heading07,
                    Heading7 = vendAgingReportDPParameters.heading07Text,
                    Heading8 = vendAgingReportDPParameters.heading011,
                    Heading9 = vendAgingReportDPParameters.heading021,
                    Heading10 = vendAgingReportDPParameters.heading031,
                    Heading11 = vendAgingReportDPParameters.heading041,
                    Heading12 = vendAgingReportDPParameters.heading051,
                    Heading13 = vendAgingReportDPParameters.heading061,
                    Heading14 = vendAgingReportDPParameters.heading071,
                    HeadingAgingBucketDescription02 = vendAgingReportDPParameters.headingAgingBucketDescription02,
                    HeadingAgingBucketDescription03 = vendAgingReportDPParameters.headingAgingBucketDescription03,
                    HeadingAgingBucketDescription04 = vendAgingReportDPParameters.headingAgingBucketDescription04,
                    HeadingAgingBucketDescription05 = vendAgingReportDPParameters.headingAgingBucketDescription05,
                    HeadingAgingBucketDescription06 = vendAgingReportDPParameters.headingAgingBucketDescription06,
                    HeadingAgingBucketDescription07 = vendAgingReportDPParameters.headingAgingBucketDescription07,
                    Balance = vendAgingReportDPParameters.balance,
                    VendAccount = vendAgingReportTmp.AccountNum;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    protected Common initTargetCursor()
    {
        VendAgingReportTmp vendAgingReportTmp = vendAgingReportDPParameters.vendAgingReportTmp;

        vendAgingReportTmp.skipDataMethods(true);

        return vendAgingReportTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendAgingReportTmpFromVendTmpAccountSum construct()
    {
        return new VendAgingReportTmpFromVendTmpAccountSum();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromCustAgingReportDP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>VendTmpAccountSumFromVendAgingReportTmp</c> class.
    /// </summary>
    /// <param name = "_vendAgingReportDPParameters">
    /// An instance of <c>VendAgingReportDPParameters</c> object.
    /// </param>
    /// <returns>
    /// The instantiated <c>VendTmpAccountSumFromVendAgingReportTmp</c> object.
    /// </returns>
    public static VendAgingReportTmpFromVendTmpAccountSum newFromCustAgingReportDP(VendAgingReportDPParameters _vendAgingReportDPParameters)
    {
        VendAgingReportTmpFromVendTmpAccountSum instance = VendAgingReportTmpFromVendTmpAccountSum::construct();
        instance.vendAgingReportDPParameters = _vendAgingReportDPParameters;
        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>