<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeNonStockedConversionChangeWizard</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///   The <c>TradeNonStockedConversionChangeWizard</c> class controls the conversion change wizard.
/// </summary>
public class TradeNonStockedConversionChangeWizard extends SysWizard
{
    TradeNonStockedConversion tradeNonStockedConversion;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accessMenuFunction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>MenuFunction</c> object.
    /// </summary>
    /// <returns>
    /// An instance of the <c>MenuFunction</c> class.
    /// </returns>
    public MenuFunction accessMenuFunction()
    {
        return new MenuFunction(menuitemdisplaystr(TradeNonStockedConversionChangeWizard),MenuItemType::Display);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the wizard form.
    /// </summary>
    /// <returns>
    /// The name of the wizard form.
    /// </returns>
    formName formName()
    {
        return formstr(TradeNonStockedConversionChangeWizard);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formRunObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the <c>FormRun</c> object to an <c>Object</c>.
    /// </summary>
    /// <returns>
    /// An instance of the <c>Object</c> class.
    /// </returns>
    private Object formRunObject()
    {
        return this.formRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Controls the navigation to the next step in the wizard.
    /// </summary>
    public void next()
    {
        FormDataSource  tradeNonStockedConversionNew_ds = this.formRunObject().tradeNonStockedConversionNew_ds();
        switch (this.curTabName())
        {
            case formcontrolstr(TradeNonStockedConversionChangeWizard, Step2) :
                tradeNonStockedConversionNew_ds.write();
                break;
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTradeNonStockedConversion</Name>
				<Source><![CDATA[
    public TradeNonStockedConversion parmTradeNonStockedConversion(TradeNonStockedConversion _tradeNonStockedConversion = tradeNonStockedConversion)
    {
        tradeNonStockedConversion = _tradeNonStockedConversion;

        return tradeNonStockedConversion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Executes the conversion.
    /// </summary>
    void run()
    {
        FormDataSource  tradeNonStockedConversionNew_ds = this.formRunObject().tradeNonStockedConversionNew_ds();
        TradeNonStockedConversionChange::runChange(this.parmTradeNonStockedConversion(), tradeNonStockedConversionNew_ds.cursor().data());
        if (FormDataUtil::isFormDataSource(this.parmTradeNonStockedConversion()))
        {
            FormDataUtil::getFormDataSource(this.parmTradeNonStockedConversion()).research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupNavigation</Name>
				<Source><![CDATA[
    protected void setupNavigation()
    {
        super();
        this.skipTab(2, !TradeNonStockedConversionItem::existsStatus(this.parmTradeNonStockedConversion().RecId, TradeNonStockedConversionStatus::CheckedIssues));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Validates that the wizard can close.
    /// </summary>
    /// <returns>
    ///   true if the wizard can close; otherwise, false.
    /// </returns>
    boolean validate()
    {
        boolean ok;
        boolean isSingleClientMode;

        ok = super();

        isSingleClientMode = this.formRunObject().singleClientMode();

        if (!isSingleClientMode)
        {
            ok = checkFailed("@SYS323790");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static public TradeNonStockedConversionChangeWizard construct()
    {
        return new TradeNonStockedConversionChangeWizard();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args _args)
    {
        TradeNonStockedConversionChangeWizard wizard = TradeNonStockedConversionChangeWizard::construct();
        if (_args && _args.dataset() == tablenum(TradeNonStockedConversion))
        {
            wizard.parmTradeNonStockedConversion(_args.record() as TradeNonStockedConversion);
        }
        if (wizard.prompt())
        {
            wizard.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>