<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMActualCostContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     This is the data contract class for <c>TAMActualCost</c> SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(TAMActualCostUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class TAMActualCostContract implements SysOperationValidatable
{
    boolean         detail;
    boolean         planned;
    boolean         incurred;
    boolean         actual;
    List            listPromotionId;
    List            listCustAccount;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmActual</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('actual'),
        SysOperationLabelAttribute(literalStr("@MCR36546")),
        SysOperationHelpTextAttribute(literalStr("@MCR4410268")),
        SysOperationDisplayOrderAttribute('6')
    ]
    public boolean parmActual(boolean _actual = actual)
    {
        actual = _actual;
        return actual;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('custAccount'),
        SysOperationLabelAttribute(literalStr("@SYS7149")),
        AifCollectionTypeAttribute('_listCustAccount',Types::String,extendedTypeStr(CustAccount)),
        SysOperationDisplayOrderAttribute('2')
    ]
    public List parmCustAccount(List _listCustAccount = listCustAccount)
    {
        listCustAccount = _listCustAccount;

        return listCustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDetail</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('detail'),
        SysOperationLabelAttribute(literalStr("@SYS60132")),
        SysOperationHelpTextAttribute(literalStr("@SYS300872")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public boolean parmDetail(boolean _detail = detail)
    {
        detail = _detail;

        return detail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncurred</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('incurred'),
        SysOperationLabelAttribute(literalStr("@MCR36545")),
        SysOperationHelpTextAttribute(literalStr("@MCR4410270")),
        SysOperationDisplayOrderAttribute('5')
    ]
    public boolean parmIncurred(boolean _incurred = incurred)
    {
        incurred = _incurred;

        return incurred;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPlanned</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('planned'),
        SysOperationLabelAttribute(literalStr("@MCR36544")),
        SysOperationHelpTextAttribute(literalStr("@MCR4410269")),
        SysOperationDisplayOrderAttribute('4')
    ]
    public boolean parmPlanned(boolean _planned = planned)
    {
        planned = _planned;

        return planned;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPromotionID</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('promotionID'),
        SysOperationLabelAttribute(literalStr("@MCR25737")),
        AifCollectionTypeAttribute('_listPromotionId',Types::String,extendedTypeStr(TAMPromotionID)),
        SysOperationDisplayOrderAttribute('1')
    ]
    public List parmPromotionID(List _listPromotionId = listPromotionId)
    {
        listPromotionId = _listPromotionId;
        return listPromotionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the dialog values for errors.
    /// </summary>
    /// <returns>
    /// false if an error has occurred in the dialog values; otherwise true .
    /// </returns>
    /// <remarks>
    /// Ensure the parameters are not empty before running the report.
    /// </remarks>
    public boolean validate()
    {
        boolean ret = true;

        if (this.parmPromotionID().empty())
        {
            ret = checkFailed("@MCR4410328");
        }

        if (this.parmCustAccount().empty())
        {
            ret = checkFailed("@MCR38801");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>