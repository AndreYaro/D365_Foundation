<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCalcTax_TransLedgerCov</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchCalcTax_TransLedgerCov extends PurchCalcTax_Trans
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>transQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the line quantity for the current line to use in order for tax calculation.
    /// </summary>
    /// <returns>
    /// The line quantity.
    /// </returns>
    PurchQty transQty()
    {
        if (!purchLine.isInvoiced())
        {
            return PurchQuantity::construct(DocumentStatus::Invoice, true).calcPurchQty(purchLine, specQty);
        }
        else
        {
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSubLedgerJournalLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether subledger journal lines should be generated.
    /// </summary>
    /// <returns>
    /// true if subledger journal lines should be generated; otherwise, false.
    /// </returns>
    boolean useSubLedgerJournalLines()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useTaxUncommitted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the <c>Tax</c> class should use the <c>TaxUncommitted</c> table.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    public boolean useTaxUncommitted()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PurchCalcTax construct(Common _source)
    {
        return new PurchCalcTax_TransLedgerCov(_source);
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipTaxRecalculationsForLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the tax should be recalculated for the current line.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    public boolean skipTaxRecalculationsForLine()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>