<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventOwnerBatchReserveDeltaQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventOwnerBatchReserveDeltaQueryBuilder</c> class is used to build a<c>Query</c> sorted by inventory owner type and batch values for selecting quantities and dimensions for reservation from the <c>WHSInventReserveDeltaAggrReserveView</c> view.
/// </summary>
public class WHSInventOwnerBatchReserveDeltaQueryBuilder extends whsInvBatchReserveDeltaQueryBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSInventOwnerBatchReserveDeltaQueryBuilder construct()
    {
        return new WHSInventOwnerBatchReserveDeltaQueryBuilder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>WHSInventReserveDeltaQueryBuilder</c> instance from given parameters.
    /// </summary>
    /// <param name="_itemId">
    /// Item id.
    /// </param>
    /// <param name="_inventDimCriteria">
    /// Dimensions criteria.
    /// </param>
    /// <param name="_inventDimParmCriteria">
    /// Determines which dimensions are included.
    /// </param>
    /// <param name="_reservationHierarchyLevel">
    /// Reservation hierarchy level.
    /// </param>
    /// <param name="_ttsId">
    /// Created transaction id.
    /// </param>
    /// <param name="_includeOrdered">
    /// Determines whether ordered quantity is included.
    /// </param>
    /// <param name="_includePhysical">
    /// Determines whether physical quantity is included.
    /// </param>
    /// <param name="_sortByBatch">
    /// Determines whether the result is sorted by batch number.
    /// </param>
    /// <param name="_onlyReserveOnWHSEnabledWarehouses">
    /// Whether to allow reservation on non-WHS enabled warehouses.
    /// </param>
    /// <returns>
    /// The <c>WHSInventReserveDeltaQueryBuilder</c> instance with the parameters.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static WHSInventOwnerBatchReserveDeltaQueryBuilder newFromParameters(
        ItemId                          _itemId,
        InventDim                       _inventDimCriteria,
        InventDimParm                   _inventDimParmCriteria,
        WHSReservationHierarchyLevel    _reservationHierarchyLevel,
        CreatedTransactionId            _ttsId,
        boolean                         _includeOrdered,
        boolean                         _includePhysical,
        boolean                         _sortByBatch,
        boolean                         _onlyReserveOnWHSEnabledWarehouses = false)
    {
        WHSInventOwnerBatchReserveDeltaQueryBuilder whsInventReserveDeltaQueryBuilder = WHSInventOwnerBatchReserveDeltaQueryBuilder::construct();

        whsInventReserveDeltaQueryBuilder.initializeFromParameters(
            _itemId,
            _inventDimCriteria,
            _inventDimParmCriteria,
            _reservationHierarchyLevel,
            _ttsId,
            _includeOrdered,
            _includePhysical,
            _onlyReserveOnWHSEnabledWarehouses);

        whsInventReserveDeltaQueryBuilder.parmSortByBatch(_sortByBatch);

        return whsInventReserveDeltaQueryBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildOnHandQuery</Name>
				<Source><![CDATA[
    public Query buildOnHandQuery()
    {
        this.initQuery();

        QueryBuildDataSource qbdsInventBatch = query.addDataSource(tableNum(InventBatch));
        qbdsInventBatch.addRange(fieldNum(InventBatch, ItemId)).value(queryValue(itemId));

        QueryBuildDataSource qbdsOwnerType = qbdsInventBatch.addDataSource(tableNum(InventOwnerType));
        // Make sure our own inventory (owned by the current legal entity) is reserved first
        qbdsOwnerType.fetchMode(QueryFetchMode::One2One);

        //add ordering on batch
        this.addBatchAndOwnerOrderByFields(qbdsInventBatch, qbdsOwnerType);
        
        QueryBuildDataSource qbdsInventDim = this.addInventDimDS(qbdsOwnerType);
        qbdsInventDim.addLink(fieldNum(InventBatch, InventBatchId),fieldNum(InventDim,InventBatchId), qbdsInventBatch.name());

        QueryBuildDataSource qbdsWHSInventReserveDeltaAggrReserveView = this.addWHSInventReserveDeltaAggrReserveView(qbdsInventDim);
        qbdsWHSInventReserveDeltaAggrReserveView.addLink(fieldNum(InventBatch, ItemId), fieldNum(WHSInventReserveDeltaAggrReserveView, ItemId), qbdsInventBatch.name());
        qbdsWHSInventReserveDeltaAggrReserveView.addLink(fieldNum(InventDim, InventDimId),fieldNum(WHSInventReserveDeltaAggrReserveView, InventDimId), qbdsInventDim.name());

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>