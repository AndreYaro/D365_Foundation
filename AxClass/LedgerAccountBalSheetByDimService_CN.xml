<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAccountBalSheetByDimService_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

/// <summary>
/// The service of account balance sheet by dimensions report.
/// </summary>
class LedgerAccountBalSheetByDimService_CN extends SysOperationServiceBase
{
    private const str DestinationFileName = "@GLS221189";
    private const str FromDateParameter = 'FromDateParameter';
    private const str ToDateParameter = 'ToDateParameter';
    private const str FromAccountParameter = 'FromAccountParameter';
    private const str ToAccountParameter = 'ToAccountParameter';
    private const str ReportTitleParameter = 'ReportTitleParameter';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateAccountBalanceSheetByDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates report by generic electronic reporting.
    /// </summary>
    /// <param name = "_contract">Instance of <c>LedgerAccountBalSheetByDimContract_CN</c>.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void generateAccountBalanceSheetByDimension(LedgerAccountBalSheetByDimContract_CN _contract)
    {
        CustVendLedgerBalanceTmp_CN ledgerBalanceTmp;
        LedgerAccountBalSheetByDimDP_CN dataProvider = new LedgerAccountBalSheetByDimDP_CN();

        ERFinDimensionsRunDataContract finDimDataContract = new ERFinDimensionsRunDataContract(_contract.getDimSelectType());
        finDimDataContract.parmDimSetSelectType(_contract.getDimSetSelectType());
        finDimDataContract.parmIsMainAccountMandatory(_contract.getIsMainAccountMandatory());
        finDimDataContract.parmAskForMainAccount(_contract.getAskForMainAccount());
        finDimDataContract.parmLocalizedAttributeNames(_contract.parmLocalizedAttributeNames());

        ledgerBalanceTmp = dataProvider.prepareData(_contract, finDimDataContract);

        ERFinDimensionsDetailsUIAction eRFinDimensionsDetailsUIAction = ERFinDimensionsDetailsUIAction::constructFromFinDimensionsRunDataContract(finDimDataContract);

        // Report parameters
        ERModelDefinitionInputParametersAction modelDefinitionInputParametersAction = new ERModelDefinitionInputParametersAction();
        modelDefinitionInputParametersAction.addParameter(FromDateParameter, _contract.parmFromDate())
            .addParameter(ToDateParameter, _contract.parmToDate())
            .addParameter(FromAccountParameter, dataProvider.getFromAccount())
            .addParameter(ToAccountParameter, dataProvider.getToAccount())
            .addParameter(ReportTitleParameter, _contract.parmReportTitle());

        ERIModelDefinitionParamsAction parameters = new ERModelDefinitionParamsUIActionComposite()
                    .add(
                        new ERModelDefinitionDatabaseContext()
                            .addTemporaryTable(ledgerBalanceTmp))
                    .add(eRFinDimensionsDetailsUIAction)
                    .add(modelDefinitionInputParametersAction)
                    .add(
                        new ERModelDefinitionDatabaseContext()
                            .addValue(tableNum(CompanyInfo), fieldNum(CompanyInfo, DataArea), curext()));

        // Call ER to generate the excel.
        ERObjectsFactory::createFormatMappingRunByFormatMappingId(
            _contract.parmERBinding(),
            DestinationFileName)
                .withParameter(parameters)
                .withFileDestination(_contract.getFileDestination())
                .run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>