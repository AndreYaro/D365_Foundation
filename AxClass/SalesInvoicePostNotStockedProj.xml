<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesInvoicePostNotStockedProj</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesInvoicePostNotStockedProj extends SalesInvoicePostNotStocked
{
    SalesParmTable salesParmTable;
    RefRecId sourceDocumentHeaderRecId;
    RefRecId sourceDocumentLineRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSourceDocumentHeader</Name>
				<Source><![CDATA[
    protected RefRecId getSourceDocumentHeader()
    {
        if (!sourceDocumentHeaderRecId)
        {
            SourceDocumentHeader sourceDocumentHeader = SourceDocumentHeader::insertSourceDocument(tablenum(ProjInvoiceJour), enumstr(SourceDocument_ProjectInvoice), SourceDocument_ProjectInvoice::ProjectInvoice);
            sourceDocumentHeaderRecId = sourceDocumentHeader.RecId;
        }

        return sourceDocumentHeaderRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceDocumentLine</Name>
				<Source><![CDATA[
    protected RefRecId getSourceDocumentLine(ProjProposalItem _projProposalItem)
    {
        if (!sourceDocumentLineRecId)
        {
            SourceDocumentLine sourceDocumentLine = SourceDocumentLine::insertSourceDocumentLine(
                                                                           this.getSourceDocumentHeader(),
                                                                           tablenum(ProjInvoiceItem),
                                                                           enumstr(SourceDocumentLine_ProjectInvoice),
                                                                           SourceDocumentLine_ProjectInvoice::ProjectItemInvoiceLine,
                                                                           DateTimeUtil::date(
                                                                               DateTimeUtil::applyTimeZoneOffset(
                                                                                   SourceDocumentHeader::find(sourceDocumentHeaderRecId).createdDateTime,
                                                                                   DateTimeUtil::getUserPreferredTimeZone())));

            sourceDocumentLineRecId = sourceDocumentLine.RecId;
        }

        return sourceDocumentLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    protected AmountCur lineAmount()
    {
        return salesLine.calcLineAmountExclTax(this.qty(), this.salesParmTable().Transdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountTax</Name>
				<Source><![CDATA[
    protected LineAmountTax lineAmountTax()
    {
        return salesLine.calcLineAmount(this.qty());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentHeaderRecId</Name>
				<Source><![CDATA[
    public RefRecId parmSourceDocumentHeaderRecId(RefRecId _sourceDocumentHeaderRecId = sourceDocumentHeaderRecId)
    {
        sourceDocumentHeaderRecId = _sourceDocumentHeaderRecId;

        return sourceDocumentHeaderRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentLineRecId</Name>
				<Source><![CDATA[
    public RefRecId parmSourceDocumentLineRecId()
    {
        return sourceDocumentLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine the invoice posting quantity.
    /// </summary>
    /// <param name = "_salesLine">Sales order line record.</param>
    /// <param name = "_journalLine">Invoice proposal line.</param>
    /// <param name = "_result">An instance of <c>EventHandlerResult</c> subscribers should you to return the result.</param>
    delegate void qtyDelegate(SalesLine _salesLine, ProjProposalItem _journalLine, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    protected SalesInvoicedQty qty()
    {
        ProjProposalItem projProposalItem = this.parmJournalLine();

        switch (this.parmSalesLine().SalesType)
        {
            case SalesType::ItemReq:
                return projProposalItem.projItemTrans().Qty;
            case SalesType::Sales:
            case SalesType::Subscription:
                return projProposalItem.DeliverNow;
            default:
                EventHandlerResult result = EventHandlerResult::newSingleResponse();
                this.qtyDelegate(this.parmSalesLine(), projProposalItem, result);
                if (result.hasResult())
                {
                    return result.result();
                }
                return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesParmTable</Name>
				<Source><![CDATA[
    protected SalesParmTable salesParmTable()
    {
        if (!salesParmTable)
        {
            salesParmTable = this.parmSalesParmLine().salesParmTable();
        }

        return salesParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDocumentLine</Name>
				<Source><![CDATA[
    protected RefRecId sourceDocumentLine()
    {
        ProjProposalItem projProposalItem = this.parmJournalLine();

        return this.getSourceDocumentLine(projProposalItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumLineDisc</Name>
				<Source><![CDATA[
    protected SalesSumLineDiscAmount sumLineDisc()
    {
        return salesLine.calcLineDiscExclTax(this.qty(), this.salesParmTable().Transdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SalesInvoicePostNotStockedProj construct(
        ProjProposalItem _projProposalItem,
        SalesLine _salesLine,
        SalesParmLine _salesParmLine,
        RecordInsertList _recordInsertListCustInvoicePackingSlipMatch,
        RefRecId _sourceDocumentHeaderRecId)
    {
        SalesInvoicePostNotStockedProj salesInvoicePostNotStockedProj = new SalesInvoicePostNotStockedProj( _projProposalItem, _salesLine, _salesParmLine, _recordInsertListCustInvoicePackingSlipMatch);

        salesInvoicePostNotStockedProj.parmSourceDocumentHeaderRecId(_sourceDocumentHeaderRecId);

        return salesInvoicePostNotStockedProj;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
