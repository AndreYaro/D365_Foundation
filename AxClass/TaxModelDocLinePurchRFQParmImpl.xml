<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLinePurchRFQParmImpl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The tax model class for <c>PurchRFQParmLine</c>.
/// </summary>
[TaxModelDocumentLineAttribute(tableStr(PurchRFQParmLine))]
public class TaxModelDocLinePurchRFQParmImpl extends TaxModelDocLinePurchRFQImpl
{
    PurchRFQParmLine purchRFQParmLine;
    PurchRFQParmTable purchRFQParmTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init the domain object.
    /// The method should only be called by the <c>TaxModelDocLineFactoryable</c> classes.
    /// </summary>
    /// <param name="_documentLineMap">
    /// The document line buffer.
    /// </param>
    public void init(SalesPurchJournalLine _documentLineMap)
    {
        PurchRFQLine  purchRFQLineLoc;

        purchRFQParmLine = _documentLineMap;
        purchRFQParmTable = purchRFQParmLine.purchRFQParmTable();
        purchRFQLineLoc = purchRFQParmLine.purchRFQLine();
        super(purchRFQLineLoc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the quantity from the transaction line.
    /// </summary>
    /// <returns>
    ///    The quantity.
    /// </returns>
    /// <remarks>
    ///    If the transaction does not support quantities, 0 may be passed as the quantity. This will be used
    ///    to calculate taxes by unit.
    /// </remarks>
    public Qty getQuantity()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction posting date
    /// </summary>
    /// <returns>
    /// The transaction posting date
    /// </returns>
    public TransDate getTransDate()
    {
        return DateTimeUtil::date(purchRFQParmTable.createdDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxableDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the taxable document type.
    /// </summary>
    /// <returns>The taxable document type.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str getTaxableDocumentType()
    {
        TaxableDocumentDescriptor taxableDocumentDescriptor = TaxableDocumentDescriptorFactory::getTaxableDocumentDescriptor(purchRFQParmTable);

        TaxableDocumentType taxableDocumentType = TaxableDocumentType::findByInterfaceName(taxableDocumentDescriptor.getSourceTaxableDocumentType());

        return taxableDocumentType.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line amount of the document line.
    /// </summary>
    /// <returns>
    /// The line amount.
    /// </returns>
    public LineAmount getLineAmount()
    {
        return purchRFQParmLine.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentInvoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction invoice date
    /// </summary>
    /// <returns>
    /// The transaction invoice date
    /// </returns>
    public InvoiceDate getDocumentInvoiceDate()
    {
        return DateTimeUtil::date(purchRFQParmTable.CreatedDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction document date
    /// </summary>
    /// <returns>
    /// The transaction document date
    /// </returns>
    public DocumentDate getDocumentDate()
    {
        return DateTimeUtil::date(purchRFQParmTable.CreatedDateTime);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>