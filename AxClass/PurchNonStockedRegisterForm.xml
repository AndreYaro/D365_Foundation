<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchNonStockedRegisterForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The purchase order specific implementation for the <c>TradeNonStockedRegisterForm</c> class.
/// </summary>
class PurchNonStockedRegisterForm extends TradeNonStockedRegisterForm
{
    PurchLine purchLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventMovement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the instance of <c>InventMovement</c> class based on the <c>PurchLine</c> object.
    /// </summary>
    /// <returns>
    /// Gets an instance of the <c>InventMovement</c> class.
    /// </returns>
    protected InventMovement getInventMovement()
    {
        return InventMovement::construct(purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ordered and registered quantities for the <c>PurchLine</c> object.
    /// </summary>
    /// <returns>
    /// A container that has the on-order and registered quantities.
    /// </returns>
    protected container getQuantities()
    {
        return PurchNonStockedRegisterForm::getQuantitiesServer(purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLine</Name>
				<Source><![CDATA[
        public PurchLine parmPurchLine(PurchLine _purchLine = purchLine)
    {
        purchLine = _purchLine;
        return purchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchLine</Name>
				<Source><![CDATA[
        public SalesPurchLine parmSalesPurchLine(SalesPurchLine _salesPurchLine = salesPurchLine)
    {
        purchLine       = _salesPurchLine;
        salesPurchLine  = _salesPurchLine;
        return salesPurchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        protected static PurchNonStockedRegisterForm construct()
    {
        return new PurchNonStockedRegisterForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantitiesServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ordered and registered quantities for the <c>PurchLine</c> object; runs on server.
    /// </summary>
    /// <param name="_purchLine">
    /// The <c>PurchLine</c> object for which the quantities are returned.
    /// </param>
    /// <returns>
    /// A container that has the on-order and registered quantities.
    /// </returns>
    public static container getQuantitiesServer(PurchLine _purchLine)
    {
        UnitQty     registeredQuantity;
        UnitQty     orderedQuantity;

        orderedQuantity     = _purchLine.orderedInPurchUnit();
        registeredQuantity  = _purchLine.registeredInPurchUnit();

        return [orderedQuantity, registeredQuantity];
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>PurchNonStockedRegisterForm</c> with the specified
    /// <c>PurchLine</c> object.
    /// </summary>
    /// <param name="_purchLine">
    /// A <c>PurchLine</c> object based on which to initialize the <c>PurchNonStockedRegisterForm</c>.
    /// </param>
    /// <returns>
    /// A <c>PurchNonStockedRegisterForm</c> object.
    /// </returns>
    public static PurchNonStockedRegisterForm newFromPurchLine(PurchLine _purchLine)
    {
        PurchNonStockedRegisterForm purchNonStockedRegisterForm;

        purchNonStockedRegisterForm = PurchNonStockedRegisterForm::construct();
        purchNonStockedRegisterForm.parmPurchLine(_purchLine);
        purchNonStockedRegisterForm.parmSalesPurchLine(_purchLine);

        return purchNonStockedRegisterForm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>