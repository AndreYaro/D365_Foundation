<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>wmsLocationLabelDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>WMSLocationLabelDP</c> class is the report data provider class for the
///    <c>WMSLocationLabel</c> reports.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(WMSLocationLabel)),
    SRSReportParameterAttribute(classStr(WMSLocationLabelContract))
]
public class wmsLocationLabelDP extends SRSReportDataProviderBase
{
    WMSLocationLabelTmp wmsLocationLabelTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWmsLocationLabelTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets data from the <c>WMSLocationLabelTmp</c> temporary table.
    /// </summary>
    /// <returns>
    ///    The data from the <c>WMSLocationLabelTmp</c> temporary table.
    /// </returns>
    [SRSReportDataSetAttribute('WMSLocationLabelTmp')]
    public WMSLocationLabelTmp getWmsLocationLabelTmp()
    {
        select * from wmsLocationLabelTmp;
        return wmsLocationLabelTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertWMSLocationLabelTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts data in the <c>WMSLocationLabelTmp</c> temporary table.
    /// </summary>
    /// <param name="_wmsLocattion">
    ///    A WMS location.
    /// </param>
    /// <param name="_barcodeSetup">
    ///    A barcode setup to be used for barcode string validation.
    /// </param>
    /// <param name="_barcode">
    ///    A barcode object to be used to convert WMS location ID value to a barcode string.
    /// </param>
    private void insertWMSLocationLabelTmp(
        WMSLocation     _wmsLocattion,
        BarcodeSetup    _barcodeSetup,
        Barcode         _barcode)
    {
        int                     currentInfologLine;
        SysInfologEnumerator    infoEnumerator;

        wmsLocationLabelTmp.clear();
        wmsLocationLabelTmp.InventLocationId    = _wmsLocattion.InventLocationId;
        wmsLocationLabelTmp.wmsLocationId       = _wmsLocattion.wmsLocationId;
        wmsLocationLabelTmp.CheckText           = _wmsLocattion.CheckText;

        if (_barcodeSetup)
        {
            currentInfologLine = infologLine();

            if (_barcodeSetup.validateBarcode(_wmsLocattion.wmsLocationId))
            {
                _barcode.string(true, _wmsLocattion.wmsLocationId);

                if (_barcodeSetup.FontName)
                {
                   wmsLocationLabelTmp.Barcode = _barcode.barcodeStr();
                }

                wmsLocationLabelTmp.BarcodeHR   = _barcode.barcodeStrHR();
            }
            else
            {
                infoEnumerator = SysInfologEnumerator::newData(infolog.copy(currentInfologLine + 1, infologLine()));

                while (infoEnumerator.moveNext())
                {
                    wmsLocationLabelTmp.ErrorMessage += infoEnumerator.currentMessage();
                }
            }
        }

        wmsLocationLabelTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the report business logic.
    /// </summary>
    /// <remarks>
    ///    This method is used to process the report business logic which is used by the
    ///    <c>WMSLocationLabel</c> reports.
    /// </remarks>
    public void processReport()
    {
        QueryRun                    queryRun;
        WMSLocationLabelContract    contract;
        BarcodeSetup        barcodeSetup;
        Barcode             barcode;

        contract = this.parmDataContract() as WMSLocationLabelContract;

        barcodeSetup    = BarcodeSetup::find(contract.parmBarcodeSetupId());
        barcode         = barcodeSetup.barcode();

        queryRun = new QueryRun(this.parmQuery());

        while (queryRun.next())
        {
            this.insertWMSLocationLabelTmp(queryRun.get(tableNum(WMSLocation)) as WMSLocation, barcodeSetup, barcode);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
