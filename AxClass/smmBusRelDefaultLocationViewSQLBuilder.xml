<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmBusRelDefaultLocationViewSQLBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final static class smmBusRelDefaultLocationViewSQLBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateLocationSQLText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a SQL string used on views joining to various smmBusRel entities to determine the default address location for a given business relation and type.
    /// </summary>
    /// <param name = "_roleTypeFilter">A <c>LogisticsLocationRoleType</c> to use when creating the SQL.</param>
    /// <returns>A SQL string.</returns>
    /// <remarks>
    ///  The SQL string returned will be in the form of 
    /// (SELECT TOP 1 CDRL.LOGISTICSLOCATION FROM SMMBUSRELDEFAULTROLELOCATION CDRL WHERE T1.PARTITION = CDRL.PARTITION AND T1.DATAAREAID = CDRL.DATAAREAID AND T1.BUSRELACCOUNT = CDRL.BUSRELACCOUNT AND CDRL.TYPE = 2 )
    /// </remarks>
    internal static str generateLocationSQLText(LogisticsLocationRoleType _roleTypeFilter)
    {
        SysDictTable dtDirPartyLocation = new SysDictTable(tableNum(DirPartyLocation));
        SysDictTable dtBusRelDefaultRoleLocation = new SysDictTable(tableNum(smmBusRelDefaultRoleLocation));

        FieldName dplLocation = dtDirPartyLocation.fieldName(fieldNum(DirPartyLocation, Location), DbBackend::Sql);
        FieldName dplRecId = dtDirPartyLocation.fieldName(fieldNum(DirPartyLocation, RecId), DbBackend::Sql);
        
        FieldName cdrlLocation = dtBusRelDefaultRoleLocation.fieldName(fieldNum(smmBusRelDefaultRoleLocation, LogisticsLocation), DbBackend::Sql);
        FieldName cdrlBusRelAccount = dtBusRelDefaultRoleLocation.fieldName(fieldNum(smmBusRelDefaultRoleLocation, BusRelAccount), DbBackend::Sql);
        FieldName cdrlPartition = dtBusRelDefaultRoleLocation.fieldName(fieldNum(smmBusRelDefaultRoleLocation, Partition), DbBackend::Sql);
        FieldName cdrlDataAreaId = dtBusRelDefaultRoleLocation.fieldName(fieldNum(smmBusRelDefaultRoleLocation, DataAreaId), DbBackend::Sql);
        FieldName cdrlRoleType = dtBusRelDefaultRoleLocation.fieldName(fieldNum(smmBusRelDefaultRoleLocation, Type), DbBackend::Sql);

        // Using SysComputedColumn to get the field names off the view, the T1 alias will be included. Don't prefix them when building the SQL string later
        FieldName ctBusRelAccount = SysComputedColumn::returnField(tableStr(smmProspectEntity), dataEntityDataSourceStr(smmProspectEntity, smmBusRelTable), fieldStr(smmBusRelTable, BusRelAccount));
        FieldName ctRecId = SysComputedColumn::returnField(tableStr(smmProspectEntity), dataEntityDataSourceStr(smmProspectEntity, smmBusRelTable), fieldStr(smmBusRelTable, RecId));
        FieldName ctPartition = SysComputedColumn::returnField(tableStr(smmProspectEntity), dataEntityDataSourceStr(smmProspectEntity, smmBusRelTable), fieldStr(smmBusRelTable, Partition));
        FieldName ctDataAreaId = SysComputedColumn::returnField(tableStr(smmProspectEntity), dataEntityDataSourceStr(smmProspectEntity, smmBusRelTable), fieldStr(smmBusRelTable, DataAreaId));

        System.Text.StringBuilder selectSB = new System.Text.StringBuilder();

        // SELECT TOP 1 LOCATION FROM SMMBUSRELDEFAULTLOCATION CDRL
        selectSB.AppendFormat('SELECT TOP 1 CDRL.{0} FROM {1} CDRL ', cdrlLocation, dtBusRelDefaultRoleLocation.name(DbBackend::Sql));

        // WHERE T1.PARTITION = CDRL.PARTITION
        selectSB.AppendFormat('WHERE {0} = CDRL.{1} ', ctPartition, cdrlPartition);

        // AND T1.DATAAREAID = CDRL.DATAAREAID
        selectSB.AppendFormat('AND {0} = CDRL.{1} ', ctDataAreaId, cdrlDataAreaId);

        // AND T1.BusRelAccount = CDRL.BusRelAccount
        selectSB.AppendFormat('AND {0} = CDRL.{1} ', ctBusRelAccount, cdrlBusRelAccount);

        // AND CDRL.TYPE = 2
        selectSB.AppendFormat('AND CDRL.{0} = {1} ', cdrlRoleType, any2Str(enum2int(_roleTypeFilter)));

        return selectSB.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>