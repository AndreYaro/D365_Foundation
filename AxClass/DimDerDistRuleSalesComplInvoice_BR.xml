<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimDerDistRuleSalesComplInvoice_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Dimension derivation rule for sales complementary invoice.
/// </summary>
[SourceDocumentClassExtensionAttribute(classStr(AccDistRuleSalesComplInvoice))]
class DimDerDistRuleSalesComplInvoice_BR extends DimensionDerivationRuleExtension
{
    accountingRule          accountingRule;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createDimAllocForProjRevenue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new <c>LedgerDimensionAllocation</c> object according to project item parameters.
    /// </summary>
    /// <param name = "_projectItem">The project item instance.</param>
    /// <returns>The <c>LedgerDimensionAllocation</c> instance set up with postin profiles parameters.</returns>
    protected LedgerDimensionAllocation createDimAllocForProjRevenue(SourceDocumentLineItemIProject _projectItem)
    {
        LedgerDimensionDefaultAccount           ledgerDimensionDefaultAccount;
        LedgerDimensionAccount                  ledgerDimension;
        SalesComplementaryInvSourceDocLine      salesComplementaryInvSourceDocLine;
        TaxGroup                                taxGroup = '';

        if (accountingRule.parmSourceDocumentLineItem() is SalesComplementaryInvSourceDocLine)
        {
            salesComplementaryInvSourceDocLine = accountingRule.parmSourceDocumentLineItem() as SalesComplementaryInvSourceDocLine;
            taxGroup                           = salesComplementaryInvSourceDocLine.parmSalesTaxGroup();
        }
        ledgerDimensionDefaultAccount = ProjPosting::findprojPosting(ProjAccountType::RevenueAccount,
                                                                     _projectItem.parmProjectId(),
                                                                     _projectItem.parmProjectCategoryId(),
                                                                     _projectItem.parmProjectFundingSourceRecId(),
                                                                     false,
                                                                     taxGroup).LedgerDimension;

        ledgerDimension = LedgerDimensionFacade::serviceCreateLedgerDimension(ledgerDimensionDefaultAccount, accountingRule.parmSourceDocumentLineItem().parmDefaultDimension());

        return LedgerDimensionAllocation::newFromParameters(
            ledgerDimension,
            1,
            accountingRule.parmSide(),
            false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateDimAllocList</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Populates the dimension allocation list.
    /// </summary>
    /// <param name="_ledgerDimensionAllocationList">
    ///     Current dimension allocation list.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void populateDimAllocList(LedgerDimensionAllocationList _ledgerDimensionAllocationList)
    {
        LedgerDimensionAllocation       ledgerDimensionAllocation;
        SourceDocumentLineItemIProject  projectItem;

        accountingRule = dimensionDerivationRule.parmAccountingRule();

        if (accountingRule.parmSourceDocumentLineItem() is SourceDocumentLineItemIProject)
        {
            projectItem = accountingRule.parmSourceDocumentLineItem() as SourceDocumentLineItemIProject;
            if (projectItem.parmProjectId())
            {
                ledgerDimensionAllocation = this.createDimAllocForProjRevenue(projectItem);
                _ledgerDimensionAllocationList.addEnd(LedgerDimensionAllocation);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribe to dimension derivation rule events.
    /// </summary>
    protected void subscribe()
    {
        dimensionDerivationRule.populatingDimAllocListEventHandler += eventhandler(this.populateDimAllocList);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>