<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SrsProxy_ApplicationSuite_IT_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SrsProxy))]
internal final class SrsProxy_ApplicationSuite_IT_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>renderReportToByteArray</Name>
				<Source><![CDATA[
    public System.Byte[] renderReportToByteArray(
        str _reportPath,
        Microsoft.Dynamics.AX.Framework.Reporting.Shared.ReportingService.ParameterValue[] _parameterValueArray,
        SRSReportFileFormat _fileFormat,
        str _deviceInfo,
        str _executionID)
    {
        System.Byte[] reportBytes = next renderReportToByteArray(
            _reportPath,
            _parameterValueArray,
            _fileFormat,
            _deviceInfo,
            _executionID);

        LedgerFiscalJournalContext_IT context = LedgerFiscalJournalContext_IT::current();

        if (context
            && strContains(_reportPath, ssrsReportStr(LedgerFiscalJournal_IT, Report))
            && _fileFormat == SRSReportFileFormat::PDF)
        {
            System.IO.MemoryStream stream = new System.IO.MemoryStream(reportBytes);
            System.IO.StreamReader streamReader = new System.IO.StreamReader(stream);
            System.Text.RegularExpressions.Regex regex = new System.Text.RegularExpressions.Regex(@'/Type\s*/Page[^s]');
            System.Text.RegularExpressions.MatchCollection matchCollection = regex.Matches(streamReader.ReadToEnd());

            ttsbegin;
            LedgerReportJournal_IT ledgerReportJournal = LedgerReportJournal_IT::findByPrintDate(context.toDate, true);
            if (ledgerReportJournal)
            {
                ledgerReportJournal.Page = matchCollection.Count;
                ledgerReportJournal.update();
            }
            ttscommit;
        }

        return reportBytes;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>