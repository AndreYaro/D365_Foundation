<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductReleaseSessionsForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>EcoResProductReleaseSessionsForm</c> class provides the methods to control the
///    <c>EcoResProductReleaseSessions</c> form behavior and handle form events.
/// </summary>
class EcoResProductReleaseSessionsForm
{
    FormDataSource                      productFormDataSource;
    FormDataSource                      companyInfoFormDataSource;
    FormDataSource                      productVariantFormDataSource;
    FormDataSource                      releaseSessionFormDataSource;
    FormDataSource                      selectSessionFormDataSource;

    EcoResReleaseSessionRecId           releaseSessionRecId;

    EcoResProductReleaseSessionManager  productReleaseSessionManager;

    Query                               queryReleaseSession;
    Query                               queryReleaseSessionProducts;
    Query                               queryReleaseSessionVariants;

    QueryBuildRange                     qbrReleaseSessionRecId;
    QueryBuildRange                     qbrReleaseSessionProductsSession;
    QueryBuildRange                     qbrReleaseSessionVariantsSession;
    QueryBuildRange                     qbrReleaseSessionVariantsProduct;
    QueryBuildRange                     qbrReleaseSessionVariantsLegalEntity;

    Map                                 hasInfologCache;

    FormFunctionButtonControl           menuButtonDetailsExtended;
    FormFunctionButtonControl           menuButtonVariantsPerCompany;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activeProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the active event of the product data source.
    /// </summary>
    public void activeProduct()
    {
        EcoResProduct   ecoResProduct       = productFormDataSource.cursor();
        CompanyInfo     companyInfo         = companyInfoFormDataSource.cursor();
        boolean         isProductReleased   = false;

        changecompany (companyInfo.DataArea)
        {
            if (InventTable::findByProduct(ecoResProduct.RecId).RecId != 0)
            {
                isProductReleased = true;
            }
        }
        if (menuButtonDetailsExtended)
        {
            menuButtonDetailsExtended.enabled(isProductReleased);
        }

        if (menuButtonVariantsPerCompany)
        {
            menuButtonVariantsPerCompany.enabled(isProductReleased);
        }

        qbrReleaseSessionVariantsProduct.value(queryValue(ecoResProduct.RecId));
        qbrReleaseSessionVariantsLegalEntity.value(queryValue(companyInfo.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the delete event of the product form data source.
    /// </summary>
    public void deleteProduct()
    {
        this.deleteProducts(productFormDataSource);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProducts</Name>
				<Source><![CDATA[
    private void deleteProducts(FormDataSource _productFormDataSource)
    {
        Common  common;

        for (   common = _productFormDataSource.getFirst(true) ?
                        _productFormDataSource.getFirst(true) :
                        _productFormDataSource.cursor();
                common;
                common = _productFormDataSource.getNext())
        {
            this.removeProductLegalEntity(
                common as EcoResProduct,
                companyInfoFormDataSource.cursor() as CompanyInfo);
        }
        _productFormDataSource.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProductVariant</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the delete event of the product variant form data source.
    /// </summary>
    public void deleteProductVariant()
    {
        this.deleteProducts(productVariantFormDataSource);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the delete event of the product release session.
    /// </summary>
    public void deleteSession()
    {
        productReleaseSessionManager.deleteSession();
        productFormDataSource.research(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeQueryOnMainFormDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes queries on the main form data sources.
    /// </summary>
    private void executeQueryOnMainFormDataSources()
    {
        releaseSessionFormDataSource.executeQuery();
        productFormDataSource.executeQuery();

        this.flushHasInfologCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInitialReleaseSessionRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds an ID of the latest release session.
    /// </summary>
    private void findInitialReleaseSessionRecId()
    {
        EcoResReleaseSession    ecoResReleaseSessionInitial;

        select firstonly RecId
            from        ecoResReleaseSessionInitial
            order by    CreatedDateTime desc;

        releaseSessionRecId = ecoResReleaseSessionInitial.RecId;

        productReleaseSessionManager.parmReleaseSessionRecId(ecoResReleaseSessionInitial.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>flushHasInfologCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Flushes the <c>hasInfologCache</c> cache.
    /// </summary>
    private void flushHasInfologCache()
    {
        hasInfologCache = new Map(Types::Container, Types::Enum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formInit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the initialize event of the form.
    /// </summary>
    public void formInit()
    {
        this.findInitialReleaseSessionRecId();

        EcoResReleaseSessionProduct ecoResReleaseSessionProduct = selectSessionFormDataSource.cursor() as EcoResReleaseSessionProduct;
        ecoResReleaseSessionProduct.ReleaseSession = releaseSessionRecId;
        selectSessionFormDataSource.write();

        this.setReleaseSessionRanges();
        this.executeQueryOnMainFormDataSources();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasInfologProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a product has an Infolog stored during release to a legal entity.
    /// </summary>
    /// <param name="_productRecId">
    /// The product ID to check.
    /// </param>
    /// <param name="_legalEntityRecId">
    /// The legal entity ID to which to release.
    /// </param>
    /// <returns>
    /// true if a product has Infolog stored during release to a legal entity; otherwise, false.
    /// </returns>
    public NoYes hasInfologProduct(
        EcoResProductRecId  _productRecId,
        RefRecId            _legalEntityRecId)
    {
        container   key = [releaseSessionRecId, _productRecId, _legalEntityRecId];
        NoYes       hasInfolog;

        if (!hasInfologCache.exists(key))
        {
            hasInfolog  = EcoResReleaseProductLegalEntityLog::hasInfolog(
                releaseSessionRecId,
                _productRecId,
                _legalEntityRecId);
            hasInfologCache.insert(key, hasInfolog);
        }
        else
        {
            hasInfolog  = hasInfologCache.lookup(key);
        }

        return hasInfolog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>EcoResProductReleaseSessionsForm</c> class.
    /// </summary>
    public void init()
    {
        hasInfologCache                 = new Map(Types::Container, Types::Enum);
        productReleaseSessionManager    = EcoResProductReleaseSessionManager::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFormQueries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes queries that will be used on the form data sources.
    /// </summary>
    private void initFormQueries()
    {
        queryReleaseSession         = new Query();
        qbrReleaseSessionRecId                  = queryReleaseSession.addDataSource(
            tableNum(EcoResReleaseSession)).addRange(
                fieldNum(EcoResReleaseSession, RecId));

        queryReleaseSessionProducts = EcoResReleaseSessionProduct::releaseSessionQuery();

        qbrReleaseSessionProductsSession        = queryReleaseSessionProducts.dataSourceName(
            queryDataSourceStr(EcoResProductReleaseSession, EcoResReleaseSessionProduct)).rangeField(
                fieldNum(EcoResReleaseSessionProduct, ReleaseSession));

        queryReleaseSessionVariants = new Query(queryStr(EcoResProductReleaseSessionVariants));

        qbrReleaseSessionVariantsProduct       = queryReleaseSessionVariants.dataSourceName(
            queryDataSourceStr(EcoResProductReleaseSessionVariants, EcoResDistinctProductVariant)).rangeField(
                fieldNum(EcoResDistinctProductVariant, ProductMaster));
        qbrReleaseSessionVariantsSession        = queryReleaseSessionVariants.dataSourceName(
            queryDataSourceStr(EcoResProductReleaseSessionVariants, EcoResReleaseSessionProduct)).rangeField(
                fieldNum(EcoResReleaseSessionProduct, ReleaseSession));
        qbrReleaseSessionVariantsLegalEntity    = queryReleaseSessionVariants.dataSourceName(
            queryDataSourceStr(EcoResProductReleaseSessionVariants, EcoResReleaseProductLegalEntity)).rangeField(
                fieldNum(EcoResReleaseProductLegalEntity, LegalEntity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReleaseSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the look up form for release sessions and retrieves the user selection.
    /// </summary>
    /// <param name="_formReferenceControl">
    /// A form control that displays release session.
    /// </param>
    /// <returns>
    /// A release session that is selected by the user.
    /// </returns>
    public Common lookupReleaseSession(FormReferenceControl _formReferenceControl)
    {
        SysReferenceTableLookup sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(EcoResReleaseSession), _formReferenceControl);
        sysReferenceTableLookup.addLookupfield(fieldNum(EcoResReleaseSession, CreatedBy));
        sysReferenceTableLookup.addLookupfield(fieldNum(EcoResReleaseSession, CreatedDateTime));

        Query query = new Query();
        query.addDataSource(tableNum(EcoResReleaseSession)).addOrderByField(
            fieldNum(EcoResReleaseSession, CreatedDateTime),
            SortOrder::Descending);

        sysReferenceTableLookup.parmQuery(query);

        return sysReferenceTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedReleaseSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the modified event on the form control that displays the release session.
    /// </summary>
    public void modifiedReleaseSession()
    {
        EcoResReleaseSessionProduct ecoResReleaseSessionProduct = selectSessionFormDataSource.cursor() as EcoResReleaseSessionProduct;
        releaseSessionRecId = ecoResReleaseSessionProduct.ReleaseSession;

        productReleaseSessionManager.parmReleaseSessionRecId(releaseSessionRecId);

        this.setReleaseSessionRanges();
        this.executeQueryOnMainFormDataSources();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        this.initFormQueries();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyInfoFormDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmCompanyInfoFormDataSource(FormDataSource _companyInfoFormDataSource = companyInfoFormDataSource)
    {
        companyInfoFormDataSource = _companyInfoFormDataSource;

        return companyInfoFormDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuButtonDetailsExtended</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmMenuButtonDetailsExtended(FormFunctionButtonControl _menuButtonDetailsExtended = menuButtonDetailsExtended)
    {
        menuButtonDetailsExtended = _menuButtonDetailsExtended;

        return menuButtonDetailsExtended;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuButtonVariantsPerCompany</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmMenuButtonVariantsPerCompany(FormFunctionButtonControl _menuButtonVariantsPerCompany = menuButtonVariantsPerCompany)
    {
        menuButtonVariantsPerCompany = _menuButtonVariantsPerCompany;

        return menuButtonVariantsPerCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductFormDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmProductFormDataSource(FormDataSource _productFormDataSource = productFormDataSource)
    {
        productFormDataSource = _productFormDataSource;

        return productFormDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductVariantFormDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmProductVariantFormDataSource(FormDataSource _productVariantFormDataSource = productVariantFormDataSource)
    {
        productVariantFormDataSource = _productVariantFormDataSource;

        return productVariantFormDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReleaseSessionFormDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmReleaseSessionFormDataSource(FormDataSource _releaseSessionFormDataSource = releaseSessionFormDataSource)
    {
        releaseSessionFormDataSource = _releaseSessionFormDataSource;

        return releaseSessionFormDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReleaseSessionRecId</Name>
				<Source><![CDATA[
    public EcoResReleaseSessionRecId parmReleaseSessionRecId(EcoResReleaseSessionRecId _releaseSessionRecId = releaseSessionRecId)
    {
        releaseSessionRecId = _releaseSessionRecId;

        return releaseSessionRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSelectSessionFormDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmSelectSessionFormDataSource(FormDataSource _selectSessionFormDataSource = selectSessionFormDataSource)
    {
        selectSessionFormDataSource = _selectSessionFormDataSource;

        return selectSessionFormDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryReleaseSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a query for the release session form data source.
    /// </summary>
    /// <returns>
    /// A query for the release session form data source.
    /// </returns>
    public Query queryReleaseSession()
    {
        return queryReleaseSession;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryReleaseSessionProducts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a query for all product matters and distinct products to be displayed in the open release
    /// sessions form.
    /// </summary>
    /// <returns>
    /// A query for all product matters and distinct products to be displayed in the open release sessions
    /// form.
    /// </returns>
    public Query queryReleaseSessionProducts()
    {
        return queryReleaseSessionProducts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryReleaseSessionVariants</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a query for alldistinct product variants to be displayed in the open release sessions form.
    /// </summary>
    /// <returns>
    /// A query for all distinct product variants to be displayed in the open release sessions form.
    /// </returns>
    public Query queryReleaseSessionVariants()
    {
        return queryReleaseSessionVariants;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the form.
    /// </summary>
    public void refresh()
    {
        productFormDataSource.research(true);
        this.flushHasInfologCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeProductLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes a legal entity for a product from the release session.
    /// </summary>
    /// <param name="_ecoResProduct">
    /// An <c>EcoResProduct</c> table record.
    /// </param>
    /// <param name="_companyInfo">
    /// A <c>CompanyInfo</c> table record.
    /// </param>
    private void removeProductLegalEntity(
        EcoResProduct   _ecoResProduct,
        CompanyInfo     _companyInfo)
    {
        if (_ecoResProduct.isProductMaster())
        {
            productReleaseSessionManager.removeLegalEntityForMasterWithVariants(_companyInfo.RecId, _ecoResProduct.RecId);
        }
        else
        {
            productReleaseSessionManager.removeLegalEntityForProduct(_companyInfo.RecId, _ecoResProduct.RecId);
        }

        productReleaseSessionManager.cleanUp();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReleaseSessionRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets release session ID range value for all queries that are used in the form.
    /// </summary>
    private void setReleaseSessionRanges()
    {
        qbrReleaseSessionRecId.value(queryValue(releaseSessionRecId));
        qbrReleaseSessionProductsSession.value(queryValue(releaseSessionRecId));
        qbrReleaseSessionVariantsSession.value(queryValue(releaseSessionRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewInfologProductClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the clicked event for the view Infolog for the products button.
    /// </summary>
    public void viewInfologProductClicked()
    {
        EcoResReleaseProductLegalEntityLog::showInfolog(
            releaseSessionRecId,
            productFormDataSource.cursor().RecId,
            companyInfoFormDataSource.cursor().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewInfologProductVariantClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles clicked event for the view Infolog for the product variants button.
    /// </summary>
    public void viewInfologProductVariantClicked()
    {
        EcoResReleaseProductLegalEntityLog::showInfolog(
            releaseSessionRecId,
            productVariantFormDataSource.cursor().RecId,
            companyInfoFormDataSource.cursor().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static EcoResProductReleaseSessionsForm construct()
    {
        return new EcoResProductReleaseSessionsForm();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
