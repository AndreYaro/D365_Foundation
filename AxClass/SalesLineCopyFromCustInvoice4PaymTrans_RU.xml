<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesLineCopyFromCustInvoice4PaymTrans_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesLineCopyFromSource</c> class is responsible for copying <c>SalesLine</c> from a <c>CustInvoice4PaymTrans_RU</c>.
/// </summary>
[SalesLineCopyFromSourceFactory(tableStr(CustInvoice4PaymTrans_RU))]
class SalesLineCopyFromCustInvoice4PaymTrans_RU extends SalesLineCopyFromSource
{
    #ISOCountryRegionCodes

    CustInvoice4PaymTrans_RU sourceCustInvoice4PaymTrans_RU;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canCopy</Name>
				<Source><![CDATA[
    public boolean canCopy()
    {
        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyFromSource</Name>
				<Source><![CDATA[
    protected void copyFromSource()
    {
        super();

        salesLine.initFromCustInvoice4PaymTrans_RU(sourceCustInvoice4PaymTrans_RU,
                                                                   copyPrecisely,
                                                                   !searchPrice,
                                                                   copyQty,
                                                                   tmpFrmVirtualLine.Qty,
                                                                   tmpFrmVirtualLine.PdsCWQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveCurrencyCode</Name>
				<Source><![CDATA[
    protected CurrencyCode retrieveCurrencyCode()
    {
        CurrencyCode currencyCode;

        if (salesLine.currencyCode != sourceCustInvoice4PaymTrans_RU.currencyCode)
        {
            currencyCode = sourceCustInvoice4PaymTrans_RU.currencyCode;
        }

        return CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSourceQty</Name>
				<Source><![CDATA[
    public Qty retrieveSourceQty()
    {
        return sourceCustInvoice4PaymTrans_RU.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSourceInventTransId</Name>
				<Source><![CDATA[
    public InventTransId retrieveSourceInventTransId()
    {
        return sourceCustInvoice4PaymTrans_RU.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(SalesLine _salesLine, SalesTable _salesTable, TmpFrmVirtual _tmpFrmVirtualLines, SalesCopying _salesCopying)
    {
        super(_salesLine, _salesTable, _tmpFrmVirtualLines, _salesCopying);
        sourceCustInvoice4PaymTrans_RU = CustInvoice4PaymTrans_RU::findRecId(_tmpFrmVirtualLines.RecordNo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSource</Name>
				<Source><![CDATA[
    public Common retrieveSource()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSalesLineLoc</Name>
				<Source><![CDATA[
    public SalesLine retrieveSalesLineLoc()
    {
        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>