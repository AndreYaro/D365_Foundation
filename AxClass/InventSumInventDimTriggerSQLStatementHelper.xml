<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumInventDimTriggerSQLStatementHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventSumInventDimTriggerSQLStatementHelper extends ApplicationSQLObjects
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static InventSumInventDimTriggerSQLStatementHelper construct()
    {
        return new InventSumInventDimTriggerSQLStatementHelper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
        this.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>existTrigger</Name>
				<Source><![CDATA[
    public boolean existTrigger(str _triggerName)
    {
        str sqlStatementText;
        ResultSet resultSet;
        boolean triggerExists;

        sqlStatementText = strFmt(@"
            SELECT 1
            FROM sys.triggers o WITH (NOLOCK)
            WHERE o.[name] = @Name
            ");

        Map parameters = SqlParams::create();
        parameters.add('Name', _triggerName);

        resultSet = this.executeSqlStatementQueryWithParameters(sqlStatementText, parameters);

        if (resultSet && resultSet.next())
        {
            triggerExists = resultSet.getBoolean(1);
        }

        return triggerExists;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeSelectStatementQuery</Name>
				<Source><![CDATA[
    public ResultSet executeSelectStatementQuery(str _sqlStatementText)
    {
        return this.executeSqlStatementQuery(_sqlStatementText);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeUpdateStatementQuery</Name>
				<Source><![CDATA[
    public boolean executeUpdateStatementQuery(str _sqlStatementText)
    {
        return this.executeUpdateStatementQuery(_sqlStatementText);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dropTrigger</Name>
				<Source><![CDATA[
    public boolean dropTrigger(str _triggerName)
    {
        return this.dropTrigger(_triggerName);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>