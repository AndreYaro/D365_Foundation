<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveStatusChangedApplicationInsightsLogEvent</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSWaveStatusChangedApplicationInsightsLogEvent extends WHSApplicationInsightsLogEvent
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>trackEvent</Name>
				<Source><![CDATA[
    internal static void trackEvent(WHSWaveId _waveId, WHSWaveStatus _previousStatus, WHSWaveStatus _currentStatus)
    {
        var waveIdProperty = WHSApplicationInsightsWaveIdEventProperty::newFromValue(_waveId);
        var previousStatusProperty = WHSApplicationInsightsWaveStatusPreviousEventProperty::newFromValue(_previousStatus);
        var currentStatusProperty = WHSApplicationInsightsWaveStatusCurrentEventProperty::newFromValue(_currentStatus);

        Map properties = new Map(Types::String, Types::Class);
        properties.add(waveIdProperty.key(), waveIdProperty);
        properties.add(previousStatusProperty.key(), previousStatusProperty);
        properties.add(currentStatusProperty.key(), currentStatusProperty);

        new WHSWaveStatusChangedApplicationInsightsLogEvent(properties).trackEvent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>eventId</Name>
				<Source><![CDATA[
    protected str eventId()
    {
        return WHSApplicationInsightsEventIds::WaveStatusChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    protected str name()
    {
        return 'Warehouse.WaveStatusChanged';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>