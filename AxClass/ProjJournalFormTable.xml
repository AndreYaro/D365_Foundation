<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjJournalFormTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjJournalFormTable extends JournalFormTable
{
    FormRealControl             ctrlQty;
    FormRealControl             ctrlSalesPrice;

    FormRealControl             ctrlTabQty;
    FormRealControl             ctrlTabSalesPrice;

    FormFunctionButtonControl   ctrlBegBalPrint;
    FormFunctionButtonControl   ctrlEmplPrint;
    FormFunctionButtonControl   ctrlRevenuePrint;

    FormFunctionButtonControl   ctrlCreateNewHour;
    FormFunctionButtonControl   ctrlCreateNewFee;
    FormFunctionButtonControl   ctrlCreateNewBegBal;
    FormFunctionButtonControl   ctrlCopy;
    FormFunctionButtonControl   ctrlReverse;

    FormMenuButtonControl       ctrlApproval;
    FormGroupControl            ctrlApprove;
    FormGroupControl            ctrlVoucherDate;

    FormFunctionButtonControl   ctrlStatusNext;
    FormFunctionButtonControl   ctrlStatusPrevious;

    FormTabPageControl          ctrlDefaultValues;

    FormComboBoxControl         ctrlVoucherDraw;
    FormComboBoxControl         ctrlVoucherChange;

    FormCheckBoxControl         ctrlHistorikSigned;
    FormCheckBoxControl         ctrlDeleted;

    FormStringControl           ctrlEmplId;
    FormReferenceGroupControl   ctrlResource;
    FormDateControl             ctrlProjTransDate;

    QueryBuildRange             criteriaSigned;
    NumberSeq                   numberSeq;

    FormGroupControl            ctrlPostProjectLedger;
    FormCheckBoxControl         ctrlPostPL;
    FormCheckBoxControl         ctrlPostPayroll;
    FormCheckBoxControl         ctrlPostWIP;

    AccessRight                 transactionFormAccessRight;
    /// <summary>
    /// Assigns a control for the new button based on the journal type.
    /// </summary>
    /// <param name="_journalType">
    /// The project journal type.
    /// </param>
    /// <returns>
    /// A form button control.
    /// </returns>

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assignCtrlCreateNew</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl assignCtrlCreateNew(ProjJournalType _journalType)
    {
        FormFunctionButtonControl   createNewBttn;
        SecurityRights              securityRights = SecurityRights::construct();
        switch (_journalType)
        {
            case  ProjJournalType::Hour :
                createNewBttn = ctrlCreateNewHour;
                ctrlCreateNewFee.visible(false);
                ctrlCreateNewBegBal.visible(false);
                transactionFormAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(ProjJournalTransEmpl));
                break;

            case ProjJournalType::Revenue :
                createNewBttn = ctrlCreateNewFee;
                ctrlCreateNewHour.visible(false);
                ctrlCreateNewBegBal.visible(false);
                transactionFormAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(ProjJournalTransRevenue));
                break;

            case ProjJournalType::BegBalance :
                createNewBttn = ctrlCreateNewBegBal;
                ctrlCreateNewHour.visible(false);
                ctrlCreateNewFee.visible(false);
                transactionFormAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(ProjBegBalJournalTrans));
                break;
        }

        return createNewBttn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceExecuteQueryPre</Name>
				<Source><![CDATA[
    public void datasourceExecuteQueryPre()
    {
        super();

        criteriaPosted.value(this.valueAllOpenPosted());

        criteriaJournalType.value(this.valueJournalType());

        criteriaBlockUserId.value(SysQuery::valueEmptyString() + ',' + queryValue(curUserId()));
        criteriaBlockUserGroupId.value(UserGroupList::groupsForUser());
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceLinkActivePre</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called from <c>ProjJournalTable</c> before active
    /// </summary>
    public void datasourceLinkActivePre()
    {
        QueryBuildDataSource    qbds;
        ProjTable               callerRecord;

        if (formRun                 &&
            formRun.args()          &&
            formRun.args().record() &&
            formRun.args().dataset() == tableNum(ProjTable))
        {
            callerRecord = formRun.args().record() as ProjTable;

            if (this.journalTypeId() == ProjJournalType::BegBalance)
            {
                qbds = journalTable_ds.query().dataSourceTable(tableNum(ProjJournalTable));
                qbds.addRange(fieldNum(ProjJournalTable, ProjId)).value(callerRecord.ProjId);
            }
            else
            {
                qbds = journalTable_ds.query().dataSourceNo(1).addDataSource(tableNum(ProjJournalTrans));
                qbds.joinMode(JoinMode::ExistsJoin);

                qbds.addRange(fieldNum(ProjJournalTrans, ProjId)).value(SysQuery::value(callerRecord.ProjId));
                qbds.relations(true);
            }
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    public void enableButtonsActive(boolean _enableInfolog = true)
    {
        ProjJournalTable        projJournalTable    = journalTable;
        ProjJournalStatusType   statusNext;
        ProjJournalStatusType   statusPrev;

        super(_enableInfolog);

        if (projJournalTable.JournalType == ProjJournalType::Hour || projJournalTable.JournalType == ProjJournalType::BegBalance)  // || projJournalTable.JournalType == ProjJournalType::WeekTimeJournal)
        {
            ctrlApproval.enabled(projJournalTable.StatusNameId && ! journalTable.Posted ? true : false);

            if (ctrlApproval.enabled())
            {
                statusNext  = ProjJournalStatusLine::statusNxt(projJournalTable.StatusNameId, projJournalTable.Status);
                statusPrev  = ProjJournalStatusLine::statusPrev(projJournalTable.StatusNameId, projJournalTable.Status);

                ctrlStatusNext.text(statusNext);
                ctrlStatusPrevious.text(statusPrev);

                ctrlStatusNext.enabled    (statusNext   ? true : false);
                ctrlStatusPrevious.enabled(statusPrev   ? true : false);
            }

            if (ctrlPostJournal.enabled() && projJournalTable.StatusNameId && !isSystemAdministrator())
            {
                ProjJournalStatusLine projJournalStatusLine = ProjJournalStatusLine::find(projJournalTable.StatusNameId, projJournalTable.Status);
                if (projJournalStatusLine)
                {
                    ctrlPostJournal.enabled(projJournalStatusLine.PostingReady == NoYes::Yes);
                    if (ctrlPostJournal.enabled() && projJournalStatusLine.GroupIdStatus)
                    {
                        ProjJournalTableParameters insertParameters = ProjJournalTableParameters::parmStatusNameId(ProjJournalTable.StatusNameId);

                        ctrlPostJournal.enabled(ProjJournalStatusLine::checkUserAccessByApprovalParameters(false, false, true));

                        insertParameters.dispose();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive</Name>
				<Source><![CDATA[
    public void enableFieldsActive()
    {
        super();

        ctrlVoucherDraw.enabled((select firstonly projJournalTrans
                where projJournalTrans.JournalId == journalTable.JournalId).RecId ? false : true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formInitPost</Name>
				<Source><![CDATA[
    public void formInitPost()
    {

        super();

        ctrlSalesPrice.visible(false);

        if (ctrlQty)
        {
            switch (this.journalTypeId())
            {
                case ProjJournalType::Hour :
                    ctrlQty.visible(true);
                    ctrlTabQty.visible(true);
                    ctrlSalesPrice.visible(false);
                    ctrlTabSalesPrice.visible(false);
                    ctrlDefaultValues.visible(true);
                    ctrlProjTransDate.visible(true);
                    ctrlApprove.visible(true);
                    ctrlPostProjectLedger.visible(false);
                    ctrlPostPL.visible(false);
                    ctrlPostPayroll.visible(false);
                    ctrlPostWIP.visible(false);
                    this.parmCtrlLines().helpText("@SYS134921");
                    this.parmCtrlPostJournal().helpText("@SYS134923");
                    this.parmCtrlCheckJournal().helpText("@SYS134925");
                    break;

                case ProjJournalType::Revenue :
                    ctrlDefaultValues.visible(true);
                    ctrlProjTransDate.visible(true);
                    ctrlQty.visible(false);
                    ctrlTabQty.visible(false);
                    ctrlPostProjectLedger.visible(false);
                    ctrlPostPL.visible(false);
                    ctrlPostPayroll.visible(false);
                    ctrlPostWIP.visible(false);
                    this.parmCtrlLines().helpText("@SYS134926");
                    this.parmCtrlPostJournal().helpText("@SYS134927");
                    this.parmCtrlCheckJournal().helpText("@SYS134929");
                    break;

                case ProjJournalType::BegBalance:
                    ctrlQty.visible(false);
                    ctrlTabQty.visible(false);
                    ctrlSalesPrice.visible(false);
                    ctrlTabSalesPrice.visible(false);
                    ctrlDefaultValues.visible(true);
                    ctrlProjTransDate.visible(true);
                    ctrlApprove.visible(true);
                    ctrlCopy.visible(true);
                    ctrlReverse.visible(false);
                    this.parmCtrlCheckJournal().visible(false);
                    this.parmCtrlInfolog().visible(false);
                    this.parmCtrlBlockImage().visible(true);
                    ctrlVoucherDate.visible(false);
                    ctrlDeleted.visible(false);
                    ctrlVoucherChange.visible(false);
                    ctrlVoucherDraw.visible(false);
                    ctrlPostProjectLedger.visible(true);
                    ctrlPostPL.visible(true);
                    ctrlPostPayroll.visible(true);
                    ctrlPostWIP.visible(true);
                    this.parmCtrlLines().helpText("@SYS134930");
                    this.parmCtrlPostJournal().helpText("@SYS134931");

                    break;

                default :
                    ctrlQty.visible(false);
                    ctrlTabQty.visible(false);
                    ctrlSalesPrice.visible(false);
                    ctrlTabSalesPrice.visible(false);
                    ctrlDefaultValues.visible(false);
                    ctrlApprove.visible(false);
                    ctrlPostProjectLedger.visible(false);
                    ctrlPostPL.visible(false);
                    ctrlPostPayroll.visible(false);
                    ctrlPostWIP.visible(false);
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the caption title based on the journal type.
    /// </summary>
    /// <param name="_journalType">
    /// The project journal type.
    /// </param>
    /// <returns>
    /// A string that is the caption title.
    /// </returns>
    public str getCaption(ProjJournalType _journalType)
    {
        str         captionTitle;

        switch (_journalType)
        {
            case ProjJournalType::Hour:
                captionTitle = "@SYS59154";
                break;

            case ProjJournalType::Revenue:
                captionTitle = "@SYS73715";
                break;

            case ProjJournalType::BegBalance:
                captionTitle = "@SYS134440";
                break;

            default:
                captionTitle = "@SYS92742";
        }

        return captionTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControls</Name>
				<Source><![CDATA[
    protected void initControls(Integer _journalTypeId)
    {
        super(_journalTypeId);

        ProjJournalType projJournalType = any2Enum(_journalTypeId);

        ctrlApproval.visible(journalTypeFixed && (projJournalType == ProjJournalType::Hour ||
                                    projJournalType == ProjJournalType::BegBalance));

        ctrlEmplPrint.visible(journalTypeFixed && projJournalType == ProjJournalType::Hour);
        ctrlRevenuePrint.visible(journalTypeFixed && projJournalType == ProjJournalType::Revenue);
        ctrlBegBalPrint.visible(journalTypeFixed && projJournalType == ProjJournalType::BegBalance);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlApproval</Name>
				<Source><![CDATA[
    public FormMenuButtonControl parmCtrlApproval(FormMenuButtonControl _approval = ctrlApproval)
    {
        ctrlApproval = _approval;

        return ctrlApproval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlApprove</Name>
				<Source><![CDATA[
    public FormGroupControl parmCtrlApprove(FormGroupControl _approve = ctrlApprove)
    {
        ctrlApprove = _approve;

        return ctrlApprove;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlBegBalPrint</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlBegBalPrint(FormFunctionButtonControl _begBalPrint = ctrlBegBalPrint)
    {
        ctrlBegBalPrint = _begBalPrint;

        return ctrlBegBalPrint;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlEmplPrint</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlEmplPrint(FormFunctionButtonControl _emplPrint = ctrlEmplPrint)
    {
        ctrlEmplPrint = _emplPrint;

        return ctrlEmplPrint;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlRevenuePrint</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlRevenuePrint(FormFunctionButtonControl _RevenuePrint = ctrlRevenuePrint)
    {
        ctrlRevenuePrint = _RevenuePrint;

        return ctrlRevenuePrint;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlCheckResource</Name>
				<Source><![CDATA[
    public FormReferenceGroupControl parmCtrlCheckResource(FormReferenceGroupControl _resource = ctrlResource)
    {
        ctrlResource = _resource;

        return ctrlResource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlCheckUserId</Name>
				<Source><![CDATA[
    public FormStringControl parmCtrlCheckUserId(FormStringControl _emplId)
    {
        ctrlEmplId = _emplId;

        return ctrlEmplId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlCopy</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlCopy(FormFunctionButtonControl _projJournalCopy = ctrlCopy)
    {
        ctrlCopy = _projJournalCopy;
        return ctrlCopy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlCreateNewBegBal</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlCreateNewBegBal(FormFunctionButtonControl _createNewBegBal = ctrlCreateNewBegBal)
    {
        ctrlCreateNewBegBal = _createNewBegBal;

        return ctrlCreateNewBegBal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlCreateNewFee</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlCreateNewFee(FormFunctionButtonControl _createNewFee = ctrlCreateNewFee)
    {
        ctrlCreateNewFee = _createNewFee;

        return ctrlCreateNewFee;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlCreateNewHour</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlCreateNewHour(FormFunctionButtonControl _createNewHour = ctrlCreateNewHour)
    {
        ctrlCreateNewHour = _createNewHour;

        return ctrlCreateNewHour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlDefaultValues</Name>
				<Source><![CDATA[
    public FormTabPageControl parmCtrlDefaultValues(FormTabPageControl _defaultValues = ctrlDefaultValues)
    {
        ctrlDefaultValues = _defaultValues;

        return ctrlDefaultValues;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlDeleted</Name>
				<Source><![CDATA[
    public FormCheckBoxControl parmCtrlDeleted(FormCheckBoxControl _deleted = ctrlDeleted)
    {
        ctrlDeleted = _deleted;

        return ctrlDeleted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlEmplId</Name>
				<Source><![CDATA[
    public FormStringControl parmCtrlEmplId(FormStringControl _emplId = ctrlEmplId)
    {
        ctrlEmplId = _emplId;

        return ctrlEmplId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlPostPayroll</Name>
				<Source><![CDATA[
    public FormCheckBoxControl parmCtrlPostPayroll(FormCheckBoxControl _ctrlPostPayroll = ctrlPostPayroll)
    {
        ctrlPostPayroll = _ctrlPostPayroll;

        return ctrlPostPayroll;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlPostPL</Name>
				<Source><![CDATA[
    public FormCheckBoxControl parmCtrlPostPL(FormCheckBoxControl _ctrlPostPL = ctrlPostPL)
    {
        ctrlPostPL = _ctrlPostPL;

        return ctrlPostPL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlPostProjLedger</Name>
				<Source><![CDATA[
    public FormGroupControl parmCtrlPostProjLedger(FormGroupControl _ctrlPostProjectLedger = ctrlPostProjectLedger)
    {
        ctrlPostProjectLedger = _ctrlPostProjectLedger;

        return ctrlPostProjectLedger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlPostWIP</Name>
				<Source><![CDATA[
    public FormCheckBoxControl parmCtrlPostWIP(FormCheckBoxControl _ctrlPostWIP = ctrlPostWIP)
    {
        ctrlPostWIP = _ctrlPostWIP;

        return ctrlPostWIP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlProjQty</Name>
				<Source><![CDATA[
    public FormRealControl parmCtrlProjQty(FormRealControl _ctrlQty = ctrlQty)
    {
        ctrlQty = _ctrlQty;

        return ctrlQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlProjTransDate</Name>
				<Source><![CDATA[
    public FormDateControl parmCtrlProjTransDate(FormDateControl _projTransDate = ctrlProjTransDate)
    {
        ctrlProjTransDate = _projTransDate;

        return ctrlProjTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlResource</Name>
				<Source><![CDATA[
    public FormReferenceGroupControl parmCtrlResource(FormReferenceGroupControl _resource = ctrlResource)
    {
        ctrlResource = _resource;

        return ctrlResource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlReverse</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlReverse(FormFunctionButtonControl _projJournalReverse = ctrlReverse)
    {
        ctrlReverse = _projJournalReverse;
        return ctrlReverse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlSalesPrice</Name>
				<Source><![CDATA[
    public FormRealControl parmCtrlSalesPrice(FormRealControl _ctrlSalesPrice = ctrlSalesPrice)
    {
        ctrlSalesPrice = _ctrlSalesPrice;

        return ctrlSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlStatusNext</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlStatusNext(FormFunctionButtonControl _statusNext = ctrlStatusNext)
    {
        ctrlStatusNext = _statusNext;

        return ctrlStatusNext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlStatusPrevious</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCtrlStatusPrevious(FormFunctionButtonControl _statusPrevious = ctrlStatusPrevious)
    {
        ctrlStatusPrevious = _statusPrevious;

        return ctrlStatusPrevious;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlTabProjQty</Name>
				<Source><![CDATA[
    public FormRealControl parmCtrlTabProjQty(FormRealControl _ctrlTabQty = ctrlTabQty)
    {
        ctrlTabQty = _ctrlTabQty;

        return ctrlTabQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlTabSalesPrice</Name>
				<Source><![CDATA[
    public FormRealControl parmCtrlTabSalesPrice(FormRealControl _ctrlTabSalesPrice = ctrlTabSalesPrice)
    {
        ctrlTabSalesPrice = _ctrlTabSalesPrice;

        return ctrlTabSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlVoucherChange</Name>
				<Source><![CDATA[
    public FormComboBoxControl parmCtrlVoucherChange(FormComboBoxControl _voucherChange = ctrlVoucherChange)
    {
        ctrlVoucherChange = _voucherChange;

        return ctrlVoucherChange;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlVoucherDate</Name>
				<Source><![CDATA[
    public FormGroupControl parmCtrlVoucherDate(FormGroupControl _voucherDate = ctrlVoucherDate)
    {
        ctrlVoucherDate = _voucherDate;

        return ctrlVoucherDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlVoucherDraw</Name>
				<Source><![CDATA[
    public FormComboBoxControl parmCtrlVoucherDraw(FormComboBoxControl _voucherDraw = ctrlVoucherDraw)
    {
        ctrlVoucherDraw = _voucherDraw;

        return ctrlVoucherDraw;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddRange</Name>
				<Source><![CDATA[
    public void queryAddRange()
    {
        JournalStatic   journalStatic = journalTableData.journalStatic();

        super();

        if (journalStatic.tableFieldIdSigned())
        {
            criteriaSigned              = journalTable_ds.query().dataSourceNo(1).addRange(journalStatic.tableFieldIdSigned());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>visibleCreateNew</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Makes the Create New button visible, even if no default journal is defined.
    /// </summary>
    /// <param name="_journalTypeId">
    ///    The journal type ID.
    /// </param>
    /// <returns>
    ///    true if a valid journal type is defined and the user ID is not blocked; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    This method is overridden to decide the visibility of the Create New button by making some
    ///    validation checks.A call to the <c>super</c> method is removed to avoid repetition of some
    ///    validation. We only want to override this method because we want to make visible this button even
    ///    if no default journal is defined.
    /// </remarks>
    protected boolean visibleCreateNew(Integer _journalTypeId)
    {
        JournalBlockUserGroupId blockUserGroupId;

        if (! journalTypeFixed)
        {
            return false;
        }

        if (NumberSequenceTable::find(journalTableData.journalStatic().numRefJournalId().NumberSequenceId).Manual)
        {
            return false;
        }

        blockUserGroupId = journalTableData.journalStatic().findJournalName(journalTableData.journalStatic().standardJournalNameId(_journalTypeId)).BlockUserGroupId;
        if (blockUserGroupId)
        {
            if (! (select userGroupList where userGroupList.UserId == curUserId() && userGroupList.GroupId == blockUserGroupId).RecId)
            {
                return false;
            }
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>