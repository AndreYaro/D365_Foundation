<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EventNotification_PurchReq</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Delivers alerts notifications to the purchase requisition preparers.
/// </summary>
/// <remarks>
///  The <c>EventNotification_PreparerPR</c> is called when a user has been added as
///  a purchase requisition preparer.
/// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
/// </remarks>

class EventNotification_PurchReq extends EventNotification
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static EventNotification_PurchReq construct()
    {
        return new EventNotification_PurchReq();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newInfo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a notification record with an initial set of parameters.
    /// </summary>
    /// <param name="_sendToId">
    ///    The user who will receive the alert notification.
    /// </param>
    /// <param name="_subject">
    ///    The subject of the notification.
    /// </param>
    /// <param name="_message">
    ///    The message of the notification.
    /// </param>
    /// <param name="_dueDateTime">
    ///    The expiration date of the alert.
    /// </param>
    /// <returns>
    ///    An instance of the <c>EventNotification_ PurchReq</c> class.
    /// </returns>
    public static EventNotification_PurchReq newInfo( userId _sendToId,
                                                        EventSubject _subject,
                                                        EventMessage _message,
                                                        utcdatetime _dueDateTime
                                                        )
    {
        EventNotification_PurchReq notification = EventNotification_PurchReq::construct();
        notification.parmNotificationType(EventNotificationType::Information);
        notification.parmUserId(_sendToId);
        notification.parmSubject(_subject);
        notification.parmMessage(_message);

        return notification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendPrepareAuthorizationNotification</Name>
				<Source><![CDATA[
    public static EventInboxId sendPrepareAuthorizationNotification(HcmWorkerRecId _preparer, HcmWorkerRecId _requester)
    {
        EventNotification_PurchReq      eventNotification_PurchReq;
        DirPersonUser                   dirPersonUser;
        str                             strMessage;

        select User from dirPersonUser where dirPersonUser.PersonParty == HcmWorker::find(_preparer).Person;

        // Format the message to tell them who the user can perare for.
        strMessage = strfmt("@SYS311127", HcmWorker::worker2Name(_requester));

        eventNotification_PurchReq = EventNotification_PurchReq::newInfo(dirPersonUser.User,
                                                            "@SYS311126",
                                                            strMessage,
                                                            DateTimeUtil::utcNow());
        return eventNotification_PurchReq.create();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>