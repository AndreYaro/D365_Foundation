<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RHolderData_RCustVendTurnoverHolder</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class RHolderData_RCustVendTurnoverHolder extends RHolderData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addSumInComplianceWithKey</Name>
				<Source><![CDATA[
        protected void addSumInComplianceWithKey(container  _key, anytype   _valueValue)
    {
        int         cx, iLen;
        container   value, addValue;

        Amount      amount, addAmount;

        Amount      amountBegDebit, amountBegCredit;
        Amount      amountDebit, amountCredit;
        Amount      amountEndDebit, amountEndCredit;

        ;

        value = map.lookup(_key);

        addValue = _valueValue;

        iLen = conlen(value);

        for (cx = 1; cx <= iLen; cx++)
        {
            amount      = conpeek(value, cx);
            addAmount   = conpeek(addValue, cx);

            amount += addAmount;

            value = conpoke(value, cx, amount);
        }

        [amountBegDebit, amountBegCredit,
        amountDebit, amountCredit,
        amountEndDebit, amountEndCredit] = value;

        //Calculate balance on beginning of period
        amount = amountBegDebit + amountBegCredit;
        amountBegDebit  = 0;
        amountBegCredit = 0;

        if (amount >= 0)
            amountBegDebit = amount;
        else
            amountBegCredit = amount;

        //Calculate balance on end of period
        amount = amountEndDebit + amountEndCredit;
        amountEndDebit  = 0;
        amountEndCredit = 0;

        if (amount >= 0)
            amountEndDebit = amount;
        else
            amountEndCredit = amount;

        //Insert data into map
        map.insert(_key,  [amountBegDebit, amountBegCredit, amountDebit, amountCredit, amountEndDebit, amountEndCredit]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(int        _keyLen,
            container   _contColumnaAsOneColumn = connull(),
            TempStr     _summability = "")
    {
        ;
        super(_keyLen, Types::Container, _contColumnaAsOneColumn, _summability);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>