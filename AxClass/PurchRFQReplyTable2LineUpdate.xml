<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQReplyTable2LineUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PurchRFQReplyTable2LineUpdate</c> class is the subclass of the abstract
///    <c>PurchRFQTableMap2LineUpdate</c>.
///    It overloads methods that are needed for RFQ reply header to
///    line update functionality.
/// </summary>
class PurchRFQReplyTable2LineUpdate extends PurchRFQTableMap2LineUpdate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAxLineObject</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an <c>AxPurchRFQReplyLine</c> object for the <c>PurchRFQReplyLine</c> record.
    /// </summary>
    /// <param name="_axTable">
    ///    The <c>AxPurchRFQReplyTable</c> object.
    /// </param>
    /// <param name="_lineMap">
    ///    The <c>PurchRFQReplyLine</c> record.
    /// </param>
    /// <returns>
    ///    The <c>AxPurchRFQReplyLine</c> object.
    /// </returns>
    /// <remarks>
    ///    This method overrides the abstract base class method.
    /// </remarks>
    AxInternalBase getAxLineObject(AxInternalBase _axTable, PurchRFQLineMap _lineMap)
    {
        AxPurchRFQReplyLine axPurchRFQReplyLine;
        PurchRFQReplyLine   purchRFQReplyLine = _lineMap;
        axPurchRFQReplyLine = AxPurchRFQReplyLine::newPurchRFQReplyLine(purchRFQReplyLine);
        axPurchRFQReplyLine.axPurchRFQReplyTable(_axTable);

        return axPurchRFQReplyLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAxTableObject</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an <c>AxPurchRFQReplyTable</c> object for the <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <returns>
    ///    The <c>AxPurchRFQReplyTable</c> object.
    /// </returns>
    /// <remarks>
    ///    This method overrides the abstract base class method.
    /// </remarks>
    AxInternalBase getAxTableObject()
    {
        return AxPurchRFQReplyTable::newPurchRFQReplyTable(purchRFQTableMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFieldIdFromMappedTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Converts the <c>PurchRFQTableMap</c> field ID to a <c>PurchRFQReplyTable</c> field ID.
    /// </summary>
    /// <param name="_mapFieldId">
    ///    The field ID of the <c>PurchRFQTableMap</c> map.
    /// </param>
    /// <returns>
    ///    The field ID of the <c>PurchRFQReplyTable</c> table.
    /// </returns>
    /// <remarks>
    ///    This method overrides the abstract base class method.
    /// </remarks>
    fieldId getFieldIdFromMappedTable(fieldId _mapFieldId)
    {
        switch (_mapFieldId)
        {
            case fieldnum(PurchRFQTableMap, DeliveryDate)     : return fieldnum(PurchRFQReplyTable, DeliveryDate);
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineTableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the <c>PurchRFQReplyLine</c> table ID.
    /// </summary>
    /// <returns>
    ///    The <c>PurchRFQReplyLine</c> table ID.
    /// </returns>
    /// <remarks>
    ///    This method overrides the abstract base class method.
    /// </remarks>
    TableId lineTableId()
    {
        return tablenum(PurchRFQReplyLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRunLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a query that selects <c>PurchRFQReplyLine</c> records that are linked to the current
    ///    <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <param name="_update">
    ///    A <c>NoYes</c> enumeration value that determines whether the record should be selected for update;
    ///    optional.
    /// </param>
    /// <returns>
    ///    A query that selects <c>PurchRFQReplyLine</c> records.
    /// </returns>
    /// <remarks>
    ///    This method overrides the abstract base class method.
    /// </remarks>
    QueryRun queryRunLine(boolean _update = false)
    {
        return new QueryRun(purchRFQTableMap.queryPurchRFQReplyLine(_update));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>