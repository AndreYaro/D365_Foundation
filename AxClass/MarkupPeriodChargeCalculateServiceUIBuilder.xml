<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupPeriodChargeCalculateServiceUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class MarkupPeriodChargeCalculateServiceUIBuilder extends SysOperationAutomaticUIBuilder
{
    private MarkupPeriodChargeCalculateServiceContract dataContract;
    private DialogField invoiceAccountDlgField;
    private DialogField periodChargeRuleNameDlgField;
    private DialogField maxInvoiceAgeDlgField;
    private DialogField invoiceDateFrom;
    private DialogField invoiceDateTo;
    private DialogField daysPerInvoice;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void postBuild()
    {
        super();

        dataContract = this.dataContractObject() as MarkupPeriodChargeCalculateServiceContract;
        invoiceAccountDlgField = this.bindInfo().getDialogField(dataContract, methodStr(MarkupPeriodChargeCalculateServiceContract, parmInvoiceAccount));
        invoiceAccountDlgField.registerOverrideMethod(methodStr(FormStringControl, modified), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, modifyInvoiceAccount), this);
        invoiceAccountDlgField.registerOverrideMethod(methodStr(FormStringControl, validate), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, validateInvoiceAccount), this);

        periodChargeRuleNameDlgField = this.bindInfo().getDialogField(dataContract, methodStr(MarkupPeriodChargeCalculateServiceContract, parmPeriodChargeRuleName));
        periodChargeRuleNameDlgField.registerOverrideMethod(methodStr(FormStringControl, modified), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, modifyChargeRuleName), this);
        periodChargeRuleNameDlgField.registerOverrideMethod(methodStr(FormStringControl, lookup), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, lookupPeriodChargeRuleName), this);
        periodChargeRuleNameDlgField.registerOverrideMethod(methodStr(FormStringControl, validate), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, validateRuleName), this);

        maxInvoiceAgeDlgField = this.bindInfo().getDialogField(dataContract, methodStr(MarkupPeriodChargeCalculateServiceContract, parmMaxInvoiceAge));
        maxInvoiceAgeDlgField.registerOverrideMethod(methodStr(FormIntControl, modified), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, modifyMaxInvoiceAge), this);
        
        invoiceDateFrom = this.bindInfo().getDialogField(dataContract, methodStr(MarkupPeriodChargeCalculateServiceContract, parmInvoiceDateFrom));
        invoiceDateFrom.registerOverrideMethod(methodStr(FormDateControl, modified), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, modifyInvoiceDateFrom), this);
        invoiceDateFrom.registerOverrideMethod(methodStr(FormDateControl, validate), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, validateInvoiceDateFromTo), this);

        invoiceDateTo = this.bindInfo().getDialogField(dataContract, methodStr(MarkupPeriodChargeCalculateServiceContract, parmInvoiceDateTo));
        invoiceDateTo.registerOverrideMethod(methodStr(FormDateControl, modified), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, modifyInvoiceDateTo), this);
        invoiceDateTo.registerOverrideMethod(methodStr(FormDateControl, validate), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, validateInvoiceDateFromTo), this);
        
        daysPerInvoice = this.bindInfo().getDialogField(dataContract, methodStr(MarkupPeriodChargeCalculateServiceContract, parmDaysPerInvoice));
        daysPerInvoice.registerOverrideMethod(methodStr(FormIntControl, validate), methodStr(MarkupPeriodChargeCalculateServiceUIBuilder, validateDaysPerInvoice), this);
        
        this.updateInvoiceAccountRuleControls();
        this.updateInvoiceDateControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInvoiceAccount</Name>
				<Source><![CDATA[
    private boolean validateInvoiceAccount(FormStringControl _formStringControl)
    {
        return CustTable::checkExist(_formStringControl.valueStr());
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRuleName</Name>
				<Source><![CDATA[
    private boolean validateRuleName(FormStringControl _formStringControl)
    {
        if (_formStringControl.valueStr())
        {
            return MarkupPeriodChargeRule::checkExist(_formStringControl.valueStr(), dateNull(), dateMax());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDaysPerInvoice</Name>
				<Source><![CDATA[
    private boolean validateDaysPerInvoice(FormIntControl _formIntControl)
    {
        if (_formIntControl.value() < 1)
        {
            return checkFailed("@SCM:MarkupPeriodChargeCalculationDaysPerInvoiceValidationWarning");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInvoiceDateFromTo</Name>
				<Source><![CDATA[
    private boolean validateInvoiceDateFromTo(FormDateControl _formDateControl)
    {
        if (invoiceDateTo.value() && invoiceDateFrom.value() && invoiceDateFrom.value() > invoiceDateTo.value())
        {
            return checkFailed("@SCM:MarkupPeriodChargeCalculationInvoiceDateFromToWarning");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyMaxInvoiceAge</Name>
				<Source><![CDATA[
    private boolean modifyMaxInvoiceAge(FormIntControl _formIntControl)
    {
        invoiceDateFrom.enabled(!_formIntControl.value());
        invoiceDateTo.enabled(!_formIntControl.value());
        return _formIntControl.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyInvoiceDateFrom</Name>
				<Source><![CDATA[
    private boolean modifyInvoiceDateFrom(FormDateControl _formDateControl)
    {
        if (_formDateControl.dateValue() || invoiceDateTo.value())
        {
            maxInvoiceAgeDlgField.enabled(false);
        }
        else
        {
            maxInvoiceAgeDlgField.enabled(true);
        }

        return _formDateControl.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyInvoiceDateTo</Name>
				<Source><![CDATA[
    private boolean modifyInvoiceDateTo(FormDateControl _formDateControl)
    {
        if (_formDateControl.dateValue() || invoiceDateFrom.value())
        {
            maxInvoiceAgeDlgField.enabled(false);
        }
        else
        {
            maxInvoiceAgeDlgField.enabled(true);
        }

        return _formDateControl.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInvoiceAccountRuleControls</Name>
				<Source><![CDATA[
    private void updateInvoiceAccountRuleControls()
    {
        if (invoiceAccountDlgField.value())
        {
            periodChargeRuleNameDlgField.enabled(false);
        }
        else if (periodChargeRuleNameDlgField.value())
        {
            invoiceAccountDlgField.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInvoiceDateControls</Name>
				<Source><![CDATA[
    private void updateInvoiceDateControls()
    {
        if (maxInvoiceAgeDlgField.value())
        {
            invoiceDateFrom.enabled(false);
            invoiceDateTo.enabled(false);
        }
        else if (invoiceDateFrom.value() || invoiceDateTo.value())
        {
            maxInvoiceAgeDlgField.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyChargeRuleName</Name>
				<Source><![CDATA[
    private boolean modifyChargeRuleName(FormStringControl _formStringControl)
    {
        if (_formStringControl.valueStr())
        {
            invoiceAccountDlgField.enabled(false);
        }
        else
        {
            invoiceAccountDlgField.enabled(true);
        }
        return _formStringControl.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyInvoiceAccount</Name>
				<Source><![CDATA[
    private boolean modifyInvoiceAccount(FormStringControl _formStringControl)
    {
        if (_formStringControl.valueStr())
        {
            periodChargeRuleNameDlgField.enabled(false);
        }
        else
        {
            periodChargeRuleNameDlgField.enabled(true);
        }
        return _formStringControl.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPeriodChargeRuleName</Name>
				<Source><![CDATA[
    private void lookupPeriodChargeRuleName(FormStringControl _formStringControl)
    {
        SysTableLookup          sysLookup;

        sysLookup = SysTableLookup::newParameters(tableNum(MarkupPeriodChargeRule), _formStringControl);
        sysLookup.addLookupfield(fieldNum(MarkupPeriodChargeRule, RuleName));
        sysLookup.addLookupfield(fieldNum(MarkupPeriodChargeRule, Description));

        Query query = new Query();
        QueryBuildDataSource queryDS = query.addDataSource(tableNum(MarkupPeriodChargeRule));

        sysLookup.parmCallingControl(_formStringControl);
        sysLookup.parmQuery(query);
        sysLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>