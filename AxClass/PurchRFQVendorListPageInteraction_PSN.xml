<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQVendorListPageInteraction_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This is the interaction class for <c>PurchRFQVendorCloseListPage_PSN</c> and <c>PurchRFQVendorOpenListPage_PSN</c> forms.
/// </summary>
public class PurchRFQVendorListPageInteraction_PSN extends SysListPageInteractionBase
{
    PurchRFQPublishTable_PSN    purchRFQPublishTable_PSN;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currentCallerMenuItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current calling menu item name.
    /// </summary>
    /// <returns>
    /// The current calling menu item name.
    /// </returns>
    private MenuItemName currentCallerMenuItemName()
    {
        return this.listPage().listPageArgs().menuItemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentPurchRFQPublishTable_PSN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an active <c>PurchRFQPublishTable_PSN</c> record.
    /// </summary>
    /// <returns>
    /// An active <c>PurchRFQPublishTable_PSN</c> record.
    /// </returns>
    private PurchRFQPublishTable_PSN currentPurchRFQPublishTable_PSN()
    {
        return this.listPage().activeRecord(tableStr(PurchRFQPublishTable_PSN)) as PurchRFQPublishTable_PSN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the ranges to the list page query to show the open or closed published RFQs.
    /// </summary>
    /// <param name="_query">
    /// The query of the list page.
    /// </param>
    public void initializeQuery(Query _query)
    {
        QueryBuildDataSource    purchRFQTableQueryBuildDataSource;
        VendAccount             vendAccount;

        if (this.currentCallerMenuItemName() == menuitemDisplayStr(PurchRFQVendorOpenListPage_PSN))
        {
            _query.dataSourceTable(tableNum(PurchRFQPublishTable_PSN)).addRange(fieldNum(PurchRFQPublishTable_PSN, ExpiryDateTime))
                .value(SysQueryRangeUtil::greaterThanUtcNow());

            // If there is currently a user logged on as vendor, use that information to filter the RFQs displayed
            // in both open and closed list pages
            if (VendTable::isVendor())
            {
                vendAccount = VendAccountManager::getSelectedAccount();

                purchRFQTableQueryBuildDataSource = SysQuery::findOrCreateDataSource(_query, tableNum(PurchRFQTable), tableNum(PurchRFQCaseTable));

                if (purchRFQTableQueryBuildDataSource != null)
                {
                    purchRFQTableQueryBuildDataSource.joinMode(JoinMode::NoExistsJoin);
                    purchRFQTableQueryBuildDataSource.relations(true);

                    SysQuery::findOrCreateRange(purchRFQTableQueryBuildDataSource, fieldNum(PurchRFQTable, VendAccount)).value(SysQuery::value(vendAccount));
                }
            }
        }
        else
        {
            _query.dataSourceTable(tableNum(PurchRFQPublishTable_PSN)).addRange(fieldNum(PurchRFQPublishTable_PSN, ExpiryDateTime))
                .value(SysQueryRangeUtil::lessThanUtcNow());
        }

        super(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables the header action menu item buttons when the active publised RFQ has been changed.
    /// </summary>
    [FormDataSourceInteractionAttribute('PurchRFQPublishTable_PSN', 'selectionChanged')]
    public void selectionChanged()
    {
        purchRFQPublishTable_PSN = this.currentPurchRFQPublishTable_PSN();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonEnabled</Name>
				<Source><![CDATA[
    protected void setButtonEnabled()
    {
        super();

        if (this.currentCallerMenuItemName() == menuitemDisplayStr(PurchRFQVendorOpenListPage_PSN))
        {
            // Disable the reply/bid button if the user does not have a vendor relation
            this.page().actionPaneControlEnabled(formControlStr(PurchRFQVendorOpenListPage_PSN, Reply),
                        PurchRFQVendorListPageInteraction_PSN::bidButtonEnabled(purchRFQPublishTable_PSN.PurchRFQCaseTable));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>bidButtonEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// /Determines if the bid button can be enabled.
    /// </summary>
    /// <param name="_caseRecId">
    /// The record ID of a record in the <c>PurchRFQCaseTable</c>
    /// </param>
    /// <returns>
    /// true if the button can be enabled; otherwise, false.
    /// </returns>
    public static boolean bidButtonEnabled(RecId   _caseRecId)
    {
        return VendTable::isVendor() && !PurchRFQCaseTable::isBiddingByInvite(PurchRFQCaseTable::findRecId(_caseRecId).RFQCaseId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>