<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvExpTransBudgetControlPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TrvExpTransBudgetControlPolicy</c> class provides information that pertains to checking
/// budgets for expense transactions.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ExpenseReport), BusinessEvent_ExpenseReport::PurchaseOfExpensedProducts)]
public class TrvExpTransBudgetControlPolicy extends BudgetControlSourceDocumentLinePolicy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canCheckBudget</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the budget can be checked for the source document line that is associated with
    /// the expense transaction.
    /// </summary>
    /// <returns>
    /// true if the budget can be checked; otherwise, false.
    /// </returns>
    public boolean canCheckBudget()
    {
        boolean                         canCheckBudget;
        TrvExpTransSourceDocLineItem    trvExpTransSourceDocLineItem;

        canCheckBudget = super();

        if (canCheckBudget)
        {
            trvExpTransSourceDocLineItem = budgetSourceSourceDocumentLineItem as TrvExpTransSourceDocLineItem;
            if (trvExpTransSourceDocLineItem)
            {
                canCheckBudget = trvExpTransSourceDocLineItem.parmExpenseLine().isBudgetCheckRequired();
            }
        }

        return canCheckBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeErrorWarningDisplayOption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the parameter that indicates whether error and warning messages resulting from the
    /// budget check are displayed.
    /// </summary>
    /// <remarks>
    /// Show the budget check messages based on budget expense parameters.
    /// </remarks>
    protected void initializeErrorWarningDisplayOption()
    {
        TrvExpTransSourceDocLineItem    trvExpTransSourceDocLineItem;
        TrvExpTrans                     expense;

        trvExpTransSourceDocLineItem = budgetSourceSourceDocumentLineItem as TrvExpTransSourceDocLineItem;
        expense = trvExpTransSourceDocLineItem.parmExpenseLine();

        if (expense)
        {
            switch (expense.ApprovalStatus)
            {
                case TrvAppStatus::Create: 
                    isErrorWarningDisplayRequired = !TrvParameters::find().IsAllowSubmitExpenseOnBudgetFail;
                    break;

                case TrvAppStatus::Pending:
                    isErrorWarningDisplayRequired = !TrvParameters::find().IsAllowApproveExpenseOnBudgetFail;
                    break;

                case TrvAppStatus::Approved:
                    isErrorWarningDisplayRequired = true;
                    break;

                default:
                    isErrorWarningDisplayRequired = false;
                    break;
            }
        }
        else
        {
            isErrorWarningDisplayRequired = false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    // Used as an entry point for the menu item <c>TrvExpTransCheckBudget</c> to do on demand budget check in the AX Client forms.
    public static void main(Args args)
    {
        TrvExpTrans     trvExpTrans;
        FormDataSource  fds;
        boolean         anyCheckHasErrorWarning = false;

        if (args && args.dataset() == tableNum(TrvExpTrans) && FormDataUtil::isFormDataSource(args.record()))
        {
            fds = FormDataUtil::getFormDataSource(args.record());

            for (trvExpTrans = fds.getFirst(1) ? fds.getFirst(1) : fds.cursor();
                 trvExpTrans;
                 trvExpTrans = fds.getNext())
            {
                trvExpTrans.checkBudgetOnDemand();
                trvExpTrans.checkProjectBudgetOnDemand();

                // Budget check result >= BudgetCheckResult::PassedWithWarnings means PassedWithWarnings or Failed.
                if (anyCheckHasErrorWarning || trvExpTrans.budgetCheckResult() >= BudgetCheckResult::PassedWithWarnings)
                {
                    anyCheckHasErrorWarning = true;
                }
            }

            if (!anyCheckHasErrorWarning)
            {
                info("@Expense:BudgetCheckNoErrorWarnings");
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>