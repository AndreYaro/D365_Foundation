<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResResourceCertificateSearchCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Resource certificate search criteria.
/// </summary>
public class ResResourceCertificateSearchCriteria extends ResSearchCriteriaItem
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applySearch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies resource certificates search criteria in the specified query.
    /// </summary>
    /// <param name = "_query">Base query of collection items.</param>
    /// <param name = "_searchString">Search criteria.</param>
    /// <returns>Updated query applied with resource certificates search criteria.</returns>
    public Query applySearch(Query _query)
    {
        if (_query)
        {
            if (!this.getSearchQuery(_query))
            {
                warning("@Res:SearchCriteria_ResourceCertificateNotApplicable");
            }
        }

        return _query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSearchQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get resource certificates search criteria query.
    /// </summary>
    /// <param name = "_query">Base query of collection items.</param>
    /// <returns>true if query is updated; otherwise false.</returns>
    private boolean getSearchQuery(Query _query)
    {
        boolean queryUpdated;

        if (_query)
        {
            QueryBuildDataSource mainDS = _query.dataSourceNo(1);
            QueryBuildDataSource dataSource;
            QueryBuildRange range;

            if (ResUtil::isPerformanceEnhancementFeatureEnabled(ResEnableByDefaultPerfEnhancementFeatureFlight::instance().isEnabled()))
            {
                switch (mainDS.table())
                {
                    case tableNum(ResProjectResourceSchedulableDistinctView):
                        dataSource = mainDS.addDataSource(tableNum(ResResourceCharacteristicView));
                        this.linkTo_ProjResourceTable(dataSource);
                        dataSource.joinMode(JoinMode::ExistsJoin);

                        range = dataSource.addRange(fieldNum(ResResourceCharacteristicView, CharacteristicId));
                        range.value(strFmt("%1", this.getValues()));
                        queryUpdated = true;
                        break;
                
                    case tableNum(ResAssignmentResourcesViewV2):
                        dataSource = mainDS.addDataSource(tableNum(ResAssignmentResourceCertificatesView));
                        this.linkTo_AssignmentResourcesViewV2(dataSource);
                        dataSource.joinMode(JoinMode::ExistsJoin);

                        range = dataSource.addRange(fieldNum(ResAssignmentResourceCertificatesView, CharacteristicId));
                        range.value(strFmt("%1", this.getValues()));
                        queryUpdated = true;
                        break;
                }
            }
            else
            {
                switch (mainDS.table())
                {
                    case tableNum(ResCompanyResourceSchedulableDetailDistinctView):
                        dataSource = mainDS.addDataSource(tableNum(ResResourceCharacteristicView));
                        this.linkTo_CompanyResourceDetailView(dataSource);
                        dataSource.joinMode(JoinMode::ExistsJoin);

                        range = dataSource.addRange(fieldNum(ResResourceCharacteristicView, CharacteristicId));
                        range.value(strFmt("%1", this.getValues()));
                        queryUpdated = true;
                        break;

                    case tableNum(ResAssignmentResourcesDistinctView):
                        dataSource = mainDS.addDataSource(tableNum(ResAssignmentResourceCertificatesView));
                        this.linkTo_AssignmentResourcesView(dataSource);
                        dataSource.joinMode(JoinMode::ExistsJoin);

                        range = dataSource.addRange(fieldNum(ResAssignmentResourceCertificatesView, CharacteristicId));
                        range.value(strFmt("%1", this.getValues()));
                        queryUpdated = true;
                        break;
                }
            }
        }

        return queryUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addResourceCertificate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the criteria value to the criteria item.
    /// </summary>
    /// <param name = "_value">Resource certificate value.</param>
    public void addResourceCertificate(HcmCertificateTypeId _value)
    {
        this.addValue(_value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeResourceCertificate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes the criteria value from the criteria item.
    /// </summary>
    /// <param name = "_value">Resource certificate value.</param>
    public void removeResourceCertificate(HcmCertificateTypeId _value)
    {
        this.removeValue(_value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of resource certificates search criteria.
    /// </summary>
    protected void new ()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of Resource certificates search criteria.
    /// </summary>
    /// <returns>Instance of <c>ResResourceCertificateSearchCriteria</c>.</returns>
    public static ResResourceCertificateSearchCriteria construct()
    {
        ResResourceCertificateSearchCriteria searchCriteriaItem = new ResResourceCertificateSearchCriteria();
        return searchCriteriaItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkTo_ProjResourceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Links Proiject resources table.
    /// </summary>
    /// <param name = "_dataSource">Project resource certificates data source.</param>
    private void linkTo_ProjResourceTable(QueryBuildDataSource _dataSource)
    {
        FieldId resourceField = fieldNum(ResProjectResourceSchedulableDistinctView, Resource);
        _dataSource.addLink(resourceField, fieldNum(ResResourceCharacteristicView, Resource));
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkTo_AssignmentResourcesViewV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Links Assignment resources view V2.
    /// </summary>
    /// <param name = "_dataSource">Assignment resources certificates data source.</param>
    private void linkTo_AssignmentResourcesViewV2(QueryBuildDataSource _dataSource)
    {
        FieldId resourceField = fieldNum(ResAssignmentResourcesViewV2, Resource);
        _dataSource.addLink(resourceField, fieldNum(ResAssignmentResourceCertificatesView, Resource));

        FieldId activityResourceField = fieldNum(ResAssignmentResourcesViewV2, ActivityResource);
        _dataSource.addLink(activityResourceField, fieldNum(ResAssignmentResourceCertificatesView, ActivityResource));
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkTo_CompanyResourceDetailView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Links Company resources view.
    /// </summary>
    /// <param name = "_dataSource">Company resource certificates data source.</param>
    private void linkTo_CompanyResourceDetailView(QueryBuildDataSource _dataSource)
    {
        FieldId resourceField = fieldNum(ResCompanyResourceSchedulableDetailDistinctView, Resource);
        _dataSource.addLink(resourceField, fieldNum(ResResourceCharacteristicView, Resource));
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkTo_AssignmentResourcesView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Links Assignment resources view.
    /// </summary>
    /// <param name = "_dataSource">Assignment resources certificates data source.</param>
    private void linkTo_AssignmentResourcesView(QueryBuildDataSource _dataSource)
    {
        FieldId resourceField = fieldNum(ResAssignmentResourcesDistinctView, Resource);
        _dataSource.addLink(resourceField, fieldNum(ResAssignmentResourceCertificatesView, Resource));

        FieldId activityResourceField = fieldNum(ResAssignmentResourcesDistinctView, ActivityResource);
        _dataSource.addLink(activityResourceField, fieldNum(ResAssignmentResourceCertificatesView, ActivityResource));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>