<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmTotalCompStatementController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>HcmTotalCompStatementReportController</c> class is the controller class for the
///    <c>HcmTotalCompStatement</c> report.
/// </summary>
class HcmTotalCompStatementController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies the report contract before the report dialog is opened.
    /// </summary>
    public void prePromptModifyContract()
    {
        super();

        this.setRanges(this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRanges</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Modifies the report query and parameters based on caller settings.
    /// </summary>
    /// <param name="_query">
    ///    The query object.
    /// </param>
    /// <remarks>
    ///    Assigns values to the <c>HcmTotalCompStatementController</c> range.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setRanges(Query _query)
    {
        str                     rangePersonnelNumber;
        HcmWorker               hcmWorker;
        FormDataSource          fds;

        if (_query                      &&
            this.parmArgs()             &&
            this.parmArgs().record()    &&
            this.parmArgs().dataset() == tableNum(HcmWorker))
        {
            // called from workerlist form
            _query.dataSourceTable(tableNum(HcmWorker)).clearRanges();
            _query.dataSourceTable(tableNum(HcmPositionWorkerAssignment)).clearRanges();
            _query.dataSourceTable(tableNum(PayrollPayStatement)).clearRanges();
            _query.dataSourceTable(tableNum(HcmPositionDetail)).clearRanges();
            _query.dataSourceTable(tableNum(HcmPositionHierarchy)).clearRanges();

            _query.dataSourceTable(tableNum(HcmPositionDetail)).addRange(fieldNum(HcmPositionDetail, Department));
            _query.dataSourceTable(tableNum(HcmPositionHierarchy)).addRange(fieldNum(HcmPositionHierarchy, ParentPosition));

            fds = FormDataUtil::getFormDataSource(this.parmArgs().record());
            for (hcmWorker = fds.getFirst(true) ? fds.getFirst(true) : this.parmArgs().record(); hcmWorker; hcmWorker = fds.getNext())
            {
                if (rangePersonnelNumber)
                {
                    rangePersonnelNumber += ',';
                }
                rangePersonnelNumber += hcmWorker.PersonnelNumber;
            }
            _query.dataSourceTable(tableNum(HcmWorker)).addRange(fieldNum(HcmWorker, PersonnelNumber)).value(rangePersonnelNumber);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        HcmTotalCompStatementController controller  = new HcmTotalCompStatementController();
        controller.parmReportName(ssrsReportStr(HcmTotalCompStatementReport, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>