<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyUpdateRemPhys</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InterCompanyUpdateRemPhys extends InterCompanyUpdate
{
    InventQty                   diffInventPhysical;
    InventQty                   diffPurchSalesPhysical;
    PdsCWInventQty              diffPdsCWRemainInventPhysical;
    anytype                     status;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDiffInventPhysical</Name>
				<Source><![CDATA[
    void parmDiffInventPhysical(InventQty   _diffInventPhysical)
    {
        diffInventPhysical = _diffInventPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiffPurchSalesPhysical</Name>
				<Source><![CDATA[
    void parmDiffPurchSalesPhysical(InventQty  _diffPurchSalesPhysical)
    {
        diffPurchSalesPhysical = _diffPurchSalesPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiffPdsCWRemainInventPhysical</Name>
				<Source><![CDATA[
    void parmDiffPdsCWRemainInventPhysical(PdsCWInventQty  _diffPdsCWRemainInventPhysical)
    {
        diffPdsCWRemainInventPhysical = _diffPdsCWRemainInventPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static InterCompanyUpdate construct(Common _common)
    {
        InterCompanyUpdateRemPhys  interCompanyUpdateRemPhys;
        switch (_common.TableId)
        {
            case(tablenum(PurchLine) ) : interCompanyUpdateRemPhys = new interCompanyUpdateRemPhys_PurchLine();  break;
            case(tablenum(SalesLine) ) : interCompanyUpdateRemPhys = new interCompanyUpdateRemPhys_SalesLine();  break;

            default : throw error(strfmt("@SYS19306",funcname()));
        }

        return interCompanyUpdateRemPhys;
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronize</Name>
				<Source><![CDATA[
    static void synchronize(Common                 _common,
                            InventQty              _diffInventPhysical,
                            InventQty              _diffPurchSalesPhysical,
                            InterCompanySkipUpdate _skipUpdate = InterCompanySkipUpdate::No,
                            PdsCWInventQty         _diffPdsCWRemainInventPhysical = 0)
    {
        InterCompanyUpdateRemPhys  interCompanyUpdateRemPhys;

        interCompanyUpdateRemPhys = InterCompanyUpdateRemPhys::construct(_common);
        interCompanyUpdateRemPhys.parmBuffer                       (_common);
        interCompanyUpdateRemPhys.parmDiffInventPhysical           (_diffInventPhysical);
        interCompanyUpdateRemPhys.parmDiffPurchSalesPhysical       (_diffPurchSalesPhysical);
        interCompanyUpdateRemPhys.parmDiffPdsCWRemainInventPhysical(_diffPdsCWRemainInventPhysical);
        interCompanyUpdateRemPhys.parmSkipUpdate                   (_skipUpdate);
        interCompanyUpdateRemPhys.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>