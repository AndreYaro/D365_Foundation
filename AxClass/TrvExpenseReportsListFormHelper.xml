<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvExpenseReportsListFormHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Helper class for expense module that provides utility methods for the expense report list form.
/// </summary>
static class TrvExpenseReportsListFormHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSelectedReceipts</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the selected receipt items from the data source object.
    /// </summary>
    /// <param name = "_unreconciledReceiptDS">
    ///     The data source in which the receipt items are selected.
    /// </param>
    /// <returns>A list with all the document records.</returns>
    public static List getSelectedReceipts(FormDataSource _unreconciledReceiptDS)
    {
        DocuRef                             currentUnreconciledReceipt;
        List                                selectedUnreconciledReceipts = new List(Types::Record);
        MultiSelectionHelper                receiptsHelper = MultiSelectionHelper::construct();

        if (_unreconciledReceiptDS)
        {
            // Get all the selected receipts.
            receiptsHelper.parmDatasource(_unreconciledReceiptDS);
            currentUnreconciledReceipt = receiptsHelper.getFirst();

            while (currentUnreconciledReceipt)
            {
                selectedUnreconciledReceipts.addEnd(currentUnreconciledReceipt);
                currentUnreconciledReceipt = receiptsHelper.getNext();
            }
        }
        return selectedUnreconciledReceipts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedUnreconciledExpenses</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the selected unreconciled items from the data source object.
    /// </summary>
    /// <param name = "_unreconciledExpenseDS">
    ///     The data source in which the unreconciled items are selected.
    /// </param>
    /// <returns>
    ///     A list of selected unreconciled expense.
    /// </returns>
    public static List getSelectedUnreconciledExpenses(FormDataSource _unreconciledExpenseDS)
    {
        TmpTrvUnreconciledExpenseTransUnion     currentUnreconciledExpense;
        List                                    selectedUnreconciledExpenses = new List(Types::Record);
        MultiSelectionHelper                    unreconciledHelper = MultiSelectionHelper::construct();

        // Get all the selected unreconciled expenses.
        unreconciledHelper.parmDatasource(_unreconciledExpenseDS);
        currentUnreconciledExpense = unreconciledHelper.getFirst();

        while (currentUnreconciledExpense)
        {
            selectedUnreconciledExpenses.addEnd(currentUnreconciledExpense);
            currentUnreconciledExpense = unreconciledHelper.getNext();
        }

        return selectedUnreconciledExpenses;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>