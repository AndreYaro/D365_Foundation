<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanReviewConfigEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanReviewConfigEventHandler</c> class is the event handler that manages changes to
/// the <c>WorkflowConfigurationTable</c> table.
/// </summary>
/// <remarks>
/// This event handler enforces the business logic that will keep the <c>WorkflowConfigurationTable</c>
/// table in sync with the <c>BudgetPlanningProcedure</c> table.
/// </remarks>
public class BudgetPlanReviewConfigEventHandler implements
    WorkflowConfigDataChangeEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activates the workflow version record.
    /// </summary>
    /// <param name="_workflowVersionTable">
    /// A record of the <c>WorkflowVersionTable</c> table.
    /// </param>
    public void activate(WorkflowVersionTable _workflowVersionTable)
    {
        // interface method that must be implemented
        // there is no code for budget plan workflow
    }

]]></Source>
			</Method>
			<Method>
				<Name>deactivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deactivates the workflow version record.
    /// </summary>
    /// <param name="_workflowVersionTable">
    /// A record of the <c>WorkflowVersionTable</c> table.
    /// </param>
    public void deactivate(WorkflowVersionTable _workflowVersionTable)
    {
        // interface method that must be implemented
        // there is no code for budget plan workflow
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs any additional cleanup beyond deleting the workflow version record.
    /// </summary>
    /// <param name="_workflowVersionTable">
    /// A record of the <c>WorkflowVersionTable</c> table.
    /// </param>
    public void delete(WorkflowVersionTable _workflowVersionTable)
    {
        BudgetPlanningWorkflow  budgetPlanningWorkflow;
        WorkflowTable           workflowTable;

        update_recordset budgetPlanningWorkflow
            setting Workflow = ''
            exists join workflowTable
                where workflowTable.SequenceNumber == budgetPlanningWorkflow.Workflow &&
                    workflowTable.RecId == _workflowVersionTable.WorkflowTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateActivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the workflow version record can be started.
    /// </summary>
    /// <param name="_workflowVersionTable">
    /// A record of the <c>WorkflowVersionTable</c> table.
    /// </param>
    /// <returns>
    /// Always returns true.
    /// </returns>
    public boolean validateActivate(WorkflowVersionTable _workflowVersionTable)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDeactivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the workflow version record can be deactivated.
    /// </summary>
    /// <param name="_workflowVersionTable">
    /// A record of the <c>WorkflowVersionTable</c> table.
    /// </param>
    /// <returns>
    /// Always returns true.
    /// </returns>
    public boolean validateDeactivate(WorkflowVersionTable _workflowVersionTable)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the workflow version record can be deleted.
    /// </summary>
    /// <param name="_workflowVersionTable">
    /// A record of the <c>WorkflowVersionTable</c> table.
    /// </param>
    /// <returns>
    /// true if the record can be deleted; otherwise, false.
    /// </returns>
    public boolean validateDelete(WorkflowVersionTable _workflowVersionTable)
    {
        BudgetPlanningWorkflow  budgetPlanningWorkflow;
        WorkflowTable           workflowTable;
        boolean                 isValid = true;

        select firstonly RecId, Workflow from budgetPlanningWorkflow
            exists join workflowTable
                where workflowTable.SequenceNumber == budgetPlanningWorkflow.Workflow
                    && workflowTable.RecId == _workflowVersionTable.WorkflowTable;

        if (budgetPlanningWorkflow)
        {
            info(strFmt("@GLS70386", budgetPlanningWorkflow.Workflow));

            // cannot delete workflow
            isValid = false;
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>