<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransDetailController</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxTransDetailController extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();

        if (TaxParameters::isEasternEuropeOrVatDueDateFeatureEnabled())
        {
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceEEU00039, funcName());
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {

        TaxTransDetailRdlContract    contract            = this.parmReportContract().parmRdpContract() as TaxTransDetailRdlContract;

        date                        fromDate            = contract.parmFromDate();
        date                        toDate              = contract.parmToDate();

        Query                       query               = this.getFirstQuery();

        // Modify the query contract based on fromDate & toDate.
        SrsReportHelper::addFromAndToDateRangeToQuery(query,
                                                     fromDate,
                                                      toDate,
                                                      tableNum(TaxTrans),
                                                      fieldNum(TaxTrans, TransDate));

        // if InterCompany is enabled, we need to display the Company for ledger accounts on the report
        contract.parmDisplayCompanyForLedgerAccount(isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunValidate</Name>
				<Source><![CDATA[
    protected container preRunValidate()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        TaxTransDetailController controller = new TaxTransDetailController();
        controller.parmReportName(ssrsReportStr(TaxTransDetail, Report));
        controller.parmArgs(args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>