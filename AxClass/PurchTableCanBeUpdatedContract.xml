<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTableCanBeUpdatedContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchTableCanBeUpdatedContract</c> class is the output data contract class for the
/// <c>PurchTable.checkIfUpdate</c> method.
/// </summary>
public class PurchTableCanBeUpdatedContract implements SysPackable
{
    boolean canConfirmationRequestBeUpdated;
    boolean canBindingConfirmationRequestBeUpdated;
    boolean canPurchaseOrderBeUpdated;
    boolean canReceiptsListBeUpdated;
    boolean canPackingSlipBeUpdated;
    boolean canInvoiceBeUpdated;
    boolean mcrCanDropShipBeReleased;
    boolean mcrCanDropShipBeDelivered;

    // <GEERU>
    boolean canInvoice4PaymBeUpdated;
    boolean canFactureBeUpdated;
    boolean canCommFactureBeUpdated;
    // </GEERU>

    // <GBR>
    boolean canFiscalDocTextBeRegistrated_BR;
    // </GBR>

    private InvoiceUpdateAvailability invoiceUpdateAvailability;

    // <GBR>
    #localmacro.List1
        canPurchaseOrderBeUpdated,
        canReceiptsListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated
    #endmacro
    // </GBR>

    // <GBR>
    #localmacro.List2
        canPurchaseOrderBeUpdated,
        canReceiptsListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated
        ,canInvoice4PaymBeUpdated
        ,canFactureBeUpdated
    #endmacro
    // </GBR>

    #localmacro.List3
        canPurchaseOrderBeUpdated,
        canReceiptsListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated,
        canInvoice4PaymBeUpdated,
        canFactureBeUpdated,
        canFiscalDocTextBeRegistrated_BR
    #endmacro

    #localmacro.List4
        canPurchaseOrderBeUpdated,
        canReceiptsListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated
        // <GEERU>
        ,canInvoice4PaymBeUpdated
        ,canFactureBeUpdated
        // </GEERU>
        // <GBR>
        ,canFiscalDocTextBeRegistrated_BR
        // </GBR>
        ,canConfirmationRequestBeUpdated
    #endmacro

    #localmacro.List5
        canPurchaseOrderBeUpdated,
        canReceiptsListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated
        // <GEERU>
        ,canInvoice4PaymBeUpdated
        ,canFactureBeUpdated
        // </GEERU>
        // <GBR>
        ,canFiscalDocTextBeRegistrated_BR
        // </GBR>
        ,canConfirmationRequestBeUpdated
        ,canBindingConfirmationRequestBeUpdated
    #endmacro

    #localmacro.List6
        canPurchaseOrderBeUpdated,
        canReceiptsListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated
        // <GEERU>
        ,canInvoice4PaymBeUpdated
        ,canFactureBeUpdated
        // </GEERU>
        // <GBR>
        ,canFiscalDocTextBeRegistrated_BR
        // </GBR>
        ,canConfirmationRequestBeUpdated
        ,canBindingConfirmationRequestBeUpdated
        ,canCommFactureBeUpdated
    #endmacro

    #define.CurrentVersion(7)
    
    #localmacro.CurrentList
        canPurchaseOrderBeUpdated,
        canReceiptsListBeUpdated,
        canPackingSlipBeUpdated,
        canInvoiceBeUpdated,
        canInvoice4PaymBeUpdated,
        canFactureBeUpdated,
        canFiscalDocTextBeRegistrated_BR,
        canConfirmationRequestBeUpdated,
        canBindingConfirmationRequestBeUpdated,
        canCommFactureBeUpdated,
        invoiceUpdateAvailability
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanConfirmationRequestBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanConfirmationRequestBeUpdated(boolean _canConfirmationRequestBeUpdated = canConfirmationRequestBeUpdated)
    {
        canConfirmationRequestBeUpdated = _canConfirmationRequestBeUpdated;
        return canConfirmationRequestBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanBindingConfirmationRequestBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanBindingConfirmationRequestBeUpdated(boolean _canBindingConfirmationRequestBeUpdated = canBindingConfirmationRequestBeUpdated)
    {
        canBindingConfirmationRequestBeUpdated = _canBindingConfirmationRequestBeUpdated;
        return canBindingConfirmationRequestBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanCommFactureBeUpdated_RU</Name>
				<Source><![CDATA[
    public boolean parmCanCommFactureBeUpdated_RU(boolean _canCommFactureBeUpdated = canCommFactureBeUpdated)
    {
        canCommFactureBeUpdated = _canCommFactureBeUpdated;
        return canCommFactureBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanFactureBeUpdated_RU</Name>
				<Source><![CDATA[
    public boolean parmCanFactureBeUpdated_RU(boolean _canFactureBeUpdated = canFactureBeUpdated)
    {
        canFactureBeUpdated = _canFactureBeUpdated;
        return canFactureBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanInvoice4PaymBeUpdated_RU</Name>
				<Source><![CDATA[
    public boolean parmCanInvoice4PaymBeUpdated_RU(boolean _canInvoice4PaymBeUpdated = canInvoice4PaymBeUpdated)
    {
        canInvoice4PaymBeUpdated = _canInvoice4PaymBeUpdated;
        return canInvoice4PaymBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanInvoiceBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanInvoiceBeUpdated(boolean _canInvoiceBeUpdated = canInvoiceBeUpdated)
    {
        canInvoiceBeUpdated = invoiceUpdateAvailability == InvoiceUpdateAvailability::NoErrorFound;
        return canInvoiceBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanPackingSlipBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanPackingSlipBeUpdated(boolean _canPackingSlipBeUpdated = canPackingSlipBeUpdated)
    {
        canPackingSlipBeUpdated = _canPackingSlipBeUpdated;
        return canPackingSlipBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanPurchaseOrderBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanPurchaseOrderBeUpdated(boolean _canPurchaseOrderBeUpdated = canPurchaseOrderBeUpdated)
    {
        canPurchaseOrderBeUpdated = _canPurchaseOrderBeUpdated;
        return canPurchaseOrderBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanReceiptsListBeUpdated</Name>
				<Source><![CDATA[
    public boolean parmCanReceiptsListBeUpdated(boolean _canReceiptsListBeUpdated = canReceiptsListBeUpdated)
    {
        canReceiptsListBeUpdated = _canReceiptsListBeUpdated;
        return canReceiptsListBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceUpdateAvailability</Name>
				<Source><![CDATA[
    public InvoiceUpdateAvailability parmInvoiceUpdateAvailability(InvoiceUpdateAvailability _invoiceUpdateAvailability = invoiceUpdateAvailability)
    {
        invoiceUpdateAvailability = _invoiceUpdateAvailability;
        return invoiceUpdateAvailability;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMCRCanDropShipBeDelivered</Name>
				<Source><![CDATA[
    public boolean parmMCRCanDropShipBeDelivered(
        boolean     _mcrCanDropShipBeDelivered = mcrCanDropShipBeDelivered)
    {
        mcrCanDropShipBeDelivered = _mcrCanDropShipBeDelivered;
        return mcrCanDropShipBeDelivered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMCRCanDropShipBeReleased</Name>
				<Source><![CDATA[
    public boolean parmMCRCanDropShipBeReleased(
        boolean _mcrCanDropShipBeReleased = mcrCanDropShipBeReleased)
    {
        mcrCanDropShipBeReleased = _mcrCanDropShipBeReleased;
        return mcrCanDropShipBeReleased;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        int version     = RunBase::getVersion(_packedClass);

        switch (version)
        {
            // <GBR>
            case 1:
                [version,#List1] = _packedClass;
                return true;
            case 2:
                [version,#List2] = _packedClass;
                return true;
            // </GBR>
            case 3:
                [version,#List3] = _packedClass;
                return true;
            case 4:
                [version,#List4] = _packedClass;
                return true;
            case 5:
                [version,#List5] = _packedClass;
                return true;
            case 6:
                [version,#List6] = _packedClass;
                return true;
            case #CurrentVersion:
                [version,#CurrentList] = _packedClass;
                return true;
            default :
                return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static public PurchTableCanBeUpdatedContract construct()
    {
        return new PurchTableCanBeUpdatedContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>PurchTableCanBeUpdatedContract</c> class based on a container from a
    /// prior call to the <c>PurchTableCanBeUpdatedContract.pack</c> method.
    /// </summary>
    /// <param name="_packedClass">
    /// The container that contains the packed class.
    /// </param>
    /// <returns>
    /// An instance of the <c>PurchTableCanBeUpdatedContract</c> class that is identical to the one that
    /// was packed into the container .
    /// </returns>
    static public PurchTableCanBeUpdatedContract create(container _packedClass)
    {
        PurchTableCanBeUpdatedContract purchTableCanBeUpdatedContract = PurchTableCanBeUpdatedContract::construct();
        purchTableCanBeUpdatedContract.unpack(_packedClass);
        return purchTableCanBeUpdatedContract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>