<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationISVTaxPostController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxIntegrationISVTaxPostController</c> class acts as a controller for the
///    <c>TaxIntegrationISVTaxPostService</c> service.
/// </summary>
internal class TaxIntegrationISVTaxPostController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SysOperationController construct(Args _args)
    {
        SysOperationController controller;

        controller = new TaxIntegrationISVTaxPostController(
            classStr(TaxIntegrationISVTaxPostService),
            methodStr(TaxIntegrationISVTaxPostService, execute),
            SysOperationExecutionMode::Synchronous);

        controller.parmArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        TaxIntegrationISVTaxPostController isvTaxPostController = TaxIntegrationISVTaxPostController::construct(_args);
        isvTaxPostController.parmLoadFromSysLastValue(false);
        isvTaxPostController.initialize();
        isvTaxPostController.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    public void initialize()
    {
        TaxIntegrationISVTaxPostContract isvTaxPostContract = this.getDataContractObject();

        if (args.dataset() == tableNum(TaxIntegrationISVTaxPostLog))
        {
            TaxIntegrationISVTaxPostLog isvTaxPostLog = args.record();
            isvTaxPostContract.parmSourceTableId(isvTaxPostLog.SourceTableId);
            isvTaxPostContract.parmSourceRecId(isvTaxPostLog.SourceRecId);
            isvTaxPostContract.parmTaxModuleType(isvTaxPostLog.Source);

            this.parmDisplayQueryFilter(false);
        }

        if (!args.caller())
        {
            Query query = new Query();
            QueryBuildDataSource qbds = query.addDataSource(tableNum(TaxIntegrationISVTaxPostLog));

            SysQuery::findOrCreateRange(qbds, fieldNum(TaxIntegrationISVTaxPostLog, Voucher));
            SysQuery::findOrCreateRange(qbds, fieldNum(TaxIntegrationISVTaxPostLog, TransDate));
            SysQuery::findOrCreateRange(qbds, fieldNum(TaxIntegrationISVTaxPostLog, Status));

            isvTaxPostContract.parmQuery(SysOperationHelper::base64Encode(query.pack()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ClassDescription caption()
    {
        return "@TaxIntegration:PostTaxToISV";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>