<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SAFTReportContract_VATInvoices_PL</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract class for the service that runs the SAF-T VAT Invoices (PL) report.
/// </summary>
[
    DataContract,
    SysOperationGroup('Period', "@SYS40", '1'),
    SysOperationGroup('InvoiceID', "@SYS4081970", '2'),
    SysOperationGroup('TaxAuthority', "@SYS21937", '3'),
    SysOperationGroup('CurrencyCode', "@SYS3392", '4')
]
    public class SAFTReportContract_VATInvoices_PL extends SAFTReportContract_Base_W
{
    private InvoiceId fromInvoiceId;
    private InvoiceId toInvoiceId;
    private CurrencyCode reportCurrencyCode;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromInvoiceId</Name>
				<Source><![CDATA[
    [
        DataMember('FromInvoiceId'),
        SysOperationGroupMember('InvoiceID'),
        SysOperationLabel(literalStr("@SYS4083")),
        SysOperationDisplayOrder('1')
    ]
    public InvoiceId parmFromInvoiceId(InvoiceId _fromInvoiceId = fromInvoiceId)
    {
        fromInvoiceId = _fromInvoiceId;
        return fromInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToInvoiceId</Name>
				<Source><![CDATA[
    [
        DataMember('ToInvoiceId'),
        SysOperationGroupMember('InvoiceID'),
        SysOperationLabel(literalStr("@SYS53942")),
        SysOperationDisplayOrder('2')
    ]
    public InvoiceId parmToInvoiceId(InvoiceId _toInvoiceId = toInvoiceId)
    {
        toInvoiceId = _toInvoiceId;
        return toInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportCurrencyCode</Name>
				<Source><![CDATA[
    [
        DataMember('CurrencyCode'),
        SysOperationGroupMember('CurrencyCode'),
        SysOperationLabel(literalStr("@SYS3392")),
        SysOperationDisplayOrder('3')
    ]
    public CurrencyCode parmReportCurrencyCode(CurrencyCode _reportCurrencyCode = reportCurrencyCode)
    {
        reportCurrencyCode = _reportCurrencyCode;
        return reportCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultQuery</Name>
				<Source><![CDATA[
    protected Query initDefaultQuery()
    {
        Query defaultQuery = new Query();
        QueryBuildDataSource qbds;

        qbds = defaultQuery.addDataSource(tableNum(CustInvoiceJour));
        qbds.label("@SYS191694");
        QueryBuildRange gbr = qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId));
        gbr.status(RangeStatus::Locked);
        gbr = qbds.addRange(fieldNum(CustInvoiceJour, InvoiceDate));
        gbr.status(RangeStatus::Locked);

        qbds = defaultQuery.addDataSource(tableNum(ProjInvoiceJour));
        qbds.label("@SYS50149");
        gbr = qbds.addRange(fieldNum(ProjInvoiceJour, ProjInvoiceId));
        gbr.status(RangeStatus::Locked);
        gbr = qbds.addRange(fieldNum(ProjInvoiceJour, InvoiceDate));
        gbr.status(RangeStatus::Locked);
        qbds = qbds.addDataSource(tableNum(CustInvoiceJour));
        qbds.relations(false);
        qbds.addLink(fieldNum(ProjInvoiceJour, InvoiceDate), fieldNum(CustInvoiceJour, InvoiceDate));
        qbds.addLink(fieldNum(ProjInvoiceJour, LedgerVoucher), fieldNum(CustInvoiceJour, LedgerVoucher));
        qbds.joinMode(JoinMode::NoExistsJoin);

        qbds = defaultQuery.addDataSource(tableNum(CzCustAdvanceInvoiceTable));
        qbds.label("@StandardAuditFile_SAFT_W:CustomerAdvanceInvoice");
        gbr = qbds.addRange(fieldNum(CzCustAdvanceInvoiceTable, InvoiceId));
        gbr.status(RangeStatus::Locked);
        gbr = qbds.addRange(fieldNum(CzCustAdvanceInvoiceTable, InvoiceDate));
        gbr.status(RangeStatus::Locked);
        qbds.addRange(fieldNum(CzCustAdvanceInvoiceTable, Type)).value(SysQuery::valueNot(AdvanceInvoiceType_W::Reversal));

        return defaultQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>