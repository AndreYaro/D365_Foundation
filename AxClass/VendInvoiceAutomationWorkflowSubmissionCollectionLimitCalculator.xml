<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceAutomationWorkflowSubmissionCollectionLimitCalculator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Implemented of <c>VendInvoiceAutomationIWorkflowSubmissionCollectionLimitCalculator</c> for calculating collections limits
/// on automatic submission of invoices to workflow.
/// </summary>
internal final class VendInvoiceAutomationWorkflowSubmissionCollectionLimitCalculator implements VendInvoiceAutomationIWorkflowSubmissionCollectionLimitCalculator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {

    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static VendInvoiceAutomationWorkflowSubmissionCollectionLimitCalculator construct()
    {
        return new VendInvoiceAutomationWorkflowSubmissionCollectionLimitCalculator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateMaximumNumberOfInvoicesToCollect</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int calculateMaximumNumberOfInvoicesToCollect()
    {
        int maximumAllowedInvoicesPerHour = VendParameters::getMaximumInvoicesAllowedForAutomatedWorkflowSubmission();
        int workflowSubmissionFrequencyInHours = this.calculateWorkflowFrequencySubmissionInHours();

        return maximumAllowedInvoicesPerHour * workflowSubmissionFrequencyInHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateWorkflowFrequencySubmissionInHours</Name>
				<Source><![CDATA[
    private int calculateWorkflowFrequencySubmissionInHours()
    {
        ProcessScheduleSeriesPollingDetails processPollingDetails = ProcessScheduleSeries::getPollingDetailsForSeries(
            VendInvoiceAutomationWorkflowSubmissionTaskConstants::TypeName,
            VendInvoiceAutomationWorkflowSubmissionTaskConstants::SeriesName);

        int frequencyInHours = processPollingDetails.parmInterval();

        if (processPollingDetails.parmUnit() == ProcessScheduleUnit::Day)
        {
            frequencyInHours = frequencyInHours * 24;
        }

        return frequencyInHours;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>