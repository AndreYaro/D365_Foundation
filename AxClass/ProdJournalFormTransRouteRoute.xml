<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdJournalFormTransRouteRoute</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProdJournalFormTransRouteRoute extends ProdJournalFormTransRoute
{
    ObjectIdent         formRunRoute;
    RouteJobType        lastProdRouteJobType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buttonClickedOperation</Name>
				<Source><![CDATA[
    void buttonClickedOperation()
    {
        formRunRoute = this.openProdRouteJobCurrentForm(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceInitValuePre</Name>
				<Source><![CDATA[
    void datasourceInitValuePre()
    {
        super();

        if (journalTableData)
            prodJournalRoute.JobType = lastProdRouteJobType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceWritePost</Name>
				<Source><![CDATA[
    void datasourceWritePost()
    {
        super();
        lastProdRouteJobType = prodJournalRoute.JobType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doLinkActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Invokes doLinkActive on the associated <c>ProdRouteJobCurrent</c> form, if applicable.
    /// </summary>
    protected void doLinkActive()
    {
        if (formRunRoute)
        {
            Object formObject = formRunRoute.object();
            if (formObject)
            {
                formObject.doLinkActive();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedJobTypePre</Name>
				<Source><![CDATA[
    void fieldModifiedJobTypePre()
    {
        ProdJobType    prodJobType  = ProdJobType::construct(prodJournalRoute.JobType);
        prodJobType.initProdJournalRoute(prodJournalRoute.prodRoute(), prodJournalRoute, null, true);

        if (prodJournalRoute.isProjMethodConsumed())
        {
            prodJobType.initProdJournalRouteProj(ProdRouteTransType::Time,prodJournalRoute,prodJournalRouteProjHour);
            prodJobType.initProdJournalRouteProj(ProdRouteTransType::Qty,prodJournalRoute,prodJournalRouteProjQuantity);
        }

        prodJournalRoute.ExecutedPct = prodJournalRoute.proposalRouteExecutedPct();

        this.enableButtonsActive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedOprNumPost</Name>
				<Source><![CDATA[
    void fieldModifiedOprNumPost()
    {
        ProdJobType         prodJobType  = ProdJobType::construct(prodJournalRoute.JobType);

        ProdJournalTable prodJournalTable = journalTableData.journalTable();
        prodJobType.initProdJournalRoute(prodJournalRoute.prodRoute(),prodJournalRoute, null, true);

        if (prodJournalRoute.isProjMethodConsumed())
        {
            prodJobType.initProdJournalRouteProj(ProdRouteTransType::Time,prodJournalRoute,prodJournalRouteProjHour);
            prodJobType.initProdJournalRouteProj(ProdRouteTransType::Qty,prodJournalRoute,prodJournalRouteProjQuantity);
        }

        this.enableButtonsActive();

        this.doLinkActive();

        if (prodJournalTable.AutoReportFinished)
        {
            if (ProdRoute::find(prodJournalRoute.ProdId,prodJournalRoute.OprNum,RouteOprPriority::Primary).OprNumNext == 0)
            {
                prodJournalRoute.ProdReportFinished = NoYes::Yes;

                this.fieldModifiedProdReportFinishedPost();
            }
        }

        if (prodJournalRoute.ProdReportFinished == NoYes::Yes   &&
            ProdRoute::find(prodJournalRoute.ProdId,prodJournalRoute.OprNum,RouteOprPriority::Primary).OprNumNext != 0)
        {
            prodJournalRoute.ProdReportFinished = NoYes::No;

            this.fieldModifiedProdReportFinishedPost();
        }

        if (prodJournalTable.RouteAutoPickList)
        {
            if (ProdBOM::findOprNum(prodJournalRoute.ProdId,prodJournalRoute.OprNum).RecId)
            {
                prodJournalRoute.ProdPickList = NoYes::Yes;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedOprPriorityPost</Name>
				<Source><![CDATA[
    void fieldModifiedOprPriorityPost()
    {
        ProdJobType prodJobType  = ProdJobType::construct(prodJournalRoute.JobType);
        
        prodJobType.initProdJournalRoute(prodJournalRoute.prodRoute(),prodJournalRoute, null, true);

        if (prodJournalRoute.isProjMethodConsumed())
        {
            prodJobType.initProdJournalRouteProj(ProdRouteTransType::Time,prodJournalRoute,prodJournalRouteProjHour);
            prodJobType.initProdJournalRouteProj(ProdRouteTransType::Qty,prodJournalRoute,prodJournalRouteProjQuantity);
        }

        this.enableButtonsActive();

        this.doLinkActive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedWrkCtrIdPost</Name>
				<Source><![CDATA[
    void fieldModifiedWrkCtrIdPost()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>formInitPost</Name>
				<Source><![CDATA[
    void formInitPost()
    {
        super();
        if (journalTableData)
            lastProdRouteJobType = RouteJobType::Process;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExecutedPct</Name>
				<Source><![CDATA[
    void setExecutedPct()
    {
        prodJournalRoute.ExecutedPct = prodJournalRoute.proposalRouteExecutedPct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
