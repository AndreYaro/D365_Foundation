<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rTax25StdOperandType_Line</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rTax25StdOperandType_Line extends RTax25StdOperandType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupFrom</Name>
				<Source><![CDATA[
        public void lookupFrom()
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tablenum(RTax25StdExpressionLine), controlRefIdFrom);
        Query                   query = new Query();
        QueryBuildDataSource    qbds;

        sysTableLookup.addLookupfield(fieldnum(RTax25StdExpressionLine, LineNum), true);
        sysTableLookup.addLookupfield(fieldnum(RTax25StdExpressionLine, LineType));

        qbds = query.addDataSource(tablenum(RTax25StdExpressionLine));
        qbds.addRange(fieldnum(RTax25StdExpressionLine, SeqNum)).value(int2str(expressionLine.SeqNum));
        qbds.addRange(fieldnum(RTax25StdExpressionLine, rTax25ProfitTable)).value(queryValue(expressionLine.rTax25ProfitTable));
        qbds.addRange(fieldnum(RTax25StdExpressionLine, LineNum)).value(SysQuery::range("", expressionLine.LineNum - 1));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>operand</Name>
				<Source><![CDATA[
        public AmountMST operand()
    {
        return expression.result(str2int(expressionLine.RefIdFrom));
    }

]]></Source>
			</Method>
			<Method>
				<Name>resultBased</Name>
				<Source><![CDATA[
        public boolean resultBased()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
        public void updateDesign()
    {
        controlRefIdFrom.lookupButton(FormLookupButton::Always);
        controlRefIdTo.lookupButton(FormLookupButton::Never);

        controlRefIdFrom.enabled(true);
        controlRefIdTo.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        RTax25StdLineNum    lineNum;
        boolean             ret = super();
        ;

        lineNum = str2int(expressionLine.RefIdFrom);
        if (lineNum <= 0 || lineNum >= expressionLine.LineNum)
        {
            ret = ret && checkFailed(strfmt("@GLS106057", lineNum, expressionLine.LineNum));
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>