<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSCarrierHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Helper class for <c>TMSCarrier</c> table.
/// </summary>
class TMSCarrierHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateLoadTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates load template with another.
    /// </summary>
    /// <param name="_loadTemplateId">
    /// <c>WHSLoadTemplateId</c> of the selected load template.
    /// </param>
    /// <returns>
    /// True if load template is updated.
    /// </returns>
    public static boolean updateLoadTemplate(WHSLoadTemplateId _loadTemplateId)
    {
        Dialog      dialog;
        DialogText  dialogText;
        boolean     ret;

        dialog = new Dialog("@TRX1552");
        dialogText = dialog.addText(strfmt("@TRX1553", _loadTemplateId));

        dialog.run();

        if (dialog.closedOk())
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateWeightForCarrierService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the weight used for a given carrier service. The maximum value used of (weight) or (volume * volume factor).
    /// </summary>
    /// <param name = "_weight">The base weight.</param>
    /// <param name = "_volume">The base volume.</param>
    /// <param name = "_carrierServiceCode">The carrier service code.</param>
    /// <param name = "_carrierCode">The carrier code.</param>
    /// <param name = "_inventSiteId">The inventory site id.</param>
    /// <param name = "_inventLocationId">The inventory warehouse.</param>
    /// <param name = "_effectiveScheduledShipDateTime">The scheduled ship date.</param>
    /// <returns>The calculate weight.</returns>
    public static TMSWeight calculateWeightForCarrierService(
        TMSWeight                   _weight,
        TMSVolumeHigh               _volume,
        TMSCarrierServiceCode       _carrierServiceCode,
        TMSCarrierCode              _carrierCode,
        InventSiteId                _inventSiteId,
        InventLocationId            _inventLocationId,
        TMSScheduledShipUTCDateTime _effectiveScheduledShipDateTime)
    {
        TMSWeight usedWeight = _weight;
        TMSCarrierService tmsCarrierService = TMSCarrierService::find(_carrierServiceCode, _carrierCode);

        if (tmsCarrierService.VolumeFactor > 0)
        {
            TMSScheduledShipUTCDateTime effectiveScheduledShipDateTime =
                _effectiveScheduledShipDateTime == TMSFwkRatingDtoHelper::unspecifiedDateTime ?
                DateTimeUtil::utcNow() :
                _effectiveScheduledShipDateTime;

            TMSRatingProfile ratingProfile = TMSFwkRatingDtoHelper::getRatingProfile(
                                                                        _carrierCode,
                                                                        _inventSiteId,
                                                                        _inventLocationId,
                                                                        effectiveScheduledShipDateTime);

            if (ratingProfile)
            {
                TMSRateEngine tmsRateEngine = TMSRateEngine::findByEngineTypeAndCode(
                    strFmt(
                        "%1.%2",
                        Microsoft.Dynamics.Ax.Tms.Base.Utility.ConstantsBS::TmsBllNamespace,
                        Microsoft.Dynamics.Ax.Tms.Base.Utility.RateEngineTypeConstants::P2PVolumeWeight),
                    ratingProfile.RateEngineCode);
                if (tmsRateEngine)
                {
                    usedWeight = max(_weight, _volume * tmsCarrierService.VolumeFactor);
                }
            }
        }
        return usedWeight;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>