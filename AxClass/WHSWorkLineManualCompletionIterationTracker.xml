<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkLineManualCompletionIterationTracker</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A class used to track number of work line completion attempt.
/// </summary>
internal class WHSWorkLineManualCompletionIterationTracker
{
    private Map workLineMap;
    private static Counter MaximumNumberOfIterations = 500;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        this.initMap();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMap</Name>
				<Source><![CDATA[
    private void initMap()
    {
        workLineMap = new Map(Types::Container, Types::Integer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>trackIteration</Name>
				<Source><![CDATA[
	/// <summary>
    /// Increases the iteration counter by one for the given work line.
    /// </summary>
    /// <param name = "_workLine">The work line for which the iteration counter will be increased.</param>
    [Hookable(false)]
    public void trackIteration(WHSWorkLine _workLine)
    {
        if (!_workLine.RecId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
        
        container workLineState = [_workLine.RecId, _workLine.QtyRemain];

        Counter iterations;
        if (workLineMap.exists(workLineState))
        {
            iterations = workLineMap.lookup(workLineState);
            iterations++;
        }

        workLineMap.insert(workLineState, iterations);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMaximumNumberOfIterationsReached</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the iteration counter for the given work line has reached the maximum number of iterations.
    /// </summary>
    /// <param name = "_workLine">The work line for which iteration counter is checked.</param>
    /// <returns>True if the iteration counter has reached maximum number of iterations.</returns>
    [Hookable(false)]
    public boolean isMaximumNumberOfIterationsReached(WHSWorkLine _workLine)
    {
        if (!_workLine.RecId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
        
        container workLineState = [_workLine.RecId, _workLine.QtyRemain];

        Counter iterations; 
        if (workLineMap.exists(workLineState))
        {
            iterations = workLineMap.lookup(workLineState);
        }
		        
        return (iterations >= MaximumNumberOfIterations);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new work line iteration tracker.
    /// </summary>
    /// <returns>The <c>WHSWorkLineIterationTracker</c> instance.</returns>
    [Hookable(false)]
    public static WHSWorkLineManualCompletionIterationTracker construct()
    {
        WHSWorkLineManualCompletionIterationTracker tracker = new WHSWorkLineManualCompletionIterationTracker();

        return tracker;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>