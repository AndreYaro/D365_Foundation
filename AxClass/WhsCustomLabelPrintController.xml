<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsCustomLabelPrintController</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class WhsCustomLabelPrintController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SysOperationController construct(Args _args, SysOperationExecutionMode _sysOperationExecutionMode = SysOperationExecutionMode::Synchronous)
    {
        SysOperationController controller = new WhsCustomLabelPrintController(classstr(WhsCustomLabelPrintService),
            methodstr(WhsCustomLabelPrintService, printLabels),
            _sysOperationExecutionMode);
        controller.parmArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WhsCustomLabelPrintController controller = WhsCustomLabelPrintController::construct(_args);
        WhsCustomLabelPrintContract customLabelPrintContract = controller.getDataContractObject();

        if (!_args.record())
        {
            throw Error(Error::missingRecord(funcName()));
        }

        if (!_args.parm())
        {
            throw Error(Error::wrongUseOfFunction(funcName()));
        }
        
        Common argsRecord = _args.record();

        if (WhsCustomLabelsPrintUnsupportedFlight::instance().isEnabled() && !argsRecord.RecId)
        {
            throw Error("@WAX:WhsCustomLabelsPrintUnsupported");
        }

        List rootDataSourceRecIds = new List(Types::Int64);

        FormDataSource recordDataSource = FormDataUtil::getFormDataSource(argsRecord);
        if (recordDataSource)
        {
            MultiSelectionHelper selection = MultiSelectionHelper::construct();
            selection.parmDatasource(recordDataSource);
                
            for (Common selectedRecord = selection.getFirst(); selectedRecord.RecId; selectedRecord = selection.getNext())
            {
                rootDataSourceRecIds.addEnd(selectedRecord.RecId);
            }
        }
        else
        {
            rootDataSourceRecIds.addEnd(argsRecord.RecId);
        }

        WHSLabelLayoutDataSourceId labelLayoutDataSourceIdFromSysLastValue = customLabelPrintContract.parmLabelLayoutDataSourceId();
        customLabelPrintContract.parmLabelLayoutDataSourceId(_args.parm());

        if (labelLayoutDataSourceIdFromSysLastValue != customLabelPrintContract.parmLabelLayoutDataSourceId())
        {
            customLabelPrintContract.parmCustomLabelLayout('');
        }
                
        customLabelPrintContract.parmRootDataSourceRecIds(rootDataSourceRecIds);

        controller.startOperation();        
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected IdentifierName lastValueDesignName()
    {
        return this.parmArgs().parm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>