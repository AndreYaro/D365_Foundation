<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlLedgerJournalBudgetSourcePopulator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetControlLedgerJournalBudgetSourcePopulator</c> is responsible for populating ledger journal budget source data.
/// </summary>
internal final class BudgetControlLedgerJournalBudgetSourcePopulator implements BudgetControlIBudgetSourcePopulator
{
    private LedgerJournalId journalNum;
    private RecId legalEntity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static BudgetControlLedgerJournalBudgetSourcePopulator construct(
        LedgerJournalId _journalNum,
        RecId _legalEntity)
    {
        BudgetControlLedgerJournalBudgetSourcePopulator populator = new BudgetControlLedgerJournalBudgetSourcePopulator();
        populator.journalNum = _journalNum;
        populator.legalEntity = _legalEntity;

        return populator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateBudgetSources</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public BudgetSourceTmp populateBudgetSources()
    {
        BudgetSourceTmp budgetSources;
        BudgetSource budgetSource;

        ttsbegin;

        insert_recordset budgetSources (BudgetSourceRecId)
            select RecId from budgetSource
                where budgetSource.BudgetSourceType == BudgetSourceType::LedgerJournalEntry
                    && budgetSource.BudgetTransactionLine == 0
                    && budgetSource.SourceDocumentLine == 0
                    && budgetSource.LedgerEntryGeneralJournalEntry == 0
                    && budgetSource.LedgerEntryJournalNumber == journalNum
                    && budgetSource.LedgerEntryJournalLegalEntity == legalEntity;

        ttscommit;

        return budgetSources;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>