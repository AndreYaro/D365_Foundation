<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalEngine_PayrollDisbursement</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerJournalEngine_PayrolLDisbursement</c> class supports payroll disbursement journals.
/// </summary>
/// <remarks>
///    This class is an extension of <see cref="T:LedgerJournalEngine" />.
/// </remarks>
final class LedgerJournalEngine_PayrollDisbursement extends LedgerJournalEngine_Payment
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines the <c>DebCredProposal</c> value for the selected account number on the
    ///     supplied <c>LedgerJournalTrans</c> buffer.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    ///     A supplied <c>LedgerJournalTrans</c> buffer.
    /// </param>
    /// <param name="_ledgerJournalTrans_Project">
    ///     A supplied <c>LedgerJournalTrans_Project</c> buffer; optional.
    /// </param>
    /// <param name="_ledgerJournalTrans_Asset">
    ///     A supplied <c>LedgerJournalTrans_Asset</c> buffer; optional.
    /// </param>
    /// <param name="_tax1099Detail">
    ///     A supplied <c>Tax1099BoxDetail</c> buffer; optional.
    /// </param>
    /// <param name="_ledgerJournalTrans_RAsset">
    ///     A supplied <c>LedgerJournalTrans_RAsset</c> buffer; optional.
    /// </param>
    /// <param name="_ledgerJournalTrans_RDeferrals">
    ///     A supplied <c>LedgerJournalTrans_RDeferrals</c> buffer; optional.
    /// </param>
    /// <returns>
    ///     A <c>DebCredProposal</c> enumeration value.
    /// </returns>
    /// <remarks>
    ///     This method is overridden to supply specific functionality for the payroll disbursements processing
    /// </remarks>
    public DebCredProposal accountModified(LedgerJournalTrans _ledgerJournalTrans,
                                            LedgerJournalTrans_Project _ledgerJournalTrans_Project = null,
                                            LedgerJournalTrans_Asset _ledgerJournalTrans_Asset = null,
                                            Tax1099BoxDetail _tax1099Detail = null,
                                            LedgerJournalTrans_RAsset   _ledgerJournalTrans_RAsset = null,
                                            LedgerJournalTrans_RDeferrals _ledgerJournalTrans_RDeferrals = null
                                            )
    {
        DebCredProposal debCredProposal = super(_ledgerJournalTrans);

        if (_ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
        {
            debCredProposal = DebCredProposal::Debit;
        }

        if (ledgerJournalTrans_ds)
        {
            ledgerJournalTrans_ds.refresh();
        }

        return debCredProposal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useHistoricalRemittanceAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the remittance address stored on the table should be used or the current date
    ///    effective value of the address should be used for the current ledger journal transaction type.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    ///    A <c>LedgerJournalTrans</c> record.
    /// </param>
    /// <returns>
    ///    true when the remittance address record ID in the table should be used; false when the current date
    ///    effective should be used.
    /// </returns>
    /// <remarks>
    ///    This method is called from the display remittance address on this class.
    /// </remarks>
    public boolean useHistoricalRemittanceAddress(LedgerJournalTrans _ledgerJournalTrans)
    {
        //Payment has been made.
        return (_ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Sent || _ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Confirmed);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>