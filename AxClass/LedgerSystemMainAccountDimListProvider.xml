<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerSystemMainAccountDimListProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerSystemMainAccountDimListProvider</c> class serves as a main account dimension list
/// provider for ledger system accounts.
/// </summary>
[
SourceDocumentEnumExtensionAttribute(enumStr(MainAccountDimensionListProviderType), MainAccountDimensionListProviderType::Rounding)
]
class LedgerSystemMainAccountDimListProvider extends MainAccountDimensionListProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the main account ledger dimension list provider values.
    /// </summary>
    protected void initValues()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateMainAccountDimensionList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the main account dimension list.
    /// </summary>
    protected void populateMainAccountDimensionList()
    {
        LedgerDimensionDefaultAccount   ledgerDimensionDefaultAccount;
        container                       cacheResult;

        cacheResult = LedgerCache::getValue(LedgerCacheScope::LedgerSystemMainAccountDimListProvider, [curext(), accountingRule.parmLedgerPostingType()]);

        if (cacheResult == conNull())
        {
            ledgerDimensionDefaultAccount = LedgerSystemAccounts::getDefaultAccount(accountingRule.parmLedgerPostingType());
            LedgerCache::insertValue(LedgerCacheScope::LedgerSystemMainAccountDimListProvider, [accountingRule.parmLedgerPostingType()], [ledgerDimensionDefaultAccount]);
        }
        else
        {
            [ledgerDimensionDefaultAccount] = cacheResult;
        }

        if (ledgerDimensionDefaultAccount)
        {
            this.addToMainAccDimensionList(ledgerDimensionDefaultAccount);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>