<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmWorkerBankAccountEventHandler_AppSuite</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles events for the <c>HcmWorkerBankAccount</c> table.
/// </summary>
public final class HcmWorkerBankAccountEventHandler_AppSuite
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>HcmWorkerBankAccount_onValidatedField</Name>
				<Source><![CDATA[
    [DataEventHandler(tableStr(HcmWorkerBankAccount), DataEventType::ValidatedField)]
    public static void HcmWorkerBankAccount_onValidatedField(Common _sender, DataEventArgs _e)
    {
        ValidateFieldEventArgs validateFieldEventArgs = _e as ValidateFieldEventArgs;
        HcmWorkerBankAccount workerBankAccount = _sender as HcmWorkerBankAccount;

        boolean isValid = ValidateFieldEventArgs.parmValidateResult();

        if (isValid)
        {
            switch (validateFieldEventArgs.parmFieldId())
            {
                case fieldNum(HcmWorkerBankAccount, BankIBAN):
                    isValid = Bank::checkBankIBAN(workerBankAccount.BankIBAN, workerBankAccount.AccountId);
                    break;
            }

            validateFieldEventArgs.parmValidateResult(isValid);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmWorkerBankAccount_onValidatedWrite</Name>
				<Source><![CDATA[
    [DataEventHandler(tableStr(HcmWorkerBankAccount), DataEventType::ValidatedWrite)]
    public static void HcmWorkerBankAccount_onValidatedWrite(Common _sender, DataEventArgs _e)
    {
        ValidateEventArgs validateEventArgs = _e as ValidateEventArgs;
        HcmWorkerBankAccount workerBankAccount = _sender as HcmWorkerBankAccount;

        boolean isValid = ValidateEventArgs.parmValidateResult();

        if (isValid)
        {
            if (workerBankAccount.AccountNum)
            {
                Bank bank = Bank::construct(SysCountryRegionCode::locationCountryInfo(workerBankAccount.Location));
                isValid = isValid && bank.checkBankAccountNum(workerBankAccount.AccountNum);
            }

            if (workerBankAccount.BankIBAN)
            {
                isValid = isValid && Bank::checkBankIBAN(workerBankAccount.BankIBAN, workerBankAccount.AccountId);
            }

            validateEventArgs.parmValidateResult(isValid);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>