<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailBusinessPartnerAddressContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContract]
internal class RetailBusinessPartnerAddressContract
{
    private Email email;
    private Phone phone;
    private int addressTypeValue;
    private str attentionTo;
    private LogisticsAddressBuildingCompliment buildingCompliment;
    private AddressCity city;
    private AddressCountyId county;
    private str countyName;
    private boolean deactivate;
    private RefRecId directoryPartyLocationRecordId;
    private RefRecId directoryPartyLocationRoleRecordId;
    private RefRecId directoryPartyTableRecordId;
    private LogisticsAddressDistrictName districtName;
    private str emailContent;
    private str emailLogisticsLocationId;
    private RefRecId emailLogisticsLocationRecordId;
    private RefRecId emailRecordId;
    private RefRecId expireRecordId;
    private str fullAddress;
    private boolean isAsyncAddress;
    private boolean isPrimary;
    private boolean isPrivate;
    private RefRecId logisticsLocationExtRecordId;
    private str logisticsLocationId;
    private RefRecId logisticsLocationRecordId;
    private RefRecId logisticsLocationRoleRecordId;
    private str name;
    private str partyNumber;
    private str phoneExt;
    private str phoneLogisticsLocationId;
    private RefRecId phoneLogisticsLocationRecordId;
    private RefRecId phoneRecordId;
    private str postbox;
    private RefRecId recordId;
    private int roleCount;
    private int sortOrder;
    private AddressStateId state;
    private str stateName;
    private AddressStreet street;
    private LogisticsAddressStreetNumber streetNumber;
    private TaxGroup taxGroup;
    private str threeLetterISORegionName;
    private str twoLetterISORegionName;
    private URL url;
    private str urlLogisticsLocationId;
    private RefRecId urlLogisticsLocationRecordId;
    private RefRecId urlRecordId;
    private AddressZipCodeId zipCode;
    private List extensionProperties = new List(Types::Class);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmEmail</Name>
				<Source><![CDATA[
    /// <summary>
    /// E-mail.
    /// </summary>
    /// <param name="_email">
    ///     The new value of the datacontract parameter <c>Email</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>Email</c>.
    /// </returns>
    [DataMember('Email')]
    public Email parmEmail(str _email = email)
    {
        email = _email;
        return email;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Phone number.
    /// </summary>
    /// <param name="_phone">
    ///     The new value of the datacontract parameter <c>Phone</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>Phone</c>.
    /// </returns>
    [DataMember('Phone')]
    public smmPhone parmPhone(str _phone = phone)
    {
        phone = _phone;
        return phone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressTypeValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Address type value.
    /// </summary>
    /// <param name="_addressTypeValue/">
    ///     The new value of the datacontract parameter <c>AddressTypeValue</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>AddressTypeValue</c>.
    /// </returns>
    [DataMember('AddressTypeValue')]
    public int parmAddressTypeValue(int _addressTypeValue = addressTypeValue)
    {
        addressTypeValue = _addressTypeValue;
        return addressTypeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAttentionTo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Attention to.
    /// </summary>
    /// <param name="_attentionTo/">
    ///     The new value of the datacontract parameter <c>AttentionTo</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>AttentionTo</c>.
    /// </returns>
    [DataMember('AttentionTo')]
    public str parmAttentionTo(str _attentionTo = attentionTo)
    {
        attentionTo = _attentionTo;
        return attentionTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuildingCompliment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Building compliment.
    /// </summary>
    /// <param name="_buildingCompliment/">
    ///     The new value of the datacontract parameter <c>BuildingCompliment</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>BuildingCompliment</c>.
    /// </returns>
    [DataMember('BuildingCompliment')]
    public LogisticsAddressBuildingCompliment parmBuildingCompliment(LogisticsAddressBuildingCompliment _buildingCompliment = buildingCompliment)
    {
        buildingCompliment = _buildingCompliment;
        return buildingCompliment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCity</Name>
				<Source><![CDATA[
    /// <summary>
    /// City.
    /// </summary>
    /// <param name="_city/">
    ///     The new value of the datacontract parameter <c>City</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>City</c>.
    /// </returns>
    [DataMember('City')]
    public AddressCity parmCity(AddressCity _city = city)
    {
        city = _city;
        return city;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCounty</Name>
				<Source><![CDATA[
    /// <summary>
    /// County.
    /// </summary>
    /// <param name="_county/">
    ///     The new value of the datacontract parameter <c>County</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>County</c>.
    /// </returns>
    [DataMember('County')]
    public AddressCountyId parmCounty(AddressCountyId _county = county)
    {
        county = _county;
        return county;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// County name.
    /// </summary>
    /// <param name="_countyName/">
    ///     The new value of the datacontract parameter <c>CountyName</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>CountyName</c>.
    /// </returns>
    [DataMember('CountyName')]
    public str parmCountyName(str _countyName = countyName)
    {
        countyName = _countyName;
        return countyName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeactivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deactivate.
    /// </summary>
    /// <param name="_deactivate/">
    ///     The new value of the datacontract parameter <c>Deactivate</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>Deactivate</c>.
    /// </returns>
    [DataMember('Deactivate')]
    public boolean parmDeactivate(boolean _deactivate = deactivate)
    {
        deactivate = _deactivate;
        return deactivate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDirectoryPartyLocationRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Directory party location record id.
    /// </summary>
    /// <param name="_directoryPartyLocationRecordId/">
    ///     The new value of the datacontract parameter <c>DirectoryPartyLocationRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>DirectoryPartyLocationRecordId</c>.
    /// </returns>
    [DataMember('DirectoryPartyLocationRecordId')]
    public RefRecId parmDirectoryPartyLocationRecordId(RefRecId _directoryPartyLocationRecordId = directoryPartyLocationRecordId)
    {
        directoryPartyLocationRecordId = _directoryPartyLocationRecordId;
        return directoryPartyLocationRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDirectoryPartyLocationRoleRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Directory party location role record id.
    /// </summary>
    /// <param name="_directoryPartyLocationRoleRecordId/">
    ///     The new value of the datacontract parameter <c>DirectoryPartyLocationRoleRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>DirectoryPartyLocationRoleRecordId</c>.
    /// </returns>
    [DataMember('DirectoryPartyLocationRoleRecordId')]
    public RefRecId parmDirectoryPartyLocationRoleRecordId(RefRecId _directoryPartyLocationRoleRecordId = directoryPartyLocationRoleRecordId)
    {
        directoryPartyLocationRoleRecordId = _directoryPartyLocationRoleRecordId;
        return directoryPartyLocationRoleRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDirectoryPartyTableRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Directory party table record id.
    /// </summary>
    /// <param name="_directoryPartyTableRecordId/">
    ///     The new value of the datacontract parameter <c>DirectoryPartyTableRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>DirectoryPartyTableRecordId</c>.
    /// </returns>
    [DataMember('DirectoryPartyTableRecordId')]
    public RefRecId parmDirectoryPartyTableRecordId(RefRecId _directoryPartyTableRecordId = directoryPartyTableRecordId)
    {
        directoryPartyTableRecordId = _directoryPartyTableRecordId;
        return directoryPartyTableRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDistrictName</Name>
				<Source><![CDATA[
    /// <summary>
    /// District name.
    /// </summary>
    /// <param name="_districtName/">
    ///     The new value of the datacontract parameter <c>DistrictName</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>DistrictName</c>.
    /// </returns>
    [DataMember('DistrictName')]
    public LogisticsAddressDistrictName parmDistrictName(LogisticsAddressDistrictName _districtName = districtName)
    {
        districtName = _districtName;
        return districtName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailContent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Email content.
    /// </summary>
    /// <param name="_emailContent/">
    ///     The new value of the datacontract parameter <c>EmailContent</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>EmailContent</c>.
    /// </returns>
    [DataMember('EmailContent')]
    public str parmEmailContent(str _emailContent = emailContent)
    {
        emailContent = _emailContent;
        return emailContent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailLogisticsLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Email logistics location id.
    /// </summary>
    /// <param name="_emailLogisticsLocationId/">
    ///     The new value of the datacontract parameter <c>EmailLogisticsLocationId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>EmailLogisticsLocationId</c>.
    /// </returns>
    [DataMember('EmailLogisticsLocationId')]
    public str parmEmailLogisticsLocationId(str _emailLogisticsLocationId = emailLogisticsLocationId)
    {
        emailLogisticsLocationId = _emailLogisticsLocationId;
        return emailLogisticsLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailLogisticsLocationRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Email logistics location record id.
    /// </summary>
    /// <param name="_emailLogisticsLocationRecordId/">
    ///     The new value of the datacontract parameter <c>EmailLogisticsLocationRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>EmailLogisticsLocationRecordId</c>.
    /// </returns>
    [DataMember('EmailLogisticsLocationRecordId')]
    public RefRecId parmEmailLogisticsLocationRecordId(RefRecId _emailLogisticsLocationRecordId = emailLogisticsLocationRecordId)
    {
        emailLogisticsLocationRecordId = _emailLogisticsLocationRecordId;
        return emailLogisticsLocationRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Email record id.
    /// </summary>
    /// <param name="_emailRecordId/">
    ///     The new value of the datacontract parameter <c>EmailRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>EmailRecordId</c>.
    /// </returns>
    [DataMember('EmailRecordId')]
    public RefRecId parmEmailRecordId(RefRecId _emailRecordId = emailRecordId)
    {
        emailRecordId = _emailRecordId;
        return emailRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExpireRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Expire record id.
    /// </summary>
    /// <param name="_expireRecordId/">
    ///     The new value of the datacontract parameter <c>ExpireRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>ExpireRecordId</c>.
    /// </returns>
    [DataMember('ExpireRecordId')]
    public RefRecId parmExpireRecordId(RefRecId _expireRecordId = expireRecordId)
    {
        expireRecordId = _expireRecordId;
        return expireRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFullAdderess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Full address.
    /// </summary>
    /// <param name="_fullAddress/">
    ///     The new value of the datacontract parameter <c>FullAddress</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>FullAddress</c>.
    /// </returns>
    [DataMember('FullAddress')]
    public str parmFullAdderess(str _fullAddress = fullAddress)
    {
        fullAddress = _fullAddress;
        return fullAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsAsyncAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is async address.
    /// </summary>
    /// <param name="_isAsyncAddress/">
    ///     The new value of the datacontract parameter <c>IsAsyncAddress</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>IsAsyncAddress</c>.
    /// </returns>
    [DataMember('IsAsyncAddress')]
    public boolean parmIsAsyncAddress(boolean _isAsyncAddress = isAsyncAddress)
    {
        isAsyncAddress = _isAsyncAddress;
        return isAsyncAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrimary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is primary.
    /// </summary>
    /// <param name="_isPrimary/">
    ///     The new value of the datacontract parameter <c>IsPrimary</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>IsPrimary</c>.
    /// </returns>
    [DataMember('IsPrimary')]
    public boolean parmIsPrimary(boolean _isPrimary = isPrimary)
    {
        isPrimary = _isPrimary;
        return isPrimary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is private.
    /// </summary>
    /// <param name="_isPrivate/">
    ///     The new value of the datacontract parameter <c>IsPrivate</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>IsPrivate</c>.
    /// </returns>
    [DataMember('IsPrivate')]
    public boolean parmIsPrivate(boolean _isPrivate = isPrivate)
    {
        isPrivate = _isPrivate;
        return isPrivate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLogisticsLocationExtRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logistics location ext record id.
    /// </summary>
    /// <param name="_logisticsLocationExtRecordId/">
    ///     The new value of the datacontract parameter <c>LogisticsLocationExtRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>LogisticsLocationExtRecordId</c>.
    /// </returns>
    [DataMember('LogisticsLocationExtRecordId')]
    public RefRecId parmLogisticsLocationExtRecordId(RefRecId _logisticsLocationExtRecordId = logisticsLocationExtRecordId)
    {
        logisticsLocationExtRecordId = _logisticsLocationExtRecordId;
        return logisticsLocationExtRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLogisticsLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logistics location id.
    /// </summary>
    /// <param name="_logisticsLocationId/">
    ///     The new value of the datacontract parameter <c>LogisticsLocationId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>LogisticsLocationId</c>.
    /// </returns>
    [DataMember('LogisticsLocationId')]
    public str parmLogisticsLocationId(str _logisticsLocationId = logisticsLocationId)
    {
        logisticsLocationId = _logisticsLocationId;
        return logisticsLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLogisticsLocationRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logistics location record id.
    /// </summary>
    /// <param name="_logisticsLocationRecordId/">
    ///     The new value of the datacontract parameter <c>LogisticsLocationRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>LogisticsLocationRecordId</c>.
    /// </returns>
    [DataMember('LogisticsLocationRecordId')]
    public RefRecId parmLogisticsLocationRecordId(RefRecId _logisticsLocationRecordId = logisticsLocationRecordId)
    {
        logisticsLocationRecordId = _logisticsLocationRecordId;
        return logisticsLocationRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLogisticsLocationRoleRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logistics location role record id.
    /// </summary>
    /// <param name="_logisticsLocationRoleRecordId/">
    ///     The new value of the datacontract parameter <c>LogisticsLocationRoleRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>LogisticsLocationRoleRecordId</c>.
    /// </returns>
    [DataMember('LogisticsLocationRoleRecordId')]
    public RefRecId parmLogisticsLocationRoleRecordId(RefRecId _logisticsLocationRoleRecordId = logisticsLocationRoleRecordId)
    {
        logisticsLocationRoleRecordId = _logisticsLocationRoleRecordId;
        return logisticsLocationRoleRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Name.
    /// </summary>
    /// <param name="_name/">
    ///     The new value of the datacontract parameter <c>Name</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>Name</c>.
    /// </returns>
    [DataMember('Name')]
    public str parmName(str _name = name)
    {
        name = _name;
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPartyNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Party number.
    /// </summary>
    /// <param name="_partyNumber/">
    ///     The new value of the datacontract parameter <c>PartyNumber</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>PartyNumber</c>.
    /// </returns>
    [DataMember('PartyNumber')]
    public str parmPartyNumber(str _partyNumber = partyNumber)
    {
        partyNumber = _partyNumber;
        return partyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhoneExt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Phone ext.
    /// </summary>
    /// <param name="_phoneExt/">
    ///     The new value of the datacontract parameter <c>PhoneExt</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>PhoneExt</c>.
    /// </returns>
    [DataMember('PhoneExt')]
    public str parmPhoneExt(str _phoneExt = phoneExt)
    {
        phoneExt = _phoneExt;
        return phoneExt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhoneLogisticsLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Phone logistics location id.
    /// </summary>
    /// <param name="_phoneLogisticsLocationId/">
    ///     The new value of the datacontract parameter <c>PhoneLogisticsLocationId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>PhoneLogisticsLocationId</c>.
    /// </returns>
    [DataMember('PhoneLogisticsLocationId')]
    public str parmPhoneLogisticsLocationId(str _phoneLogisticsLocationId = phoneLogisticsLocationId)
    {
        phoneLogisticsLocationId = _phoneLogisticsLocationId;
        return phoneLogisticsLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhoneLogisticsLocationRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Phone logistics location record id.
    /// </summary>
    /// <param name="_phoneLogisticsLocationRecordId/">
    ///     The new value of the datacontract parameter <c>PhoneLogisticsLocationRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>PhoneLogisticsLocationRecordId</c>.
    /// </returns>
    [DataMember('PhoneLogisticsLocationRecordId')]
    public RefRecId parmPhoneLogisticsLocationRecordId(RefRecId _phoneLogisticsLocationRecordId = phoneLogisticsLocationRecordId)
    {
        phoneLogisticsLocationRecordId = _phoneLogisticsLocationRecordId;
        return phoneLogisticsLocationRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhoneRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Phone record id.
    /// </summary>
    /// <param name="_phoneRecordId/">
    ///     The new value of the datacontract parameter <c>PhoneRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>PhoneRecordId</c>.
    /// </returns>
    [DataMember('PhoneRecordId')]
    public RefRecId parmPhoneRecordId(RefRecId _phoneRecordId = phoneRecordId)
    {
        phoneRecordId = _phoneRecordId;
        return phoneRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostbox</Name>
				<Source><![CDATA[
    /// <summary>
    /// Postbox.
    /// </summary>
    /// <param name="_postbox/">
    ///     The new value of the datacontract parameter <c>Postbox</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>Postbox</c>.
    /// </returns>
    [DataMember('Postbox')]
    public str parmPostbox(str _postbox = postbox)
    {
        postbox = _postbox;
        return postbox;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record id.
    /// </summary>
    /// <param name="_recordId/">
    ///     The new value of the datacontract parameter <c>RecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>RecordId</c>.
    /// </returns>
    [DataMember('RecordId')]
    public RefRecId parmRecordId(RefRecId _recordId = recordId)
    {
        recordId = _recordId;
        return recordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRoleCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Role count.
    /// </summary>
    /// <param name="_roleCount/">
    ///     The new value of the datacontract parameter <c>RoleCount</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>RoleCount</c>.
    /// </returns>
    [DataMember('RoleCount')]
    public int parmRoleCount(int _roleCount = roleCount)
    {
        roleCount = _roleCount;
        return roleCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSortOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sort order.
    /// </summary>
    /// <param name="_sortOrder/">
    ///     The new value of the datacontract parameter <c>SortOrder</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>SortOrder</c>.
    /// </returns>
    [DataMember('SortOrder')]
    public int parmSortOrder(int _sortOrder = sortOrder)
    {
        sortOrder = _sortOrder;
        return sortOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmState</Name>
				<Source><![CDATA[
    /// <summary>
    /// State.
    /// </summary>
    /// <param name="_state/">
    ///     The new value of the datacontract parameter <c>State</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>State</c>.
    /// </returns>
    [DataMember('State')]
    public AddressStateId parmState(AddressStateId _state = state)
    {
        state = _state;
        return state;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStateName</Name>
				<Source><![CDATA[
    /// <summary>
    /// State name.
    /// </summary>
    /// <param name="_stateName/">
    ///     The new value of the datacontract parameter <c>StateName</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>StateName</c>.
    /// </returns>
    [DataMember('StateName')]
    public str parmStateName(str _stateName = stateName)
    {
        stateName = _stateName;
        return stateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStreet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Street.
    /// </summary>
    /// <param name="_street/">
    ///     The new value of the datacontract parameter <c>Street</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>Street</c>.
    /// </returns>
    [DataMember('Street')]
    public AddressStreet parmStreet(AddressStreet _street = street)
    {
        street = _street;
        return street;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStreetNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Street number.
    /// </summary>
    /// <param name="_streetNumber/">
    ///     The new value of the datacontract parameter <c>StreetNumber</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>StreetNumber</c>.
    /// </returns>
    [DataMember('StreetNumber')]
    public LogisticsAddressStreetNumber parmStreetNumber(LogisticsAddressStreetNumber _streetNumber = streetNumber)
    {
        streetNumber = _streetNumber;
        return streetNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Tax group.
    /// </summary>
    /// <param name="_taxGroup/">
    ///     The new value of the datacontract parameter <c>TaxGroup</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>TaxGroup</c>.
    /// </returns>
    [DataMember('TaxGroup')]
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = taxGroup)
    {
        taxGroup = _taxGroup;
        return taxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmThreeLetterISORegionName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Three letter iso region name.
    /// </summary>
    /// <param name="_threeLetterISORegionName/">
    ///     The new value of the datacontract parameter <c>ThreeLetterISORegionName</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>ThreeLetterISORegionName</c>.
    /// </returns>
    [DataMember('ThreeLetterISORegionName')]
    public str parmThreeLetterISORegionName(str _threeLetterISORegionName = threeLetterISORegionName)
    {
        threeLetterISORegionName = _threeLetterISORegionName;
        return threeLetterISORegionName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTwoLetterISORegionName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Two letter iso region name.
    /// </summary>
    /// <param name="_twoLetterISORegionName/">
    ///     The new value of the datacontract parameter <c>TwoLetterISORegionName</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>TwoLetterISORegionName</c>.
    /// </returns>
    [DataMember('TwoLetterISORegionName')]
    public str parmTwoLetterISORegionName(str _twoLetterISORegionName = twoLetterISORegionName)
    {
        twoLetterISORegionName = _twoLetterISORegionName;
        return twoLetterISORegionName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Url.
    /// </summary>
    /// <param name="_url/">
    ///     The new value of the datacontract parameter <c>Url</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>Url</c>.
    /// </returns>
    [DataMember('Url')]
    public URL parmUrl(URL _url = url)
    {
        url = _url;
        return url;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUrlLogisticsLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Url logistics location id.
    /// </summary>
    /// <param name="_urlLogisticsLocationId/">
    ///     The new value of the datacontract parameter <c>UrlLogisticsLocationId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>UrlLogisticsLocationId</c>.
    /// </returns>
    [DataMember('UrlLogisticsLocationId')]
    public str parmUrlLogisticsLocationId(str _urlLogisticsLocationId = urlLogisticsLocationId)
    {
        urlLogisticsLocationId = _urlLogisticsLocationId;
        return urlLogisticsLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUrlLogisticsLocationRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Url logistics location record id.
    /// </summary>
    /// <param name="_urlLogisticsLocationRecordId/">
    ///     The new value of the datacontract parameter <c>UrlLogisticsLocationRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>UrlLogisticsLocationRecordId</c>.
    /// </returns>
    [DataMember('UrlLogisticsLocationRecordId')]
    public RefRecId parmUrlLogisticsLocationRecordId(RefRecId _urlLogisticsLocationRecordId = urlLogisticsLocationRecordId)
    {
        urlLogisticsLocationRecordId = _urlLogisticsLocationRecordId;
        return urlLogisticsLocationRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUrlRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Url record id.
    /// </summary>
    /// <param name="_urlRecordId/">
    ///     The new value of the datacontract parameter <c>UrlRecordId</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>UrlRecordId</c>.
    /// </returns>
    [DataMember('UrlRecordId')]
    public RefRecId parmUrlRecordId(RefRecId _urlRecordId = urlRecordId)
    {
        urlRecordId = _urlRecordId;
        return urlRecordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZipCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Zip code.
    /// </summary>
    /// <param name="_zipCode/">
    ///     The new value of the datacontract parameter <c>ZipCode</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>ZipCode</c>.
    /// </returns>
    [DataMember('ZipCode')]
    public AddressZipCodeId parmZipCode(AddressZipCodeId _zipCode = zipCode)
    {
        zipCode = _zipCode;
        return zipCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>extensionProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extension Properties.
    /// </summary>
    /// <param name="_extensionProperties">
    ///     The new value of the datacontract parameter <c>Extension Properties</c>; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter <c>Extension Properties</c>.
    /// </returns>
    [
        DataMember("ExtensionProperties"),
        DataCollection(Types::Class, classStr(RetailBusinessPartnerExtensionPropertyContract))
    ]
    public List extensionProperties(List _extensionProperties = extensionProperties)
    {
        extensionProperties = _extensionProperties;
        return extensionProperties;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>