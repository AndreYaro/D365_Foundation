<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoiceMatchedBusinessEvent</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  Vendor invoice matched business event.
/// </summary>
[BusinessEvents(classStr(VendorInvoiceMatchedBusinessEventContract), 'AccountsPayable:VendorInvoiceMatchedBusinessEventName', 'AccountsPayable:VendorInvoiceMatchedBusinessEventDescription', ModuleAxapta::Vendor)]
public final class VendorInvoiceMatchedBusinessEvent extends BusinessEventsBase
{
    private VendInvoiceInfoTable vendInvoiceInfoTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmVendInvoiceInfoTable</Name>
				<Source><![CDATA[
    private VendInvoiceInfoTable parmVendInvoiceInfoTable(VendInvoiceInfoTable _vendInvoiceInfoTable = vendInvoiceInfoTable)
    {
        vendInvoiceInfoTable = _vendInvoiceInfoTable;

        return vendInvoiceInfoTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromVendInvoiceInfoTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>VendorInvoiceMatchedBusinessEvent</c> from a <c>VendInvoiceInfoTable</c> record.
    /// </summary>
    /// <param name = "_vendInvoiceInfoTable"> A <c>VendInvoiceInfoTable</c> record.</param>
    /// <returns>A <c>VendorInvoiceMatchedBusinessEvent</c>.</returns>
    public static VendorInvoiceMatchedBusinessEvent newFromVendInvoiceInfoTable(VendInvoiceInfoTable _vendInvoiceInfoTable) 
    {
        VendorInvoiceMatchedBusinessEvent businessEvent = new VendorInvoiceMatchedBusinessEvent();
        businessEvent.parmVendInvoiceInfoTable(_vendInvoiceInfoTable);

        return businessEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildContract</Name>
				<Source><![CDATA[
    [Wrappable(true), Replaceable(true)]
    public BusinessEventsContract buildContract()
    {
        return VendorInvoiceMatchedBusinessEventContract::newFromVendInvoiceInfoTable(vendInvoiceInfoTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContextRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the record context for this event.
    /// </summary>
    /// <returns>The <c>VendInvoiceInfoTable</c> buffer for the record context for this event.</returns>
    public Common getContextRecord()
    {
        return this.parmVendInvoiceInfoTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>