<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTrackingShippedSalesReportContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Data Contract class for <c>InventTrackingShippedSalesReport</c> SSRS report
/// </summary>
/// <remarks>
///     This is the Data Contract class for the <c>InventTrackingShippedSalesReport</c> SSRS Report.
/// </remarks>
#define.ItemIdDisplayOrder('1')

#define.PeriodGroup('PeriodGroup')
#define.PeriodGroupDisplayOrder('2')
#define.FromDateDisplayOrder('1')
#define.ToDateDisplayOrder('2')

#define.ProductDimGroup('ProductDimGroup')
#define.ProductDimGroupDisplayOrder('3')

#define.TrackingDimGroup('TrackingDimGroup')
#define.TrackingDimGroupDisplayOrder('4')
#define.PdsVendBatchIdDisplayOrder('6') // TrackingDimGroup may have up to 5 members

#define.StorageDimGroup('StorageDimGroup')
#define.StorageDimGroupDisplayOrder('5')

[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(InventTrackingShippedSalesReportUIBuildr), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly),
    SysOperationGroupAttribute(#PeriodGroup, "@SYS177361", #PeriodGroupDisplayOrder),

    // From InventDimContract
    SysOperationGroupAttribute(#ProductDimGroup, "@SYS70071", #ProductDimGroupDisplayOrder),
    SysOperationGroupAttribute(#TrackingDimGroup, "@SYS317445", #TrackingDimGroupDisplayOrder),
    SysOperationGroupAttribute(#StorageDimGroup, "@SYS108783", #StorageDimGroupDisplayOrder)
]
public class InventTrackingShippedSalesReportContract
{
    ItemId                  itemId;
    InventDimContract       inventDimContract;
    FromDate                fromDate;
    ToDate                  toDate;
    PdsVendBatchId          pdsVendBatchId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    ///     The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter FromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationDisplayOrderAttribute(#FromDateDisplayOrder),
        SysOperationGroupMemberAttribute(#PeriodGroup)
    ]
    public FromDate parmFromDate(FromDate _fromDate = dateNull())
    {
        if (!prmisDefault(_fromDate))
        {
            fromDate = _fromDate;
        }

        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimContract</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute(classStr(InventDimContract))
    ]
    public InventDimContract parmInventDimContract(InventDimContract _inventDimContract = null)
    {
        if (!prmisDefault(_inventDimContract))
        {
            inventDimContract = _inventDimContract;
        }

        return inventDimContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('ItemId'),
        SysOperationDisplayOrderAttribute(#ItemIdDisplayOrder)
    ]
    public ItemId parmItemId(ItemId _itemId = '')
    {
        if (!prmisDefault(_itemId))
        {
            itemId = _itemId;
        }

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsVendBatchId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the datacontract parameter pdsVendBatchId.
    /// </summary>
    /// <param name="_pdsVendBatchId">
    ///     The new value of the datacontract parameter pdsVendBatchId; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter pdsVendBatchId.
    /// </returns>
    [
        DataMemberAttribute('PdsVendBatchId'),
        SysOperationDisplayOrderAttribute(#PdsVendBatchIdDisplayOrder),
        SysOperationGroupMemberAttribute(#TrackingDimGroup)
    ]
    public PdsVendBatchId parmPdsVendBatchId(PdsVendBatchId _pdsVendBatchId = '')
    {
        if (!prmisDefault(_pdsVendBatchId))
        {
            pdsVendBatchId = _pdsVendBatchId;
        }

        return pdsVendBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    ///     The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationDisplayOrderAttribute(#ToDateDisplayOrder),
        SysOperationGroupMemberAttribute(#PeriodGroup)
    ]
    public ToDate parmToDate(ToDate _toDate = dateNull())
    {
        if (!prmisDefault(_toDate))
        {
            toDate = _toDate;
        }

        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs an <c>InventTrackingShippedSalesReportContract</c> object.
    /// </summary>
    /// <returns>
    ///     An <c>InventTrackingShippedSalesReportContract</c> object.
    /// </returns>
    public static InventTrackingShippedSalesReportContract construct()
    {
        return new InventTrackingShippedSalesReportContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>