<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerRecordGeneralJournalAccountEntryRelatedSummarizeUpdateQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SubledgerRecordGeneralJournalAccountEntryRelatedSummarizeUpdateQuery</c> class creates queries related to the
/// <c>SubledgerJournalTransferCommand</c>.
/// </summary>
public final class SubledgerRecordGeneralJournalAccountEntryRelatedSummarizeUpdateQuery
{
    private SubledgerJournalAccountEntry subledgerJournalAccountEntry;
    private GeneralJournalAccountEntry generalJournalAccountEntry;
    private GeneralJournalEntry generalJournalEntry;
    private SubLedgerJournalAccountEntryView subLedgerJournalAccountEntryView;
    private RefRecId transferIdVal;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates records for individual transfer policy into the <c>SubledgerJournalAccountEntry</c> table.
    /// </summary>
    /// <param name = "_transferIdVal">
    /// The reference transfer Id.
    /// </param>
    static internal void update(
        RefRecId _transferIdVal)
    {
        var subledgerRecordGeneralJournalAccountEntryRelatedSummarizeUpdateQuery = new SubledgerRecordGeneralJournalAccountEntryRelatedSummarizeUpdateQuery();
          
        subledgerRecordGeneralJournalAccountEntryRelatedSummarizeUpdateQuery.initialize(
            _transferIdVal);
        
        var subledgerJournalAccountEntryTmpDetailUpdateObject = subledgerRecordGeneralJournalAccountEntryRelatedSummarizeUpdateQuery.getsubledgerJournalAccountEntryUpdateObject();
        var subledgerJournalEntryQueryObject = subledgerRecordGeneralJournalAccountEntryRelatedSummarizeUpdateQuery.getSubLedgerJournalAccountEntryQueryObject();

        subledgerJournalAccountEntryTmpDetailUpdateObject.joinClause(SysDaJoinKind::InnerJoin, subledgerJournalEntryQueryObject);

        new SysDaUpdateStatement().update(subledgerJournalAccountEntryTmpDetailUpdateObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(
        RefRecId _transferIdVal)
    {
        transferIdVal = _transferIdVal;

        generalJournalAccountEntry.skipDataMethods(true);
        subledgerJournalAccountEntry.skipDataMethods(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getsubledgerJournalAccountEntryUpdateObject</Name>
				<Source><![CDATA[
    private SysDaUpdateObject getsubledgerJournalAccountEntryUpdateObject()
    {
        var subledgerJournalAccountEntryUpdateObject = new SysDaUpdateObject(subledgerJournalAccountEntry);
        subledgerJournalAccountEntryUpdateObject = this.addSubledgerJournalAccountEntryFieldsToUpdateSetting(subledgerJournalAccountEntryUpdateObject);

        return subledgerJournalAccountEntryUpdateObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSubledgerJournalAccountEntryFieldsToUpdateSetting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>SubledgerJournalAccountEntry</c> fields setting for update object.
    /// </summary>
    /// <param name = "_subledgerJournalAccountEntryUpdateObject">SysDaUpdateObject that will be used for update</param>
    /// <returns>The passed in query update object with the setting field added.</returns>
    protected SysDaUpdateObject addSubledgerJournalAccountEntryFieldsToUpdateSetting(SysDaUpdateObject _subledgerJournalAccountEntryUpdateObject)
    {
        _subledgerJournalAccountEntryUpdateObject.settingClause()
           .add(fieldStr(SubledgerJournalAccountEntry, GeneralJournalAccountEntry),
             new SysDaFieldExpression(generalJournalAccountEntry, fieldStr(GeneralJournalAccountEntry, RecId)));

        return _subledgerJournalAccountEntryUpdateObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSubLedgerJournalAccountEntryQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject getSubLedgerJournalAccountEntryQueryObject()
    {
        var subLedgerJournalAccountEntryViewQueryObject = new SysDaQueryObject(subLedgerJournalAccountEntryView);
        subLedgerJournalAccountEntryViewQueryObject = this.addSubLedgerJournalAccountEntryViewFieldsToQueryObjectWhereClause(subLedgerJournalAccountEntryViewQueryObject);
        
        var generalJournalEntryQueryObject = new SysDaQueryObject(generalJournalEntry);
        generalJournalEntryQueryObject = this.addGeneralJournalEntryFieldsToQueryObjectWhereClause(generalJournalEntryQueryObject);

        var generalJournalAccountEntryQueryObject = new SysDaQueryObject(generalJournalAccountEntry);
        generalJournalAccountEntryQueryObject = this.addGeneralJournalAccountEntryFieldsToQueryObjectWhereClause(generalJournalAccountEntryQueryObject);

        generalJournalEntryQueryObject.joinClause(SysDaJoinKind::InnerJoin, generalJournalAccountEntryQueryObject);

        subLedgerJournalAccountEntryViewQueryObject.joinClause(SysDaJoinKind::InnerJoin, generalJournalEntryQueryObject);

        return subLedgerJournalAccountEntryViewQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSubLedgerJournalAccountEntryViewFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>SubLedgerJournalAccountEntryView</c> fields to the projection of a query object.
    /// </summary>
    /// <param name = "_subLedgerJournalAccountEntryViewQueryObject">The query object to add the fields to.</param>
    /// <returns>The passed in query object with selection range.</returns>
    protected SysDaQueryObject addSubLedgerJournalAccountEntryViewFieldsToQueryObjectWhereClause(SysDaQueryObject _subLedgerJournalAccountEntryViewQueryObject)
    {
        _subLedgerJournalAccountEntryViewQueryObject.whereClause(new SysDaAndExpression(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, SubLedgerJournalAccountEntry)),
                new SysDaFieldExpression(subledgerJournalAccountEntry, fieldStr(SubledgerJournalAccountEntry, RecId))),
            new SysDaEqualsExpression(
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, TransferId)),
                new SysDaValueExpression(transferIdVal))));

        return _subLedgerJournalAccountEntryViewQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addGeneralJournalEntryFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>GeneralJournalEntry</c> fields to the projection of a query object.
    /// </summary>
    /// <param name = "_generalJournalEntryQueryObject">The query object to add the fields to.</param>
    /// <returns>The passed in query object with selection range.</returns>
    protected SysDaQueryObject addGeneralJournalEntryFieldsToQueryObjectWhereClause(SysDaQueryObject _generalJournalEntryQueryObject)
    {        
        _generalJournalEntryQueryObject.whereClause(new SysDaAndExpression(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, PostingLayer)),
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, PostingLayer))),
            new SysDaEqualsExpression(
                new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, AccountingDate)),
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, AccountingDate)))
        .and(new SysDaAndExpression(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, Ledger)),
                new SysDaFieldExpression(subLedgerJournalAccountEntryView, fieldStr(SubLedgerJournalAccountEntryView, Ledger))),
            new SysDaEqualsExpression(
                new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, TransferId)),
                new SysDaValueExpression(transferIdVal))))));

        return _generalJournalEntryQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addGeneralJournalAccountEntryFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>GeneralJournalAccountEntry</c> fields to the projection of a query object.
    /// </summary>
    /// <param name = "_generalJournalAccountEntryQueryObject">The query object to add the fields to.</param>
    /// <returns>The passed in query object with selection range.</returns>
    protected SysDaQueryObject addGeneralJournalAccountEntryFieldsToQueryObjectWhereClause(SysDaQueryObject _generalJournalAccountEntryQueryObject)
    {
        _generalJournalAccountEntryQueryObject.whereClause(new SysDaAndExpression(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(generalJournalAccountEntry, fieldStr(GeneralJournalAccountEntry, GeneralJournalEntry)),
                    new SysDaFieldExpression(generalJournalEntry, fieldStr(GeneralJournalEntry, RecId))),
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(generalJournalAccountEntry, fieldStr(GeneralJournalAccountEntry, LedgerDimension)),
                    new SysDaFieldExpression(subledgerJournalAccountEntry, fieldStr(SubledgerJournalAccountEntry, LedgerDimension)))
            .and(new SysDaAndExpression(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(generalJournalAccountEntry, fieldStr(GeneralJournalAccountEntry, TransactionCurrencyCode)),
                    new SysDaFieldExpression(subledgerJournalAccountEntry, fieldStr(SubledgerJournalAccountEntry, TransactionCurrency))),
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(generalJournalAccountEntry, fieldStr(GeneralJournalAccountEntry, IsCorrection)),
                    new SysDaFieldExpression(subledgerJournalAccountEntry, fieldStr(SubledgerJournalAccountEntry, IsCorrection)))))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(subledgerJournalAccountEntry, fieldStr(SubledgerJournalAccountEntry, IsTransferredInDetail)),
                    new SysDaValueExpression(TransferPolicy::Summarize)))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(subledgerJournalAccountEntry, fieldStr(SubledgerJournalAccountEntry, GeneralJournalAccountEntry)),
                    new SysDaValueExpression(0)))
            .and(new SysDaAndExpression(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(generalJournalAccountEntry, fieldStr(GeneralJournalAccountEntry, PostingType)),
                    new SysDaFieldExpression(subledgerJournalAccountEntry, fieldStr(SubledgerJournalAccountEntry, PostingType))),
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(generalJournalAccountEntry, fieldStr(GeneralJournalAccountEntry, FinTag)),
                    new SysDaFieldExpression(subledgerJournalAccountEntry, fieldStr(SubledgerJournalAccountEntry, FinTag)))))
            ));

        return _generalJournalAccountEntryQueryObject;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>