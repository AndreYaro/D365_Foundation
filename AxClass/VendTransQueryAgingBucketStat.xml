<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTransQueryAgingBucketStat</Name>
	<SourceCode>
		<Declaration><![CDATA[
[CustVendTransQueryBuildFactoryAttribute(CustVendTransQueryType::VendAgingBucketStat)]
class VendTransQueryAgingBucketStat extends CustVendTransQueryBuild
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the base query that is used to determine the vendor aging statistics.
    /// </summary>
    /// <returns>
    ///     The packed <c>Query</c> object.
    /// </returns>
    public container buildQuery()
    {
        query = new Query();
        query.addDataSource(tablenum(VendTrans));

        query.dataSourceNo(1).addRange(fieldnum(VendTrans, AccountNum)).value(accountNum);
        this.addRangeBasedOnTransactionDueDate();
        query.dataSourceNo(1).addRange(fieldnum(VendTrans, Closed)).value(SysQuery::valueEmptyString());

        return query.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRangeBasedOnTransactionDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Add ranges in query based on transaction due date.
    /// </summary>
    [Wrappable(true)]
    protected final void addRangeBasedOnTransactionDueDate()
    {
        switch (typeOfDate)
        {
            case DateTransactionDuedate::TransactionDate :
                query.dataSourceNo(1).addRange(fieldnum(VendTrans, TransDate)).value(queryRange(fromDate, toDate));
                break;

            case DateTransactionDuedate::DocumentDate :
                this.addRangeBasedOnTransactionDocumentDate();
                break;

            case DateTransactionDuedate::DueDate :
                query.dataSourceNo(1).addRange(fieldnum(VendTrans, DueDate)).value(queryRange(fromDate, toDate));
                break;

            default :
                query.dataSourceNo(1).addRange(fieldnum(VendTrans, TransDate)).value(queryRange(fromDate, toDate));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRangeBasedOnTransactionDocumentDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Add ranges in query based on transaction document date.
    /// </summary>
    private void addRangeBasedOnTransactionDocumentDate()
    {
        str dateNull = date2StrXpp(dateNull());
        QueryBuildRange qbr = query.dataSourceNo(1).addRange(fieldnum(VendTrans, RecId));

        date sqlFromDate = fromDate ? fromDate : dateNull();
        date sqlToDate = toDate ? toDate : maxdate();

        str documentDate = fieldStr(VendTrans, DocumentDate);
        str transDate = fieldStr(VendTrans, TransDate);

        Range range = '((' + documentDate + ' >= ' + this.dateToSqlStr(sqlFromDate) + ') &&';
        range += '(' + documentDate + ' <= ' + this.dateToSqlStr(sqlToDate) + ')) ||';
        range += '((' + documentDate + ' = ' + dateNull + ') &&';
        range += '(' + transDate + ' >= ' + this.dateToSqlStr(sqlFromDate) + ') && ';
        range += '(' + transDate + ' <= ' + this.dateToSqlStr(sqlToDate) + '))';
        
        qbr.value(range);
        qbr.status(RangeStatus::Hidden);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>