<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayTblExistingsJournalFilter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Fileters times for not-existing journals, base on setup in <c>RPayTblParameters</c>
/// </summary>
public class RPayTblExistingsJournalFilter implements RPayTblIFilter
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the timesheet journal is valid.
    /// </summary>
    /// <param name="_time">
    /// The
    /// </param>
    /// <param name="_context">
    /// The time.
    /// </param>
    /// <returns>
    /// The time context.
    /// </returns>
    public boolean isValid(RPayTblTime _time, RPayTblContext _context)
    {
        RPayTblJournal journal;

        if (_time.dimension().parmOrganizationId() != _context.initialDimension().parmOrganizationId()
        || _time.dimension().parmPayFormType() != _context.initialDimension().parmPayFormType())
        {
            journal = RPayTblJournal::findByIndex(_time.dimension().parmOrganizationId(), max(_time.dimension().parmSourceDate(), RPayParameters::payPeriod(_context.parmEmpId())), _time.dimension().parmPayFormType());
            return journal || RPayTblParameters::find().AutoCreateJournal;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>