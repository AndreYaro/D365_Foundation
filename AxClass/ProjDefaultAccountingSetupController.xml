<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjDefaultAccountingSetupController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller of project default accounting setup.
/// </summary>
internal class ProjDefaultAccountingSetupController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public static void main(Args _args)
    {
        FormRun caller = _args.caller();

        ProjDefaultAccountingSetupController::updateFormDesign(caller);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFormDesign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates button of project default accounting setup and the part form visibility.
    /// </summary>
    /// <param name = "_formRun">The <c>FormRun</c> instance of caller.</param>
    [Hookable(false), Wrappable(false)]
    public static void updateFormDesign(FormRun _formRun)
    {
        const str partFormName = '__Generated_FormPart_ProjContractLines';
        if (_formRun)
        {
            FormFunctionButtonControl showAccountingControl = _formRun.design().controlName(menuItemActionStr(ProjDefaultAccountingSetupController));
            boolean isHideAccoutingSetup = showAccountingControl.caption() == "@Proj:HideDefaultAccounting";
            PartList partList = new PartList(_formRun);
            for (int partCount = 1; partCount <= partList.partCount(); partCount++)
            {
                FormPartReferenceControl partControl = partList.getPartControlById(partCount);
                if (partControl)
                {
                    if (partControl.getPartFormRun() is IProjDefaultAccountingSetupFormRun)
                    {
                        if (partControl.name() == partFormName && ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled())
                        {
                            partControl.formCaption("@Proj:ContractLines");
                        }
                        partControl.visible(!isHideAccoutingSetup);
                        if (!isHideAccoutingSetup)
                        {
                            partControl.Expand(true);
                        }
                    }
                    else
                    {
                        partControl.visible(isHideAccoutingSetup);
                    }
                }
            }

            if (isHideAccoutingSetup)
            {
                showAccountingControl.caption("@Proj:ShowDefaultAccounting");
            }
            else
            {
                showAccountingControl.caption("@Proj:HideDefaultAccounting");
                _formRun.expandFactBoxPaneAtStart();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>