<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReturnDetailCleanUpService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSReturnDetailCleanUpService</c> class is used to clean up <c>WHSReturnDetail</c> records.
/// </summary>
internal final class WHSReturnDetailCleanUpService extends SysOperationServiceBase
{
    private NumberOfRecords cleanupCounter;
    private NumberOfRecords maxDeleteRecordsCount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void execute(WHSReturnDetailCleanUpContract _contract)
    {
        if (!WHSReturnDetailsFlight::instance().isEnabled())
        {
            info(strFmt("@SYS113135", cleanupCounter));
            return;
        }

        utcdatetime beforeDateTime = DateTimeUtil::addDays(DateTimeUtil::utcNow(), - _contract.parmDaysToKeep());
        maxDeleteRecordsCount = _contract.parmMaxDeleteRecords();

        using (var committer = WHSRecordDeletionCommitter::construct())
        {
            WHSReturnDetail returnDetail;

            while select forupdate returnDetail
                where returnDetail.ShipUTCDateTime < beforeDateTime
                && returnDetail.ShipUTCDateTime != DateTimeUtil::minValue() // Don't delete return details that were not shipped.
            {
                cleanupCounter++;
                committer.deleteRecord(returnDetail);

                if (cleanupCounter >= maxDeleteRecordsCount)
                {
                    break;
                }
            }
        }

        info(strFmt("@SYS113135", cleanupCounter));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>