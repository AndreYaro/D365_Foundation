<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSSpecificInventAvailability</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSSpecificInventAvailability</c> class provides warehouse specific on-hand values.
/// </summary>
public final class WHSSpecificInventAvailability
{
    private InventQtyAvailPhysical  availPhysicalLevel;
    private PDSCWInventQty          cwAvailPhysicalLevel;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>availPhysicalLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the available physical quantity on the hierarchy level the request was made on.
    /// </summary>
    /// <returns>Available physical quantity on the level or 0 if the value has no meaning in current context.</returns>
    public InventQtyAvailPhysical availPhysicalLevel()
    {
        return availPhysicalLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cwAvailPhysicalLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the available physical catch weight quantity on the hierarchy level the request was made on.
    /// </summary>
    /// <returns>Available catch weight physical quantity on the level or 0 if the value has no meaning in current context.</returns>
    [Hookable(false)]
    public InventQtyAvailPhysical cwAvailPhysicalLevel()
    {
        return cwAvailPhysicalLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuantities</Name>
				<Source><![CDATA[
    private void initializeQuantities(WhsInventReserveQty _inventReserveQty)
    {
        availPhysicalLevel  = _inventReserveQty.availPhysicalLevel();
        cwAvailPhysicalLevel = _inventReserveQty.pdsCWAvailPhysicalLevel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromAvailability</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new instance of the <c>WHSSpecificInventAvailability</c> class from the given availability.
    /// </summary>
    /// <param name = "_availability">The availability provider.</param>
    /// <returns>Initialized instance.</returns>
    public static WHSSpecificInventAvailability newFromAvailability(
        InventIAvailability _availability)
    {
        WHSSpecificInventAvailability ret;

        var inventReserveQty = _availability as WhsInventReserveQty;
        if (inventReserveQty)
        {
            ret = new WHSSpecificInventAvailability();
            ret.initializeQuantities(inventReserveQty);
        }
        else
        {
            ret = WHSSpecificInventAvailability::zero();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>zero</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new instance of the <c>WHSSpecificInventAvailability</c> class with all values set to 0.
    /// </summary>
    /// <returns>Initialized instance.</returns>
    public static WHSSpecificInventAvailability zero()
    {
        return new WHSSpecificInventAvailability();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>