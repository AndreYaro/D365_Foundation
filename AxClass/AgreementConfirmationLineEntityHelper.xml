<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementConfirmationLineEntityHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  The <c>AgreementConfirmationLineEntityHelper</c> class is used to created query ranges for agreement confirmation data entities.
/// </summary>
public class AgreementConfirmationLineEntityHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assignLinesToHeadersByDateEffectiveness_SalesAgreementConfirmation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a query range to filter only confirmation of sales agreement lines 
    /// that are date effective at the time sales agreement confirmation header is created
    /// </summary>
    /// <returns>String representing the range</returns>
    /// <remarks>
    /// AgreementLineHistory.ValidFrom < SalesAgreementHeaderHistory.CreatedDateTime < AgreementLineHistory.ValidTo
    /// </remarks>
    [QueryRangeFunction]
    public static str assignLinesToHeadersByDateEffectiveness_SalesAgreementConfirmation()
    {
        return AgreementConfirmationLineEntityHelper::assignLinesToHeaderByDateEffectiveness(tableStr(SalesAgreementHeaderHistory), fieldStr(SalesAgreementHeaderHistory, CreatedDateTime));
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLinesToHeadersByDateEffectiveness_PurchaseAgreementConfirmation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a query range to filter only confirmation of purchase agreement lines
    /// that are date effective at the time purchase agreement confirmation header is created
    /// </summary>
    /// <returns>String representing the range</returns>
    /// <remarks>
    /// AgreementLineHistory.ValidFrom < PurchAgreementHeaderHistory.CreatedDateTime < AgreementLineHistory.ValidTo
    /// </remarks>
    [QueryRangeFunction]
    public static str assignLinesToHeadersByDateEffectiveness_PurchaseAgreementConfirmation()
    {
        return AgreementConfirmationLineEntityHelper::assignLinesToHeaderByDateEffectiveness(tableStr(PurchAgreementHeaderHistory), fieldStr(PurchAgreementHeaderHistory, CreatedDateTime));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getViewSQLTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table name used in the SQL view definition.
    /// </summary>
    /// <param name = "_field">A computed column definition from which to get the table name.</param>
    /// <returns>The table name used in the SQL view definition.</returns>
    /// <remarks>The SQL view definition will contain a string wit the value T1.FieldName. This API will return T1.</remarks>
    public static str getViewSQLTableName(str _field)
    {
        var periodPosition = strScan(_field, '.', 1, strlen(_field));
        
        return strDel(_field, periodPosition, strLen(_field));
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLinesToHeaderByDateEffectiveness</Name>
				<Source><![CDATA[
    private static str assignLinesToHeaderByDateEffectiveness(str _headerHistorytableName, str _headerHistoryCreatedDateTimeFieldName)
    {
        str resultRange = strFmt('((%1.%2 <= %3.%4) && (%3.%4 <= %1.%5))',
                                tableStr(AgreementLineHistory),
                                fieldStr(AgreementLineHistory, ValidFrom),
                                _headerHistorytableName,
                                _headerHistoryCreatedDateTimeFieldName,
                                fieldStr(AgreementLineHistory, ValidTo));
        return resultRange;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>