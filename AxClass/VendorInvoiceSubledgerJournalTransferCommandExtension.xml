<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoiceSubledgerJournalTransferCommandExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Vendor invoice extension for the <c>SubledgerJournalTransferCommand</c> class.
/// </summary>
[SourceDocumentExtensionAttribute()]
class VendorInvoiceSubledgerJournalTransferCommandExtension extends SubledgerJournalTransferCommandExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertedGeneralJournalAccountEntry</Name>
				<Source><![CDATA[
    public void insertedGeneralJournalAccountEntry(RefRecId _transferidVal, SourceDocument _sourceDocument, boolean _doSummarization)
    {
        SourceDocumentHeader sourceDocumentHeader;
        VendInvoiceInfoLine vendInvoiceInfoLine;
        RecId reasonRecId;
        GeneralJournalAccountEntry localGeneralJournalAccountEntry;
        SubLedgerJournalAccountEntryView subLedgerJournalAccountEntryView;
        SubledgerJournalAccountEntry subLedgerJournalAccountEntry;
        SubledgerJournalAccountEntryDistribution subledgerJournalAccountEntryDistribution;
        SubledgerJournalEntry subledgerJournalEntry;
        GeneralJournalEntry generalJournalEntry;
        
        sourceDocumentHeader = _sourceDocument.parmSourceDocumentHeader();

        if (!_doSummarization && 
            sourceDocumentHeader.TypeEnumName == enumStr(SourceDocument_VendorInvoice) && 
            sourceDocumentHeader.TypeEnumValue == SourceDocument_VendorInvoice::VendorInvoice)
        {            
            localGeneralJournalAccountEntry.skipDataMethods(true);
            localGeneralJournalAccountEntry.skipEvents(true);

            update_recordset localGeneralJournalAccountEntry
                    setting ReasonRef = vendInvoiceInfoLine.ReasonTableRef
            join generalJournalEntry
                where generalJournalEntry.TransferId == _transferidVal &&
                    generalJournalEntry.RecId == localGeneralJournalAccountEntry.GeneralJournalEntry
            join TransferId, RecId from subledgerJournalEntry
                where subLedgerJournalEntry.TransferId == _transferidVal
            join GeneralJournalAccountEntry, RecId, SubledgerJournalEntry from subLedgerJournalAccountEntry
                where subLedgerJournalAccountEntry.GeneralJournalAccountEntry == localGeneralJournalAccountEntry.RecId &&
                    subLedgerJournalAccountEntry.SubledgerJournalEntry == subledgerJournalEntry.RecId
            join SubledgerJournalAccountEntry, SourceDocumentLine from subledgerJournalAccountEntryDistribution
                where subledgerJournalAccountEntryDistribution.SubledgerJournalAccountEntry == subLedgerJournalAccountEntry.RecId
            join ReasonTableRef from vendInvoiceInfoLine
                where vendInvoiceInfoLine.SourceDocumentLine == subledgerJournalAccountEntryDistribution.SourceDocumentLine;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    protected void subscribe()
    {
        super();
        command.insertedGeneralJournalAccountEntry += eventhandler(this.insertedGeneralJournalAccountEntry);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>