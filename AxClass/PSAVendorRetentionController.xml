<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>PSAVendorRetentionController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>PSAVendorRetentionController</c> class is the controller class for the
/// <c>PSAVendorRetention</c> report.
/// </summary>
public class PSAVendorRetentionController extends SrsReportRunController implements BatchRetryable
{
    str                         vendor;
    str                         project;
    boolean                     timeMaterial;
    boolean                     fixedPrice;
    boolean                     investment;
    boolean                     costProject;
    boolean                     isInternal;
    Transdate                   fromDate, toDate;
    PSAVendorRetentionContract  contract;

    #define.ReportName          ('PSAVendorRetention.Report')

}
]]></Declaration>
    <Methods>
      <Method>
        <Name>preRunModifyContract</Name>
        <Source><![CDATA[
    protected void preRunModifyContract()
{
    Query query;

    query = this.getFirstQuery();
    contract = this.parmReportContract().parmRdpContract() as PSAVendorRetentionContract;

    timeMaterial = contract.parmTimeMaterial();
    fixedPrice   = contract.parmFixedPrice();
    investment   = contract.parmInvestment();
    costProject  = contract.parmCostProject();
    isInternal     = contract.parmInternal();
    vendor       = contract.parmVendAccount();
    project      = contract.parmProjId();
    fromDate     = contract.parmFromDate();
    toDate       = contract.parmToDate();

    this.setRanges(query,timeMaterial,fixedPrice,investment,costProject,isInternal,vendor,project,fromDate,toDate);
}

]]></Source>
      </Method>
      <Method>
        <Name>setRanges</Name>
        <Source><![CDATA[
    public void setRanges(Query          _queryContract,
                      boolean        _timeMaterial,
                      boolean        _fixedPrice,
                      boolean        _investment,
                      boolean        _costProject,
                      boolean        _internal,
                      VendAccount    _vendor,
                      ProjId         _project,
                      Transdate      _fromDate,
                      Transdate      _toDate)
{
    SRSReportHelper::addParameterValueRangeToQuery(
            _queryContract,
            tableNum(PurchTable),
            fieldNum(PurchTable,OrderAccount),
            _vendor);

    SRSReportHelper::addParameterValueRangeToQuery(
            _queryContract,
            tableNum(ProjTable),
            fieldNum(ProjTable,ProjId),
            _project);

    if (!ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled())
        {
            if (_timeMaterial)
            {
                SRSReportHelper::addParameterValueRangeToQuery(
                    _queryContract,
                    tableNum(ProjTable),
                    fieldNum(ProjTable,Type),
                    queryValue(ProjType::TimeMaterial));
            }

            if (_fixedPrice)
            {
                SRSReportHelper::addParameterValueRangeToQuery(
                    _queryContract,
                    tableNum(ProjTable),
                    fieldNum(ProjTable,Type),
                    queryValue(ProjType::FixedPrice));
            }

            if (_investment)
            {
                SRSReportHelper::addParameterValueRangeToQuery(
                    _queryContract,
                    tableNum(ProjTable),
                    fieldNum(ProjTable,Type),
                    queryValue(ProjType::Investment));
            }

            if (_costProject)
            {
                SRSReportHelper::addParameterValueRangeToQuery(
                    _queryContract,
                    tableNum(ProjTable),
                    fieldNum(ProjTable,Type),
                    queryValue(ProjType::Cost));
            }

            if (_internal)
            {
                SRSReportHelper::addParameterValueRangeToQuery(
                    _queryContract,
                    tableNum(ProjTable),
                    fieldNum(ProjTable,Type),
                    queryValue(ProjType::Internal));
            }
        }

    SRSReportHelper::addParameterValueRangeToQuery(
            _queryContract,
            tableNum(VendInvoiceTrans),
            fieldNum(VendInvoiceTrans, InvoiceDate),
            SysQuery::range(_fromDate, _toDate));

}

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
    public static void main(Args _args)
{
    PSAVendorRetentionController controller  = new PSAVendorRetentionController();

    controller.parmReportName(#ReportName);
    controller.parmArgs(_args);
    controller.startOperation();
}

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>