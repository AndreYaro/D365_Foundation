<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjControlCalcCPSalesBalance</Name>
	<SourceCode>
		<Declaration><![CDATA[
class   ProjControlCalcCPSalesBalance extends ProjControlCalc
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>capital</Name>
				<Source><![CDATA[
    AmountMST capital(
        ProjCostType    _costType)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCalculateHoursQtyCapitalized</Name>
				<Source><![CDATA[
    protected boolean checkCalculateHoursQtyCapitalized()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eliminationAmountTurnover</Name>
				<Source><![CDATA[
    protected AmountMST eliminationAmountTurnover(ProjControlPeriodTable _projControlPeriod)
    {
        AmountMST ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generalHoursQtyCapitalized</Name>
				<Source><![CDATA[
    protected ProjQtyEmpl generalHoursQtyCapitalized(
        ProjEstimateColumn              _estimateColumn
        )
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodUpdateColumnAccEstimateSecond</Name>
				<Source><![CDATA[
    void periodUpdateColumnAccEstimateSecond(
        ProjControlPeriodTable  _projControlPeriodTable)
    {
        if (this.parmCalledFromCode())
        {
            projControlPeriodTableColumnAccEstimate.plAccRevSalesValue      = projControlPeriodTableColumnAccEstimate.plAccRevSalesValue;
        }
        else
        {
            if (this.provisionForseeablesLosses(_projControlPeriodTable))
            {
                projControlPeriodTableColumnAccEstimate.plAccRevSalesValue      = -accGrossMarginTemp +
                                                                                   projControlPeriodTableColumnAccEstimate.ConsumTotalConsum;
                projControlPeriodTableColumnAccEstimate.wipSalesPriceSalesValue = projControlPeriodTableColumnAccEstimate.plAccRevSalesValue;
            }
            this.calcTotals(projControlPeriodTableColumnAccEstimate,ProjEstimateColumn::Accumulated);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodUpdateColumnEstimateSecond</Name>
				<Source><![CDATA[
    void periodUpdateColumnEstimateSecond(
        ProjControlPeriodTable  _projControlPeriodTable)
    {
        if (this.parmCalledFromCode())
        {
            projControlPeriodTableColumnEstimate.plAccRevSalesValue  = this.parmSalesValue();
        }
        else
        {
            if (this.provisionForseeablesLosses(_projControlPeriodTable))
            {
                projControlPeriodTableColumnEstimate.plAccRevSalesValue      = projControlPeriodTableColumnAccEstimate.plAccRevSalesValue-
                                                                               projControlColumnAccEstimatePrev.plAccRevSalesValue;
                projControlPeriodTableColumnEstimate.wipSalesPriceSalesValue = projControlPeriodTableColumnEstimate.plAccRevSalesValue;
            }
            this.calcTotals(projControlPeriodTableColumnEstimate,ProjEstimateColumn::Estimate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>plAccRevAccOnAcc</Name>
				<Source><![CDATA[
    AmountMST plAccRevAccOnAcc(
        ProjControlPeriodTable  _projControlPeriodTable,
        ProjEstimateColumn      _estimateColumn)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>plAccRevSalesValue</Name>
				<Source><![CDATA[
    AmountMST plAccRevSalesValue(
        ProjControlPeriodTable          _projControlPeriodTable,
        ProjEstimateColumn              _estimateColumn,
        ProjControlPeriodTableColumn    _projControlPeriodTableColumnAccEstimate = _projControlPeriodTableColumnAccEstimate)
    {
        ;
        switch (_estimateColumn)
        {
            case ProjEstimateColumn::Estimate:
                return _projControlPeriodTable.wipAccruedTurnover;
            case ProjEstimateColumn::Accumulated:
                return _projControlPeriodTable.wipAccruedTurnover+projControlColumnAccEstimatePrev.plAccRevSalesValue;
            case ProjEstimateColumn::Total:
                return _projControlPeriodTable.totalContract();
        }
        return _projControlPeriodTable.wipAccruedTurnover;
    }

]]></Source>
			</Method>
			<Method>
				<Name>plInvRevInvoiceOnAcc</Name>
				<Source><![CDATA[
    AmountMST plInvRevInvoiceOnAcc(
        ProjControlPeriodTable  _projControlPeriodTable,
        ProjEstimateColumn      _estimateColumn)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wipAccruedTurnover</Name>
				<Source><![CDATA[
    protected AmountMST wipAccruedTurnover(ProjControlPeriodTable _projControlPeriod)
    {
        return CurrencyExchangeHelper::amount(this.wipValue(_projControlPeriod) - this.wipAccruedTurnoverAcc(_projControlPeriod));
    }

]]></Source>
			</Method>
			<Method>
				<Name>wipAccruedTurnoverCredit</Name>
				<Source><![CDATA[
    public boolean wipAccruedTurnoverCredit(ProjControlPeriodTable _projControlPeriod)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wipAccruedTurnoverDebit</Name>
				<Source><![CDATA[
    public boolean wipAccruedTurnoverDebit(ProjControlPeriodTable _projControlPeriod)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wipAccruedTurnoverProd</Name>
				<Source><![CDATA[
    protected AmountMST wipAccruedTurnoverProd(ProjControlPeriodTable _projControlPeriod)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wipAccruedTurnoverProfit</Name>
				<Source><![CDATA[
    protected AmountMST wipAccruedTurnoverProfit(ProjControlPeriodTable _projControlPeriod)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wipCost</Name>
				<Source><![CDATA[
    protected AmountMST wipCost(ProjControlPeriodTable _projControlPeriod)
    {
        ProjTransPosting    projTransPosting;
        AmountMST           wipCost = 0;
        ProjRevRecContractLine revRecContractline;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            if(contractLineBasedRevRecFeature && ProjWIPTable::find(this.parmProjId()))
            {
                select sum(AmountMst) from projTransPosting
                where projTransPosting.ProjId       == this.parmProjId()
                   && projTransPosting.PostingType  == LedgerPostingType::ProjWIPCostvalue
                        exists join revRecContractline
                        where revRecContractline.RevenueRecognitionId == projTransPosting.ProjId;
            }
            else
            {
                select sum(AmountMst) from projTransPosting
                where projTransPosting.ProjId       == this.parmProjId()
                   && projTransPosting.PostingType  == LedgerPostingType::ProjWIPCostvalue;
            
            }
            wipCost = (_projControlPeriod.CompletePct/100) * projTransPosting.AmountMst;
        }

        return wipCost;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>