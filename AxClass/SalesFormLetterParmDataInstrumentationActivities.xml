<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesFormLetterParmDataInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesFormLetterParmDataInstrumentationActivities</c> class provides activity contexts to the form letter parm data instrumentation logging.
/// </summary>
internal final class SalesFormLetterParmDataInstrumentationActivities
{
    private const str ReArrange = 'ReArrange';
    private const str ReArrangeEnd = 'ReArrangeEnd';
    private const str UpdatePurchParmLineDropShip = 'UpdatePurchParmLineDropShip';
    private const str UpdatePurchLineDropShip = 'UpdatePurchLineDropShip';

    private const str ActivityPreFix = 'SalesFormLetter.';

    private FormLetterInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(FormLetterInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static SalesFormLetterParmDataInstrumentationActivities newFromLogger(FormLetterInstrumentationLogger _logger)
    {
        return new SalesFormLetterParmDataInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return logger.activityContext(_activityName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reArrange</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reArrange(SalesParmUpdate _salesParmUpdate)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityPreFix + ReArrange);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        activityContext
            .addCustomProperty('parmUpdateRecId', int642Str(_salesParmUpdate.RecId))
            .addCustomProperty('useSummaryUpdate', int2Str(_salesParmUpdate.SumBy != AccountOrder::None))
            .addCustomProperty('useCreditMax', int2Str(_salesParmUpdate.CheckCreditMax != TypeOfCreditmaxCheck::None));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reArrangeEnd</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reArrangeEnd()
    {
        return logger.activityContext(ActivityPreFix + ReArrangeEnd);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePurchLineDropShip</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updatePurchLineDropShip(PurchLine _purchLine)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityPreFix + UpdatePurchLineDropShip);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        activityContext.addCustomProperty(tableStr(PurchLine), any2Str(_purchLine.RecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePurchParmLineDropShip</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext updatePurchParmLineDropShip(PurchParmLine _purchParmLine)
    {
        SysInstrumentationActivity activity = logger.activity(ActivityPreFix + UpdatePurchParmLineDropShip);
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(activity);

        activityContext.addCustomProperty(tableStr(PurchParmLine), any2Str(_purchParmLine.RecId));

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>