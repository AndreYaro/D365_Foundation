<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCDXSeedDataSchedulerJob</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used to create jobs for retail scheduler.
/// </summary>
class RetailCDXSeedDataSchedulerJob
{
    RetailConnJobId jobID;
    str description;
    ClassName executionClass;
    ClassName translationClass;
    RetailCDXIsUpload isUpload;

    RefRecId channelSchema;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new job in <c>RetailConnSchedulerJobTable</c> table.
    /// </summary>
    public void createJob()
    {
        RetailConnSchedulerJobTable job;

        select forupdate firstonly job where job.JobId == jobID;

        if (job)
        {
            job.Description = description;
            job.RetailConnChannelSchema = channelSchema;
            job.IsUpload = isUpload;
            job.update();
        }
        else
        {
            job.initValue();
            job.JobId = jobID;
            job.Description = description;
            job.RetailConnChannelSchema = channelSchema;
            job.IsUpload = isUpload;
            job.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSchedule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates schedule for the job.
    /// </summary>
    public void createSchedule()
    {
        RetailConnSchedule schedule;
        RetailConnScheduleJobMapping jobMapping;
        Name fullSyncScheduleName = '9999';
        str jobSuffix;
        int suffixStartIndex;

        suffixStartIndex = strFind(jobId, '_', 1, strLen(jobId));

        if (suffixStartIndex > 0)
        {
            jobSuffix = subStr(jobId, suffixStartIndex, strLen(jobId) - suffixStartIndex + 1);
            fullSyncScheduleName = fullSyncScheduleName + jobSuffix;
        }

        // Schedule
        select firstonly schedule where schedule.Name == jobID;

        if (!schedule)
        {
            schedule.initValue();
            schedule.Name = jobID;
            schedule.Description = description;
            schedule.Active = NoYes::Yes;

            if (isUpload)
            {
                schedule.ScheduleType = RetailCDXDownloadUpload::Upload;
            }
            else
            {
                schedule.ScheduleType = RetailCDXDownloadUpload::Download;
            }

            schedule.insert();
        }

        // Job mapping
        select firstonly jobMapping where jobMapping.ScheduleRecId == schedule.RecId && jobMapping.SchedulerJobId == jobID;

        if (!jobMapping)
        {
            jobMapping.initValue();
            jobMapping.ScheduleRecId = schedule.RecId;
            jobMapping.SchedulerJobId = jobID;
            jobMapping.insert();
        }

        if (!isUpload)
        {
            // Append download job to to schedule "Full synchronize"
            select firstonly RecId from schedule where schedule.Name == fullSyncScheduleName;

            if (!schedule)
            {
                schedule.initValue();
                schedule.Name = fullSyncScheduleName;
                schedule.Description = "@REX4520659" + jobSuffix;
                schedule.ScheduleType = RetailCDXDownloadUpload::Download;
                schedule.Active = NoYes::Yes;
                schedule.insert();
            }

            select firstonly jobMapping where jobMapping.ScheduleRecId == schedule.RecId && jobMapping.SchedulerJobId == jobID;

            if (!jobMapping)
            {
                jobMapping.initValue();
                jobMapping.ScheduleRecId = schedule.RecId;
                jobMapping.SchedulerJobId = jobID;
                jobMapping.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramChannelSchema</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets value for the <c>RetailChannelSchema</c>.
    /// </summary>
    /// <param name="_channelSchema">
    /// The reference RecID of the <c>RetailChannelSchema</c>.
    /// </param>
    /// <returns>
    /// The reference record of <c>RetailChannelSchema</c>.
    /// </returns>
    public RefRecId paramChannelSchema(RefRecId _channelSchema)
    {
        channelSchema = _channelSchema;
        return channelSchema;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the description of the job.
    /// </summary>
    /// <param name="_description">
    /// The given value to be set to description of the job.
    /// </param>
    /// <returns>
    /// The description of the job.
    /// </returns>
    public str paramDescription(str _description)
    {
        description = _description;
        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramExecutionClass</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value for the execution class.
    /// </summary>
    /// <param name="_executionClass">
    /// The given class name for the execution.
    /// </param>
    /// <returns>
    /// The value set for execution class.
    /// </returns>
    public ClassName paramExecutionClass(ClassName _executionClass)
    {
        executionClass = _executionClass;
        return executionClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramIsUpload</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value if its an upload session.
    /// </summary>
    /// <param name="_isUpload">
    /// The value <c>RetailCDXIsUpload</c> optional.
    /// </param>
    /// <returns>
    /// If it is an upload session.
    /// </returns>
    public RetailCDXIsUpload paramIsUpload(RetailCDXIsUpload _isUpload = isUpload)
    {
        isUpload = _isUpload;
        return isUpload;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramJobID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the Job ID.
    /// </summary>
    /// <param name="_jobID">
    /// The given value for Job ID.
    /// </param>
    /// <returns>
    /// The value for Job ID.
    /// </returns>
    public RetailConnJobId paramJobID(RetailConnJobId _jobID)
    {
        jobID = _jobID;
        return jobID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paramTranslationClass</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value for translation class.
    /// </summary>
    /// <param name="_translationClass">
    /// The class to be set for translation.
    /// </param>
    /// <returns>
    /// The value of the translation class set.
    /// </returns>
    public ClassName paramTranslationClass(ClassName _translationClass)
    {
        translationClass = _translationClass;
        return translationClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiates the call for the methods <c>CreateJob</c> and <c>CreateSchedule</c>.
    /// </summary>
    public void run()
    {
        ttsbegin;

        this.createJob();
        this.createSchedule();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSchedulerJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the scheduler job.
    /// </summary>
    /// <param name="_jobID">
    /// Job id.
    /// </param>
    /// <param name="_description">
    /// Job description.
    /// </param>
    /// <param name="_channelSchema">
    /// Job channel schema.
    /// </param>
    /// <param name="_isUpload">
    /// If its an upload job.
    /// </param>
    public static void createSchedulerJob(RetailConnJobId _jobID, str _description,
        RefRecId _channelSchema, RetailCDXIsUpload _isUpload = NoYes::No)
    {
        RetailCDXSeedDataSchedulerJob jobCreation = new RetailCDXSeedDataSchedulerJob();
        ;

        jobCreation.paramJobID(_jobID);
        jobCreation.paramDescription(_description);
        jobCreation.paramChannelSchema(_channelSchema);
        jobCreation.paramIsUpload(_isUpload);
        jobCreation.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// The main method which initiates the call for the other methods.
    /// </summary>
    /// <param name="_jobID">
    /// The given value for the Job ID.
    /// </param>
    /// <param name="_description">
    /// The given value for description.
    /// </param>
    /// <param name="_executionClass">
    /// The given value for the execution class.
    /// </param>
    /// <param name="_translationClass">
    /// The given value for the translation class.
    /// </param>
    /// <param name="_channelSchema">
    /// The given value for channel schema.
    /// </param>
    /// <param name="_isUpload">
    /// The given value for upload flag to indicate if this job is for data uploading
    /// </param>
    public static void main(RetailConnJobId _jobID, str _description,
        ClassName _executionClass, ClassName _translationClass, RefRecId _channelSchema, RetailCDXIsUpload _isUpload = NoYes::No)
    {
        RetailCDXSeedDataSchedulerJob jobCreation = new RetailCDXSeedDataSchedulerJob();
        ;

        jobCreation.paramJobID(_jobID);
        jobCreation.paramDescription(_description);
        jobCreation.paramExecutionClass(_executionClass);
        jobCreation.paramTranslationClass(_translationClass);
        jobCreation.paramChannelSchema(_channelSchema);
        jobCreation.paramIsUpload(_isUpload);
        jobCreation.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>