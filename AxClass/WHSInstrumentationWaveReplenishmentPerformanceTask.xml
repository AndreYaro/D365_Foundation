<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInstrumentationWaveReplenishmentPerformanceTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInstrumentationWaveReplenishmentPerformanceTask</c> class contains methods for logging
/// telemetry related to replenishment work creation.
/// </summary>
internal final class WHSInstrumentationWaveReplenishmentPerformanceTask extends WHSInstrumentationPerformanceTask
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>logInventQtyMissingReplenLink</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes information event when calculating inventQty missing replen links in workCreateReplenishment.
    /// </summary>
    /// <param name = "_tmpWorkLine">The temporary demand work line.</param>
    /// <param name = "_inventQtyMissingReplenLink">The inventory quantity missing replenishment links.</param>
    public static void logInventQtyMissingReplenLink(WHSTmpWorkLine _tmpWorkLine, InventQty _inventQtyMissingReplenLink)
    {
        WHSInstrumentationLogger::createLogger(classStr(WHSInstrumentationWaveReplenishmentPerformanceTask)).logInformation(
            strFmt('Category: workCreateReplenishment, Action: calculateInventQtyMissingReplenLink, tmpWorkLineRecId: %1, tmpWorkLineHashedItemId: %2, tmpWorkLineHashedInventDimId: %3, tmpWorkLineInventQty: %4, tmpWorkLineAvailPhysical: %5, resultInventQtyMissingReplenLink: %6',
                _tmpWorkLine.RecId,
                TextBuffer::strHashKey(_tmpWorkLine.ItemId),
                TextBuffer::strHashKey(_tmpWorkLine.InventDimId),
                _tmpWorkLine.InventQty,
                _tmpWorkLine.AvailPhysical,
                _inventQtyMissingReplenLink));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logWaveFinalizeReplenishmentError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes information event wave finalize replenishment task errors out.
    /// </summary>
    /// <param name = "_message">The log message.</param>
    /// <param name = "_waveRecId">The wave record id.</param>
    /// <param name = "_waveExecutionId">The wave execution id.</param>
    /// <param name = "_releaseToWarehouseId">The release to warehouse id.</param>
    /// <param name = "_currentRunningWaveStepRecId">The current running wave step rec id.</param>
    public static void logWaveFinalizeReplenishmentError(
        str                     _message,
        RefRecId                _waveRecId,
        WHSWaveExecutionID      _waveExecutionId,
        WHSReleaseToWarehouseId _releaseToWarehouseId,
        WHSWaveStepRefRecId     _currentRunningWaveStepRecId)
    {
        WHSInstrumentationLogger::createLogger(classStr(WHSInstrumentationWaveReplenishmentPerformanceTask)).logInformation(
            strFmt('Category: waveFinalizeReplenishment, Error Message: %1, WaveRecId: %2, HashedWaveExecutionID: %3, ReleaseToWarehouseId: %4, WaveStepRefRecId: %5',
                _message,
                _waveRecId,
                TextBuffer::strHashKey(_waveExecutionId),
                _releaseToWarehouseId,
                int642str(_currentRunningWaveStepRecId)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>