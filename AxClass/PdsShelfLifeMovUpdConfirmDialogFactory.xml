<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsShelfLifeMovUpdConfirmDialogFactory</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Factory for the construction of implementing instances of the <c>PdsShelfLifeIMovUpdConfirmDialog</c> interface.
/// </summary>
public class PdsShelfLifeMovUpdConfirmDialogFactory
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGeneratePrompt</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets whether the constructed instance can display a prompt dialog on the client.
    /// </summary>
    /// <param name="_serverBound">
    ///     A boolean value indicating whether the context running is bound to the server.
    /// </param>
    /// <param name="_orderLineBuffer">
    ///     The buffer of the order line that is used.
    /// </param>
    /// <returns>
    ///     true if the constructed instance can generate a dialog; otherwise false.
    /// </returns>
    protected boolean canGeneratePrompt(
        boolean _serverBound,
        Common  _orderLineBuffer)
    {
        if (_serverBound)
        {
            return false;
        }
        else
        {
            return hasGUI();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createConfirmDialogFromLineAndField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance implementing the <c>PdsShelfLifeIMovUpdConfirmDialog</c> interface for the
    /// specified arguments.
    /// </summary>
    /// <param name="_orderLineBuffer">
    /// The buffer that represents the record being modified.
    /// </param>
    /// <param name="_fieldNumberChanged">
    /// The ID of the field being modified.
    /// </param>
    /// <param name="_isContextServerBound">
    /// A Boolean value that indicates whether the execution is bound to the server.
    /// </param>
    /// <returns>
    /// An implementing instance of the <c>PdsShelfLifeIMovUpdConfirmDialog</c> interface.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// Throws an exception if the specified buffer is not a record of the supported tables.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// Throws an exception if the specified field number is not a supported field.
    /// </exception>
    public PdsShelfLifeIMovUpdConfirmDialog createConfirmDialogFromLineAndField(
        Common  _orderLineBuffer,
        FieldId _fieldNumberChanged,
        boolean _isContextServerBound)
    {
        PdsShelfLifeIMovUpdConfirmDialog    createdInstance;
        SalesLine                           salesLine;
        InventTransferLine                  inventTransferLine;
        boolean                             hasAutoReservation;
        boolean                             canGeneratePrompt;

        switch (_orderLineBuffer.TableId)
        {
            case tableNum(SalesLine):
                if (_fieldNumberChanged
                    && (_fieldNumberChanged    != fieldNum(SalesLine, ReceiptDateConfirmed))
                    && (_fieldNumberChanged != fieldNum(SalesLine, ReceiptDateRequested)))
                {
                    throw error(error::wrongUseOfFunction(funcName()));
                }
                salesLine           = _orderLineBuffer as SalesLine;
                hasAutoReservation  = salesLine.Reservation == ItemReservation::Automatic;
                break;
            case tableNum(InventTransferLine):
                if (_fieldNumberChanged
                    && (_fieldNumberChanged    != fieldNum(InventTransferLine, ReceiveDate)))
                {
                    throw error(error::wrongUseOfFunction(funcName()));
                }
                inventTransferLine  = _orderLineBuffer as InventTransferLine;
                hasAutoReservation  = inventTransferLine.AutoReservation == NoYes::Yes;
                break;
            default:
                throw error(error::wrongUseOfFunction(funcName()));
        }

        canGeneratePrompt = this.canGeneratePrompt(_isContextServerBound, _orderLineBuffer);
        if (!canGeneratePrompt)
        {
            if (_orderLineBuffer.TableId == tableNum(InventTransferLine) && inventTransferLine.PdsOverrideFEFO == NoYes::Yes)
            {
                createdInstance = new PdsShelfLifeMovUpdConfirmDialogTransfer(hasAutoReservation, true);
            }
            else
            {
                createdInstance = new PdsShelfLifeMovUpdConfirmDialogNull(hasAutoReservation);

                if (salesLine.InventRefTransId && salesLine.Reservation != ItemReservation::Automatic && salesLine.DeliveryType == TradeLineDlvType::DropShip)
                {
                    createdInstance.parmIsRecordMarked(true);
                }
            }
        }
        else
        {
            switch (_orderLineBuffer.TableId)
            {
                case tableNum(SalesLine):
                    createdInstance     = new PdsShelfLifeMovUpdConfirmDialogSales(hasAutoReservation, _fieldNumberChanged);
                    break;
                case tableNum(InventTransferLine):
                    createdInstance     = new PdsShelfLifeMovUpdConfirmDialogTransfer(hasAutoReservation, inventTransferLine.PdsOverrideFEFO == NoYes::Yes);
                    break;
            }
        }
        return createdInstance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static PdsShelfLifeMovUpdConfirmDialogFactory construct()
    {
        return new PdsShelfLifeMovUpdConfirmDialogFactory();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>