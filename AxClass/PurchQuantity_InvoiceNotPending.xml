<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchQuantity_InvoiceNotPending</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchQuantity_InvoiceNotPending extends PurchQuantity_Invoice
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcPendingMatchedQtyInvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates a sum of <c>InventNow</c> quantity for invoice lines that are connected to a given
    ///    <c>PurchLine</c> table record, that are matched to a packing slip.
    /// </summary>
    /// <param name="purchLine">
    ///    The <c>PurchLine</c> table record to use for calculation.
    /// </param>
    /// <param name="_pendingOnly">
    ///    A Boolean value that determines whether only pending invoice lines are considered connected. True,
    ///    if only pending invoice lines are considered connected; otherwise, false; optional.
    /// </param>
    /// <returns>
    ///    The calculated <c>InventNow</c> quantity.
    /// </returns>
    protected InventQty calcPendingMatchedQtyInvent(PurchLine purchLine, boolean _pendingOnly = true)
    {
        return 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPendingMatchedQtyPurch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates a sum of <c>ReceiveNow</c> quantity for invoice lines connected to given
    ///    <c>PurchLine</c> table record, that are matched to a packing slip.
    /// </summary>
    /// <param name="purchLine">
    ///    The <c>PurchLine</c> table record to use for calculation.
    /// </param>
    /// <param name="_pendingOnly">
    ///    A Boolean value that determines whether only pending invoice lines are considered connected. True,
    ///    if only pending invoice lines are considered connected; otherwise, false; optional.
    /// </param>
    /// <returns>
    ///    The calculated <c>ReceiveNow</c> quantity.
    /// </returns>
    protected InventQty calcPendingMatchedQtyPurch(PurchLine purchLine, boolean _pendingOnly = true)
    {
        return 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPendingQtyInvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates an <c>InventNow</c> quantity for all pending invoice lines connected to given
    ///    <c>PurchLine</c> table record.
    /// </summary>
    /// <param name="purchLine">
    ///    The <c>PurchLine</c> table record to use for calculation.
    /// </param>
    /// <returns>
    ///    The calculated <c>InventNow</c> quantity.
    /// </returns>
    protected InventQty calcPendingQtyInvent(PurchLine purchLine)
    {
        return 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPendingQtyPurch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates a <c>ReceiveNow</c> quantity for all pending invoice lines connected to a given
    ///    <c>PurchLine</c> table record.
    /// </summary>
    /// <param name="purchLine">
    ///    The <c>PurchLine</c> table record to use for calculation.
    /// </param>
    /// <returns>
    ///    The calculated <c>ReceiveNow</c> quantity.
    /// </returns>
    protected InventQty calcPendingQtyPurch(PurchLine purchLine)
    {
        return 0.0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>