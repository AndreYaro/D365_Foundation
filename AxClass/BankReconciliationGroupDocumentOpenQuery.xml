<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankReconciliationGroupDocumentOpenQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BankReconciliationGroupDocumentOpenQuery extends BankReconciliationQuery
{
    private const TableId GroupDocumentOpenTableId = tableNum(BankReconciliationGroupDocumentOpenTmp);
    private QueryBuildDataSource groupDocumentQbds;
    private boolean firstBuild;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(BankReconciliationMatchRule _rule)
    {
        super(_rule, GroupDocumentOpenTableId);
        this.buildDocumentMatchRuleCache();
        firstBuild = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    public void buildQuery()
    {
        if (firstBuild)
        {
            this.initQuery();
            this.addFieldRanges(groupDocumentQbds, fieldNum(BankReconciliationGroupDocumentOpenTmp, IsMatched), GroupDocumentOpenTableId);

            super();
            firstBuild = false;
        }
        else
        {
            this.resetRanges();
            this.addFieldRanges(groupDocumentQbds, fieldNum(BankReconciliationGroupDocumentOpenTmp, IsMatched), GroupDocumentOpenTableId);
            groupDocumentQbds.clearRanges();
            this.applyRanges();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateFieldId</Name>
				<Source><![CDATA[
    internal protected FieldId generateFieldId(FieldId _origFieldId)
    {
        return BankReconciliationGroupDocumentOpenTmp::getFieldIdFromDocumentOpen(_origFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildDocumentMatchRuleCache</Name>
				<Source><![CDATA[
    private void buildDocumentMatchRuleCache()
    {
        matchRuleCache = new List(Types::Record);

        BankReconciliationMatchRuleLine matchRuleLine;
        BankReconciliationGroupRuleLine groupRuleLine;
        while select matchRuleLine
            exists join groupRuleLine
            where matchRuleLine.BankReconciliationMatchRule == rule.RecId
                && matchRuleLine.LineType == BankReconciliationMatchRuleLineType::Document
                && groupRuleLine.BankReconciliationGroupRule == rule.BankDocumentGroupRule
                && (groupRuleLine.FieldId == matchRuleLine.FieldId
                    || matchRuleLine.FieldId == fieldNum(BankReconciliationDocumentOpenTmp, BankCurrencyAmount))
        {
            matchRuleCache.addEnd(matchRuleLine.data());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    private void initQuery()
    {
        groupDocumentQbds = query.addDataSource(GroupDocumentOpenTableId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>