<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventModelTypeFactory</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventModelTypeFactory</c> class is the factory class for the <c>InventModelType</c> class
/// hierarchy.
/// </summary>
class InventModelTypeFactory
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventModelTypeFromInventModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of a subclass of the <c>InventModelType</c> class.
    /// </summary>
    /// <param name="_inventModel">
    /// Specifies the subclass that is to be created.
    /// </param>
    /// <returns>
    /// An instance of a subclass of the <c>InventModelType</c> class.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The value of the <paramref name="_inventModel" /> parameter does not specify a valid subclass.
    /// </exception>
    public InventModelType getInventModelTypeFromInventModel(InventModel  _inventModel)
    {
        switch (_inventModel)
        {
            case InventModel::FIFO              : return InventModelType_FIFO::construct();
            case InventModel::LIFO              : return InventModelType_LIFO::construct();
            case InventModel::LIFODate          : return InventModelType_LIFODate::construct();
            case InventModel::AverageCost       : return InventModelType_AverageCost::construct();
            case InventModel::AverageCostDate   : return InventModelType_AverageCostDate::construct();
            case InventModel::StdCost           : return InventModelType_StdCost::construct();
            case InventModel::MovingAverage     : return InventModelType_MovingAverage::construct();
            case InventModel::NonValuated       : return InventModelType_NonValuated::construct();
            // <GCN>
            case InventModel::MonthlyAverageCost: return InventModelType_MonthlyAverageCost_CN::construct();
            // </GCN>
        }

        throw error(strFmt("@SYS19378",funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventModelTypeFactory construct()
    {
        return new InventModelTypeFactory();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>