<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerBasicSysPolicySetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
/// </summary>
[SysSetupConfigKeyAttribute(configurationKeyStr(LedgerBasic))]
public class LedgerBasicSysPolicySetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadAuditPolicyData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads all default policy data for auditing.
    /// </summary>
    private static void loadAuditPolicyData()
    {
        NoYes isPolicyReadOnly = NoYes::No;
        NoYes isDropDialog = NoYes::No;
        NoYes isReassignOrganizationSupported = NoYes::Yes;

        SysPolicyType policyType = SysPolicySetup::addPolicyType(SysPolicyTypeEnum::AuditPolicy, HierarchyPurpose::AuditInternalControl,
            menuitemDisplayStr(AuditPolicyAdditionalOption), isPolicyReadOnly, isDropDialog, isReassignOrganizationSupported);

        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyExpenseHeader));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyExpenseLine));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyExpenseList));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyKeyword));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyPurchTable));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyPurchLine));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyPurchList));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyVendInvoiceHeader));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyVendInvoiceLine));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyVendInvoiceList));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyPurchTableHeaderLine));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(AuditPolicyVendInvoiceHeaderLine));
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadVendInvoicePolicyData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads all default policy data for vendor invoicing.
    /// </summary>
    private static void loadVendInvoicePolicyData()
    {
        SysPolicyType policyType = SysPolicySetup::addPolicyType(SysPolicyTypeEnum::VendInvoicesPolicy, HierarchyPurpose::InvoiceControl);

        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(VendInvoicePolicyHeader));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(VendInvoicePolicyLine));
        SysPolicySetup::addSourceDocumentQuery(policyType, queryStr(VendInvoicePolicyMiscCharge));
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads audit policy and vendor invoice data.
    /// </summary>
    [SubscribesTo(classstr(SysPolicySetup),delegatestr(SysPolicySetup,delegateLoadData))]
    static void loadData()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(LedgerBasic)))
        {
            LedgerBasicSysPolicySetup::loadAuditPolicyData();
            LedgerBasicSysPolicySetup::loadVendInvoicePolicyData();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>