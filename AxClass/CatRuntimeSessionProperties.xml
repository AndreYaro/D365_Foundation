<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatRuntimeSessionProperties</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CatRuntimeSessionProperties
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExternalCatalogRumtimeAttributes</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the values of the runtime attributes.
    /// </summary>
    /// <param name="_property">
    ///    The name of the property.
    /// </param>
    /// <returns>
    ///    A string value.
    /// </returns>
    public static str getExternalCatalogRumtimeAttributes(str _property)
    {
        str                                 propertyValue;
        DirPartyRecId                       partyId;
        HcmPersonnelNumberId                empId;
        DirPartyLocation                    partyLocation;
        LogisticsElectronicAddress          electronicAddress;
        CompanyInfo                         companyInfo;
        DirPersonUser                       user;
        HcmWorker                           worker;
        HcmEmployment                       hcmEmployment;
        HcmPositionDetail                   positionDetail;
        HcmPositionWorkerAssignment         positionWorkerAssignment;
        OMOperatingUnit                     operatingUnit;

        #CatExternalCatalog

        user = DirPersonUser::current();
        empId = HcmWorker::find(DirPersonUserEx::worker(user)).PersonnelNumber;
        partyId = user.PersonParty;

        switch (_property)
        {
            case #emailAliasPlaceHolder: //email alias
                select RecId, Locator from electronicAddress
                        where  electronicAddress.Type == LogisticsElectronicAddressMethodType::Email
                    join Party, Location from partyLocation
                        where partyLocation.Location == electronicAddress.Location
                            && partyLocation.Party == partyId &&
                            partyLocation.IsPrimary == NoYes::Yes &&
                            partyLocation.IsPostalAddress == NoYes::No;

                propertyValue = electronicAddress.Locator;
                break;

            case #employeePlaceHolder: //employee id
                propertyValue = empId;
                break;

            case #legalEntityPlaceHolder: //legal entity
                select RecId, DataArea from companyInfo
                    join LegalEntity, Worker from hcmEmployment
                        where hcmEmployment.LegalEntity == companyInfo.RecId
                    join RecId, Person from worker
                        where hcmEmployment.Worker == worker.RecId
                            && worker.Person == partyId;

                propertyValue = companyInfo.DataArea;
                break;

            case #organizationPlaceHolder: //organization id

                select Name, RecId from operatingUnit
                    join Department, Position from positionDetail
                        where operatingUnit.omOperatingUnitType == OMOperatingUnitType::OMDepartment
                            && operatingUnit.RecId == positionDetail.Department
                    join Position, Worker from positionWorkerAssignment
                        where positionWorkerAssignment.Position == positionDetail.Position
                    join RecId, Person from worker
                        where worker.Person == partyId
                            && worker.RecId == operatingUnit.HcmWorker;

                propertyValue = operatingUnit.Name;
                break;

            default:
                break;
        }

        return propertyValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>