<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQFormletterParmDataBulkSend</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchRFQFormletterParmDataBulkSend extends PurchRFQFormletterParmDataSend
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>queryName</Name>
				<Source><![CDATA[
    protected str queryName()
    {
        return queryStr(PurchRFQCaseBulkUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendChooseLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>PurchRFQParmTable</c> records for RFQ case sending process 
    /// </summary>
    protected void sendChooseLines()
    {        
        PurchRFQParmTable   localPurchRFQParmTable;
        PurchRFQCaseTable   localPurchRFQCaseTable;
        PurchRFQVendLink    localPurchRFQVendLink;
        TradeLineRefId      tableRefId = '';

        boolean             mayJournalBePosted  = false;
        boolean             purchRFQParmLinesExist;

        void createParmTable()
        {
            if (this.allowCreateParmTable())
            {
                localPurchRFQParmTable.clear();
                localPurchRFQParmTable.TableRefId = tableRefId;
                localPurchRFQParmTable.DeferLinesLoad = true;

                this.createParmTableFromRFQCaseTable(localPurchRFQParmTable,
                                      localPurchRFQCaseTable,
                                      localPurchRFQVendLink.VendAccount);

                this.allowCreateParmTable(this.parmAllowEmptyParmTable());
            }
        }

        ttsbegin;
        this.allowCreateParmTable(true);
        purchRFQParmLinesExist = this.existsParmLines();
            
        chooseLines.reset();    
        while (chooseLines.next())
        {
            progressTotal++;

            if (chooseLines.changed(tableNum(PurchRFQCaseTable)))
            {
                localPurchRFQCaseTable = chooseLines.get(tableNum(PurchRFQCaseTable));

                mayJournalBePosted = this.mayJournalBePosted(localPurchRFQCaseTable);
            }

            if (!mayJournalBePosted)
                    continue;

            if (!purchRFQParmLinesExist)
            {
                tableRefId = localPurchRFQParmTable.TableRefId;
                if (!tableRefId || chooseLines.changed(tableNum(PurchRFQVendLink)))
                {
                    tableRefId = formletterParmData::getNewTableRefId();
                }
                
                if (chooseLines.changed(tableNum(PurchRFQVendLink)))
                {
                    localPurchRFQVendLink  = chooseLines.get(tableNum(PurchRFQVendLink));
                    createParmTable();
                }
            }
        }

        ttscommit;

        purchRFQParmTable = localPurchRFQParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQueryBuild</Name>
				<Source><![CDATA[
    public void updateQueryBuild()
    {
        #Query

        this.initQueryBuild();
        chooseLines.query().interactive(showQueryForm);
        chooseLines.literals(#queryForcePlaceholders);
                
        if (!chooseLines.query().dataSourceTable(tableNum(PurchRFQCaseTable)).findRange(fieldNum(PurchRFQCaseTable, rfqCaseId)))
        {
            if (! this.parmDatasourceRecordsPacked())
            {
                chooseLines.query().dataSourceTable(tableNum(PurchRFQCaseTable)).addRange(fieldNum(PurchRFQCaseTable, rfqCaseId));

                if (purchRFQCaseTable)
                {
                    chooseLines.query().dataSourceTable(tableNum(PurchRFQCaseTable)).rangeField(fieldNum(PurchRFQCaseTable, rfqCaseId)).value(queryValue(purchRFQCaseTable.rfqCaseId));
                }
            }
            else
            {
                setPrefix("@SYS25781");

                this.updateQueryDocumentRanges(this.parmDatasourceRecordsPacked());
            }
        }    
    
        SysQuery::findOrCreateRange(chooseLines.query().dataSourceTable(tableNum(PurchRFQVendLink)), fieldNum(PurchRFQVendLink, VendAccount));
        chooseLines.query().dataSourceTable(tableNum(PurchRFQVendLink)).addSortField(fieldNum(PurchRFQVendLink, VendAccount));            
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PurchRFQFormletterParmDataBulkSend construct()
    {
        return new PurchRFQFormletterParmDataBulkSend();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>