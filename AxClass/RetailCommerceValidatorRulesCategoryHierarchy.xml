<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCommerceValidatorRulesCategoryHierarchy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailCommerceValidatorCategoryHierarchyRules</c> class validates all category hierarchy rules.
/// </summary>
public class RetailCommerceValidatorRulesCategoryHierarchy
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate entity type list.
    /// </summary>
    /// <returns>The map containing all entity types and their descriptions.</returns>
    public static Map getEntityType()
    {
        Map entityList = new Map(Types::String,Types::Container);

        entityList.insert("@Retail:RetailCommerceValidatorHierarachyTypeId", [RetailCommerceValidatorEntityFunction::Functional, tableNum(EcoResCategoryHierarchy), classStr(RetailCommerceValidatorRulesCategoryHierarchy)]);

        return entityList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRulesList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate rule list.
    /// </summary>
    /// <returns>The map containing all rules and rule related properties.</returns>
    public static Map getRulesList()
    {
        Map rulesList = new Map(Types::String,Types::Container);

        // Validate catgory hierarchy translation.
        rulesList.insert("@Retail:RetailCommerceValidatorHierarachyRu002", [
            "@Retail:RetailCommerceValidatorHierarachyTypeId",
            0,
            RetailCommerceValidatorResultStatus::Error,
            "@Retail:RetailCommerceValidatorHierarachyRu002Description",
            'validateCategoryHierarchyNavigationRoleMissing',
            formStr(EcoResCategoryhierarchylistpage),
            NoYes::Yes, // EntityPartitionRequired
            NoYes::No // AutomatedRunApplicable
        ]);

        return rulesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get number of entities of the Entity type for a given validation
    /// </summary>
    /// <param name = "_validationId">The validation Id.</param>
    /// <returns>The number of entities in scope for the validation.</returns>
    public static int64 getEntityCount(RetailCommerceValidatorId _validationId)
    {
        RetailCommerceValidatorWorkChannelCategoryHierarchies categoryHierarchy;
        select count(RecId) from categoryHierarchy where categoryHierarchy.ValidationId == _validationId;

        return categoryHierarchy.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCategoryHierarchyNavigationRoleMissing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rule --> Hierarchy-Ru-002: Category hierarchy navigation role validation.
    /// Validates Category hierarchy has navigation role or not.
    /// </summary>
    /// <param name = "_validatorTest"> The <c> RetailCommerceValidatorTests </c> table buffer.</param>
    /// <returns>A container consists of log status and count of errors.</returns>
    internal static container validateCategoryHierarchyNavigationRoleMissing(RetailCommerceValidatorTests _validatorTest)
    {
        RetailInternalOrganization  retailInternalOrganization;
        OMInternalOrganization  oMInternalOrganization;
        RetailCommerceValidator  retailCommerceValidator;
        EcoResCategoryHierarchyRole  ecoResCategoryHierarchyRole;
        int resultsCounter = 0;

        select CategoryHierarchy from retailInternalOrganization
            exists join oMInternalOrganization
                where oMInternalOrganization.RecId == retailInternalOrganization.InternalOrganization
            exists join retailCommerceValidator
                where retailCommerceValidator.OMOperatingUnitId == oMInternalOrganization.RecId &&
                    retailCommerceValidator.ValidationId == _validatorTest.ValidationId;

        RefRecId hierarchyAssignedToChannel = retailInternalOrganization.CategoryHierarchy;

        if (hierarchyAssignedToChannel)
        {
            select firstonly RecId from ecoResCategoryHierarchyRole
                where ecoResCategoryHierarchyRole.CategoryHierarchy == hierarchyAssignedToChannel
                    && ecoResCategoryHierarchyRole.NamedCategoryHierarchyRole == EcoResCategoryNamedHierarchyRole::RetailChannelNavigation;

            // Log an error if 'Retail channel navigation hierarchy role' is not assigned to category hierarchy.
            if (!ecoResCategoryHierarchyRole.RecId)
            {
                RetailCommerceValidatorLogContext logContext = RetailCommerceValidatorLogContext::findOrCreateContextCategoryHierarchy(_validatorTest.ValidationId, hierarchyAssignedToChannel);

                RetailCommerceValidatorLog::addLog(
                    logContext,
                    "@Retail:ValidationRuleCounterMetricId",
                    "@Retail:RetailCommerceValidatorHierarachyRu002Description",
                    _validatorTest.TestId,
                    "@Retail:RetailCommerceValidatorHierarachyRu002"
                    );

                resultsCounter++;
            }
        }

        return [resultsCounter];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>